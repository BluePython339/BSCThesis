sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_496a04
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x64
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_417330
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_430dd0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x164
call sub_401260
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40107f
push ebp
mov ebp esp
push 0xffffffff
push sub_496a41
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x164
call sub_480765
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x164
call sub_401380
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_430e03
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_417408
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_401109
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x44c
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x11c
push eax
push 0x403
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov esp ebp
pop ebp
retn 0x4
sub_40115e
push ebp
mov ebp esp
sub esp 0x40
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x40 ]
call sub_4786a4
push 0x3c
push 0x0
lea eax [ ebp - 0x3c ]
push eax
call sub_467a10
add esp 0xc
mov [ ebp - 0x3c ] 0xb4
mov [ ebp - 0x2c ] 0x2bc
mov [ ebp - 0x28 ] 0x1
push rw-data
lea ecx [ ebp - 0x20 ]
push ecx
call sub_467920
add esp 0x8
push 0x0
lea edx [ ebp - 0x3c ]
push edx
mov ecx [ ebp - 0x40 ]
add ecx 0x164
call sub_489de7
push 0x1
mov eax [ ebp - 0x40 ]
add eax 0x164
push eax
mov ecx [ ebp - 0x40 ]
add ecx 0x11c
call sub_431100
push 0xff
push 0xff00ff
push 0xff0000
mov ecx [ ebp - 0x40 ]
add ecx 0x5c
call sub_417889
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_401200
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40107f
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_401280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_428cd0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4012b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4012e0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4012e0
push ebp
mov ebp esp
push 0xffffffff
push sub_496a59
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_480765
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_401340
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_401350
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401380
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4013f0
push ebp
mov ebp esp
push 0xffffffff
push sub_496a94
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x10 ]
push eax
push 0xb8
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_4016f0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x9c ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xa0 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_401493
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3ef
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x98
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov esp ebp
pop ebp
retn 0x4
sub_4014e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_40d950
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ecx + 0xa0 ] 0x0
sete dl
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax 0x1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x9c ]
mov al [ edx ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x98
call sub_475426
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_401740
sub_401570
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
add ecx 0x98
call sub_4016b0
neg eax
sbb eax eax
inc eax
push eax
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_4015aa
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_47b0ce
push 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x98
call sub_4027d0
mov [ ebp - 0x4 ] al
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x9c ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov ecx [ ebp - 0x8 ]
call sub_478709
mov esp ebp
pop ebp
retn
sub_401600
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401630
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_401630
push ebp
mov ebp esp
push 0xffffffff
push sub_496ab5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a1c5
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4016b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4016d0
xor ecx ecx
cmp [ eax + 0x4 ] 0x0
sete cl
mov eax ecx
mov esp ebp
pop ebp
retn
sub_401710
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_48a1c5
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_401740
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
shr eax 0x10
and eax 0xffff
and eax 0xffff
push eax
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
push ecx
push 0xb1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x0
push 0xb7
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
sub_4017a0
push ebp
mov ebp esp
push 0xffffffff
push sub_496b47
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x108
mov [ ebp - 0x114 ] ecx
mov eax [ ebp + 0xc ]
push eax
push 0xac
mov ecx [ ebp - 0x114 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x114 ]
add ecx 0x5c
call sub_4028f0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x114 ]
add ecx 0x98
call sub_4016f0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x114 ]
add ecx 0xd4
call sub_4028f0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x114 ]
add ecx 0x110
call sub_4028f0
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x114 ]
add ecx 0x150
call sub_401690
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x114 ]
add ecx 0x154
call sub_401690
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x114 ]
add ecx 0x15c
call sub_401690
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x114 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x168 ] edx
mov eax [ ebp - 0x114 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x16c ] edx
mov eax [ ebp - 0x114 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0x14c ] 0xffffffff
push rw-data
mov ecx [ ebp - 0x114 ]
add ecx 0x150
call sub_47c7b1
push rw-data
mov ecx [ ebp - 0x114 ]
add ecx 0x154
call sub_47c7b1
mov edx [ ebp - 0x114 ]
mov [ edx + 0x158 ] 0x0
push rw-data
mov ecx [ ebp - 0x114 ]
add ecx 0x15c
call sub_47c7b1
mov eax [ ebp - 0x114 ]
mov [ eax + 0x160 ] 0x0
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0x164 ] 0xffffffff
lea edx [ ebp - 0x110 ]
push edx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x110 ]
push eax
mov ecx [ ebp - 0x114 ]
add ecx 0x154
call sub_47c7b1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x114 ]
add ecx 0x15c
call sub_47c761
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0x114 ]
mov eax [ ecx ]
mov [ edx + 0x158 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov eax [ ebp - 0x114 ]
mov ecx [ edx ]
mov [ eax + 0x160 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp - 0x114 ]
mov edx [ eax ]
mov [ ecx + 0x164 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x114 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_4019b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x449
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x98
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0xd4
push edx
push 0x403
mov eax [ ebp + 0x8 ]
push eax
call sub_483f62
mov ecx [ ebp - 0x4 ]
add ecx 0x110
push ecx
push 0x402
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x14c
push eax
push 0x3f8
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483e10
mov edx [ ebp - 0x4 ]
add edx 0x150
push edx
push 0x402
mov eax [ ebp + 0x8 ]
push eax
call sub_483ea1
mov ecx [ ebp - 0x4 ]
add ecx 0x154
push ecx
push 0x3ef
mov edx [ ebp + 0x8 ]
push edx
call sub_483d6c
mov eax [ ebp - 0x4 ]
add eax 0x158
push eax
push 0x3f3
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0x15c
push edx
push 0x403
mov eax [ ebp + 0x8 ]
push eax
call sub_483ea1
mov ecx [ ebp - 0x4 ]
add ecx 0x160
push ecx
push 0x3f7
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0x164
push eax
push 0x449
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f20
mov esp ebp
pop ebp
retn 0x4
sub_401ae2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14c ] 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_401b29
mov ecx [ ebp - 0x4 ]
call sub_401c2c
mov ecx [ ebp - 0x4 ]
call sub_40259e
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_401b29
push ebp
mov ebp esp
sub esp 0x64
mov [ ebp - 0x64 ] ecx
push 0x50
mov ecx [ ebp - 0x64 ]
add ecx 0x110
call sub_4029d0
mov ecx [ ebp - 0x64 ]
add ecx 0x110
call sub_402ad0
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x16c ]
call sub_41b1b0
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x5c ]
cmp edx [ ebp - 0x60 ]
jge r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0x64 ]
mov ecx [ ecx + 0x16c ]
call sub_402780
mov [ ebp - 0x58 ] eax
mov edx [ ebp - 0x58 ]
cmp [ edx + 0x54 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x64 ]
call sub_401d44
push 0x0
mov ecx [ ebp - 0x64 ]
add ecx 0x110
call sub_4029a0
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp - 0x64 ]
call sub_401c54
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x50 ]
mov [ ebp + edx - 0x54 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x5c ]
add ecx 0x1
mov [ ebp - 0x5c ] ecx
lea ecx [ ebp - 0x54 ]
push ecx
mov ecx [ ebp - 0x64 ]
add ecx 0x110
call sub_402aa0
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x5c ]
push ecx
mov ecx [ ebp - 0x64 ]
add ecx 0x110
call sub_402a70
jmp r-xdata
sub_401c2c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x15c
call sub_4027c0
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xd4
call sub_47bc7c
mov esp ebp
pop ebp
retn
sub_401c54
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xc ]
mov al [ edx ]
mov [ ebp - 0x4 ] al
mov ecx [ ebp - 0x4 ]
and ecx 0xff
sar ecx 0x4
mov [ ebp - 0x14 ] cl
mov edx [ ebp - 0x14 ]
and edx 0xff
cmp edx 0x9
jg r-xdata
mov cl [ ebp - 0x14 ]
add cl 0x37
mov [ ebp - 0x14 ] cl
mov al [ ebp - 0x14 ]
add al 0x30
mov [ ebp - 0x14 ] al
jmp r-xdata
mov dl [ ebp - 0x10 ]
add dl 0x37
mov [ ebp - 0x10 ] dl
mov cl [ ebp - 0x10 ]
add cl 0x30
mov [ ebp - 0x10 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0x14 ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
and edx 0xff
and edx 0xf
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x9
jg r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x20
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
sub_401d44
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x110
call sub_402a40
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14c ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x14c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x110
call sub_402970
mov [ ebp + 0x8 ] eax
push 0x0
push 0x3f8
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x1
push 0x3f9
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x1
push 0x3f8
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x0
push 0x3f9
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40259e
mov esp ebp
pop ebp
retn 0x4
sub_401e06
push ebp
mov ebp esp
push 0xffffffff
push sub_496b5a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x2c ] ecx
push 0x1
mov ecx [ ebp - 0x2c ]
call sub_47b0ce
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x2c ]
add ecx 0x150
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x14c ] 0x0
jne r-xdata
push 0xffffffff
push 0x0
push 0x3f6
call sub_4840fb
mov ecx [ ebp - 0x2c ]
add ecx 0x110
call sub_47be0f
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x150
call sub_4027c0
push eax
mov edx [ ebp - 0x2c ]
add edx 0x178
push edx
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x2c ]
add ecx 0x150
call sub_4027a0
cmp eax 0x50
jge r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x1c8
push ecx
mov edx [ ebp - 0x2c ]
add edx 0x150
push edx
mov eax [ ebp - 0x2c ]
add eax 0x178
push eax
mov ecx [ ebp - 0x2c ]
call sub_402273
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x30 ] 0x50
mov ecx [ ebp - 0x2c ]
add ecx 0x150
call sub_4027a0
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x1cc ] 0x0
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3f7
call sub_4840fb
push 0x402
mov ecx [ ebp - 0x2c ]
call sub_47bb2c
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_47be0f
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_402a00
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x1c8 ] ecx
mov edx [ ebp - 0x2c ]
mov [ edx + 0x1cc ] 0x1
mov ecx [ ebp - 0x2c ]
add ecx 0x110
call sub_402940
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x110
call sub_48a161
mov ecx [ ebp - 0x2c ]
add ecx 0x150
push ecx
lea edx [ ebp - 0x18 ]
push edx
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x110
call sub_402a40
mov edx [ ebp - 0x2c ]
cmp eax [ edx + 0x14c ]
jne r-xdata
jmp r-xdata
jmp r-xdata
push 0x58
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] edx
push 0x9
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x16c ]
call sub_402780
mov [ ebp - 0x24 ] eax
push 0x1
push 0x9
mov ecx [ ebp - 0x2c ]
mov ecx [ ecx + 0x16c ]
call sub_47763d
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x154
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
call sub_402534
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x3f4
call sub_4840fb
mov ecx [ ebp - 0x2c ]
add ecx 0x98
call sub_47be0f
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x1c8 ]
push ecx
mov edx [ ebp - 0x2c ]
add edx 0x178
push edx
mov eax [ ebp - 0x24 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x1c8 ]
mov [ ecx + 0x50 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x14c ]
mov [ ecx + 0x54 ] eax
push 0x1
mov ecx [ ebp - 0x24 ]
push ecx
push 0x0
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x16c ]
call sub_4776fb
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x2c ]
mov ecx [ ecx + 0x16c ]
call sub_402780
mov [ ebp - 0x20 ] eax
push 0x1
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x16c ]
call sub_47763d
push 0x1
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x16c ]
call sub_4776fb
mov ecx [ ebp - 0x2c ]
add ecx 0x15c
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x154 ]
push ecx
push 0x40a
lea edx [ ebp - 0x18 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
call sub_4840c3
mov ecx [ ebp - 0x2c ]
add ecx 0x98
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x2c ]
add ecx 0x98
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x154
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x15c
push eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x168 ]
mov ecx [ edx + 0x4 ]
call sub_47c761
mov eax [ ebp - 0x2c ]
add eax 0x154
push eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x168 ]
mov ecx [ edx + 0x8 ]
call sub_47c761
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x168 ]
mov edx [ ecx + 0xc ]
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x158 ]
mov [ edx ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x168 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x160 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x168 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x164 ]
mov [ eax ] edx
mov ecx [ ebp - 0x2c ]
call sub_478709
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
push 0xffffffff
push 0x0
push 0x409
call sub_4840fb
mov ecx [ ebp - 0x2c ]
add ecx 0xd4
call sub_47be0f
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
sub_402273
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
call sub_4027a0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_4027d0
mov [ ebp - 0xc ] al
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ ecx ] edx
mov eax 0x1
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x14 ]
mov dl [ ebp - 0x10 ]
mov [ ecx ] dl
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x30
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x20
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x20
jne r-xdata
mov al [ ebp - 0xc ]
or al 0x20
mov [ ebp - 0xc ] al
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x61
jl r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x39
jg r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x14 ]
mov dl [ ebp - 0x10 ]
mov [ ecx ] dl
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x30
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x66
jle r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
sub edx 0x30
mov [ ebp - 0x10 ] dl
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov esp ebp
pop ebp
retn 0xc
mov dl [ ebp - 0xc ]
or dl 0x20
mov [ ebp - 0xc ] dl
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x61
jl r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x39
jg r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
sub eax 0x57
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x66
jle r-xdata
mov dl [ ebp - 0x10 ]
shl dl 0x4
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0xc ]
and eax 0xff
sub eax 0x30
mov cl [ ebp - 0x10 ]
or cl al
mov [ ebp - 0x10 ] cl
jmp r-xdata
jmp r-xdata
mov dl [ ebp - 0x10 ]
shl dl 0x4
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0xc ]
and eax 0xff
sub eax 0x57
mov cl [ ebp - 0x10 ]
or cl al
mov [ ebp - 0x10 ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_402459
push ebp
mov ebp esp
push 0xffffffff
push sub_496b7c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20c
mov [ ebp - 0x210 ] ecx
push 0x0
push 0x0
push 0x6
push 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x208 ]
call sub_410fa0
mov [ ebp - 0x4 ] 0x0
push 0x1
mov ecx [ ebp - 0x210 ]
call sub_47b0ce
lea ecx [ ebp - 0x208 ]
call sub_4759f5
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x208 ]
call sub_4026e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x208 ]
call sub_4110a3
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x218 ]
push edx
mov ecx [ ebp - 0x210 ]
add ecx 0x154
call sub_47c761
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20c ]
call sub_47c674
push 0x0
mov ecx [ ebp - 0x210 ]
call sub_47b0ce
sub_402534
push ebp
mov ebp esp
sub esp 0x10c
mov [ ebp - 0x10c ] ecx
lea eax [ ebp - 0x108 ]
push eax
push 0x105
call [ GetCurrentDirectoryA@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetCurrentDirectoryA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x108 ]
push edx
call [ SetCurrentDirectoryA@IAT ]
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40259e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14c ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_4025be
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4025f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402620
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_402620
push ebp
mov ebp esp
push 0xffffffff
push sub_496bf0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x10 ]
add ecx 0x15c
call sub_47c674
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0x154
call sub_47c674
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x150
call sub_47c674
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_48a0bf
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_48a0bf
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_48a1c5
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a0bf
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4026e0
push ebp
mov ebp esp
push 0xffffffff
push sub_496c09
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x1f8
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_402730
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_402730
push ebp
mov ebp esp
push 0xffffffff
push sub_496c29
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xac
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_402b00
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_402810
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_402830
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_402850
push ebp
mov ebp esp
sub esp 0x8
call sub_47ccf5
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0x74 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_402890
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_4028c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0xf1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_402910
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_48a0bf
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_402940
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x146
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_402970
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x147
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_4029a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x14e
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_4029d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x141
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_402a00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
mov ecx [ ebp + 0xc ]
and ecx 0xffff
shl ecx 0x10
or eax ecx
push eax
push 0x0
push 0x142
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_402a40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x150
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_402a70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x151
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_402aa0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x143
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_402ad0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x14b
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_402b20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
push 0xaf
mov ecx [ ebp - 0x4 ]
call sub_478369
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x5c ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x60 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x64 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_402b90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5c ] 0x1
mov ecx [ ebp + 0xc ]
push ecx
push 0xaf
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x8
sub_402bb8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
push rw-data
push 0x424
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
push rw-data
push 0x448
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_402c02
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x64 ] 0x1
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
push rw-data
lea ecx [ ebp - 0x10 ]
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ ebp - 0x10 ]
push edx
push 0x448
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov edx [ ebp + 0x8 ]
push edx
push 0x424
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov [ eax + 0x64 ] 0x0
xor eax eax
sub_402c98
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_479428
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x60 ]
cmp [ ecx ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x60 ]
mov [ eax ] 0x0
sub_402cd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
push ecx
mov ecx [ ebp - 0x4 ]
call sub_478059
mov esp ebp
pop ebp
retn 0x8
sub_402d00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ SetCurrentDirectoryA@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x417
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1a8 ]
push ecx
call [ SendMessageA@IAT ]
xor eax eax
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
call sub_402d43
add esp 0x4
sub_402d43
push ebp
mov ebp esp
sub esp 0x158
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1ac ]
cmp [ ecx ] 0x0
jne r-xdata
push 0x105
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x154 ] eax
mov edx [ ebp - 0x154 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
push 0x105
call [ GetCurrentDirectoryA@IAT ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1b4 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x1b0 ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1b8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1ac ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x158 ] ecx
mov edx [ ebp - 0x158 ]
push edx
call sub_47c3de
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1ac ]
cmp [ edx ] 0x0
je r-xdata
lea edx [ ebp - 0x150 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
lea eax [ ebp - 0x150 ]
push eax
push rw-data
call [ FindFirstFileA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x150 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_402f55
add esp 0xc
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x150 ]
push edx
call sub_402f02
add esp 0x8
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
push edx
call [ FindClose@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1ac ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call [ FindClose@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1ac ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_402f55
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x150 ]
push edx
call sub_402f02
add esp 0x8
jmp r-xdata
lea ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
sub_402f02
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1ac ]
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
and eax 0x10
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx + 0x2c ]
cmp edx 0x2e
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0x2c
push eax
call [ SetCurrentDirectoryA@IAT ]
mov ecx [ ebp + 0xc ]
push ecx
call sub_402d43
add esp 0x4
push rw-data
call [ SetCurrentDirectoryA@IAT ]
sub_402f55
push ebp
mov ebp esp
push 0xffffffff
push sub_496c79
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xac
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x1ac ]
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
and eax 0x4
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
and eax 0x10
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx + 0x1bc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0xc ]
movsx edx [ ecx + 0x2c ]
cmp edx 0x2e
jne r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ ebp - 0x84 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx + eax - 0x1 ]
cmp edx 0x5c
jne r-xdata
mov eax [ ebp + 0xc ]
add eax 0x2c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push rw-data
lea edx [ ebp - 0x84 ]
push edx
call sub_475837
add esp 0x10
mov eax [ ebp + 0xc ]
add eax 0x2c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push rw-data
lea edx [ ebp - 0x84 ]
push edx
call sub_475837
add esp 0x10
jmp r-xdata
lea ecx [ ebp - 0x80 ]
call sub_47d921
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x64 ]
call sub_40da47
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x20 ] 0x64
mov ecx [ ebp - 0x20 ]
shl ecx 0xe
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x9c ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x34 ]
call sub_403680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x80 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_47c674
mov eax [ ebp - 0x9c ]
jmp r-xdata
lea ecx [ ebp - 0x80 ]
call sub_47d515
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x34 ]
call sub_4035b0
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x34 ]
push eax
push 0x40
lea ecx [ ebp - 0x84 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x80 ]
call sub_47d627
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x84 ]
call sub_4027c0
push eax
push 0x414
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x1a8 ]
push eax
call [ SendMessageA@IAT ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x80 ]
call sub_47d842
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0xb0 ] ecx
mov edx [ ebp - 0xb0 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x1ac ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x80 ]
call sub_47d744
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x48 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x6c ] 0x0
call sub_4036e0
mov [ ebp - 0x68 ] eax
lea ecx [ ebp - 0x70 ]
call sub_401690
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x64 ]
call sub_40db02
mov [ ebp - 0xb4 ] 0x1
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x64 ]
call sub_40daba
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x34 ]
call sub_403680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x80 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_47c674
mov eax [ ebp - 0xb4 ]
jmp r-xdata
mov ecx [ ebp - 0x8c ]
shr ecx 0xe
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x38 ]
mov [ ebp - 0xa4 ] edx
mov eax [ ebp - 0xa4 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
lea ecx [ ebp - 0x64 ]
call sub_40db02
mov [ ebp - 0xb8 ] 0x1
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x48 ]
call sub_41b22c
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x64 ]
call sub_40daba
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x34 ]
call sub_403680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x80 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_47c674
mov eax [ ebp - 0xb8 ]
push 0x0
mov edx [ ebp - 0x6c ]
push edx
push 0x0
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x104 ]
push edx
mov eax [ ebp + 0x10 ]
add eax 0x108
push eax
lea ecx [ ebp - 0x48 ]
call sub_41d2d5
test eax eax
jne r-xdata
mov eax [ ebp - 0x88 ]
cmp eax [ ebp - 0x90 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x84 ]
call sub_4027c0
push eax
push 0x415
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x1a8 ]
push eax
call [ SendMessageA@IAT ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x1c ]
add edx [ ecx + 0x104 ]
mov [ ebp - 0x6c ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8c ]
xor edx edx
mov ecx 0x4000
div ecx
test edx edx
je r-xdata
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xa8 ] eax
mov ecx [ ebp - 0xa8 ]
mov [ ebp - 0x94 ] ecx
push 0x4000
mov edx [ ebp - 0x88 ]
shl edx 0xe
mov eax [ ebp - 0x38 ]
add eax edx
push eax
mov ecx [ ebp - 0x94 ]
push ecx
call sub_467a70
add esp 0xc
push 0x4000
push 0x4000
mov edx [ ebp - 0x94 ]
push edx
lea ecx [ ebp - 0x64 ]
call sub_403430
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x1ac ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp - 0x8c ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xac ] eax
mov edx [ ebp - 0xac ]
mov [ ebp - 0x98 ] edx
mov eax [ ebp - 0x8c ]
xor edx edx
mov ecx 0x4000
div ecx
push edx
mov edx [ ebp - 0x88 ]
shl edx 0xe
mov eax [ ebp - 0x38 ]
add eax edx
push eax
mov ecx [ ebp - 0x98 ]
push ecx
call sub_467a70
add esp 0xc
mov eax [ ebp - 0x8c ]
xor edx edx
mov ecx 0x4000
div ecx
push edx
push 0x4000
mov edx [ ebp - 0x98 ]
push edx
lea ecx [ ebp - 0x64 ]
call sub_403430
mov edx [ ebp - 0x88 ]
add edx 0x1
mov [ ebp - 0x88 ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x1ac ]
cmp [ edx ] 0x0
je r-xdata
sub_403430
push ebp
mov ebp esp
push 0xffffffff
push sub_496c9b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x20 ] ecx
push 0x18
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_40d9c0
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp - 0x20 ]
mov [ edx + 0x18 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x20 ]
call sub_437690
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_403510
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_403530
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_403510
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_403530
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_403550
sub_403550
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x10 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x14 ] edx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] 0x0
sub_4035b0
push ebp
mov ebp esp
push 0xffffffff
push sub_496cc5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_47dfb8
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] ecx
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_403650
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403680
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_403680
push ebp
mov ebp esp
push 0xffffffff
push sub_496cd9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_403630
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4036f0
push ebp
mov ebp esp
push 0xffffffff
push sub_496d1d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_478919
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x40 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_47fbe7
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x58
call sub_405070
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_405070
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x10 ]
mov [ edx + 0x68 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x70 ] 0x0
push 0x0
push 0x80
mov ecx [ ebp - 0x10 ]
add ecx 0x74
call sub_404fb0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x7c ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x80 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x84 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x88
call sub_428cd0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x98 ] 0xffffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x9c ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xa0 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0xa4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xa8 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_403820
push ebp
mov ebp esp
push 0xffffffff
push sub_496d54
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x14 ]
add ecx 0x44
call sub_405110
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x54 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x44
call sub_405170
mov ecx [ ebp - 0x14 ]
add ecx 0x44
call sub_47fd06
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x58
call sub_480765
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x60
call sub_480765
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x68 ]
push ecx
call [ DeleteObject@IAT ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
add ecx 0x60
call sub_4050c0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
add ecx 0x58
call sub_4050c0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x44
call sub_47fd1c
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_4793ac
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x70 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_47c3de
add esp 0x4
sub_403930
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
and ecx 0x800000
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_479340
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
or ah 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2c ] eax
sub_403968
push ebp
mov ebp esp
push 0xffffffff
push sub_496d67
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x0
push 0x0
push 0x7f00
call sub_4036e0
mov ecx eax
call sub_405520
push eax
push 0x0
call sub_4799e0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c6e2
mov [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
call sub_479360
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
sub_4039fd
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b5f0
cmp eax 0xffffffff
jne r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x44
call sub_405140
push 0x1
push 0x1
mov ecx [ ebp - 0x8 ]
add ecx 0x44
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x58
call sub_4050e0
mov edx [ ebp - 0x8 ]
add edx 0x58
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x44
call sub_405170
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x54 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x98 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x44
call sub_405280
push 0x428
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x70 ] edx
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_403a91
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x80 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x88
push edx
mov ecx [ ebp - 0x4 ]
call sub_405410
mov ecx [ ebp - 0x4 ]
call sub_4046b6
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
mov esp ebp
pop ebp
retn 0xc
sub_403ae2
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x88
call sub_404fe0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] 0x1c
mov [ ebp - 0x1c ] 0x17
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x80 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x78 ]
add eax 0x10
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x78 ]
add edx 0x10
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
sub eax [ edx + 0x80 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x7c ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
sub ecx [ eax + 0x80 ]
add ecx 0x1
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x7c ] ecx
jge r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
sub edx [ ecx + 0x80 ]
add edx 0x1
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x7c ] edx
jge r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jge r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
sub ecx [ eax + 0x80 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x7c ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x7c ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x7c ]
mov [ ebp - 0xc ] eax
push 0x1
lea ecx [ ebp - 0x20 ]
push ecx
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_47a67d
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] edx
sub_403be3
push ebp
mov ebp esp
push 0xffffffff
push sub_496d83
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xd4
mov [ ebp - 0xd4 ] ecx
mov eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_4805ce
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x90 ]
call sub_428cd0
lea ecx [ ebp - 0x90 ]
push ecx
lea ecx [ ebp - 0x7c ]
call sub_4801e8
mov edx [ ebp - 0xd4 ]
mov eax [ edx + 0x98 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4807cb
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0xd4 ]
cmp [ ecx + 0x84 ] 0x0
jne r-xdata
cmp [ ebp - 0x90 ] 0x8
jge r-xdata
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_405210
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_405020
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7c ]
call sub_480640
jmp r-xdata
cmp [ ebp - 0x88 ] 0x88
jl r-xdata
mov ecx [ ebp - 0x90 ]
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x9c ] edx
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x98 ] eax
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x98 ] 0x8
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_405210
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xd4 ]
cmp [ ecx + 0x7c ] 0x8
jge r-xdata
mov ecx [ ebp - 0x90 ]
mov [ ebp - 0xb0 ] ecx
mov edx [ ebp - 0x8c ]
mov [ ebp - 0xac ] edx
mov eax [ ebp - 0x88 ]
mov [ ebp - 0xa8 ] eax
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0xb0 ] 0x88
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0xb0 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_405210
mov eax [ ebp - 0xd4 ]
mov ecx [ eax + 0x78 ]
add ecx 0x7
mov edx [ ebp - 0xd4 ]
sub ecx [ edx + 0x7c ]
mov [ ebp - 0x80 ] ecx
mov eax [ ebp - 0xd4 ]
mov ecx [ ebp - 0x80 ]
cmp ecx [ eax + 0x94 ]
jge r-xdata
mov edx [ ebp - 0xd4 ]
mov eax 0x8
sub eax [ edx + 0x7c ]
cmp [ ebp - 0x8c ] eax
jge r-xdata
cmp [ ebp - 0x88 ] 0x8
jl r-xdata
mov edx [ ebp - 0x84 ]
cmp edx [ ebp - 0x80 ]
jl r-xdata
mov ecx [ ebp - 0x90 ]
mov [ ebp - 0xc0 ] ecx
mov edx [ ebp - 0x8c ]
mov [ ebp - 0xbc ] edx
mov eax [ ebp - 0x88 ]
mov [ ebp - 0xb8 ] eax
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0xb4 ] ecx
mov edx [ ebp - 0xd4 ]
mov eax 0x8
sub eax [ edx + 0x7c ]
mov [ ebp - 0xb4 ] eax
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0xc0 ]
push edx
lea ecx [ ebp - 0x7c ]
call sub_405210
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_405020
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7c ]
call sub_480640
jmp r-xdata
cmp [ ebp - 0x90 ] 0x88
jle r-xdata
mov eax [ ebp - 0x90 ]
mov [ ebp - 0xd0 ] eax
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0xcc ] ecx
mov edx [ ebp - 0x88 ]
mov [ ebp - 0xc8 ] edx
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xc4 ] eax
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0xcc ] ecx
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_405210
mov ecx [ ebp - 0xd4 ]
mov edx [ ecx + 0x78 ]
add edx 0x8
mov eax [ ebp - 0xd4 ]
sub edx [ eax + 0x7c ]
cmp [ ebp - 0x8c ] edx
jle r-xdata
cmp [ ebp - 0x90 ] 0x8
jge r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_405020
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7c ]
call sub_480640
jmp r-xdata
mov ecx [ ebp - 0x90 ]
mov [ ebp - 0xd8 ] ecx
mov [ ebp - 0xd8 ] 0x8
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0xd4 ]
mov edx 0x8
sub edx [ ecx + 0x7c ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x8c ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
mov edx [ ebp - 0xd8 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xd4 ]
cmp [ eax + 0x7c ] 0x8
jge r-xdata
mov edx [ ebp - 0x88 ]
mov [ ebp - 0xdc ] edx
mov [ ebp - 0xdc ] 0x88
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0x8c ]
sub ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0xe0 ] ecx
mov ecx [ ebp - 0xd4 ]
mov edx [ ecx + 0x78 ]
add edx 0x8
mov eax [ ebp - 0xd4 ]
sub edx [ eax + 0x7c ]
mov [ ebp - 0xe0 ] edx
jmp r-xdata
mov eax [ ebp - 0xdc ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xd4 ]
mov edx [ ecx + 0x78 ]
add edx 0x8
mov eax [ ebp - 0xd4 ]
sub edx [ eax + 0x7c ]
cmp edx [ ebp - 0x84 ]
jge r-xdata
cmp [ ebp - 0x88 ] 0x88
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0xe0 ]
sub edx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
push 0xcc0020
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x1c ]
sub ecx 0x8
push ecx
mov edx [ ebp - 0xd4 ]
add edx 0x44
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_405240
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_405020
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7c ]
call sub_480640
sub_40400d
push ebp
mov ebp esp
push 0xffffffff
push sub_496d96
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x64
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x78 ]
add edx 0x10
mov eax [ ebp - 0x58 ]
sub edx [ eax + 0x80 ]
mov [ ebp - 0x30 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x5c ] ecx
cmp [ ebp - 0x5c ] 0x7
ja r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x5c ]
jmp [ edx * 4 + jump_table_40424b ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x7c ]
neg ecx
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x30 ]
sub eax [ edx + 0x7c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffff8
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x80 ]
neg edx
cmp edx 0xffffffff
jle r-xdata
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x80 ] 0x1
jge r-xdata
mov [ ebp - 0x2c ] 0x1c
push 0x17
lea ecx [ ebp - 0x2c ]
push ecx
push 0x1
mov ecx [ ebp - 0x58 ]
call sub_47a6ca
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x14 ]
sub eax [ edx + 0x7c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x30 ]
sub edx [ ecx + 0x7c ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x80 ]
neg ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x60 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x80 ]
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x64 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x30 ]
sub edx [ ecx + 0x7c ]
mov [ ebp - 0x68 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x68 ] eax
jmp r-xdata
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x30 ]
sub edx [ ecx + 0x7c ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x7c ]
neg eax
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x7c ]
neg ecx
cmp ecx [ ebp - 0x68 ]
jle r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x30 ]
sub edx [ ecx + 0x7c ]
mov [ ebp - 0x70 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x58 ]
call sub_47af5c
mov edx [ ebp - 0x58 ]
push edx
lea ecx [ ebp - 0x54 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x7c ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x58 ]
mov [ edx + 0x7c ] ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x58 ]
call sub_404a68
mov ecx [ ebp - 0x58 ]
call sub_403ae2
mov eax [ ebp - 0x58 ]
add eax 0x88
mov ecx [ eax ]
mov [ ebp - 0x40 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x3c ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x38 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x34 ] edx
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x40 ]
push ecx
mov edx [ ebp - 0x10 ]
imul edx edx 0xffffffff
push edx
push 0x0
mov ecx [ ebp - 0x58 ]
call sub_47a75e
mov ecx [ ebp - 0x58 ]
call sub_405430
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x54 ]
call sub_4804d8
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x6c ] eax
sub_40426b
push ebp
mov ebp esp
push 0xffffffff
push sub_496da9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_404480
test eax eax
jne r-xdata
call sub_402850
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x14 ]
push edx
push rw-data
lea eax [ ebp - 0x18 ]
push eax
call sub_475837
add esp 0xc
push 0x3
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x10 ]
call sub_428388
push 0x0
mov ecx [ ebp - 0x14 ]
push ecx
push 0x419
mov ecx [ ebp - 0x10 ]
call sub_402890
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_405500
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_404324
push ebp
mov ebp esp
push 0xffffffff
push sub_496dbc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x14 ] 0x1
mov eax [ ebp - 0x24 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xa4 ] 0x0
mov ecx [ ebp - 0x24 ]
call sub_4054c0
mov edx [ ebp - 0x24 ]
cmp [ edx + 0xa4 ] 0x0
je r-xdata
call sub_4054a0
cmp eax [ ebp - 0x24 ]
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0xa0 ] 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0x88
call sub_405000
test eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xa0 ] 0x0
jmp r-xdata
push 0x2
push 0x0
call sub_402850
mov ecx eax
call sub_428388
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_404480
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov [ eax + 0xa0 ] 0x0
call [ ReleaseCapture@IAT ]
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
push eax
push rw-data
lea ecx [ ebp - 0x18 ]
push ecx
call sub_475837
add esp 0xc
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
call sub_402850
mov ecx eax
call sub_428388
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_405500
sub_404480
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x8
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x88
jl r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x7c ] 0x8
jge r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x78 ]
add ecx 0x8
mov edx [ ebp - 0x14 ]
sub ecx [ edx + 0x7c ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x94 ]
jg r-xdata
mov eax [ ebp - 0x14 ]
mov ecx 0x8
sub ecx [ eax + 0x7c ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] ecx
jge r-xdata
lea ecx [ ebp - 0x10 ]
call sub_428cd0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
sub edx 0x8
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x7c ]
lea ecx [ ecx + eax - 0x8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x7
add edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x3c ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
sub_404566
push ebp
mov ebp esp
push 0xffffffff
push sub_496dcf
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x18 ]
call sub_4052e0
mov [ ebp - 0x4 ] 0x0
push 0xbc
lea ecx [ ebp - 0x18 ]
call sub_4053d0
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4053a0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
jmp r-xdata
push 0x0
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
push 0x8
mov ecx [ ebp - 0x10 ]
call sub_479810
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_404610
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x40 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7c ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x98 ] 0xffffff
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x58
call sub_45ee80
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x44
call sub_4051d0
mov ecx [ ebp - 0x4 ]
call sub_403ae2
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x40 ]
call sub_404f40
mov edx [ ebp - 0x4 ]
mov [ edx + 0x98 ] eax
mov ecx [ ebp - 0x4 ]
call sub_4046b6
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
sub_4046b6
push ebp
mov ebp esp
push 0xffffffff
push sub_496de2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x428
mov [ ebp - 0x434 ] ecx
mov eax [ ebp - 0x434 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov ecx [ ebp - 0x434 ]
cmp [ ecx + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x434 ]
mov [ edx + 0x84 ] 0x0
mov eax [ ebp - 0x434 ]
mov ecx [ eax + 0x40 ]
call sub_404f70
mov ecx [ ebp - 0x434 ]
mov [ ecx + 0x3c ] eax
mov edx [ ebp - 0x434 ]
mov [ edx + 0x74 ] 0x80
mov eax [ ebp - 0x434 ]
mov ecx [ eax + 0x3c ]
shr ecx 0x7
mov edx [ ebp - 0x434 ]
mov [ edx + 0x78 ] ecx
mov eax [ ebp - 0x434 ]
mov ecx [ ebp - 0x434 ]
mov eax [ eax + 0x3c ]
xor edx edx
div [ ecx + 0x74 ]
test edx edx
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x434 ]
call sub_403ae2
mov edx [ ebp - 0x434 ]
mov eax [ edx + 0x70 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ecx ] 0x28
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x434 ]
mov ecx [ eax + 0x74 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x434 ]
mov eax [ edx + 0x80 ]
neg eax
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x10 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0xe ] 0x8
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + 0x4 ]
imul ecx [ eax + 0x8 ]
imul ecx ecx 0xffffffff
mov edx [ ebp - 0x10 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x20 ] 0x100
mov eax [ ebp - 0x10 ]
mov [ eax + 0x24 ] 0x100
lea ecx [ ebp - 0x428 ]
push ecx
mov edx [ ebp - 0x434 ]
mov ecx [ edx + 0x40 ]
call sub_436640
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x434 ]
mov eax [ edx + 0x78 ]
add eax 0x1
mov ecx [ ebp - 0x434 ]
mov [ ecx + 0x78 ] eax
cmp [ ebp - 0x28 ] 0x100
jge r-xdata
mov edx [ ebp - 0x434 ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp + ecx * 4 - 0x428 ]
shr edx 0x10
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 4 + 0x28 ] dl
mov edx [ ebp - 0x28 ]
xor eax eax
mov ax [ ebp + edx * 4 - 0x428 ]
sar eax 0x8
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 + 0x29 ] al
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov dl [ ebp + edx * 4 - 0x428 ]
mov [ ecx + eax * 4 + 0x2a ] dl
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 4 + 0x2b ] 0x0
jmp r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x434 ]
add edx 0x6c
push edx
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x434 ]
add ecx 0x44
call sub_405110
push eax
call [ CreateDIBSection@IAT ]
mov ecx [ ebp - 0x434 ]
mov [ ecx + 0x68 ] eax
mov edx [ ebp - 0x434 ]
cmp [ edx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebp - 0x434 ]
mov ecx [ eax + 0x68 ]
push ecx
call [ DeleteObject@IAT ]
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
push 0x0
call [ GetDC@IAT ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x20 ]
call sub_47fbe7
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_47fc9e
mov ecx [ ebp - 0x434 ]
cmp [ ecx + 0x64 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
imul edx edx 0xffffffff
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x434 ]
add ecx 0x60
call sub_4050e0
test eax eax
jne r-xdata
mov edx [ ebp - 0x434 ]
mov eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x434 ]
add ecx 0x44
call sub_405170
mov ecx [ ebp - 0x434 ]
add ecx 0x60
call sub_480765
mov ecx [ ebp - 0x434 ]
add ecx 0x60
push ecx
mov ecx [ ebp - 0x434 ]
add ecx 0x44
call sub_405170
push 0x0
push 0x0
mov ecx [ ebp - 0x434 ]
call sub_404a68
lea ecx [ ebp - 0x20 ]
call sub_47fcd5
mov edx [ ebp - 0x24 ]
push edx
push 0x0
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x434 ]
mov [ eax + 0x84 ] 0x1
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_47fd1c
mov eax [ ebp - 0x430 ]
push 0xffffffff
push 0x0
push 0x41a
call sub_4840fb
lea ecx [ ebp - 0x20 ]
call sub_47fcd5
mov eax [ ebp - 0x24 ]
push eax
push 0x0
call [ ReleaseDC@IAT ]
mov ecx [ ebp - 0x434 ]
mov [ ecx + 0x74 ] 0x0
mov edx [ ebp - 0x434 ]
mov [ edx + 0x78 ] 0x0
mov eax [ ebp - 0x434 ]
add eax 0x58
push eax
mov ecx [ ebp - 0x434 ]
add ecx 0x44
call sub_405170
mov [ ebp - 0x42c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_47fd1c
mov eax [ ebp - 0x42c ]
jmp r-xdata
sub_404a68
push ebp
mov ebp esp
push 0xffffffff
push sub_496dfe
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
mov [ ebp - 0x78 ] ecx
mov eax [ ebp - 0x78 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x9c ] 0x1
mov edx [ ebp - 0x78 ]
mov eax [ edx + 0x70 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x8 ]
imul ecx ecx 0xffffffff
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
imul edx [ ebp - 0x10 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x40 ]
call sub_404f90
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x38 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x78 ]
cmp [ edx + 0x7c ] 0x8
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x7c ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax - 0x8 ]
imul ecx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0xc ]
imul eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
push 0x0
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x6c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
push 0x0
push 0x0
mov ecx [ ebp - 0x78 ]
add ecx 0x44
call sub_405110
push eax
call [ SetDIBitsToDevice@IAT ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x24 ]
je r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
push 0x0
push 0x0
mov edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x38 ]
call sub_41b237
mov eax [ ebp + 0xc ]
imul eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x6c ]
add edx eax
push edx
mov eax [ ebp + 0xc ]
imul eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x40 ]
sub ecx eax
push ecx
lea ecx [ ebp - 0x38 ]
call sub_41b7fb
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cdq
idiv [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
cdq
idiv [ ebp - 0x10 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x78 ]
cmp edx [ eax + 0x3c ]
jne r-xdata
lea ecx [ ebp - 0x58 ]
call sub_428cd0
mov [ ebp - 0x58 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x50 ] ecx
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x98 ]
push edx
lea ecx [ ebp - 0x48 ]
call sub_4807cb
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x58 ]
push ecx
mov ecx [ ebp - 0x78 ]
add ecx 0x44
call sub_405210
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
call sub_405020
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx + 0x3c ]
xor edx edx
div [ ebp - 0x10 ]
mov [ ebp - 0x5c ] edx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x78 ]
mov [ eax + 0x9c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_41b22c
mov eax [ ebp - 0x78 ]
add eax 0x88
mov ecx [ eax ]
mov [ ebp - 0x74 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x70 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x6c ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x68 ] edx
mov eax [ ebp - 0x78 ]
cmp [ eax + 0x7c ] 0x8
jge r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
lea ecx [ eax + edx - 0x1 ]
mov [ ebp - 0x60 ] ecx
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x64 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x70 ] eax
mov ecx [ ebp - 0x78 ]
mov edx 0x8
sub edx [ ecx + 0x7c ]
add edx [ ebp + 0xc ]
mov [ ebp - 0x70 ] edx
jmp r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x70 ]
add ecx [ ebp - 0x24 ]
mov [ ebp - 0x68 ] ecx
push 0x1
lea edx [ ebp - 0x74 ]
push edx
mov ecx [ ebp - 0x78 ]
call sub_405470
mov edx [ ebp - 0x78 ]
mov eax [ edx + 0x98 ]
push eax
mov ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
mov ecx [ ebp - 0x78 ]
add ecx 0x44
call sub_4052b0
jmp r-xdata
mov eax [ ebp - 0x64 ]
add eax 0x1
mov [ ebp - 0x64 ] eax
sub_404cf6
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0xc ]
shr eax 0x7
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x7c ]
sub edx 0x8
test edx edx
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x7c ]
sub ecx 0x8
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax 0x8
sub eax [ edx + 0x7c ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x1c ]
mov ecx 0x8
sub ecx [ eax + 0x7c ]
test ecx ecx
jge r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
lea edx [ ecx + eax - 0x1 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0xc ]
shr eax 0x7
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov ecx 0x80
div ecx
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x40 ]
call sub_404f70
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x3c ] eax
mov edx [ ebp - 0x1c ]
mov [ edx + 0x74 ] 0x80
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
mov eax [ eax + 0x3c ]
xor edx edx
div [ ecx + 0x74 ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x78 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
mov eax [ eax + 0x3c ]
xor edx edx
div [ ecx + 0x74 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
add edx [ ecx + 0x80 ]
sub edx [ ebp - 0x24 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x1c ]
call sub_403ae2
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x4 ]
jle r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x78 ]
add eax 0x1
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x78 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jle r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x7c ]
sub eax 0x8
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x7c ]
sub ecx 0x8
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x7c ]
sub edx 0x8
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x7c ]
sub eax 0x8
test eax eax
jge r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_404a68
jmp r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
push ecx
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_404a68
sub_404ec4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x80eb
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_404ee7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x80ec
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_404f10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_403820
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_404f40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x334 ]
cmp [ ecx + 0x5c ] 0x0
je r-xdata
mov eax 0xffffff
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x334 ]
mov eax [ eax + 0x30 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_404fb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_405000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ PtInRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_405040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405020
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_405090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4050c0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4050e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push eax
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_48070e
mov esp ebp
pop ebp
retn 0xc
sub_405110
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_405140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_405110
push eax
call [ CreateCompatibleDC@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47fc9e
mov esp ebp
pop ebp
retn 0x4
sub_405170
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_4051a0
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_47fddf
mov esp ebp
pop ebp
retn 0x4
sub_4051a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4051d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ SelectObject@IAT ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_405210
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
call sub_4051a0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ FillRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_405240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov ecx [ ebp + 0x18 ]
call sub_405110
push eax
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ BitBlt@IAT ]
mov esp ebp
pop ebp
retn 0x20
sub_405280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ SetPixel@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_4052b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ SetPixelV@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_4052e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_428cd0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405310
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405340
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_405340
push ebp
mov ebp esp
push 0xffffffff
push sub_496e19
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_47e4db
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_401340
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4053a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ GetSubMenu@IAT ]
push eax
call sub_47e451
mov esp ebp
pop ebp
retn 0x4
sub_4053d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
push eax
call sub_405400
push eax
call [ LoadMenuA@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47e484
mov esp ebp
pop ebp
retn 0x4
sub_405410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ GetClientRect@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_405450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ InvalidateRect@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_405470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ InvalidateRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_4054c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SetCapture@IAT ]
push eax
call sub_478d3a
mov esp ebp
pop ebp
retn
sub_405540
push ebp
mov ebp esp
push 0xffffffff
push sub_496e3a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0xc8
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_4055c7
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4055c7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_48a74e
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40560f
push ebp
mov ebp esp
sub esp 0x2fc
mov [ ebp - 0x2fc ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] 0x50cf8000
mov [ ebp - 0x2f8 ] 0x24
push 0x0
lea ecx [ ebp - 0x2f8 ]
push ecx
push 0x400
call sub_402850
mov ecx eax
call sub_402890
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x2fc ]
call sub_4056c4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x14
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xa0 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
mov ecx [ ebp - 0x2fc ]
call sub_405807
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x2fc ]
call sub_48a878
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
or eax 0x11000000
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp - 0x2fc ]
mov [ edx + 0xc4 ] 0x1
sub_4056c4
push ebp
mov ebp esp
push 0xffffffff
push sub_496e4d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x28 ] ecx
call sub_4036e0
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0xc4
call sub_4027c0
push eax
mov ecx [ ebp - 0x28 ]
call sub_4057a2
mov ecx [ ebp + 0x8 ]
call sub_41b1b0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402780
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402780
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_4057a2
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call [ CharNextA@IAT ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
cmp edx 0x2e
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
push ecx
mov ecx [ ebp + 0xc ]
call sub_47c7b1
mov ecx [ ebp + 0xc ]
call sub_47cb4a
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
sub_405807
push ebp
mov ebp esp
push 0xffffffff
push sub_496e6f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xbc
push esi
mov [ ebp - 0xc4 ] ecx
lea ecx [ ebp - 0x94 ]
call sub_401260
mov [ ebp - 0x4 ] 0x0
push 0x3c
push 0x0
lea eax [ ebp - 0x50 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x58 ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x5c ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x60 ]
mov [ ebp - 0x3c ] al
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x64 ]
mov [ ebp - 0x39 ] dl
mov eax [ ebp + 0x8 ]
add eax 0x68
push eax
lea ecx [ ebp - 0x34 ]
push ecx
call [ lstrcpyA@IAT ]
lea edx [ ebp - 0x50 ]
push edx
lea ecx [ ebp - 0x94 ]
call sub_405d10
push 0x0
call [ GetDC@IAT ]
mov [ ebp - 0xac ] eax
lea ecx [ ebp - 0xa8 ]
call sub_47fbe7
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_47fc9e
lea ecx [ ebp - 0x94 ]
push ecx
lea ecx [ ebp - 0xa8 ]
call sub_47fe32
mov [ ebp - 0x8c ] eax
lea edx [ ebp - 0x88 ]
push edx
lea ecx [ ebp - 0xa8 ]
call sub_405d30
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x98 ] ecx
mov edx [ ebp - 0x8c ]
push edx
lea ecx [ ebp - 0xa8 ]
call sub_47fe32
call sub_402850
mov ecx eax
call sub_405da0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0xb0 ] 0x7fffffff
lea ecx [ ebp - 0xc0 ]
call sub_428cd0
lea eax [ ebp - 0xc0 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_405410
lea ecx [ ebp - 0xc0 ]
call sub_405cf0
mov [ ebp - 0xb0 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea edx [ ecx * 4 + 0xf ]
mov esi [ ebp - 0x14 ]
imul esi edx
push 0x20
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax * 2 ]
push 0x5
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax * 4 ]
push 0x2
call [ GetSystemMetrics@IAT ]
add esi eax
mov [ ebp - 0xc8 ] esi
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea edx [ ecx * 4 + 0xf ]
mov esi [ ebp - 0x14 ]
imul esi edx
push 0x20
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax * 2 ]
push 0x5
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax * 4 ]
push 0x2
call [ GetSystemMetrics@IAT ]
add esi eax
cmp [ ebp - 0xb0 ] esi
jge r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc8 ]
mov [ eax ] ecx
lea ecx [ ebp - 0xa8 ]
call sub_47fcd5
mov edx [ ebp - 0xac ]
push edx
push 0x0
call [ ReleaseDC@IAT ]
lea ecx [ ebp - 0x94 ]
call sub_480765
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xa8 ]
call sub_47fd1c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x94 ]
call sub_401380
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_405a39
push ebp
mov ebp esp
sub esp 0x2f8
mov [ ebp - 0x2f8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x2f8 ]
call sub_48b096
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2f4 ] 0x24
push 0x0
lea ecx [ ebp - 0x2f4 ]
push ecx
push 0x400
call sub_402850
mov ecx eax
call sub_402890
cmp [ ebp - 0x68 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x2f8 ]
call sub_47a448
mov ecx eax
call sub_405d80
mov esp ebp
pop ebp
retn 0x4
sub_405aa5
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_48af11
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_48c57e
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0xbc ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0xc
push r--data
mov ecx [ ebp - 0x4 ]
call sub_47e4fa
test eax eax
je r-xdata
jmp r-xdata
push 0x0
push 0x2
push 0x41a
call sub_402850
mov ecx eax
call sub_405d50
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_45d263
sub_405b29
push ebp
mov ebp esp
push 0xffffffff
push sub_496e82
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x20 ]
call sub_48c57e
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
call sub_48bea3
push 0x0
push 0x3
push 0x41a
call sub_402850
mov ecx eax
call sub_405d50
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push r--data
mov ecx [ ebp - 0x10 ]
call sub_47e4fa
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_405c80
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x1c ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_405ca0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
call sub_4036e0
mov ecx eax
call sub_432cf8
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
sub_405bea
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x30 ]
cmp [ eax + 0xc4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x30 ]
call sub_48acaf
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x30 ]
call sub_479730
mov [ ebp - 0x24 ] 0x3
lea edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_479747
sub_405c30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4055f3
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_405ca0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x118 ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x114 ]
mov esp ebp
pop ebp
retn
sub_405d10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call [ CreateFontIndirectA@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_48070e
mov esp ebp
pop ebp
retn 0x4
sub_405d30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ GetTextMetricsA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_405d50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ PostMessageA@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_405da0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ GetTopWindow@IAT ]
push eax
call sub_478d3a
mov esp ebp
pop ebp
retn
sub_405de0
push ebp
mov ebp esp
push 0xffffffff
push sub_496e99
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x18 ]
push eax
push 0xca
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_430630
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x160 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x164 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x168 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx + 0x16c ] edx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
sub_405e9d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_405edc
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_430cfc
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_430d5d
xor eax eax
mov esp ebp
pop ebp
retn
sub_405edc
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x16c ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x168 ]
push eax
push 0x0
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x160 ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_43081a
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x5c ]
call [ eax + 0xd0 ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_428cd0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_4061a0
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea edx [ ebp - 0x10 ]
push edx
push 0x46a
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov ecx eax
call sub_4061a0
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x20 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_406140
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_4803ee
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_406130
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_406160
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_405f9f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_430b1c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x16c
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x168
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_430cd3
mov ecx [ ebp - 0x4 ]
call sub_478709
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_405feb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x168 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x16c ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
sub_406020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406050
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_406050
push ebp
mov ebp esp
push 0xffffffff
push sub_496eb9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_4060a0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4060a0
push ebp
mov ebp esp
push 0xffffffff
push sub_496f03
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0xf0
call sub_47c674
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_47c674
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_416fa3
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_406140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ OffsetRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_406160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0xc ]
sub eax [ edx + 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
sub eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_47bd16
mov esp ebp
pop ebp
retn 0x8
sub_4061a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ GetWindowRect@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_4061c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4066f0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] 0xffffff
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406230
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x40 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
mov esp ebp
pop ebp
retn 0x4
sub_406261
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x3c ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
mov esp ebp
pop ebp
retn 0x4
sub_406281
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
push ecx
call sub_47fc89
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
and eax 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov dx [ ecx + 0x3c ]
mov [ ebp - 0xc ] dx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
and ecx 0x4
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
and eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x1
test edx edx
je r-xdata
mov [ ebp - 0xc ] 0xffff
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x4
test edx edx
je r-xdata
mov ax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_406396
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x1c
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4063fa
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4063fa
call sub_47e83d
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x3c ] 0x0
jne r-xdata
mov ax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_406396
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4063fa
sub_406396
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
movsx eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
push 0x4010
push 0x4
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_406680
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0xc
push 0x10
push 0x4
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_406680
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
je r-xdata
push 0x210
push 0x4
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_406680
jmp r-xdata
sub_4063fa
push ebp
mov ebp esp
push 0xffffffff
push sub_496f19
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x30 ] ecx
lea ecx [ ebp - 0x1c ]
call sub_428cd0
lea ecx [ ebp - 0x2c ]
call sub_406640
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x40 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_406660
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_406620
push 0x2d
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0x20 ] eax
push 0x2e
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_4065f0
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_405210
lea ecx [ ebp - 0x2c ]
call sub_480765
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_405020
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_4065f0
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4066b0
sub_4064c9
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_47bcd2
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
call sub_4066d0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0xc ]
ja r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
cmp ecx [ ebp - 0x10 ]
sete dl
push edx
mov ecx [ ebp - 0x8 ]
call sub_406261
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_40652c
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x44 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_4054c0
mov ecx [ ebp - 0x8 ]
call sub_47be0f
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call [ ReleaseCapture@IAT ]
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov [ ecx + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_405500
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_47be0f
mov esp ebp
pop ebp
retn 0xc
sub_4065c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4061f3
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4065f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
neg eax
push eax
mov ecx [ ebp + 0x8 ]
neg ecx
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ InflateRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_406660
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call [ CreateSolidBrush@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_48070e
mov esp ebp
pop ebp
retn 0x4
sub_406680
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ DrawFrameControl@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_4066b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ DrawFocusRect@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_4066d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ GetParent@IAT ]
push eax
call sub_478d3a
mov esp ebp
pop ebp
retn
sub_406710
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_489edf
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40678b
push ebp
mov ebp esp
push 0xffffffff
push sub_496f42
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov [ ebp - 0x54 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
push ecx
call sub_47fc89
mov [ ebp - 0x20 ] eax
mov edx [ ebp + 0x8 ]
add edx 0x1c
push edx
lea ecx [ ebp - 0x1c ]
call sub_406be0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x4
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x1
test ecx ecx
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_4066b0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x38 ] eax
push 0x3
push 0x3
lea ecx [ ebp - 0x1c ]
call sub_4065f0
lea ecx [ ebp - 0x28 ]
call sub_406640
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_406660
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_405210
lea ecx [ ebp - 0x28 ]
call sub_480765
lea ecx [ ebp - 0x30 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x20 ]
call [ eax + 0x30 ]
mov [ ebp - 0x2c ] eax
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_47fea7
mov [ ebp - 0x34 ] eax
lea ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x54 ]
call sub_48a161
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x50 ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_406c30
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] edx
push 0x0
lea ecx [ ebp - 0x30 ]
call sub_4027a0
push eax
lea ecx [ ebp - 0x30 ]
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
add eax 0x1c
push eax
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_404fe0
sub eax [ ebp - 0x44 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x18 ]
add ecx eax
push ecx
mov edx [ ebp - 0x1c ]
add edx 0x2
push edx
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
mov ecx [ ebp - 0x20 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_47fea7
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x20 ]
call [ eax + 0x30 ]
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_406660
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_406c00
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_405020
push 0x0
push 0x0
push rw-data
lea edx [ ebp - 0x1c ]
push edx
push 0x2
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
mov ecx [ ebp - 0x20 ]
call [ edx + 0x60 ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_4066b0
jmp r-xdata
sub_406999
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_402aa0
mov [ ebp - 0x4 ] eax
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_402a70
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_4069ee
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_406cb0
mov [ ebp + 0x8 ] eax
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_402a70
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x10
sub_406a47
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_402a40
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_406c80
mov esp ebp
pop ebp
retn 0x4
sub_406a83
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_402970
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_402a40
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_406ab1
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_402940
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_402a40
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_4029a0
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_406b34
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_402940
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_402a40
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_406bb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40675f
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_406be0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ CopyRect@IAT ]
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_406c00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
call sub_4051a0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ FrameRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_406c30
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_4027a0
push eax
mov ecx [ ebp + 0xc ]
call sub_4027c0
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x8 ]
push edx
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41e0a0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_406c80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x144
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_406cb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x14a
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_406ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_496f5a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x774
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_406d59
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_406d59
push ebp
mov ebp esp
push 0xffffffff
push sub_496fc7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push esi
mov [ ebp - 0x20 ] ecx
push 0x0
push 0x6b
mov ecx [ ebp - 0x20 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0x8c
call sub_4028f0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_4061c0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x20 ]
add ecx 0x114
call sub_4061c0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x20 ]
add ecx 0x160
call sub_45fb90
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x20 ]
add ecx 0x19c
call sub_407fa0
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x6e8 ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x6ec
call sub_407d30
mov [ ebp - 0x4 ] 0x6
mov edx [ ebp - 0x20 ]
mov [ edx ] r--data
mov eax [ ebp - 0x20 ]
mov [ eax + 0x6e4 ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x8
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x54 ]
mov [ edx + 0x6e4 ] ecx
mov ecx [ ebp + 0x8 ]
add ecx 0x40
call sub_41b1b0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x72c
call sub_407e10
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ eax + edx * 4 + 0x6ec ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x20 ]
mov [ eax + edx * 4 + 0x70c ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
mov [ edx + 0x744 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x5c ]
mov [ edx + 0x748 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
mov [ edx + 0x74c ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x750 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x68
push edx
mov eax [ ebp - 0x20 ]
add eax 0x754
push eax
call [ lstrcpyA@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x8 ]
add ecx 0x40
call sub_416c20
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x72c
call sub_407e30
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
sub_406f57
push ebp
mov ebp esp
push 0xffffffff
push sub_497034
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x1c ]
add ecx 0x72c
call sub_41b1b0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x1c ]
add ecx 0x6ec
call sub_407d50
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x1c ]
add ecx 0x19c
call sub_4080bd
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x1c ]
add ecx 0x160
call sub_45fbaf
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x1c ]
add ecx 0x114
call sub_4061f3
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_4061f3
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x8c
call sub_48a0bf
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x1c ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x72c
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_40705e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x402
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xc8
push eax
push 0x3e9
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0x114
push edx
push 0x3e8
mov eax [ ebp + 0x8 ]
push eax
call sub_483f62
mov ecx [ ebp - 0x4 ]
add ecx 0x160
push ecx
push 0x3fd
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x19c
push eax
push 0x3fb
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0x6e4
push edx
push 0x3f3
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov esp ebp
pop ebp
retn 0x4
sub_407115
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_4786a4
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x8c
call sub_4029a0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + ecx * 4 + 0x6ec ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x114
call sub_406230
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + ecx * 4 + 0x70c ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0xc8
call sub_406230
mov ecx [ ebp - 0x8 ]
call sub_407190
mov ecx [ ebp - 0x8 ]
call sub_407442
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_407190
push ebp
mov ebp esp
push 0xffffffff
push sub_497047
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x160
call sub_407f50
mov ecx [ ebp - 0x20 ]
add ecx 0x72c
call sub_41b1b0
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x20 ]
add ecx 0x72c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
push edx
push rw-data
lea eax [ ebp - 0x1c ]
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0x160
call sub_45fbdb
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0x160
call sub_407ec0
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_407276
push ebp
mov ebp esp
push 0xffffffff
push sub_49705d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x88
mov [ ebp - 0x94 ] ecx
mov eax [ ebp - 0x94 ]
push eax
push 0x0
mov ecx [ ebp - 0x94 ]
add ecx 0x114
call sub_40621f
push eax
lea ecx [ ebp - 0x8c ]
call sub_475dba
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
call sub_475e66
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x8c ]
call sub_407d70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x94 ]
add ecx 0x8c
call sub_402970
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0x8c ]
call sub_407f80
mov ecx [ ebp - 0x90 ]
mov edx [ ebp - 0x94 ]
mov [ edx + ecx * 4 + 0x6ec ] eax
mov eax [ ebp - 0x90 ]
mov ecx [ ebp - 0x94 ]
mov edx [ ecx + eax * 4 + 0x6ec ]
push edx
mov ecx [ ebp - 0x94 ]
add ecx 0x114
call sub_406230
mov ecx [ ebp - 0x94 ]
call sub_407442
sub_40735c
push ebp
mov ebp esp
push 0xffffffff
push sub_497073
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x88
mov [ ebp - 0x94 ] ecx
mov eax [ ebp - 0x94 ]
push eax
push 0x0
mov ecx [ ebp - 0x94 ]
add ecx 0xc8
call sub_40621f
push eax
lea ecx [ ebp - 0x8c ]
call sub_475dba
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
call sub_475e66
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x8c ]
call sub_407d70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x94 ]
add ecx 0x8c
call sub_402970
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0x8c ]
call sub_407f80
mov ecx [ ebp - 0x90 ]
mov edx [ ebp - 0x94 ]
mov [ edx + ecx * 4 + 0x70c ] eax
mov eax [ ebp - 0x90 ]
mov ecx [ ebp - 0x94 ]
mov edx [ ecx + eax * 4 + 0x70c ]
push edx
mov ecx [ ebp - 0x94 ]
add ecx 0xc8
call sub_406230
mov ecx [ ebp - 0x94 ]
call sub_407442
sub_407442
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x3fb
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x6ec
push eax
mov ecx [ ebp - 0x4 ]
call sub_4083f1
mov esp ebp
pop ebp
retn
sub_407470
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x48 ] ecx
push 0xffffffff
push 0x1
push 0x3ea
call sub_4840fb
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x6ec ] 0x0
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x6f0 ] 0xffffff
mov edx [ ebp - 0x48 ]
mov [ edx + 0x6f4 ] 0x0
mov eax [ ebp - 0x48 ]
mov [ eax + 0x6f8 ] 0xffffff
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x6fc ] 0xffffff
mov edx [ ebp - 0x48 ]
mov [ edx + 0x700 ] 0xffffff
mov eax [ ebp - 0x48 ]
mov [ eax + 0x704 ] 0xffffff
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x708 ] 0xff0000
mov edx [ ebp - 0x48 ]
mov [ edx + 0x70c ] 0xffff
mov eax [ ebp - 0x48 ]
mov [ eax + 0x710 ] 0x808080
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x714 ] 0xffffff
mov edx [ ebp - 0x48 ]
mov [ edx + 0x718 ] 0x8000ff
mov eax [ ebp - 0x48 ]
mov [ eax + 0x71c ] 0xff00
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x720 ] 0xff8080
mov edx [ ebp - 0x48 ]
mov [ edx + 0x724 ] 0xff
mov eax [ ebp - 0x48 ]
mov [ eax + 0x728 ] 0xffffff
push 0x10
call [ GetStockObject@IAT ]
mov [ ebp - 0x40 ] eax
lea ecx [ ebp - 0x3c ]
push ecx
push 0x3c
mov edx [ ebp - 0x40 ]
push edx
call [ GetObjectA@IAT ]
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + 0x744 ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
mov [ edx + 0x748 ] eax
mov ecx [ ebp - 0x28 ]
and ecx 0xff
mov edx [ ebp - 0x48 ]
mov [ edx + 0x74c ] ecx
mov eax [ ebp - 0x25 ]
and eax 0xff
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x750 ] eax
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x48 ]
add eax 0x754
push eax
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x48 ]
add ecx 0x8c
call sub_402970
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x48 ]
mov eax [ edx + ecx * 4 + 0x6ec ]
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0x114
call sub_406230
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x48 ]
mov eax [ edx + ecx * 4 + 0x70c ]
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0xc8
call sub_406230
mov ecx [ ebp - 0x48 ]
call sub_407442
push 0x0
mov ecx [ ebp - 0x48 ]
call sub_47b0ce
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_407629
push ebp
mov ebp esp
push 0xffffffff
push sub_497089
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x158
mov [ ebp - 0x164 ] ecx
push 0x3c
push 0x0
lea eax [ ebp - 0x48 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp - 0x164 ]
mov edx [ ecx + 0x744 ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x164 ]
mov ecx [ eax + 0x748 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x164 ]
mov al [ edx + 0x74c ]
mov [ ebp - 0x34 ] al
mov ecx [ ebp - 0x164 ]
mov dl [ ecx + 0x750 ]
mov [ ebp - 0x31 ] dl
mov eax [ ebp - 0x164 ]
add eax 0x754
push eax
lea ecx [ ebp - 0x2c ]
push ecx
call [ lstrcpyA@IAT ]
mov [ ebp - 0x4c ] 0x4041
mov edx [ ebp - 0x164 ]
push edx
push 0x0
mov eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
lea ecx [ ebp - 0x160 ]
call sub_475eb0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x160 ]
call sub_475fa8
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x160 ]
call sub_407d90
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x164 ]
mov eax [ ebp - 0x48 ]
mov [ edx + 0x744 ] eax
mov ecx [ ebp - 0x164 ]
mov edx [ ebp - 0x38 ]
mov [ ecx + 0x748 ] edx
mov eax [ ebp - 0x34 ]
and eax 0xff
mov ecx [ ebp - 0x164 ]
mov [ ecx + 0x74c ] eax
mov edx [ ebp - 0x31 ]
and edx 0xff
mov eax [ ebp - 0x164 ]
mov [ eax + 0x750 ] edx
lea ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x164 ]
add edx 0x754
push edx
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x164 ]
call sub_407442
sub_407772
push ebp
mov ebp esp
push 0xffffffff
push sub_4970b7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14c
mov [ ebp - 0x158 ] ecx
push 0x0
mov eax [ ebp - 0x158 ]
add eax 0x72c
push eax
lea ecx [ ebp - 0x150 ]
call sub_45f930
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x150 ]
call sub_47841e
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
push 0x0
push 0x0
lea ecx [ ebp - 0x9c ]
call sub_475dba
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x9c ]
call sub_475e66
cmp eax 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x150 ]
call sub_407db0
jmp r-xdata
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x154 ] eax
mov edx [ ebp - 0x154 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
mov cl [ ebp - 0xa8 ]
mov [ eax ] cl
lea ecx [ ebp - 0x9c ]
call sub_407f80
mov edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x158 ]
add ecx 0x72c
call sub_41b1b0
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x9c ]
call sub_407d70
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x150 ]
call sub_407db0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0xa0 ]
jge r-xdata
push 0x1
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x158 ]
add ecx 0x72c
call sub_4776fb
lea ecx [ ebp - 0xa4 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
push edx
push rw-data
lea eax [ ebp - 0xa4 ]
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0xa4 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x158 ]
add ecx 0x160
call sub_45fc0c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x158 ]
add ecx 0x160
call sub_407ec0
mov ecx [ ebp - 0x158 ]
call sub_407442
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xa4 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x9c ]
call sub_407d70
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x150 ]
call sub_407db0
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x158 ]
add ecx 0x72c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
cmp edx ecx
jle r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
sub_407992
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0x160
call sub_407e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
push 0xffffffff
push 0x1
push 0x41b
call sub_4840fb
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x72c
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x72c
call sub_47763d
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0x160
call sub_407f20
mov ecx [ ebp - 0xc ]
add ecx 0x160
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x4 ] eax
jge r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x160
call sub_407e60
sub eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x160
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x4 ] eax
jge r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x160
call sub_407e60
sub eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0xc ]
add ecx 0x160
call sub_407ec0
mov ecx [ ebp - 0xc ]
call sub_407442
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ecx
sub_407aae
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x160
call sub_407e60
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0xffffffff
push 0x1
push 0x41f
call sub_4840fb
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x72c
call sub_407e10
mov ecx [ ebp - 0x10 ]
add ecx 0x160
call sub_407f50
mov ecx [ ebp - 0x10 ]
call sub_407442
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x72c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_407b70
push ebp
mov ebp esp
push 0xffffffff
push sub_4970cd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8c
mov [ ebp - 0x98 ] ecx
mov ecx [ ebp - 0x98 ]
add ecx 0x160
call sub_407e90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x98 ]
add ecx 0x160
call sub_407ef0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x98 ]
push ecx
push 0x0
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
push eax
lea ecx [ ebp - 0x94 ]
call sub_475dba
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x94 ]
call sub_475e66
cmp eax 0x1
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x94 ]
call sub_407f80
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] eax
push 0x1
mov ecx [ ebp - 0x98 ]
add ecx 0x160
call sub_405450
mov ecx [ ebp - 0x98 ]
call sub_407442
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x94 ]
call sub_407d70
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x94 ]
call sub_407d70
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_407c60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x6e4 ]
mov [ eax + 0x740 ] edx
mov ecx [ ebp - 0x4 ]
call sub_48d884
mov esp ebp
pop ebp
retn
sub_407c8f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x8c
call sub_402970
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x8
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + eax * 4 + 0x6ec ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x114
call sub_406230
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + eax * 4 + 0x70c ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0xc8
call sub_406230
sub_407d00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406f57
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_407db0
push ebp
mov ebp esp
push 0xffffffff
push sub_4970f5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_407e30
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4776d4
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_407e60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x18b
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_407e90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x188
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_407ec0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x186
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_407ef0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x199
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_407f20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x182
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_407f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x184
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_407fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_497148
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_4093d0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_401260
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_406640
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_406640
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_406640
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x45c
call sub_407d30
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0x4ec
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x4f4
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x504
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x514
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x524
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x534
call sub_428cd0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x544 ] 0x10
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
push 0x2d
call [ GetSystemMetrics@IAT ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x4ec ] eax
push 0x2e
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4f0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4080bd
push ebp
mov ebp esp
push 0xffffffff
push sub_49719a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_480765
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_480765
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_480765
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_480765
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x45c
call sub_407d50
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_405020
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_405020
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_405020
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_401380
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_489ea7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_408190
push ebp
mov ebp esp
push 0xffffffff
push sub_4971b0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x90
mov [ ebp - 0x9c ] ecx
mov eax [ ebp - 0x9c ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
push 0x3c
push 0x0
lea ecx [ ebp - 0x48 ]
push ecx
call sub_467a10
add esp 0xc
mov edx [ ebp - 0x9c ]
mov eax [ edx + 0x4b4 ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x9c ]
mov edx [ ecx + 0x4b8 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x9c ]
mov cl [ eax + 0x4bc ]
mov [ ebp - 0x34 ] cl
mov edx [ ebp - 0x9c ]
mov al [ edx + 0x4c0 ]
mov [ ebp - 0x31 ] al
mov ecx [ ebp - 0x9c ]
add ecx 0x4c4
push ecx
lea edx [ ebp - 0x2c ]
push edx
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x9c ]
add ecx 0x3c
call sub_405d10
mov ecx [ ebp - 0x9c ]
push ecx
lea ecx [ ebp - 0x98 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x9c ]
add edx 0x3c
push edx
lea ecx [ ebp - 0x98 ]
call sub_47fe32
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x98 ]
call sub_405d30
mov ecx [ ebp - 0x9c ]
mov edx [ ebp - 0x6c ]
mov [ ecx + 0x4e4 ] edx
mov eax [ ebp - 0x9c ]
mov ecx [ ebp - 0x80 ]
mov [ eax + 0x4e8 ] ecx
mov edx [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0x98 ]
call sub_47fe32
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x98 ]
call sub_4804d8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x9c ]
add ecx 0x3c
call sub_480765
sub_4082d6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x47c ]
push edx
mov ecx [ ebp - 0x4 ]
add ecx 0x44
call sub_406660
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x44
call sub_480765
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x480 ]
push edx
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
call sub_406660
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
call sub_480765
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x484 ]
push edx
mov ecx [ ebp - 0x4 ]
add ecx 0x54
call sub_406660
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
add ecx 0x54
call sub_480765
sub_40835c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x100
jge r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x49c
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x464 ]
mov [ edx + ecx * 4 + 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x49c
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ ecx + eax * 4 + 0x5c ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_4083f1
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x8
jge r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x40
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 + 0x45c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 + 0x20 ]
mov [ edx + ecx * 4 + 0x47c ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
mov [ edx + 0x4b4 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x5c ]
mov [ edx + 0x4b8 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
mov [ edx + 0x4bc ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x4c0 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x68
push edx
mov eax [ ebp - 0xc ]
add eax 0x4c4
push eax
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0xc ]
call sub_408190
mov ecx [ ebp - 0xc ]
call sub_4082d6
mov ecx [ ebp - 0xc ]
call sub_40835c
mov ecx [ ebp - 0xc ]
call sub_408f8b
push 0x1
mov ecx [ ebp - 0xc ]
call sub_405450
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x40
call sub_416c20
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0x49c
call sub_407e30
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_40850f
push ebp
mov ebp esp
push 0xffffffff
push sub_4971db
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xec
mov [ ebp - 0xe8 ] ecx
mov eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_4805ce
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xe8 ]
call sub_408f8b
mov ecx [ ebp - 0xe8 ]
add ecx 0x3c
push ecx
lea ecx [ ebp - 0x74 ]
call sub_47fe32
mov [ ebp - 0x8c ] eax
mov edx [ ebp - 0xe8 ]
add edx 0x4f4
push edx
lea ecx [ ebp - 0x74 ]
call sub_48027a
lea ecx [ ebp - 0x84 ]
call sub_428cd0
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_4801e8
mov ecx [ ebp - 0xe8 ]
add ecx 0x54
push ecx
lea edx [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_405210
lea ecx [ ebp - 0x1c ]
call sub_428cd0
push 0x1
lea ecx [ ebp - 0x74 ]
call sub_47fea7
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xe8 ]
mov ecx [ eax + 0x45c ]
push ecx
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov [ ebp - 0x88 ] eax
mov edx [ ebp - 0xe8 ]
add edx 0x504
push edx
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4092d0
test eax eax
je r-xdata
mov ecx [ ebp - 0xe8 ]
add ecx 0x514
push ecx
lea edx [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_4092d0
test eax eax
je r-xdata
mov ecx [ ebp - 0xe8 ]
add ecx 0x44
push ecx
lea edx [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_405210
push 0x4d
push rw-data
mov eax [ ebp - 0xe8 ]
mov ecx [ eax + 0x508 ]
push ecx
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x504 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_409320
mov edx [ ebp - 0xe8 ]
add edx 0x524
push edx
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4092d0
test eax eax
je r-xdata
mov eax [ ebp - 0xe8 ]
add eax 0x4c
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x74 ]
call sub_405210
mov edx [ ebp - 0xe8 ]
mov eax [ ebp - 0x80 ]
cmp eax [ edx + 0x518 ]
jle r-xdata
push 0xf
push 0xa
mov ecx [ ebp - 0xe8 ]
add ecx 0x4f4
push ecx
lea ecx [ ebp - 0x74 ]
call sub_4092f0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
call sub_480640
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + 0x4e4 ]
imul edx edx 0x3
mov [ ebp - 0xdc ] edx
mov eax [ ebp - 0xe8 ]
mov ecx [ ebp - 0x80 ]
cmp ecx [ eax + 0x518 ]
jle r-xdata
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x518 ]
mov [ ebp - 0xec ] eax
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0xec ] ecx
jmp r-xdata
mov eax [ ebp - 0xe8 ]
mov ecx [ eax + 0x518 ]
mov [ ebp - 0xf4 ] ecx
mov edx [ ebp - 0x80 ]
mov [ ebp - 0xf4 ] edx
jmp r-xdata
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x520 ]
mov [ ebp - 0xf0 ] eax
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0xf0 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xe8 ]
mov eax [ ebp - 0xec ]
cdq
idiv [ ecx + 0x4e8 ]
sub eax 0x1
mov [ ebp - 0x98 ] eax
mov edx [ ebp - 0xe8 ]
mov eax [ ebp - 0x78 ]
cmp eax [ edx + 0x520 ]
jge r-xdata
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x520 ]
mov [ ebp - 0xf8 ] eax
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0xf8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xe8 ]
mov eax [ ebp - 0xf4 ]
cdq
idiv [ ecx + 0x4e8 ]
sub eax 0x1
mov [ ebp - 0xb0 ] eax
mov edx [ ebp - 0xe8 ]
mov eax [ ebp - 0x78 ]
cmp eax [ edx + 0x520 ]
jge r-xdata
mov edx [ ebp - 0xa0 ]
cmp edx [ ebp - 0x9c ]
jge r-xdata
mov ecx [ ebp - 0xe8 ]
mov eax [ ebp - 0xf0 ]
cdq
idiv [ ecx + 0x4e8 ]
mov [ ebp - 0x9c ] eax
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x460 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov ecx [ ebp - 0x98 ]
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0xe8 ]
mov eax [ ebp - 0x98 ]
imul eax [ edx + 0x4e8 ]
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + 0x518 ]
add edx eax
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc8 ]
cmp ecx [ ebp - 0xc4 ]
jge r-xdata
mov ecx [ ebp - 0xe8 ]
mov eax [ ebp - 0xf8 ]
cdq
idiv [ ecx + 0x4e8 ]
mov [ ebp - 0xc4 ] eax
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x464 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
lea ecx [ ebp - 0xcc ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc0 ]
call sub_428cd0
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + 0x5c ]
mov [ ebp - 0xd8 ] edx
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0xd0 ] eax
mov ecx [ ebp - 0xd8 ]
push ecx
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0xc8 ] edx
mov eax [ ebp - 0xe8 ]
mov ecx [ ebp - 0xb0 ]
imul ecx [ eax + 0x4e8 ]
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x528 ]
add eax ecx
mov [ ebp - 0xa8 ] eax
jmp r-xdata
lea ecx [ ebp - 0xa4 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x90 ]
push eax
push rw-data
lea ecx [ ebp - 0xa4 ]
push ecx
call sub_475837
add esp 0xc
push 0xb
lea ecx [ ebp - 0xa4 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x94 ]
push edx
mov eax [ ebp - 0xe8 ]
mov ecx [ eax + 0x514 ]
push ecx
lea ecx [ ebp - 0x74 ]
call sub_409320
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xa4 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xcc ]
call sub_47c674
mov [ ebp - 0xe4 ] 0x0
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x524 ]
mov [ ebp - 0xe0 ] eax
jmp r-xdata
mov eax [ ebp - 0xa0 ]
add eax 0x1
mov [ ebp - 0xa0 ] eax
mov ecx [ ebp - 0xe8 ]
mov edx [ ebp - 0x94 ]
add edx [ ecx + 0x4e8 ]
mov [ ebp - 0x94 ] edx
mov eax [ ebp - 0xe8 ]
mov ecx [ ebp - 0x90 ]
add ecx [ eax + 0x544 ]
mov [ ebp - 0x90 ] ecx
mov eax [ ebp - 0xe8 ]
mov ecx [ ebp - 0xe4 ]
cmp ecx [ eax + 0x544 ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0xe8 ]
mov eax [ ebp - 0xc8 ]
imul eax [ edx + 0x544 ]
add eax [ ebp - 0xe4 ]
push eax
push rw-data
lea ecx [ ebp - 0xcc ]
push ecx
call sub_475837
add esp 0xc
mov edx [ ebp - 0xe8 ]
mov eax [ ebp - 0xc8 ]
imul eax [ edx + 0x544 ]
add eax [ ebp - 0xe4 ]
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + eax * 4 + 0x5c ]
mov [ ebp - 0xd8 ] edx
cmp [ ebp - 0xc8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc8 ]
add ecx 0x1
mov [ ebp - 0xc8 ] ecx
mov edx [ ebp - 0xe8 ]
mov eax [ ebp - 0xa8 ]
add eax [ edx + 0x4e8 ]
mov [ ebp - 0xa8 ] eax
cmp [ ebp - 0xc8 ] 0x3
jne r-xdata
cmp [ ebp - 0xe4 ] 0x1
jl r-xdata
cmp [ ebp - 0xc8 ] 0x4
jne r-xdata
cmp [ ebp - 0xe4 ] 0x7
jne r-xdata
cmp [ ebp - 0xe4 ] 0x3
jg r-xdata
cmp [ ebp - 0xc8 ] 0x2
jne r-xdata
cmp [ ebp - 0xe4 ] 0x0
jne r-xdata
push rw-data
lea ecx [ ebp - 0xcc ]
call sub_47c7b1
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x474 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov [ ebp - 0xac ] eax
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + 0x494 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_47fe78
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0xe8 ]
mov ecx [ ebp - 0xa8 ]
add ecx [ eax + 0x4e8 ]
push ecx
mov edx [ ebp - 0xdc ]
imul edx edx 0x9
mov eax [ ebp - 0xe0 ]
add eax edx
mov ecx [ ebp - 0xe8 ]
sub eax [ ecx + 0x4e4 ]
push eax
mov edx [ ebp - 0xa8 ]
push edx
mov eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_4092a0
push 0x0
lea ecx [ ebp - 0xcc ]
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push 0x2
mov eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebp - 0xe0 ]
push ecx
lea ecx [ ebp - 0x74 ]
call sub_409390
mov edx [ ebp - 0xac ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47fe78
mov ecx [ ebp - 0xe4 ]
add ecx 0x8
mov [ ebp - 0xe4 ] ecx
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0xe0 ]
lea ecx [ eax + edx * 8 ]
mov [ ebp - 0xe0 ] ecx
jmp r-xdata
mov eax [ ebp - 0xe4 ]
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + eax * 4 + 0x464 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov [ ebp - 0xac ] eax
mov eax [ ebp - 0xe4 ]
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + eax * 4 + 0x484 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_47fe78
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0xe8 ]
mov ecx [ ebp - 0xa8 ]
add ecx [ eax + 0x4e8 ]
push ecx
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x4e4 ]
mov ecx [ ebp - 0xe0 ]
lea edx [ ecx + eax * 2 ]
push edx
mov eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebp - 0xe0 ]
push ecx
lea ecx [ ebp - 0xc0 ]
call sub_4092a0
push 0x0
lea edx [ ebp - 0xcc ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push 0x2
mov ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0xe0 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_409390
mov eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov ecx [ ebp - 0xd4 ]
push ecx
lea ecx [ ebp - 0x74 ]
call sub_47fe78
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
cmp ecx [ ebp - 0xd8 ]
je r-xdata
cmp [ ebp - 0xe4 ] 0x2
jne r-xdata
push rw-data
lea ecx [ ebp - 0xcc ]
call sub_47c7b1
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x474 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov [ ebp - 0xac ] eax
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + 0x494 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_47fe78
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0xe8 ]
mov ecx [ ebp - 0xa8 ]
add ecx [ eax + 0x4e8 ]
push ecx
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0xe0 ]
lea ecx [ eax + edx * 4 ]
mov edx [ ebp - 0xe8 ]
sub ecx [ edx + 0x4e4 ]
push ecx
mov eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebp - 0xe0 ]
push ecx
lea ecx [ ebp - 0xc0 ]
call sub_4092a0
push 0x0
lea edx [ ebp - 0xcc ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push 0x2
mov ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0xe0 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_409390
mov eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov ecx [ ebp - 0xd4 ]
push ecx
lea ecx [ ebp - 0x74 ]
call sub_47fe78
mov edx [ ebp - 0xe4 ]
add edx 0x3
mov [ ebp - 0xe4 ] edx
mov eax [ ebp - 0xdc ]
imul eax eax 0x3
mov ecx [ ebp - 0xe0 ]
add ecx eax
mov [ ebp - 0xe0 ] ecx
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0xcc ]
push eax
mov ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0xe0 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_409350
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0xd0 ] eax
mov edx [ ebp - 0xd8 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
push rw-data
lea ecx [ ebp - 0xcc ]
call sub_47c7b1
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x478 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov [ ebp - 0xac ] eax
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + 0x498 ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_47fe78
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0xe8 ]
mov ecx [ ebp - 0xa8 ]
add ecx [ eax + 0x4e8 ]
push ecx
mov edx [ ebp - 0xdc ]
imul edx edx 0xa
mov eax [ ebp - 0xe0 ]
add eax edx
mov ecx [ ebp - 0xe8 ]
sub eax [ ecx + 0x4e4 ]
push eax
mov edx [ ebp - 0xa8 ]
push edx
mov eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_4092a0
push 0x0
lea ecx [ ebp - 0xcc ]
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push 0x2
mov eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebp - 0xe0 ]
push ecx
lea ecx [ ebp - 0x74 ]
call sub_409390
mov edx [ ebp - 0xac ]
push edx
lea ecx [ ebp - 0x74 ]
call sub_47ff5f
mov eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47fe78
mov ecx [ ebp - 0xe4 ]
add ecx 0x9
mov [ ebp - 0xe4 ] ecx
mov edx [ ebp - 0xdc ]
imul edx edx 0x9
mov eax [ ebp - 0xe0 ]
add eax edx
mov [ ebp - 0xe0 ] eax
jmp r-xdata
mov ecx [ ebp - 0xe4 ]
add ecx 0x1
mov [ ebp - 0xe4 ] ecx
mov edx [ ebp - 0xe0 ]
add edx [ ebp - 0xdc ]
mov [ ebp - 0xe0 ] edx
sub_408f2d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_408190
mov ecx [ ebp - 0x4 ]
call sub_4082d6
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_408f62
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov ecx [ ebp - 0x4 ]
call sub_408f8b
mov esp ebp
pop ebp
retn 0xc
sub_408f8b
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
add eax 0x4f4
push eax
mov ecx [ ebp - 0xc ]
call sub_405410
mov ecx [ ebp - 0xc ]
add ecx 0x4f4
call sub_404fe0
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4f0 ]
shl edx 0x1
sub eax edx
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x4f4
call sub_405cf0
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4ec ]
shl edx 0x1
sub eax edx
push eax
lea ecx [ ebp - 0x8 ]
call sub_404fb0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4ec ]
mov [ eax + 0x504 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4f0 ]
mov [ eax + 0x508 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x504 ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x50c ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x4e8 ]
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4e8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4e4 ]
imul eax eax 0xa
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x508 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x510 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x504 ]
mov [ edx + 0x514 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x510 ]
mov [ edx + 0x518 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4e4 ]
imul eax eax 0xa
cmp [ ebp - 0x8 ] eax
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4e4 ]
imul edx edx 0xb
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x514 ]
add edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x51c ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x518 ]
add edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x520 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4e4 ]
imul edx edx 0xb
cmp [ ebp - 0x8 ] edx
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x544 ]
imul eax eax 0x3
add eax 0xa
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4e4 ]
imul edx eax
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4ec ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x524 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x510 ]
mov [ eax + 0x528 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x544 ]
imul ecx ecx 0x3
add ecx 0xa
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4e4 ]
imul eax ecx
cmp [ ebp - 0x8 ] eax
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x544 ]
imul eax eax 0x3
add eax 0xd
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4e4 ]
imul edx eax
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x524 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x52c ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x520 ]
mov [ eax + 0x530 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x544 ]
imul ecx ecx 0x3
add ecx 0xd
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4e4 ]
imul eax ecx
cmp [ ebp - 0x8 ] eax
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x544 ]
lea edx [ ecx * 4 + 0xf ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4e4 ]
imul ecx edx
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4ec ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x534 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x510 ]
mov [ eax + 0x538 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x544 ]
lea edx [ ecx * 4 + 0xf ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4e4 ]
imul ecx edx
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x534 ]
add eax [ ebp - 0x24 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x53c ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x520 ]
mov [ edx + 0x540 ] ecx
mov esp ebp
pop ebp
retn
sub_409270
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4080bd
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4092a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ SetRect@IAT ]
mov esp ebp
pop ebp
retn 0x10
sub_4092d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ IntersectRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_4092f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ DrawEdge@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_409320
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ TextOutA@IAT ]
mov esp ebp
pop ebp
retn 0x10
sub_409350
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
call sub_4027a0
push eax
mov ecx [ ebp + 0x10 ]
call sub_4027c0
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
call [ eax + 0x5c ]
mov esp ebp
pop ebp
retn 0xc
sub_409390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
call sub_4027a0
push eax
mov ecx [ ebp + 0x18 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ ExtTextOutA@IAT ]
mov esp ebp
pop ebp
retn 0x18
sub_4093f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_489ea7
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_409439
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
sar eax 0x8
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
and ecx 0xff
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x8
jge r-xdata
xor ax ax
cmp [ ebp - 0x4 ] 0x12
jge r-xdata
mov edx [ ebp - 0x8 ]
imul edx edx 0x48
mov eax [ ebp - 0x4 ]
mov ax [ edx + eax * 4 + rw-data ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40948a
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x8
jge r-xdata
xor ax ax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x12
jge r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
and edx 0xffff
mov eax [ ebp - 0x4 ]
imul eax eax 0x48
mov ecx [ ebp - 0x8 ]
xor esi esi
mov si [ eax + ecx * 4 + rw-data ]
cmp edx esi
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
imul edx edx 0x48
mov eax [ ebp - 0x8 ]
mov ax [ edx + eax * 4 + rw-data ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40953b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x8
jge r-xdata
xor ax ax
cmp [ ebp + 0xc ] 0x12
jge r-xdata
mov eax [ ebp + 0x8 ]
imul eax eax 0x24
mov ecx [ ebp + 0xc ]
mov ax [ eax + ecx * 2 + rw-data ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_40956a
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
sar eax 0x8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x12
jge r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
and edx 0xffff
mov eax [ ebp - 0x8 ]
imul eax eax 0x24
mov ecx [ ebp - 0x4 ]
xor esi esi
mov si [ eax + ecx * 2 + rw-data ]
cmp edx esi
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4095d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_409527
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_409600
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
push 0xa6
mov ecx [ ebp - 0x4 ]
call sub_478369
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x5c ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_409686
push ebp
mov ebp esp
push 0xffffffff
push sub_4971f9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
mov [ ebp - 0x40 ] ecx
push 0x3fd
mov ecx [ ebp - 0x40 ]
call sub_47bb2c
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
call sub_407f50
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_4036e0
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
call sub_4841fc
mov [ ebp - 0x3c ] eax
lea ecx [ ebp - 0x28 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_48420e
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x54 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x30 ]
call sub_407ec0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x58 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
cmp ecx [ eax + 0x5c ]
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ edx ]
mov ecx [ ebp - 0x38 ]
call [ eax + 0x60 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ edx ]
mov ecx [ ebp - 0x38 ]
call [ eax + 0x64 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_47a2e8
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_4796e8
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x30 ]
call sub_409900
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x2c ]
add edx 0x1
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x30 ]
call sub_4098d0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
sub_4097e2
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x3fd
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_407e90
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_407ef0
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x64 ] eax
mov edx [ ebp - 0xc ]
mov ecx [ edx + 0x64 ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x60 ] eax
mov ecx [ ebp - 0xc ]
call sub_478709
mov esp ebp
pop ebp
retn
sub_409870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4098a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402b00
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4098d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x19a
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_409900
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x180
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_409930
push ebp
mov ebp esp
push 0xffffffff
push sub_497225
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
push eax
push 0xa7
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_412030
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x2a4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x2a8 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x2ac ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x2b0 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x2b4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x2b8
call sub_401260
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x10 ]
mov [ edx + 0x5c ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x60 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_4099f7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3f3
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0x60
push eax
push 0x3f7
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0x64
push edx
push 0x422
mov eax [ ebp + 0x8 ]
push eax
call sub_483f62
mov esp ebp
pop ebp
retn 0x4
sub_409a5f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2b4 ] 0x1
mov ecx [ ebp + 0xc ]
push ecx
push 0xa7
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x8
sub_409a8a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_409aca
mov ecx [ ebp - 0x4 ]
call sub_409b02
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2a4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x2ac ]
call sub_45d20f
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_409aca
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40a210
mov [ ebp - 0x4 ] eax
push 0x0
push 0xf030
mov ecx [ ebp - 0x4 ]
call sub_40a1b0
push 0x0
push 0xf000
mov ecx [ ebp - 0x4 ]
call sub_40a1b0
mov esp ebp
pop ebp
retn
sub_409b02
push ebp
mov ebp esp
push 0xffffffff
push sub_497254
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x78
mov [ ebp - 0x84 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
lea eax [ ebp - 0x24 ]
push eax
push 0x422
mov ecx [ ebp - 0x84 ]
call sub_47bb2c
mov ecx eax
call sub_4061a0
push sub_40a170
push sub_40a150
push 0x3
push 0x10
lea ecx [ ebp - 0x5c ]
push ecx
call sub_467f48
mov [ ebp - 0x4 ] 0x0
push rw-data
lea ecx [ ebp - 0x5c ]
call sub_47c7b1
mov [ ebp - 0x58 ] 0x5a
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] 0x0
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_47c7b1
mov [ ebp - 0x48 ] 0x5a
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x40 ] 0x0
push rw-data
lea ecx [ ebp - 0x3c ]
call sub_47c7b1
mov [ ebp - 0x38 ] 0x5a
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x30 ] 0x0
push 0x0
lea edx [ ebp - 0x5c ]
push edx
push 0x3
mov ecx [ ebp - 0x84 ]
add ecx 0x64
call sub_4123fa
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0x2a4 ]
call sub_41b1b0
mov [ ebp - 0x7c ] eax
lea ecx [ ebp - 0x80 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x70 ]
call sub_47711c
mov [ ebp - 0x4 ] 0x2
push 0xffffffff
push 0x3
lea ecx [ ebp - 0x70 ]
call sub_4771af
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x7c ]
jge r-xdata
cmp [ ebp - 0x7c ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x84 ]
mov ecx [ ecx + 0x2a4 ]
call sub_402780
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x78 ]
add eax 0x1
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x78 ]
push ecx
push rw-data
lea edx [ ebp - 0x80 ]
push edx
call sub_475837
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
push 0x0
lea ecx [ ebp - 0x70 ]
call sub_40a100
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x78 ]
jne r-xdata
call sub_402850
mov ecx eax
call sub_40a130
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0x74 ]
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x64
call sub_41695d
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x70 ]
call sub_47714f
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x80 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
push sub_40a170
push 0x3
push 0x10
lea ecx [ ebp - 0x5c ]
push ecx
call sub_467e54
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x84 ]
add ecx 0x64
call sub_414843
mov edx [ ebp - 0x10 ]
push edx
push rw-data
lea eax [ ebp - 0x80 ]
push eax
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x80 ]
call sub_47c5ff
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x80 ]
push ecx
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_40a100
mov edx [ ebp - 0x2c ]
push edx
push rw-data
lea eax [ ebp - 0x80 ]
push eax
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x80 ]
push ecx
push 0x2
lea ecx [ ebp - 0x70 ]
call sub_40a100
lea edx [ ebp - 0x70 ]
push edx
mov ecx [ ebp - 0x84 ]
add ecx 0x64
call sub_4144ac
jmp r-xdata
sub_409d73
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x2b0 ]
cmp edx [ ecx + 0x2a8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x2a8 ]
mov [ eax + 0x2b0 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x2ac ]
mov [ eax + 0x2b0 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn
call sub_402850
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2b0 ]
call sub_47a2e8
push eax
mov ecx [ ebp - 0x4 ]
call sub_40a240
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x2b0 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
sub_409df2
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x64
call sub_40a190
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x2a4 ]
call sub_402780
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x2a8 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
push 0x410
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x2b0 ]
call sub_402890
sub_409e67
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2ac ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2b4 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x2ac ]
call sub_45d20f
push 0x0
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x2ac ]
call sub_45d228
mov ecx [ ebp - 0x4 ]
call sub_478722
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x2a8 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push 0x0
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x2a8 ]
call sub_45d228
push 0x0
push 0x6
push 0x40f
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2a8 ]
call sub_405d50
sub_409f13
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x64
call sub_40a190
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0xc4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_409f46
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2a8 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x2ac ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x5c ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2a8 ]
call sub_45d228
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x5c ]
push eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x2ac ]
call sub_45d228
sub_409fb7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2a8 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x2ac ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2ac ]
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x2a8 ]
call sub_45cec0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2a8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x2ac ]
call sub_45cec0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2ac ]
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x2a8 ]
call sub_45ce45
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2a8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x2ac ]
call sub_45ce45
jmp r-xdata
sub_40a070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a0a0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40a0a0
push ebp
mov ebp esp
push 0xffffffff
push sub_497275
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x2b8
call sub_401380
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_412232
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40a100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
lea ecx [ edx + eax * 4 ]
call sub_47c761
mov esp ebp
pop ebp
retn 0x8
sub_40a1b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ RemoveMenu@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_40a1e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40a210
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ GetSystemMenu@IAT ]
push eax
call sub_47e451
mov esp ebp
pop ebp
retn 0x4
sub_40a240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
push 0x222
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xbc ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_40a270
push ebp
mov ebp esp
push 0xffffffff
push sub_497289
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x30 ]
call sub_490b0e
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x30 ]
add ecx 0x78
call sub_428cd0
mov ecx [ ebp - 0x30 ]
add ecx 0x80
call sub_428cd0
mov ecx [ ebp - 0x30 ]
add ecx 0x88
call sub_428cd0
mov ecx [ ebp - 0x30 ]
add ecx 0x90
call sub_428cd0
mov ecx [ ebp - 0x30 ]
add ecx 0x98
call sub_428cd0
mov ecx [ ebp - 0x30 ]
add ecx 0xa8
call sub_428cd0
mov ecx [ ebp - 0x30 ]
add ecx 0xbc
call sub_428cd0
mov eax [ ebp - 0x30 ]
mov [ eax ] r--data
push 0x20
push 0x20
lea ecx [ ebp - 0x14 ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ eax + 0x78 ] ecx
mov [ eax + 0x7c ] edx
push 0xc8
push 0xc8
lea ecx [ ebp - 0x1c ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ eax + 0x80 ] ecx
mov [ eax + 0x84 ] edx
push 0xc8
push 0xc8
lea ecx [ ebp - 0x24 ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
mov [ eax + 0x8c ] edx
push 0xc8
push 0xc8
lea ecx [ ebp - 0x2c ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x30 ]
mov [ eax + 0x90 ] ecx
mov [ eax + 0x94 ] edx
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0xcc ] 0x0
mov edx [ ebp - 0x30 ]
mov [ edx + 0xd0 ] 0x0
mov eax [ ebp - 0x30 ]
mov [ eax + 0xc4 ] 0x0
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0xc8 ] 0x6
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40a409
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_47b45d
mov esp ebp
pop ebp
retn 0x8
sub_40a426
push ebp
mov ebp esp
push 0xffffffff
push sub_49729c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xd0 ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x1c ]
mov [ edx + 0x64 ] eax
mov ecx [ ebp + 0x1c ]
and ecx 0xffbf0000
mov [ ebp + 0x1c ] ecx
mov edx [ ebp + 0x1c ]
or edx 0x4e
mov [ ebp + 0x1c ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x80 ] ecx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x84 ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x88 ] ecx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8c ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x90 ] ecx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x94 ] edx
push 0x0
push 0xf
call [ GetSysColor@IAT ]
push eax
call [ CreateSolidBrush@IAT ]
push eax
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
push 0x8
call sub_4799e0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c6e2
mov [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_40b400
push eax
mov edx [ ebp + 0x1c ]
push edx
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
call sub_479360
test eax eax
jne r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x18
sub_40a55e
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
call sub_406130
push eax
push 0xe81b
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x6c ]
call sub_48cbca
mov ecx eax
call sub_4061a0
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_405cf0
add eax 0x4
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] 0x7fff
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_404fe0
add eax 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x34 ] 0x7fff
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_406130
push eax
push 0xe81c
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x6c ]
call sub_48cbca
mov ecx eax
call sub_4061a0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x88 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x84 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40a64f
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
and eax 0x18
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
and ecx 0x4
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_4842e9
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x40
test eax eax
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x90 ]
mov ecx [ edx + 0x94 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
and ecx 0x20
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x90 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x90 ]
mov edx [ eax + 0x94 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x78 ]
cmp edx [ ebp + 0xc ]
jle r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x7c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x78 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x7c ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x94 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ ecx + 0x94 ] edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x90 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_40a78b
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b5f0
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0xc4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_4066d0
mov ecx eax
call sub_47bcd2
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0xb8 ]
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0xb8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc4 ] 0x1
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_47bd57
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
and edx 0x1
test edx edx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x64 ]
and ecx 0xf00
cmp ecx 0xf00
je r-xdata
jmp r-xdata
sub_40a831
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405500
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd0 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xcc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b308
test eax eax
je r-xdata
push 0x7f84
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
push 0x7f85
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
jmp r-xdata
mov eax 0x1
sub_40a8ad
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xcc ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b346
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40aeeb
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405500
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40a8f2
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_48d484
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_405500
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xcc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0xa8
call sub_40b440
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40b346
mov ecx [ ebp - 0x14 ]
call sub_40b308
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0xa8
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40b1fa
push 0x0
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0xa8
call sub_406140
mov eax [ ebp - 0x14 ]
add eax 0xa8
push eax
mov ecx [ ebp - 0x14 ]
call sub_40b1fa
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0xa8
push eax
mov ecx [ ebp - 0x14 ]
call sub_40b1fa
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0xa8
call sub_406140
mov edx [ ebp - 0x14 ]
add edx 0xa8
push edx
mov ecx [ ebp - 0x14 ]
call sub_40b1fa
sub_40a9ed
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_406130
push eax
mov ecx [ ebp - 0x18 ]
call sub_4061a0
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_405cf0
push eax
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_40b400
mov ecx [ ebp - 0x18 ]
add ecx 0x98
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x64 ]
or dh 0xf
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xb8 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
sub edx 0xe81b
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x3
ja r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_40b490
mov eax [ ebp - 0x1c ]
jmp [ eax * 4 + jump_table_40ac16 ]
mov ecx [ ebp - 0x4 ]
and ch 0xf7
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x18 ]
cmp [ edx + 0xd0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
and ah 0xfd
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xd0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
and ch 0xfb
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x18 ]
cmp [ edx + 0xd0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
and ah 0xfe
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xd0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_40b490
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xc8 ]
neg ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
add eax ecx
mov ecx [ ebp + 0xc ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + 0xa4 ]
sub ecx [ eax + 0xc8 ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x9c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_40b490
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x18 ]
add eax [ ecx + 0xc8 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x9c ]
mov edx [ ebp - 0x18 ]
add ecx [ edx + 0xc8 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0xa4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_40b490
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xc8 ]
neg ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + 0xa0 ]
sub ecx [ eax + 0xc8 ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x98 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_40b490
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0x18 ]
add eax [ ecx + 0xc8 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x98 ]
mov edx [ ebp - 0x18 ]
add ecx [ edx + 0xc8 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0xa0 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_490bec
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_40ac26
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_484a86
mov ecx [ ebp - 0x8 ]
call sub_40b500
mov [ ebp - 0x4 ] eax
push 0x10
call [ GetSysColor@IAT ]
push eax
push 0x14
call [ GetSysColor@IAT ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x98
call sub_406130
push eax
mov ecx [ ebp - 0x4 ]
call sub_489d52
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b520
mov esp ebp
pop ebp
retn
sub_40ac7b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd0 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xcc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov ecx [ ebp - 0x4 ]
call sub_48d484
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40adf6
jmp r-xdata
sub_40acd2
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
call sub_48d484
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
call sub_406130
push eax
mov ecx [ ebp - 0x1c ]
call sub_4061a0
mov edx [ ebp - 0xc ]
neg edx
push edx
mov eax [ ebp - 0x10 ]
neg eax
push eax
lea ecx [ ebp + 0x8 ]
call sub_40b3d0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_405000
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_40d460
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40d460
mov eax 0x4
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_40ad69
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x74 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x74 ]
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40adb9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x74 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x74 ]
mov edx [ eax ]
call [ edx + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40adf6
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_4054c0
push 0x180
push 0x0
push 0x0
mov ecx [ ebp - 0xc ]
call sub_40b5c0
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x6c ]
call sub_40b580
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0x98
call sub_40b440
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0xbc ] edx
mov [ ecx + 0xc0 ] eax
mov edx [ ebp - 0xc ]
mov [ edx + 0xcc ] 0x1
mov eax [ ebp - 0xc ]
add eax 0x98
mov ecx [ ebp - 0xc ]
add ecx 0xa8
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc ]
call sub_40b308
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xa8
push ecx
mov ecx [ ebp - 0xc ]
call sub_40b1fa
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0xb4 ]
sub edx 0x4
mov eax [ ebp - 0xc ]
mov [ eax + 0xb4 ] edx
sub_40aeb4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xcc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x4 ]
je r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40aeeb
sub_40aeeb
push ebp
mov ebp esp
sub esp 0x64
push esi
mov [ ebp - 0x48 ] ecx
mov eax [ ebp - 0x48 ]
add eax 0xa8
push eax
mov ecx [ ebp - 0x48 ]
call sub_40b1fa
mov ecx [ ebp - 0x48 ]
mov ecx [ ecx + 0x6c ]
call sub_40b5a0
mov edx [ ebp - 0x48 ]
mov [ edx + 0xcc ] 0x0
call [ ReleaseCapture@IAT ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
call sub_428cd0
lea ecx [ ebp - 0x2c ]
call sub_406130
push eax
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x6c ]
call sub_405410
mov ecx [ ebp - 0x48 ]
call sub_40b308
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x88 ]
mov [ ebp - 0x4c ] ecx
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x84 ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x2c ]
call sub_405cf0
mov [ ebp - 0x50 ] eax
lea ecx [ ebp - 0x2c ]
call sub_404fe0
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov edx [ ebp - 0x4c ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x48 ]
call sub_40b308
test eax eax
je r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x78 ]
mov [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x7c ]
mov [ ebp - 0x54 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x50 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x48 ]
call sub_40b308
test eax eax
je r-xdata
push r--data
mov ecx [ ebp - 0x8 ]
call sub_47e4fa
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xbc ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x48 ]
call sub_47a2e8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
push r--data
mov ecx [ ebp - 0x8 ]
call sub_47e4fa
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_48c57e
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0xa8
call sub_40b440
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0xb8 ]
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x58 ]
sub edx 0xe81b
mov [ ebp - 0x58 ] edx
cmp [ ebp - 0x58 ] 0x3
ja r-xdata
lea ecx [ ebp - 0x3c ]
call sub_428cd0
lea ecx [ ebp - 0x3c ]
call sub_406130
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x48 ]
call sub_40b308
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x58 ]
jmp [ eax * 4 + jump_table_40b1ea ]
lea ecx [ ebp - 0x3c ]
call sub_405cf0
test eax eax
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_404fe0
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x5c ] edx
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ecx + 0xc0 ]
mov eax [ ebp - 0xc ]
add eax edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
neg ecx
mov edx [ ebp - 0x48 ]
add ecx [ edx + 0xc0 ]
mov eax [ ebp - 0xc ]
add eax ecx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x1c ]
sub edx [ ecx + 0xbc ]
mov eax [ ebp - 0xc ]
add eax edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
neg ecx
mov edx [ ebp - 0x48 ]
add ecx [ edx + 0xbc ]
mov eax [ ebp - 0xc ]
add eax ecx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x88 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x48 ]
mov esi [ ecx + 0x88 ]
mov edx [ ebp - 0x48 ]
add esi [ edx + 0xc8 ]
lea ecx [ ebp - 0x3c ]
call sub_405cf0
lea eax [ esi + eax - 0x1 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x84 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x48 ]
mov esi [ edx + 0x84 ]
mov eax [ ebp - 0x48 ]
add esi [ eax + 0xc8 ]
lea ecx [ ebp - 0x3c ]
call sub_404fe0
lea ecx [ esi + eax - 0x1 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x60 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x5c ]
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x64 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x48 ]
call sub_40b308
test eax eax
je r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x88 ] edx
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x84 ] eax
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x60 ] eax
push 0x1
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x6c ]
call sub_40b610
sub_40b1fa
push ebp
mov ebp esp
sub esp 0x40
mov [ ebp - 0x40 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x3c ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x38 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x34 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x30 ] edx
lea ecx [ ebp - 0x28 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x28 ]
call sub_406130
push eax
mov ecx [ ebp - 0x40 ]
call sub_4061a0
lea ecx [ ebp - 0x10 ]
call sub_406130
push eax
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x6c ]
call sub_4061a0
mov ecx [ ebp - 0x24 ]
sub ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x3c ]
call sub_406140
push 0x1
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_4065f0
push 0x403
push 0x0
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x6c ]
call sub_40b550
mov [ ebp - 0x2c ] eax
call sub_48998f
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x5a0049
lea ecx [ ebp - 0x3c ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x3c ]
call sub_405cf0
push eax
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_40b4b0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x4 ]
push ecx
call [ SelectObject@IAT ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x40 ]
mov ecx [ edx + 0x6c ]
call sub_40b520
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
push eax
call [ SelectObject@IAT ]
sub_40b308
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb8 ] 0xe81b
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xb8 ] 0xe81e
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40b346
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb8 ] 0xe81e
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xb8 ] 0xe81d
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0xc8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
sub_40b3a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a3dd
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40b3d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_40b400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0xc ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_40b440
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
add eax [ ecx + 0xc ]
cdq
sub eax edx
sar eax 0x1
push eax
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
add eax [ ecx + 0x8 ]
cdq
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x8 ]
call sub_404fb0
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40b4b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ PatBlt@IAT ]
mov esp ebp
pop ebp
retn 0x14
sub_40b4e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ ClientToScreen@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_40b500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ GetWindowDC@IAT ]
push eax
call sub_47fc89
mov esp ebp
pop ebp
retn
sub_40b520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ ReleaseDC@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_40b550
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4051a0
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ GetDCEx@IAT ]
push eax
call sub_47fc89
mov esp ebp
pop ebp
retn 0x8
sub_40b5c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_4051a0
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ RedrawWindow@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_40b610
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x4
or al 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xb8 ]
or edx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb8 ] edx
mov esp ebp
pop ebp
retn 0x4
sub_40b640
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ DefWindowProcA@IAT ]
pop ebp
retn 0x10
sub_40b660
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a270
mov eax [ ebp - 0x4 ]
mov [ eax + 0xd4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40b68c
push ebp
mov ebp esp
push 0xffffffff
push sub_4972b9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xd4 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
call sub_40a3dd
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xd4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
push 0x1
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
call [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
sub_40b724
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40a426
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x18
push rw-data
mov ecx [ ebp - 0x8 ]
call sub_47bc7c
sub_40b76c
push ebp
mov ebp esp
push 0xffffffff
push sub_4972cd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
mov [ ebp - 0x34 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x34 ]
call sub_48495f
cmp eax 0xffffffff
jne r-xdata
push 0xac
call sub_405cd0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_4036f0
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0xd4 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0xd4 ] eax
mov [ ebp - 0x10 ] 0x50a00000
push 0x1
mov ecx [ ebp - 0x34 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_40b400
push eax
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0xd4 ]
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0xd4 ]
mov edx [ eax ]
call [ edx + 0xb8 ]
test eax eax
jne r-xdata
mov [ ebp - 0x3c ] 0x0
push 0x1
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
mov ecx [ ebp - 0x2c ]
call [ edx + 0x4 ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ eax + 0xd4 ] 0x0
xor eax eax
jmp r-xdata
sub_40b87e
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_405500
push 0x2d
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0x10 ] eax
push 0x2e
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x10
mov [ ebp - 0x8 ] 0x10
push 0x14
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
sub ecx [ ebp - 0x4 ]
push ecx
push 0x8
push 0x8
push 0x0
mov edx [ ebp - 0x14 ]
mov ecx [ edx + 0xd4 ]
call sub_47bd57
mov esp ebp
pop ebp
retn 0xc
sub_40b8fd
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x0
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_40a55e
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0xc
sub_40b930
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40b68c
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40b960
push ebp
mov ebp esp
push 0xffffffff
push sub_4972e9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40a270
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_401260
mov eax [ ebp - 0x10 ]
mov [ eax + 0xdc ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40b9c7
push ebp
mov ebp esp
push 0xffffffff
push sub_49730b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x18 ]
add ecx 0xd4
call sub_480765
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xdc ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
add ecx 0xd4
call sub_401380
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
call sub_40a3dd
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xdc ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
push 0x1
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
call [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
sub_40ba7f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40a426
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x18
push rw-data
mov ecx [ ebp - 0x8 ]
call sub_47bc7c
sub_40bac7
push ebp
mov ebp esp
push 0xffffffff
push sub_49731f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
mov [ ebp - 0x70 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x70 ]
call sub_48495f
cmp eax 0xffffffff
jne r-xdata
push 0x3c
call sub_405cd0
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x54 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x74 ] 0x0
mov ecx [ ebp - 0x54 ]
call sub_42c8d0
mov [ ebp - 0x74 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
push 0x3c
push 0x0
lea ecx [ ebp - 0x48 ]
push ecx
call sub_467a10
add esp 0xc
mov [ ebp - 0x48 ] 0x5a
push rw-data
lea edx [ ebp - 0x2c ]
push edx
call [ lstrcpyA@IAT ]
mov [ ebp - 0x31 ] 0x80
push 0x0
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x70 ]
add ecx 0xd4
call sub_489de7
xor eax eax
mov ecx [ ebp - 0x70 ]
mov edx [ ecx + 0xdc ]
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov ecx [ ebp - 0x74 ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x70 ]
mov eax [ ebp - 0x50 ]
mov [ edx + 0xdc ] eax
mov [ ebp - 0x4c ] 0x50b10100
push 0x84
mov ecx [ ebp - 0x70 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_40b400
push eax
mov edx [ ebp - 0x4c ]
push edx
mov eax [ ebp - 0x70 ]
mov ecx [ eax + 0xdc ]
call sub_489f45
test eax eax
jne r-xdata
mov [ ebp - 0x78 ] 0x0
push 0x1
mov ecx [ ebp - 0x68 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x68 ]
call [ edx + 0x4 ]
mov [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax + 0xdc ] 0x0
xor eax eax
jmp r-xdata
sub_40bc0b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
push 0x14
mov eax [ ebp + 0x10 ]
sub eax 0x10
push eax
mov ecx [ ebp + 0xc ]
sub ecx 0x10
push ecx
push 0x8
push 0x8
push 0x0
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xdc ]
call sub_47bd57
mov esp ebp
pop ebp
retn 0xc
sub_40bc64
push ebp
mov ebp esp
sub esp 0x210
mov [ ebp - 0x210 ] ecx
mov eax [ ebp - 0x210 ]
mov ecx [ eax + 0xdc ]
call sub_407e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x210 ]
mov ecx [ edx + 0xdc ]
call sub_407ef0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
lea eax [ ebp - 0x20c ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x210 ]
mov ecx [ edx + 0xdc ]
call sub_40bd40
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + ecx - 0x20c ] 0x0
lea edx [ ebp - 0x20c ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push ecx
push 0x419
call sub_402850
mov ecx eax
call sub_402890
jmp r-xdata
sub_40bd10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40b9c7
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40bd40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x189
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_40bd70
push ebp
mov ebp esp
push 0xffffffff
push sub_497366
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40a270
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_4616f0
mov [ ebp - 0x4 ] 0x1
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_460f70
mov [ ebp - 0x4 ] 0x2
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x1d0
call sub_4614f0
mov [ ebp - 0x4 ] 0x3
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
call sub_4376e0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x490 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x494 ] 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x498 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x49c ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4a4 ] 0x2
mov edx [ ebp - 0x10 ]
mov [ edx + 0x4a8 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40be54
push ebp
mov ebp esp
push 0xffffffff
push sub_4973b5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x4a8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x14 ]
add ecx 0x22c
call sub_437746
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
add ecx 0x1d0
call sub_40d3e0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
add ecx 0xec
call sub_40d370
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
call sub_46174e
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_40a3dd
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4a8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_47c3de
add esp 0x4
sub_40bf1b
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x24 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40a426
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x28
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x80 ] ecx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x84 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x90 ] ecx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x94 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x48c ] ecx
push rw-data
mov ecx [ ebp - 0x8 ]
call sub_47bc7c
mov edx [ ebp + 0x2c ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40c27b
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40c546
sub_40bfaf
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_48495f
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0xd4
call sub_461c5e
mov ecx [ ebp - 0x28 ]
call sub_40c450
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx 0xec
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0xec ]
call [ eax + 0xd0 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_428cd0
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx 0xec
call sub_4061a0
lea ecx [ ebp - 0x24 ]
call sub_404fe0
add eax 0x4
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x28 ]
add ecx 0x1d0
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x1d0 ]
call [ edx + 0xd0 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1d0
call sub_4061a0
lea ecx [ ebp - 0x24 ]
call sub_404fe0
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x4 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x80 ]
sub edx 0x10
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
add eax 0x4
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x84 ]
sub edx eax
mov [ ebp - 0x8 ] edx
push 0x422
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push 0x52810000
mov ecx [ ebp - 0x28 ]
add ecx 0x22c
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x22c ]
call [ eax + 0xb8 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
sub_40c0f5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40c126
mov esp ebp
pop ebp
retn 0xc
sub_40c126
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x18 ]
call sub_428cd0
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x20 ]
add ecx 0xec
call sub_4061a0
push 0x15
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
push 0x8
push 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0xec
call sub_47bd57
lea ecx [ ebp - 0x18 ]
call sub_404fe0
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x4 ]
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1d0
call sub_4061a0
mov [ ebp - 0x8 ] 0x15
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x4a4 ] 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
or edx 0x40
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x4a4 ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
or dl 0x80
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
push 0x8
push 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0x1d0
call sub_47bd57
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_404fe0
add eax 0x4
mov ecx [ ebp - 0x1c ]
sub ecx eax
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x8 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
push 0x8
push 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0x1d0
call sub_47bd57
mov ecx [ ebp - 0x8 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
push 0x8
push 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0x1d0
call sub_47bd57
lea ecx [ ebp - 0x18 ]
call sub_404fe0
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x4 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
push 0x14
mov ecx [ ebp - 0x4 ]
add ecx 0x4
mov edx [ ebp - 0x1c ]
sub edx ecx
push edx
mov eax [ ebp + 0x8 ]
sub eax 0x10
push eax
mov ecx [ ebp - 0x4 ]
push ecx
push 0x8
push 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0x22c
call sub_47bd57
mov esp ebp
pop ebp
retn 0x8
sub_40c27b
push ebp
mov ebp esp
push 0xffffffff
push sub_4973d2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
push esi
mov [ ebp - 0x54 ] ecx
push sub_40a170
push sub_40a150
push 0x3
push 0x10
lea eax [ ebp - 0x40 ]
push eax
call sub_467f48
mov [ ebp - 0x4 ] 0x0
push rw-data
lea ecx [ ebp - 0x40 ]
call sub_47c7b1
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] 0x0
push rw-data
lea ecx [ ebp - 0x30 ]
call sub_47c7b1
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
push rw-data
lea ecx [ ebp - 0x20 ]
call sub_47c7b1
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x54 ]
mov edx [ ecx + 0x494 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x54 ]
cmp [ eax + 0x48c ] 0x0
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0x80 ]
sub ecx 0x8
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ecx + 0x90 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
imul eax eax 0x3
cdq
mov ecx 0xa
idiv ecx
mov [ ebp - 0x3c ] eax
mov edx [ ebp - 0x3c ]
shl edx 0x1
mov eax [ ebp - 0x10 ]
sub eax edx
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x10 ]
imul eax eax 0x3
cdq
mov ecx 0xa
idiv ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x50 ] 0x0
jmp r-xdata
push 0x2d
call [ GetSystemMetrics@IAT ]
mov esi eax
push 0x2
call [ GetSystemMetrics@IAT ]
lea esi [ eax + esi * 2 + 0x10 ]
push 0x2d
call [ GetSystemMetrics@IAT ]
add esi eax
mov edx [ ebp - 0x10 ]
sub edx esi
mov [ ebp - 0x10 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x50 ] 0x3
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp + 0x8 ]
fild [ eax + edx * 4 ]
fdiv [ r--data ]
fstp [ ebp - 0x4c ]
fild [ ebp - 0x10 ]
fmul [ ebp - 0x4c ]
sub esp 0x8
fstp [ esp ]
call sub_411fa2
add esp 0x8
mov ecx [ ebp - 0x50 ]
shl ecx 0x4
mov [ ebp + ecx - 0x3c ] eax
jmp r-xdata
mov ecx [ ebp - 0x54 ]
add ecx 0xec
call sub_40d400
mov [ ebp - 0x44 ] eax
mov edx [ ebp - 0x44 ]
push edx
lea eax [ ebp - 0x40 ]
push eax
push 0x3
mov ecx [ ebp - 0x54 ]
mov edx [ ecx + 0x49c ]
push edx
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0x498 ]
push ecx
mov ecx [ ebp - 0x54 ]
add ecx 0x22c
call sub_4377cc
mov [ ebp - 0x4 ] 0xffffffff
push sub_40a170
push 0x3
push 0x10
lea edx [ ebp - 0x40 ]
push edx
call sub_467e54
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x50 ]
add ecx 0x1
mov [ ebp - 0x50 ] ecx
sub_40c469
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x490 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x494 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x498 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x49c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
mov [ edx + 0x4a0 ] eax
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40c546
mov esp ebp
pop ebp
retn 0x14
sub_40c4bc
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x494 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x498 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x49c ] edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x22c
call sub_43cd53
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x494 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x498 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x49c ]
mov [ ebp - 0x8 ] edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1d0
call sub_461561
mov esp ebp
pop ebp
retn 0xc
sub_40c546
push ebp
mov ebp esp
push 0xffffffff
push sub_4973e5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
mov [ ebp - 0x44 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x20 ] 0xffffffff
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x494 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x498 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x49c ]
mov [ ebp - 0x14 ] edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x1d0
call sub_461561
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x4a8 ] 0x0
je r-xdata
push 0x1
mov ecx [ ebp - 0x44 ]
add ecx 0x22c
call sub_439380
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x490 ] 0x0
je r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4a8 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x44 ]
mov [ edx + 0x4a8 ] 0x0
push 0x0
push 0x0
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x44 ]
add ecx 0xec
call sub_461188
mov ecx [ ebp - 0x44 ]
add ecx 0xec
call sub_461150
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x44 ]
call sub_40c450
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_402780
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x44 ]
mov ecx [ edx + 0x490 ]
call sub_404f70
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x4a0 ]
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
lea ecx [ ecx + eax - 0x1 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4a0 ]
mov ecx [ ebp - 0x30 ]
add eax [ ecx + 0x4 ]
cmp eax [ ebp - 0x24 ]
jbe r-xdata
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x40 ]
mov [ ecx + 0x4a8 ] edx
mov ecx [ ebp - 0x44 ]
call sub_40d440
push eax
xor eax eax
cmp [ ebp + 0x8 ] 0x0
sete al
push eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x4a8 ]
push edx
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4a0 ]
push eax
mov ecx [ ebp - 0x44 ]
mov ecx [ ecx + 0x490 ]
call sub_436b54
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4a8 ]
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x22c
call sub_439443
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x22c
call sub_43cb1e
push 0x0
push 0x0
mov ecx [ ebp - 0x44 ]
add ecx 0x22c
call sub_43cb7b
jmp r-xdata
mov ecx [ ebp - 0x44 ]
call sub_40c9bc
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x420
lea ecx [ ebp - 0x38 ]
call sub_47e84a
push 0x0
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_4027c0
push eax
call sub_4840c3
push 0x1
mov ecx [ ebp - 0x44 ]
call sub_40cf69
push 0x0
push 0x0
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x44 ]
add ecx 0xec
call sub_461188
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_47c674
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x49c ]
push eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x498 ]
push edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x494 ]
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x22c
call sub_43cd53
push 0x1
mov ecx [ ebp - 0x44 ]
add ecx 0x22c
call sub_405450
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x49c ]
push eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x498 ]
push edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x494 ]
push ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4a0 ]
push eax
mov ecx [ ebp - 0x44 ]
mov ecx [ ecx + 0x490 ]
call sub_404f70
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0xec
call sub_461188
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x44 ]
call sub_40cf69
jmp r-xdata
sub_40c83b
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x7
ja r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
jmp [ edx * 4 + jump_table_40c8cb ]
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40c546
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40ca57
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40cb60
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40cc3e
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40cd45
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40ce0a
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40cf0b
jmp r-xdata
push 0x0
push 0x80f6
push 0x111
call sub_402850
mov ecx eax
call sub_402890
sub_40c8eb
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0xec
call sub_461150
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_40c450
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_402780
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x4a8 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4a8 ] edx
mov ecx [ ebp - 0x18 ]
call sub_40d440
push eax
push 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4a8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4a0 ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x490 ]
call sub_436b54
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4a8 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x22c
call sub_439443
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x4a8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_47c3de
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40c9bc
push ebp
mov ebp esp
push 0xffffffff
push sub_4973f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x494 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push 0x407
call sub_4840fb
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x18 ]
push 0xffffffff
push 0x1
push 0x405
call sub_4840fb
sub eax 0x1
neg eax
sbb eax eax
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40ca57
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
call sub_43b5ba
mov ecx [ ebp - 0x10 ]
add ecx 0x184
call sub_402970
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40c450
mov ecx eax
call sub_402780
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x490 ]
call sub_404f70
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4a0 ]
mov ecx [ ebp - 0xc ]
add eax [ ecx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4a0 ]
lea eax [ edx + eax * 2 ]
cmp eax [ ebp - 0x4 ]
jbe r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4a0 ]
mov eax [ ebp - 0xc ]
add edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4a0 ] edx
mov ecx [ ebp - 0x10 ]
call sub_40c8eb
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
call sub_43b153
push 0x0
push 0x0
push 0x1
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4a0 ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x490 ]
call sub_404f70
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_461188
mov ecx [ ebp - 0x10 ]
call sub_40c9bc
test eax eax
jne r-xdata
jmp r-xdata
sub_40cb60
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
call sub_43b5ba
mov ecx [ ebp - 0x10 ]
add ecx 0x184
call sub_402970
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40c450
mov ecx eax
call sub_402780
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x490 ]
call sub_404f70
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ edx + 0x4a0 ]
cmp ecx [ eax + 0x4 ]
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ edx + 0x4a0 ]
sub ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x4a0 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40c8eb
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
call sub_43b153
push 0x0
push 0x0
push 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4a0 ]
push ecx
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x490 ]
call sub_404f70
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_461188
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40cc3e
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
call sub_43b5ba
mov ecx [ ebp - 0x10 ]
add ecx 0x184
call sub_402970
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40c450
mov ecx eax
call sub_402780
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x490 ]
call sub_404f70
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4a0 ]
mov ecx [ ebp - 0xc ]
add eax [ ecx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4a0 ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
lea eax [ eax + edx + 0x1 ]
cmp eax [ ebp - 0x4 ]
jbe r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4a0 ]
add edx 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x4a0 ] edx
mov ecx [ ebp - 0x10 ]
call sub_40c8eb
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
call sub_43b153
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4a0 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x490 ]
call sub_404f70
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_461188
mov ecx [ ebp - 0x10 ]
call sub_40c9bc
test eax eax
jne r-xdata
jmp r-xdata
sub_40cd45
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x0
mov ecx [ ebp - 0xc ]
add ecx 0x22c
call sub_43b5ba
mov ecx [ ebp - 0xc ]
add ecx 0x184
call sub_402970
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_40c450
mov ecx eax
call sub_402780
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4a0 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4a0 ]
sub eax 0x1
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x4a0 ] eax
mov ecx [ ebp - 0xc ]
call sub_40c8eb
push 0x1
mov ecx [ ebp - 0xc ]
add ecx 0x22c
call sub_43b153
push 0x0
push 0x0
push 0x1
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4a0 ]
push eax
mov ecx [ ebp - 0xc ]
mov ecx [ ecx + 0x490 ]
call sub_404f70
push eax
mov ecx [ ebp - 0xc ]
add ecx 0xec
call sub_461188
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40ce0a
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x22c
call sub_43b463
test eax eax
jne r-xdata
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x22c
call sub_43b5ba
mov ecx [ ebp - 0x14 ]
add ecx 0x184
call sub_402970
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40cff0
mov ecx eax
call sub_45d2ee
test eax eax
je r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40c450
mov ecx eax
call sub_402780
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
mov ecx [ edx + 0x490 ]
call sub_404f70
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0x4 ]
cmp ecx [ ebp - 0xc ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x4a0 ] eax
mov ecx [ ebp - 0x14 ]
call sub_40c8eb
push 0x1
mov ecx [ ebp - 0x14 ]
add ecx 0x22c
call sub_43b153
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4a0 ]
push edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x490 ]
call sub_404f70
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0xec
call sub_461188
mov ecx [ ebp - 0x14 ]
call sub_40c9bc
test eax eax
jne r-xdata
jmp r-xdata
sub_40cf0b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
push 0x1
push 0x419
call sub_4840fb
cmp eax 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40cf69
mov ecx [ ebp - 0x4 ]
add ecx 0xd4
call sub_463370
mov ecx [ ebp - 0x4 ]
add ecx 0xec
call sub_4612f8
push 0x0
push 0x0
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0xec
call sub_461188
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40cf69
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4a8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4a8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x4a8 ] 0x0
push 0x1
mov ecx [ ebp - 0xc ]
add ecx 0x22c
call sub_439380
mov ecx [ ebp - 0xc ]
call sub_40cff0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0xffffffff
mov ecx [ ebp - 0xc ]
add ecx 0xec
call sub_461169
mov esp ebp
pop ebp
retn 0x4
push 0x0
push 0x1
push 0x1
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_45d263
sub_40cff0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x0
push 0x0
call sub_402850
mov ecx eax
call sub_48a6e8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_48c57e
mov [ ebp - 0x8 ] eax
sub_40d029
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_40cff0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4a8 ]
mov eax [ ebp - 0x8 ]
add edx [ eax + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4a0 ]
mov edx [ ebp - 0x8 ]
add ecx [ edx + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_45b46b
sub_40d07e
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x184
call sub_402970
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40c450
mov ecx eax
call sub_402780
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x4a0 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
lea edx [ edx + ecx - 0x1 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x4a0 ]
jae r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
sub eax [ edx + 0x4a0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ eax + edx - 0x1 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x14 ]
ja r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x14 ]
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x4a0 ]
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x14 ]
jbe r-xdata
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40c546
mov eax 0x1
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
sub ecx [ eax + 0x4a0 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_40d177
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_48d484
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_40a55e
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x90 ]
mov edx [ eax + 0x94 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40d1d2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40d460
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40d243
mov esp ebp
pop ebp
retn 0x8
sub_40d1fb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40a78b
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
and edx 0x40
test edx edx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
and eax 0x40
push eax
mov ecx [ ebp - 0x4 ]
call sub_40d243
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
and ecx 0x80
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40d243
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x490 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40cff0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
push 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_45d263
sub_40d283
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x2
jle r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x4a4 ]
je r-xdata
mov eax 0x1
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4a4 ] eax
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_405410
lea ecx [ ebp - 0x10 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x10 ]
call sub_405cf0
push eax
mov ecx [ ebp - 0x14 ]
call sub_40c126
push 0x1
mov ecx [ ebp - 0x14 ]
call sub_405450
sub_40d318
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x22c
call sub_4169d5
mov esp ebp
pop ebp
retn 0x8
sub_40d340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40be54
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40d370
push ebp
mov ebp esp
push 0xffffffff
push sub_497434
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_47c674
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_48a0bf
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489ea7
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40d400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x31
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
push eax
call sub_40d430
mov esp ebp
pop ebp
retn
sub_40d480
push ebp
mov ebp esp
push 0xffffffff
push sub_49744a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0xb0
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_40d4f9
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40d4f9
push ebp
mov ebp esp
push 0xffffffff
push sub_49746c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x9e
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x90
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0xac ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8c ] 0x0
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x90
call sub_47c7b1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x94 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x98 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x9c ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xa0 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xa4 ] 0xffffffff
mov edx [ ebp - 0x10 ]
mov [ edx + 0xa8 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov [ eax + 0x8c ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x94 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x98 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x9c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
push rw-data
mov edx [ ebp - 0x10 ]
add edx 0x90
push edx
call sub_475837
add esp 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0xa8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov [ eax + 0xa4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ eax + 0xa0 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_40d661
push ebp
mov ebp esp
push 0xffffffff
push sub_49747f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x90
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40d6b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x3f3
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0x90
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov edx [ ebp - 0x4 ]
add edx 0x94
push edx
push 0x3f7
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0x98
push ecx
push 0x3fc
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0x9c
push eax
push 0x401
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0xa0
push edx
push 0x776
mov eax [ ebp + 0x8 ]
push eax
call sub_483e10
mov ecx [ ebp - 0x4 ]
add ecx 0xa4
push ecx
push 0x780
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov eax [ ebp - 0x4 ]
add eax 0xa8
push eax
push 0x76c
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483e10
mov esp ebp
pop ebp
retn 0x4
sub_40d79e
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_4786a4
push 0x3f1
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
push 0x40
push 0x4
mov ecx [ ebp - 0x8 ]
call sub_40d980
push 0x3ef
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x4 ] eax
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_40d950
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_40d7ee
push ebp
mov ebp esp
push 0xffffffff
push sub_497492
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_47b0ce
mov eax [ ebp - 0x24 ]
mov [ eax + 0xac ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x24 ]
add edx 0x90
push edx
call sub_4113b1
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0x4
jl r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x14 ]
call sub_401740
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x40
push 0x4
push 0x3e9
lea eax [ ebp - 0x1c ]
push eax
call sub_47584a
add esp 0x10
push 0x0
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
call sub_4840c3
push 0x3ef
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x18 ]
call sub_401740
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x40
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xac ] 0x1
mov ecx [ ebp - 0x24 ]
call sub_48d884
sub_40d920
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d661
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40d950
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0xc5
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_40d980
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
shl ecx 0x10
or eax ecx
push eax
push 0x0
push 0x465
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_40d9c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40da09
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] 0x0
sub_40da47
push ebp
mov ebp esp
push 0xffffffff
push sub_4974a9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40d9c0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_403510
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_403530
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_403550
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40daba
push ebp
mov ebp esp
push 0xffffffff
push sub_4974bc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_40db02
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_40da09
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40db02
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_40dbf0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_403510
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_403530
mov eax [ ebp - 0x14 ]
mov [ eax + 0x18 ] 0x0
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40dbc0
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x1
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov ecx [ ebp - 0xc ]
call [ edx ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_40db90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40da09
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_40dbc0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_41b1b0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40dbf0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_41b1b0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
sub_40dc20
push ebp
mov ebp esp
push 0xffffffff
push sub_4974f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x1c ]
push eax
push 0xc6
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_401690
mov [ ebp - 0x4 ] 0x1
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_430630
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x168 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x16c ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x170 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x18 ]
mov [ ecx + 0x174 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x5c ] 0xffffffff
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_47c7b1
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x18
sub_40dcf0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3f8
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov eax [ ebp - 0x4 ]
add eax 0x60
push eax
push 0x466
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov esp ebp
pop ebp
retn 0x4
sub_40dd43
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
cmp eax 0xffffffff
jne r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_40dd68
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x5c ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40ddcd
mov ecx [ ebp - 0x4 ]
call sub_40deba
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
push 0x466
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
xor eax eax
mov esp ebp
pop ebp
retn
sub_40ddcd
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x174 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x170 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x16c ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x168 ]
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x64
call sub_43081a
mov edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0x64
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x64 ]
call [ edx + 0xd0 ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_428cd0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x64
call sub_4061a0
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
push ecx
push 0x3f8
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov ecx eax
call sub_4061a0
mov edx [ ebp - 0x4 ]
add edx 0x4
sub edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_406140
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_4803ee
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_406130
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x64
call sub_406160
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40deba
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
xor ecx ecx
cmp [ eax + 0x5c ] 0x1
sete cl
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x64
call sub_430cfc
mov esp ebp
pop ebp
retn
sub_40dee5
push ebp
mov ebp esp
push 0xffffffff
push sub_497504
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
add eax 0x60
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
call sub_4036e0
mov ecx eax
call sub_43272c
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x60
call sub_47c761
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47b0ce
sub_40df63
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_47b0ce
mov ecx [ ebp - 0x8 ]
add ecx 0x60
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
push 0xffffffff
push 0x0
push 0x403
call sub_4840fb
push 0x466
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_47be0f
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x64
call sub_430b1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x170 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x168 ]
sub eax 0x1
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x174 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
add edx 0x174
push edx
mov eax [ ebp - 0x8 ]
add eax 0x170
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x64
call sub_430cd3
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_478709
sub_40e015
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x170 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x174 ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
sub_40e040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e070
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40e070
push ebp
mov ebp esp
push 0xffffffff
push sub_497525
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_4060a0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40e12b
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
cmp [ ebp + 0x8 ] 0xd
je r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40a1e0
mov [ ebp - 0x10 ] eax
push 0xfffffff4
mov eax [ ebp - 0x10 ]
push eax
call [ GetWindowLongA@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
push eax
push 0x4e
mov ecx [ ebp - 0x14 ]
call sub_4066d0
mov ecx eax
call sub_402890
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1b
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_405500
sub_40e19c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0xd
je r-xdata
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x1b
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
sub_40e1c9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0xd
je r-xdata
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x1b
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
sub_40e1f6
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40b5f0
mov ecx [ ebp - 0x14 ]
call sub_40a1e0
mov [ ebp - 0x10 ] eax
push 0xfffffff4
mov ecx [ ebp - 0x10 ]
push ecx
call [ GetWindowLongA@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1b
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
push eax
push 0x4e
mov ecx [ ebp - 0x14 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn 0x4
sub_40e260
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e0ef
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40e290
push ebp
mov ebp esp
push 0xffffffff
push sub_49753a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0xf8
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_40e309
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40e309
push ebp
mov ebp esp
push 0xffffffff
push sub_49756b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x9f
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_40e940
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x10 ]
mov [ eax + 0xf4 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_47c7b1
mov edx [ ebp - 0x10 ]
mov [ edx + 0xcc ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xd0 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xd4 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0xd8 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xdc ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xe0 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0xe4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xe8 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xec ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push eax
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
push ecx
call sub_475837
add esp 0xc
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0xe4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0xcc ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ edx + 0xd0 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov [ edx + 0xe8 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ edx + 0xd4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov [ edx + 0xd8 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov [ edx + 0xdc ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov [ edx + 0xe0 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
mov [ edx + 0xec ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov [ edx + 0xf0 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_40e4cb
push ebp
mov ebp esp
push 0xffffffff
push sub_49758d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_4765a7
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40e534
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x42b
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xc8
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov edx [ ebp - 0x4 ]
add edx 0xcc
push edx
push 0x3f7
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0xd0
push ecx
push 0x3fc
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0xd4
push eax
push 0x42a
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0xd8
push edx
push 0x42d
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0xdc
push ecx
push 0x42e
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0xe0
push eax
push 0x440
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0xe4
push edx
push 0x3f3
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0xe8
push ecx
push 0x401
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0xec
push eax
push 0x44e
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov esp ebp
pop ebp
retn 0x4
sub_40e661
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_4786a4
push 0x0
push 0x6
push 0x0
mov ecx [ ebp - 0xc ]
add ecx 0x8c
call sub_4765df
push 0x1
mov ecx [ ebp - 0xc ]
add ecx 0x8c
call sub_40e9c0
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0xf0 ]
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0x8c
call sub_40e990
mov ecx [ ebp - 0xc ]
call sub_40e6f5
push 0x3f1
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
push 0x4
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40d980
push 0x3ef
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x4 ] eax
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40d950
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_40e6f5
push ebp
mov ebp esp
push 0xffffffff
push sub_4975a0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0xf0 ]
and ecx 0x80000001
jns r-xdata
neg ecx
sbb ecx ecx
and ecx 0x5
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0xf0 ]
cdq
sub eax edx
sar eax 0x1
push eax
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x42c
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
dec ecx
or ecx 0xfffffffe
inc ecx
sub_40e79a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
call sub_42ed90
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xf0 ] eax
mov ecx [ ebp - 0x4 ]
call sub_40e6f5
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_47af5c
mov esp ebp
pop ebp
retn 0xc
sub_40e7da
push ebp
mov ebp esp
push 0xffffffff
push sub_4975b3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_47b0ce
mov eax [ ebp - 0x24 ]
mov [ eax + 0xf4 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x24 ]
add edx 0xc8
push edx
call sub_4113b1
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jl r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x14 ]
call sub_401740
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x4
push 0x1
push 0x3e9
lea eax [ ebp - 0x1c ]
push eax
call sub_47584a
add esp 0x10
push 0x0
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
call sub_4840c3
push 0x3ef
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x18 ]
call sub_401740
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x4
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xf4 ] 0x1
mov ecx [ ebp - 0x24 ]
call sub_48d884
sub_40e910
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40e4cb
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40e960
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4765a7
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40e990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x405
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_40e9c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x404
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_40e9f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4975d5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
push eax
push 0xa8
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x60 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_40ea6f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x402
mov edx [ ebp + 0x8 ]
push edx
call sub_483ea1
mov esp ebp
pop ebp
retn 0x4
sub_40eacd
push ebp
mov ebp esp
push 0xffffffff
push sub_4975e8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x20 ] ecx
push 0x402
mov ecx [ ebp - 0x20 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
push 0x104
mov ecx [ ebp - 0x14 ]
call sub_4029d0
mov ecx [ ebp - 0x14 ]
call sub_402ad0
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x60 ]
call sub_40efb0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
mov ecx [ edx + 0x60 ]
call sub_40efd0
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x14 ]
call sub_402aa0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_4029a0
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_40eb9b
push ebp
mov ebp esp
push 0xffffffff
push sub_497616
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x634
push esi
push edi
mov [ ebp - 0x638 ] ecx
push 0x1
mov ecx [ ebp - 0x638 ]
call sub_47b0ce
push 0x0
push 0x0
push 0x6
push 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x630 ]
call sub_475893
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x338 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx 0x9
mov esi rw-data
lea edi [ ebp - 0x328 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea eax [ ebp - 0x328 ]
push eax
call [ lstrlenA@IAT ]
mov [ ebp - 0x32c ] eax
mov ecx [ ebp - 0x32c ]
mov dl [ ebp + ecx - 0x329 ]
mov [ ebp - 0x334 ] dl
mov [ ebp - 0x330 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x330 ]
movsx edx [ ebp + ecx - 0x328 ]
test edx edx
je r-xdata
mov [ ebp - 0x438 ] 0x0
push rw-data
lea ecx [ ebp - 0x338 ]
call sub_47c7b1
mov ecx [ ebp - 0x638 ]
call sub_40a1e0
mov [ ebp - 0x5d0 ] eax
lea ecx [ ebp - 0x328 ]
mov [ ebp - 0x5c8 ] ecx
mov [ ebp - 0x5bc ] 0x1
lea edx [ ebp - 0x438 ]
mov [ ebp - 0x5b8 ] edx
mov [ ebp - 0x5b4 ] 0x100
lea ecx [ ebp - 0x338 ]
call sub_4027c0
mov [ ebp - 0x5a4 ] eax
mov eax [ ebp - 0x5a0 ]
or ah 0x18
mov [ ebp - 0x5a0 ] eax
mov [ ebp - 0x300 ] 0x20
push 0x0
lea ecx [ ebp - 0x300 ]
push ecx
push 0x400
call sub_402850
mov ecx eax
call sub_402890
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x114 ] 0x0
je r-xdata
mov eax [ ebp - 0x330 ]
movsx ecx [ ebp + eax - 0x328 ]
movsx edx [ ebp - 0x334 ]
cmp ecx edx
jne r-xdata
lea ecx [ ebp - 0x630 ]
call sub_4759f5
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x118
mov [ ebp - 0x5a8 ] eax
jmp r-xdata
mov eax [ ebp - 0x330 ]
mov [ ebp + eax - 0x328 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x338 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x630 ]
call sub_402730
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x634 ]
push ecx
lea ecx [ ebp - 0x630 ]
call sub_475ad0
mov [ ebp - 0x63c ] eax
mov edx [ ebp - 0x63c ]
mov [ ebp - 0x640 ] edx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x640 ]
push eax
mov ecx [ ebp - 0x638 ]
add ecx 0x5c
call sub_47c761
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x634 ]
call sub_47c674
push 0x0
mov ecx [ ebp - 0x638 ]
call sub_47b0ce
mov eax [ ebp - 0x330 ]
add eax 0x1
mov [ ebp - 0x330 ] eax
sub_40edd6
push ebp
mov ebp esp
push 0xffffffff
push sub_497629
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_47b0ce
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_4016b0
test eax eax
je r-xdata
push 0x402
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_402940
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
push 0xffffffff
push 0x0
push 0x403
call sub_4840fb
push 0x402
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
call sub_47be0f
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_48a161
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_4027c0
push eax
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x1
mov edx [ ebp - 0x24 ]
add edx 0x5c
push edx
push 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x60 ]
call sub_4773c6
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
call sub_478709
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x24 ]
mov ecx [ edx + 0x60 ]
call sub_4773ff
push 0x1
mov eax [ ebp - 0x24 ]
add eax 0x5c
push eax
push 0x0
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x60 ]
call sub_4773c6
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_40ef30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40ef60
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40ef60
push ebp
mov ebp esp
push 0xffffffff
push sub_497649
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40efd0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0xc ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40f010
push ebp
mov ebp esp
push 0xffffffff
push sub_4976a2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xba
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_4016f0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_4016f0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
call sub_401690
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_47c7b1
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_40f0d2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x442
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x98
push eax
push 0x441
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0xd4
push edx
push 0x441
mov eax [ ebp + 0x8 ]
push eax
call sub_483d6c
mov ecx [ ebp - 0x4 ]
add ecx 0xd8
push ecx
push 0x442
mov edx [ ebp + 0x8 ]
push edx
call sub_483d6c
mov esp ebp
pop ebp
retn 0x4
sub_40f180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40f1b0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40f1b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4976e3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
call sub_47c674
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_47c674
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_48a1c5
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a1c5
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40f240
push ebp
mov ebp esp
push 0xffffffff
push sub_497705
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
push eax
push 0xb9
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_410070
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x98 ] edx
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_4770bc
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_40f2c0
push ebp
mov ebp esp
push 0xffffffff
push sub_497724
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_4770ef
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489f66
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40f326
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3fd
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov esp ebp
pop ebp
retn 0x4
sub_40f364
push ebp
mov ebp esp
push 0xffffffff
push sub_497739
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push esi
push edi
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
call sub_4786a4
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x98 ]
call sub_41b1b0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x28 ]
call sub_40f613
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0x98 ]
call sub_402780
mov [ ebp - 0x10 ] eax
push 0xbc
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x24 ]
call sub_40ff60
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_47c761
mov edx [ ebp - 0x10 ]
add edx 0x4
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x4
call sub_47c761
push 0x1
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x8
push ecx
mov ecx [ ebp - 0x28 ]
call sub_40f4a9
mov esi [ ebp - 0x10 ]
add esi 0x90
mov edi [ ebp - 0x14 ]
add edi 0x90
mov ecx 0x8
[ edi ] [ esi ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xb8 ]
mov [ edx + 0xb8 ] ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x28 ]
add ecx 0x9c
call sub_407e30
jmp r-xdata
sub_40f4a9
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x8
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x54 ]
mov [ ecx + 0x54 ] eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
mov eax [ esi + eax * 4 + 0x20 ]
mov [ edx + ecx * 4 + 0x20 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x5c ]
mov [ eax + 0x5c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x60 ]
mov [ eax + 0x60 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x64 ] edx
mov eax [ ebp + 0xc ]
add eax 0x68
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x68
push ecx
call [ lstrcpyA@IAT ]
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
add ecx 0x40
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x40
call sub_407e10
mov ecx [ ebp + 0xc ]
add ecx 0x40
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x40
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
add ecx 0x40
call sub_416c20
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
add ecx 0x40
call sub_407e30
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_40f613
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_407f50
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_402780
mov [ ebp - 0x4 ] eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40f68e
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_407ec0
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_40f68e
push ebp
mov ebp esp
push 0xffffffff
push sub_49774c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
push rw-data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_475837
add esp 0x10
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_4100c0
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_409900
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_4098d0
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_40f74b
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_407ef0
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_40fa32
test eax eax
je r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_407f20
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_40f68e
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_407ec0
sub_40f7d7
push ebp
mov ebp esp
push 0xffffffff
push sub_497761
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push esi
push edi
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x5c
call sub_407ef0
mov [ ebp - 0x10 ] eax
push 0xbc
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x24 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
mov ecx [ ebp - 0x24 ]
call sub_40ff60
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x9c
call sub_407e30
push 0xffffffff
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_40f68e
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x5c
call sub_407ec0
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] edx
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x8
push ecx
mov ecx [ ebp - 0x30 ]
call sub_40f4a9
mov esi [ ebp - 0x10 ]
add esi 0x90
mov edi [ ebp - 0x14 ]
add edi 0x90
mov ecx 0x8
[ edi ] [ esi ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0xb8 ] 0x0
push 0x1
push 0xffffffff
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x30 ]
call sub_40fa32
test eax eax
je r-xdata
mov [ ebp - 0x38 ] 0x0
push 0x1
mov ecx [ ebp - 0x28 ]
call sub_40ffd0
mov [ ebp - 0x38 ] eax
jmp r-xdata
sub_40f924
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_407ef0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xb8 ] 0x0
je r-xdata
jmp r-xdata
push 0xffffffff
push 0x1
push 0x41b
call sub_4840fb
cmp eax 0x1
jne r-xdata
push 0xffffffff
push 0x10
push 0x41c
call sub_4840fb
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xb4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0xb0
call sub_480765
mov [ ebp - 0x18 ] 0x0
push 0x1
mov ecx [ ebp - 0xc ]
call sub_40ffd0
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_407e60
sub eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
push 0x1
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x9c
call sub_47763d
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_407f20
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_407e60
sub eax 0x1
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_407ec0
sub_40fa32
push ebp
mov ebp esp
push 0xffffffff
push sub_49779b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x9ac
mov [ ebp - 0x9b8 ] ecx
push 0x0
push 0x0
push rw-data
mov eax [ ebp - 0x9b8 ]
add eax 0x9c
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0xb8 ] 0x0
sete al
push eax
push 0x1c
push 0x0
lea ecx [ ebp - 0x9ac ]
call sub_42d286
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x90
push ecx
lea ecx [ ebp - 0xbc ]
call sub_40d4f9
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0x8 ]
add edx 0x8
push edx
lea ecx [ ebp - 0x830 ]
call sub_406d59
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x834 ]
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x96c ]
or al 0x80
mov [ ebp - 0x96c ] eax
lea ecx [ ebp - 0xbc ]
push ecx
lea ecx [ ebp - 0x9ac ]
call sub_48e19d
lea edx [ ebp - 0x830 ]
push edx
lea ecx [ ebp - 0x9ac ]
call sub_48e19d
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x83c ]
call sub_47c761
mov ecx [ ebp + 0x8 ]
add ecx 0x4
push ecx
lea ecx [ ebp - 0x838 ]
call sub_47c761
lea ecx [ ebp - 0x9ac ]
call sub_48df73
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x9b4 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x834 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x830 ]
call sub_406f57
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xbc ]
call sub_40d661
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x9ac ]
call sub_42d32c
mov eax [ ebp - 0x9b4 ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x1
lea edx [ ebp - 0x144 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x9b8 ]
call sub_40f4a9
lea ecx [ ebp - 0x2c ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xa0 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x30 ]
mov [ edx + 0x9c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x90 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x94 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x98 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0xa4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0xa8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov [ edx + 0xac ] eax
lea ecx [ ebp - 0x83c ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c761
lea edx [ ebp - 0x838 ]
push edx
mov ecx [ ebp + 0x8 ]
add ecx 0x4
call sub_47c761
mov [ ebp - 0x9b0 ] 0x1
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x834 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x830 ]
call sub_406f57
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xbc ]
call sub_40d661
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x9ac ]
call sub_42d32c
mov eax [ ebp - 0x9b0 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_40fc9e
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
imul eax eax 0xa
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4027d0
movsx edx al
sub edx 0x30
mov [ ebp - 0x1c ] dl
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x4
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x39
jg r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov al [ ebp - 0x10 ]
and al 0x5f
mov [ ebp - 0x10 ] al
mov cl [ ebp - 0x10 ]
sub cl 0x37
mov [ ebp - 0x10 ] cl
mov dl [ ebp - 0x10 ]
sub dl 0x30
mov [ ebp - 0x10 ] dl
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_40fdc4
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x98 ]
call sub_41b1b0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x98 ]
call sub_407e10
mov ecx [ ebp - 0x24 ]
add ecx 0x9c
call sub_41b1b0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x98 ]
call sub_402780
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x48
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x9c
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x98 ]
call sub_407e30
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xb4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x48
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0xb0
call sub_480765
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov [ ebp - 0x28 ] 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40ffd0
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
sub_40ff0a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_40ff30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40f2c0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_40ff60
push ebp
mov ebp esp
push 0xffffffff
push sub_4977d1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_407d30
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xb0
call sub_401260
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_40ffd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410000
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_410000
push ebp
mov ebp esp
push 0xffffffff
push sub_497801
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xb0
call sub_401380
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_407d50
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_410090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_489f66
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4100c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x181
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_4100f0
push ebp
mov ebp esp
push 0xffffffff
push sub_49781a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x12c
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_410169
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_410169
push ebp
mov ebp esp
push 0xffffffff
push sub_497878
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x9d
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_4016f0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_4016f0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_401690
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_401690
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x124 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx + 0x128 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x104 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x108 ] 0x0
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_47c7b1
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_47c7b1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x114 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x118 ] 0x0
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_47c7b1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x120 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x124 ]
mov edx [ ebp - 0x10 ]
mov eax [ ecx ]
mov [ edx + 0x104 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x124 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + 0x8 ]
mov [ eax + 0x108 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x124 ]
add eax 0xc
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_47c7b1
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x124 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + 0x110 ]
mov [ eax + 0x114 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x124 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x114 ]
mov [ ecx + 0x118 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x124 ]
add ecx 0x118
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_47c7b1
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x124 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x21c ]
mov [ ecx + 0x120 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_410355
push ebp
mov ebp esp
push 0xffffffff
push sub_4978c7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_47c674
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_47c674
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_47c674
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_48a1c5
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a1c5
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4103f4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x40d
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xc8
push eax
push 0x40c
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0x104
push edx
push 0x406
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0x108
push ecx
push 0x40b
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0x10c
push eax
push 0x40c
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov edx [ ebp - 0x4 ]
add edx 0x110
push edx
push 0x408
mov eax [ ebp + 0x8 ]
push eax
call sub_483d6c
mov ecx [ ebp - 0x4 ]
add ecx 0x114
push ecx
push 0x3f8
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov eax [ ebp - 0x4 ]
add eax 0x118
push eax
push 0x443
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0x11c
push edx
push 0x40d
mov eax [ ebp + 0x8 ]
push eax
call sub_483d6c
mov ecx [ ebp - 0x4 ]
add ecx 0x120
push ecx
push 0x459
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov esp ebp
pop ebp
retn 0x4
sub_41050a
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_4786a4
push 0x40a
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
push 0x9
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40d980
push 0x408
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x4 ] eax
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40d950
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x124 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
push rw-data
mov ecx [ ebp - 0xc ]
add ecx 0x110
call sub_47c7b1
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x124 ]
mov ecx [ eax + 0x4 ]
push ecx
push rw-data
mov edx [ ebp - 0xc ]
add edx 0x110
push edx
call sub_475837
add esp 0xc
jmp r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
call sub_47b0ce
mov ecx [ ebp - 0xc ]
call sub_4105bc
mov ecx [ ebp - 0xc ]
call sub_410a54
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_4105bc
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x104 ]
push ecx
push 0x407
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x104 ]
push eax
push 0x408
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x104 ]
push edx
push 0x40a
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x104 ]
push ecx
push 0x40b
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x104 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x108 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x108 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
push 0x40c
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x104 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
push ecx
push 0x444
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_4106c1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x108 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xc8
call sub_47bde8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x108 ]
push eax
push 0x444
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_41073c
push ebp
mov ebp esp
push 0xffffffff
push sub_4978da
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_47b0ce
mov eax [ ebp - 0x24 ]
mov [ eax + 0x128 ] 0x0
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x104 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x118 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x24 ]
add eax 0x110
push eax
call sub_4113b1
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0x128 ] 0x1
mov ecx [ ebp - 0x24 ]
call sub_48d884
mov ecx [ ebp - 0x24 ]
add ecx 0x11c
call sub_4016b0
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x1
jl r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
push 0x408
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x14 ]
call sub_401740
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x11c
push edx
mov ecx [ ebp - 0x24 ]
call sub_4109c7
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x3f4
call sub_4840fb
mov ecx [ ebp - 0x24 ]
add ecx 0x8c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x24 ]
add ecx 0x8c
call sub_401740
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x9
push 0x3f3
lea ecx [ ebp - 0x1c ]
push ecx
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
call sub_4840c3
push 0x408
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x18 ]
call sub_401740
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x9
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0xffffffff
push 0x0
push 0x3f5
call sub_4840fb
mov ecx [ ebp - 0x24 ]
add ecx 0x8c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x24 ]
add ecx 0x8c
call sub_401740
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x108 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x10c
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x10c
push eax
mov ecx [ ebp - 0x24 ]
call sub_4109c7
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x3f4
call sub_4840fb
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_401740
xor eax eax
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3f5
call sub_4840fb
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_401740
xor eax eax
jmp r-xdata
sub_4109c7
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_4027d0
movsx eax al
or al 0x20
mov [ ebp - 0x4 ] al
movsx ecx [ ebp - 0x4 ]
cmp ecx 0x61
jl r-xdata
xor eax eax
jmp r-xdata
movsx edx [ ebp - 0x4 ]
cmp edx 0x7a
jle r-xdata
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x4 ] al
movsx eax [ ebp - 0x4 ]
cmp eax 0x3a
je r-xdata
push 0x2
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x4 ] al
movsx ecx [ ebp - 0x4 ]
cmp ecx 0x5c
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
sub_410a54
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x118 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
call sub_47bde8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x118 ]
push eax
push 0x445
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_410a95
push ebp
mov ebp esp
push 0xffffffff
push sub_4978fc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20c
mov [ ebp - 0x210 ] ecx
push 0x0
push 0x0
push 0x6
push 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x208 ]
call sub_410fa0
mov [ ebp - 0x4 ] 0x0
push 0x1
mov ecx [ ebp - 0x210 ]
call sub_47b0ce
lea ecx [ ebp - 0x208 ]
call sub_4759f5
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x208 ]
call sub_4026e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x208 ]
call sub_4110a3
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x218 ]
push edx
mov ecx [ ebp - 0x210 ]
add ecx 0x10c
call sub_47c761
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20c ]
call sub_47c674
push 0x0
mov ecx [ ebp - 0x210 ]
call sub_47b0ce
sub_410b70
push ebp
mov ebp esp
push 0xffffffff
push sub_49791e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20c
mov [ ebp - 0x210 ] ecx
push 0x0
push 0x0
push 0x6
push 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x208 ]
call sub_410fa0
mov [ ebp - 0x4 ] 0x0
push 0x1
mov ecx [ ebp - 0x210 ]
call sub_47b0ce
lea ecx [ ebp - 0x208 ]
call sub_4759f5
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x208 ]
call sub_4026e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x208 ]
call sub_4110a3
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x218 ]
push edx
mov ecx [ ebp - 0x210 ]
add ecx 0x11c
call sub_47c761
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20c ]
call sub_47c674
push 0x0
mov ecx [ ebp - 0x210 ]
call sub_47b0ce
sub_410c50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410355
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_410c80
push ebp
mov ebp esp
push 0xffffffff
push sub_497954
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x10 ]
push eax
push 0xa5
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416f70
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xa4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xa8 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_410d27
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3ef
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xa0
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov esp ebp
pop ebp
retn 0x4
sub_410d7c
push ebp
mov ebp esp
push 0xffffffff
push sub_497967
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
call sub_4786a4
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xa8 ]
push ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xa4 ]
push eax
push rw-data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_475837
add esp 0x10
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x416
mov ecx [ ebp - 0x18 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
push 0x2
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_40d950
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_410e27
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_47b0ce
mov ecx [ ebp - 0x8 ]
add ecx 0xa0
call sub_4016b0
test eax eax
je r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0xa0
push ecx
call sub_41145e
add esp 0xc
test eax eax
je r-xdata
push 0xffffffff
push 0x0
push 0x3fd
call sub_4840fb
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_47be0f
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3ec
call sub_4840fb
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_401740
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jb r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov al [ ebp - 0x4 ]
mov [ edx + 0xac ] al
mov ecx [ ebp - 0x8 ]
call sub_478709
sub_410ed1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_410f00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410f30
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_410f30
push ebp
mov ebp esp
push 0xffffffff
push sub_497995
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_410fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_4979b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_475893
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x1f8
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
call sub_411190
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x64 ] eax
mov edx [ ebp + 0x14 ]
or edx 0x1
or dh 0x8
mov eax [ ebp - 0x10 ]
mov [ eax + 0x90 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x90 ]
or edx 0x60
mov eax [ ebp - 0x10 ]
mov [ eax + 0x90 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xa4 ] 0xb0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x18
sub_411067
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_476180
push rw-data
push 0x480
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov ecx [ ebp - 0x4 ]
call sub_476180
mov ecx [ ebp - 0x4 ]
call sub_478709
mov esp ebp
pop ebp
retn
sub_4110a3
push ebp
mov ebp esp
push 0xffffffff
push sub_4979eb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x1c ]
add eax 0xf0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c6e2
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x10 ]
call sub_4027a0
sub eax 0x6
push eax
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_4754b7
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_47c674
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov edx [ ebp - 0x18 ]
or edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_411160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4026e0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4111a0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax ]
mov dl [ ecx + rw-data ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4111d5
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax ]
mov dl [ ecx + rw-data ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41120a
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax ]
mov dl [ ecx + rw-data ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41123f
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax ]
mov dl [ ecx + rw-data ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_411274
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov dx [ ecx ]
mov [ ebp - 0x4 ] dx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x1 ]
add ecx eax
mov [ ebp - 0x4 ] cx
jmp r-xdata
mov ax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4112aa
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_411303
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x8
jge r-xdata
jmp r-xdata
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4680b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0xc ]
xor eax eax
mov al [ ecx ]
cdq
mov ecx [ ebp - 0x8 ]
add ecx eax
mov eax [ ebp - 0x4 ]
adc eax edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_411382
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_411303
add esp 0x8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_4113b1
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_4027d0
movsx eax al
cmp eax 0x2d
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0xc ] al
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x30
jl r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x39
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_41145e
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x30
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0xc ] al
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x30
jl r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_411579
add esp 0x8
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x39
jle r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x41
jl r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x39
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x61
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x46
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x66
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_411579
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
imul eax eax 0xa
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4027d0
movsx edx al
sub edx 0x30
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x4
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x8 ]
and ecx 0xff
cmp ecx 0x39
jg r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov al [ ebp - 0x8 ]
and al 0x5f
mov [ ebp - 0x8 ] al
mov cl [ ebp - 0x8 ]
sub cl 0x37
mov [ ebp - 0x8 ] cl
mov dl [ ebp - 0x8 ]
sub dl 0x30
mov [ ebp - 0x8 ] dl
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411659
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
call sub_4027a0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x2
jle r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_411836
add esp 0xc
jmp r-xdata
push 0x1
mov ecx [ ebp + 0xc ]
call sub_4027d0
movsx eax al
cmp eax 0x20
je r-xdata
mov esp ebp
pop ebp
retn
push 0x2
mov ecx [ ebp + 0xc ]
call sub_4027d0
movsx ecx al
cmp ecx 0x20
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4116c0
add esp 0xc
sub_4116c0
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0xc ]
call sub_4027a0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
and eax 0x80000001
jns r-xdata
test eax eax
je r-xdata
dec eax
or eax 0xfffffffe
inc eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
mov [ ecx ] edx
mov eax 0x1
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_4027d0
mov [ ebp - 0x8 ] al
mov edx [ ebp - 0x8 ]
and edx 0xff
cmp edx 0x30
jl r-xdata
mov dl [ ebp - 0x8 ]
or dl 0x20
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0x8 ]
and eax 0xff
cmp eax 0x61
jl r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xff
cmp eax 0x39
jg r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
cmp ecx 0x66
jle r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
sub ecx 0x30
mov [ ebp - 0xc ] cl
jmp r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xff
sub edx 0x57
mov [ ebp - 0xc ] dl
mov al [ ebp - 0xc ]
shl al 0x4
mov [ ebp - 0xc ] al
mov ecx [ ebp - 0x14 ]
add ecx 0x1
push ecx
mov ecx [ ebp + 0xc ]
call sub_4027d0
mov [ ebp - 0x8 ] al
mov edx [ ebp - 0x8 ]
and edx 0xff
cmp edx 0x30
jl r-xdata
mov al [ ebp - 0x8 ]
or al 0x20
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x8 ]
and ecx 0xff
cmp ecx 0x61
jl r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xff
cmp eax 0x39
jg r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xff
cmp edx 0x66
jle r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
sub ecx 0x30
mov dl [ ebp - 0xc ]
or dl cl
mov [ ebp - 0xc ] dl
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xff
sub eax 0x57
mov cl [ ebp - 0xc ]
or cl al
mov [ ebp - 0xc ] cl
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x10 ]
mov al [ ebp - 0xc ]
mov [ edx ] al
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_411836
push ebp
mov ebp esp
sub esp 0x18
mov ecx [ ebp + 0xc ]
call sub_4027a0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_4027d0
mov [ ebp - 0xc ] al
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ ecx ] edx
mov eax 0x1
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x14 ]
mov dl [ ebp - 0x10 ]
mov [ ecx ] dl
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x30
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x20
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x20
jne r-xdata
mov al [ ebp - 0xc ]
or al 0x20
mov [ ebp - 0xc ] al
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x61
jl r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x39
jg r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x14 ]
mov dl [ ebp - 0x10 ]
mov [ ecx ] dl
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x30
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x66
jle r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
sub edx 0x30
mov [ ebp - 0x10 ] dl
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov esp ebp
pop ebp
retn
mov dl [ ebp - 0xc ]
or dl 0x20
mov [ ebp - 0xc ] dl
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x61
jl r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x39
jg r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
sub eax 0x57
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x66
jle r-xdata
mov dl [ ebp - 0x10 ]
shl dl 0x4
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0xc ]
and eax 0xff
sub eax 0x30
mov cl [ ebp - 0x10 ]
or cl al
mov [ ebp - 0x10 ] cl
jmp r-xdata
jmp r-xdata
mov dl [ ebp - 0x10 ]
shl dl 0x4
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0xc ]
and eax 0xff
sub eax 0x57
mov cl [ ebp - 0x10 ]
or cl al
mov [ ebp - 0x10 ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_411a17
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0xa
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x30
mov [ ebp - 0xf ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp + edx - 0x10 ] 0x0
mov eax [ ebp - 0x14 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx 0xa
div ecx
add edx 0x30
mov eax [ ebp - 0x14 ]
mov [ ebp + eax - 0x10 ] dl
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov al [ ebp + ecx - 0x10 ]
xor al [ ebp + edx - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp + ecx - 0x10 ] al
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov cl [ ebp + edx - 0x10 ]
xor cl [ ebp + eax - 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ ebp + edx - 0x10 ] cl
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
mov dl [ ebp + eax - 0x10 ]
xor dl [ ebp + ecx - 0x10 ]
mov eax [ ebp - 0x18 ]
mov [ ebp + eax - 0x10 ] dl
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_47c7b1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
sub edx 0x1
mov [ ebp - 0x14 ] edx
sub_411b06
push ebp
mov ebp esp
push 0xffffffff
push sub_497a20
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov [ ebp - 0x54 ] 0x0
fld [ ebp + 0xc ]
sub esp 0x8
fstp [ esp ]
push rw-data
lea eax [ ebp - 0x4c ]
push eax
call sub_4680cf
add esp 0x10
lea ecx [ ebp - 0x4c ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ ebp - 0x4c ]
push edx
call sub_411c32
add esp 0x8
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_47c6e2
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov edx [ ebp - 0x54 ]
or edx 0x1
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_411b9e
push ebp
mov ebp esp
push 0xffffffff
push sub_497a4a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x4c ]
push eax
push 0xf
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_468121
add esp 0x10
lea eax [ ebp - 0x4c ]
push eax
call [ lstrlenA@IAT ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
call sub_411c32
add esp 0x8
lea edx [ ebp - 0x4c ]
push edx
lea ecx [ ebp - 0x50 ]
call sub_47c6e2
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov ecx [ ebp - 0x54 ]
or ecx 0x1
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_411c32
push ebp
mov ebp esp
push ecx
push 0x2e
mov eax [ ebp + 0x8 ]
push eax
call sub_4681d0
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp + 0xc ]
movsx eax [ edx - 0x1 ]
cmp eax 0x2e
jne r-xdata
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
add ecx [ ebp + 0xc ]
mov [ ecx - 0x1 ] 0x0
mov edx [ ebp + 0xc ]
sub edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x20
jne r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
sub_411cc7
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
cmp edx 0x5c
jne r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call [ CharNextA@IAT ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
movsx eax [ edx ]
test eax eax
je r-xdata
sub_411d0a
push ebp
mov ebp esp
sub esp 0x368
lea eax [ ebp - 0x25c ]
push eax
lea ecx [ ebp - 0x360 ]
push ecx
push 0x104
mov ecx [ ebp + 0x8 ]
call sub_4027c0
push eax
call [ GetFullPathNameA@IAT ]
lea edx [ ebp - 0x360 ]
mov [ ebp - 0x114 ] edx
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x25c ] eax
mov ecx [ ebp + 0xc ]
call sub_47c5ff
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x114 ]
movsx edx [ ecx ]
cmp edx 0x5c
jne r-xdata
mov [ ebp - 0x368 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x25c ]
mov cl [ eax ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_47ca2b
mov edx [ ebp - 0x25c ]
add edx 0x1
mov [ ebp - 0x25c ] edx
mov eax [ ebp - 0x25c ]
mov cl [ eax ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_47ca2b
mov edx [ ebp - 0x25c ]
add edx 0x1
mov [ ebp - 0x25c ] edx
mov [ ebp - 0x364 ] 0x1
cmp [ ebp - 0x368 ] 0x3
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x25c ]
mov al [ edx ]
push eax
mov ecx [ ebp + 0xc ]
call sub_47ca2b
mov ecx [ ebp - 0x25c ]
movsx edx [ ecx ]
cmp edx 0x5c
jne r-xdata
lea edx [ ebp - 0x10c ]
push edx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov [ ebp - 0x118 ] 0x1
mov [ ebp - 0x8 ] 0x1
mov edx [ ebp - 0x25c ]
mov al [ edx ]
push eax
mov ecx [ ebp + 0xc ]
call sub_47ca2b
mov ecx [ ebp - 0x25c ]
add ecx 0x1
mov [ ebp - 0x25c ] ecx
jmp r-xdata
mov eax [ ebp - 0x25c ]
add eax 0x1
mov [ ebp - 0x25c ] eax
jmp r-xdata
cmp [ ebp - 0x364 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10c ]
push ecx
call [ SetCurrentDirectoryA@IAT ]
mov eax 0x1
mov eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x368 ]
add ecx 0x1
mov [ ebp - 0x368 ] ecx
mov eax [ ebp - 0x25c ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x364 ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x258 ]
push ecx
mov edx [ ebp - 0x114 ]
push edx
call [ FindFirstFileA@IAT ]
mov [ ebp - 0x110 ] eax
cmp [ ebp - 0x110 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x25c ]
push ecx
call [ CharNextA@IAT ]
mov [ ebp - 0x25c ] eax
mov edx [ ebp - 0x25c ]
movsx eax [ edx ]
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
call [ SetCurrentDirectoryA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x25c ]
movsx edx [ ecx ]
cmp edx 0x5c
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x118 ] 0x0
je r-xdata
mov ecx [ ebp - 0x114 ]
push ecx
call [ SetCurrentDirectoryA@IAT ]
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x25c ]
mov [ eax ] 0x0
jmp r-xdata
push 0x5c
mov ecx [ ebp + 0xc ]
call sub_47ca2b
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x110 ]
push ecx
call [ FindClose@IAT ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp + 0xc ]
call sub_47ca04
movsx edx [ ebp - 0x22c ]
cmp edx 0x2e
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x25c ]
add edx 0x1
mov [ ebp - 0x25c ] edx
mov eax [ ebp - 0x25c ]
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_411fa2
push ebp
mov ebp esp
sub esp 0x14
fld [ ebp + 0x8 ]
call sub_468344
mov [ ebp - 0x4 ] eax
fld [ ebp + 0x8 ]
fmul [ r--data ]
call sub_468344
push 0x0
push 0xa
push edx
push eax
call sub_468290
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fld [ ebp + 0x8 ]
fmul [ r--data ]
call sub_468344
push 0x0
push 0xa
push edx
push eax
call sub_468290
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0xffffffff
jg r-xdata
jg r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x5
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x14 ] 0xfffffffb
ja r-xdata
sub_412030
push ebp
mov ebp esp
push 0xffffffff
push sub_497acf
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_478919
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_42f1d0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_416ee0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_416ee0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_40e0d0
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
call sub_4770bc
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_4770bc
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x10 ]
mov [ eax + 0x1a4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x1a8 ] 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x1ac ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x1b0
call sub_401260
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x10 ]
add ecx 0x1b8
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x1c8
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x1d8
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x1e8
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x1f8
call sub_428cd0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x208 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x20c ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x210 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x214 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x218 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x21c ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x220 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x224 ] 0xffffffff
mov edx [ ebp - 0x10 ]
mov [ edx + 0x228 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x22c ] 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x234 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x238 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x23c ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
call sub_477524
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_477524
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_412232
push ebp
mov ebp esp
push 0xffffffff
push sub_497b48
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x14 ]
add ecx 0x1b0
call sub_480765
mov ecx [ ebp - 0x14 ]
call sub_413e14
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x1a4 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x14 ]
add ecx 0x1b0
call sub_401380
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_4770ef
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x14 ]
add ecx 0x17c
call sub_4770ef
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x14 ]
add ecx 0x140
call sub_40e0ef
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
add ecx 0x104
call sub_48a21e
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_48a21e
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x3c
call sub_42f243
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_4793ac
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x1a4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x14 ]
mov [ edx + 0x1a4 ] 0x0
sub_41234f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
and ecx 0x800000
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_479340
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
or ah 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2c ] eax
sub_412387
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
or eax 0x2010000
mov [ ebp + 0x8 ] eax
push 0x0
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push rw-data
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_479360
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ edx + 0x23c ] 0x1
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_4123d5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
cmp eax 0xffffffff
jne r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_4123fa
push ebp
mov ebp esp
push 0xffffffff
push sub_497b60
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8c
mov [ ebp - 0x94 ] ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x88 ] eax
mov ecx [ ebp - 0x94 ]
mov edx [ ebp - 0x88 ]
mov [ ecx + 0x1a4 ] edx
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x84 ]
cmp ecx [ ebp + 0x8 ]
jge r-xdata
push 0x3c
push 0x0
lea ecx [ ebp - 0x74 ]
push ecx
call sub_467a10
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x10
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x90 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x94 ]
call sub_4066d0
mov ecx eax
call sub_40d400
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x98 ] 0x0
mov ecx [ ebp - 0x90 ]
call sub_40a150
mov [ ebp - 0x98 ] eax
jmp r-xdata
mov [ ebp - 0x74 ] 0xfffffff3
mov [ ebp - 0x5d ] 0x80
push rw-data
lea eax [ ebp - 0x58 ]
push eax
call [ lstrcpyA@IAT ]
lea edx [ ebp - 0x74 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_416d50
jmp r-xdata
mov eax [ ebp - 0x84 ]
add eax 0x1
mov [ ebp - 0x84 ] eax
mov edx [ ebp - 0x98 ]
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x80 ] eax
mov ecx [ ebp - 0x84 ]
shl ecx 0x4
mov edx [ ebp + 0xc ]
add edx ecx
push edx
mov ecx [ ebp - 0x80 ]
call sub_416af0
mov eax [ ebp - 0x80 ]
push eax
mov ecx [ ebp - 0x94 ]
add ecx 0x17c
call sub_407e30
mov ecx [ ebp - 0x94 ]
mov edx [ ecx + 0x1a4 ]
mov eax [ ebp - 0x84 ]
mov [ edx + eax * 4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x94 ]
mov edx [ ecx + 0x1a8 ]
add edx 0x6
mov eax [ ebp - 0x94 ]
mov [ eax + 0x1a8 ] edx
mov ecx [ ebp - 0x94 ]
mov edx [ ebp - 0x94 ]
mov eax [ edx + 0x1a8 ]
mov [ ecx + 0x1ac ] eax
lea ecx [ ebp - 0x74 ]
push ecx
mov ecx [ ebp - 0x94 ]
add ecx 0x1b0
call sub_405d10
push 0x1
mov edx [ ebp - 0x94 ]
add edx 0x1b0
push edx
mov ecx [ ebp - 0x94 ]
call sub_416e60
mov ecx [ ebp - 0x94 ]
call sub_413fab
push 0x1
mov eax [ ebp - 0x94 ]
push eax
mov ecx [ ebp - 0x94 ]
add ecx 0x1c8
push ecx
push 0x50800000
mov ecx [ ebp - 0x94 ]
add ecx 0x3c
mov edx [ ebp - 0x94 ]
mov eax [ edx + 0x3c ]
call [ eax + 0xb8 ]
push 0x1
mov ecx [ ebp - 0x94 ]
add ecx 0x1b0
push ecx
mov ecx [ ebp - 0x94 ]
add ecx 0x3c
mov edx [ ebp - 0x94 ]
mov eax [ edx + 0x3c ]
call [ eax + 0xbc ]
mov ecx [ ebp - 0x94 ]
add ecx 0x1c8
mov [ ebp - 0x7c ] ecx
lea edx [ ebp - 0x38 ]
mov [ ebp - 0x78 ] edx
lea eax [ ebp - 0x7c ]
push eax
mov ecx [ ebp - 0x94 ]
add ecx 0x3c
call sub_42f3e3
mov ecx [ ebp - 0x94 ]
call sub_412782
test eax eax
jne r-xdata
mov ecx [ ebp - 0x94 ]
mov edx [ ecx + 0x1a8 ]
imul edx edx 0xffffffff
mov eax [ ebp - 0x94 ]
mov [ eax + 0x1a8 ] edx
mov ecx [ ebp - 0x94 ]
mov edx [ ebp - 0x74 ]
mov [ ecx + 0x1a8 ] edx
mov eax [ ebp - 0x94 ]
cmp [ eax + 0x1a8 ] 0x0
jge r-xdata
push 0x2
mov ecx [ ebp - 0x94 ]
push ecx
mov edx [ ebp - 0x94 ]
add edx 0x1f8
push edx
push 0x50000000
mov ecx [ ebp - 0x94 ]
add ecx 0x104
call sub_48a1fd
push 0x3
mov eax [ ebp - 0x94 ]
push eax
mov ecx [ ebp - 0x94 ]
add ecx 0x1e8
push ecx
push 0x50000001
mov ecx [ ebp - 0x94 ]
add ecx 0xc8
call sub_48a1fd
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_40b400
push 0x4
mov edx [ ebp - 0x94 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
push 0x40800080
mov ecx [ ebp - 0x94 ]
add ecx 0x140
call sub_48a1a4
push 0x1
mov ecx [ ebp - 0x94 ]
add ecx 0x1b0
push ecx
mov ecx [ ebp - 0x94 ]
add ecx 0x140
call sub_416e60
mov eax 0x1
xor eax eax
jmp r-xdata
sub_412782
push ebp
mov ebp esp
sub esp 0x134
mov [ ebp - 0x134 ] ecx
mov ecx [ ebp - 0x134 ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x12c ] eax
mov [ ebp - 0x128 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x128 ]
cmp ecx [ ebp - 0x12c ]
jge r-xdata
mov eax 0x1
mov edx [ ebp - 0x128 ]
push edx
mov ecx [ ebp - 0x134 ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x130 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x10 ] 0x4000
mov ecx [ ebp - 0x130 ]
call sub_4027c0
push eax
lea eax [ ebp - 0x124 ]
push eax
call [ lstrcpyA@IAT ]
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
push edx
call [ lstrlenA@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x130 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x24 ] 0x7
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x134 ]
add ecx 0x3c
call sub_42f3ff
cmp eax 0xffffffff
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x128 ]
add eax 0x1
mov [ ebp - 0x128 ] eax
mov esp ebp
pop ebp
retn
sub_41287a
push ebp
mov ebp esp
sub esp 0x5c
mov [ ebp - 0x54 ] ecx
lea ecx [ ebp - 0x14 ]
call sub_428cd0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0x58 ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x54 ]
call sub_405500
mov ecx [ ebp - 0x54 ]
call sub_4129f8
mov ecx [ ebp - 0x54 ]
cmp [ ecx + 0x238 ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x3c
call sub_405410
lea ecx [ ebp - 0x14 ]
call sub_405cf0
test eax eax
jge r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x58 ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_405cf0
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x54 ]
cmp [ ecx + 0x23c ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x3c
call sub_405410
lea ecx [ ebp - 0x14 ]
call sub_405cf0
mov [ ebp - 0x5c ] eax
fild [ ebp - 0x5c ]
fidiv [ ebp - 0x4 ]
fstp [ ebp - 0x1c ]
mov ecx [ ebp - 0x54 ]
add ecx 0x3c
call sub_42f43b
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] 0x1
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x2c ]
jge r-xdata
mov ecx [ ebp - 0x54 ]
call sub_4129f8
lea edx [ ebp - 0x50 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x54 ]
add ecx 0x3c
call sub_42f451
fild [ ebp - 0x4c ]
fmul [ ebp - 0x1c ]
sub esp 0x8
fstp [ esp ]
call sub_411fa2
add esp 0x8
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x4c ] ecx
lea edx [ ebp - 0x50 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x54 ]
add ecx 0x3c
call sub_42f471
mov ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x54 ]
add ecx 0x17c
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
sub_4129f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_413fab
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x58 ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x1
mov edx [ ebp - 0x4 ]
add edx 0x1c8
push edx
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_406160
push 0x1
mov eax [ ebp - 0x4 ]
add eax 0x1f8
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x104
call sub_406160
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x1e8
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xc8
call sub_406160
mov ecx [ ebp - 0x4 ]
call sub_412a6e
sub_412a6e
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x30 ]
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x190
call sub_41b1b0
sub eax [ ebp - 0x28 ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x30 ]
add ecx 0x190
call sub_41b1b0
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x208 ]
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x208 ]
cmp ecx [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x30 ]
add ecx 0x190
call sub_416b40
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x3c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x38 ]
mov [ edx + 0x208 ] eax
mov [ ebp - 0x20 ] 0x1c
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x30 ]
add ecx 0x190
call sub_416b40
test eax eax
jge r-xdata
mov ecx [ ebp - 0x30 ]
add ecx 0x1d8
call sub_405cf0
mov edx [ ebp - 0x4 ]
sub edx eax
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x40 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x208 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] ecx
push 0x1
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x30 ]
add ecx 0xc8
call sub_416f30
mov ecx [ ebp - 0x30 ]
call sub_413f09
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x1d8
call sub_405cf0
mov ecx [ ebp - 0x4 ]
sub ecx eax
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x20c ]
mov [ ebp - 0x44 ] ecx
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x20c ]
cmp edx [ ebp - 0x2c ]
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x44 ]
mov [ eax + 0x20c ] ecx
mov edx [ ebp - 0x4 ]
sub edx 0x1
test edx edx
jge r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x20c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x1d8
call sub_405cf0
mov [ ebp - 0x10 ] eax
push 0x1
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x104
call sub_416f30
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x20c ]
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x3c
call sub_42f5f0
mov esp ebp
pop ebp
retn
sub_412c46
push ebp
mov ebp esp
push 0xffffffff
push sub_497bc7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x200
push esi
mov [ ebp - 0x1c4 ] ecx
mov eax [ ebp - 0x1c4 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_4805ce
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c4 ]
call sub_40d400
push eax
lea ecx [ ebp - 0xc0 ]
call sub_47fe32
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xec ] ecx
lea ecx [ ebp - 0xe0 ]
call sub_428cd0
lea edx [ ebp - 0xe0 ]
push edx
mov eax [ ebp - 0xec ]
mov edx [ eax ]
mov ecx [ ebp - 0xec ]
call [ edx + 0x50 ]
mov eax [ ebp - 0x1c4 ]
add eax 0x1b0
push eax
mov ecx [ ebp - 0xec ]
mov edx [ ecx ]
mov ecx [ ebp - 0xec ]
call [ edx + 0x28 ]
mov [ ebp - 0xe8 ] eax
lea ecx [ ebp - 0xcc ]
call sub_416cb0
mov [ ebp - 0x4 ] 0x1
push 0x5
call [ GetSysColor@IAT ]
xor eax 0x3d3d3d
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0xcc ]
call sub_416d20
lea eax [ ebp - 0xcc ]
push eax
mov ecx [ ebp - 0xec ]
call sub_47fe32
mov [ ebp - 0xc4 ] eax
push 0x8
call [ GetSysColor@IAT ]
mov [ ebp - 0x1c ] eax
push 0x5
call [ GetSysColor@IAT ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x14 ]
call sub_406640
mov [ ebp - 0x4 ] 0x2
push 0x5
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_406660
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx [ ebp - 0xec ]
call sub_405d30
mov edx [ ebp - 0x1c4 ]
add edx 0x1d8
mov eax [ edx ]
mov [ ebp - 0x2c ] eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov eax [ edx + 0x8 ]
mov [ ebp - 0x24 ] eax
mov ecx [ edx + 0xc ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x1c4 ]
add ecx 0x1d8
call sub_404fe0
mov esi eax
mov ecx [ ebp - 0x1c4 ]
add ecx 0x1c8
call sub_404fe0
sub esi eax
mov ecx [ ebp - 0x1c4 ]
mov eax esi
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0x68 ] eax
mov edx [ ebp - 0x1c4 ]
mov eax [ edx + 0x208 ]
mov ecx [ ebp - 0x68 ]
lea esi [ eax + ecx + 0x1 ]
mov ecx [ ebp - 0x1c4 ]
add ecx 0x190
call sub_41b1b0
cmp esi eax
jge r-xdata
mov ecx [ ebp - 0x1c4 ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x1c8 ] eax
mov edx [ ebp - 0x1c4 ]
mov eax [ edx + 0x208 ]
mov ecx [ ebp - 0x68 ]
lea edx [ eax + ecx + 0x1 ]
mov [ ebp - 0x1c8 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c4 ]
mov eax [ edx + 0x1dc ]
push eax
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x1a8 ]
push edx
push rw-data
call sub_416b30
add esp 0xc
mov [ ebp - 0x1cc ] eax
mov [ ebp - 0x1cc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c8 ]
mov [ ebp - 0xe4 ] eax
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c4 ]
mov edx [ ebp - 0xdc ]
cmp edx [ ecx + 0x1dc ]
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xe0 ]
push ecx
mov ecx [ ebp - 0xec ]
call sub_405210
mov edx [ ebp - 0x1c4 ]
cmp [ edx + 0x214 ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c4 ]
add ecx 0x190
call sub_41b1b0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x1dc ]
mov [ ebp - 0x1d0 ] edx
mov eax [ ebp - 0xdc ]
mov [ ebp - 0x1d0 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c4 ]
mov eax [ ebp - 0x118 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x1c4 ]
mov ecx [ edx + 0x208 ]
lea edx [ eax + ecx - 0x1 ]
mov [ ebp - 0x1d4 ] edx
mov [ ebp - 0x1d4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c4 ]
mov ecx [ ebp - 0x1d0 ]
sub ecx [ eax + 0x1dc ]
mov [ ebp - 0x118 ] ecx
mov ecx [ ebp - 0x1c4 ]
mov eax [ ebp - 0x118 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x1c4 ]
mov ecx [ edx + 0x208 ]
lea edx [ eax + ecx - 0x1 ]
test edx edx
jge r-xdata
mov eax [ ebp - 0x1c4 ]
mov ecx [ ebp - 0x1c4 ]
mov edx [ eax + 0x1f0 ]
cmp edx [ ecx + 0x1e8 ]
je r-xdata
mov ecx [ ebp - 0x1c4 ]
call sub_415153
mov edx [ ebp - 0x1c4 ]
mov eax [ edx + 0x1e4 ]
add eax 0x1
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0xd4 ]
add ecx 0x1
mov [ ebp - 0x1d8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0xf4 ] eax
mov ecx [ ebp - 0xd4 ]
add ecx 0x1
mov edx [ ebp - 0x1c4 ]
mov eax [ edx + 0x1e4 ]
add eax 0x1
cmp ecx eax
jge r-xdata
mov ecx [ ebp - 0xe8 ]
push ecx
mov edx [ ebp - 0xec ]
mov eax [ edx ]
mov ecx [ ebp - 0xec ]
call [ eax + 0x28 ]
mov ecx [ ebp - 0xc4 ]
push ecx
mov ecx [ ebp - 0xec ]
call sub_47fe32
lea ecx [ ebp - 0xcc ]
call sub_480765
lea ecx [ ebp - 0x14 ]
call sub_480765
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_405020
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xcc ]
call sub_416d00
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc0 ]
call sub_480640
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c4 ]
mov ecx [ ebp - 0x1c4 ]
mov edx [ eax + 0x204 ]
cmp edx [ ecx + 0x1fc ]
je r-xdata
mov ecx [ ebp - 0x1c4 ]
mov eax [ ebp - 0x118 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x1c4 ]
mov ecx [ edx + 0x208 ]
lea edx [ eax + ecx + 0x1 ]
mov [ ebp - 0x1dc ] edx
mov ecx [ ebp - 0x1c4 ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x1dc ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c4 ]
mov edx [ ebp - 0x1d8 ]
sub edx [ ecx + 0x1dc ]
mov [ ebp - 0x118 ] edx
mov ecx [ ebp - 0x1c4 ]
add ecx 0x190
call sub_41b1b0
mov ecx eax
mov esi [ ebp - 0x1c4 ]
mov eax [ ebp - 0x118 ]
cdq
idiv [ esi + 0x1a8 ]
mov edx [ ebp - 0x1c4 ]
mov edx [ edx + 0x208 ]
lea eax [ eax + edx + 0x1 ]
cmp ecx eax
jge r-xdata
lea ecx [ ebp - 0x178 ]
call sub_428cd0
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax + 0x1e8 ]
mov [ ebp - 0x178 ] ecx
mov edx [ ebp - 0x1c4 ]
mov eax [ edx + 0x1fc ]
mov [ ebp - 0x174 ] eax
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x1f0 ]
mov [ ebp - 0x170 ] edx
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax + 0x204 ]
mov [ ebp - 0x16c ] ecx
lea ecx [ ebp - 0x168 ]
call sub_406640
mov [ ebp - 0x4 ] 0x7
push 0xf
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x168 ]
call sub_406660
lea edx [ ebp - 0x168 ]
push edx
lea eax [ ebp - 0x178 ]
push eax
mov ecx [ ebp - 0xec ]
call sub_405210
lea ecx [ ebp - 0x168 ]
call sub_480765
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x168 ]
call sub_405020
mov edx [ ebp - 0x110 ]
push edx
mov eax [ ebp - 0xf4 ]
push eax
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x208 ]
push edx
mov eax [ ebp - 0xd4 ]
push eax
mov ecx [ ebp - 0xdc ]
push ecx
push rw-data
call sub_416b30
add esp 0x18
mov [ ebp - 0x1e0 ] eax
mov [ ebp - 0x1e0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1dc ]
mov [ ebp - 0x110 ] eax
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x10c ]
jge r-xdata
mov ecx [ ebp - 0x1c4 ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x10c ] eax
mov edx [ ebp - 0x10c ]
lea eax [ edx * 4 + 0x4 ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x17c ] eax
mov ecx [ ebp - 0x17c ]
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1c4 ]
mov ecx [ edx + 0x1d8 ]
sub ecx [ eax + 0x20c ]
mov [ ebp - 0x124 ] ecx
mov [ ebp - 0x6c ] 0x0
mov edx [ ebp - 0x114 ]
mov eax [ ebp - 0x124 ]
mov [ edx ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c4 ]
mov edx [ ebp - 0xe0 ]
cmp edx [ ecx + 0x1d8 ]
jle r-xdata
mov eax [ ebp - 0x6c ]
push eax
mov ecx [ ebp - 0x1c4 ]
add ecx 0x17c
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x104 ] ecx
mov edx [ ebp - 0x104 ]
mov eax [ ebp - 0x124 ]
add eax [ edx + 0x4 ]
mov [ ebp - 0x124 ] eax
mov ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x114 ]
mov eax [ ebp - 0x124 ]
mov [ edx + ecx * 4 + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x1d8 ]
mov [ ebp - 0x1e4 ] edx
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov eax [ ebp - 0x6c ]
cmp eax [ ebp - 0x10c ]
jg r-xdata
mov eax [ ebp - 0x1c4 ]
mov ecx [ ebp - 0x1e4 ]
sub ecx [ eax + 0x1d8 ]
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx 0x1
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x114 ]
mov eax [ edx + ecx * 4 ]
cmp eax [ ebp - 0x118 ]
jl r-xdata
mov edx [ ebp - 0x6c ]
sub edx 0x1
mov [ ebp - 0x1e8 ] edx
mov [ ebp - 0x1e8 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x1e0 ]
mov [ ebp - 0x1ec ] edx
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x1ec ] eax
jmp r-xdata
mov eax [ ebp - 0x1e8 ]
mov [ ebp - 0x120 ] eax
mov ecx [ ebp - 0x1c4 ]
mov edx [ ebp - 0xd8 ]
cmp edx [ ecx + 0x1e0 ]
jge r-xdata
mov edx [ ebp - 0x6c ]
add edx 0x1
mov [ ebp - 0x6c ] edx
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x10c ]
jg r-xdata
mov eax [ ebp - 0x1ec ]
mov [ ebp - 0x118 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c4 ]
add ecx 0x17c
call sub_41b1b0
cmp [ ebp - 0x6c ] eax
jge r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x114 ]
mov edx [ ecx + eax * 4 ]
cmp edx [ ebp - 0x118 ]
jl r-xdata
mov ecx [ ebp - 0x1c4 ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x1f0 ] eax
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x1f0 ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x120 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax + 0x1dc ]
push ecx
mov edx [ ebp - 0xe0 ]
push edx
lea eax [ ebp - 0x184 ]
push eax
mov ecx [ ebp - 0xec ]
call sub_4802bc
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x1dc ]
push edx
mov eax [ ebp - 0xd8 ]
push eax
mov ecx [ ebp - 0xec ]
call sub_480308
mov ecx [ ebp - 0x1f0 ]
mov [ ebp - 0x108 ] ecx
lea ecx [ ebp - 0x100 ]
call sub_416cb0
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x18 ]
push edx
push 0x1
push 0x0
lea ecx [ ebp - 0x100 ]
call sub_416d20
cmp [ ebp - 0xf4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
lea ecx [ ebp - 0x100 ]
call sub_480765
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0xec ]
mov edx [ ecx ]
mov ecx [ ebp - 0xec ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xec ]
mov edx [ ecx ]
mov ecx [ ebp - 0xec ]
call [ edx + 0x2c ]
lea ecx [ ebp - 0x11c ]
call sub_401690
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x1dc ]
push edx
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax + 0x1d8 ]
push ecx
lea edx [ ebp - 0x18c ]
push edx
mov ecx [ ebp - 0xec ]
call sub_4802bc
mov eax [ ebp - 0xd4 ]
push eax
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx + 0x1d8 ]
push edx
mov ecx [ ebp - 0xec ]
call sub_480308
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x110 ]
jge r-xdata
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x1c0 ] eax
mov ecx [ ebp - 0x1c0 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x1c4 ]
mov eax [ ebp - 0x6c ]
sub eax [ edx + 0x208 ]
mov ecx [ ebp - 0x1c4 ]
imul eax [ ecx + 0x1a8 ]
mov edx [ ebp - 0x1c4 ]
mov ecx [ edx + 0x1dc ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0xd4 ]
jg r-xdata
mov eax [ ebp - 0x6c ]
push eax
mov ecx [ ebp - 0x1c4 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
mov edx [ ebp - 0x1c4 ]
mov eax [ ebp - 0x6c ]
sub eax [ edx + 0x208 ]
mov ecx [ ebp - 0x1c4 ]
imul eax [ ecx + 0x1a8 ]
mov edx [ ebp - 0x1c4 ]
mov ecx [ edx + 0x1dc ]
add ecx eax
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x1c4 ]
mov eax [ ebp - 0x28 ]
add eax [ edx + 0x1a8 ]
mov ecx [ ebp - 0x1c4 ]
cmp [ ecx + 0x1e4 ] eax
jge r-xdata
mov ecx [ ebp - 0x120 ]
cmp ecx [ ebp - 0x108 ]
jl r-xdata
lea ecx [ ebp - 0x150 ]
call sub_428cd0
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x14c ] ecx
mov edx [ ebp - 0xd4 ]
mov [ ebp - 0x144 ] edx
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x150 ] eax
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x148 ] ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0xec ]
call sub_405210
mov ecx [ ebp - 0x1c4 ]
mov edx [ ebp - 0x28 ]
add edx [ ecx + 0x1a8 ]
mov [ ebp - 0x1f4 ] edx
mov edx [ ebp - 0x1c4 ]
mov eax [ edx + 0x1e4 ]
mov [ ebp - 0x1f4 ] eax
jmp r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0xd8 ]
jg r-xdata
cmp [ ebp - 0x120 ] 0x0
je r-xdata
mov eax [ ebp - 0x120 ]
mov [ ebp - 0xd0 ] eax
jmp r-xdata
push 0xe
call [ GetSysColor@IAT ]
push eax
mov eax [ ebp - 0xec ]
mov edx [ eax ]
mov ecx [ ebp - 0xec ]
call [ edx + 0x30 ]
push 0xd
call [ GetSysColor@IAT ]
push eax
mov eax [ ebp - 0xec ]
mov edx [ eax ]
mov ecx [ ebp - 0xec ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x120 ]
mov [ ebp - 0xd0 ] eax
jmp r-xdata
mov eax [ ebp - 0x1f4 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c4 ]
mov edx [ ebp - 0x6c ]
cmp edx [ ecx + 0x210 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x11c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x100 ]
call sub_416d00
lea ecx [ ebp - 0x160 ]
call sub_428cd0
mov eax [ ebp - 0xdc ]
mov [ ebp - 0x15c ] eax
mov ecx [ ebp - 0xd4 ]
mov [ ebp - 0x154 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x160 ] edx
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x160 ]
push edx
mov ecx [ ebp - 0xec ]
call sub_405210
mov edx [ ebp - 0x120 ]
mov eax [ ebp - 0x114 ]
mov ecx [ eax + edx * 4 ]
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0xd0 ]
cmp edx [ ebp - 0x108 ]
jge r-xdata
mov edx [ ebp - 0xd0 ]
cmp edx [ ebp - 0x108 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax + 0x1a4 ]
mov edx [ ebp - 0xd0 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0xf8 ] eax
mov ecx [ ebp - 0xd0 ]
mov edx [ ebp - 0x114 ]
mov eax [ ebp - 0xd0 ]
mov esi [ ebp - 0x114 ]
mov ecx [ edx + ecx * 4 + 0x4 ]
sub ecx [ esi + eax * 4 ]
mov [ ebp - 0xf0 ] ecx
mov edx [ ebp - 0xd0 ]
mov eax [ ebp - 0x114 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x1c4 ]
mov eax [ ebp - 0xd0 ]
mov ecx [ ebp - 0x114 ]
mov edx [ edx + 0x1e0 ]
cmp edx [ ecx + eax * 4 + 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x1c4 ]
cmp [ ecx + 0x214 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax + 0x1a4 ]
mov edx [ ebp - 0xd0 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0xf8 ] eax
mov ecx [ ebp - 0xd0 ]
mov edx [ ebp - 0x114 ]
mov eax [ ebp - 0xd0 ]
mov esi [ ebp - 0x114 ]
mov ecx [ edx + ecx * 4 + 0x4 ]
sub ecx [ esi + eax * 4 ]
mov [ ebp - 0xf0 ] ecx
mov edx [ ebp - 0xd0 ]
mov eax [ ebp - 0x114 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x1c4 ]
mov eax [ ebp - 0xd0 ]
mov ecx [ ebp - 0x114 ]
mov edx [ edx + 0x1e0 ]
cmp edx [ ecx + eax * 4 + 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0xd0 ]
mov eax [ ebp - 0x114 ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x204 ] ecx
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax + 0x1e0 ]
mov [ ebp - 0x204 ] ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0xec ]
mov edx [ ecx ]
mov ecx [ ebp - 0xec ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xec ]
mov edx [ ecx ]
mov ecx [ ebp - 0xec ]
call [ edx + 0x2c ]
jmp r-xdata
mov edx [ ebp - 0x1c4 ]
cmp [ edx + 0x218 ] 0x0
jne r-xdata
mov edx [ ebp - 0xd0 ]
mov eax [ ebp - 0x114 ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x1f8 ] ecx
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax + 0x1e0 ]
mov [ ebp - 0x1f8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
push 0x0
lea edx [ ebp - 0x11c ]
push edx
lea eax [ ebp - 0x2c ]
push eax
push 0x6
mov ecx [ ebp - 0x28 ]
add ecx 0x2
push ecx
mov edx [ ebp - 0x138 ]
push edx
mov ecx [ ebp - 0xec ]
call sub_409390
mov eax [ ebp - 0x2c ]
sub eax 0x1
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x28 ]
sub ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1b4 ]
push ecx
mov ecx [ ebp - 0xec ]
call sub_4802bc
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0xec ]
call sub_480308
lea ecx [ ebp - 0x2c ]
call sub_405cf0
cmp eax [ ebp - 0xf0 ]
jne r-xdata
lea ecx [ ebp - 0x11c ]
push ecx
lea edx [ ebp - 0x1ac ]
push edx
mov ecx [ ebp - 0xec ]
call sub_416db0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x140 ] ecx
mov [ ebp - 0x13c ] edx
cmp [ ebp - 0xf8 ] 0x6
jne r-xdata
mov edx [ ebp - 0x204 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0xf0 ]
push ecx
mov edx [ ebp - 0xd0 ]
push edx
lea eax [ ebp - 0x1a4 ]
push eax
mov ecx [ ebp - 0x128 ]
call sub_40efd0
mov [ ebp - 0x208 ] eax
mov ecx [ ebp - 0x208 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x20c ]
call sub_4027c0
push eax
mov edx [ ebp - 0xec ]
push edx
mov ecx [ ebp - 0x1c4 ]
call sub_413cdf
push eax
lea ecx [ ebp - 0x11c ]
call sub_47c7b1
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x1a4 ]
call sub_47c674
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x50 ]
mov [ ebp - 0x138 ] eax
cmp [ ebp - 0xf8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c4 ]
call sub_415153
push 0x0
lea eax [ ebp - 0x11c ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
push 0x6
mov edx [ ebp - 0x28 ]
add edx 0x3
push edx
mov eax [ ebp - 0x12c ]
push eax
mov ecx [ ebp - 0xec ]
call sub_409390
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx [ ebp - 0xec ]
call sub_4802bc
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
add edx 0x1
push edx
mov ecx [ ebp - 0xec ]
call sub_480308
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
lea ecx [ ebp - 0x11c ]
push ecx
lea edx [ ebp - 0x198 ]
push edx
mov ecx [ ebp - 0xec ]
call sub_416db0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x130 ] edx
cmp [ ebp - 0xf8 ] 0x6
jne r-xdata
mov edx [ ebp - 0x1f8 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0xf0 ]
push ecx
mov edx [ ebp - 0xd0 ]
push edx
lea eax [ ebp - 0x190 ]
push eax
mov ecx [ ebp - 0x128 ]
call sub_40efd0
mov [ ebp - 0x1fc ] eax
mov ecx [ ebp - 0x1fc ]
mov [ ebp - 0x200 ] ecx
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x200 ]
call sub_4027c0
push eax
mov edx [ ebp - 0xec ]
push edx
mov ecx [ ebp - 0x1c4 ]
call sub_413cdf
push eax
lea ecx [ ebp - 0x11c ]
call sub_47c7b1
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x190 ]
call sub_47c674
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x50 ]
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0xf8 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
lea eax [ ebp - 0x1bc ]
push eax
mov ecx [ ebp - 0xec ]
call sub_4802bc
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0xec ]
call sub_480308
cmp [ ebp - 0xf8 ] 0x2
jne r-xdata
mov eax [ ebp - 0x50 ]
shl eax 0x1
mov ecx [ ebp - 0xf0 ]
sub ecx eax
sub ecx [ ebp - 0x140 ]
mov eax ecx
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x138 ]
add edx eax
mov [ ebp - 0x138 ] edx
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
add ecx 0x1
mov [ ebp - 0xd0 ] ecx
cmp [ ebp - 0xf8 ] 0x2
jne r-xdata
mov eax [ ebp - 0x50 ]
shl eax 0x1
mov ecx [ ebp - 0xf0 ]
sub ecx eax
sub ecx [ ebp - 0x134 ]
mov eax ecx
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x12c ]
add edx eax
mov [ ebp - 0x12c ] edx
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
add ecx 0x1
mov [ ebp - 0xd0 ] ecx
mov eax [ ebp - 0x50 ]
shl eax 0x1
mov ecx [ ebp - 0xf0 ]
sub ecx eax
sub ecx [ ebp - 0x140 ]
mov edx [ ebp - 0x138 ]
add edx ecx
mov [ ebp - 0x138 ] edx
mov eax [ ebp - 0x50 ]
shl eax 0x1
mov ecx [ ebp - 0xf0 ]
sub ecx eax
sub ecx [ ebp - 0x134 ]
mov edx [ ebp - 0x12c ]
add edx ecx
mov [ ebp - 0x12c ] edx
sub_413cdf
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0xc ]
push eax
call [ lstrlenA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_416d70
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
lea eax [ ecx + edx * 2 ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0xc ]
push ecx
push rw-data
call [ lstrcpyA@IAT ]
push 0x4
push r--data
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_416d70
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
add ecx rw-data
push ecx
push rw-data
mov ecx [ ebp - 0x28 ]
call sub_413dee
mov edx [ ebp - 0x4 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jle r-xdata
push r--data
push rw-data
call [ lstrcatA@IAT ]
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ ecx + rw-data ] 0x0
mov edx [ ebp - 0xc ]
push edx
push rw-data
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_416d70
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
lea eax [ ecx + edx * 2 ]
add eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
mov ecx [ ebp - 0xc ]
add ecx rw-data
push ecx
push rw-data
mov ecx [ ebp - 0x28 ]
call sub_413dee
cmp eax 0x2
jne r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
sub_413dee
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ CharPrevA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_413e14
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_407e10
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov [ ebp - 0x20 ] 0x0
push 0x1
mov ecx [ ebp - 0xc ]
call sub_416b60
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_407e10
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
push 0x1
mov ecx [ ebp - 0x14 ]
call sub_416b90
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_413f09
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x4 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_413f70
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x1c8
call sub_404fe0
mov esi eax
mov ecx [ ebp - 0x4 ]
add ecx 0x190
call sub_41b1b0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1a8 ]
imul edx eax
add esi edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_413fab
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
add eax 0x1b8
push eax
mov ecx [ ebp - 0x1c ]
call sub_405410
mov ecx [ ebp - 0x1c ]
call sub_413f09
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x1c ]
call sub_413f70
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x1b8
call sub_405cf0
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x1b8
call sub_404fe0
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jg r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jle r-xdata
push 0x3
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x14 ]
jg r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x1c8 ] 0x0
mov edx [ ebp - 0x1c ]
mov [ edx + 0x1cc ] 0x0
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x1c8 ]
add ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x1d0 ] ecx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x1cc ]
mov edx [ ebp - 0x1c ]
add ecx [ edx + 0x1ac ]
mov eax [ ebp - 0x1c ]
mov [ eax + 0x1d4 ] ecx
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1c8 ]
mov [ ecx + 0x1d8 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1d4 ]
mov [ ecx + 0x1dc ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1d0 ]
mov [ ecx + 0x1e0 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x1cc ]
add edx [ ebp - 0x14 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ eax + 0x1e4 ] edx
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1d8 ]
mov [ ecx + 0x1f8 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1e4 ]
mov [ ecx + 0x1fc ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1d0 ]
mov [ ecx + 0x200 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x1e4 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ eax + 0x204 ] edx
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1d0 ]
mov [ ecx + 0x1e8 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1cc ]
mov [ ecx + 0x1ec ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x1d0 ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov [ eax + 0x1f0 ] edx
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x1e4 ]
mov [ ecx + 0x1f4 ] eax
mov esp ebp
pop ebp
retn
push 0x2
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
push 0x2
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
push 0x3
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
sub_4141b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_416811
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
push 0xfffffff4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
push 0x4e
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_414222
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_416811
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
push 0xfffffff4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
push 0x4e
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_41428c
push ebp
mov ebp esp
sub esp 0x40
push esi
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x38 ]
call sub_416811
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x38 ]
add ecx 0x17c
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp - 0x14 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x38 ]
call sub_413f09
mov esi eax
mov ecx [ ebp - 0x38 ]
add ecx 0x1d8
call sub_405cf0
sub esi eax
test esi esi
jge r-xdata
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x38 ]
call sub_413f09
mov esi eax
mov ecx [ ebp - 0x38 ]
add ecx 0x1d8
call sub_405cf0
sub esi eax
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x3c ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_428cd0
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
push 0x0
mov ecx [ ebp - 0x38 ]
call sub_415566
test eax eax
jne r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x20c ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x38 ]
cmp [ edx + 0x20c ] 0x0
je r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x38 ]
add ecx 0x3c
call sub_42f471
mov ecx [ ebp - 0x38 ]
call sub_4129f8
lea ecx [ ebp - 0x10 ]
call sub_428cd0
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x1d8 ]
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x1d8 ]
mov [ ebp - 0x10 ] edx
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov ecx [ ebp - 0x38 ]
call sub_415566
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] 0x1
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x40 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x1e0 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x1dc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x1e4 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x10 ] eax
push 0x141
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x38 ]
call sub_40b5c0
mov ecx [ ebp - 0x38 ]
call sub_40a1e0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ GetWindowLongA@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
push 0x4e
mov ecx [ ebp - 0x38 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
sub_4144ac
push ebp
mov ebp esp
push 0xffffffff
push sub_497be5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
call sub_40efb0
cmp eax [ ebp - 0x18 ]
je r-xdata
push 0x18
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x24 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x24 ]
call sub_416be0
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] ecx
push 0xffffffff
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_4771af
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x190
call sub_407e30
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x2c ]
call sub_4129f8
push 0x1
mov edx [ ebp - 0x2c ]
add edx 0x1d8
push edx
mov ecx [ ebp - 0x2c ]
call sub_405470
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40efd0
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40a100
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_4145de
push ebp
mov ebp esp
push 0xffffffff
push sub_497c03
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
call sub_40efb0
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
push 0x18
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x20 ]
call sub_416be0
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ecx
push 0xffffffff
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_4771af
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x28 ]
add ecx 0x190
call sub_4776fb
mov ecx [ ebp - 0x28 ]
call sub_4129f8
push 0x1
mov eax [ ebp - 0x28 ]
add eax 0x1b8
push eax
mov ecx [ ebp - 0x28 ]
call sub_405470
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_40efd0
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40a100
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_414733
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_416b40
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_416b90
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x210 ]
jg r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx + 0x210 ] 0xffffffff
jmp r-xdata
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_47763d
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_41b1b0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
call sub_4129f8
push 0x1
mov edx [ ebp - 0x10 ]
add edx 0x1b8
push edx
mov ecx [ ebp - 0x10 ]
call sub_405470
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_41b1b0
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x210 ]
sub eax 0x1
test eax eax
jle r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x210 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x210 ] ecx
sub_414843
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416b40
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x210 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx + 0x208 ]
jge r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x8 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x208 ]
add ecx eax
cmp [ ebp + 0x8 ] ecx
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x210 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x210 ]
mov [ eax + 0x208 ] edx
push 0x1
mov ecx [ ebp - 0x8 ]
add ecx 0x1d8
call sub_406130
push eax
mov ecx [ ebp - 0x8 ]
call sub_405470
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x210 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x210 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x210 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4168be
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x210 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x8 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x210 ]
sub ecx eax
add ecx 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + 0x208 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
add ecx 0x1d8
call sub_406130
push eax
mov ecx [ ebp - 0x8 ]
call sub_405470
jmp r-xdata
xor eax eax
sub_41497a
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0xc ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0xc ]
mov ecx [ edx + 0x208 ]
lea edx [ ecx + eax - 0x1 ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0xc ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0xc ]
cdq
idiv [ ecx + 0x1a8 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0x208 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0xc ]
add eax 0x1d8
mov ecx [ ebp + 0x10 ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx + 0x208 ]
jge r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0x208 ]
mov edx [ ebp - 0xc ]
imul ecx [ edx + 0x1a8 ]
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
add edx ecx
mov eax [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
add edx [ eax + 0x1a8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
sub ecx [ eax + 0x208 ]
mov edx [ ebp - 0xc ]
imul ecx [ edx + 0x1a8 ]
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
add edx ecx
mov eax [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
sub ecx [ ebp + 0x8 ]
add ecx 0x1
mov edx [ ebp - 0xc ]
imul ecx [ edx + 0x1a8 ]
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
add edx ecx
mov eax [ ebp + 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
sub ecx [ eax + 0x208 ]
mov edx [ ebp - 0xc ]
imul ecx [ edx + 0x1a8 ]
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
add edx ecx
mov eax [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
add edx [ eax + 0x1a8 ]
mov ecx [ ebp + 0x10 ]
cmp [ ecx + 0xc ] edx
jge r-xdata
mov eax 0x1
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
add edx [ eax + 0x1a8 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0xc ] edx
jmp r-xdata
sub_414b2f
push ebp
mov ebp esp
sub esp 0x78
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp - 0x5c ]
call sub_416811
test eax eax
jne r-xdata
mov ecx [ ebp - 0x5c ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x5c ]
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x5c ]
add ecx 0x190
call sub_41b1b0
sub eax [ ebp - 0xc ]
test eax eax
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x5c ]
add ecx 0x190
call sub_41b1b0
sub eax [ ebp - 0xc ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x60 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x64 ]
jmp [ ecx * 4 + jump_table_414dbd ]
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x7
ja r-xdata
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x208 ]
mov [ ebp - 0x70 ] edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ edx + 0x208 ]
neg eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x208 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
neg eax
cmp eax 0xffffffff
jle r-xdata
cmp [ ebp - 0xc ] 0x1
jge r-xdata
mov [ ebp - 0x28 ] 0x1c
push 0x17
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x5c ]
add ecx 0xc8
call sub_416f50
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x10 ]
sub ecx [ eax + 0x208 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x208 ]
cmp [ ebp - 0x4 ] edx
jge r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ edx + 0x208 ]
neg eax
mov [ ebp - 0x74 ] eax
jmp r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ eax + 0x208 ]
neg ecx
cmp ecx [ ebp - 0x70 ]
jle r-xdata
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x208 ]
cmp [ ebp - 0x4 ] edx
jge r-xdata
mov ecx [ ebp - 0xc ]
neg ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x68 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x6c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x5c ]
mov eax [ ebp + 0xc ]
sub eax [ edx + 0x208 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x208 ]
mov [ ebp - 0x78 ] edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x78 ] eax
jmp r-xdata
mov ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x5c ]
call sub_47af5c
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x5c ]
call sub_414ddd
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x5c ]
mov edx [ ecx + 0x208 ]
add edx [ ebp - 0x4 ]
mov eax [ ebp - 0x5c ]
mov [ eax + 0x208 ] edx
mov ecx [ ebp - 0x5c ]
add ecx 0x1d8
mov edx [ ecx ]
mov [ ebp - 0x54 ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x50 ] eax
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x4c ] edx
mov eax [ ecx + 0xc ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x50 ]
add ecx 0x1
mov [ ebp - 0x50 ] ecx
lea edx [ ebp - 0x54 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp - 0x58 ]
push ecx
push 0x0
mov ecx [ ebp - 0x5c ]
call sub_47a75e
mov [ ebp - 0x44 ] 0x1c
mov [ ebp - 0x40 ] 0x4
mov edx [ ebp - 0x5c ]
mov eax [ edx + 0x208 ]
mov [ ebp - 0x30 ] eax
push 0x1
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx [ ebp - 0x5c ]
add ecx 0xc8
call sub_416f30
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x74 ] eax
sub_414ddd
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x208 ]
add edx [ ebp + 0xc ]
add edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
imul ecx [ edx + 0x1a8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x208 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_41b1b0
mov edx [ ebp - 0x4 ]
add edx [ ebp + 0x8 ]
cmp eax edx
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
imul edx [ eax + 0x1a8 ]
imul edx edx 0xffffffff
mov [ ebp - 0x8 ] edx
jmp r-xdata
sub_414e81
push ebp
mov ebp esp
sub esp 0x68
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp - 0x50 ]
call sub_416811
test eax eax
jne r-xdata
mov ecx [ ebp - 0x50 ]
call sub_413f09
mov [ ebp - 0x4 ] eax
xor eax eax
cmp [ ebp - 0x4 ] 0x0
setl al
dec eax
and eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x50 ]
add ecx 0x1d8
call sub_405cf0
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x54 ] ecx
cmp [ ebp - 0x54 ] 0x7
ja r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x54 ]
jmp [ edx * 4 + jump_table_415133 ]
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x50 ]
mov ecx [ eax + 0x20c ]
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
sub edx ecx
mov [ ebp - 0x60 ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x60 ] edx
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov ecx [ eax + 0x20c ]
neg ecx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x10 ]
sub eax [ edx + 0x20c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] 0xfffffffc
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
neg ecx
cmp ecx 0xfffffffc
jle r-xdata
cmp [ ebp - 0xc ] 0x4
jge r-xdata
mov [ ebp - 0x2c ] 0x1c
push 0x17
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x50 ]
add ecx 0x104
call sub_416f50
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x14 ]
sub edx [ ecx + 0x20c ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov edx [ ecx + 0x20c ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
sub eax edx
cmp [ ebp - 0x8 ] eax
jge r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x20c ]
neg eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov ecx [ eax + 0x20c ]
neg ecx
cmp ecx [ ebp - 0x60 ]
jle r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x20c ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
sub ecx eax
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov edx [ ebp - 0xc ]
neg edx
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x58 ] 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x5c ] 0x4
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x50 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0x20c ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x20c ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x68 ] ecx
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x50 ]
call sub_47af5c
mov ecx [ ebp - 0x50 ]
cmp [ ecx + 0x214 ] 0x0
je r-xdata
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x8 ]
imul eax eax 0xffffffff
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x50 ]
mov edx [ ecx + 0x20c ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x20c ] edx
mov ecx [ ebp - 0x50 ]
mov edx [ ecx + 0x20c ]
push edx
mov ecx [ ebp - 0x50 ]
add ecx 0x3c
call sub_42f5f0
mov eax [ ebp - 0x50 ]
add eax 0x1d8
push eax
mov ecx [ ebp - 0x50 ]
add ecx 0x1d8
push ecx
push 0x0
mov edx [ ebp - 0x4c ]
push edx
mov ecx [ ebp - 0x50 ]
call sub_47a75e
mov [ ebp - 0x48 ] 0x1c
mov [ ebp - 0x44 ] 0x4
mov eax [ ebp - 0x50 ]
mov ecx [ eax + 0x20c ]
mov [ ebp - 0x34 ] ecx
push 0x1
lea edx [ ebp - 0x48 ]
push edx
mov ecx [ ebp - 0x50 ]
add ecx 0x104
call sub_416f30
mov ecx [ ebp - 0x50 ]
call sub_405430
mov eax [ ebp - 0x50 ]
cmp [ eax + 0x214 ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
call sub_415153
mov edx [ ebp - 0x50 ]
mov [ edx + 0x218 ] 0x1
mov ecx [ ebp - 0x50 ]
call sub_415153
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x218 ] 0x0
sub_415153
push ebp
mov ebp esp
push 0xffffffff
push sub_497c16
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x38 ]
add ecx 0x190
call sub_41b1b0
test eax eax
jne r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x38 ]
mov edx [ eax + 0x210 ]
sub edx [ ecx + 0x208 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_428cd0
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x38 ]
mov edx [ eax + 0x1d8 ]
sub edx [ ecx + 0x20c ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x38 ]
call sub_413f09
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x1a8 ]
imul ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x1dc ]
add eax ecx
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x18 ]
add edx [ ecx + 0x1a8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x34 ]
call sub_4066b0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call sub_4804d8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_415246
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_416811
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x228 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_4054c0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x21c ] 0x1
mov ecx [ ebp - 0x8 ]
call sub_47be0f
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x228 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x22c ] eax
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_41530d
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_405500
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x22c ]
push edx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ edx + 0x21c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x22c ]
push ecx
call [ SetFocus@IAT ]
sub_41530d
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_41576c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x210 ]
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x10 ]
call sub_41686a
mov ecx [ ebp - 0x10 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x10 ]
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x208 ]
add eax [ ebp - 0x8 ]
cmp [ ebp - 0xc ] eax
jl r-xdata
push 0xffffffff
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_4153f8
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x210 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x210 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x210 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_4168be
mov ecx [ ebp - 0x10 ]
call sub_415c3b
mov eax 0x1
push 0x96
call [ Sleep@IAT ]
push 0x0
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x8 ]
add ecx 0x1
push ecx
push 0x4
mov ecx [ ebp - 0x10 ]
call sub_414b2f
mov eax 0x1
jmp r-xdata
sub_4153f8
push ebp
mov ebp esp
push 0xffffffff
push sub_497c29
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x2c ] ecx
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_415678
mov [ ebp + 0x10 ] eax
xor eax eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x17c
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_428cd0
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_415566
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x1e0 ]
jge r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x1e0 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x18 ] eax
push 0x1
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_406160
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x224 ] edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_40efd0
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_47bc7c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
push 0x5
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_47bda6
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_401740
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_47be0f
mov eax 0x1
jmp r-xdata
sub_415566
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0xc ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x17c
call sub_41b1b0
cmp [ ebp + 0xc ] eax
jl r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
sub ecx [ eax + 0x208 ]
mov edx [ ebp - 0xc ]
imul ecx [ edx + 0x1a8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x1dc ]
add edx ecx
mov eax [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
add edx [ eax + 0x1a8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0xc ] edx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov ecx [ edx + 0x1d8 ]
sub ecx [ eax + 0x20c ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0xc ]
jge r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] edx
mov eax 0x1
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_415678
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_41b1b0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
cmp edx [ ecx + 0x1d8 ]
jl r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
cmp edx [ ecx + 0x1e0 ]
jg r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x1dc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x1e4 ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x1d8 ]
mov edx [ ebp - 0x14 ]
add ecx [ edx + 0x20c ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x4 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax ]
jl r-xdata
mov eax [ ebp - 0xc ]
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_41576c
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_41b1b0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax ]
cmp edx [ ecx + 0x1d8 ]
jl r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax ]
cmp edx [ ecx + 0x1e0 ]
jg r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x1dc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x1e4 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
sub eax [ ecx + 0x1dc ]
mov ecx [ ebp - 0x8 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x8 ]
add eax [ edx + 0x208 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp - 0x4 ] eax
jl r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
sub_41581c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0xffffffff
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x210 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_4153f8
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x10 ]
call sub_40a1e0
mov [ ebp - 0xc ] eax
push 0xfffffff4
mov eax [ ebp - 0xc ]
push eax
call [ GetWindowLongA@IAT ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xfffffffd
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
push 0x4e
mov ecx [ ebp - 0x10 ]
call sub_4066d0
mov ecx eax
call sub_402890
sub_415895
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x21c ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x220 ] 0x0
je r-xdata
call [ ReleaseCapture@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x220 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_416ec0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x220 ] 0x0
sub_415900
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x48 ] ecx
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x21c ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x48 ]
call sub_415b3a
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xfffffffe
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x4 ] 0xfffffffd
jne r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0x210 ]
cmp ecx [ eax + 0x208 ]
jle r-xdata
mov edx [ ebp - 0x48 ]
cmp [ edx + 0x220 ] 0x0
je r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x48 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x48 ]
mov ecx [ edx + 0x208 ]
lea edx [ ecx + eax - 0x1 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x210 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov edx [ ebp - 0x48 ]
cmp [ edx + 0x220 ] 0x0
jne r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x208 ]
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x210 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x48 ]
call sub_41497a
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x210 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x210 ]
jne r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x220 ]
push ecx
mov ecx [ ebp - 0x48 ]
call sub_416ec0
mov edx [ ebp - 0x48 ]
mov [ edx + 0x220 ] 0x0
mov ecx [ ebp - 0x48 ]
cmp [ ecx + 0x220 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x210 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x48 ]
call sub_41497a
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x210 ] edx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x220 ] 0x1f4
push 0x0
push 0x32
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x220 ]
push edx
mov ecx [ ebp - 0x48 ]
call sub_416e90
mov ecx [ ebp - 0x48 ]
call sub_415c3b
push 0x1
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x48 ]
call sub_405470
lea edx [ ebp - 0x40 ]
push edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x210 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x48 ]
call sub_41497a
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x210 ] ecx
push 0x1
mov ecx [ ebp - 0x48 ]
call sub_41686a
mov ecx [ ebp - 0x48 ]
call sub_415c3b
cmp [ ebp - 0x44 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ edx + 0x220 ] 0x1f5
push 0x0
push 0x32
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x220 ]
push ecx
mov ecx [ ebp - 0x48 ]
call sub_416e90
mov ecx [ ebp - 0x48 ]
call sub_415c3b
push 0x1
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x48 ]
call sub_405470
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x48 ]
call sub_405500
push 0x1
lea edx [ ebp - 0x40 ]
push edx
mov ecx [ ebp - 0x48 ]
call sub_405470
sub_415b3a
push ebp
mov ebp esp
sub esp 0x18
push esi
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x1dc ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x1e4 ]
jle r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x14 ]
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x14 ]
mov esi [ edx + 0x208 ]
add esi [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_41b1b0
cmp esi eax
jge r-xdata
mov eax 0xfffffffd
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x208 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x208 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x1dc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
add ecx [ eax + 0x1a8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp - 0x8 ]
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_415c3b
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
call sub_40a1e0
mov [ ebp - 0x14 ] eax
push 0xfffffff4
mov eax [ ebp - 0x14 ]
push eax
call [ GetWindowLongA@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x210 ]
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
push 0x4e
mov ecx [ ebp - 0x18 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_415c8e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4054e0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x21c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x228 ] 0x1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x220 ] 0x0
je r-xdata
call [ ReleaseCapture@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x220 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_416ec0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x220 ] 0x0
sub_415cf8
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x1c ] ecx
cmp [ ebp + 0x8 ] 0x1f4
jne r-xdata
cmp [ ebp + 0x8 ] 0x1f5
jne r-xdata
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_414b2f
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x210 ]
sub ecx 0x1
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
cmp eax [ edx + 0x210 ]
jne r-xdata
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_414b2f
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_416b40
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x210 ]
add ecx 0x1
cmp eax ecx
jge r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x210 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x210 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_41497a
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0x210 ] eax
mov ecx [ ebp - 0x1c ]
call sub_415c3b
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x210 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_416b40
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_40b5f0
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_405470
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] ecx
sub_415e0c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x140
push ecx
mov ecx [ ebp + 0x8 ]
call sub_416e00
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x214 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_415153
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] 0x0
jmp r-xdata
sub_415e71
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x140
call sub_40d440
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x214 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x140
call sub_47be0f
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] 0x1
mov ecx [ ebp - 0x4 ]
call sub_415153
sub_415ecd
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x190
call sub_416b40
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x20 ]
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_428cd0
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
sub eax 0x21
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x7
ja r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x24 ]
jmp [ ecx * 4 + jump_table_416061 ]
push 0xffffffff
mov ecx [ ebp - 0x20 ]
call sub_416081
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_416081
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x20 ]
call sub_414e81
jmp r-xdata
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_414e81
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx 0x1
imul edx edx 0xffffffff
push edx
mov ecx [ ebp - 0x20 ]
call sub_416081
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x20 ]
call sub_416081
jmp r-xdata
push 0x0
push 0x0
push 0x6
mov ecx [ ebp - 0x20 ]
call sub_414b2f
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x210 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x7
mov ecx [ ebp - 0x20 ]
call sub_414b2f
mov ecx [ ebp - 0x20 ]
add ecx 0x190
call sub_416b40
mov edx [ ebp - 0x20 ]
cmp [ edx + 0x210 ] eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x210 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ecx + 0x210 ] 0x0
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x210 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_4168be
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x210 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x190
call sub_416b40
mov edx [ ebp - 0x20 ]
mov [ edx + 0x210 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x210 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_4168be
sub_416081
push ebp
mov ebp esp
sub esp 0x3c
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x190
call sub_416b40
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x34 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x34 ]
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_428cd0
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x210 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x210 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x210 ]
add edx [ ebp + 0x8 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x210 ]
add eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x210 ]
add ecx [ ebp + 0x8 ]
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov [ ebp - 0x3c ] 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x210 ]
add edx [ ebp + 0x8 ]
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x208 ]
add eax [ ebp - 0x14 ]
cmp [ ebp - 0x1c ] eax
jl r-xdata
push 0x0
mov eax [ ebp - 0x1c ]
push eax
push 0x4
mov ecx [ ebp - 0x34 ]
call sub_414b2f
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x210 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x210 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x210 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_4168be
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x1c ]
cmp edx [ ecx + 0x208 ]
jge r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x28 ]
cmp edx [ ecx + 0x208 ]
jge r-xdata
push 0x0
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x14 ]
add edx 0x1
push edx
push 0x4
mov ecx [ ebp - 0x34 ]
call sub_414b2f
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x210 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x28 ]
mov [ edx + 0x210 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x210 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x34 ]
call sub_4168be
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x208 ]
mov eax [ ebp - 0x14 ]
lea ecx [ edx + eax - 0x1 ]
cmp [ ebp - 0x28 ] ecx
jle r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x34 ]
call sub_414843
push 0x0
mov ecx [ ebp - 0x1c ]
sub ecx [ ebp - 0x14 ]
add ecx 0x1
push ecx
push 0x4
mov ecx [ ebp - 0x34 ]
call sub_414b2f
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x210 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x210 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x210 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x34 ]
call sub_4168be
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x34 ]
call sub_414843
push 0x0
mov eax [ ebp - 0x28 ]
push eax
push 0x4
mov ecx [ ebp - 0x34 ]
call sub_414b2f
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x210 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x210 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x210 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_4168be
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34 ]
call sub_415c3b
sub_4162cf
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_407e10
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_477524
mov edx [ ebp - 0x14 ]
mov [ edx + 0x210 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_4129f8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov eax [ ebp - 0x14 ]
add eax 0x1d8
push eax
mov ecx [ ebp - 0x14 ]
call sub_405470
mov [ ebp - 0x18 ] 0x0
push 0x1
mov ecx [ ebp - 0xc ]
call sub_416b90
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_416392
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_47ad1b
cmp [ ebp + 0x8 ] 0x201
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
and edx 0xffff
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
shr eax 0x10
and eax 0xffff
and eax 0xffff
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
add ecx 0x1d8
call sub_405000
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
call sub_416811
test eax eax
je r-xdata
push 0x1
mov ecx [ ebp - 0xc ]
call sub_41686a
sub_416409
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416b40
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416c00
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x14 ]
sub_416451
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416b40
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x14 ] eax
xor eax eax
sub_4164a0
push ebp
mov ebp esp
push 0xffffffff
push sub_497c53
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_47c5ff
cmp [ ebp + 0xc ] 0x0
jl r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov ecx [ ebp - 0x18 ]
or ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp + 0xc ] eax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov eax [ ebp - 0x18 ]
or al 0x1
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_41b1b0
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_416c00
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_416c20
push eax
lea ecx [ ebp - 0x14 ]
call sub_47c761
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov ecx [ ebp - 0x18 ]
or ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
sub_4165ba
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0xc ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x17c
call sub_41b1b0
cmp [ ebp + 0xc ] eax
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_416c60
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax 0x1
lea ecx [ ebp - 0x14 ]
call sub_428cd0
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_415566
push 0x1
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
sub_41665f
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x140
call sub_47bda6
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xc ] 0xd
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ eax + 0x224 ] 0xffffffff
mov esp ebp
pop ebp
retn 0x8
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_4166fa
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
call sub_40a1e0
mov [ ebp - 0x18 ] eax
push 0xfffffff4
mov edx [ ebp - 0x18 ]
push edx
call [ GetWindowLongA@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x5
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x210 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x224 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
push 0x4e
mov ecx [ ebp - 0x1c ]
call sub_4066d0
mov ecx eax
call sub_402890
sub_4166fa
push ebp
mov ebp esp
push 0xffffffff
push sub_497c66
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x30 ] ecx
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x140
call sub_4796e8
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x210 ]
push edx
mov ecx [ ebp - 0x30 ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x224 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_416c20
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_416c90
and eax 0xff
test eax eax
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x224 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40a100
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_428cd0
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x210 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x210 ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_41497a
push 0x1
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x30 ]
call sub_405470
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_416811
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x140
call sub_40d440
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x140
call sub_47bda6
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x224 ] 0xffffffff
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41686a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x140
call sub_40d440
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0x4
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x140
call sub_47bda6
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x224 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4166fa
sub_4168be
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_428cd0
mov eax [ ebp + 0x8 ]
sub eax [ ebp + 0xc ]
push eax
call sub_46836b
add esp 0x4
cmp eax 0x1
jg r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41497a
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_41497a
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_41497a
test eax eax
je r-xdata
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_405470
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_405470
mov esp ebp
pop ebp
retn 0x8
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_405470
sub_41695d
push ebp
mov ebp esp
sub esp 0x44
mov [ ebp - 0x44 ] ecx
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_416d50
mov ecx [ ebp - 0x44 ]
add ecx 0x1b0
call sub_480765
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x1b0
call sub_405d10
mov [ ebp - 0x4 ] eax
push 0x1
mov edx [ ebp - 0x44 ]
add edx 0x1b0
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x3c
mov eax [ ebp - 0x44 ]
mov edx [ eax + 0x3c ]
call [ edx + 0xbc ]
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4169d5
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x23c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1c8
call sub_405cf0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jg r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1e8
call sub_405cf0
mov ecx [ ebp - 0x14 ]
add ecx eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x3c
call sub_42f43b
cmp [ ebp + 0xc ] eax
jge r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x1c ]
add ecx 0x3c
call sub_42f43b
mov [ ebp - 0x20 ] eax
mov edx [ ebp + 0xc ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax 0x1
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
fild [ edx + 0x4 ]
fidiv [ ebp - 0x14 ]
fst [ ebp - 0x8 ]
fmul [ r--data ]
sub esp 0x8
fstp [ esp ]
call sub_411fa2
add esp 0x8
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_416ac0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_412232
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_416af0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47c761
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_416b60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a170
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_416b90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_416bc0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_416c60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
lea ecx [ edx + eax * 4 ]
call sub_47c7b1
mov esp ebp
pop ebp
retn 0x8
sub_416cd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_416d00
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_416d20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ CreatePen@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_48070e
mov esp ebp
pop ebp
retn 0xc
sub_416d50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x3c
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ GetObjectA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_416d70
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
call [ GetTextExtentPoint32A@IAT ]
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41e0a0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0xc
sub_416db0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_4027a0
push eax
mov ecx [ ebp + 0xc ]
call sub_4027c0
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
push edx
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41e0a0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_416e00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_416e30
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax [ ecx + 0x1c ]
sete dl
mov eax edx
mov esp ebp
pop ebp
retn 0x4
sub_416e30
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_416e60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4051a0
push eax
push 0x30
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_416e90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SetTimer@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_416ec0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ KillTimer@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_416f00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_48a21e
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_416f30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_47a67d
mov esp ebp
pop ebp
retn 0x8
sub_416f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_47a6ca
mov esp ebp
pop ebp
retn 0x8
sub_416f70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4016f0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x3c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x40 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_416fcf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
sub_416ff0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
sub_417011
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_468376
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_468376
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405500
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4170f0
test eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x41
jb r-xdata
push 0x11
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x8000
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x61
jb r-xdata
cmp [ ebp + 0x8 ] 0x46
jbe r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4170f0
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x66
jbe r-xdata
push 0x11
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x8000
test eax eax
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
sub_4170f0
push ebp
mov ebp esp
push 0xffffffff
push sub_497c79
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4796e8
lea ecx [ ebp - 0x10 ]
call sub_4016b0
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x2d
je r-xdata
mov ecx [ ebp - 0x1c ]
call sub_417300
and eax 0xffff
neg eax
sbb eax eax
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x14 ]
jmp r-xdata
sub_4171b1
push ebp
mov ebp esp
push 0xffffffff
push sub_497c8c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x3c ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4796e8
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_41145e
add esp 0xc
test eax eax
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call sub_41145e
add esp 0xc
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_47c5ff
mov ecx [ ebp - 0x10 ]
push ecx
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_475837
add esp 0xc
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_47c5ff
mov eax [ ebp - 0x10 ]
push eax
push rw-data
lea ecx [ ebp - 0x14 ]
push ecx
call sub_475837
add esp 0xc
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
call sub_47bc7c
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x3c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
jmp r-xdata
sub_4172d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_416fa3
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_417300
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0xb0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_417330
push ebp
mov ebp esp
push 0xffffffff
push sub_497ccd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_4093d0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x58
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_401260
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_476815
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x64 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x3c ] 0xee0000
mov eax [ ebp - 0x10 ]
mov [ eax + 0x40 ] 0x8b1a55
push 0xd
call [ GetSysColor@IAT ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp - 0x10 ]
mov [ edx + 0x48 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x4c ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x50 ] 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x54 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x58
call sub_47c5ff
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_417408
push ebp
mov ebp esp
push 0xffffffff
push sub_497d04
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_480765
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_4768bf
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_401380
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x58
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_489ea7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_417499
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x68
call sub_418110
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_479601
mov esp ebp
pop ebp
retn 0x4
sub_4174c1
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x5
mov ecx [ ebp - 0x8 ]
add ecx 0x58
call sub_4027c0
push eax
mov ecx [ ebp - 0x8 ]
call sub_417f4a
mov [ ebp - 0x4 ] eax
xor eax eax
cmp [ ebp - 0x4 ] 0x20
setg al
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4c ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x4c ] 0x0
jne r-xdata
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_417915
push 0x30
call [ MessageBeep@IAT ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_417d55
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41751f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
jmp r-xdata
push 0x1
mov ecx [ ebp + 0x8 ]
call sub_47fea7
push 0x5
call [ GetStockObject@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_41758a
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_405500
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ eax + 0x48 ] 0x1
push 0x105
push 0x0
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_40b5c0
mov ecx [ ebp - 0x1c ]
call sub_4054c0
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
call sub_406130
push eax
mov ecx [ ebp - 0x1c ]
call sub_405410
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_405000
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ edx + 0x48 ] 0x0
call [ ReleaseCapture@IAT ]
push 0x105
push 0x0
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_40b5c0
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_417637
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x64 ]
push edx
call [ SetCursor@IAT ]
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_417663
push ebp
mov ebp esp
push 0xffffffff
push sub_497d17
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
mov [ ebp - 0x64 ] ecx
mov ecx [ ebp - 0x64 ]
call sub_47bbe6
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x60 ]
or ah 0x1
push eax
push 0xfffffff0
mov ecx [ ebp - 0x64 ]
call sub_40a1e0
push eax
call [ SetWindowLongA@IAT ]
mov ecx [ ebp - 0x64 ]
add ecx 0x58
call sub_4016b0
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x64 ]
call sub_4796e8
lea ecx [ ebp - 0x20 ]
call sub_4016b0
test eax eax
je r-xdata
mov ecx [ ebp - 0x64 ]
add ecx 0x58
push ecx
mov ecx [ ebp - 0x64 ]
call sub_4796e8
mov eax [ ebp - 0x64 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
add ecx 0x58
call sub_4027c0
push eax
mov ecx [ ebp - 0x64 ]
call sub_47bc7c
lea ecx [ ebp - 0x5c ]
push ecx
mov ecx [ ebp - 0x64 ]
call sub_40d400
mov ecx eax
call sub_416d50
mov edx [ ebp - 0x64 ]
mov al [ edx + 0x50 ]
mov [ ebp - 0x47 ] al
lea ecx [ ebp - 0x5c ]
push ecx
mov ecx [ ebp - 0x64 ]
add ecx 0x5c
call sub_405d10
push 0x1
mov edx [ ebp - 0x64 ]
add edx 0x5c
push edx
mov ecx [ ebp - 0x64 ]
call sub_416e60
mov ecx [ ebp - 0x64 ]
call sub_417a60
mov ecx [ ebp - 0x64 ]
call sub_417c11
lea ecx [ ebp - 0x1c ]
call sub_428cd0
lea ecx [ ebp - 0x1c ]
call sub_406130
push eax
mov ecx [ ebp - 0x64 ]
call sub_405410
push 0x0
mov eax [ ebp - 0x64 ]
push eax
mov ecx [ ebp - 0x64 ]
add ecx 0x68
call sub_47686a
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_406130
push eax
mov ecx [ ebp - 0x64 ]
add ecx 0x58
call sub_4027c0
push eax
mov ecx [ ebp - 0x64 ]
push ecx
mov ecx [ ebp - 0x64 ]
add ecx 0x68
call sub_476a35
mov ecx [ ebp - 0x64 ]
call sub_4785c5
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x64 ]
add ecx 0x5c
call sub_480765
sub_4177d2
push ebp
mov ebp esp
push 0xffffffff
push sub_497d2a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x58
call sub_47c761
mov ecx [ ebp - 0x10 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x10 ]
call sub_417a60
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp + 0x8 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_476a83
sub_417858
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
add eax 0x58
push eax
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_417889
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x3c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x40 ] eax
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x44 ] eax
push 0xd
call [ GetSysColor@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x44 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
sub_417915
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4c ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
sub_417959
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x64 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_417c11
sub_417991
push ebp
mov ebp esp
sub esp 0x40
mov [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x50 ] ecx
mov ecx [ ebp - 0x40 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x3c ]
push edx
mov ecx [ ebp - 0x40 ]
call sub_40d400
mov ecx eax
call sub_416d50
mov eax [ ebp - 0x40 ]
mov cl [ eax + 0x50 ]
mov [ ebp - 0x27 ] cl
mov ecx [ ebp - 0x40 ]
add ecx 0x5c
call sub_480765
lea edx [ ebp - 0x3c ]
push edx
mov ecx [ ebp - 0x40 ]
add ecx 0x5c
call sub_405d10
push 0x1
mov eax [ ebp - 0x40 ]
add eax 0x5c
push eax
mov ecx [ ebp - 0x40 ]
call sub_416e60
push 0x1
mov ecx [ ebp - 0x40 ]
call sub_405450
sub_417a1e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x54 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_417a60
sub_417a60
push ebp
mov ebp esp
push 0xffffffff
push sub_497d3d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x44 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x54 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x2c ]
call sub_428cd0
lea ecx [ ebp - 0x2c ]
call sub_406130
push eax
mov ecx [ ebp - 0x44 ]
call sub_4061a0
mov ecx [ ebp - 0x44 ]
call sub_4066d0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_4796e8
mov ecx [ ebp - 0x44 ]
call sub_4180f0
mov [ ebp - 0x38 ] eax
mov edx [ ebp - 0x44 ]
add edx 0x5c
push edx
mov eax [ ebp - 0x38 ]
mov edx [ eax ]
mov ecx [ ebp - 0x38 ]
call [ edx + 0x28 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp - 0x38 ]
call sub_406c30
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ edx ]
mov ecx [ ebp - 0x38 ]
call [ eax + 0x28 ]
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_40b520
mov ecx [ ebp - 0x44 ]
call sub_47bbe6
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
and edx 0x200
test edx edx
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_406130
push eax
mov ecx [ ebp - 0x10 ]
call sub_4803ee
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x2c ]
call sub_404fe0
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
sar eax 0x1
push eax
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_4065f0
jmp r-xdata
mov edx [ ebp - 0x34 ]
and edx 0x2
test edx edx
je r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_405cf0
sub eax [ ebp - 0x18 ]
cdq
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x2c ]
call sub_4065f0
jmp r-xdata
mov ecx [ ebp - 0x34 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x18 ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
push 0x4
lea ecx [ ebp - 0x2c ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x2c ]
call sub_405cf0
push eax
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_47bd57
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_47c674
sub_417c11
push ebp
mov ebp esp
push 0xffffffff
push sub_497d50
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x104
push 0x104
lea ecx [ ebp - 0x14 ]
call sub_47ca58
push eax
call [ GetWindowsDirectoryA@IAT ]
push 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47caa7
push rw-data
lea ecx [ ebp - 0x14 ]
call sub_47ca04
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
call [ FreeLibrary@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
push 0x6a
mov ecx [ ebp - 0x10 ]
push ecx
call [ LoadCursorA@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
call [ CopyIcon@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x64 ] eax
sub_417cdf
push ebp
mov ebp esp
sub esp 0x114
mov [ ebp - 0x114 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x110 ] 0x104
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x10c ]
push ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
call [ RegQueryValueA@IAT ]
lea eax [ ebp - 0x10c ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call [ lstrcpyA@IAT ]
mov edx [ ebp - 0x8 ]
push edx
call [ RegCloseKey@IAT ]
sub_417d55
push ebp
mov ebp esp
push 0xffffffff
push sub_497d6c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x20
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
push rw-data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_475837
add esp 0xc
mov edx [ ebp - 0x1c ]
xor ecx ecx
mov cl [ edx + lookup_table_417f29 ]
jmp [ ecx * 4 + jump_table_417ef1 ]
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
lea edx [ ebp - 0x10 ]
push edx
push rw-data
lea eax [ ebp - 0x14 ]
push eax
call sub_47c931
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
push 0x0
push 0x30
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_417f4a
push ebp
mov ebp esp
sub esp 0x214
mov [ ebp - 0x214 ] ecx
mov eax [ ebp + 0xc ]
push eax
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
push rw-data
push 0x0
call [ ShellExecuteA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x20
ja r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x20c ]
push edx
push rw-data
push 0x80000000
mov ecx [ ebp - 0x214 ]
call sub_417cdf
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatA@IAT ]
lea ecx [ ebp - 0x20c ]
push ecx
lea edx [ ebp - 0x20c ]
push edx
push 0x80000000
mov ecx [ ebp - 0x214 ]
call sub_417cdf
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x20c ]
push eax
call sub_4180d0
add esp 0x8
mov [ ebp - 0x210 ] eax
cmp [ ebp - 0x210 ] 0x0
jne r-xdata
mov edx [ ebp - 0x210 ]
mov [ edx ] 0x0
push rw-data
lea ecx [ ebp - 0x20c ]
push ecx
call sub_468410
add esp 0x8
mov [ ebp - 0x210 ] eax
cmp [ ebp - 0x210 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x210 ]
mov [ ecx ] 0x0
lea edx [ ebp - 0x20c ]
push edx
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x20d ]
mov [ ebp - 0x210 ] eax
jmp r-xdata
push rw-data
mov eax [ ebp - 0x210 ]
push eax
call [ lstrcatA@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x210 ]
push edx
call [ lstrcatA@IAT ]
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
call [ WinExec@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4180a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_417408
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4180f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ GetDC@IAT ]
push eax
call sub_47fc89
mov esp ebp
pop ebp
retn
sub_418110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x407
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_418140
push ebp
mov ebp esp
push 0xffffffff
push sub_497da4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x10 ]
push eax
push 0x89
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416f70
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xa8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xac ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c7b1
mov eax [ ebp - 0x10 ]
mov [ eax + 0xa4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_4181f4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3ef
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xa0
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov edx [ ebp - 0x4 ]
add edx 0xa4
push edx
push 0x3f8
mov eax [ ebp + 0x8 ]
push eax
call sub_483e10
mov esp ebp
pop ebp
retn 0x4
sub_418261
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_4172b8
mov ecx [ ebp - 0x4 ]
call sub_41828e
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_41828e
push ebp
mov ebp esp
push 0xffffffff
push sub_497db7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xa8 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xa8 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0xac ]
push eax
push rw-data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_475837
add esp 0xc
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0xac ]
push eax
push rw-data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_475837
add esp 0xc
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x405
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0xa4 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x3fb
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_41839a
push ebp
mov ebp esp
push 0xffffffff
push sub_497dd3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x28 ] ecx
push 0x1
mov ecx [ ebp - 0x28 ]
call sub_47b0ce
mov [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0xa0
call sub_4027d0
movsx eax al
cmp eax 0x2b
je r-xdata
push 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0xa0
call sub_4027d0
movsx edx al
cmp edx 0x2d
jne r-xdata
push 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0xa0
call sub_4027d0
movsx ecx al
cmp ecx 0x2d
jne r-xdata
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0xa0
push eax
lea ecx [ ebp - 0x18 ]
call sub_47c761
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0xa4 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
call sub_41145e
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0xa0
call sub_4027a0
sub eax 0x1
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0xa0
call sub_47543b
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov edx [ ebp - 0x28 ]
cmp [ edx + 0xa4 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
add ecx [ eax + 0xac ]
xor edx edx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xa8 ]
xor edx edx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x34 ]
ja r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
push 0xffffffff
push 0x0
push 0x3ec
call sub_4840fb
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0xa8 ]
jbe r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx + 0xac ]
jbe r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0xac ] eax
mov ecx [ ebp - 0x28 ]
call sub_478709
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0xac ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
ja r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x38 ]
ja r-xdata
cmp [ ebp - 0x20 ] 0x10000000
jb r-xdata
jmp r-xdata
sub_418675
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_47b0ce
xor eax eax
cmp [ ebp + 0x8 ] 0x3f9
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_4171b1
mov ecx [ ebp - 0x8 ]
call sub_41828e
mov esp ebp
pop ebp
retn 0x4
sub_4186b4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4186e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_418710
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_418710
push ebp
mov ebp esp
push 0xffffffff
push sub_497df5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_418789
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_418e76
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
sub eax 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xda
ja r-xdata
xor eax eax
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov cl [ edx + lookup_table_418a56 ]
jmp [ ecx * 4 + jump_table_418a06 ]
mov eax [ ebp + 0xc ]
sub eax 0x70
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
and eax 0x2
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x2e
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x2f
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x36
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0xc ]
sub ecx 0x34
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0xc
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x27
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x28
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x28
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x2a
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x2b
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x2c
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x2d
mov eax 0x1
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x38
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x37
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x30
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x31
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x32
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x33
mov eax 0x1
jmp r-xdata
sub_418b31
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_418e76
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x8
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0xda
ja r-xdata
xor ax ax
jmp r-xdata
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax + lookup_table_418d9b ]
jmp [ edx * 4 + jump_table_418d4b ]
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
sub ecx 0x70
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x2
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x2
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x2
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x2
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x2
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] 0x2e
jmp r-xdata
mov [ ebp - 0x8 ] 0x2f
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x36
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x6
mov ecx [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax [ ebp - 0x8 ]
mov ax [ edx + eax * 2 ]
mov eax [ ebp + 0x8 ]
sub eax 0x34
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0xc
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x27
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x28
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x28
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x2a
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x2b
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x2c
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x2d
jmp r-xdata
xor ax ax
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x38
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x37
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x30
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x31
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x32
jmp r-xdata
xor ax ax
jmp r-xdata
mov [ ebp - 0x8 ] 0x33
jmp r-xdata
sub_418e76
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
push 0x10
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x8000
test eax eax
je r-xdata
push 0x11
call [ GetAsyncKeyState@IAT ]
movsx edx ax
and edx 0x8000
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
or al 0x2
mov [ ebp - 0x4 ] eax
sub_418ed0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x9a
mov ecx [ ebp - 0x4 ]
call sub_478369
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_418f04
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x402
mov edx [ ebp + 0x8 ]
push edx
call sub_483f20
mov esp ebp
pop ebp
retn 0x4
sub_418f60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_418f8f
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x5c ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_41902e
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_418f8f
push ebp
mov ebp esp
push 0xffffffff
push sub_497e09
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
push 0x402
mov ecx [ ebp - 0x1c ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_402ad0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xfa0
push ecx
lea ecx [ ebp - 0x18 ]
call sub_47e84a
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x14 ]
call sub_402aa0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_41902e
push ebp
mov ebp esp
push 0xffffffff
push sub_497e25
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x24 ] ecx
push 0x3fd
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_407f50
lea ecx [ ebp - 0x20 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_409510
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x7
ja r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_409527
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x28 ]
jmp [ ecx * 4 + jump_table_419474 ]
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x12
jge r-xdata
cmp [ ebp - 0x18 ] 0x12
jge r-xdata
cmp [ ebp - 0x18 ] 0xd
jge r-xdata
cmp [ ebp - 0x18 ] 0x10
jge r-xdata
cmp [ ebp - 0x18 ] 0xe
jge r-xdata
cmp [ ebp - 0x18 ] 0xd
jge r-xdata
cmp [ ebp - 0x18 ] 0x8
jge r-xdata
cmp [ ebp - 0x18 ] 0xd
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
mov [ ebp - 0x14 ] ax
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
add edx 0x13ec
push edx
lea ecx [ ebp - 0x20 ]
call sub_47e84a
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
mov [ ebp - 0x14 ] ax
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
add edx 0x1450
push edx
lea ecx [ ebp - 0x20 ]
call sub_47e84a
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
mov [ ebp - 0x14 ] ax
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
add edx 0x14b4
push edx
lea ecx [ ebp - 0x20 ]
call sub_47e84a
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
mov [ ebp - 0x14 ] ax
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
add edx 0x1518
push edx
lea ecx [ ebp - 0x20 ]
call sub_47e84a
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
mov [ ebp - 0x14 ] ax
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
add edx 0x157c
push edx
lea ecx [ ebp - 0x20 ]
call sub_47e84a
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
mov [ ebp - 0x14 ] ax
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
add edx 0x15e0
push edx
lea ecx [ ebp - 0x20 ]
call sub_47e84a
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
mov [ ebp - 0x14 ] ax
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
add edx 0x1644
push edx
lea ecx [ ebp - 0x20 ]
call sub_47e84a
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
mov [ ebp - 0x14 ] ax
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
add edx 0x16a8
push edx
lea ecx [ ebp - 0x20 ]
call sub_47e84a
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov eax [ ebp - 0x14 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
sub_419494
push ebp
mov ebp esp
push 0xffffffff
push sub_497e38
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
sar eax 0x8
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
cmp edx [ ecx + 0x5c ]
je r-xdata
push 0x3fd
mov ecx [ ebp - 0x20 ]
call sub_47bb2c
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x10 ]
call sub_409510
mov [ ebp - 0x4 ] 0x0
mov cx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40956a
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_407ec0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_409527
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x5c ] ecx
push 0x0
mov ecx [ ebp - 0x20 ]
call sub_47b0ce
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x5c ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_41902e
sub_419547
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x1
mov ecx [ ebp - 0xc ]
call sub_47b0ce
push 0x3fd
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_407e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_407ef0
xor ax ax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_419590
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] ecx
push 0x1
mov ecx [ ebp - 0xc ]
call sub_47b0ce
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x5c ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_41902e
push 0x3fd
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_407ec0
mov edx [ ebp - 0xc ]
mov esi [ edx + 0x5c ]
shl esi 0x8
mov ecx [ ebp - 0x8 ]
call sub_407e90
or esi eax
mov [ ebp - 0x4 ] si
push 0x0
mov eax [ ebp - 0x4 ]
and eax 0xffff
push eax
push 0x40a
mov ecx [ ebp - 0xc ]
call sub_4066d0
mov ecx eax
call sub_402890
pop esi
mov esp ebp
pop ebp
retn
sub_419608
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] ecx
push 0x3fd
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x5c ]
shl esi 0x10
mov ecx [ ebp - 0x8 ]
call sub_407e90
or esi eax
mov [ ebp - 0x4 ] si
push 0x0
mov ecx [ ebp - 0x4 ]
and ecx 0xffff
push ecx
push 0x40a
mov ecx [ ebp - 0xc ]
call sub_4066d0
mov ecx eax
call sub_402890
pop esi
mov esp ebp
pop ebp
retn
sub_41965e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x402
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp + 0x8 ]
push ecx
push 0x3fd
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_47bde8
mov esp ebp
pop ebp
retn 0x4
sub_4196b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4196e0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_41972b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x200
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x709
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x408
mov eax [ ebp + 0x8 ]
mov [ eax + 0x5c ] 0x106
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x5e ] 0x107
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] 0x306
mov eax [ ebp + 0x8 ]
mov [ eax + 0x84 ] 0x409
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xdc ] 0x207
mov edx [ ebp + 0x8 ]
mov [ edx + 0xde ] 0x208
mov eax [ ebp + 0x8 ]
mov [ eax + 0xec ] 0x304
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xee ] 0x309
mov edx [ ebp + 0x8 ]
mov [ edx + 0xf0 ] 0x309
mov eax [ ebp + 0x8 ]
mov [ eax + 0xe0 ] 0x201
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xe2 ] 0x202
mov edx [ ebp + 0x8 ]
mov [ edx + 0xe4 ] 0x203
mov eax [ ebp + 0x8 ]
mov [ eax + 0xe6 ] 0x204
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xe8 ] 0x20a
mov edx [ ebp + 0x8 ]
mov [ edx + 0xea ] 0x20b
mov eax [ ebp + 0x8 ]
mov [ eax + 0x106 ] 0x3
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10a ] 0x605
mov edx [ ebp + 0x8 ]
mov [ edx + 0x15c ] 0x104
mov eax [ ebp + 0x8 ]
mov [ eax + 0x15e ] 0x105
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16c ] 0x303
mov edx [ ebp + 0x8 ]
mov [ edx + 0x160 ] 0x106
mov eax [ ebp + 0x8 ]
mov [ eax + 0x162 ] 0x107
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x11e ] 0x303
mov edx [ ebp + 0x8 ]
mov [ edx + 0x124 ] 0x400
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144 ] 0x304
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x148 ] 0x302
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14c ] 0x300
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1dc ] 0x205
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1de ] 0x206
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1cc ] 0x301
mov esp ebp
pop ebp
retn 0x4
sub_4198c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_419717
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_4198f0
push ebp
mov ebp esp
push 0xffffffff
push sub_497e5a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x214
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_41996d
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_41996d
push ebp
mov ebp esp
push 0xffffffff
push sub_497e7c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x8b
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
call sub_418ed0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x104 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx + 0x108 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x10c ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
mov eax [ ebp - 0x10 ]
mov [ eax + 0x8c ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x90 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_41b06e
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_419a1d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x3fe
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0x90
push eax
push 0x3ff
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov esp ebp
pop ebp
retn 0x4
sub_419a75
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_4786a4
push 0x200
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x108 ] ecx
push 0x200
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x104 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x108 ]
push edx
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x8 ]
call sub_419af5
mov ecx [ ebp - 0x8 ]
call sub_419b97
mov ecx [ ebp - 0x8 ]
call sub_419d70
push 0x3fd
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
xor eax eax
mov esp ebp
pop ebp
retn
sub_419af5
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
lea ecx [ ebp - 0x30 ]
call sub_428cd0
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0xa4
call sub_4061a0
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
push ecx
push 0x3fd
mov ecx [ ebp - 0x34 ]
call sub_47bb2c
mov ecx eax
call sub_4061a0
lea ecx [ ebp - 0x20 ]
call sub_428cd0
lea edx [ ebp - 0x20 ]
push edx
push 0x43f
mov ecx [ ebp - 0x34 ]
call sub_47bb2c
mov ecx eax
call sub_4061a0
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_406140
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x34 ]
call sub_4803ee
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_406130
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0xa4
call sub_406160
mov esp ebp
pop ebp
retn
sub_419b97
push ebp
mov ebp esp
push 0xffffffff
push sub_497ea1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x30 ] ecx
push 0x3fd
mov ecx [ ebp - 0x30 ]
call sub_47bb2c
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_407f50
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x30 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x90 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ecx
cmp [ ebp - 0x34 ] 0x3
ja r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x20 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x34 ]
jmp [ edx * 4 + jump_table_419d60 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x2c ]
jge r-xdata
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x10 ] rw-data
lea ecx [ ebp - 0x24 ]
call sub_47c5ff
jmp r-xdata
mov [ ebp - 0x2c ] 0x17
mov [ ebp - 0x10 ] rw-data
push rw-data
lea ecx [ ebp - 0x24 ]
call sub_47c7b1
jmp r-xdata
mov [ ebp - 0x2c ] 0x39
mov [ ebp - 0x10 ] rw-data
push rw-data
lea ecx [ ebp - 0x24 ]
call sub_47c7b1
jmp r-xdata
mov [ ebp - 0x2c ] 0x39
mov [ ebp - 0x10 ] rw-data
push rw-data
lea ecx [ ebp - 0x24 ]
call sub_47c7b1
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_407ec0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
add ecx 0x1388
push ecx
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea edx [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_47c761
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_47ca40
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_409900
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + ecx * 2 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4098d0
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
sub_419d70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] 0x0
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x94 ]
add edx 0x12
mov eax [ ebp - 0x4 ]
mov [ eax + 0x96 ] dx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x96 ]
add edx 0x12
mov eax [ ebp - 0x4 ]
mov [ eax + 0x98 ] dx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x98 ]
add edx 0xd
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9a ] dx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x9a ]
add edx 0x10
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] dx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x9c ]
add edx 0xe
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9e ] dx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x9e ]
add edx 0xd
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] dx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0xa0 ]
add edx 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa2 ] dx
mov ecx [ ebp - 0x4 ]
call sub_419e88
mov esp ebp
pop ebp
retn
sub_419e3e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_419b97
mov ecx [ ebp - 0x4 ]
call sub_419d70
mov esp ebp
pop ebp
retn
sub_419e63
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_419b97
mov ecx [ ebp - 0x4 ]
call sub_419d70
mov esp ebp
pop ebp
retn
sub_419e88
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
push 0x3fd
mov ecx [ ebp - 0x18 ]
call sub_47bb2c
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
call sub_407e90
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_407ef0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov dx [ ebp - 0x4 ]
or dl 0x2
mov [ ebp - 0x4 ] dx
mov edx [ ebp - 0x4 ]
and edx 0xffff
shl edx 0x6
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x108 ]
mov dx [ ecx + edx * 2 ]
mov [ ebp - 0x14 ] dx
mov ax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xa4
call sub_419494
mov esp ebp
pop ebp
retn
mov cx [ ebp - 0x4 ]
or cl 0x1
mov [ ebp - 0x4 ] cx
sub_419f26
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0xa4
call sub_419547
mov [ ebp - 0x14 ] ax
push 0x3fd
mov ecx [ ebp - 0x18 ]
call sub_47bb2c
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
call sub_407e90
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_407ef0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov dx [ ebp - 0x4 ]
or dl 0x2
mov [ ebp - 0x4 ] dx
mov edx [ ebp - 0x4 ]
and edx 0xffff
shl edx 0x6
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x108 ]
mov ax [ ebp - 0x14 ]
mov [ ecx + edx * 2 ] ax
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov cx [ ebp - 0x4 ]
or cl 0x1
mov [ ebp - 0x4 ] cx
sub_419fc7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x200
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x108 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x104 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x4 ]
call sub_48d869
mov esp ebp
pop ebp
retn
sub_419ffb
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x108 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x8 ]
call sub_4785c5
mov esp ebp
pop ebp
retn
sub_41a028
push ebp
mov ebp esp
push 0xffffffff
push sub_497eb4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
push 0xffffffff
push 0x1
push 0x3ea
call sub_4840fb
cmp eax 0x1
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_419700
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x108 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_41972b
mov ecx [ ebp - 0x14 ]
call sub_419e88
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_419717
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_41a0a1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xa4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xa4 ]
call [ eax + 0xd0 ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_41a0eb
push ebp
mov ebp esp
push 0xffffffff
push sub_497f0f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x3b0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x3bc ] ecx
push 0x0
push 0x0
push 0x6
push 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x378 ]
call sub_475893
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx 0x8
mov esi rw-data
lea edi [ ebp - 0x50 ]
[ edi ] [ esi ]
lea eax [ ebp - 0x50 ]
push eax
call [ lstrlenA@IAT ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x54 ]
mov dl [ ebp + ecx - 0x51 ]
mov [ ebp - 0x60 ] dl
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x58 ]
movsx edx [ ebp + ecx - 0x50 ]
test edx edx
je r-xdata
mov [ ebp - 0x180 ] 0x0
push rw-data
lea ecx [ ebp - 0x7c ]
call sub_47c7b1
mov ecx [ ebp - 0x3bc ]
call sub_40a1e0
mov [ ebp - 0x318 ] eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x310 ] ecx
mov [ ebp - 0x304 ] 0x1
lea edx [ ebp - 0x180 ]
mov [ ebp - 0x300 ] edx
mov [ ebp - 0x2fc ] 0x104
lea ecx [ ebp - 0x7c ]
call sub_4027c0
mov [ ebp - 0x2ec ] eax
mov eax [ ebp - 0x2e8 ]
or ah 0x18
mov [ ebp - 0x2e8 ] eax
mov ecx [ ebp - 0x3bc ]
add ecx 0x110
mov [ ebp - 0x2f0 ] ecx
lea ecx [ ebp - 0x378 ]
call sub_4759f5
cmp eax 0x1
je r-xdata
movsx eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x58 ]
movsx edx [ ebp + ecx - 0x50 ]
cmp edx eax
jne r-xdata
lea ecx [ ebp - 0x78 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x74 ]
call sub_47d515
mov [ ebp - 0x4 ] 0x3
push 0x0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x30 ]
call sub_4035b0
mov [ ebp - 0x4 ] 0x4
lea edx [ ebp - 0x30 ]
push edx
push 0x10
lea eax [ ebp - 0x180 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47d627
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x378 ]
call sub_402730
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp + eax - 0x50 ] 0x0
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x74 ]
call sub_47d921
mov [ ebp - 0x3c0 ] eax
mov ecx [ ebp - 0x3c0 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3fc
call sub_4840fb
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x74 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x78 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x378 ]
call sub_402730
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x58 ]
add eax 0x1
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x64 ]
call sub_401690
mov [ ebp - 0x4 ] 0x8
push 0x1770
lea ecx [ ebp - 0x64 ]
call sub_47e84a
lea ecx [ ebp - 0x64 ]
call sub_4027a0
add eax 0x210
cmp [ ebp - 0x14 ] eax
jae r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x3a4 ] eax
mov edx [ ebp - 0x3a4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x14 ]
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4 ] 0x9
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_47d744
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3fb
call sub_4840fb
lea ecx [ ebp - 0x74 ]
call sub_47d842
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x74 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x78 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x378 ]
call sub_402730
jmp r-xdata
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x74 ]
call sub_47d842
lea ecx [ ebp - 0x64 ]
call sub_4027a0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x1c ]
push edx
call sub_468550
add esp 0xc
test eax eax
je r-xdata
lea ecx [ ebp - 0x64 ]
call sub_4027a0
mov edx [ ebp - 0x1c ]
add edx eax
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x3bc ]
call sub_41a7d8
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x3fb
call sub_4840fb
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3ac ] eax
mov ecx [ ebp - 0x3ac ]
push ecx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x74 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x78 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x378 ]
call sub_402730
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x200
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x5c ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x3bc ]
call sub_41a8ba
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x3fb
call sub_4840fb
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x3b0 ] ecx
mov edx [ ebp - 0x3b0 ]
push edx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x74 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x78 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x378 ]
call sub_402730
jmp r-xdata
push 0x200
lea ecx [ ebp - 0x64 ]
call sub_4027a0
mov edx [ ebp - 0x18 ]
add edx eax
push edx
mov eax [ ebp - 0x3bc ]
mov ecx [ eax + 0x108 ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x3bc ]
call sub_41a9a3
mov ecx [ ebp - 0x3bc ]
call sub_419e88
push 0x0
push 0x1
mov ecx [ ebp - 0x3bc ]
call sub_48d82d
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3b8 ] eax
mov ecx [ ebp - 0x3b8 ]
push ecx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x74 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x78 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x378 ]
call sub_402730
push 0xffffffff
push 0x0
push 0x3fb
call sub_4840fb
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3b4 ] eax
mov ecx [ ebp - 0x3b4 ]
push ecx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x74 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x78 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x378 ]
call sub_402730
jmp r-xdata
sub_41a306
mov [ ebp - 0x4 ] 0x7
lea edx [ ebp - 0x180 ]
push edx
push 0x3fc
lea eax [ ebp - 0x78 ]
push eax
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x78 ]
call sub_4027c0
push eax
call sub_4840c3
lea ecx [ ebp - 0x74 ]
call sub_47d842
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x38c ]
call sub_403680
mov eax r-xdata
retn
sub_41a479
mov [ ebp - 0x4 ] 0xb
lea ecx [ ebp - 0x180 ]
push ecx
push 0x3fc
lea edx [ ebp - 0x78 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x78 ]
call sub_4027c0
push eax
call sub_4840c3
lea ecx [ ebp - 0x74 ]
call sub_47d842
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x3a8 ] eax
mov ecx [ ebp - 0x3a8 ]
push ecx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp - 0x3a0 ]
call sub_403680
mov eax r-xdata
retn
sub_41a7d8
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x10 ] 0x12
mov [ ebp - 0xe ] 0x12
mov [ ebp - 0xc ] 0xd
mov [ ebp - 0xa ] 0x10
mov [ ebp - 0x8 ] 0xe
mov [ ebp - 0x6 ] 0xd
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x2 ] 0xd
mov [ ebp - 0x18 ] 0x100
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x100
jge r-xdata
cmp [ ebp - 0x14 ] 0x100
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 2 ]
mov [ ebp - 0x20 ] ax
mov ecx [ ebp - 0x20 ]
and ecx 0xffff
sar ecx 0x8
mov [ ebp - 0x1c ] cx
mov edx [ ebp - 0x20 ]
and edx 0xffff
and edx 0xff
mov [ ebp - 0x24 ] dx
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0x8
jl r-xdata
mov eax 0x1
push 0xffffffff
push 0x0
push 0x3fb
call sub_4840fb
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
and ecx 0xffff
mov edx [ ebp - 0x1c ]
and edx 0xffff
xor eax eax
mov ax [ ebp + edx * 2 - 0x10 ]
cmp ecx eax
jl r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_41a8ba
push ebp
mov ebp esp
push 0xffffffff
push sub_497f22
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov [ ebp - 0x2c ] ecx
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
cmp [ ebp - 0x10 ] 0xf
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_42aa10
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
xor eax eax
cmp edx [ ebp + 0xc ]
sete al
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_42aa27
mov eax [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
movsx eax [ edx ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42aa3b
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp + 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
sub_41a9a3
push ebp
mov ebp esp
push 0xffffffff
push sub_497f35
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
lea ecx [ ebp - 0x20 ]
call sub_42aa10
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_42aa27
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
movsx eax [ edx ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x18 ]
imul edx edx 0x14
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x10c ]
add ecx edx
call sub_41b160
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x1c ]
jge r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x18 ]
imul eax eax 0x14
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0x10c ]
add ecx eax
call sub_41b180
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
sub_41aa8f
push ebp
mov ebp esp
push 0xffffffff
push sub_497fab
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x3d4
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x3dc ] ecx
push 0x0
push 0x0
push 0x6
push 0x0
push rw-data
push 0x0
lea ecx [ ebp - 0x370 ]
call sub_475893
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x74 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx 0x8
mov esi rw-data
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
lea eax [ ebp - 0x44 ]
push eax
call [ lstrlenA@IAT ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x48 ]
mov dl [ ebp + ecx - 0x45 ]
mov [ ebp - 0x5c ] dl
mov [ ebp - 0x50 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x50 ]
movsx edx [ ebp + ecx - 0x44 ]
test edx edx
je r-xdata
mov [ ebp - 0x178 ] 0x0
push rw-data
lea ecx [ ebp - 0x74 ]
call sub_47c7b1
mov ecx [ ebp - 0x3dc ]
call sub_40a1e0
mov [ ebp - 0x310 ] eax
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x308 ] ecx
mov [ ebp - 0x2fc ] 0x1
lea edx [ ebp - 0x178 ]
mov [ ebp - 0x2f8 ] edx
mov [ ebp - 0x2f4 ] 0x104
lea ecx [ ebp - 0x74 ]
call sub_4027c0
mov [ ebp - 0x2e4 ] eax
mov eax [ ebp - 0x2e0 ]
or ah 0x18
mov [ ebp - 0x2e0 ] eax
mov ecx [ ebp - 0x3dc ]
add ecx 0x110
mov [ ebp - 0x2e8 ] ecx
lea ecx [ ebp - 0x370 ]
call sub_4759f5
cmp eax 0x1
je r-xdata
movsx eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x50 ]
movsx edx [ ebp + ecx - 0x44 ]
cmp edx eax
jne r-xdata
lea ecx [ ebp - 0x70 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x6c ]
call sub_47d515
mov [ ebp - 0x4 ] 0x3
push 0x0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x24 ]
call sub_4035b0
mov [ ebp - 0x4 ] 0x4
lea edx [ ebp - 0x24 ]
push edx
push 0x1011
lea eax [ ebp - 0x178 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_47d627
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x74 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x370 ]
call sub_402730
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebp + eax - 0x44 ] 0x0
push 0x1770
lea ecx [ ebp - 0x70 ]
call sub_47e84a
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x70 ]
call sub_4027a0
mov [ ebp - 0x3e0 ] eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
mov [ ebp - 0x3e4 ] eax
mov eax [ ebp - 0x3e0 ]
push eax
mov ecx [ ebp - 0x3e4 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_47d77e
jmp r-xdata
lea ecx [ ebp - 0x178 ]
push ecx
push 0x3fc
lea edx [ ebp - 0x70 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x24 ]
call sub_403680
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x6c ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x74 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x370 ]
call sub_402730
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x50 ]
add eax 0x1
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x4 ] 0x8
push 0x200
mov edx [ ebp - 0x3dc ]
mov eax [ edx + 0x108 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_47d77e
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x54 ] 0xf
mov [ ebp - 0x4 ] 0xb
push 0x1
lea ecx [ ebp - 0x54 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_47d77e
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x50 ] 0x0
jmp r-xdata
cmp [ ebp - 0x50 ] 0xf
jge r-xdata
lea ecx [ ebp - 0x6c ]
call sub_47d842
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x24 ]
call sub_403680
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x6c ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x74 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x370 ]
call sub_402730
mov eax [ ebp - 0x50 ]
imul eax eax 0x14
mov ecx [ ebp - 0x3dc ]
mov ecx [ ecx + 0x10c ]
add ecx eax
call sub_41b1b0
mov [ ebp - 0x54 ] al
mov [ ebp - 0x4 ] 0xe
push 0x1
lea edx [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_47d77e
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x54 ]
and eax 0xff
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x3b0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x3b0 ]
cmp edx [ ebp - 0x58 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x3b0 ]
push eax
mov ecx [ ebp - 0x50 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x3dc ]
mov eax [ edx + 0x10c ]
add ecx eax
call sub_41b1d0
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x4 ] 0x11
push 0x4
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_47d77e
jmp r-xdata
mov edx [ ebp - 0x50 ]
add edx 0x1
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x3b0 ]
add ecx 0x1
mov [ ebp - 0x3b0 ] ecx
sub_41b06e
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x104
mov eax [ ebp - 0xc ]
add eax 0x110
push eax
call sub_411190
push eax
call [ GetModuleFileNameA@IAT ]
mov ecx [ ebp - 0xc ]
add ecx 0x110
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x110
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
movsx eax [ edx ]
cmp eax 0x5c
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
call [ CharNextA@IAT ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x8 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
sub_41b0e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41b110
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_41b110
push ebp
mov ebp esp
push 0xffffffff
push sub_497fc9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
call sub_4196e0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_41b180
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4776d4
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_41b1f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_40dbf0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_41b237
push ebp
mov ebp esp
sub esp 0x3c
mov [ ebp - 0x38 ] ecx
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
call sub_41da00
test eax eax
je r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x3c ] ecx
cmp [ ebp - 0x3c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x3c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x38 ]
mov ecx [ edx ]
call sub_40dbf0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x3c ] 0x2
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
imul edx edx 0xffffffff
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
call sub_41d9d0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
imul eax eax 0xffffffff
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x8 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
sub eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x0
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov ecx [ ecx ]
call sub_40dbf0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
call sub_40dbc0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax 0x1
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x8 ]
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jle r-xdata
mov [ ebp - 0xc ] 0x0
xor eax eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x8 ]
jle r-xdata
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x38 ]
mov ecx [ ecx ]
call sub_40dbc0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
call sub_40dbc0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax edx
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
add edx [ ecx + 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
call sub_41d980
mov ecx [ ebp - 0xc ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
call sub_40dbc0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x38 ]
mov ecx [ ecx ]
call sub_41d9a0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
sub ecx eax
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x8 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x30 ] eax
mov ecx 0x1
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
sub edx ecx
sub edx 0x1
mov [ ebp - 0x10 ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
call sub_41d9a0
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax 0x1
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x38 ]
mov ecx [ edx ]
call sub_41d9a0
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
sub edx ecx
sub edx 0x1
mov [ ebp - 0x10 ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
call sub_41d9a0
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x24 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x30 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x38 ]
mov ecx [ ecx ]
call sub_41d9a0
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
mov ecx [ ecx ]
call sub_41d9a0
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34 ]
call sub_41d980
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
sub_41b7fb
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x8 ]
cmp edx [ ebp + 0x8 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] ecx
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x14 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x20 ]
mov ecx [ edx ]
call sub_40dbc0
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_467a70
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_41da20
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x8 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx ]
call sub_40dbc0
mov [ ebp - 0x10 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x1c ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov [ ebp + 0xc ] edx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
sub_41b949
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x14 ]
mov ecx [ edx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub ecx [ eax + 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx + 0xc ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x8 ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x8 ]
add eax [ ebp - 0x10 ]
test eax eax
jle r-xdata
push 0x0
push 0x0
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_41b237
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x8 ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx ]
mov [ eax ] dl
xor eax eax
jmp r-xdata
jmp r-xdata
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax ]
mov [ ecx ] al
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
sub_41ba8e
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx ]
mov [ eax ] dl
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jl r-xdata
mov eax 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
sub ecx 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
call sub_40dbc0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call sub_41d9a0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
sub_41bbb8
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jl r-xdata
mov eax 0x1
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
call sub_40dbc0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov [ eax + 0x8 ] 0x0
sub_41bc53
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
sub ecx 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jge r-xdata
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call sub_41d9a0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
sub_41bd1c
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax + edx ]
mov [ ebp - 0xc ] cl
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x8 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_41be66
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ecx [ ecx ]
call sub_41d9a0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_41bf3b
test eax eax
je r-xdata
mov cl [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_41da60
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x0
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov dl [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_41dab0
test eax eax
je r-xdata
mov cl [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_41dae0
test eax eax
je r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov al [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_41da60
test eax eax
je r-xdata
mov eax 0x4
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x5
jmp r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
sub_41be66
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_41da60
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x80000001
jns r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41c115
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
dec eax
or eax 0xfffffffe
inc eax
mov dl [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_41da60
test eax eax
jne r-xdata
jmp r-xdata
mov al [ ebp - 0xc ]
mov [ ebp - 0x10 ] al
jmp r-xdata
mov al [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_41dab0
test eax eax
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
jmp r-xdata
mov cl [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41dae0
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
sub_41bf3b
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_41dab0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_41bf7d
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax + edx ]
mov [ ebp - 0xc ] cl
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x8 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_41c07c
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ecx [ ecx ]
call sub_41d9a0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov dl [ ebp - 0xc ]
push edx
call [ IsDBCSLeadByte@IAT ]
test eax eax
je r-xdata
mov cl [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_41db30
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x0
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
sub_41c07c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_41da20
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax [ ebp + 0xc ]
mov cl [ eax ]
push ecx
call [ IsDBCSLeadByte@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x80000001
jns r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_41c115
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
dec eax
or eax 0xfffffffe
inc eax
mov cl [ ebp - 0xc ]
push ecx
call [ IsDBCSLeadByte@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
sub_41c115
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub ecx 0x1
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jge r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call sub_41d9a0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov eax 0x1
sub_41c1b1
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax ]
mov [ ecx ] al
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0xc ]
mov [ eax + edx ] cl
mov eax 0x1
sub_41c238
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x24 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x24 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jle r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x14 ] eax
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
cmp ecx [ eax + 0x8 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ebp + 0xc ]
mov [ ecx + eax ] dl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x24 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp - 0x24 ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x1c ]
mov cl [ eax ]
mov [ edx + 0x1 ] cl
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
sub edx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax + 0x1 ]
push edx
call sub_467a70
add esp 0xc
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x14 ]
mov al [ ebp + 0xc ]
mov [ edx ] al
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
mov cl [ ebp + 0xc ]
mov [ eax + edx ] cl
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
sub eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
add edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx + 0x1 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x10 ]
mov dl [ ebp + 0xc ]
mov [ ecx ] dl
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
push edx
call sub_467a70
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
mov eax 0x1
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x4 ]
call sub_41db80
mov edx [ ebp - 0x14 ]
add edx 0x1
push edx
push 0x4000
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
call sub_41dc90
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x24 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
mov eax [ ebp - 0x14 ]
add eax 0x1
push eax
push 0x4000
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx ]
call sub_41dba0
mov edx [ ebp - 0x24 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp - 0x24 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_41c4ef
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x28 ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jl r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax ]
mov [ ecx ] al
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x1
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call sub_40dbc0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call sub_41d9a0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ eax - 0x1 ] 0x0
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
call sub_41db80
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x20 ]
mov dl [ ecx ]
mov [ eax - 0x1 ] dl
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0x4 ]
call sub_41db80
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call sub_41dd80
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_41d980
sub eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov eax 0x1
jmp r-xdata
sub_41c676
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax ]
mov [ ecx ] al
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax + edx ]
or cl [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + eax ] cl
mov eax 0x1
sub_41c709
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jl r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41c7a5
mov eax 0x1
sub_41c7a5
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
sub ecx [ eax + 0x8 ]
cmp ecx [ ebp + 0x14 ]
jl r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
add ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
call sub_467a70
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
sub edx [ ecx + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
add edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp - 0x4 ]
mov [ ebp + 0x14 ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x4 ]
mov [ ebp + 0x18 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
mov ecx [ edx ]
call sub_40dbc0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] eax
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp + 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] 0x0
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
mov ecx [ edx ]
call sub_40dbc0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp + 0x14 ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ ebp + 0x18 ] edx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
sub_41c8e3
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jl r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41c97f
mov eax 0x1
sub_41c97f
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
sub ecx [ eax + 0x8 ]
cmp ecx [ ebp + 0x14 ]
jl r-xdata
mov edx [ ebp - 0x28 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x10 ]
add ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
sub ecx [ eax + 0x8 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x10 ]
add ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x18 ]
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x18 ]
mov [ ebp + 0x18 ] ecx
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx ]
call sub_40dbc0
mov edx [ ebp - 0x28 ]
mov [ edx + 0x4 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x4 ]
call sub_41da20
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x28 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x8 ]
add edx [ ebp + 0x14 ]
cmp [ ebp + 0x8 ] edx
jle r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call sub_40dbc0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0x14 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0x4 ]
call sub_41db80
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx ]
call sub_40dbc0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x8 ]
add ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x8 ]
sub edx ecx
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x10 ]
add ecx [ eax + 0x8 ]
add ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x10 ]
add eax [ edx + 0x8 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call sub_41d9a0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2c ] eax
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x2c ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x8 ] 0x0
push 0x0
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call sub_41dd80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call sub_40dbc0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
call sub_41dd80
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ecx
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp + 0x14 ]
sub edx [ ebp - 0x14 ]
mov [ ebp + 0x14 ] edx
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x14 ]
mov [ ebp + 0x18 ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ eax + 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x28 ]
mov ecx [ edx ]
call sub_40dbc0
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x28 ]
mov ecx [ edx ]
call sub_41dd80
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x28 ]
mov ecx [ edx ]
call sub_41d9a0
test eax eax
je r-xdata
jmp r-xdata
push 0x0
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
mov eax [ ebp - 0x28 ]
mov [ eax + 0x8 ] 0x0
sub_41ccbd
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jle r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_41cd40
mov eax 0x1
sub_41cd40
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x24 ] ecx
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0x14 ]
cmp eax [ ebp + 0xc ]
jg r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x1
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x8 ] eax
jge r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
sub edx [ ecx + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
add ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x10 ]
add ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0x8 ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x10 ]
add eax [ edx + 0x8 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp + 0x8 ]
add ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp - 0x24 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
sub eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x10 ]
add ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp - 0x10 ]
push eax
push 0x4000
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx ]
call sub_41dc90
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
sub eax [ edx + 0x8 ]
cmp [ ebp + 0x14 ] eax
jge r-xdata
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x4 ]
call sub_41db80
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x14 ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp + 0xc ]
mov [ ebp + 0x18 ] edx
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
sub eax [ edx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x4000
jae r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x10 ]
add edx [ ecx + 0x8 ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x8 ]
add ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x24 ]
mov ecx [ edx + 0x4 ]
call sub_41db80
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x10 ]
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x10 ]
mov [ ebp + 0x18 ] ecx
jmp r-xdata
mov [ ebp - 0x2c ] 0x4000
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp - 0x18 ]
push eax
push 0x4000
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx ]
call sub_41dc90
mov edx [ ebp - 0x24 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x18 ]
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x18 ]
mov [ ebp + 0x18 ] ecx
jmp r-xdata
sub_41cf5f
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x14
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp + 0x14 ]
jbe r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_41d0b5
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_41d0b5
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x14 ]
sub edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_41cd40
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_41d0b5
mov eax [ ebp - 0x4 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_41c97f
jmp r-xdata
mov eax 0x1
sub_41d0b5
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
add ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x8 ]
cmp ecx [ edx ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp - 0xc ]
add edx [ eax + 0x8 ]
push edx
mov ecx [ ebp + 0x1c ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp - 0xc ]
add edx [ eax + 0x8 ]
push edx
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x8 ]
add edx [ ebp + 0x14 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x8 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ edx ]
sub ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ebp - 0xc ]
add ecx [ edx + 0x8 ]
push ecx
mov eax [ ebp + 0x1c ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ebp - 0xc ]
add ecx [ edx + 0x8 ]
push ecx
call sub_467a70
add esp 0xc
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x1c ]
add ecx [ ebp - 0x4 ]
mov [ ebp + 0x1c ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x4 ]
mov [ ebp + 0x18 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
mov ecx [ edx ]
call sub_40dbc0
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ecx ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
mov ecx [ edx ]
call sub_40dbc0
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x8 ]
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x1c ]
add ecx [ ebp - 0x8 ]
mov [ ebp + 0x1c ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ ebp + 0x18 ] edx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
jmp r-xdata
sub_41d288
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call sub_40dbf0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_41d980
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call sub_40dbc0
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41d2d5
push ebp
mov ebp esp
sub esp 0x440
mov [ ebp - 0x430 ] ecx
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x430 ]
add eax 0xc
push eax
push 0x0
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp - 0x430 ]
call sub_41b237
mov [ ebp - 0x404 ] 0x0
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ ebp - 0x404 ] 0x100
jge r-xdata
mov ecx [ ebp - 0x430 ]
call sub_41d288
mov [ ebp + 0x1c ] eax
mov edx [ ebp + 0xc ]
sub edx 0x1
mov [ ebp - 0x408 ] edx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x404 ]
mov ecx [ ebp + 0xc ]
mov [ ebp + eax * 4 - 0x400 ] ecx
jmp r-xdata
mov [ ebp - 0x428 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
cmp [ ebp + 0x18 ] eax
jae r-xdata
mov edx [ ebp - 0x404 ]
add edx 0x1
mov [ ebp - 0x404 ] edx
mov edx [ ebp - 0x428 ]
cmp edx [ ebp - 0x408 ]
jge r-xdata
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
lea edx [ ecx + eax - 0x1 ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp + 0xc ]
sub eax 0x1
mov [ ebp - 0x42c ] eax
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x428 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x428 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp + edx * 4 - 0x400 ] eax
jmp r-xdata
mov edx [ ebp - 0x418 ]
cmp edx [ ebp + 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x18
xor eax eax
mov edx [ ebp - 0x42c ]
mov [ ebp - 0x424 ] edx
mov ecx [ ebp - 0x428 ]
add ecx 0x1
mov [ ebp - 0x428 ] ecx
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ecx [ ebp + 0x18 ]
sub ecx eax
mov [ ebp - 0x410 ] ecx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x418 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x418 ]
mov [ ebp + ecx * 4 - 0x400 ] edx
jmp r-xdata
mov ecx [ ebp - 0x41c ]
and ecx 0xff
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0x424 ]
cmp [ ebp + ecx * 4 - 0x400 ] edx
jle r-xdata
lea ecx [ ebp - 0x41c ]
push ecx
mov edx [ ebp - 0x420 ]
push edx
mov ecx [ ebp - 0x430 ]
call sub_41b949
mov eax [ ebp - 0x41c ]
and eax 0xff
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x424 ]
xor edx edx
mov dl [ ecx ]
cmp eax edx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x414 ] 0x0
mov ecx [ ebp - 0x418 ]
add ecx 0x1
mov [ ebp - 0x418 ] ecx
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0x424 ]
mov [ ebp - 0x440 ] edx
mov eax [ ebp - 0x41c ]
and eax 0xff
mov ecx [ ebp + eax * 4 - 0x400 ]
mov [ ebp - 0x440 ] ecx
jmp r-xdata
cmp [ ebp - 0x424 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x410 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x40c ]
push ecx
mov edx [ ebp - 0x410 ]
push edx
mov ecx [ ebp - 0x430 ]
call sub_41b949
mov eax [ ebp - 0x40c ]
and eax 0xff
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x414 ]
xor edx edx
mov dl [ ecx ]
cmp eax edx
je r-xdata
mov ecx [ ebp - 0x420 ]
cmp ecx [ ebp + 0x1c ]
jae r-xdata
mov eax [ ebp - 0x420 ]
add eax [ ebp - 0x440 ]
mov [ ebp - 0x420 ] eax
jmp r-xdata
mov edx [ ebp - 0x420 ]
sub edx 0x1
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x424 ]
sub eax 0x1
mov [ ebp - 0x424 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x420 ]
mov [ eax ] ecx
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x40c ]
and edx 0xff
mov eax [ ebp - 0x414 ]
add eax 0x1
cmp [ ebp + edx * 4 - 0x400 ] eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x414 ]
cmp eax [ ebp - 0x408 ]
jne r-xdata
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x414 ]
add eax 0x1
mov [ ebp - 0x434 ] eax
mov ecx [ ebp - 0x40c ]
and ecx 0xff
mov edx [ ebp + ecx * 4 - 0x400 ]
mov [ ebp - 0x434 ] edx
jmp r-xdata
mov eax [ ebp - 0x410 ]
add eax 0x1
mov [ ebp - 0x410 ] eax
mov ecx [ ebp - 0x414 ]
add ecx 0x1
mov [ ebp - 0x414 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x410 ]
sub ecx [ ebp - 0x408 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x40c ]
and eax 0xff
mov ecx [ ebp - 0x414 ]
add ecx 0x1
cmp [ ebp + eax * 4 - 0x400 ] ecx
jle r-xdata
mov edx [ ebp - 0x410 ]
mov [ ebp - 0x438 ] edx
jmp r-xdata
mov ecx [ ebp - 0x410 ]
cmp ecx [ ebp - 0x434 ]
jae r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x414 ]
add ecx 0x1
mov [ ebp - 0x43c ] ecx
mov edx [ ebp - 0x40c ]
and edx 0xff
mov eax [ ebp + edx * 4 - 0x400 ]
mov [ ebp - 0x43c ] eax
jmp r-xdata
mov eax [ ebp - 0x410 ]
sub eax [ ebp - 0x438 ]
mov [ ebp - 0x410 ] eax
jmp r-xdata
mov edx [ ebp - 0x410 ]
cmp edx [ ebp + 0x1c ]
jb r-xdata
mov edx [ ebp - 0x43c ]
mov [ ebp - 0x438 ] edx
sub_41d6bf
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0xc
push eax
push 0x0
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41b237
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_41d288
mov [ ebp + 0x18 ] eax
xor eax eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_41b949
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp + 0x8 ]
and ecx 0xff
cmp eax ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov [ edx ] eax
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_41b949
mov eax [ ebp - 0x4 ]
and eax 0xff
mov ecx [ ebp + 0x8 ]
and ecx 0xff
cmp eax ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x18 ]
jb r-xdata
sub_41d7ad
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x1c ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ecx [ ecx + 0x4 ]
call sub_41da20
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x1c ]
cmp [ edx + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov eax 0x1
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x8 ]
cmp [ ebp + 0xc ] edx
jae r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x8 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x8 ]
add edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ecx [ ecx ]
call sub_40dbc0
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x4 ]
call sub_41da20
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ eax + 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
add eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
and eax 0xff
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
add edx [ ecx + 0x8 ]
push edx
call sub_467a10
add esp 0xc
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
jmp r-xdata
sub_41d925
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
call sub_41da20
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
call sub_40dbc0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x0
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_41d9a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_437690
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_41d9d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_437690
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
sub_41da20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov [ eax ] edx
sub_41da60
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
cmp eax 0xa1
jl r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
and ecx 0xff
cmp ecx 0xfe
jg r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_41dab0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
xor ecx ecx
cmp eax 0x8e
sete cl
mov eax ecx
mov esp ebp
pop ebp
retn 0x4
sub_41dae0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
cmp eax 0xa1
jl r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
and ecx 0xff
cmp ecx 0xdf
jg r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_41db30
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
cmp eax 0x40
jl r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
and ecx 0xff
cmp ecx 0xfc
jg r-xdata
mov edx [ ebp + 0x8 ]
and edx 0xff
cmp edx 0x7f
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_41dba0
push ebp
mov ebp esp
push 0xffffffff
push sub_497feb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x20 ] ecx
push 0x18
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_40d9c0
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp - 0x20 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_437690
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_403510
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_403530
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_403530
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_403510
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_403550
sub_41dc90
push ebp
mov ebp esp
push 0xffffffff
push sub_49800b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x20 ] ecx
push 0x18
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_40d9c0
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp - 0x20 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_403510
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_403530
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_403510
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_403530
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_403550
sub_41dd80
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
call sub_437690
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
call sub_41b1b0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_403530
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_403510
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_41de20
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
push 0x1
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
call [ eax ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x18 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x8 ]
jmp r-xdata
sub_41de20
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax ] edx
sub_41de80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_428cd0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41dea2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_404fb0
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_41dece
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_41e0a0
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_41defa
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_41e0a0
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_41df26
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_41e0c0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_41df62
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp + 0xc ]
jl r-xdata
mov [ ebp - 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp + 0x8 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_41dfa5
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp + 0xc ]
jl r-xdata
mov [ ebp - 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp + 0x8 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_41dfe8
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov [ ebp - 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_41e02b
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov [ ebp - 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_41e070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41df4e
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_41e0a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_41e0c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
movsx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
shr edx 0x10
and edx 0xffff
movsx eax dx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_41e110
push ebp
mov ebp esp
push 0xffffffff
push sub_49810d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp - 0x50 ]
call sub_48a25c
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x50 ]
add ecx 0xc0
call sub_491363
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x50 ]
add ecx 0x13c
call sub_490e0b
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x50 ]
add ecx 0x1d8
call sub_40b960
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x50 ]
add ecx 0x2b8
call sub_40b660
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x50 ]
add ecx 0x390
call sub_40bd70
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x50 ]
add ecx 0x83c
call sub_401260
mov [ ebp - 0x4 ] 0x6
push sub_47c674
push sub_401690
push 0x2
push 0x4
mov eax [ ebp - 0x50 ]
add eax 0x844
push eax
call sub_467f48
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x84c ] 0x0
mov ecx [ ebp - 0x50 ]
add ecx 0xb40
call sub_401690
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x50 ]
add ecx 0xb44
call sub_401690
mov [ ebp - 0x4 ] 0x9
mov edx [ ebp - 0x50 ]
mov [ edx + 0xb58 ] 0x0
mov eax [ ebp - 0x50 ]
mov [ eax + 0xb5c ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xb60 ] 0x0
mov edx [ ebp - 0x50 ]
mov [ edx + 0xb70 ] 0x0
mov eax [ ebp - 0x50 ]
mov [ eax + 0xb74 ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xb78 ] 0x0
mov edx [ ebp - 0x50 ]
mov [ edx + 0xb7c ] 0x0
mov eax [ ebp - 0x50 ]
mov [ eax + 0xb90 ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xb94 ] 0x2
mov edx [ ebp - 0x50 ]
mov [ edx + 0xb98 ] 0x0
mov ecx [ ebp - 0x50 ]
add ecx 0xba0
call sub_4770bc
mov [ ebp - 0x4 ] 0xa
mov ecx [ ebp - 0x50 ]
add ecx 0xbb4
call sub_4770bc
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x50 ]
add ecx 0xbc8
call sub_4770bc
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x50 ]
add ecx 0xbdc
call sub_47711c
mov [ ebp - 0x4 ] 0xd
push sub_4774f7
push sub_4774c4
push 0xf
push 0x14
mov eax [ ebp - 0x50 ]
add eax 0xbf0
push eax
call sub_467f48
mov [ ebp - 0x4 ] 0xe
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xf1c ] 0x0
mov edx [ ebp - 0x50 ]
mov [ edx + 0xf20 ] 0x0
mov eax [ ebp - 0x50 ]
mov [ eax + 0xf24 ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xf28 ] 0x0
mov edx [ ebp - 0x50 ]
mov [ edx + 0xf2c ] 0x0
mov eax [ ebp - 0x50 ]
mov [ eax + 0xf30 ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xf34 ] 0xffffffff
mov edx [ ebp - 0x50 ]
mov [ edx + 0xf38 ] 0xffffffff
mov eax [ ebp - 0x50 ]
mov [ eax + 0xf3c ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xf40 ] 0xffffffff
mov edx [ ebp - 0x50 ]
mov [ edx + 0xf44 ] 0x0
mov eax [ ebp - 0x50 ]
mov [ eax + 0x111c ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx ] r--data
mov ecx [ ebp - 0x50 ]
call sub_42586e
mov ecx [ ebp - 0x50 ]
call sub_425974
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0xf
jge r-xdata
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x50 ]
add ecx 0xbb4
call sub_477524
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x50 ]
add ecx 0xbc8
call sub_477524
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x50 ]
add ecx 0xbdc
call sub_4771af
mov edx [ ebp - 0x50 ]
add edx 0xb40
mov eax [ ebp - 0x50 ]
mov [ eax + 0xa70 ] edx
mov ecx [ ebp - 0x50 ]
add ecx 0xb44
mov edx [ ebp - 0x50 ]
mov [ edx + 0xa74 ] ecx
mov eax [ ebp - 0x50 ]
add eax 0xb48
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xa78 ] eax
mov edx [ ebp - 0x50 ]
add edx 0xb4c
mov eax [ ebp - 0x50 ]
mov [ eax + 0xa7c ] edx
push 0x3c
push 0x0
lea ecx [ ebp - 0x4c ]
push ecx
call sub_467a10
add esp 0xc
mov [ ebp - 0x4c ] 0x5a
mov [ ebp - 0x35 ] 0x80
push rw-data
lea edx [ ebp - 0x30 ]
push edx
call [ lstrcpyA@IAT ]
push 0x0
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x50 ]
add ecx 0x83c
call sub_489de7
mov ecx [ ebp - 0x50 ]
call sub_42662d
push 0xc
push 0x0
mov ecx [ ebp - 0x50 ]
add ecx 0x1110
push ecx
call sub_467a10
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0xffffffff
push 0x0
mov eax [ ebp - 0x10 ]
imul eax eax 0x14
mov ecx [ ebp - 0x50 ]
lea ecx [ ecx + eax + 0xbf0 ]
call sub_477524
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_41e4bd
push ebp
mov ebp esp
push 0xffffffff
push sub_498204
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xe
mov ecx [ ebp - 0x58 ]
cmp [ ecx + 0xf3c ] 0x0
je r-xdata
mov ecx [ ebp - 0x58 ]
call sub_421262
test eax eax
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0xf3c ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
push ecx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x58 ]
cmp [ eax + 0xf1c ] 0x0
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx [ ebp - 0x58 ]
cmp [ ecx + 0xf24 ] 0x0
je r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0xf1c ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
push eax
call sub_47c3de
add esp 0x4
push rw-data
call sub_416b30
add esp 0x4
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x58 ]
cmp [ edx + 0xf2c ] 0x0
je r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0xf24 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
push ecx
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x58 ]
add ecx 0xba0
call sub_41b1b0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0xf2c ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x40 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x58 ]
mov [ eax + 0xf2c ] 0x0
mov ecx [ ebp - 0x58 ]
mov [ ecx + 0xf30 ] 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0xbb4
call sub_41b1b0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x58 ]
add ecx 0xbc8
call sub_41b1b0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov [ ebp - 0x4 ] 0xd
push sub_4774f7
push 0xf
push 0x14
mov edx [ ebp - 0x58 ]
add edx 0xbf0
push edx
call sub_467e54
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x58 ]
add ecx 0xbdc
call sub_47714f
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x58 ]
add ecx 0xbc8
call sub_4770ef
mov [ ebp - 0x4 ] 0xa
mov ecx [ ebp - 0x58 ]
add ecx 0xbb4
call sub_4770ef
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebp - 0x58 ]
add ecx 0xba0
call sub_4770ef
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x58 ]
add ecx 0xb44
call sub_47c674
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x58 ]
add ecx 0xb40
call sub_47c674
mov [ ebp - 0x4 ] 0x6
push sub_47c674
push 0x2
push 0x4
mov eax [ ebp - 0x58 ]
add eax 0x844
push eax
call sub_467e54
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x58 ]
add ecx 0x83c
call sub_401380
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x58 ]
add ecx 0x390
call sub_40be54
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x58 ]
add ecx 0x2b8
call sub_40b68c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x58 ]
add ecx 0x1d8
call sub_40b9c7
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x58 ]
add ecx 0x13c
call sub_490e88
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0xc0
call sub_4913bc
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x58 ]
call sub_428830
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x58 ]
add ecx 0xba0
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb4 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x58 ]
add ecx 0xbb4
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x48
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_480765
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x58 ]
add ecx 0xbc8
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x54 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0x48 ] ecx
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x48
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp - 0x44 ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov [ ebp - 0x60 ] 0x0
push 0x1
mov ecx [ ebp - 0x48 ]
call sub_40ffd0
mov [ ebp - 0x60 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
sub_41e8a1
push ebp
mov ebp esp
sub esp 0x90
push esi
mov [ ebp - 0x84 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x84 ]
call sub_48bbfc
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x84 ]
call sub_41f2a5
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push 0xe800
push 0x50002800
mov ecx [ ebp - 0x84 ]
push ecx
mov ecx [ ebp - 0x84 ]
add ecx 0x13c
call sub_490edc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
or eax 0xffffffff
jmp r-xdata
push 0x80
mov ecx [ ebp - 0x84 ]
add ecx 0x13c
call sub_428cb0
test eax eax
jne r-xdata
push rw-data
mov ecx [ ebp - 0x84 ]
add ecx 0x13c
call sub_47bc7c
mov ecx [ ebp - 0x84 ]
call sub_41f087
test eax eax
jne r-xdata
push 0xe801
push 0x50008200
mov edx [ ebp - 0x84 ]
push edx
mov ecx [ ebp - 0x84 ]
add ecx 0xc0
call sub_4913f7
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0xf28 ]
push ecx
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0xf24 ]
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0xc0
call sub_4914ac
test eax eax
jne r-xdata
push 0x2800
push 0x1
push 0xe821
push 0x64
push 0xdc
lea ecx [ ebp - 0x50 ]
call sub_404fb0
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
mov eax [ ebp - 0x84 ]
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x1d8
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0x1d8 ]
call [ eax + 0xe0 ]
test eax eax
jne r-xdata
push 0x2
call [ GetSystemMetrics@IAT ]
mov esi eax
push 0x2d
call [ GetSystemMetrics@IAT ]
lea ecx [ esi + eax * 4 + 0xa0 ]
mov [ ebp - 0x4 ] ecx
push 0x2800
push 0x0
push 0xe822
push 0x1f4
mov edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x58 ]
call sub_404fb0
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
mov eax [ ebp - 0x84 ]
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x2b8
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0x2b8 ]
call [ eax + 0xe0 ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_428cd0
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0xbc ]
push eax
call [ GetClientRect@IAT ]
lea ecx [ ebp - 0x14 ]
call sub_404fe0
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x44 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x84 ]
call sub_4061a0
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0xafc ]
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x390
call sub_40d2f9
mov ecx [ ebp - 0x84 ]
mov edx [ ebp - 0x84 ]
mov eax [ ecx + 0xafc ]
and eax [ edx + 0x111c ]
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x88 ] 0x0
mov ecx [ ebp - 0x84 ]
add ecx 0x1110
mov [ ebp - 0x88 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x84 ]
add ecx 0x390
call sub_428c90
or al 0x20
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x390
call sub_490bec
mov ecx [ ebp - 0x84 ]
mov edx [ ecx + 0xaf8 ]
push edx
mov ecx [ ebp - 0x84 ]
add ecx 0x390
call sub_40d283
mov ecx [ ebp - 0x84 ]
add ecx 0x13c
call sub_428c90
or al 0x10
or al 0x20
or al 0x4
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x13c
call sub_490bec
push 0x5000
mov ecx [ ebp - 0x84 ]
add ecx 0x2b8
call sub_4873d1
push 0xa000
mov ecx [ ebp - 0x84 ]
add ecx 0x1d8
call sub_4873d1
push 0xf000
mov ecx [ ebp - 0x84 ]
add ecx 0x13c
call sub_4873d1
push 0xa000
mov ecx [ ebp - 0x84 ]
add ecx 0x390
call sub_4873d1
push 0xf000
mov ecx [ ebp - 0x84 ]
call sub_48e620
push 0x0
push 0x0
mov eax [ ebp - 0x84 ]
add eax 0x13c
push eax
mov ecx [ ebp - 0x84 ]
call sub_48e6b5
push 0x0
push 0xe81e
mov ecx [ ebp - 0x84 ]
add ecx 0x1d8
push ecx
mov ecx [ ebp - 0x84 ]
call sub_48e6b5
push 0x0
push 0xe81c
mov edx [ ebp - 0x84 ]
add edx 0x2b8
push edx
mov ecx [ ebp - 0x84 ]
call sub_48e6b5
mov eax [ ebp - 0x84 ]
cmp [ eax + 0xaec ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x88 ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x48 ]
push eax
push 0x2800
push 0x1
mov ecx [ ebp - 0x84 ]
xor edx edx
cmp [ ecx + 0xaec ] 0x2
sete dl
push edx
push 0xe823
push 0x194
push 0x248
lea ecx [ ebp - 0x60 ]
call sub_404fb0
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
mov eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_405cf0
push eax
lea ecx [ ebp - 0x68 ]
call sub_404fb0
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
mov eax [ ebp - 0x84 ]
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x390
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0x390 ]
call [ eax + 0xe4 ]
test eax eax
jne r-xdata
push 0x0
push 0xe81b
mov edx [ ebp - 0x84 ]
add edx 0x390
push edx
mov ecx [ ebp - 0x84 ]
call sub_48e6b5
push 0x0
push 0xe81e
mov ecx [ ebp - 0x84 ]
add ecx 0x390
push ecx
mov ecx [ ebp - 0x84 ]
call sub_48e6b5
jmp r-xdata
mov ecx [ ebp - 0x84 ]
cmp [ ecx + 0xae4 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebp - 0x84 ]
mov edx [ ecx + 0xae0 ]
push edx
mov eax [ ebp - 0x84 ]
add eax 0x13c
push eax
mov ecx [ ebp - 0x84 ]
call sub_48c60a
push 0x0
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0xb60 ]
push ecx
mov edx [ ebp - 0x84 ]
add edx 0x390
push edx
mov ecx [ ebp - 0x84 ]
call sub_48c60a
push 0x0
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0xb5c ]
push ecx
mov edx [ ebp - 0x84 ]
add edx 0x2b8
push edx
mov ecx [ ebp - 0x84 ]
call sub_48c60a
mov eax [ ebp - 0x84 ]
cmp [ eax + 0xae0 ] 0x0
jne r-xdata
mov [ ebp - 0x40 ] 0x2c
mov edx [ ebp - 0x40 ]
push edx
push 0x0
lea eax [ ebp - 0x40 ]
push eax
call sub_467a10
add esp 0xc
push 0x6
call [ GetSystemMetrics@IAT ]
neg eax
push eax
push 0x5
call [ GetSystemMetrics@IAT ]
neg eax
push eax
lea ecx [ ebp - 0x70 ]
call sub_404fb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0xac4 ]
mov [ ebp - 0x8c ] ecx
cmp [ ebp - 0x8c ] 0x1
je r-xdata
push 0x0
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0xae4 ]
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0xc0
push ecx
mov ecx [ ebp - 0x84 ]
call sub_48c60a
mov [ ebp - 0x38 ] 0x1
mov edx [ ebp - 0x84 ]
add edx 0xac8
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
lea edx [ ebp - 0x40 ]
push edx
mov ecx [ ebp - 0x84 ]
call sub_479747
jmp r-xdata
cmp [ ebp - 0x8c ] 0x2
je r-xdata
mov esi [ ebp - 0x14 ]
sub esi [ ebp - 0x4 ]
push 0x20
call [ GetSystemMetrics@IAT ]
sub esi eax
test esi esi
jge r-xdata
mov [ ebp - 0x38 ] 0x3
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x84 ]
call sub_479747
cmp [ ebp - 0x8c ] 0x3
je r-xdata
mov esi [ ebp - 0x14 ]
sub esi [ ebp - 0x4 ]
push 0x20
call [ GetSystemMetrics@IAT ]
sub esi eax
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x84 ]
cmp [ edx + 0xaec ] 0x2
jne r-xdata
push 0x0
mov ecx [ ebp - 0x84 ]
add ecx 0x2b8
call sub_4873d1
push 0x2000
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x90 ]
push edx
lea ecx [ ebp - 0x78 ]
call sub_404fb0
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ eax ]
push edx
mov eax [ ebp - 0x84 ]
add eax 0x2b8
push eax
mov ecx [ ebp - 0x84 ]
call sub_48e7b7
mov ecx [ ebp - 0x84 ]
cmp [ ecx + 0xae8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x84 ]
cmp [ edx + 0xaec ] 0x2
jne r-xdata
push 0x2000
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x80 ]
call sub_404fb0
mov edx [ eax + 0x4 ]
push edx
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x390
push ecx
mov ecx [ ebp - 0x84 ]
call sub_48e7b7
mov ecx [ ebp - 0x84 ]
add ecx 0xba0
mov edx [ ebp - 0x84 ]
mov [ edx + 0xb1c ] ecx
mov eax [ ebp - 0x84 ]
add eax 0xd1c
mov ecx [ ebp - 0x84 ]
mov [ ecx + 0xb20 ] eax
mov edx [ ebp - 0x84 ]
add edx 0xbf0
mov eax [ ebp - 0x84 ]
mov [ eax + 0xb24 ] edx
mov ecx [ ebp - 0x84 ]
add ecx 0xbb4
mov edx [ ebp - 0x84 ]
mov [ edx + 0xb28 ] ecx
mov eax [ ebp - 0x84 ]
add eax 0xbc8
mov ecx [ ebp - 0x84 ]
mov [ ecx + 0xb2c ] eax
mov edx [ ebp - 0x84 ]
mov [ edx + 0xb30 ] 0x0
mov eax [ ebp - 0x84 ]
add eax 0xbdc
mov ecx [ ebp - 0x84 ]
mov [ ecx + 0xb34 ] eax
mov edx [ ebp - 0x84 ]
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0xf3c ]
mov [ edx + 0xb38 ] ecx
mov edx [ ebp - 0x84 ]
add edx 0x850
mov eax [ ebp - 0x84 ]
mov [ eax + 0xb3c ] edx
push 0x1
mov ecx [ ebp - 0x84 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x84 ]
call [ edx + 0xc8 ]
xor eax eax
mov eax [ ebp - 0x84 ]
cmp [ eax + 0xaf0 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0x84 ]
add ecx 0x390
call sub_4873d1
sub_41f087
push ebp
mov ebp esp
push 0xffffffff
push sub_498217
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0x3c ]
add ecx 0x13c
call sub_428cd0
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_428d40
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov edx [ ebp - 0x3c ]
cmp [ edx + 0xf20 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_428d10
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0xf20 ]
imul ecx ecx 0x14
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0xf20 ]
imul ecx ecx 0x14
push ecx
push 0x0
mov edx [ ebp - 0x2c ]
push edx
call sub_467a10
add esp 0xc
lea ecx [ ebp - 0x20 ]
call sub_464120
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x28 ]
cmp edx [ ecx + 0xf20 ]
jge r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0xf20 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_428ce0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
push edx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_46412e
mov eax [ ebp - 0x28 ]
imul eax eax 0x14
mov ecx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0xf1c ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x30 ] edx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_464195
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x30 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x8 ] 0x4
mov edx [ ebp - 0x24 ]
mov [ edx + 0x9 ] 0x0
mov eax [ ebp - 0x24 ]
mov [ eax + 0x10 ] 0x0
mov eax [ ebp - 0x24 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x24 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x24 ]
mov [ eax + 0x9 ] 0x1
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
jmp r-xdata
sub_41f23f
push ebp
mov ebp esp
sub esp 0x40
mov [ ebp - 0x40 ] ecx
push 0x3c
push 0x0
lea eax [ ebp - 0x3c ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x60 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x68 ]
mov [ ebp - 0x28 ] al
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x6c ]
mov [ ebp - 0x25 ] dl
mov eax [ ebp + 0x8 ]
add eax 0x70
push eax
lea ecx [ ebp - 0x20 ]
push ecx
call [ lstrcpyA@IAT ]
lea edx [ ebp - 0x3c ]
push edx
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
call sub_405d10
mov esp ebp
pop ebp
retn 0x4
sub_41f2a5
push ebp
mov ebp esp
push 0xffffffff
push sub_4982c7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x150
mov [ ebp - 0x114 ] ecx
lea ecx [ ebp - 0x64 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
call sub_4036e0
mov [ ebp - 0x78 ] eax
push 0x2711
lea ecx [ ebp - 0x64 ]
call sub_47e84a
push 0x2757
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0x110c ] eax
push 0x273f
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xb58 ] eax
push 0x2720
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xa80 ] eax
push 0x2737
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xa84 ] eax
push 0x2738
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xa88 ] eax
push 0x2739
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xa8c ] eax
push 0x273d
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xa90 ] eax
push 0x273e
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xa94 ] eax
push 0x2746
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xa98 ] eax
push 0x2754
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xa9c ] eax
push 0x2753
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xaa0 ] eax
push 0x2755
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xaa4 ] eax
push 0x273a
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x3
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xaa8 ] eax
push 0x2765
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x5
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xaac ] eax
mov eax [ ebp - 0x114 ]
cmp [ eax + 0xaac ] 0x1
jle r-xdata
mov edx [ ebp - 0x114 ]
mov [ edx + 0xaac ] 0x5
mov ecx [ ebp - 0x114 ]
cmp [ ecx + 0xaac ] 0x10
jle r-xdata
cmp [ ebp - 0x88 ] 0x3
jge r-xdata
push 0x2766
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xab0 ] eax
push 0x2767
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xab4 ] eax
push 0x2768
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xab8 ] eax
push 0x2769
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xabc ] eax
push 0x276a
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xac0 ] eax
push 0x2745
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xac4 ] eax
push 0x274a
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xac8 ] eax
push 0x274b
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xacc ] eax
push 0x274c
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x27f
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xad0 ] eax
push 0x274d
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1df
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xad4 ] eax
push 0x271f
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xad8 ] eax
push 0x272f
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xadc ] eax
push 0x2743
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xae0 ] eax
push 0x2744
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xae4 ] eax
push 0x2756
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xae8 ] eax
push 0x275a
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x2
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xaec ] eax
push 0x275b
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xaf0 ] eax
push 0x2764
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x2
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xaf8 ] eax
push 0x276b
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xafc ] eax
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
cmp [ ebp - 0x88 ] 0x3
jne r-xdata
mov eax [ ebp - 0x88 ]
add eax 0x1
push eax
push 0x276c
lea ecx [ ebp - 0x18 ]
push ecx
call sub_47584a
add esp 0xc
push 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x90 ] 0xffffffff
jne r-xdata
push 0x2733
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xb48 ] eax
push 0x2734
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0xb4c ] eax
push 0x2731
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push rw-data
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
lea eax [ ebp - 0xac ]
push eax
mov ecx [ ebp - 0x78 ]
call sub_4919bb
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x118 ]
mov [ ebp - 0x11c ] ecx
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x11c ]
push edx
mov ecx [ ebp - 0x114 ]
add ecx 0xb40
call sub_47c761
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xac ]
call sub_47c674
push 0x2732
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push rw-data
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
lea eax [ ebp - 0xb0 ]
push eax
mov ecx [ ebp - 0x78 ]
call sub_4919bb
mov [ ebp - 0x120 ] eax
mov ecx [ ebp - 0x120 ]
mov [ ebp - 0x124 ] ecx
mov [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0x124 ]
push edx
mov ecx [ ebp - 0x114 ]
add ecx 0xb44
call sub_47c761
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xb0 ]
call sub_47c674
push 0x2721
lea ecx [ ebp - 0x18 ]
call sub_47e84a
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x84 ]
push ecx
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_491acc
test eax eax
je r-xdata
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0x111c ] 0x1
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x88 ]
mov eax [ ebp - 0x90 ]
mov [ ebp + edx * 4 - 0x74 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x200
jne r-xdata
cmp [ ebp - 0x88 ] 0x3
jge r-xdata
mov edx [ ebp - 0x88 ]
add edx 0x1
mov [ ebp - 0x88 ] edx
mov ecx [ ebp - 0x114 ]
add ecx 0xd1c
push ecx
mov ecx [ ebp - 0x114 ]
call sub_425407
mov edx [ ebp - 0x84 ]
mov [ ebp - 0xbc ] edx
mov eax [ ebp - 0xbc ]
push eax
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x60 ]
push edx
mov eax [ ebp - 0x84 ]
push eax
mov ecx [ ebp - 0x114 ]
add ecx 0xd1c
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp - 0x84 ]
mov [ ebp - 0xb4 ] edx
mov eax [ ebp - 0xb4 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x114 ]
add ecx 0xd1c
push ecx
mov ecx [ ebp - 0x114 ]
call sub_42545f
test eax eax
jne r-xdata
mov eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x114 ]
mov edx [ ebp - 0x88 ]
mov edx [ ebp + edx * 4 - 0x74 ]
mov [ ecx + eax * 4 + 0x1110 ] edx
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
xor edx edx
mov ecx 0x4
div ecx
test edx edx
jne r-xdata
jmp r-xdata
mov [ ebp - 0xb8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov eax [ ebp - 0xb8 ]
jmp r-xdata
mov edx [ ebp - 0x88 ]
add edx 0x1
mov [ ebp - 0x88 ] edx
mov ecx [ ebp - 0x114 ]
call sub_425559
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xc4 ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x114 ]
mov eax [ ebp - 0x84 ]
mov [ edx + 0xf1c ] eax
mov ecx [ ebp - 0x60 ]
shr ecx 0x2
mov edx [ ebp - 0x114 ]
mov [ edx + 0xf20 ] ecx
mov ecx [ ebp - 0x114 ]
call sub_4255bd
test eax eax
jne r-xdata
push 0x273c
lea ecx [ ebp - 0x18 ]
call sub_47e84a
lea edx [ ebp - 0x60 ]
push edx
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_491acc
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
xor edx edx
mov ecx 0x4
div ecx
test edx edx
jne r-xdata
jmp r-xdata
mov [ ebp - 0xc0 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov eax [ ebp - 0xc0 ]
jmp r-xdata
mov ecx [ ebp - 0x114 ]
call sub_42572e
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xcc ] eax
mov ecx [ ebp - 0xcc ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x114 ]
mov eax [ ebp - 0x84 ]
mov [ edx + 0xf24 ] eax
mov ecx [ ebp - 0x60 ]
shr ecx 0x2
mov edx [ ebp - 0x114 ]
mov [ edx + 0xf28 ] ecx
mov ecx [ ebp - 0x114 ]
call sub_4257d0
test eax eax
jne r-xdata
push 0x2742
lea ecx [ ebp - 0x18 ]
call sub_47e84a
lea edx [ ebp - 0x60 ]
push edx
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_491acc
test eax eax
je r-xdata
mov edx [ ebp - 0x114 ]
mov [ edx + 0x854 ] 0x0
mov ecx [ ebp - 0x114 ]
cmp [ ecx + 0x854 ] 0x9
jle r-xdata
jmp r-xdata
mov [ ebp - 0xc8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov eax [ ebp - 0xc8 ]
jmp r-xdata
mov edx [ ebp - 0x114 ]
mov [ edx + 0x850 ] 0x1
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0x850 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x114 ]
cmp [ eax + 0x854 ] 0x0
jne r-xdata
push 0x2729
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x114 ]
mov [ edx + 0x854 ] eax
mov eax [ ebp - 0x114 ]
cmp [ eax + 0x854 ] 0x0
jl r-xdata
cmp [ ebp - 0x88 ] 0xf
jge r-xdata
push 0x272a
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
lea eax [ ebp - 0xd0 ]
push eax
mov ecx [ ebp - 0x78 ]
call sub_4919bb
mov [ ebp - 0x128 ] eax
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x4 ] 0x5
mov edx [ ebp - 0x12c ]
push edx
lea ecx [ ebp - 0x98 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xd0 ]
call sub_47c674
lea ecx [ ebp - 0x98 ]
call sub_4027c0
push eax
mov eax [ ebp - 0x114 ]
add eax 0x85c
push eax
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x114 ]
movsx edx [ ecx + 0x85c ]
neg edx
sbb edx edx
neg edx
mov eax [ ebp - 0x114 ]
mov [ eax + 0x858 ] edx
push 0x273b
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0x960 ] eax
push 0x274f
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
lea edx [ ebp - 0xd4 ]
push edx
mov ecx [ ebp - 0x78 ]
call sub_4919bb
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x130 ]
mov [ ebp - 0x134 ] eax
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x134 ]
push ecx
lea ecx [ ebp - 0x98 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xd4 ]
call sub_47c674
lea ecx [ ebp - 0x98 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x114 ]
add edx 0x968
push edx
call [ lstrcpyA@IAT ]
mov eax [ ebp - 0x114 ]
movsx ecx [ eax + 0x968 ]
neg ecx
sbb ecx ecx
neg ecx
mov edx [ ebp - 0x114 ]
mov [ edx + 0x964 ] ecx
push 0x2759
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x114 ]
mov [ ecx + 0xa6c ] eax
push 0x2727
lea ecx [ ebp - 0x64 ]
call sub_47e84a
lea ecx [ ebp - 0x94 ]
call sub_42aa10
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x88 ]
add eax 0x1
push eax
push 0x2741
lea ecx [ ebp - 0x18 ]
push ecx
call sub_47584a
add esp 0xc
lea edx [ ebp - 0x60 ]
push edx
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_491acc
test eax eax
je r-xdata
push 0x272b
lea ecx [ ebp - 0x64 ]
call sub_47e84a
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
mov [ ebp - 0xa4 ] 0xe
push 0x540302
mov ecx [ ebp - 0x114 ]
add ecx 0xd08
call sub_41b180
push r-xdata
mov ecx [ ebp - 0x114 ]
add ecx 0xd08
call sub_41b180
push 0x500304
mov ecx [ ebp - 0x114 ]
add ecx 0xd08
call sub_41b180
push 0x0
mov ecx [ ebp - 0x114 ]
add ecx 0xd08
call sub_41b180
push 0x53030c
mov ecx [ ebp - 0x114 ]
add ecx 0xd08
call sub_41b180
push r-xdata
mov ecx [ ebp - 0x114 ]
add ecx 0xd08
call sub_41b180
push r-xdata
mov ecx [ ebp - 0x114 ]
add ecx 0xd08
call sub_41b180
cmp [ ebp - 0x88 ] 0xe
jne r-xdata
mov eax [ ebp - 0x60 ]
xor edx edx
mov ecx 0x4
div ecx
test edx edx
jne r-xdata
cmp [ ebp - 0x88 ] 0xa
jge r-xdata
mov edx [ ebp - 0x84 ]
mov [ ebp - 0xd8 ] edx
mov eax [ ebp - 0xd8 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
mov [ ebp - 0x14 ] 0xffffffff
mov edx [ ebp - 0x60 ]
shr edx 0x2
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x9c ] 0x0
jmp r-xdata
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x88 ]
push edx
push 0x272c
lea eax [ ebp - 0x18 ]
push eax
call sub_47584a
add esp 0xc
lea ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_491acc
test eax eax
je r-xdata
mov edx [ ebp - 0x88 ]
add edx 0x1
mov [ ebp - 0x88 ] edx
mov ecx [ ebp - 0x9c ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
cmp [ ebp - 0x88 ] 0xa
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x84 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
add ecx 0x2
cmp [ ebp - 0x60 ] ecx
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x9c ]
mov eax [ ebp - 0x84 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0xa0 ]
push edx
lea ecx [ ebp - 0x94 ]
call sub_42aa3b
test eax eax
je r-xdata
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x88 ]
push edx
push 0x272d
lea eax [ ebp - 0x18 ]
push eax
call sub_47584a
add esp 0xc
lea ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_491acc
test eax eax
je r-xdata
push 0x58
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xdc ] eax
mov edx [ ebp - 0xdc ]
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x84 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x80 ]
mov [ edx + 0x54 ] ecx
mov eax [ ebp - 0x84 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov edx [ ebp - 0x80 ]
mov [ edx + 0x50 ] ecx
mov eax [ ebp - 0x80 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x84 ]
add edx 0x2
push edx
mov eax [ ebp - 0x80 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x80 ]
push ecx
mov ecx [ ebp - 0x114 ]
add ecx 0xbb4
call sub_407e30
mov edx [ ebp - 0x84 ]
mov [ ebp - 0xe0 ] edx
mov eax [ ebp - 0xe0 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
push 0xffffffff
push 0x0
push 0x408
call sub_4840fb
push 0x0
mov eax [ ebp - 0x88 ]
imul eax eax 0x14
mov ecx [ ebp - 0x114 ]
lea ecx [ ecx + eax + 0xbf0 ]
call sub_41b180
mov eax [ ebp - 0xa0 ]
push eax
mov ecx [ ebp - 0x88 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x114 ]
lea ecx [ edx + ecx + 0xbf0 ]
call sub_41b180
jmp r-xdata
cmp [ ebp - 0x88 ] 0xa
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x84 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
add ecx 0x2
cmp [ ebp - 0x60 ] ecx
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x9c ]
add eax 0x1
mov [ ebp - 0x9c ] eax
jmp r-xdata
push 0x2740
lea ecx [ ebp - 0x64 ]
call sub_47e84a
push 0x2747
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov [ ebp - 0x5c ] eax
push 0x10
call [ GetStockObject@IAT ]
mov [ ebp - 0x68 ] eax
lea edx [ ebp - 0x58 ]
push edx
push 0x3c
mov eax [ ebp - 0x68 ]
push eax
call [ GetObjectA@IAT ]
mov [ ebp - 0x1c ] 0xffffffff
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x88 ]
push edx
push 0x2730
lea eax [ ebp - 0x18 ]
push eax
call sub_47584a
add esp 0xc
push rw-data
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0xec ]
push ecx
mov ecx [ ebp - 0x78 ]
call sub_4919bb
mov [ ebp - 0x138 ] eax
mov edx [ ebp - 0x138 ]
mov [ ebp - 0x13c ] edx
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0x98 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0xec ]
call sub_47c674
lea ecx [ ebp - 0x98 ]
call sub_4016b0
test eax eax
je r-xdata
push 0x58
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xe4 ] eax
mov edx [ ebp - 0xe4 ]
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x84 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x80 ]
mov [ edx + 0x54 ] ecx
mov eax [ ebp - 0x84 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov edx [ ebp - 0x80 ]
mov [ edx + 0x50 ] ecx
mov eax [ ebp - 0x80 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x84 ]
add edx 0x2
push edx
mov eax [ ebp - 0x80 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x80 ]
push ecx
mov ecx [ ebp - 0x114 ]
add ecx 0xbc8
call sub_407e30
mov edx [ ebp - 0x84 ]
mov [ ebp - 0xe8 ] edx
mov eax [ ebp - 0xe8 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x88 ]
add ecx 0x1
mov [ ebp - 0x88 ] ecx
mov edx [ ebp - 0x88 ]
cmp edx [ ebp - 0x5c ]
jge r-xdata
lea ecx [ ebp - 0x98 ]
push ecx
mov ecx [ ebp - 0x114 ]
add ecx 0xbdc
call sub_428850
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0xbc
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xf4 ] eax
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0xf4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x88 ]
add ecx 0x1
mov [ ebp - 0x88 ] ecx
mov ecx [ ebp - 0x88 ]
add ecx 0x1
mov [ ebp - 0x88 ] ecx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
mov [ ebp - 0x140 ] 0x0
mov ecx [ ebp - 0xf4 ]
call sub_40ff60
mov [ ebp - 0x140 ] eax
jmp r-xdata
mov ecx [ ebp - 0x114 ]
call sub_421252
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x94 ]
call sub_42aa27
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_47c674
mov eax [ ebp - 0x110 ]
push 0xbc
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x10c ] 0x0
je r-xdata
push 0x2722
lea ecx [ ebp - 0x18 ]
call sub_47e84a
mov edx [ ebp - 0x58 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x60 ] eax
push 0x2723
lea ecx [ ebp - 0x18 ]
call sub_47e84a
mov edx [ ebp - 0x48 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x64 ] eax
push 0x2724
lea ecx [ ebp - 0x18 ]
call sub_47e84a
mov edx [ ebp - 0x44 ]
and edx 0xff
push edx
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x68 ] eax
push 0x2725
lea ecx [ ebp - 0x18 ]
call sub_47e84a
mov edx [ ebp - 0x41 ]
and edx 0xff
push edx
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x6c ] eax
push 0x2726
lea ecx [ ebp - 0x18 ]
call sub_47e84a
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
lea eax [ ebp - 0x100 ]
push eax
mov ecx [ ebp - 0x78 ]
call sub_4919bb
mov [ ebp - 0x154 ] eax
mov ecx [ ebp - 0x154 ]
mov [ ebp - 0x158 ] ecx
mov [ ebp - 0x4 ] 0xc
mov edx [ ebp - 0x158 ]
push edx
lea ecx [ ebp - 0x98 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x100 ]
call sub_47c674
lea ecx [ ebp - 0x98 ]
call sub_4027c0
push eax
mov eax [ ebp - 0x10 ]
add eax 0x70
push eax
call [ lstrcpyA@IAT ]
push 0x2712
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] eax
push 0x2713
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x28 ] eax
push 0x2714
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xffffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xc ] eax
push 0x2715
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x808080
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x2c ] eax
push 0x2716
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x10 ] eax
push 0x2717
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xffffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x30 ] eax
push 0x271c
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xffffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x14 ] eax
push 0x275d
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x8000ff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x34 ] eax
push 0x271d
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xffffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x18 ] eax
push 0x275e
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xff00
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x38 ] eax
push 0x271e
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xffffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x1c ] eax
push 0x275f
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xff8080
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x3c ] eax
push 0x2760
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xffffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x20 ] eax
push 0x2761
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x40 ] eax
push 0x2762
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xff0000
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x24 ] eax
push 0x2763
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0xffffff
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x44 ] eax
mov [ ebp - 0x8c ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x140 ]
mov [ ebp - 0xf0 ] eax
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0xf0 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx + 0xb8 ] 0x0
push 0x2740
lea ecx [ ebp - 0x64 ]
call sub_47e84a
mov eax [ ebp - 0x88 ]
add eax 0x1
push eax
push rw-data
lea ecx [ ebp - 0x18 ]
push ecx
call sub_475837
add esp 0xc
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
lea edx [ ebp - 0xf8 ]
push edx
mov ecx [ ebp - 0x78 ]
call sub_4919bb
mov [ ebp - 0x144 ] eax
mov eax [ ebp - 0x144 ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x4 ] 0xa
mov ecx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0xf8 ]
call sub_47c674
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
push eax
push 0x2748
lea ecx [ ebp - 0x64 ]
push ecx
call sub_47584a
add esp 0xc
push 0x274e
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
lea edx [ ebp - 0xfc ]
push edx
mov ecx [ ebp - 0x78 ]
call sub_4919bb
mov [ ebp - 0x14c ] eax
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x150 ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_47c761
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0xfc ]
call sub_47c674
push 0x2749
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push rw-data
mov edx [ ebp - 0x10 ]
push edx
call sub_428880
and eax 0xff
test eax eax
je r-xdata
mov [ ebp - 0x15c ] 0x0
mov ecx [ ebp - 0x10c ]
call sub_40ff60
mov [ ebp - 0x15c ] eax
jmp r-xdata
cmp [ ebp - 0x8c ] 0x100
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0xb8 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_4016b0
test eax eax
je r-xdata
mov ecx [ ebp - 0x15c ]
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] 0x7
mov edx [ ebp - 0x108 ]
mov [ ebp - 0x10 ] edx
push rw-data
mov ecx [ ebp - 0x10 ]
call sub_47c7b1
push 0x178e
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_47e84a
mov eax [ ebp - 0x10 ]
mov [ eax + 0xb8 ] 0x1
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x58 ]
mov [ ecx + 0x60 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x48 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp - 0x44 ]
and edx 0xff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x68 ] edx
mov ecx [ ebp - 0x41 ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
mov [ edx + 0x6c ] ecx
lea eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x70
push ecx
call [ lstrcpyA@IAT ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xc ] 0xffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x14 ] 0xffffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0xffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x1c ] 0xffffff
mov edx [ ebp - 0x10 ]
mov [ edx + 0x20 ] 0xffffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x24 ] 0xff0000
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x28 ] 0xffff
mov edx [ ebp - 0x10 ]
mov [ edx + 0x2c ] 0x808080
mov eax [ ebp - 0x10 ]
mov [ eax + 0x30 ] 0xffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x34 ] 0x8000ff
mov edx [ ebp - 0x10 ]
mov [ edx + 0x38 ] 0xff00
mov eax [ ebp - 0x10 ]
mov [ eax + 0x3c ] 0xff8080
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x40 ] 0xff
mov edx [ ebp - 0x10 ]
mov [ edx + 0x44 ] 0xffffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x5c ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xa0 ] 0x10
mov edx [ ebp - 0x10 ]
mov [ edx + 0x9c ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x90 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x94 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x98 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xa4 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xa8 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0xac ] 0x1
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x114 ]
call sub_41f23f
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
push 0x0
mov ecx [ ebp - 0x114 ]
add ecx 0xba0
call sub_4776fb
push 0x2752
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x5c ] eax
push 0x2718
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x10
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0xa0 ] eax
push 0x2719
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x9c ] eax
push 0x2735
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x90 ] eax
push 0x2736
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x94 ] eax
push 0x2750
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0x98 ] eax
push 0x272e
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xa4 ] eax
push 0x2758
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov edx [ ebp - 0x10 ]
mov [ edx + 0xa8 ] eax
push 0x2751
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xac ] eax
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x114 ]
call sub_41f23f
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x114 ]
add ecx 0xba0
call sub_407e30
jmp r-xdata
mov ecx [ ebp - 0x8c ]
push ecx
push rw-data
lea edx [ ebp - 0x18 ]
push edx
call sub_475837
add esp 0xc
push 0xff000000
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x64 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x78 ]
call sub_49194f
mov [ ebp - 0xa8 ] eax
cmp [ ebp - 0xa8 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x1c ] ecx
push 0x178e
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_47e84a
mov ecx [ ebp - 0x88 ]
add ecx 0x1
mov [ ebp - 0x88 ] ecx
jmp r-xdata
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x104 ] eax
mov eax [ ebp - 0x104 ]
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x7c ]
mov dl [ ebp - 0x8c ]
mov [ ecx ] dl
mov eax [ ebp - 0x7c ]
mov ecx [ ebp - 0xa8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x7c ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x48
call sub_407e30
mov eax [ ebp - 0x8c ]
add eax 0x1
mov [ ebp - 0x8c ] eax
sub_421262
push ebp
mov ebp esp
push 0xffffffff
push sub_498304
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1f8
mov [ ebp - 0x1fc ] ecx
lea ecx [ ebp - 0x70 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
call sub_4036e0
mov [ ebp - 0x74 ] eax
push 0x2711
lea ecx [ ebp - 0x70 ]
call sub_47e84a
push 0x2757
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0x110c ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
push 0x273f
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xb58 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xa8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xa8 ]
jmp r-xdata
push 0x2720
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xa80 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xac ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xac ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x2737
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xa84 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xb0 ]
jmp r-xdata
push 0x2738
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xa88 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xb4 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xb4 ]
jmp r-xdata
push 0x2739
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xa8c ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xb8 ]
jmp r-xdata
push 0x273d
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xa90 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xbc ]
jmp r-xdata
push 0x273e
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xa94 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xc0 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xc0 ]
jmp r-xdata
push 0x2746
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xa98 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xc4 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xc4 ]
jmp r-xdata
push 0x2754
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xa9c ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xc8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xc8 ]
jmp r-xdata
push 0x2753
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xaa0 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xcc ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xcc ]
jmp r-xdata
push 0x2755
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xaa4 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xd0 ]
jmp r-xdata
push 0x273a
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xaa8 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xd4 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xd4 ]
jmp r-xdata
push 0x2765
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xaac ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xd8 ]
jmp r-xdata
push 0x2766
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xab0 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xdc ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xdc ]
jmp r-xdata
push 0x2767
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xab4 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xe0 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xe0 ]
jmp r-xdata
push 0x2768
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xab8 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xe4 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xe4 ]
jmp r-xdata
push 0x2769
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xabc ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xe8 ]
jmp r-xdata
push 0x276a
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xac0 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xec ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xec ]
jmp r-xdata
push 0x2745
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xac4 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xf0 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xf0 ]
jmp r-xdata
push 0x274a
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xac8 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xf4 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xf4 ]
jmp r-xdata
push 0x274b
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xacc ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xf8 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xf8 ]
jmp r-xdata
push 0x274c
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xad0 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0xfc ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0xfc ]
jmp r-xdata
push 0x274d
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xad4 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x100 ]
jmp r-xdata
push 0x271f
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xad8 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x104 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x104 ]
jmp r-xdata
push 0x272f
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xadc ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x108 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x108 ]
jmp r-xdata
push 0x2743
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xae0 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x10c ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x10c ]
jmp r-xdata
push 0x2744
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xae4 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x110 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x110 ]
jmp r-xdata
push 0x2756
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xae8 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x114 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x114 ]
jmp r-xdata
push 0x275a
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xaec ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x118 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x118 ]
jmp r-xdata
push 0x275b
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xaf0 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x11c ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x11c ]
jmp r-xdata
push 0x2764
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xaf8 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x120 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x120 ]
jmp r-xdata
push 0x276b
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xafc ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x124 ]
jmp r-xdata
mov eax [ ebp - 0x1fc ]
cmp [ eax + 0x111c ] 0x0
je r-xdata
mov [ ebp - 0x128 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x128 ]
jmp r-xdata
push 0x2733
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xb48 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
push 0x2734
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xb4c ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x130 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x130 ]
jmp r-xdata
cmp [ ebp - 0x84 ] 0x3
jge r-xdata
push 0x2731
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
add ecx 0xb40
call sub_4027c0
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov [ ebp - 0x134 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x134 ]
jmp r-xdata
mov edx [ ebp - 0x84 ]
add edx 0x1
push edx
push 0x276c
lea eax [ ebp - 0x6c ]
push eax
call sub_47584a
add esp 0xc
mov ecx [ ebp - 0x84 ]
mov edx [ ebp - 0x1fc ]
mov eax [ edx + ecx * 4 + 0x1110 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
push 0x2732
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
add ecx 0xb44
call sub_4027c0
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov [ ebp - 0x138 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x138 ]
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x12c ]
jmp r-xdata
push 0x2721
lea ecx [ ebp - 0x6c ]
call sub_47e84a
push 0x200
mov edx [ ebp - 0x1fc ]
add edx 0xd1c
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_4878af
test eax eax
jne r-xdata
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x13c ]
jmp r-xdata
mov ecx [ ebp - 0x84 ]
add ecx 0x1
mov [ ebp - 0x84 ] ecx
push 0x273c
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xf20 ]
shl ecx 0x2
push ecx
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xf1c ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_4878af
test eax eax
jne r-xdata
mov [ ebp - 0x140 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x140 ]
jmp r-xdata
push 0x2742
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
mov edx [ ecx + 0xf28 ]
shl edx 0x2
push edx
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xf24 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_4878af
test eax eax
jne r-xdata
mov [ ebp - 0x144 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x144 ]
jmp r-xdata
push 0x2729
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0x854 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x148 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x148 ]
jmp r-xdata
push 0x272a
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
add ecx 0x85c
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x14c ]
jmp r-xdata
push 0x273b
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0x960 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x150 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x150 ]
jmp r-xdata
push 0x274f
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
add ecx 0x968
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x154 ]
jmp r-xdata
push 0x2759
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x1fc ]
mov eax [ edx + 0xa6c ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x158 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x158 ]
jmp r-xdata
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov [ ebp - 0x15c ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x15c ]
jmp r-xdata
cmp [ ebp - 0x84 ] 0xf
jge r-xdata
push 0x272b
lea ecx [ ebp - 0x70 ]
call sub_47e84a
mov ecx [ ebp - 0x1fc ]
add ecx 0xbb4
call sub_41b1b0
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
push 0x2727
lea ecx [ ebp - 0x70 ]
call sub_47e84a
mov edx [ ebp - 0x84 ]
imul edx edx 0x14
mov eax [ ebp - 0x1fc ]
lea ecx [ eax + edx + 0xbf0 ]
call sub_41b1b0
mov [ ebp - 0x9c ] eax
mov ecx [ ebp - 0x9c ]
shl ecx 0x2
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x160 ] eax
mov edx [ ebp - 0x160 ]
mov [ ebp - 0xa4 ] edx
mov [ ebp - 0xa0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x84 ]
cmp edx [ ebp - 0x94 ]
jge r-xdata
mov ecx [ ebp - 0xa0 ]
cmp ecx [ ebp - 0x9c ]
jge r-xdata
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x84 ]
push eax
mov ecx [ ebp - 0x1fc ]
add ecx 0xbb4
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x80 ] ecx
mov edx [ ebp - 0x80 ]
mov al [ edx + 0x54 ]
mov [ ebp - 0x64 ] al
mov ecx [ ebp - 0x80 ]
mov dl [ ecx + 0x50 ]
mov [ ebp - 0x63 ] dl
mov eax [ ebp - 0x80 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x80 ]
push edx
lea eax [ ebp - 0x62 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x84 ]
push ecx
push 0x272c
lea edx [ ebp - 0x6c ]
push edx
call sub_47584a
add esp 0xc
mov eax [ ebp - 0x80 ]
mov ecx [ eax + 0x50 ]
add ecx 0x2
push ecx
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_4878af
test eax eax
jne r-xdata
mov edx [ ebp - 0x84 ]
add edx 0x1
push edx
push 0x2741
lea eax [ ebp - 0x6c ]
push eax
call sub_47584a
add esp 0xc
mov ecx [ ebp - 0x9c ]
shl ecx 0x2
push ecx
mov edx [ ebp - 0xa4 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_4878af
test eax eax
jne r-xdata
mov edx [ ebp - 0xa0 ]
push edx
mov eax [ ebp - 0x84 ]
imul eax eax 0x14
mov ecx [ ebp - 0x1fc ]
lea ecx [ ecx + eax + 0xbf0 ]
call sub_41b1d0
mov edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xa4 ]
mov [ ecx + edx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0x84 ] 0xa
jge r-xdata
jmp r-xdata
mov [ ebp - 0x170 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x170 ]
jmp r-xdata
mov edx [ ebp - 0xa4 ]
mov [ ebp - 0x16c ] edx
mov eax [ ebp - 0x16c ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x164 ] eax
mov ecx [ ebp - 0x164 ]
push ecx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x168 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x168 ]
jmp r-xdata
mov eax [ ebp - 0xa0 ]
add eax 0x1
mov [ ebp - 0xa0 ] eax
mov ecx [ ebp - 0x1fc ]
add ecx 0xbc8
call sub_41b1b0
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
push 0x272c
lea edx [ ebp - 0x6c ]
push edx
call sub_47584a
add esp 0xc
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov ecx [ ebp - 0x84 ]
add ecx 0x1
mov [ ebp - 0x84 ] ecx
mov ecx [ ebp - 0x84 ]
add ecx 0x1
mov [ ebp - 0x84 ] ecx
mov ecx [ ebp - 0x84 ]
cmp ecx [ ebp - 0x94 ]
jge r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x84 ]
push edx
mov ecx [ ebp - 0x1fc ]
add ecx 0xbc8
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x80 ] eax
mov ecx [ ebp - 0x80 ]
mov dl [ ecx + 0x54 ]
mov [ ebp - 0x64 ] dl
mov eax [ ebp - 0x80 ]
mov cl [ eax + 0x50 ]
mov [ ebp - 0x63 ] cl
mov edx [ ebp - 0x80 ]
mov eax [ edx + 0x50 ]
push eax
mov ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0x62 ]
push edx
call sub_467a70
add esp 0xc
mov eax [ ebp - 0x84 ]
push eax
push 0x272d
lea ecx [ ebp - 0x6c ]
push ecx
call sub_47584a
add esp 0xc
mov edx [ ebp - 0x80 ]
mov eax [ edx + 0x50 ]
add eax 0x2
push eax
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_4878af
test eax eax
jne r-xdata
mov eax [ ebp - 0x84 ]
add eax 0x1
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0xa
jge r-xdata
jmp r-xdata
mov [ ebp - 0x174 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x174 ]
jmp r-xdata
mov ecx [ ebp - 0x1fc ]
add ecx 0xbdc
call sub_40efb0
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x84 ]
push eax
push 0x272d
lea ecx [ ebp - 0x6c ]
push ecx
call sub_47584a
add esp 0xc
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov eax [ ebp - 0x84 ]
add eax 0x1
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x94 ]
jge r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
push 0x2730
lea edx [ ebp - 0x6c ]
push edx
call sub_47584a
add esp 0xc
mov eax [ ebp - 0x84 ]
push eax
mov ecx [ ebp - 0x1fc ]
add ecx 0xbdc
call sub_416c20
mov ecx eax
call sub_4027c0
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov edx [ ebp - 0x84 ]
add edx 0x1
mov [ ebp - 0x84 ] edx
cmp [ ebp - 0x84 ] 0xa
jge r-xdata
jmp r-xdata
mov [ ebp - 0x178 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x178 ]
jmp r-xdata
mov ecx [ ebp - 0x1fc ]
add ecx 0xba0
call sub_41b1b0
mov [ ebp - 0x94 ] eax
push 0x2740
lea ecx [ ebp - 0x70 ]
call sub_47e84a
push 0x2747
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x94 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov edx [ ebp - 0x84 ]
push edx
push 0x2730
lea eax [ ebp - 0x6c ]
push eax
call sub_47584a
add esp 0xc
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov edx [ ebp - 0x84 ]
add edx 0x1
mov [ ebp - 0x84 ] edx
lea ecx [ ebp - 0x7c ]
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov [ ebp - 0x17c ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x17c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0x2740
lea ecx [ ebp - 0x70 ]
call sub_47e84a
mov eax [ ebp - 0x84 ]
add eax 0x1
push eax
push rw-data
lea ecx [ ebp - 0x6c ]
push ecx
call sub_475837
add esp 0xc
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
lea edx [ ebp - 0x180 ]
push edx
mov ecx [ ebp - 0x74 ]
call sub_4919bb
mov [ ebp - 0x200 ] eax
mov eax [ ebp - 0x200 ]
mov [ ebp - 0x204 ] eax
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x204 ]
push ecx
lea ecx [ ebp - 0x7c ]
call sub_47c761
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x180 ]
call sub_47c674
lea ecx [ ebp - 0x7c ]
call sub_4016b0
test eax eax
je r-xdata
mov ecx [ ebp - 0x84 ]
add ecx 0x1
mov [ ebp - 0x84 ] ecx
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
mov edx [ ebp - 0x7c ]
push edx
push 0x2748
lea eax [ ebp - 0x70 ]
push eax
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x84 ]
add edx 0x1
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x84 ]
cmp edx [ ebp - 0x94 ]
jge r-xdata
mov [ ebp - 0x1f8 ] 0x1
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1f8 ]
mov eax [ ebp - 0x84 ]
push eax
mov ecx [ ebp - 0x1fc ]
add ecx 0xba0
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
push 0x2740
lea ecx [ ebp - 0x70 ]
call sub_47e84a
mov edx [ ebp - 0x84 ]
add edx 0x1
push edx
push rw-data
lea eax [ ebp - 0x6c ]
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
push edx
push 0x2748
lea eax [ ebp - 0x70 ]
push eax
call sub_47584a
add esp 0xc
push 0x274e
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_4027c0
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov [ ebp - 0x184 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x184 ]
jmp r-xdata
push 0x2722
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x60 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x188 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x188 ]
jmp r-xdata
push 0x2723
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x64 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x18c ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x18c ]
jmp r-xdata
push 0x2724
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x68 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x190 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x190 ]
jmp r-xdata
push 0x2725
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x6c ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x194 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x194 ]
jmp r-xdata
push 0x2726
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
add eax 0x70
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov [ ebp - 0x198 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x198 ]
jmp r-xdata
push 0x2712
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x19c ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x19c ]
jmp r-xdata
push 0x2713
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x28 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1a0 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1a0 ]
jmp r-xdata
push 0x2714
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xc ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1a4 ]
jmp r-xdata
push 0x2715
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x2c ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1a8 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1a8 ]
jmp r-xdata
push 0x2716
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1ac ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1ac ]
jmp r-xdata
push 0x2717
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x30 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1b0 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1b0 ]
jmp r-xdata
mov [ ebp - 0x8c ] 0x0
jmp r-xdata
mov [ ebp - 0x1b4 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1b4 ]
jmp r-xdata
cmp [ ebp - 0x8c ] 0x3
jge r-xdata
push 0x2760
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x20 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov edx [ ebp - 0x8c ]
add edx 0x271c
push edx
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x8c ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + eax * 4 + 0x14 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
push 0x2761
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x40 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1c0 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1c0 ]
jmp r-xdata
mov eax [ ebp - 0x8c ]
add eax 0x275d
push eax
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x8c ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + ecx * 4 + 0x34 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1b8 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1b8 ]
jmp r-xdata
push 0x2762
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x24 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1c4 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1c4 ]
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x1bc ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1bc ]
jmp r-xdata
push 0x2763
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x44 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1c8 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1c8 ]
jmp r-xdata
mov ecx [ ebp - 0x8c ]
add ecx 0x1
mov [ ebp - 0x8c ] ecx
push 0x2752
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x5c ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1cc ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1cc ]
jmp r-xdata
mov [ ebp - 0x8c ] 0x0
jmp r-xdata
mov [ ebp - 0x1d0 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1d0 ]
jmp r-xdata
cmp [ ebp - 0x8c ] 0x100
jge r-xdata
mov [ ebp - 0x68 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x48
call sub_41b1b0
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x8c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8c ]
push eax
push rw-data
lea ecx [ ebp - 0x6c ]
push ecx
call sub_475837
add esp 0xc
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
jmp r-xdata
mov eax [ ebp - 0x8c ]
cmp eax [ ebp - 0x88 ]
jge r-xdata
mov edx [ ebp - 0x8c ]
add edx 0x1
mov [ ebp - 0x8c ] edx
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x8c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8c ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x48
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x78 ] edx
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebp - 0x8c ] 0x100
jge r-xdata
mov edx [ ebp - 0x78 ]
xor eax eax
mov al [ edx ]
cmp [ ebp - 0x90 ] eax
jge r-xdata
push 0x2718
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xa0 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov eax [ ebp - 0x8c ]
push eax
push rw-data
lea ecx [ ebp - 0x6c ]
push ecx
call sub_475837
add esp 0xc
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
mov eax [ ebp - 0x78 ]
xor ecx ecx
mov cl [ eax ]
push ecx
push rw-data
lea edx [ ebp - 0x6c ]
push edx
call sub_475837
add esp 0xc
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x4 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
push rw-data
lea edx [ ebp - 0x6c ]
push edx
call sub_475837
add esp 0xc
push 0x0
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48780f
test eax eax
jne r-xdata
push 0x2719
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x9c ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1d8 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1d8 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x78 ]
xor eax eax
mov al [ edx ]
add eax 0x1
mov [ ebp - 0x68 ] eax
jmp r-xdata
mov [ ebp - 0x1d4 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1d4 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0x2735
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x90 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1dc ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1dc ]
jmp r-xdata
mov edx [ ebp - 0x8c ]
add edx 0x1
mov [ ebp - 0x8c ] edx
mov edx [ ebp - 0x8c ]
add edx 0x1
mov [ ebp - 0x8c ] edx
mov ecx [ ebp - 0x90 ]
add ecx 0x1
mov [ ebp - 0x90 ] ecx
push 0x2736
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x94 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1e0 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1e0 ]
jmp r-xdata
push 0x2750
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x98 ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1e4 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1e4 ]
jmp r-xdata
push 0x272e
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xa4 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1e8 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1e8 ]
jmp r-xdata
push 0x2758
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xa8 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1ec ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1ec ]
jmp r-xdata
push 0x2751
lea ecx [ ebp - 0x6c ]
call sub_47e84a
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xac ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x70 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x74 ]
call sub_48779a
test eax eax
jne r-xdata
mov [ ebp - 0x1f0 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1f0 ]
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x1f4 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x7c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_47c674
mov eax [ ebp - 0x1f4 ]
jmp r-xdata
mov ecx [ ebp - 0x84 ]
add ecx 0x1
mov [ ebp - 0x84 ] ecx
sub_4240f0
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
and edx 0x2
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
and ecx 0x1
test ecx ecx
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0xa70
mov edi [ ebp - 0x4 ]
add edi 0x224
mov ecx 0xf
[ edi ] [ esi ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
and eax 0x8
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x850
mov edi [ ebp - 0x4 ]
add edi 0x4
mov ecx 0x88
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
and edx 0x4
test edx edx
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0xaac
mov edi [ ebp - 0x4 ]
add edi 0x260
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
and ecx 0x10
test ecx ecx
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0xac4
mov edi [ ebp - 0x4 ]
add edi 0x278
mov ecx 0xf
[ edi ] [ esi ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
and eax 0x20
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0xb00
mov edi [ ebp - 0x4 ]
add edi 0x2b4
mov ecx 0x7
[ edi ] [ esi ]
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp - 0x8 ]
add esi 0xb1c
mov edi [ ebp - 0x4 ]
add edi 0x2d0
mov ecx 0x9
[ edi ] [ esi ]
sub_424201
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
imul eax eax 0xa
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4027d0
movsx edx al
sub edx 0x30
mov [ ebp - 0x1c ] dl
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x4
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x39
jg r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov al [ ebp - 0x10 ]
and al 0x5f
mov [ ebp - 0x10 ] al
mov cl [ ebp - 0x10 ]
sub cl 0x37
mov [ ebp - 0x10 ] cl
mov dl [ ebp - 0x10 ]
sub dl 0x30
mov [ ebp - 0x10 ] dl
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4242f1
push ebp
mov ebp esp
push 0xffffffff
push sub_498317
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb70 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0xb80 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
sub_424399
push ebp
mov ebp esp
push 0xffffffff
push sub_49832a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb70 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0xb80 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
sub_424441
push ebp
mov ebp esp
push 0xffffffff
push sub_49833d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb74 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx + 0xb82 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
sub_4244ea
push ebp
mov ebp esp
push 0xffffffff
push sub_498350
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb74 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx + 0xb82 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
sub_424593
push ebp
mov ebp esp
push 0xffffffff
push sub_498363
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb78 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xb84 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
sub_424639
push ebp
mov ebp esp
push 0xffffffff
push sub_49837f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_48a6e8
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0xc ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x1c ]
cmp [ eax + 0xb78 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0xb84 ]
push eax
call sub_411a17
add esp 0x8
push rw-data
lea ecx [ ebp - 0x14 ]
call sub_47c7b1
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x14 ]
call sub_47ca40
sub_42470b
push ebp
mov ebp esp
push 0xffffffff
push sub_49839b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x20 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x20 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x20 ]
cmp [ eax + 0xb78 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0xb84 ]
mov [ ebp - 0x18 ] edx
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
mov eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_411b06
add esp 0x8
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_47ca40
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_47c674
sub_4247e4
push ebp
mov ebp esp
push 0xffffffff
push sub_4983b7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x1c ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x1c ]
cmp [ eax + 0xb7c ] 0x0
je r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0xb8c ]
push edx
mov eax [ ecx + 0xb88 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
call sub_411b9e
add esp 0xc
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_47ca40
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
sub_4248be
push ebp
mov ebp esp
push 0xffffffff
push sub_4983ca
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xb6c ]
push edx
call sub_411a17
add esp 0x8
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47ca04
sub_424960
push ebp
mov ebp esp
push 0xffffffff
push sub_4983dd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xb6c ]
push ecx
push rw-data
lea edx [ ebp - 0x10 ]
push edx
call sub_475837
add esp 0xc
sub_4249fa
push ebp
mov ebp esp
push 0xffffffff
push sub_4983f0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xb9c ]
push ecx
push rw-data
lea edx [ ebp - 0x10 ]
push edx
call sub_475837
add esp 0xc
sub_424a94
push ebp
mov ebp esp
push 0xffffffff
push sub_498403
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xb9c ]
push edx
call sub_411a17
add esp 0x8
sub_424b29
push ebp
mov ebp esp
push 0xffffffff
push sub_498416
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb98 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
push 0xe708
lea ecx [ ebp - 0x10 ]
call sub_47e84a
sub_424bd0
push ebp
mov ebp esp
push 0xffffffff
push sub_498429
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xf34 ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
lea ecx [ ebp - 0x10 ]
call sub_47c5ff
cmp [ ebp - 0x1c ] 0x5
jle r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xf34 ]
add eax 0x1798
push eax
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
jmp r-xdata
sub_424c8a
push ebp
mov ebp esp
push 0xffffffff
push sub_49843c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xf38 ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push 0x17a2
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
push 0x17a3
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_47c5ff
sub_424d49
push ebp
mov ebp esp
push 0xffffffff
push sub_49844f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb90 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_47c5ff
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_424dfa
push ebp
mov ebp esp
push 0xffffffff
push sub_498462
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb94 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xb94 ] 0x1
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx + 0xb94 ] 0x0
jne r-xdata
push 0xe707
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
sub_424ee3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xb94 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xf38 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xf34 ]
push edx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0xb94 ] 0x2
sete cl
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x390
call sub_40c4bc
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_424f66
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xf34 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xf38 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xf34 ]
push edx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0xb94 ] 0x2
sete cl
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x390
call sub_40c4bc
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_424fb3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xf38 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xf38 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xf34 ]
push edx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0xb94 ] 0x2
sete cl
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x390
call sub_40c4bc
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_42501b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xf2c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xf30 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xf2c ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xf30 ]
mov [ edx ] ecx
mov eax 0x1
sub_425065
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0xc ]
cmp [ eax + 0xf2c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0xf2c ] edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xf2c ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0xf30 ] edx
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0xf2c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ ecx + 0xf2c ] 0x0
mov edx [ ebp - 0xc ]
mov [ edx + 0xf30 ] 0x0
sub_425122
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0xb04 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
sub edx 0x100
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x5
ja r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xb00 ] 0x7
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
jmp [ eax * 4 + jump_table_425370 ]
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_425a5c
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0xc ]
mov [ ebp - 0x14 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
shr eax 0x10
and eax 0xffff
mov [ ebp - 0x8 ] ax
push 0x11
call [ GetAsyncKeyState@IAT ]
movsx ecx ax
and ecx 0x8000
neg ecx
sbb ecx ecx
and ecx 0x8
mov [ ebp - 0xc ] cx
push 0x10
call [ GetAsyncKeyState@IAT ]
movsx edx ax
and edx 0x8000
neg edx
sbb edx edx
and edx 0x4
mov ax [ ebp - 0xc ]
or ax dx
mov [ ebp - 0xc ] ax
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xffff
mov edx [ ebp - 0x8 ]
and edx 0xffff
shl edx 0x10
or ecx edx
push ecx
mov eax [ ebp - 0xc ]
and eax 0xffff
mov ecx [ ebp - 0x10 ]
and ecx 0xffff
shl ecx 0x10
or eax ecx
push eax
mov ecx [ ebp - 0x18 ]
call sub_425a5c
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_48a520
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x20 ] 0x70
je r-xdata
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
sub edx 0x70
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x24 ] 0x9
ja r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] 0x79
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_42539a
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
xor eax eax
mov al [ ecx + lookup_table_425390 ]
jmp [ eax * 4 + jump_table_425388 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x12
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x8000
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
shr ecx 0x10
and ecx 0xffff
and ecx 0xffff
push ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_427392
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
shr edx 0x10
and edx 0xffff
and edx 0xffff
push edx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4273bf
mov [ ebp - 0x4 ] 0x1
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_48a6e8
test eax eax
jne r-xdata
sub_42539a
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x8 ] ecx
call sub_428be0
mov esi eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1d8
call sub_40bc50
cmp esi eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ ebp + 0x8 ] 0x26
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x28
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4253de
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x70
call [ GetKeyState@IAT ]
movsx eax ax
and eax 0x8000
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4879f2
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_425407
push ebp
mov ebp esp
push 0xffffffff
push sub_498475
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_419700
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_41972b
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_419717
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_42545f
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x10 ] 0x12
mov [ ebp - 0xe ] 0x12
mov [ ebp - 0xc ] 0xd
mov [ ebp - 0xa ] 0x10
mov [ ebp - 0x8 ] 0xe
mov [ ebp - 0x6 ] 0xd
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x2 ] 0xd
mov [ ebp - 0x18 ] 0x100
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x100
jge r-xdata
cmp [ ebp - 0x14 ] 0x100
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 2 ]
mov [ ebp - 0x20 ] ax
mov ecx [ ebp - 0x20 ]
and ecx 0xffff
sar ecx 0x8
mov [ ebp - 0x1c ] cx
mov edx [ ebp - 0x20 ]
and edx 0xffff
and edx 0xff
mov [ ebp - 0x24 ] dx
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0x8
jl r-xdata
mov eax 0x1
push 0xffffffff
push 0x11
push 0x3ef
call sub_4840fb
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x24 ]
and ecx 0xffff
mov edx [ ebp - 0x1c ]
and edx 0xffff
xor eax eax
mov ax [ ebp + edx * 2 - 0x10 ]
cmp ecx eax
jl r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x28 ]
call sub_425407
mov eax 0x1
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_425559
push ebp
mov ebp esp
push 0xffffffff
push sub_498488
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_464120
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xf1c
push eax
lea ecx [ ebp - 0x10 ]
call sub_464139
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0xf20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_46412e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4255bd
push ebp
mov ebp esp
push 0xffffffff
push sub_49849b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x14 ]
call sub_464120
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x110c ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x2c ]
mov [ edx + 0x110c ] 0x83
cmp [ ebp - 0x10 ] 0x6e
jge r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0xf20 ]
push ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0xf1c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4641ee
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0xf20 ]
jge r-xdata
push 0xffffffff
push 0x1
push 0x418
call sub_4840fb
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0xf20 ]
je r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0xf1c ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
cmp [ edx + eax * 4 ] 0xffffffff
sete cl
push ecx
lea ecx [ ebp - 0x14 ]
call sub_464195
test eax eax
je r-xdata
mov ecx [ ebp - 0x2c ]
call sub_425559
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_46412e
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_46412e
mov eax [ ebp - 0x28 ]
push 0xffffffff
push 0x11
push 0x414
call sub_4840fb
cmp eax 0x1
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_46412e
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x2c ]
call sub_425559
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_46412e
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_42572e
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x1c
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xf24 ] ecx
mov edx [ ebp - 0x8 ]
mov [ edx + 0xf28 ] 0x7
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xf24 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xf24 ]
mov [ eax + 0x4 ] 0xe709
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xf24 ]
mov [ edx + 0x8 ] 0xe708
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xf24 ]
mov [ ecx + 0xc ] 0xe707
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xf24 ]
mov [ eax + 0x10 ] 0xe704
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xf24 ]
mov [ edx + 0x14 ] 0xe70a
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xf24 ]
mov [ ecx + 0x18 ] 0xe70d
mov esp ebp
pop ebp
retn
sub_4257d0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0xf28 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0xf28 ]
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0xf24 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x1
push 0xffffffff
push 0x11
push 0x415
call sub_4840fb
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0xe701
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_42572e
mov eax 0x1
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0xe716
jbe r-xdata
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_42586e
push ebp
mov ebp esp
sub esp 0x9c
mov [ ebp - 0x9c ] ecx
push 0x94
push 0x0
lea eax [ ebp - 0x94 ]
push eax
call sub_467a10
add esp 0xc
mov [ ebp - 0x94 ] 0x94
lea ecx [ ebp - 0x94 ]
push ecx
call [ GetVersionExA@IAT ]
call [ GetVersion@IAT ]
mov [ ebp - 0x98 ] eax
cmp [ ebp - 0x84 ] 0x0
jne r-xdata
cmp [ ebp - 0x84 ] 0x2
jne r-xdata
mov [ ebp - 0x98 ] 0x0
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
mov eax [ ebp - 0x9c ]
mov ecx [ ebp - 0x98 ]
mov [ eax + 0xb00 ] ecx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8c ] 0xa
jne r-xdata
cmp [ ebp - 0x90 ] 0x4
jb r-xdata
cmp [ ebp - 0x8c ] 0x32
jne r-xdata
mov edx [ ebp - 0x88 ]
and edx 0xffff
cmp edx 0x438
jl r-xdata
mov [ ebp - 0x98 ] 0x4
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x98 ] 0x7
mov [ ebp - 0x98 ] 0x6
mov [ ebp - 0x98 ] 0x5
jmp r-xdata
mov [ ebp - 0x98 ] 0x1
mov [ ebp - 0x98 ] 0x3
jmp r-xdata
jmp r-xdata
sub_425974
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb04 ] 0xffffffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb08 ] 0xffffffff
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0c ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb14 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb18 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb00 ] 0x7
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xb00 ] 0x4
jne r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0xb14
push ecx
push 0x0
push 0x68
call [ SystemParametersInfoA@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0xb14
push ecx
mov edx [ ebp - 0x4 ]
add edx 0xb10
push edx
mov eax [ ebp - 0x4 ]
add eax 0xb0c
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xb08
push ecx
mov edx [ ebp - 0x4 ]
add edx 0xb04
push edx
call sub_4288a0
add esp 0x14
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb18 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xb04 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb14 ] 0x3
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_425a5c
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x0
mov ecx [ ebp - 0xc ]
call sub_48a6e8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
call sub_48c57e
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x20a
mov ecx [ ebp - 0x8 ]
call sub_402890
sub_425aa4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_425b01
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x7ffe
mov ecx [ ebp - 0x4 ]
call sub_427a73
sub_425acc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call [ GetParent@IAT ]
push eax
call [ GetParent@IAT ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax 0x1
pop ebp
retn 0x8
push 0x0
push 0x0
push 0x7ffe
mov ecx [ ebp + 0x8 ]
push ecx
call [ SendMessageA@IAT ]
sub_425b01
push ebp
mov ebp esp
push 0xffffffff
push sub_498527
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xd28
push esi
mov [ ebp - 0xd30 ] ecx
push sub_4774f7
push sub_4774c4
push 0xf
push 0x14
lea eax [ ebp - 0xaa8 ]
push eax
call sub_467f48
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xaa8 ]
push ecx
mov ecx [ ebp - 0xd30 ]
call sub_427f9c
lea ecx [ ebp - 0xd04 ]
call sub_48dc1d
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0xd30 ]
add edx 0xa70
push edx
lea ecx [ ebp - 0x5f4 ]
call sub_40e309
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0xd30 ]
add eax 0xaac
push eax
lea ecx [ ebp - 0xc7c ]
call sub_465849
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0xd30 ]
add ecx 0x850
push ecx
lea ecx [ ebp - 0xbd4 ]
call sub_410169
mov [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0xd30 ]
add edx 0xac4
push edx
lea ecx [ ebp - 0x2e4 ]
call sub_4663a0
mov [ ebp - 0x4 ] 0x5
push 0x0
lea eax [ ebp - 0xaa8 ]
push eax
mov ecx [ ebp - 0xd30 ]
add ecx 0xd1c
push ecx
lea ecx [ ebp - 0x4f8 ]
call sub_41996d
mov [ ebp - 0x4 ] 0x6
lea edx [ ebp - 0xaa8 ]
push edx
lea ecx [ ebp - 0x780 ]
call sub_42ac39
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0xd30 ]
add eax 0xf20
push eax
mov ecx [ ebp - 0xd30 ]
add ecx 0xf1c
push ecx
lea ecx [ ebp - 0x97c ]
call sub_4645fb
mov [ ebp - 0x4 ] 0x8
mov edx [ ebp - 0xd30 ]
add edx 0xf28
push edx
mov eax [ ebp - 0xd30 ]
add eax 0xf24
push eax
lea ecx [ ebp - 0x12c ]
call sub_4311fb
mov [ ebp - 0x4 ] 0x9
push 0x0
push rw-data
lea ecx [ ebp - 0xd04 ]
call sub_48dd97
mov ecx [ ebp - 0xcc4 ]
or cl 0x80
mov [ ebp - 0xcc4 ] ecx
lea edx [ ebp - 0x5f4 ]
push edx
lea ecx [ ebp - 0xd04 ]
call sub_48e19d
lea eax [ ebp - 0xc7c ]
push eax
lea ecx [ ebp - 0xd04 ]
call sub_48e19d
lea ecx [ ebp - 0xbd4 ]
push ecx
lea ecx [ ebp - 0xd04 ]
call sub_48e19d
lea edx [ ebp - 0x2e4 ]
push edx
lea ecx [ ebp - 0xd04 ]
call sub_48e19d
lea eax [ ebp - 0x4f8 ]
push eax
lea ecx [ ebp - 0xd04 ]
call sub_48e19d
lea ecx [ ebp - 0x780 ]
push ecx
lea ecx [ ebp - 0xd04 ]
call sub_48e19d
lea edx [ ebp - 0x97c ]
push edx
lea ecx [ ebp - 0xd04 ]
call sub_48e19d
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0xd04 ]
call sub_48e19d
mov ecx [ ebp - 0xd30 ]
mov edx [ ecx + 0xf20 ]
mov [ ebp - 0x4fc ] edx
lea ecx [ ebp - 0xd04 ]
call sub_48df73
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x5f8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x130 ] 0x0
je r-xdata
cmp [ ebp - 0x5f8 ] 0xf
jge r-xdata
cmp [ ebp - 0xbd8 ] 0x0
je r-xdata
mov [ ebp - 0xd2c ] 0x0
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x12c ]
call sub_428ac0
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x97c ]
call sub_428a20
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x780 ]
call sub_42acf8
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x4f8 ]
call sub_41b110
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x2e4 ]
call sub_428950
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0xbd4 ]
call sub_410355
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc7c ]
call sub_465978
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x5f4 ]
call sub_40e4cb
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xd04 ]
call sub_48dde3
mov [ ebp - 0x4 ] 0xffffffff
push sub_4774f7
push 0xf
push 0x14
lea eax [ ebp - 0xaa8 ]
push eax
call sub_467e54
mov eax [ ebp - 0xd2c ]
mov edx [ ebp - 0x5f8 ]
imul edx edx 0x14
lea ecx [ ebp + edx - 0xaa8 ]
call sub_41b160
jmp r-xdata
cmp [ ebp - 0xaac ] 0x0
je r-xdata
mov ecx [ ebp - 0x5f8 ]
add ecx 0x1
mov [ ebp - 0x5f8 ] ecx
lea ecx [ ebp - 0x52c ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov ecx [ ebp - 0xd30 ]
mov [ ecx + 0xa80 ] eax
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0x510 ]
mov [ edx + 0xa84 ] eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0x528 ]
mov [ ecx + 0xa88 ] edx
mov eax [ ebp - 0xd30 ]
mov ecx [ ebp - 0x524 ]
mov [ eax + 0xa8c ] ecx
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0x50c ]
mov [ edx + 0xa90 ] eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0x520 ]
mov [ ecx + 0xa94 ] edx
mov eax [ ebp - 0xd30 ]
mov ecx [ ebp - 0x51c ]
mov [ eax + 0xa98 ] ecx
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0x518 ]
mov [ edx + 0xa9c ] eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0x514 ]
mov [ ecx + 0xaa0 ] edx
mov eax [ ebp - 0xd30 ]
mov ecx [ ebp - 0x508 ]
mov [ eax + 0xaa4 ] ecx
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0x504 ]
mov [ edx + 0xaa8 ] eax
lea ecx [ ebp - 0xbf0 ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov ecx [ ebp - 0xd30 ]
mov [ ecx + 0xaac ] eax
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0xbec ]
mov [ edx + 0xab0 ] eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0xbe8 ]
mov [ ecx + 0xab4 ] edx
mov eax [ ebp - 0xd30 ]
mov ecx [ eax + 0xaac ]
push ecx
call sub_4036e0
mov ecx eax
call sub_432d34
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0xbe4 ]
mov [ edx + 0xab8 ] eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0xbe0 ]
mov [ ecx + 0xabc ] edx
mov eax [ ebp - 0xd30 ]
mov ecx [ ebp - 0xbdc ]
mov [ eax + 0xac0 ] ecx
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0xad0 ]
mov [ edx + 0x850 ] eax
mov ecx [ ebp - 0xd30 ]
cmp [ ecx + 0x850 ] 0x0
je r-xdata
mov eax [ ebp - 0xd30 ]
mov [ eax + 0x854 ] 0x0
lea ecx [ ebp - 0xac4 ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov edx [ ebp - 0xd30 ]
mov [ edx + 0x854 ] eax
jmp r-xdata
mov edx [ ebp - 0xd30 ]
mov [ edx + 0x85c ] 0x0
lea ecx [ ebp - 0xac8 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0xd30 ]
add ecx 0x85c
push ecx
call [ lstrcpyA@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0xacc ]
mov [ ecx + 0x858 ] edx
mov eax [ ebp - 0xd30 ]
cmp [ eax + 0x858 ] 0x0
je r-xdata
mov eax [ ebp - 0xd30 ]
mov [ eax + 0x968 ] 0x0
lea ecx [ ebp - 0xab8 ]
call sub_4027c0
push eax
mov edx [ ebp - 0xd30 ]
add edx 0x968
push edx
call [ lstrcpyA@IAT ]
jmp r-xdata
mov eax [ ebp - 0xd30 ]
mov ecx [ ebp - 0xac0 ]
mov [ eax + 0x960 ] ecx
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0xabc ]
mov [ edx + 0x964 ] eax
mov ecx [ ebp - 0xd30 ]
cmp [ ecx + 0x964 ] 0x0
je r-xdata
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0x140 ]
mov [ ecx + 0xaec ] edx
mov eax [ ebp - 0xd30 ]
cmp [ eax + 0xaec ] 0x2
jne r-xdata
lea ecx [ ebp - 0x150 ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov ecx [ ebp - 0xd30 ]
mov [ ecx + 0xac8 ] eax
lea ecx [ ebp - 0x14c ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov edx [ ebp - 0xd30 ]
mov [ edx + 0xacc ] eax
lea ecx [ ebp - 0x148 ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov ecx [ ebp - 0xd30 ]
mov edx [ ecx + 0xac8 ]
lea eax [ edx + eax - 0x1 ]
mov ecx [ ebp - 0xd30 ]
mov [ ecx + 0xad0 ] eax
lea ecx [ ebp - 0x154 ]
call sub_4027c0
push eax
call sub_4680a5
add esp 0x4
mov edx [ ebp - 0xd30 ]
mov ecx [ edx + 0xacc ]
lea edx [ ecx + eax - 0x1 ]
mov eax [ ebp - 0xd30 ]
mov [ eax + 0xad4 ] edx
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0xab4 ]
mov [ ecx + 0xa6c ] edx
mov eax [ ebp - 0xd30 ]
mov ecx [ ebp - 0x168 ]
mov [ eax + 0xad8 ] ecx
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0x164 ]
mov [ edx + 0xadc ] eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0x160 ]
mov [ ecx + 0xae0 ] edx
mov eax [ ebp - 0xd30 ]
mov ecx [ ebp - 0x15c ]
mov [ eax + 0xae4 ] ecx
mov edx [ ebp - 0xd30 ]
mov eax [ ebp - 0x144 ]
mov [ edx + 0xae8 ] eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0x158 ]
mov [ ecx + 0xac4 ] edx
mov eax [ ebp - 0xd30 ]
cmp [ eax + 0xac4 ] 0x3
jne r-xdata
mov eax [ ebp - 0xd30 ]
mov [ eax + 0xaf0 ] 0x0
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0x138 ]
mov [ ecx + 0xaf0 ] edx
jmp r-xdata
push 0x0
mov ecx [ ebp - 0xd30 ]
add ecx 0x2b8
call sub_4873d1
push 0x5000
mov ecx [ ebp - 0xd30 ]
add ecx 0x2b8
call sub_4873d1
jmp r-xdata
mov ecx [ ebp - 0xd30 ]
mov edx [ ebp - 0x13c ]
mov [ ecx + 0xaf8 ] edx
mov eax [ ebp - 0xd30 ]
mov ecx [ ebp - 0x134 ]
mov [ eax + 0xafc ] ecx
mov edx [ ebp - 0xd30 ]
mov eax [ edx + 0xafc ]
push eax
mov ecx [ ebp - 0xd30 ]
add ecx 0x390
call sub_40d2f9
lea ecx [ ebp - 0xaa8 ]
push ecx
mov ecx [ ebp - 0xd30 ]
call sub_428023
mov ecx [ ebp - 0xd30 ]
call sub_41f087
mov edx [ ebp - 0xd30 ]
mov eax [ edx + 0xf28 ]
push eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ecx + 0xf24 ]
push edx
mov ecx [ ebp - 0xd30 ]
add ecx 0xc0
call sub_4914ac
mov eax [ ebp - 0xd30 ]
cmp [ eax + 0xae8 ] 0x0
je r-xdata
push 0xa000
mov ecx [ ebp - 0xd30 ]
add ecx 0x390
call sub_4873d1
push 0x0
mov ecx [ ebp - 0xd30 ]
add ecx 0x390
call sub_4873d1
jmp r-xdata
mov ecx [ ebp - 0xd30 ]
cmp [ ecx + 0xaf0 ] 0x0
je r-xdata
mov ecx [ ebp - 0xd30 ]
cmp [ ecx + 0xaec ] 0x0
jne r-xdata
push 0x0
push 0xe81b
mov eax [ ebp - 0xd30 ]
add eax 0x390
push eax
mov ecx [ ebp - 0xd30 ]
call sub_48e6b5
jmp r-xdata
mov edx [ ebp - 0xd30 ]
cmp [ edx + 0xaec ] 0x1
jne r-xdata
lea ecx [ ebp - 0xd14 ]
call sub_428cd0
lea ecx [ ebp - 0xd1c ]
call sub_428cd0
mov ecx [ ebp - 0xd30 ]
add ecx 0x390
call sub_48d484
test eax eax
je r-xdata
push 0x0
push 0xe81e
mov edx [ ebp - 0xd30 ]
add edx 0x390
push edx
mov ecx [ ebp - 0xd30 ]
call sub_48e6b5
jmp r-xdata
mov ecx [ ebp - 0xd30 ]
mov edx [ ecx + 0xaf8 ]
push edx
mov ecx [ ebp - 0xd30 ]
add ecx 0x390
call sub_40d283
push 0x0
mov eax [ ebp - 0xd30 ]
mov ecx [ eax + 0xae0 ]
push ecx
mov edx [ ebp - 0xd30 ]
add edx 0x13c
push edx
mov ecx [ ebp - 0xd30 ]
call sub_48c60a
push 0x0
mov eax [ ebp - 0xd30 ]
mov ecx [ eax + 0xae4 ]
push ecx
mov edx [ ebp - 0xd30 ]
add edx 0xc0
push edx
mov ecx [ ebp - 0xd30 ]
call sub_48c60a
push 0x1
mov eax [ ebp - 0xd30 ]
mov edx [ eax ]
mov ecx [ ebp - 0xd30 ]
call [ edx + 0xc8 ]
mov [ ebp - 0xd28 ] 0x1
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x12c ]
call sub_428ac0
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x97c ]
call sub_428a20
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x780 ]
call sub_42acf8
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x4f8 ]
call sub_41b110
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x2e4 ]
call sub_428950
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0xbd4 ]
call sub_410355
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc7c ]
call sub_465978
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x5f4 ]
call sub_40e4cb
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xd04 ]
call sub_48dde3
mov [ ebp - 0x4 ] 0xffffffff
push sub_4774f7
push 0xf
push 0x14
lea eax [ ebp - 0xaa8 ]
push eax
call sub_467e54
mov eax [ ebp - 0xd28 ]
jmp r-xdata
lea eax [ ebp - 0xd14 ]
push eax
mov ecx [ ebp - 0xd30 ]
mov edx [ ecx + 0xbc ]
push edx
call [ GetClientRect@IAT ]
lea ecx [ ebp - 0xd14 ]
call sub_404fe0
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0xd24 ] eax
push 0x2
call [ GetSystemMetrics@IAT ]
mov esi eax
push 0x2d
call [ GetSystemMetrics@IAT ]
lea eax [ esi + eax * 4 + 0xa0 ]
mov [ ebp - 0xd20 ] eax
lea ecx [ ebp - 0xd14 ]
push ecx
mov ecx [ ebp - 0xd30 ]
call sub_4061a0
mov esi [ ebp - 0xd14 ]
sub esi [ ebp - 0xd20 ]
push 0x20
call [ GetSystemMetrics@IAT ]
sub esi eax
test esi esi
jge r-xdata
lea eax [ ebp - 0xd14 ]
push eax
mov ecx [ ebp - 0xd30 ]
add ecx 0x390
call sub_4066d0
mov ecx eax
call sub_4066d0
mov ecx eax
call sub_4061a0
mov ecx [ ebp - 0xd14 ]
mov [ ebp - 0xd1c ] ecx
mov edx [ ebp - 0xd10 ]
mov [ ebp - 0xd18 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0xd14 ]
sub esi [ ebp - 0xd20 ]
push 0x20
call [ GetSystemMetrics@IAT ]
sub esi eax
mov [ ebp - 0xd34 ] esi
mov [ ebp - 0xd34 ] 0x0
jmp r-xdata
push 0x2000
mov ecx [ ebp - 0xd18 ]
push ecx
mov edx [ ebp - 0xd1c ]
push edx
mov eax [ ebp - 0xd30 ]
add eax 0x390
push eax
mov ecx [ ebp - 0xd30 ]
call sub_48e7b7
mov edx [ ebp - 0xd34 ]
mov [ ebp - 0xd1c ] edx
mov eax [ ebp - 0xd10 ]
mov [ ebp - 0xd18 ] eax
sub_42662d
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x24 ] ecx
push 0x20000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0xf3c ] ecx
push 0x20000
push 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xf3c ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0xf3c ]
mov [ ebp - 0x14 ] edx
push 0x20000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x10000
jge r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov cx [ ebp - 0x8 ]
mov [ eax + edx * 2 ] cx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x10000
jge r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
push eax
call sub_47c3de
add esp 0x4
mov esp ebp
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x2
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0xf3c ]
mov eax [ ebp - 0x8 ]
lea ecx [ edx + eax * 2 ]
push ecx
push 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
lea ecx [ eax + edx * 2 ]
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_426735
push ebp
mov ebp esp
push 0xffffffff
push sub_498543
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
mov [ ebp - 0x78 ] ecx
push 0x0
mov eax [ ebp - 0x78 ]
add eax 0xbdc
push eax
lea ecx [ ebp - 0x70 ]
call sub_40e9f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x70 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_40ef60
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
push rw-data
push 0x0
call [ ShellExecuteA@IAT ]
cmp eax 0x20
jg r-xdata
lea ecx [ ebp - 0x74 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
push ecx
push 0x402
lea edx [ ebp - 0x74 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x74 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x74 ]
call sub_47c674
sub_42680a
push ebp
mov ebp esp
push 0xffffffff
push sub_498556
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
mov [ ebp - 0x78 ] ecx
push 0x0
lea ecx [ ebp - 0x74 ]
call sub_465ff0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x74 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
call sub_428b40
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x78 ]
call sub_47a448
mov ecx eax
call sub_40a240
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
call sub_4036e0
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x7c ]
mov edx [ eax ]
mov ecx [ ebp - 0x7c ]
call [ edx + 0x7c ]
jmp r-xdata
sub_42689a
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
push 0xb
push 0x0
call sub_4036e0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x98 ]
mov esp ebp
pop ebp
retn
sub_4268c1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0xb60 ] 0x0
sete cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb60 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xb60 ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x390
push edx
mov ecx [ ebp - 0x4 ]
call sub_48c60a
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb60 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_428720
sub_426955
push ebp
mov ebp esp
push 0xffffffff
push sub_498591
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x430
mov [ ebp - 0x438 ] ecx
mov eax [ ebp - 0x438 ]
mov ecx [ eax + 0xf34 ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x438 ]
add edx 0xbb4
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x438 ]
add eax 0xb40
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x438 ]
add ecx 0xb44
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x438 ]
add edx 0xb48
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x438 ]
add eax 0xb4c
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] ecx
push 0x0
lea edx [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x25c ]
call sub_4017a0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x25c ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x25c ]
call sub_402620
lea eax [ ebp - 0x364 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov ecx [ ebp - 0x438 ]
add ecx 0xb44
call sub_4027c0
push eax
call [ SetCurrentDirectoryA@IAT ]
test eax eax
jne r-xdata
push 0x0
mov ecx [ ebp - 0x438 ]
add ecx 0xbb4
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x36c ] ecx
mov edx [ ebp - 0x36c ]
cmp [ edx + 0x54 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x25c ]
call sub_402620
jmp r-xdata
mov eax [ ebp - 0x36c ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x368 ] ecx
mov edx [ ebp - 0x36c ]
mov [ ebp - 0x260 ] edx
lea ecx [ ebp - 0x42c ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x1
push 0xa0
lea eax [ ebp - 0x410 ]
push eax
mov ecx [ ebp - 0x36c ]
mov edx [ ecx + 0x50 ]
push edx
mov eax [ ebp - 0x36c ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x42c ]
call sub_4600f6
mov [ ebp - 0x368 ] eax
lea edx [ ebp - 0x410 ]
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x42c ]
call sub_45feb7
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x43c ] 0x0
push 0x0
mov edx [ ebp - 0x438 ]
add edx 0xb50
push edx
mov ecx [ ebp - 0x434 ]
call sub_402b20
mov [ ebp - 0x43c ] eax
jmp r-xdata
lea ecx [ ebp - 0x428 ]
call sub_47711c
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x428 ]
push eax
mov ecx [ ebp - 0x438 ]
add ecx 0xb40
call sub_4027c0
push eax
mov ecx [ ebp - 0x438 ]
call sub_426da6
mov [ ebp - 0x414 ] eax
push 0x0
mov ecx [ ebp - 0x438 ]
call sub_47bde8
mov ecx [ ebp - 0x438 ]
mov [ ecx + 0xb50 ] 0x1
push 0x68
call sub_405cd0
mov [ ebp - 0x434 ] eax
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x434 ] 0x0
je r-xdata
mov eax [ ebp - 0x43c ]
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x438 ]
mov edx [ ebp - 0x430 ]
mov [ ecx + 0x1108 ] edx
mov eax [ ebp - 0x438 ]
push eax
push 0xaf
mov ecx [ ebp - 0x438 ]
mov ecx [ ecx + 0x1108 ]
mov edx [ ebp - 0x438 ]
mov eax [ edx + 0x1108 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
push 0x5
mov eax [ ebp - 0x438 ]
mov ecx [ eax + 0x1108 ]
call sub_47bda6
mov ecx [ ebp - 0x438 ]
add ecx 0x1d8
call sub_40bc50
mov [ ebp - 0x370 ] eax
mov ecx [ ebp - 0x370 ]
call sub_42cbd6
mov ecx [ ebp - 0x438 ]
mov [ ecx + 0xb58 ] 0x1
push 0x0
mov edx [ ebp - 0x438 ]
mov eax [ edx + 0xb58 ]
push eax
mov ecx [ ebp - 0x438 ]
add ecx 0x1d8
push ecx
mov ecx [ ebp - 0x438 ]
call sub_48c60a
mov edx [ ebp - 0x438 ]
mov [ edx + 0xb64 ] 0x0
mov eax [ ebp - 0x438 ]
mov [ eax + 0xb68 ] 0x0
mov ecx [ ebp - 0x438 ]
add ecx 0xb44
call sub_4027c0
push eax
mov ecx [ ebp - 0x438 ]
add ecx 0xf48
push ecx
call [ lstrcpyA@IAT ]
mov edx [ ebp - 0x438 ]
mov eax [ ebp - 0x368 ]
mov [ edx + 0x104c ] eax
mov ecx [ ebp - 0x368 ]
push ecx
mov edx [ ebp - 0x260 ]
push edx
mov eax [ ebp - 0x438 ]
add eax 0x1050
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x438 ]
call sub_40a1e0
mov ecx [ ebp - 0x438 ]
mov [ ecx + 0x10f0 ] eax
lea ecx [ ebp - 0x428 ]
call sub_40efb0
mov edx [ ebp - 0x438 ]
mov [ edx + 0x10f8 ] eax
lea eax [ ebp - 0x428 ]
push eax
mov ecx [ ebp - 0x438 ]
call sub_427e38
mov ecx [ ebp - 0x438 ]
mov [ ecx + 0x10fc ] eax
mov edx [ ebp - 0x438 ]
add edx 0xb50
mov eax [ ebp - 0x438 ]
mov [ eax + 0x10f4 ] edx
mov ecx [ ebp - 0x438 ]
mov edx [ ebp - 0x438 ]
mov eax [ edx + 0xb48 ]
mov [ ecx + 0x1100 ] eax
mov ecx [ ebp - 0x438 ]
mov edx [ ebp - 0x438 ]
mov eax [ edx + 0xb4c ]
mov [ ecx + 0x1104 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x438 ]
add ecx 0xf48
push ecx
push sub_402d00
call sub_47cd0a
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x428 ]
call sub_47714f
sub_426da6
push ebp
mov ebp esp
sub esp 0x110
mov [ ebp - 0x110 ] ecx
mov ecx [ ebp + 0xc ]
call sub_428b90
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x108 ]
push ecx
call [ lstrcpyA@IAT ]
mov [ ebp - 0x10c ] rw-data
mov edx [ ebp - 0x10c ]
push edx
lea eax [ ebp - 0x108 ]
push eax
call sub_4685fc
add esp 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
call sub_40efb0
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_428bb0
mov edx [ ebp - 0x10c ]
push edx
push 0x0
call sub_4685fc
add esp 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426e27
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_48d1b5
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_48d1b5
mov esp ebp
pop ebp
retn 0x4
sub_426e4c
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x1d8
call sub_40d440
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0xb58 ] eax
mov ecx [ ebp - 0x34 ]
add ecx 0x1d8
call sub_40bc50
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_42cbd6
push 0x3
mov edx [ ebp - 0x34 ]
add edx 0x1110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x390
call sub_40d318
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x111c ]
or edx eax
mov eax [ ebp - 0x34 ]
mov [ eax + 0x111c ] edx
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0xac4 ] 0x1
jne r-xdata
call sub_4036e0
mov ecx eax
call sub_432d1b
mov ecx [ ebp - 0x34 ]
call sub_48bea3
mov esp ebp
pop ebp
retn
mov [ ebp - 0x30 ] 0x2c
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x34 ]
call sub_479730
mov eax [ ebp - 0x34 ]
add eax 0xac8
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
sub_426f09
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_48a6e8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_4036e0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x7c ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_48c57e
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x60 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x64 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x2
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_44d960
sub_426f9d
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4036e0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x7c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_47c3de
add esp 0x4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
call [ eax + 0x60 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
call [ eax + 0x64 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_44c75e
sub_427019
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
call sub_4036e0
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
call sub_4841fc
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_48420e
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0x78 ]
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0x7c ]
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_427068
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_48a6e8
neg eax
sbb eax eax
neg eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_4270a9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_48a6e8
neg eax
sbb eax eax
neg eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_4270ea
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_48a6e8
neg eax
sbb eax eax
neg eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_42712b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_48a6e8
neg eax
sbb eax eax
neg eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_42716c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_48a6e8
neg eax
sbb eax eax
neg eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_427194
push ebp
mov ebp esp
push 0xffffffff
push sub_4985a4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x28 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_4036e0
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_4841fc
mov [ ebp - 0x10 ] eax
push 0xffffffff
push 0x1
push 0x40b
call sub_4840fb
cmp eax 0x1
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_48420e
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x54 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
push 0x0
push 0xe141
push 0x111
mov ecx [ ebp - 0x28 ]
call sub_405d50
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x58 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
mov ecx [ ebp - 0x20 ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x20 ]
call [ eax + 0x7c ]
mov eax 0x1
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x20 ]
call [ edx + 0x9c ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
call sub_428c70
mov eax [ eax ]
push eax
push 0x41d
lea ecx [ ebp - 0x24 ]
push ecx
call sub_47584a
add esp 0xc
push 0x0
push 0x4
lea ecx [ ebp - 0x24 ]
call sub_4027c0
push eax
call sub_4840c3
cmp eax 0x6
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
sub_42730c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0xb58 ] 0x0
sete cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb58 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xb58 ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x1d8
push edx
mov ecx [ ebp - 0x4 ]
call sub_48c60a
mov esp ebp
pop ebp
retn
sub_42734d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x1d8
call sub_40d440
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb58 ] eax
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xb58 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_427392
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4273ec
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
sub_4273bf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4273ec
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_428c20
mov esp ebp
pop ebp
retn 0xc
sub_4273ec
push ebp
mov ebp esp
push 0xffffffff
push sub_4985c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
cmp [ eax + 0xf40 ] 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x1b
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_4275e5
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_418770
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x24 ]
add eax 0xd1c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x14 ]
call sub_418b31
mov [ ebp - 0x10 ] ax
mov edx [ ebp - 0x10 ]
and edx 0xffff
test edx edx
je r-xdata
mov edx [ ebp - 0x24 ]
cmp [ edx + 0xa8c ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_41877e
mov eax [ ebp - 0x10 ]
and eax 0xffff
and eax 0xff00
cmp eax 0x500
jne r-xdata
jmp r-xdata
push 0x3
mov ecx [ ebp - 0x24 ]
call sub_427591
lea ecx [ ebp - 0x20 ]
call sub_409420
mov [ ebp - 0x4 ] 0x1
mov ax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_409439
mov [ ebp - 0x1c ] ax
push 0x0
mov ecx [ ebp - 0x1c ]
and ecx 0xffff
push ecx
push 0x111
mov ecx [ ebp - 0x24 ]
call sub_405d50
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_40942e
mov ecx [ ebp - 0x10 ]
and ecx 0xffff
cmp ecx 0x50a
jl r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xffff
and edx 0xff
push edx
mov ecx [ ebp - 0x24 ]
call sub_427555
jmp r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xffff
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
sub eax 0x50a
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_427591
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_41877e
jmp r-xdata
sub_427555
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0xc ]
call sub_428cd0
lea eax [ ebp - 0xc ]
push eax
call [ GetCursorPos@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
add eax 0xbf0
push eax
lea ecx [ ebp - 0x4 ]
call sub_465c40
mov esp ebp
pop ebp
retn 0x4
sub_427591
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xaa8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0xf40 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xf44 ] 0x0
push 0x0
push 0x1f4
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_416e90
mov ecx [ ebp + 0x8 ]
add ecx 0xa
push ecx
mov ecx [ ebp - 0x4 ]
call sub_427555
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_4275e5
push ebp
mov ebp esp
push 0xffffffff
push sub_4985d3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x34 ] ecx
cmp [ ebp + 0x8 ] 0x100
jb r-xdata
cmp [ ebp + 0x8 ] 0x1b
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0xf40 ]
add eax 0xa
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x34 ]
lea ecx [ edx + ecx + 0xbf0 ]
call sub_41b1b0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x34 ]
call sub_416ec0
mov eax [ ebp - 0x34 ]
mov [ eax + 0xf40 ] 0xffffffff
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0xf44 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x20 ]
jge r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x20 ]
jne r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
imul eax eax 0x14
mov ecx [ ebp - 0x34 ]
lea ecx [ ecx + eax + 0xbf0 ]
call sub_41b1d0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x1
mov ecx [ ebp - 0x34 ]
call sub_416ec0
mov eax [ ebp - 0x34 ]
mov [ eax + 0xf40 ] 0xffffffff
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0xf44 ] 0x0
mov dx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] dx
mov eax [ ebp - 0x14 ]
and eax 0xffff
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xffff
mov [ ebp - 0x24 ] dl
movsx eax [ ebp + 0x8 ]
movsx ecx [ ebp - 0x24 ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp - 0x14 ]
and ecx 0xffff
and ecx 0xff00
cmp ecx 0x500
jne r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea ecx [ ebp - 0x30 ]
call sub_409420
mov [ ebp - 0x4 ] 0x0
mov ax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_409439
mov [ ebp - 0x2c ] ax
push 0x0
mov ecx [ ebp - 0x2c ]
and ecx 0xffff
push ecx
push 0x111
mov ecx [ ebp - 0x34 ]
call sub_405d50
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_40942e
mov edx [ ebp - 0x14 ]
and edx 0xffff
cmp edx 0x50a
jl r-xdata
mov edx [ ebp - 0x14 ]
and edx 0xffff
and edx 0xff
push edx
mov ecx [ ebp - 0x34 ]
call sub_427555
jmp r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xffff
sub eax 0x4f6
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_427591
jmp r-xdata
sub_4277c3
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b5f0
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xf44 ]
add ecx 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + 0xf44 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0xf44 ]
cmp edx [ ecx + 0xaa8 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_416ec0
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xf40 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0xf40 ] 0xffffffff
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xf44 ] 0x0
mov edx [ ebp - 0x4 ]
add edx 0xa
push edx
mov ecx [ ebp - 0x8 ]
call sub_427555
sub_42784e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0xb9c ] edx
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x4 ] 0x1
setge cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb70 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb70 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x4 ] 0x2
setge al
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb74 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xb74 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov cl [ edx ]
mov [ eax + 0xb80 ] cl
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x4 ] 0x4
setge al
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb78 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xb78 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xf38 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
call sub_411274
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb82 ] ax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x4 ] 0x8
setge al
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb7c ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xb7c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xf38 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
call sub_4112aa
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb84 ] eax
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xf38 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
call sub_411382
add esp 0x8
mov ecx [ ebp - 0x4 ]
fstp [ ecx + 0xb88 ]
sub_427965
push ebp
mov ebp esp
push 0xffffffff
push sub_4985e9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc0
mov [ ebp - 0xcc ] ecx
push 0x0
mov eax [ ebp - 0xcc ]
add eax 0xba0
push eax
lea ecx [ ebp - 0xc8 ]
call sub_40f240
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xc8 ]
call sub_47841e
mov ecx [ ebp - 0xcc ]
add ecx 0xba0
call sub_41b1b0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
push 0x0
mov ecx [ ebp - 0xcc ]
add ecx 0xba0
push ecx
push 0x7fff
mov ecx [ ebp - 0xcc ]
call sub_427a73
push 0x0
mov ecx [ ebp - 0xcc ]
call sub_42863f
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc8 ]
call sub_40f2c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0xcc ]
add ecx 0xba0
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
cmp [ edx + 0xb4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xcc ]
call sub_41f23f
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xb0
call sub_480765
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
sub_427a73
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
call sub_4036e0
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_4841fc
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_48420e
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov ecx [ ebp - 0xc ]
call [ edx + 0x54 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov ecx [ ebp - 0xc ]
call [ edx + 0x58 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_436702
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
sub_427ae8
push ebp
mov ebp esp
push 0xffffffff
push sub_4985fc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xb68 ]
add ecx 0x1
mov edx [ ebp - 0x18 ]
mov [ edx + 0xb68 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x18 ]
add ecx 0x1d8
call sub_40bc50
mov [ ebp - 0x10 ] eax
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x10 ]
call sub_42cb4a
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x1108 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x1108 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
push 0x1
mov edx [ ebp + 0x8 ]
push edx
push 0x416
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x1108 ]
call sub_402890
sub_427bca
push ebp
mov ebp esp
push 0xffffffff
push sub_49860f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0xb64 ]
add ecx 0x1
mov edx [ ebp - 0x24 ]
mov [ edx + 0xb64 ] ecx
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x1108 ] 0x0
je r-xdata
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
push edx
call [ lstrlenA@IAT ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] eax
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push rw-data
lea edx [ ebp - 0x18 ]
push edx
call sub_475837
add esp 0x10
mov ecx [ ebp - 0x24 ]
add ecx 0x1d8
call sub_40bc50
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x10 ]
call sub_42cb4a
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x1108 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xb64 ]
push eax
push 0x416
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x1108 ]
call sub_402890
sub_427ce5
push ebp
mov ebp esp
push 0xffffffff
push sub_498622
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x24 ]
call sub_428c00
mov eax [ ebp - 0x24 ]
mov [ eax + 0xb50 ] 0x0
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x1108 ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x1108 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x1108 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x0
push 0x1
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x4 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov edx [ ebp - 0x24 ]
cmp [ edx + 0xb64 ] 0x0
jne r-xdata
push 0x0
push rw-data
mov ecx [ ebp - 0x10 ]
call sub_42cb4a
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0x1108 ] 0x0
mov ecx [ ebp - 0x24 ]
add ecx 0x1d8
call sub_40bc50
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0xb68 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0xb64 ]
push ecx
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_475837
add esp 0xc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x10 ]
call sub_42cb4a
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
push 0x0
push rw-data
mov ecx [ ebp - 0x10 ]
call sub_42cb4a
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x10fc ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_47bde8
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_427e38
push ebp
mov ebp esp
push 0xffffffff
push sub_498647
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40efb0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x20 ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40efd0
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x40 ]
call sub_4027a0
mov edx [ ebp - 0x18 ]
lea eax [ edx + eax + 0x1 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x14 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40efd0
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x48 ]
push ecx
lea ecx [ ebp - 0x24 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x30 ]
call sub_47c674
lea ecx [ ebp - 0x24 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x14 ]
push edx
call [ lstrcpyA@IAT ]
lea ecx [ ebp - 0x24 ]
call sub_4027a0
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
sub_427f9c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0xf
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x10 ]
lea ecx [ edx + ecx + 0xbf0 ]
call sub_41b1b0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + eax + 0xbf0 ]
call sub_41b1d0
push eax
mov edx [ ebp - 0x8 ]
imul edx edx 0x14
mov ecx [ ebp + 0x8 ]
add ecx edx
call sub_41b180
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_428023
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0xf
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x10 ]
lea ecx [ edx + ecx + 0xbf0 ]
call sub_41b160
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
mov ecx [ ebp + 0x8 ]
add ecx eax
call sub_41b1b0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x14
mov edx [ ebp + 0x8 ]
add ecx edx
call sub_41b1d0
push eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + eax + 0xbf0 ]
call sub_41b180
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_4280ba
push ebp
mov ebp esp
push 0xffffffff
push sub_498669
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
mov [ ebp - 0x128 ] ecx
push 0x104
lea eax [ ebp - 0x110 ]
push eax
mov cx [ ebp + 0x8 ]
push ecx
call [ GlobalGetAtomNameA@IAT ]
lea edx [ ebp - 0x110 ]
push edx
lea ecx [ ebp - 0x118 ]
call sub_47c6e2
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x114 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
call sub_4036e0
mov [ ebp - 0x120 ] eax
lea eax [ ebp - 0x114 ]
push eax
lea ecx [ ebp - 0x118 ]
push ecx
call sub_411d0a
add esp 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x118 ]
call sub_4027c0
push eax
call sub_4036e0
mov [ ebp - 0x12c ] eax
mov eax [ ebp - 0x12c ]
mov edx [ eax ]
mov ecx [ ebp - 0x12c ]
call [ edx + 0x7c ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x114 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x118 ]
call sub_47c674
mov eax [ ebp - 0x124 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x114 ]
push edx
lea ecx [ ebp - 0x118 ]
call sub_47c761
sub_4281c3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x3
jne r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_42863f
mov ecx [ ebp - 0x4 ]
call sub_428720
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_428388
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_48a6e8
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
call sub_428c00
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_428216
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_48baca
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x20
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x1c ]
push eax
call [ GetMenu@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x44 ] eax
sub_42827b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0xb5c ] 0x0
sete cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb5c ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xb5c ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x2b8
push edx
mov ecx [ ebp - 0x4 ]
call sub_48c60a
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb5c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_42863f
sub_4282d2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x2b8
call sub_40d440
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb5c ] eax
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xb5c ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_428343
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x390
call sub_40d440
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xb60 ] eax
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xb60 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_428388
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x84c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x84c ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x844
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x848
call sub_47c761
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84c ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x84c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x848
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x844
call sub_47c761
mov ecx [ ebp - 0x4 ]
add ecx 0x848
call sub_47c5ff
mov ecx [ ebp - 0x4 ]
add ecx 0x844
call sub_4027c0
mov [ ebp + 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84c ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x844
call sub_47c5ff
push 0x0
push 0xe001
mov ecx [ ebp - 0x4 ]
call sub_4284aa
mov edx [ ebp + 0x8 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x848
call sub_4016b0
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_4284aa
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x848
call sub_47c5ff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x84c ] 0x0
sub_4284aa
push ebp
mov ebp esp
push 0xffffffff
push sub_49867c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x94 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x24 ]
and al 0xbf
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x24 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov ecx [ ebp - 0x24 ]
call [ eax + 0xd4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x94 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x90 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x844
call sub_47c7b1
mov ecx [ ebp - 0x24 ]
add ecx 0x844
call sub_4027c0
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_47bc7c
mov ecx [ ebp - 0x10 ]
call sub_47a2e8
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0xef06
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x94 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x90 ] edx
cmp [ ebp + 0x8 ] 0xe001
jne r-xdata
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov ecx [ ebp - 0x24 ]
call [ eax + 0xc4 ]
lea ecx [ ebp - 0x1c ]
call sub_4027c0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x24 ]
add ecx 0x844
call sub_4016b0
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] 0xf005
mov ecx [ ebp - 0x24 ]
add ecx 0x844
call sub_4027c0
mov [ ebp - 0x18 ] eax
jmp r-xdata
sub_42861e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb5c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_42863f
sub_42863f
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xb5c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x2b8
call sub_40b8e9
mov [ ebp - 0x4 ] eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404610
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_48a6e8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_48c57e
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_405c80
mov [ ebp + 0x8 ] eax
sub_4286ae
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xb5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0xb60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0xaa4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x390
call sub_40d07e
mov ecx [ ebp - 0x8 ]
add ecx 0x2b8
call sub_40b8e9
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_404cf6
sub_428720
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xb60 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_48a6e8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xf38 ]
push edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0xf34 ]
push ecx
mov edx [ ebp - 0x14 ]
xor eax eax
cmp [ edx + 0xb94 ] 0x2
sete al
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x390
call sub_40c469
mov ecx [ ebp - 0xc ]
call sub_48c57e
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xab4 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_45d2c8
mov [ ebp - 0x4 ] eax
sub_4287c9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x390
call sub_40c469
mov esp ebp
pop ebp
retn 0x14
sub_428800
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41e4bd
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_428850
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_477324
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4288a0
push ebp
mov ebp esp
push ecx
push rw-data
push rw-data
call [ FindWindowA@IAT ]
mov [ ebp - 0x4 ] eax
push rw-data
call [ RegisterWindowMessageA@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
push rw-data
call [ RegisterWindowMessageA@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
push rw-data
call [ RegisterWindowMessageA@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ ebp + 0xc ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
push 0x0
push 0x0
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ SendMessageA@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x3
push 0x0
push 0x0
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call [ SendMessageA@IAT ]
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_428950
push ebp
mov ebp esp
push 0xffffffff
push sub_498702
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
call sub_47c674
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x10 ]
add ecx 0x198
call sub_47c674
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0x194
call sub_47c674
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_47c674
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_48a1c5
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_48a1c5
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_48a1c5
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a1c5
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_428a20
push ebp
mov ebp esp
push 0xffffffff
push sub_498755
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x4
push sub_4770ef
push 0x8
push 0x14
mov eax [ ebp - 0x10 ]
add eax 0x15c
push eax
call sub_467e54
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x154
call sub_476747
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_46423f
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_46423f
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a0bf
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_428ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_498787
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_4770ef
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_489f66
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_489f66
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_428b40
push ebp
mov ebp esp
push 0xffffffff
push sub_4987a9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_428bb0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4772f8
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_428c40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x224
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xbc ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_428ce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x414
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_428d10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x416
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_428d40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x418
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_428d70
push ebp
mov ebp esp
push 0xffffffff
push sub_4987f3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x20 ]
push eax
push 0xbe
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_406740
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_416f70
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xe4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xe8 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0xec ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx + 0xf0 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xf4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x1c ]
mov [ edx + 0xf8 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
call sub_47c7b1
mov edx [ ebp - 0x10 ]
mov [ edx + 0xe0 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x1c
sub_428e66
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x402
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x98
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0xdc
push edx
push 0x3ef
mov eax [ ebp + 0x8 ]
push eax
call sub_483d6c
mov ecx [ ebp - 0x4 ]
add ecx 0xe0
push ecx
push 0x3f8
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov esp ebp
pop ebp
retn 0x4
sub_428eeb
push ebp
mov ebp esp
push 0xffffffff
push sub_498806
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x20 ]
call sub_4786a4
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x3
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0xec ]
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0x5c
call sub_4029a0
mov ecx [ ebp - 0x20 ]
call sub_429072
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0xf4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
push ecx
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xe8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0xe4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + eax * 4 ]
push ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x5c
call sub_406999
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
cmp [ edx + 0xe0 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xf8 ]
push ecx
push rw-data
mov edx [ ebp - 0x20 ]
add edx 0xdc
push edx
call sub_475837
add esp 0xc
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xf8 ]
push ecx
push rw-data
mov edx [ ebp - 0x20 ]
add edx 0xdc
push edx
call sub_475837
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x20 ]
call sub_47b0ce
mov ecx [ ebp - 0x20 ]
add ecx 0x98
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x20 ]
add ecx 0x98
call sub_401740
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x18 ]
jmp r-xdata
sub_429072
push ebp
mov ebp esp
push 0xffffffff
push sub_498819
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xf0 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0xf0 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x405
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42911d
push ebp
mov ebp esp
push 0xffffffff
push sub_49882c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov [ ebp - 0x20 ] ecx
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_47b0ce
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xe0 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x20 ]
add eax 0xdc
push eax
call sub_41145e
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx + 0xf0 ]
jbe r-xdata
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0xe0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x5c
call sub_402970
mov ecx [ ebp - 0x20 ]
mov [ ecx + 0xec ] eax
mov ecx [ ebp - 0x20 ]
call sub_478709
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x20 ]
call sub_47bb2c
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
call sub_401740
jmp r-xdata
push 0x3e8
lea ecx [ ebp - 0x18 ]
call sub_47e84a
push 0x3ec
lea ecx [ ebp - 0x18 ]
call sub_47e84a
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
call sub_4840c3
push 0x3ef
mov ecx [ ebp - 0x20 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x14 ]
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
sub_42925c
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_47b0ce
xor eax eax
cmp [ ebp + 0x8 ] 0x3f9
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x98
call sub_4171b1
mov ecx [ ebp - 0x8 ]
call sub_429072
mov esp ebp
pop ebp
retn 0x4
sub_42929e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0xe0 ] 0x1
sete cl
push ecx
mov edx [ ebp - 0x4 ]
add edx 0xdc
push edx
call sub_411579
add esp 0x8
mov esp ebp
pop ebp
retn
sub_4292e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_429310
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_429310
push ebp
mov ebp esp
push 0xffffffff
push sub_498864
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
call sub_47c674
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_416fa3
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_40675f
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_429380
push ebp
mov ebp esp
push 0xffffffff
push sub_498879
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_477674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x14
call sub_4774c4
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4293d7
push ebp
mov ebp esp
push 0xffffffff
push sub_498898
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x14
call sub_41b160
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x14
call sub_4774f7
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_4776a7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42943a
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_4297f0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4297b0
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x14
call sub_41b180
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_429830
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_429790
push 0x1
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x14
call sub_4776fb
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x14
call sub_4298a0
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x14
call sub_4298a0
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_429770
push 0x1
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x14
call sub_47763d
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
jmp r-xdata
sub_42952f
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_4297f0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_429830
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_429830
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_429596
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_4297f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_429830
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x10 ]
sub edx 0x1
push edx
mov ecx [ ebp - 0x14 ]
call sub_429830
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_429608
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_4297f0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_429830
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
xor eax eax
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x14
call sub_4298a0
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov [ ecx ] edx
mov eax 0x1
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_429688
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x14
call sub_4298a0
mov eax [ eax ]
mov esp ebp
pop ebp
retn 0x4
sub_4296c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_429770
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x14
call sub_47763d
mov esp ebp
pop ebp
retn 0x4
sub_4296ee
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_429790
push 0x1
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x14
call sub_4776fb
mov esp ebp
pop ebp
retn 0xc
sub_429720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x14
call sub_429880
mov esp ebp
pop ebp
retn 0x8
sub_429740
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4293d7
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_429790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4776fb
mov esp ebp
pop ebp
retn 0x8
sub_429850
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4776d4
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4298e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4988c5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_410070
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_4774c4
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x50
call sub_4774c4
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_429946
push ebp
mov ebp esp
push 0xffffffff
push sub_4988e4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x50
call sub_4774f7
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_4774f7
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_489f66
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4299b9
push ebp
mov ebp esp
push 0xffffffff
push sub_498900
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push esi
push edi
mov [ ebp - 0x58 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
push ecx
call sub_47fc89
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
call [ eax + 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x3
test edx edx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x4
test eax eax
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_406640
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov ecx [ ebp - 0x14 ]
call sub_4066b0
push 0x8
call [ GetSysColor@IAT ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x30 ]
push 0x5
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_406660
push 0xe
call [ GetSysColor@IAT ]
push eax
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
call [ eax + 0x30 ]
push 0xd
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_406660
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov ecx [ ebp - 0x14 ]
call sub_405210
lea ecx [ ebp - 0x1c ]
call sub_480765
mov edx [ ebp + 0x8 ]
add edx 0x1c
push edx
lea ecx [ ebp - 0x30 ]
call sub_406be0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x3
mov [ ebp - 0x34 ] ecx
lea ecx [ ebp - 0x20 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x2c ] 0xffffffff
je r-xdata
push 0xf
call [ GetSysColor@IAT ]
push eax
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x30 ]
mov ecx [ ebp - 0x58 ]
call sub_40a1e0
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x38 ] eax
lea ecx [ ebp - 0x30 ]
call sub_404fe0
mov ecx [ ebp - 0x30 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
push 0x2
push 0x2
lea ecx [ ebp - 0x30 ]
call sub_4065f0
mov ecx [ ebp - 0x58 ]
call sub_40a1e0
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push 0xf
call [ GetSysColor@IAT ]
mov [ ebp - 0x40 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x50
call sub_4298a0
mov ecx [ eax ]
mov [ ebp - 0x40 ] ecx
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x14 ]
call sub_47fea7
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x58 ]
call sub_48a044
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x1c
push edx
push 0x0
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_409390
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_405020
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x3c
call sub_4298a0
mov ecx [ eax ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
call [ eax + 0x30 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x40 ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
call [ eax + 0x2c ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
add edx 0x1
push edx
push rw-data
lea eax [ ebp - 0x20 ]
push eax
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_406c30
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + eax + 0x3 ]
mov [ ebp - 0x28 ] edx
push 0x400
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_429e30
mov esi [ ebp - 0x2c ]
neg esi
mov edx [ ebp + 0x8 ]
add esi [ edx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edi [ eax + 0x28 ]
sub edi [ ecx + 0x20 ]
lea ecx [ ebp - 0x30 ]
call sub_404fe0
sub edi eax
mov eax edi
cdq
sub eax edx
sar eax 0x1
add esi eax
push esi
mov edx [ ebp - 0x30 ]
neg edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
lea edx [ edx + ecx + 0x2 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_406140
push 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
push 0x2
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x30 ]
add eax 0x1
push eax
mov ecx [ ebp - 0x14 ]
call sub_409390
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_406660
push 0x1
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_429e10
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_406c00
lea ecx [ ebp - 0x1c ]
call sub_480765
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
call [ eax + 0x30 ]
mov ecx [ ebp - 0x4c ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
call [ eax + 0x2c ]
mov ecx [ ebp - 0x28 ]
add ecx 0x5
mov [ ebp - 0x38 ] ecx
jmp r-xdata
sub_429d24
push ebp
mov ebp esp
sub esp 0x44
mov [ ebp - 0x44 ] ecx
call sub_402850
mov ecx eax
call sub_40a130
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x13
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_416d50
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x40 ]
mov [ ecx + 0x10 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_429d69
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x3c
call sub_41b160
mov ecx [ ebp - 0x8 ]
add ecx 0x50
call sub_41b160
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x3c
call sub_41b180
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x50
call sub_41b180
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_429de0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_429946
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_429e10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ InflateRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_429e30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4027a0
push eax
mov ecx [ ebp + 0x8 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
call [ eax + 0x68 ]
mov esp ebp
pop ebp
retn 0xc
sub_429e70
push ebp
mov ebp esp
push 0xffffffff
push sub_498919
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x1c ]
push eax
push 0x8c
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_4298e0
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xc0 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0xc8 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx + 0xcc ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xd0 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx + 0xd4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xd8 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x18
sub_429f28
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3fd
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov esp ebp
pop ebp
retn 0x4
sub_429f66
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_429f97
push 0x3fd
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
xor eax eax
mov esp ebp
pop ebp
retn
sub_429f97
push ebp
mov ebp esp
push 0xffffffff
push sub_49892c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x28 ] ecx
push 0x3
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xc8 ]
push ecx
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0xc4 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_429d69
call sub_402850
mov ecx eax
call sub_40a130
mov [ ebp - 0x20 ] eax
push 0x1
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_416e60
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_407f50
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0xc0 ]
call sub_4297f0
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x28 ]
call sub_42a590
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_407ec0
mov ecx [ ebp - 0x28 ]
call sub_42a10b
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xc0 ]
call sub_429830
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0xcc ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
push rw-data
lea ecx [ ebp - 0x1c ]
push ecx
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_409900
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xc0 ]
call sub_429688
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_4098d0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
sub_42a10b
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_407e60
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub eax 0x1
xor ecx ecx
cmp [ ebp - 0x8 ] eax
setne cl
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
push edx
push 0x3e8
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp - 0xc ]
push eax
push 0x3ea
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
xor ecx ecx
cmp [ ebp - 0x4 ] 0x1
setg cl
push ecx
push 0x3e9
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_42a193
push ebp
mov ebp esp
push 0xffffffff
push sub_49894e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
mov [ ebp - 0x12c ] ecx
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x12c ]
mov ecx [ ecx + 0xc0 ]
call sub_429830
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x12c ]
mov ecx [ eax + 0xc0 ]
call sub_429688
mov [ ebp - 0x18 ] eax
push 0x0
mov ecx [ ebp - 0x10 ]
push ecx
push 0x1
mov edx [ ebp - 0x12c ]
mov eax [ edx + 0xd0 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x12c ]
mov eax [ edx + 0xc8 ]
push eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx + 0xc4 ]
push edx
lea ecx [ ebp - 0x114 ]
call sub_428d70
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x114 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x114 ]
call sub_429310
lea ecx [ ebp - 0x114 ]
call sub_42929e
mov [ ebp - 0x118 ] eax
lea ecx [ ebp - 0x114 ]
call sub_4292cb
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x118 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x12c ]
mov ecx [ eax + 0xc0 ]
call sub_4297f0
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_4098d0
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x12c ]
mov ecx [ edx + 0xc0 ]
call sub_429720
jmp r-xdata
mov edx [ ebp - 0x120 ]
cmp edx [ ebp - 0x124 ]
jge r-xdata
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_407e60
sub eax 0x1
push eax
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_407ec0
mov ecx [ ebp - 0x12c ]
call sub_42a10b
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_47be0f
push 0x1
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_405450
mov eax [ ebp - 0x11c ]
cmp eax [ ebp - 0x118 ]
jne r-xdata
mov eax [ ebp - 0x120 ]
push eax
mov ecx [ ebp - 0x12c ]
mov ecx [ ecx + 0xc0 ]
call sub_429830
mov [ ebp - 0x11c ] eax
mov edx [ ebp - 0x11c ]
cmp edx [ ebp - 0x118 ]
jb r-xdata
lea ecx [ ebp - 0x128 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x118 ]
push eax
push rw-data
lea ecx [ ebp - 0x128 ]
push ecx
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x128 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x120 ]
push edx
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_4100c0
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x120 ]
push ecx
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_4098d0
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x118 ]
push eax
mov ecx [ ebp - 0x120 ]
push ecx
mov edx [ ebp - 0x12c ]
mov ecx [ edx + 0xc0 ]
call sub_4296ee
mov eax [ ebp - 0x120 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x120 ]
push edx
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_4098d0
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x120 ]
push ecx
mov edx [ ebp - 0x12c ]
mov ecx [ edx + 0xc0 ]
call sub_429720
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x128 ]
call sub_47c674
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x12c ]
add ecx 0x5c
call sub_407f20
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x12c ]
mov ecx [ ecx + 0xc0 ]
call sub_4296c4
mov ecx [ ebp - 0x120 ]
add ecx 0x1
mov [ ebp - 0x120 ] ecx
sub_42a4bf
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_407f20
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
mov ecx [ edx + 0xc0 ]
call sub_4296c4
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_407e60
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_407ec0
mov ecx [ ebp - 0xc ]
call sub_42a10b
mov ecx [ ebp - 0xc ]
add ecx 0x5c
call sub_47be0f
mov esp ebp
pop ebp
retn
sub_42a52e
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_407f50
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc0 ]
call sub_4296a6
mov ecx [ ebp - 0x8 ]
call sub_42a590
push 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_407ec0
mov ecx [ ebp - 0x8 ]
call sub_42a10b
push 0x2
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
mov esp ebp
pop ebp
retn
sub_42a590
push ebp
mov ebp esp
push 0xffffffff
push sub_498961
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xd0 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x3ed
lea ecx [ ebp - 0x14 ]
call sub_47e84a
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_409900
mov [ ebp - 0x10 ] eax
push 0xffffffff
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_4098d0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
sub_42a634
push ebp
mov ebp esp
push 0xffffffff
push sub_498983
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x130
mov [ ebp - 0x13c ] ecx
call sub_428be0
mov [ ebp - 0x14 ] eax
push 0x3fd
mov ecx [ ebp - 0x13c ]
call sub_47bb2c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov ecx [ ebp - 0x13c ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x13c ]
add ecx 0x5c
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x18 ] eax
jne r-xdata
push 0x1
mov ecx [ ebp - 0x13c ]
call sub_47bb2c
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov ecx [ ebp - 0x13c ]
mov [ ecx + 0xd4 ] 0x1
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x13c ]
mov ecx [ eax + 0xc0 ]
call sub_429830
mov ecx [ ebp - 0x13c ]
mov [ ecx + 0xd8 ] eax
mov ecx [ ebp - 0x13c ]
call sub_478709
mov ecx [ ebp - 0x13c ]
mov [ ecx + 0xd4 ] 0x0
mov edx [ ebp - 0x13c ]
mov [ edx + 0xd8 ] 0x0
mov eax [ ebp - 0x13c ]
mov ecx [ eax + 0xc0 ]
call sub_4297f0
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x13c ]
call sub_478709
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x28 ]
jge r-xdata
mov ecx [ ebp - 0x24 ]
xor edx edx
cmp ecx [ ebp - 0x28 ]
sete dl
mov [ ebp - 0x20 ] edx
push 0x0
mov eax [ ebp - 0x13c ]
mov ecx [ eax + 0xcc ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x13c ]
mov ecx [ eax + 0xd0 ]
sub ecx 0x1
push ecx
push 0x0
mov edx [ ebp - 0x13c ]
mov eax [ edx + 0xc8 ]
push eax
mov ecx [ ebp - 0x13c ]
mov edx [ ecx + 0xc4 ]
push edx
lea ecx [ ebp - 0x124 ]
call sub_428d70
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x124 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x13c ]
mov ecx [ ecx + 0xc0 ]
call sub_429830
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x13c ]
mov eax [ ebp - 0x1c ]
cmp eax [ edx + 0xcc ]
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x124 ]
call sub_429310
jmp r-xdata
lea ecx [ ebp - 0x124 ]
call sub_42929e
mov [ ebp - 0x12c ] eax
lea ecx [ ebp - 0x124 ]
call sub_4292cb
mov [ ebp - 0x138 ] eax
mov eax [ ebp - 0x13c ]
mov ecx [ eax + 0xc0 ]
call sub_4297f0
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x130 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x130 ]
cmp edx [ ebp - 0x28 ]
jge r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x138 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
mov eax [ ebp - 0x130 ]
push eax
mov ecx [ ebp - 0x13c ]
mov ecx [ ecx + 0xc0 ]
call sub_4296ee
lea ecx [ ebp - 0x134 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x12c ]
push edx
push rw-data
lea eax [ ebp - 0x134 ]
push eax
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x134 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x130 ]
push ecx
mov ecx [ ebp - 0x13c ]
add ecx 0x5c
call sub_4100c0
mov edx [ ebp - 0x138 ]
push edx
mov eax [ ebp - 0x130 ]
push eax
mov ecx [ ebp - 0x13c ]
add ecx 0x5c
call sub_4098d0
mov ecx [ ebp - 0x13c ]
add ecx 0x5c
call sub_407e60
sub eax 0x1
push eax
mov ecx [ ebp - 0x13c ]
add ecx 0x5c
call sub_407ec0
mov ecx [ ebp - 0x13c ]
call sub_42a10b
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x134 ]
call sub_47c674
mov eax [ ebp - 0x130 ]
push eax
mov ecx [ ebp - 0x13c ]
mov ecx [ ecx + 0xc0 ]
call sub_429830
mov [ ebp - 0x128 ] eax
mov edx [ ebp - 0x128 ]
cmp edx [ ebp - 0x12c ]
jne r-xdata
mov eax [ ebp - 0x128 ]
cmp eax [ ebp - 0x12c ]
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x124 ]
call sub_429310
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
sub_42a990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42a9c0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42a9c0
push ebp
mov ebp esp
push 0xffffffff
push sub_498999
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_429946
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42aa3b
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x14 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x10
and eax 0xffff
mov [ ebp - 0xc ] ax
mov cx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] cx
mov edx [ ebp - 0x4 ]
and edx 0xffff
and edx 0xff00
sar edx 0x8
mov [ ebp - 0x10 ] dx
mov eax [ ebp - 0x4 ]
and eax 0xffff
and eax 0xff
mov [ ebp - 0x8 ] ax
mov ecx [ ebp - 0xc ]
and ecx 0xffff
cmp ecx 0x20
jl r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xc ]
and edx 0xffff
cmp edx 0x80
jl r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
and eax 0xffff
cmp eax 0x8
jl r-xdata
mov esi [ ebp - 0x8 ]
and esi 0xffff
mov ecx [ ebp - 0x10 ]
and ecx 0xffff
push ecx
mov ecx [ ebp - 0x14 ]
call sub_42aaf6
cmp esi eax
jl r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
sub_42aaf6
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x7
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
jmp [ ecx * 4 + jump_table_42ab6d ]
mov [ ebp - 0x4 ] 0x12
jmp r-xdata
mov [ ebp - 0x4 ] 0x12
jmp r-xdata
mov [ ebp - 0x4 ] 0xd
jmp r-xdata
mov [ ebp - 0x4 ] 0x10
jmp r-xdata
mov [ ebp - 0x4 ] 0xe
jmp r-xdata
mov [ ebp - 0x4 ] 0xd
jmp r-xdata
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
mov [ ebp - 0x4 ] 0xd
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_42ab90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42aa27
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_42abc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4989ba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x188
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_42ac39
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42ac39
push ebp
mov ebp esp
push 0xffffffff
push sub_4989fa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0xb7
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_410070
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_410070
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_4028f0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_4028f0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x184 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
mov eax [ ebp - 0x10 ]
mov [ eax + 0x17c ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x180 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_42acf8
push ebp
mov ebp esp
push 0xffffffff
push sub_498a3a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_48a0bf
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_48a0bf
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_489f66
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_489f66
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42ad85
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x43e
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xc8
push eax
push 0x43d
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0x104
push edx
push 0x43c
mov eax [ ebp + 0x8 ]
push eax
call sub_483f62
mov ecx [ ebp - 0x4 ]
add ecx 0x140
push ecx
push 0x43b
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x17c
push eax
push 0x43b
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f20
mov edx [ ebp - 0x4 ]
add edx 0x180
push edx
push 0x43c
mov eax [ ebp + 0x8 ]
push eax
call sub_483f20
mov esp ebp
pop ebp
retn 0x4
sub_42ae3c
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_4786a4
mov eax [ ebp - 0x8 ]
mov [ eax + 0x180 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x17c ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_42aed1
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x180 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_42b013
mov [ ebp - 0x4 ] 0xc
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
mov ecx [ ebp - 0x8 ]
add ecx 0xc8
call sub_42c8a0
mov ecx [ ebp - 0x8 ]
call sub_42b17a
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x17c ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_42b225
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_47b0ce
mov ecx [ ebp - 0x8 ]
call sub_42c720
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_42aed1
push ebp
mov ebp esp
push 0xffffffff
push sub_498a4d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x104
call sub_402ad0
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0xa
jge r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
push ecx
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x104
call sub_402aa0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x3
jge r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
push rw-data
lea ecx [ ebp - 0x14 ]
call sub_47c7b1
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x104
call sub_402aa0
push rw-data
lea ecx [ ebp - 0x14 ]
call sub_47c7b1
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x104
call sub_402aa0
push 0x0
mov ecx [ ebp - 0x18 ]
add ecx 0x104
call sub_4029a0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
add ecx 0x1
push ecx
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x104
call sub_402aa0
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_42b013
push ebp
mov ebp esp
push 0xffffffff
push sub_498a69
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407f50
mov eax [ ebp + 0x8 ]
imul eax eax 0x14
mov ecx [ ebp - 0x2c ]
mov ecx [ ecx + 0x184 ]
add ecx eax
call sub_41b1b0
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x28 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
imul edx edx 0x14
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x184 ]
add ecx edx
call sub_41b1d0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
push 0x0
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xffff
mov [ ebp - 0x18 ] cl
movsx edx [ ebp - 0x18 ]
push edx
push rw-data
lea eax [ ebp - 0x28 ]
push eax
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x2c ]
call sub_42c2cc
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_47ca40
push rw-data
lea ecx [ ebp - 0x28 ]
call sub_47c7b1
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_409900
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_4098d0
jmp r-xdata
sub_42b17a
push ebp
mov ebp esp
push 0xffffffff
push sub_498a7c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x140
call sub_402ad0
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
push 0x0
mov ecx [ ebp - 0x18 ]
add ecx 0x140
call sub_4029a0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
add ecx 0xfa0
push ecx
lea ecx [ ebp - 0x14 ]
call sub_47e84a
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x140
call sub_402aa0
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_42b225
push ebp
mov ebp esp
push 0xffffffff
push sub_498a98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x2c ] ecx
push 0x0
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_42c870
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_407f50
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407e60
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x28 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_409510
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x7
ja r-xdata
push 0x0
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_407ec0
push 0x1
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_42c870
push 0x1
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_405450
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_409527
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x30 ]
jmp [ ecx * 4 + jump_table_42b947 ]
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x12
jge r-xdata
cmp [ ebp - 0x1c ] 0x12
jge r-xdata
cmp [ ebp - 0x1c ] 0xd
jge r-xdata
cmp [ ebp - 0x1c ] 0x10
jge r-xdata
cmp [ ebp - 0x1c ] 0xe
jge r-xdata
cmp [ ebp - 0x1c ] 0xd
jge r-xdata
cmp [ ebp - 0x1c ] 0x8
jge r-xdata
cmp [ ebp - 0x1c ] 0xd
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
and eax 0xffff
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_40953b
and eax 0xffff
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40953b
and eax 0xffff
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
and eax 0xffff
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_40953b
and eax 0xffff
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40953b
and eax 0xffff
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40953b
and eax 0xffff
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_40953b
and eax 0xffff
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x24 ]
jge r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x24 ]
jge r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x24 ]
jge r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
and eax 0xffff
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
and eax 0xffff
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x24 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
and eax 0xffff
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
and eax 0xffff
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
and eax 0xffff
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x24 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
and eax 0xffff
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
and eax 0xffff
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
and eax 0xffff
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xff
add eax 0x13ec
push eax
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
and ecx 0xff
add ecx 0x1450
push ecx
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
and edx 0xff
add edx 0x14b4
push edx
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xff
add eax 0x1518
push eax
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
and ecx 0xff
add ecx 0x157c
push ecx
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
and edx 0xff
add edx 0x15e0
push edx
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xff
add eax 0x1644
push eax
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
and ecx 0xff
add ecx 0x16a8
push ecx
lea ecx [ ebp - 0x28 ]
call sub_47e84a
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
sub_42b967
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x180 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_42b013
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x17c ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_42b225
mov ecx [ ebp - 0x4 ]
call sub_42c720
mov esp ebp
pop ebp
retn
sub_42b9a8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x17c ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_42b225
mov esp ebp
pop ebp
retn
sub_42b9cf
push ebp
mov ebp esp
push 0xffffffff
push sub_498aab
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_48a044
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_407f20
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_4100c0
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_4098d0
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x20 ]
add ecx 0x104
call sub_402970
mov [ ebp - 0x18 ] eax
push 0x1
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x18 ]
imul eax eax 0x14
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + 0x184 ]
add ecx eax
call sub_47763d
push 0x1
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x184 ]
add ecx eax
call sub_4776fb
mov ecx [ ebp - 0x20 ]
call sub_42c7d0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
sub_42bb1c
push ebp
mov ebp esp
push 0xffffffff
push sub_498abe
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407e60
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub eax 0x1
cmp [ ebp - 0x18 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x20 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_48a044
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407f20
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_4100c0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_4098d0
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x24 ]
add ecx 0x104
call sub_402970
mov [ ebp - 0x1c ] eax
push 0x1
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
imul ecx ecx 0x14
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x184 ]
add ecx eax
call sub_47763d
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
mov eax [ ebp - 0x1c ]
imul eax eax 0x14
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x184 ]
add ecx eax
call sub_4776fb
mov ecx [ ebp - 0x24 ]
call sub_42c7d0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_47c674
sub_42bc7f
push ebp
mov ebp esp
push 0xffffffff
push sub_498ad1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_47b0ce
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x18 ]
call sub_47c6e2
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_4100c0
mov [ ebp - 0x10 ] eax
push 0x0
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_4098d0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x1c ]
add ecx 0x104
call sub_402970
mov [ ebp - 0x14 ] eax
push 0x1
push 0x0
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
imul edx edx 0x14
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x184 ]
add ecx edx
call sub_4776fb
mov ecx [ ebp - 0x1c ]
call sub_42c720
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42bd7c
push ebp
mov ebp esp
push 0xffffffff
push sub_498af9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xcc
mov [ ebp - 0xcc ] ecx
push 0x1
mov ecx [ ebp - 0xcc ]
call sub_47b0ce
mov [ ebp - 0x18 ] 0x20
push 0x0
push 0x1
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0xc8 ]
call sub_4013f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xc8 ]
call sub_47841e
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0xcc ]
add ecx 0x8c
call sub_407e90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc8 ]
call sub_401630
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0xcc ]
add ecx 0x8c
call sub_407ef0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0xcc ]
add ecx 0x8c
call sub_407f20
mov ecx [ ebp - 0xcc ]
add ecx 0x8c
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc8 ]
call sub_401630
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xcc ]
add ecx 0x8c
call sub_407e60
sub eax 0x1
mov [ ebp - 0xd0 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xd0 ] eax
jmp r-xdata
mov ecx [ ebp - 0xcc ]
add ecx 0x8c
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov [ ebp - 0xd4 ] 0x0
jmp r-xdata
cmp [ ebp - 0xd0 ] 0x0
jge r-xdata
mov ecx [ ebp - 0xcc ]
add ecx 0x8c
call sub_407e60
sub eax 0x1
mov [ ebp - 0xd8 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xd8 ] ecx
jmp r-xdata
mov eax [ ebp - 0xd4 ]
push eax
mov ecx [ ebp - 0xcc ]
add ecx 0x8c
call sub_407ec0
mov ecx [ ebp - 0xcc ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xd8 ]
mov [ ebp - 0xd4 ] edx
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xcc ]
call sub_42c2cc
lea ecx [ ebp - 0x20 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
movsx ecx [ ebp - 0x18 ]
push ecx
push rw-data
lea edx [ ebp - 0x20 ]
push edx
call sub_475837
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_47ca40
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0xcc ]
add ecx 0xc8
call sub_4100c0
mov [ ebp - 0x14 ] eax
movsx edx [ ebp - 0x18 ]
shl edx 0x10
mov eax [ ebp - 0x10 ]
or eax edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0xcc ]
add ecx 0xc8
call sub_4098d0
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0xcc ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0xcc ]
add ecx 0x104
call sub_402970
mov [ ebp - 0x1c ] eax
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x1c ]
imul eax eax 0x14
mov ecx [ ebp - 0xcc ]
mov ecx [ ecx + 0x184 ]
add ecx eax
call sub_4776fb
mov ecx [ ebp - 0xcc ]
call sub_42c720
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc8 ]
call sub_401630
sub_42c056
push ebp
mov ebp esp
push 0xffffffff
push sub_498b15
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
mov [ ebp - 0x40 ] ecx
push 0x1
mov ecx [ ebp - 0x40 ]
call sub_47b0ce
mov ecx [ ebp - 0x40 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x40 ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x40 ]
add ecx 0xc8
call sub_407f20
mov ecx [ ebp - 0x40 ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xffff
mov [ ebp - 0x24 ] cl
mov dx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] dx
mov eax [ ebp - 0x20 ]
and eax 0xffff
and eax 0xff00
sar eax 0x8
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x20 ]
and ecx 0xffff
and ecx 0xff
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x17c ]
cmp eax [ ebp - 0x28 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x40 ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_409510
mov [ ebp - 0x4 ] 0x0
mov cx [ ebp - 0x20 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_40956a
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x40 ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
cmp [ ebp - 0x44 ] 0x0
jge r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x30 ]
jg r-xdata
mov ecx [ ebp - 0x40 ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x4c ] ecx
jmp r-xdata
mov eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x40 ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x40 ]
add ecx 0x104
call sub_402970
mov [ ebp - 0x18 ] eax
push 0x1
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
imul edx edx 0x14
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x184 ]
add ecx edx
call sub_47763d
mov ecx [ ebp - 0x40 ]
call sub_42c720
lea ecx [ ebp - 0x3c ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x3c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x40 ]
call sub_42c2cc
lea ecx [ ebp - 0x3c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x40 ]
add ecx 0x8c
call sub_4100c0
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xffff
push edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x40 ]
add ecx 0x8c
call sub_4098d0
mov ecx [ ebp - 0x34 ]
push ecx
mov ecx [ ebp - 0x40 ]
add ecx 0x8c
call sub_407ec0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_409527
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x40 ]
add ecx 0x8c
call sub_407ef0
and eax 0xffff
push eax
lea ecx [ ebp - 0x2c ]
call sub_40956a
cmp eax [ ebp - 0x30 ]
jle r-xdata
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x48 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x38 ]
add edx 0x1
mov [ ebp - 0x38 ] edx
sub_42c2cc
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x10 ] ecx
mov ax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
mov ecx [ ebp - 0x4 ]
and ecx 0xffff
and ecx 0xff00
mov [ ebp - 0xc ] cx
mov edx [ ebp - 0x4 ]
and edx 0xffff
and edx 0xff
mov [ ebp - 0x8 ] dx
mov eax [ ebp - 0xc ]
and eax 0xffff
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x400
jg r-xdata
cmp [ ebp - 0x14 ] 0x500
je r-xdata
cmp [ ebp - 0x14 ] 0x400
je r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
add eax 0x15e0
push eax
mov ecx [ ebp + 0xc ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x14 ] 0x600
je r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
add edx 0x157c
push edx
mov ecx [ ebp + 0xc ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x14 ] 0x200
jg r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x8 ]
and ecx 0xffff
add ecx 0x1644
push ecx
mov ecx [ ebp + 0xc ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x14 ] 0x700
je r-xdata
cmp [ ebp - 0x14 ] 0x300
je r-xdata
cmp [ ebp - 0x14 ] 0x200
je r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
add edx 0x16a8
push edx
mov ecx [ ebp + 0xc ]
call sub_47e84a
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xffff
add ecx 0x1518
push ecx
mov ecx [ ebp + 0xc ]
call sub_47e84a
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
add eax 0x14b4
push eax
mov ecx [ ebp + 0xc ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xffff
add ecx 0x13ec
push ecx
mov ecx [ ebp + 0xc ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x14 ] 0x100
je r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
add edx 0x1450
push edx
mov ecx [ ebp + 0xc ]
call sub_47e84a
jmp r-xdata
jmp r-xdata
sub_42c462
push ebp
mov ebp esp
push 0xffffffff
push sub_498b43
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc4
mov [ ebp - 0xd0 ] ecx
push 0x1
mov ecx [ ebp - 0xd0 ]
call sub_47b0ce
mov ecx [ ebp - 0xd0 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0xd0 ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xffff
mov [ ebp - 0x18 ] cl
mov dx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] dx
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_4013f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xc0 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc0 ]
call sub_401630
lea ecx [ ebp - 0xcc ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xcc ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0xd0 ]
call sub_42c2cc
lea ecx [ ebp - 0xc8 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
movsx eax [ ebp - 0x18 ]
push eax
push rw-data
lea ecx [ ebp - 0xc8 ]
push ecx
call sub_475837
add esp 0xc
lea edx [ ebp - 0xcc ]
push edx
lea ecx [ ebp - 0xc8 ]
call sub_47ca40
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0xd0 ]
add ecx 0xc8
call sub_407f20
lea ecx [ ebp - 0xc8 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0xd0 ]
add ecx 0xc8
call sub_4100c0
movsx edx [ ebp - 0x18 ]
shl edx 0x10
mov eax [ ebp - 0x10 ]
and eax 0xffff
or edx eax
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0xd0 ]
add ecx 0xc8
call sub_4098d0
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0xd0 ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0xd0 ]
add ecx 0x104
call sub_402970
mov [ ebp - 0xc4 ] eax
push 0x1
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0xc4 ]
imul edx edx 0x14
mov eax [ ebp - 0xd0 ]
mov ecx [ eax + 0x184 ]
add ecx edx
call sub_47763d
push 0x1
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0xc4 ]
imul eax eax 0x14
mov ecx [ ebp - 0xd0 ]
mov ecx [ ecx + 0x184 ]
add ecx eax
call sub_4776fb
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xc8 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xcc ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42c696
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
call sub_42aed1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x180 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_42b013
mov ecx [ ebp - 0x4 ]
call sub_42b17a
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x17c ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_42b225
sub_42c6f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42acf8
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42c720
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0xc8
call sub_407e60
xor ecx ecx
cmp eax 0x1e
setl cl
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
push 0x433
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x8 ]
add ecx 0x8c
call sub_407e60
test eax eax
je r-xdata
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x42f
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x8 ]
add ecx 0xc8
call sub_407e60
neg eax
sbb eax eax
neg eax
push eax
push 0x430
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x8 ]
call sub_42c7d0
mov esp ebp
pop ebp
retn
sub_42c7d0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407e60
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x431
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x432
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
xor eax eax
cmp [ ebp - 0x10 ] 0x0
setg al
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
xor edx edx
cmp [ ebp - 0x10 ] ecx
setl dl
mov [ ebp - 0x4 ] edx
sub_42c870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0xb
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42c8a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x192
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_42c91b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
and ecx 0x800000
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_479340
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
or ah 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2c ] eax
sub_42c953
push ebp
mov ebp esp
push 0xffffffff
push sub_498b59
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x18 ]
call sub_4052e0
mov [ ebp - 0x4 ] 0x0
push 0xb1
lea ecx [ ebp - 0x18 ]
call sub_4053d0
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4053a0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_42ca09
push 0x0
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
push 0x8
mov ecx [ ebp - 0x10 ]
call sub_479810
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_42ca09
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_407e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_407ef0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
push 0x1
push 0x80ea
mov ecx [ ebp + 0x8 ]
call sub_42ce00
push 0x0
push 0x80ea
mov ecx [ ebp + 0x8 ]
call sub_42ce00
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov esp ebp
pop ebp
retn 0x4
sub_42ca98
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x80e8
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_42cabb
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_405500
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0xc ]
call sub_48a087
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0xc ]
call sub_42cb03
sub_42cb03
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_40a1e0
mov [ ebp - 0xc ] eax
push 0xfffffff4
mov eax [ ebp - 0xc ]
push eax
call [ GetWindowLongA@IAT ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
push 0x4e
mov ecx [ ebp - 0x10 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_42cb4a
push ebp
mov ebp esp
sub esp 0x20
push esi
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_409900
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_4098d0
lea ecx [ ebp - 0x1c ]
call sub_428cd0
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_405410
lea ecx [ ebp - 0x1c ]
call sub_404fe0
mov esi eax
push 0x0
mov ecx [ ebp - 0x20 ]
call sub_42ceb0
mov ecx eax
mov eax esi
cdq
idiv ecx
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x20 ]
call sub_407e60
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebp - 0xc ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_42ce50
sub_42cbd6
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_407e60
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
call sub_407f50
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_407ef0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_42cc39
push ebp
mov ebp esp
push 0xffffffff
push sub_498b6c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
call sub_407e60
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x20 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
push 0x42
call [ GlobalAlloc@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x28 ]
call sub_42ce80
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax + 0x2 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
push edx
call [ GlobalLock@IAT ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x20 ]
jge r-xdata
mov edx [ ebp - 0x14 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x18 ]
push eax
call [ GlobalUnlock@IAT ]
mov ecx [ ebp - 0x28 ]
call sub_42ce30
test eax eax
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_40bd40
mov ecx [ ebp - 0x14 ]
add ecx eax
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov [ edx ] 0xd
mov eax [ ebp - 0x14 ]
mov [ eax + 0x1 ] 0xa
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ EmptyClipboard@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
push ecx
push 0x1
call [ SetClipboardData@IAT ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
call [ CloseClipboard@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
push 0x0
call [ MessageBeep@IAT ]
sub_42cdd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42c8ef
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42ce00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ EnableMenuItem@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_42ce50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x197
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42ce80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x18a
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42ceb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x1a1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42cee0
push ebp
mov ebp esp
push 0xffffffff
push sub_498b89
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x18 ]
push eax
push 0xc9
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_430630
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x164 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x168 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x16c ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx + 0x170 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x5c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
sub_42cf7e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3f3
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov esp ebp
pop ebp
retn 0x4
sub_42cfbc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_42d004
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_430cfc
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
push 0x3f3
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
xor eax eax
mov esp ebp
pop ebp
retn
sub_42d004
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x170 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x16c ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x168 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x164 ]
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x60
call sub_43081a
mov edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0x60
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x60 ]
call [ edx + 0xd0 ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_428cd0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x60
call sub_4061a0
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
push ecx
push 0x3f3
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov ecx eax
call sub_4061a0
mov edx [ ebp - 0x4 ]
add edx 0x8
sub edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_406140
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_4803ee
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_406130
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x60
call sub_406160
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42d0d2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_430b1c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x170
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x16c
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x60
call sub_430cd3
mov ecx [ ebp - 0x4 ]
call sub_478709
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42d11e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x16c ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x170 ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
sub_42d150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42d180
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42d180
push ebp
mov ebp esp
push 0xffffffff
push sub_498ba9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_4060a0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42d1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_498bc9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_48dc87
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x88 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8c ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x90 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x94 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x18 ]
mov [ edx + 0x98 ] eax
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_40f010
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x20
sub_42d286
push ebp
mov ebp esp
push 0xffffffff
push sub_498bdc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_48dce3
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x88 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8c ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x90 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x94 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x18 ]
mov [ edx + 0x98 ] eax
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_40f010
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x20
sub_42d32c
push ebp
mov ebp esp
push 0xffffffff
push sub_498bef
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_40f1b0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48dde3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42d393
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40b5f0
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x9c
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x9c ]
call [ eax + 0xd0 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_4061a0
push 0x16
lea ecx [ ebp - 0x10 ]
call sub_404fe0
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x8c ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_405cf0
mov ecx [ ebp - 0x14 ]
add eax [ ecx + 0x88 ]
push eax
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47bd57
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47b186
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_42d432
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
call sub_48e2e5
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
call sub_42d920
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4061a0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4803ee
push 0x15
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x8c ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x88 ]
push edx
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47bd57
mov ecx [ ebp - 0x1c ]
call sub_48df20
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4061a0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4803ee
push 0x15
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x8c ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x88 ]
push edx
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47bd57
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4061a0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4803ee
push 0x15
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x8c ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x88 ]
push edx
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47bd57
push 0x2
mov ecx [ ebp - 0x1c ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4061a0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4803ee
push 0x15
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x8c ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x88 ]
push edx
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47bd57
push 0x3021
mov ecx [ ebp - 0x1c ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4061a0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4803ee
push 0x15
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x8c ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x88 ]
push edx
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47bd57
push 0x9
mov ecx [ ebp - 0x1c ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4061a0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4803ee
push 0x15
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x8c ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x88 ]
push edx
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_47bd57
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x9c
call sub_4061a0
mov ecx [ ebp - 0xc ]
neg ecx
add ecx 0x4
push ecx
mov edx [ ebp - 0x10 ]
neg edx
add edx 0x4
push edx
lea ecx [ ebp - 0x10 ]
call sub_406140
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x9c
call sub_406160
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40d400
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x134
call sub_416e60
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40d400
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0xf8
call sub_416e60
mov ecx [ ebp - 0x1c ]
xor edx edx
cmp [ ecx + 0x90 ] 0x0
sete dl
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x134
call sub_42d8f0
mov eax [ ebp - 0x1c ]
xor ecx ecx
cmp [ eax + 0x90 ] 0x0
sete cl
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0xf8
call sub_42d8f0
mov eax [ ebp - 0x18 ]
mov esp ebp
pop ebp
retn
sub_42d6dc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x9c
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_479428
mov esp ebp
pop ebp
retn
sub_42d6ff
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x1
mov ecx [ ebp - 0xc ]
add ecx 0x9c
call sub_47b0ce
mov ecx [ ebp - 0xc ]
add ecx 0x170
call sub_4016b0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x170
call sub_4027c0
push eax
mov ecx [ ebp - 0xc ]
call sub_42d7e6
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x40f
call sub_4840fb
mov ecx [ ebp - 0xc ]
add ecx 0x134
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0xc ]
add ecx 0x134
call sub_401740
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_48e154
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
call sub_48df20
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0xdc ]
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x410
call sub_4840fb
mov ecx [ ebp - 0xc ]
add ecx 0x134
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0xc ]
add ecx 0x134
call sub_401740
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x1
mov ecx [ ebp - 0xc ]
call sub_48e25f
jmp r-xdata
sub_42d7e6
push ebp
mov ebp esp
push 0xffffffff
push sub_498c02
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_47c6e2
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47cb4a
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x98 ]
call sub_41b1b0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
xor edx edx
cmp ecx [ ebp - 0x1c ]
sete dl
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x94 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x98 ]
call sub_402780
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
sub_42d8c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42d32c
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42d8f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0xcf
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42d920
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x474
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
push eax
call sub_478d3a
mov esp ebp
pop ebp
retn
sub_42d950
push ebp
mov ebp esp
push 0xffffffff
push sub_498c4c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
push 0xc7
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_4093d0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
call sub_401690
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x10 ]
mov [ edx + 0x98 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x9c ] 0x0
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c7b1
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
call sub_47c761
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_47c674
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_42da25
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x469
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x98
push eax
push 0x3f8
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483e10
mov edx [ ebp - 0x4 ]
add edx 0x9c
push edx
push 0x3f3
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0xa0
push ecx
push 0x3ef
mov edx [ ebp + 0x8 ]
push edx
call sub_483d6c
mov esp ebp
pop ebp
retn 0x4
sub_42daaa
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
push 0x7f03
call sub_4036e0
mov ecx eax
call sub_42de70
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_42de40
mov ecx [ ebp - 0x4 ]
call sub_42db06
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_42db06
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
xor ecx ecx
cmp [ eax + 0x98 ] 0x2
sete cl
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
push 0x403
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp - 0x4 ]
push eax
push 0x3ef
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x3e8
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x4 ]
push edx
push 0x3f3
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_42db85
push ebp
mov ebp esp
push 0xffffffff
push sub_498c5f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_47b0ce
call sub_4036e0
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
add ecx 0xa0
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
add eax 0xa0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c761
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0xa0
call sub_47c761
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_47b0ce
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_43272c
test eax eax
je r-xdata
sub_42dc3d
push ebp
mov ebp esp
push 0xffffffff
push sub_498c75
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14c
mov [ ebp - 0x158 ] ecx
push 0x1
mov ecx [ ebp - 0x158 ]
call sub_47b0ce
mov eax [ ebp - 0x158 ]
cmp [ eax + 0x98 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x158 ]
call sub_478709
mov ecx [ ebp - 0x158 ]
add ecx 0xa0
call sub_4016b0
test eax eax
je r-xdata
lea ecx [ ebp - 0x150 ]
push ecx
mov ecx [ ebp - 0x158 ]
add ecx 0xa0
call sub_4027c0
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
push 0xffffffff
push 0x0
push 0x403
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x158 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
jmp r-xdata
lea ecx [ ebp - 0x154 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x154 ]
push edx
mov eax [ ebp - 0x158 ]
add eax 0xa0
push eax
call sub_411d0a
add esp 0x8
mov ecx [ ebp - 0x158 ]
add ecx 0xa4
push ecx
lea edx [ ebp - 0x154 ]
push edx
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x154 ]
call sub_47c674
push 0xffffffff
push 0x0
push 0x416
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x158 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x154 ]
call sub_47c674
jmp r-xdata
sub_42dda0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42ddd0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42ddd0
push ebp
mov ebp esp
push 0xffffffff
push sub_498ca4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
call sub_47c674
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489ea7
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42de40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x170
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42de90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xa3
mov ecx [ ebp - 0x4 ]
call sub_478369
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x5c ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_42def6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x60 ] 0x1
mov ecx [ ebp + 0xc ]
push ecx
push 0xa3
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x8
sub_42df1e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x1
push 0x40e
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x5c ]
call sub_405d50
mov esp ebp
pop ebp
retn
sub_42df3d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x40e
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x5c ]
call sub_405d50
mov esp ebp
pop ebp
retn
sub_42df5c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
push 0x4
push 0x40f
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x5c ]
call sub_405d50
mov esp ebp
pop ebp
retn
sub_42df7b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_478722
mov esp ebp
pop ebp
retn
push 0x0
push 0x4
push 0x40f
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x5c ]
call sub_405d50
sub_42dfb0
push ebp
mov ebp esp
push 0xffffffff
push sub_498cd1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x14 ]
push eax
push 0xa2
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx + 0x70 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x74 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x78 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x7c ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x80 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x148 ] 0x1
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
mov eax [ ebp - 0x10 ]
mov [ eax + 0x5c ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x60 ] 0xffffffff
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_47c7b1
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_47c7b1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x6c ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
sub_42e0a1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3f8
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov eax [ ebp - 0x4 ]
add eax 0x60
push eax
push 0x3fa
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483e10
mov edx [ ebp - 0x4 ]
add edx 0x64
push edx
push 0x402
mov eax [ ebp + 0x8 ]
push eax
call sub_483ea1
mov ecx [ ebp - 0x4 ]
add ecx 0x68
push ecx
push 0x403
mov edx [ ebp + 0x8 ]
push edx
call sub_483ea1
mov eax [ ebp - 0x4 ]
add eax 0x6c
push eax
push 0x414
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483e10
mov esp ebp
pop ebp
retn 0x4
sub_42e133
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x7c ] 0x1
mov ecx [ ebp + 0xc ]
push ecx
push 0xa2
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x8
sub_42e15b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x80 ] 0x0
jne r-xdata
push rw-data
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x6c ] 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_42e1e4
mov eax 0x1
mov esp ebp
pop ebp
retn
push 0x0
push 0x416
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
sub_42e1ff
push ebp
mov ebp esp
sub esp 0x68
mov [ ebp - 0x68 ] ecx
push 0x402
mov ecx [ ebp - 0x68 ]
call sub_47bb2c
mov [ ebp - 0x60 ] eax
push 0x50
mov ecx [ ebp - 0x60 ]
call sub_4029d0
mov ecx [ ebp - 0x60 ]
call sub_402ad0
mov eax [ ebp - 0x68 ]
mov ecx [ eax + 0x74 ]
call sub_41b1b0
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x5c ]
cmp edx [ ebp - 0x64 ]
jge r-xdata
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0x68 ]
mov ecx [ ecx + 0x74 ]
call sub_402780
mov [ ebp - 0x58 ] eax
mov edx [ ebp - 0x58 ]
cmp [ edx + 0x54 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x68 ]
call sub_42e4ef
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_4029a0
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp - 0x68 ]
call sub_42e3d5
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x50 ]
mov [ ebp + edx - 0x54 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x5c ]
add ecx 0x1
mov [ ebp - 0x5c ] ecx
lea ecx [ ebp - 0x54 ]
push ecx
mov ecx [ ebp - 0x60 ]
call sub_402aa0
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x5c ]
push ecx
mov ecx [ ebp - 0x60 ]
call sub_402a70
jmp r-xdata
sub_42e2ea
push ebp
mov ebp esp
sub esp 0x68
mov [ ebp - 0x68 ] ecx
push 0x403
mov ecx [ ebp - 0x68 ]
call sub_47bb2c
mov [ ebp - 0x60 ] eax
push 0x50
mov ecx [ ebp - 0x60 ]
call sub_4029d0
mov ecx [ ebp - 0x60 ]
call sub_402ad0
mov eax [ ebp - 0x68 ]
mov ecx [ eax + 0x78 ]
call sub_41b1b0
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x5c ]
cmp edx [ ebp - 0x64 ]
jge r-xdata
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0x68 ]
mov ecx [ ecx + 0x78 ]
call sub_402780
mov [ ebp - 0x58 ] eax
mov edx [ ebp - 0x58 ]
cmp [ edx + 0x54 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x68 ]
call sub_42e594
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_4029a0
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp - 0x68 ]
call sub_42e3d5
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x50 ]
mov [ ebp + edx - 0x54 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x5c ]
add ecx 0x1
mov [ ebp - 0x5c ] ecx
lea ecx [ ebp - 0x54 ]
push ecx
mov ecx [ ebp - 0x60 ]
call sub_402aa0
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x5c ]
push ecx
mov ecx [ ebp - 0x60 ]
call sub_402a70
jmp r-xdata
sub_42e3d5
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xc ]
mov al [ edx ]
mov [ ebp - 0x4 ] al
mov ecx [ ebp - 0x4 ]
and ecx 0xff
sar ecx 0x4
mov [ ebp - 0x14 ] cl
mov edx [ ebp - 0x14 ]
and edx 0xff
cmp edx 0x9
jg r-xdata
mov cl [ ebp - 0x14 ]
add cl 0x37
mov [ ebp - 0x14 ] cl
mov al [ ebp - 0x14 ]
add al 0x30
mov [ ebp - 0x14 ] al
jmp r-xdata
mov dl [ ebp - 0x10 ]
add dl 0x37
mov [ ebp - 0x10 ] dl
mov cl [ ebp - 0x10 ]
add cl 0x30
mov [ ebp - 0x10 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0x14 ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
and edx 0xff
and edx 0xf
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x9
jg r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x20
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
sub_42e4ef
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x402
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402a40
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x5c ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x5c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402970
mov [ ebp + 0x8 ] eax
push 0x0
push 0x3f8
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x1
push 0x3f9
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x1
push 0x3f8
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x0
push 0x3f9
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_42e594
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x403
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402a40
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x60 ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x60 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402970
mov [ ebp + 0x8 ] eax
push 0x0
push 0x3fa
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x1
push 0x3fb
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x1
push 0x3fa
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
push 0x0
push 0x3fb
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_4028c0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_42e650
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x144 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x140 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_42e6bd
mov esp ebp
pop ebp
retn
sub_42e681
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_42ed90
mov [ ebp - 0x4 ] ax
mov eax [ ebp - 0x4 ]
and eax 0xffff
xor ecx ecx
cmp eax 0x411
setne cl
mov [ ebp - 0x8 ] ecx
push 0x1
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_42e6bd
mov esp ebp
pop ebp
retn
sub_42e6bd
push ebp
mov ebp esp
push 0xffffffff
push sub_498ce4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov [ ebp - 0x48 ] ecx
push 0x1
mov ecx [ ebp - 0x48 ]
call sub_47b0ce
mov ecx [ ebp - 0x48 ]
add ecx 0x64
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
push 0xffffffff
push 0x0
push 0x3f6
call sub_4840fb
push 0x402
mov ecx [ ebp - 0x48 ]
call sub_47bb2c
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
call sub_47be0f
jmp r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0x64
call sub_4027c0
push eax
mov edx [ ebp - 0x48 ]
add edx 0x8c
push edx
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x48 ]
add ecx 0x64
call sub_4027a0
cmp eax 0x50
jge r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0xdc
push ecx
mov edx [ ebp - 0x48 ]
add edx 0x64
push edx
mov eax [ ebp - 0x48 ]
add eax 0x8c
push eax
call sub_411659
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4c ] 0x50
mov ecx [ ebp - 0x48 ]
add ecx 0x64
call sub_4027a0
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0xe0 ] 0x0
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3f7
call sub_4840fb
push 0x402
mov ecx [ ebp - 0x48 ]
call sub_47bb2c
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
call sub_47be0f
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x24 ]
call sub_402a00
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x4c ]
mov [ eax + 0xdc ] ecx
mov edx [ ebp - 0x48 ]
mov [ edx + 0xe0 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x402
mov ecx [ ebp - 0x48 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_402940
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_48a161
mov ecx [ ebp - 0x48 ]
add ecx 0x64
push ecx
lea edx [ ebp - 0x1c ]
push edx
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0xa
jne r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_402a40
mov edx [ ebp - 0x48 ]
cmp eax [ edx + 0x5c ]
jne r-xdata
jmp r-xdata
jmp r-xdata
push 0x58
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x2c ] edx
push 0x9
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x74 ]
call sub_402780
mov [ ebp - 0x2c ] eax
push 0x1
push 0x9
mov ecx [ ebp - 0x48 ]
mov ecx [ ecx + 0x74 ]
call sub_47763d
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
push 0xffffffff
push 0x1
push 0x3f8
call sub_4840fb
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0xdc ]
push ecx
mov edx [ ebp - 0x48 ]
add edx 0x8c
push edx
mov eax [ ebp - 0x2c ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0xdc ]
mov [ ecx + 0x50 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x5c ]
mov [ ecx + 0x54 ] eax
push 0x1
mov ecx [ ebp - 0x2c ]
push ecx
push 0x0
mov edx [ ebp - 0x48 ]
mov ecx [ edx + 0x74 ]
call sub_4776fb
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x48 ]
mov ecx [ ecx + 0x74 ]
call sub_402780
mov [ ebp - 0x28 ] eax
push 0x1
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x74 ]
call sub_47763d
push 0x1
mov ecx [ ebp - 0x28 ]
push ecx
push 0x0
mov edx [ ebp - 0x48 ]
mov ecx [ edx + 0x74 ]
call sub_4776fb
mov ecx [ ebp - 0x48 ]
add ecx 0x68
call sub_4027c0
push eax
mov edx [ ebp - 0x48 ]
add edx 0xe4
push edx
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x48 ]
add ecx 0x68
call sub_4027a0
cmp eax 0x50
jge r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0x134
push ecx
mov edx [ ebp - 0x48 ]
add edx 0x68
push edx
mov eax [ ebp - 0x48 ]
add eax 0xe4
push eax
call sub_411659
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x138 ] 0x0
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x134 ] 0x0
mov edx [ ebp - 0x48 ]
mov [ edx + 0xe4 ] 0x0
push 0x403
mov ecx [ ebp - 0x48 ]
call sub_47bb2c
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
call sub_47be0f
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0x68
call sub_4016b0
test eax eax
je r-xdata
mov [ ebp - 0x50 ] 0x50
mov ecx [ ebp - 0x48 ]
add ecx 0x68
call sub_4027a0
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x138 ] 0x0
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3f7
call sub_4840fb
push 0x403
mov ecx [ ebp - 0x48 ]
call sub_47bb2c
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
call sub_47be0f
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x34 ]
call sub_402a00
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x50 ]
mov [ eax + 0x134 ] ecx
mov edx [ ebp - 0x48 ]
mov [ edx + 0x138 ] 0x1
push 0x403
mov ecx [ ebp - 0x48 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_402940
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_48a161
mov ecx [ ebp - 0x48 ]
add ecx 0x68
push ecx
lea edx [ ebp - 0x1c ]
push edx
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0x68
call sub_4016b0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_402a40
mov edx [ ebp - 0x48 ]
cmp eax [ edx + 0x60 ]
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x84 ] 0x3
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x88 ] 0x0
mov edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x140 ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x6c ]
mov [ ecx + 0x13c ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x144 ] edx
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0xa
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x48 ]
call sub_478709
push 0x3
mov ecx [ ebp - 0x48 ]
add ecx 0x84
push ecx
push 0x40d
mov edx [ ebp - 0x48 ]
mov ecx [ edx + 0x70 ]
call sub_402890
jmp r-xdata
push 0x58
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x44 ] eax
mov edx [ ebp - 0x44 ]
mov [ ebp - 0x3c ] edx
push 0x9
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x78 ]
call sub_402780
mov [ ebp - 0x3c ] eax
push 0x1
push 0x9
mov ecx [ ebp - 0x48 ]
mov ecx [ ecx + 0x78 ]
call sub_47763d
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x48 ]
mov ecx [ ecx + 0x78 ]
call sub_402780
mov [ ebp - 0x38 ] eax
push 0x1
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x78 ]
call sub_47763d
push 0x1
mov ecx [ ebp - 0x38 ]
push ecx
push 0x0
mov edx [ ebp - 0x48 ]
mov ecx [ edx + 0x78 ]
call sub_4776fb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x134 ]
push ecx
mov edx [ ebp - 0x48 ]
add edx 0xe4
push edx
mov eax [ ebp - 0x3c ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x134 ]
mov [ ecx + 0x50 ] eax
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x60 ]
mov [ ecx + 0x54 ] eax
push 0x1
mov ecx [ ebp - 0x3c ]
push ecx
push 0x0
mov edx [ ebp - 0x48 ]
mov ecx [ edx + 0x78 ]
call sub_4776fb
sub_42ec81
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_478722
mov esp ebp
pop ebp
retn
push 0x0
push 0x3
push 0x40f
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x70 ]
call sub_405d50
sub_42ecb1
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
add esi 0x84
mov ecx 0x31
mov edi [ ebp + 0x8 ]
[ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42ecd5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_42ed00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42ed30
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42ed30
push ebp
mov ebp esp
push 0xffffffff
push sub_498d05
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42ed90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_42edc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xa4
mov ecx [ ebp - 0x4 ]
call sub_478369
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x5c ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_42ee27
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x60 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x64 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x5c ] 0x1
mov edx [ ebp + 0x10 ]
push edx
push 0xa4
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0xc
sub_42ee61
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x60 ]
mov [ edx ] eax
push rw-data
push 0x413
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
push 0x0
push 0x0
push 0x40c
mov ecx [ ebp - 0x4 ]
call sub_405d50
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_42eeb3
push ebp
mov ebp esp
push 0xffffffff
push sub_498d19
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x68 ] 0x1
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x413
mov ecx [ ebp - 0x18 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x68 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x14 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_42ef5c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x64 ]
cmp [ ecx ] 0x0
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x8
push 0x0
call [ PostQuitMessage@IAT ]
sub_42efa0
push ebp
mov ebp esp
push 0xffffffff
push sub_498d3a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0xe0
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_42f017
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42f017
push ebp
mov ebp esp
push 0xffffffff
push sub_498d4d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_4900cf
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_42edc0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xd4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xd8 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0xdc ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42f097
push ebp
mov ebp esp
push 0xffffffff
push sub_498d60
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_402b00
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_496813
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42f0eb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xdc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xd8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x68
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x68 ]
call [ eax + 0xd0 ]
push 0x5
mov ecx [ ebp - 0x4 ]
add ecx 0x68
call sub_47bda6
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_42f130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x68
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
call [ edx + 0x58 ]
mov ecx [ ebp - 0x4 ]
call sub_47d0c1
mov esp ebp
pop ebp
retn
sub_42f162
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xd4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0xd8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0xdc ] edx
mov esp ebp
pop ebp
retn 0xc
sub_42f1a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42f097
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42f1d0
push ebp
mov ebp esp
push 0xffffffff
push sub_498d85
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_478919
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_42f690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x78
call sub_428cd0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x88 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42f243
push ebp
mov ebp esp
push 0xffffffff
push sub_498d98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_476643
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_4793ac
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_42f2a7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
or eax 0x40000000
mov [ ebp + 0x8 ] eax
push 0x0
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_479360
mov esp ebp
pop ebp
retn 0x10
sub_42f2dd
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x78
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405410
push 0x309
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x78
push eax
push 0x50000000
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_476612
xor eax eax
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_42f331
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_405500
mov eax [ ebp - 0x14 ]
add eax 0x78
push eax
mov ecx [ ebp - 0x14 ]
call sub_405410
mov ecx [ ebp - 0x14 ]
add ecx 0x78
mov edx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xc ] eax
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ecx + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
sub edx [ ecx + 0x88 ]
mov [ ebp - 0x10 ] edx
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x3c
call sub_406160
mov esp ebp
pop ebp
retn 0xc
sub_42f3b3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_416e60
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_416e60
mov esp ebp
pop ebp
retn 0x8
sub_42f3ff
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_42f710
mov esp ebp
pop ebp
retn 0x8
sub_42f451
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_42f770
mov esp ebp
pop ebp
retn 0x8
sub_42f471
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_42f7a0
mov esp ebp
pop ebp
retn 0x8
sub_42f491
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x3c ]
call [ eax + 0xb8 ]
mov esp ebp
pop ebp
retn 0x4
sub_42f4b4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
push 0xfffffff4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
push 0x4e
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0x8
sub_42f503
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
push 0xfffffff4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
push 0x4e
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0x8
sub_42f552
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
push 0xfffffff4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
push 0x4e
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0x8
sub_42f5a1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
push 0xfffffff4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
push 0x4e
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn 0x8
sub_42f5f0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x88 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x78
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0xc ] ecx
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ edx + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
sub edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x88 ] ecx
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x3c
call sub_406160
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_42f660
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42f243
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42f6b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_476643
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_42f6e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x1200
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn
sub_42f710
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1201
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_42f740
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x1202
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42f770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1203
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_42f7a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1204
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_42f7d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x1205
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42f800
push ebp
mov ebp esp
push 0xffffffff
push sub_498dd4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x14 ]
push eax
push 0xa1
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_4028f0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx + 0xa4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xa8 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx + 0xac ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xb0 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0xb4 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_47c7b1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x9c ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0xa0 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
sub_42f8e2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x402
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x98
push eax
push 0x402
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483ea1
mov edx [ ebp - 0x4 ]
add edx 0x9c
push edx
push 0x3f8
mov eax [ ebp + 0x8 ]
push eax
call sub_483e10
mov ecx [ ebp - 0x4 ]
add ecx 0xa0
push ecx
push 0x3fa
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov esp ebp
pop ebp
retn 0x4
sub_42f967
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xac ] 0x1
mov ecx [ ebp + 0xc ]
push ecx
push 0xa1
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x8
sub_42f992
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xb0 ] 0x0
jne r-xdata
push rw-data
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xb4 ] 0x0
je r-xdata
push 0x0
push 0x414
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
push 0x411
mov ecx [ ebp - 0x4 ]
call sub_430150
push 0x412
mov ecx [ ebp - 0x4 ]
call sub_430150
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xa0 ] 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_42fa42
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_42fa42
push ebp
mov ebp esp
sub esp 0x6c
mov [ ebp - 0x64 ] ecx
mov eax 0x1
test eax eax
je r-xdata
push rw-data
call sub_416b30
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x68 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x5c ]
cmp eax [ ebp - 0x60 ]
jge r-xdata
push 0x50
mov ecx [ ebp - 0x64 ]
add ecx 0x5c
call sub_4029d0
mov ecx [ ebp - 0x64 ]
add ecx 0x5c
call sub_402ad0
mov ecx [ ebp - 0x64 ]
mov ecx [ ecx + 0xa8 ]
call sub_41b1b0
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x5c ]
push ecx
mov edx [ ebp - 0x64 ]
mov ecx [ edx + 0xa8 ]
call sub_402780
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
push 0x0
mov ecx [ ebp - 0x64 ]
call sub_430017
push 0x0
mov ecx [ ebp - 0x64 ]
add ecx 0x5c
call sub_4029a0
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x50 ]
push edx
mov eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x54 ]
push ecx
mov ecx [ ebp - 0x64 ]
call sub_42fb7a
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x50 ]
push edx
mov eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x54 ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x50 ]
mov [ ebp + eax - 0x54 ] 0x0
jmp r-xdata
push rw-data
call sub_416b30
add esp 0x4
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x5c ]
add edx 0x1
mov [ ebp - 0x5c ] edx
lea edx [ ebp - 0x54 ]
push edx
mov ecx [ ebp - 0x64 ]
add ecx 0x5c
call sub_402aa0
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x5c ]
push edx
mov ecx [ ebp - 0x64 ]
add ecx 0x5c
call sub_402a70
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42fb7a
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xc ]
mov al [ edx ]
mov [ ebp - 0x4 ] al
mov ecx [ ebp - 0x4 ]
and ecx 0xff
sar ecx 0x4
mov [ ebp - 0x14 ] cl
mov edx [ ebp - 0x14 ]
and edx 0xff
cmp edx 0x9
jg r-xdata
mov cl [ ebp - 0x14 ]
add cl 0x37
mov [ ebp - 0x14 ] cl
mov al [ ebp - 0x14 ]
add al 0x30
mov [ ebp - 0x14 ] al
jmp r-xdata
mov dl [ ebp - 0x10 ]
add dl 0x37
mov [ ebp - 0x10 ] dl
mov cl [ ebp - 0x10 ]
add cl 0x30
mov [ ebp - 0x10 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0x14 ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
and edx 0xff
and edx 0xf
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x9
jg r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x20
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
sub_42fc94
push ebp
mov ebp esp
push 0xffffffff
push sub_498de7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov [ ebp - 0x28 ] ecx
push 0x1
mov ecx [ ebp - 0x28 ]
call sub_47b0ce
mov ecx [ ebp - 0x28 ]
add ecx 0x98
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x9c ] 0x0
jne r-xdata
push 0xffffffff
push 0x0
push 0x3f6
call sub_4840fb
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_47be0f
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x98
call sub_4027c0
push eax
mov edx [ ebp - 0x28 ]
add edx 0xc0
push edx
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x28 ]
add ecx 0x98
call sub_4027a0
cmp eax 0x50
jge r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x110
push ecx
mov edx [ ebp - 0x28 ]
add edx 0x98
push edx
mov eax [ ebp - 0x28 ]
add eax 0xc0
push eax
call sub_411659
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x2c ] 0x50
mov ecx [ ebp - 0x28 ]
add ecx 0x98
call sub_4027a0
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x114 ] 0x0
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3f7
call sub_4840fb
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_47be0f
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_402a00
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x110 ] ecx
mov edx [ ebp - 0x28 ]
mov [ edx + 0x114 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_402940
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_48a161
mov ecx [ ebp - 0x28 ]
add ecx 0x98
push ecx
lea edx [ ebp - 0x18 ]
push edx
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x5c
call sub_402a40
mov edx [ ebp - 0x28 ]
cmp eax [ edx + 0x9c ]
jne r-xdata
jmp r-xdata
jmp r-xdata
push 0x58
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] edx
push 0x9
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xa8 ]
call sub_402780
mov [ ebp - 0x20 ] eax
push 0x1
push 0x9
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0xa8 ]
call sub_47763d
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x28 ]
call sub_478709
mov ecx [ ebp - 0x28 ]
call sub_42fa42
push 0x1
mov eax [ ebp - 0x28 ]
add eax 0xb8
push eax
push 0x40d
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0xa4 ]
call sub_402890
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x110 ]
push ecx
mov edx [ ebp - 0x28 ]
add edx 0xc0
push edx
mov eax [ ebp - 0x20 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x110 ]
mov [ ecx + 0x50 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x9c ]
mov [ ecx + 0x54 ] eax
push 0x1
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0xa8 ]
call sub_4776fb
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0xa8 ]
call sub_402780
mov [ ebp - 0x1c ] eax
push 0x1
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xa8 ]
call sub_47763d
push 0x1
mov ecx [ ebp - 0x1c ]
push ecx
push 0x0
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0xa8 ]
call sub_4776fb
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov eax [ ebp - 0x28 ]
mov [ eax + 0xb8 ] 0x1
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0xbc ] 0x0
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x174 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0xa0 ]
mov [ ecx + 0x170 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x178 ] 0x0
mov edx [ ebp - 0x28 ]
cmp [ edx + 0xac ] 0x0
je r-xdata
sub_42ffcc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_478722
mov esp ebp
pop ebp
retn
push 0x0
push 0x1
push 0x40f
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0xa4 ]
call sub_405d50
sub_430017
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_402a40
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x9c ] eax
mov edx [ ebp - 0x4 ]
add edx 0x98
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_48a161
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_402970
mov [ ebp + 0x8 ] eax
sub_430073
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
add esi 0xb8
mov ecx 0x31
mov edi [ ebp + 0x8 ]
[ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_430097
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4300c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4300f0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4300f0
push ebp
mov ebp esp
push 0xffffffff
push sub_498e15
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a0bf
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_430150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x401
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ SendMessageA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_430180
push ebp
mov ebp esp
push 0xffffffff
push sub_498e44
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x10 ]
push eax
push 0xa0
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416f70
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0xa8 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0xac ] 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xb0 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xb4 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c7b1
mov eax [ ebp - 0x10 ]
mov [ eax + 0xa4 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_43024d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3ef
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xa0
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov edx [ ebp - 0x4 ]
add edx 0xa4
push edx
push 0x3f8
mov eax [ ebp + 0x8 ]
push eax
call sub_483e10
mov esp ebp
pop ebp
retn 0x4
sub_4302ba
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xac ] 0x1
mov ecx [ ebp + 0xc ]
push ecx
push 0xa0
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x8
sub_4302e5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_4171b1
push 0x2
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_40d950
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xb0 ] 0x0
jne r-xdata
push rw-data
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xb4 ] 0x0
je r-xdata
push 0x0
push 0x3fa
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
push 0x411
mov ecx [ ebp - 0x4 ]
call sub_430150
push 0x412
mov ecx [ ebp - 0x4 ]
call sub_430150
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa4 ] 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_4303c4
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x1
mov ecx [ ebp - 0x10 ]
call sub_47b0ce
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_4016b0
test eax eax
je r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
push ecx
call sub_41145e
add esp 0xc
test eax eax
je r-xdata
push 0xffffffff
push 0x0
push 0x3f6
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_47be0f
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3ec
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0xc ]
call sub_401740
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jb r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x10 ]
mov [ edx + 0xb8 ] 0x2
mov eax [ ebp - 0x10 ]
mov [ eax + 0xbc ] 0x1
mov ecx [ ebp - 0x10 ]
mov dl [ ebp - 0x4 ]
mov [ ecx + 0xc0 ] dl
mov eax [ ebp - 0x10 ]
mov [ eax + 0x110 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x114 ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x174 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xa4 ]
mov [ ecx + 0x170 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x178 ] 0x0
mov edx [ ebp - 0x10 ]
cmp [ edx + 0xac ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_478709
push 0x2
mov eax [ ebp - 0x10 ]
add eax 0xb8
push eax
push 0x40d
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xa8 ]
call sub_402890
jmp r-xdata
sub_430518
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_478722
mov esp ebp
pop ebp
retn
push 0x0
push 0x2
push 0x40f
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0xa8 ]
call sub_405d50
sub_43054e
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
add esi 0xb8
mov ecx 0x31
mov edi [ ebp + 0x8 ]
[ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_430572
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4305a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4305d0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4305d0
push ebp
mov ebp esp
push 0xffffffff
push sub_498e65
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_430630
push ebp
mov ebp esp
push 0xffffffff
push sub_498eb2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xc8
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416f70
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_416f70
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0xf0
call sub_401690
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xf4 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0xf8 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xfc ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x100 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
mov eax [ ebp - 0x10 ]
mov [ eax + 0xe4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xe8 ] 0x1
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_47c7b1
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xf0
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_430748
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3f6
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xa0
push eax
push 0x3f5
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0xe4
push edx
push 0x467
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0xe8
push ecx
push 0x3f8
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov eax [ ebp - 0x4 ]
add eax 0xec
push eax
push 0x3f6
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov edx [ ebp - 0x4 ]
add edx 0xf0
push edx
push 0x3f5
mov eax [ ebp + 0x8 ]
push eax
call sub_483d6c
mov esp ebp
pop ebp
retn 0x4
sub_43081a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xf4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x100 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0xf8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0xfc ] ecx
mov esp ebp
pop ebp
retn 0x10
sub_430857
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x100 ]
mov [ eax + 0xe4 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x100 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4308df
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax 0x1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xf8 ]
push edx
push rw-data
mov eax [ ebp - 0x4 ]
add eax 0xf0
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xfc ]
push edx
push rw-data
mov eax [ ebp - 0x4 ]
add eax 0xec
push eax
call sub_475837
add esp 0xc
sub_4308df
push ebp
mov ebp esp
push 0xffffffff
push sub_498ec5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xf4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xf4 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
push rw-data
lea ecx [ ebp - 0x14 ]
push ecx
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x10 ]
push ecx
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_475837
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xe8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
push 0x405
mov ecx [ ebp - 0x18 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4309a2
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_47b0ce
xor eax eax
cmp [ ebp + 0x8 ] 0x3f9
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0xa0
call sub_4171b1
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_4171b1
mov ecx [ ebp - 0x8 ]
call sub_4308df
mov esp ebp
pop ebp
retn 0x4
sub_4309f3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ecx + 0xe4 ] 0x0
sete dl
push edx
mov ecx [ ebp - 0x4 ]
call sub_430a76
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xf8 ]
push edx
push rw-data
mov eax [ ebp - 0x4 ]
add eax 0xf0
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xfc ]
push edx
push rw-data
mov eax [ ebp - 0x4 ]
add eax 0xec
push eax
call sub_475837
add esp 0xc
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
sub_430a76
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xa0
call sub_47bde8
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_47bde8
mov edx [ ebp + 0x8 ]
push edx
push 0x405
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp + 0x8 ]
push eax
push 0x3fc
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp + 0x8 ]
push ecx
push 0x468
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp + 0x8 ]
push edx
push 0x3f8
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp + 0x8 ]
push eax
push 0x3f9
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn 0x4
sub_430b1c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x1
mov ecx [ ebp - 0x10 ]
call sub_47b0ce
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xe8 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
add eax 0xf0
push eax
call sub_41145e
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0xf4 ]
jb r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0xe8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xe8 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0xec
push ecx
call sub_41145e
add esp 0xc
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_401740
xor eax eax
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
push 0xffffffff
push 0x0
push 0x3ec
call sub_4840fb
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0xf4 ]
jb r-xdata
mov edx [ ebp - 0x10 ]
cmp [ edx + 0xe8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_401740
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x4 ]
jbe r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_401740
xor eax eax
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
push 0xffffffff
push 0x0
push 0x3ec
call sub_4840fb
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xf8 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0xfc ] eax
mov eax 0x1
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_401740
xor eax eax
jmp r-xdata
sub_430cd3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xf8 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xfc ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
sub_430cfc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47bde8
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
and edx [ ecx + 0x100 ]
push edx
push 0x467
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0xe4 ] 0x0
sete cl
mov edx [ ebp + 0x8 ]
and edx ecx
push edx
mov ecx [ ebp - 0x4 ]
call sub_430a76
mov esp ebp
pop ebp
retn 0x4
sub_430d5d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x100 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0xa0
call sub_47be0f
push 0x467
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_430da0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4060a0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_430dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4093d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x44 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_430e2f
push ebp
mov ebp esp
push 0xffffffff
push sub_498eee
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xac
push esi
mov [ ebp - 0xb8 ] ecx
mov eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x84 ]
call sub_4805ce
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb4 ]
call sub_428cd0
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx [ ebp - 0xb8 ]
call sub_405410
lea edx [ ebp - 0xb4 ]
push edx
lea ecx [ ebp - 0x84 ]
call sub_48027a
lea ecx [ ebp - 0x98 ]
call sub_428cd0
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x84 ]
call sub_4801e8
push 0xf
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4807cb
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x98 ]
push edx
lea ecx [ ebp - 0x84 ]
call sub_405210
push 0x1
lea ecx [ ebp - 0x84 ]
call sub_47fea7
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xb8 ]
call sub_4796e8
mov ecx [ ebp - 0xb8 ]
mov edx [ ecx + 0x3c ]
push edx
lea ecx [ ebp - 0x84 ]
call sub_47fe32
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x28 ]
call sub_428cd0
push 0x400
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x84 ]
call sub_429e30
lea ecx [ ebp - 0xa4 ]
call sub_428cd0
mov edx [ ebp - 0xb4 ]
mov [ ebp - 0xa4 ] edx
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xb4 ]
call sub_404fe0
mov esi eax
lea ecx [ ebp - 0x28 ]
call sub_404fe0
sub esi eax
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0xa0 ]
add ecx eax
mov [ ebp - 0xa0 ] ecx
push 0xfffffff0
mov ecx [ ebp - 0xb8 ]
call sub_40a1e0
push eax
call [ GetWindowLongA@IAT ]
mov [ ebp - 0x9c ] eax
mov edx [ ebp - 0x9c ]
and edx 0x1
test edx edx
je r-xdata
mov edx [ ebp - 0x9c ]
and edx 0x2
test edx edx
je r-xdata
lea ecx [ ebp - 0xb4 ]
call sub_405cf0
mov esi eax
lea ecx [ ebp - 0x28 ]
call sub_405cf0
sub esi eax
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0xa4 ]
add ecx eax
mov [ ebp - 0xa4 ] ecx
jmp r-xdata
push 0x14
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x84 ]
call sub_47ff5f
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xa0 ]
add eax [ edx + 0x44 ]
push eax
mov ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xa4 ]
add edx [ ecx + 0x40 ]
push edx
lea ecx [ ebp - 0x84 ]
call sub_409350
push 0x8
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x84 ]
call sub_47ff5f
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xa0 ]
push ecx
mov edx [ ebp - 0xa4 ]
push edx
lea ecx [ ebp - 0x84 ]
call sub_409350
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x84 ]
call sub_47fea7
mov ecx [ ebp - 0x88 ]
push ecx
lea ecx [ ebp - 0x84 ]
call sub_47ff5f
mov edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x84 ]
call sub_47fe32
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_405020
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_480640
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xb4 ]
call sub_405cf0
mov esi eax
lea ecx [ ebp - 0x28 ]
call sub_405cf0
sub esi eax
mov eax [ ebp - 0xa4 ]
add eax esi
mov [ ebp - 0xa4 ] eax
sub_431100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_416e60
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov esp ebp
pop ebp
retn 0x8
sub_431126
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x40 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x44 ] eax
mov esp ebp
pop ebp
retn 0x8
sub_431150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_430e03
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_431180
push ebp
mov ebp esp
push 0xffffffff
push sub_498f0a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x120
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_4311fb
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4311fb
push ebp
mov ebp esp
push 0xffffffff
push sub_498f3b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0xb5
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_410070
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_410070
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x104 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x108 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_4770bc
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_43129a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x400
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xc8
push eax
push 0x3fd
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov esp ebp
pop ebp
retn 0x4
sub_4312f2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_431322
mov ecx [ ebp - 0x4 ]
call sub_431391
mov ecx [ ebp - 0x4 ]
call sub_4314a5
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_431322
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x14
jae r-xdata
mov esp ebp
pop ebp
retn
push 0xc
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx * 8 + rw-data ]
mov ecx [ edx * 8 + rw-data ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_407e30
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_431391
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0xc8
call sub_407f50
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x104 ]
mov edx [ ecx ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x108 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx ]
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x108 ]
cmp [ eax ] 0x1
jle r-xdata
push 0xc
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ecx + eax * 4 ]
mov [ edx ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_431d40
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x18 ]
add ecx 0xc8
call sub_407ec0
cmp [ ebp - 0x10 ] 0x14
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_43155b
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0xc8
call sub_409900
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0xc8
call sub_4098d0
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx ]
cmp ecx [ eax * 8 + rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 8 + rw-data ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_4314a5
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407f50
mov ecx [ ebp - 0x14 ]
add ecx 0x10c
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x10c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_431d40
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407ec0
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_409900
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_4098d0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_43155b
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_4315c4
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x10c
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407e60
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x10c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_43166f
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x14 ] ecx
push 0x1
mov ecx [ ebp - 0x14 ]
call sub_47b0ce
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407e90
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407ef0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
push 0xc
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ eax + 0x8 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407f20
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407e60
sub eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jge r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407e60
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
call sub_407ec0
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_4100c0
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_4098d0
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x14 ]
call sub_431d40
sub_4317fc
push ebp
mov ebp esp
sub esp 0x3c
push esi
mov [ ebp - 0x2c ] ecx
push 0x1
mov ecx [ ebp - 0x2c ]
call sub_47b0ce
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x10c
call sub_41b1b0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x20 ]
jge r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x10c
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
mov ecx [ edx ]
cmp ecx [ eax ]
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x8 ] 0x1
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x14
jae r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x28 ] edx
mov esi [ ebp - 0x10 ]
add esi 0x1
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_407e60
cmp esi eax
jge r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx ]
cmp ecx [ eax * 8 + rw-data ]
jne r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_407e60
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x30 ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4100c0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_4098d0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_407ec0
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407f20
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
cmp [ ebp - 0xc ] eax
jge r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x8c
call sub_407ef0
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x14
jae r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
cmp [ ebp - 0xc ] eax
jge r-xdata
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x28 ]
jl r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ecx ]
cmp eax [ edx * 8 + rw-data ]
jne r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
mov [ ebp - 0x3c ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x2c ]
call sub_431d40
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
sub_431a7c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_407e60
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_407f20
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_4100c0
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_4098d0
mov edx [ ebp - 0x8 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x10 ]
call sub_431d40
sub_431b37
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0xc8
call sub_407f20
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0xc8
call sub_4100c0
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0xc ]
add ecx 0xc8
call sub_4098d0
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0xc ]
call sub_431d40
sub_431c02
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_431c40
mov ecx [ ebp - 0x4 ]
call sub_4315c4
mov ecx [ ebp - 0x4 ]
call sub_48d869
mov esp ebp
pop ebp
retn
sub_431c40
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_47b0ce
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_407e60
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x104 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x4 ]
lea edx [ ecx * 4 + 0x4 ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ecx ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x104 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x108 ]
mov [ ecx ] edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov ecx [ ecx ]
mov [ eax + edx * 4 + 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_431d10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_428ac0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_431d40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
call sub_407e60
neg eax
sbb eax eax
neg eax
push eax
push 0x42f
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
add ecx 0xc8
call sub_407e60
neg eax
sbb eax eax
neg eax
push eax
push 0x430
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
call sub_431db0
mov esp ebp
pop ebp
retn
sub_431db0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407e60
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x431
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x432
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
xor eax eax
cmp [ ebp - 0x10 ] 0x0
setg al
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
xor edx edx
cmp [ ebp - 0x10 ] ecx
setl dl
mov [ ebp - 0x4 ] edx
sub_431e60
push ebp
mov ebp esp
push 0xffffffff
push sub_498f59
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_491c3f
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xc4
call sub_401690
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_431efb
push ebp
mov ebp esp
push 0xffffffff
push sub_498fe0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xec
mov [ ebp - 0xf0 ] ecx
lea ecx [ ebp - 0x84 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0xe000
lea ecx [ ebp - 0x84 ]
call sub_47e84a
lea ecx [ ebp - 0x84 ]
call sub_4027c0
push eax
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea ecx [ ebp - 0x84 ]
call sub_4027c0
push eax
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
mov edx [ ebp - 0xf0 ]
mov [ edx + 0xc0 ] eax
mov ecx [ ebp - 0xf0 ]
call sub_4921bd
lea ecx [ ebp - 0x58 ]
call sub_432de0
push 0x2710
lea ecx [ ebp - 0x84 ]
call sub_47e84a
lea ecx [ ebp - 0x84 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0xf0 ]
call sub_49183a
push 0x8c
call sub_405cd0
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0xd4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call [ CloseHandle@IAT ]
push 0x178f
lea ecx [ ebp - 0x84 ]
call sub_47e84a
push 0x0
lea ecx [ ebp - 0x84 ]
call sub_4027c0
push eax
call [ FindWindowA@IAT ]
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
mov [ ebp - 0xf4 ] 0x0
push r--data
push r--data
push r--data
push 0x81
mov ecx [ ebp - 0xd4 ]
call sub_480841
mov [ ebp - 0xf4 ] eax
jmp r-xdata
mov [ ebp - 0xcc ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_47c674
mov eax [ ebp - 0xcc ]
jmp r-xdata
mov ecx [ ebp - 0x8c ]
push ecx
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0xf8 ] 0x0
mov ecx [ ebp - 0xdc ]
call sub_41e110
mov [ ebp - 0xf8 ] eax
jmp r-xdata
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0xf0 ]
mov edx [ eax ]
mov ecx [ ebp - 0xf0 ]
call [ edx + 0x9c ]
push 0x1120
call sub_405cd0
mov [ ebp - 0xdc ] eax
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0xdc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8c ]
push eax
mov ecx [ ebp - 0xf0 ]
call sub_4329f3
push eax
call [ SetForegroundWindow@IAT ]
lea ecx [ ebp - 0xb0 ]
call sub_491ddc
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xb0 ]
push ecx
mov ecx [ ebp - 0xf0 ]
call sub_491d89
lea ecx [ ebp - 0x9c ]
call sub_4016b0
test eax eax
jne r-xdata
push 0x9
mov edx [ ebp - 0x8c ]
push edx
call [ ShowWindow@IAT ]
push 0x0
push 0x0
push 0x80
push 0x0
push rw-data
push 0xcf8000
lea ecx [ ebp - 0x88 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x54 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x28 ]
call [ edx + 0xfc ]
test eax eax
jne r-xdata
push 0xa
push 0x0
lea ecx [ ebp - 0x84 ]
call sub_4027c0
push eax
lea eax [ ebp - 0x88 ]
push eax
call sub_47e8f5
mov eax [ ebp - 0xf8 ]
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x54 ]
call sub_401690
mov [ ebp - 0x4 ] 0x4
push 0x178f
lea ecx [ ebp - 0x54 ]
call sub_47e84a
mov [ ebp - 0x80 ] 0x8
call sub_478e15
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x74 ] 0x0
call sub_411190
mov [ ebp - 0x70 ] eax
push 0x80
call sub_4036e0
mov ecx eax
call sub_432ea0
mov [ ebp - 0x6c ] eax
push 0x7f00
call sub_4036e0
mov ecx eax
call sub_405520
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x60 ] 0x80
lea ecx [ ebp - 0x54 ]
call sub_4027c0
mov [ ebp - 0x5c ] eax
lea edx [ ebp - 0x80 ]
push edx
call sub_47993f
lea ecx [ ebp - 0x88 ]
call sub_401690
mov [ ebp - 0x4 ] 0x5
push 0x80
lea ecx [ ebp - 0x84 ]
call sub_47e84a
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb0 ]
call sub_491e37
lea ecx [ ebp - 0x9c ]
call sub_4027c0
push eax
call [ GlobalAddAtomA@IAT ]
mov [ ebp - 0xb4 ] ax
push 0x0
mov edx [ ebp - 0xb4 ]
and edx 0xffff
push edx
push 0x418
mov eax [ ebp - 0x8c ]
push eax
call [ SendMessageA@IAT ]
mov cx [ ebp - 0xb4 ]
push ecx
call [ GlobalDeleteAtom@IAT ]
mov eax [ ebp - 0xf0 ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x1c ] ecx
push 0x1
mov edx [ ebp - 0xf0 ]
mov ecx [ edx + 0x1c ]
call sub_47bab3
mov ecx [ ebp - 0x28 ]
call sub_432e20
push eax
mov ecx [ ebp - 0xf0 ]
call sub_432c32
lea ecx [ ebp - 0x50 ]
call sub_491ddc
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x24 ]
call sub_47711c
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp - 0xf0 ]
call sub_432a77
cmp [ ebp - 0x40 ] 0x2
je r-xdata
push 0xffffffff
push 0x10
push 0x413
call sub_4840fb
mov [ ebp - 0xe0 ] 0x0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x88 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_47c674
mov eax [ ebp - 0xe0 ]
jmp r-xdata
lea ecx [ ebp - 0x3c ]
call sub_4016b0
test eax eax
jne r-xdata
cmp [ ebp - 0x40 ] 0x3
je r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xb8 ]
call sub_401690
mov [ ebp - 0x4 ] 0x8
lea edx [ ebp - 0xb8 ]
push edx
lea eax [ ebp - 0x3c ]
push eax
call sub_411d0a
add esp 0x8
test eax eax
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_40efb0
cmp eax 0x1
jg r-xdata
lea edx [ ebp - 0x50 ]
push edx
mov ecx [ ebp - 0xf0 ]
call sub_490784
test eax eax
jne r-xdata
mov [ ebp - 0x40 ] 0xffffffff
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0xb8 ]
call sub_47c674
lea ecx [ ebp - 0xb8 ]
push ecx
lea ecx [ ebp - 0x3c ]
call sub_47c761
lea ecx [ ebp - 0xc8 ]
call sub_401690
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xc0 ]
call sub_401690
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp - 0x24 ]
call sub_40efb0
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xbc ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xe4 ] 0x0
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x24 ]
call sub_47714f
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x50 ]
call sub_491e37
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x88 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_47c674
mov eax [ ebp - 0xe4 ]
jmp r-xdata
mov ecx [ ebp - 0xbc ]
cmp ecx [ ebp - 0xc4 ]
jge r-xdata
mov edx [ ebp - 0xf0 ]
mov eax [ edx + 0x74 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_47bda6
mov ecx [ ebp - 0x28 ]
call sub_405430
cmp [ ebp - 0x40 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xc0 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0xc8 ]
call sub_47c674
mov edx [ ebp - 0xbc ]
push edx
lea ecx [ ebp - 0x24 ]
call sub_416c20
push eax
lea ecx [ ebp - 0xc8 ]
call sub_47c761
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0xc8 ]
push ecx
call sub_411d0a
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xec ] 0x1
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x24 ]
call sub_47714f
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x50 ]
call sub_491e37
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x88 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_47c674
mov eax [ ebp - 0xec ]
mov ecx [ ebp - 0x28 ]
call sub_47be0f
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_47c761
lea edx [ ebp - 0xc0 ]
push edx
lea ecx [ ebp - 0x3c ]
call sub_47c761
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xc0 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0xc8 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x24 ]
call sub_47714f
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x50 ]
call sub_491e37
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x88 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x84 ]
call sub_47c674
mov eax [ ebp - 0xe8 ]
jmp r-xdata
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp - 0xf0 ]
call sub_490784
test eax eax
jne r-xdata
mov eax [ ebp - 0xbc ]
add eax 0x1
mov [ ebp - 0xbc ] eax
sub_43263e
push ebp
mov ebp esp
push 0xffffffff
push sub_498ff6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x170
mov [ ebp - 0x17c ] ecx
lea ecx [ ebp - 0x178 ]
call sub_401000
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x178 ]
call sub_47841e
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x178 ]
call sub_40107f
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_43269f
push ebp
mov ebp esp
push 0xffffffff
push sub_499009
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
push 0x1004
push 0xf000
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_487a35
test eax eax
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x7c ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_43272c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x6
push 0xf001
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_487a35
mov esp ebp
pop ebp
retn 0x4
sub_432750
push ebp
mov ebp esp
push 0xffffffff
push sub_49901f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x13c
mov [ ebp - 0x148 ] ecx
lea ecx [ ebp - 0x134 ]
call sub_47d515
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x124 ]
call sub_432e40
lea eax [ ebp - 0x124 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_47ed67
test eax eax
jne r-xdata
mov edx [ ebp - 0x114 ]
and edx 0xff
and edx 0x1
test edx edx
je r-xdata
mov [ ebp - 0x13c ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x134 ]
call sub_47d56a
mov eax [ ebp - 0x13c ]
jmp r-xdata
mov [ ebp - 0x144 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x134 ]
call sub_47d56a
mov eax [ ebp - 0x144 ]
push 0xffffffff
push 0x3
push 0x417
call sub_4840fb
mov [ ebp - 0x138 ] eax
cmp [ ebp - 0x138 ] 0x2
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x138 ] 0x6
jne r-xdata
mov [ ebp - 0x140 ] 0xfffffffe
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x134 ]
call sub_47d56a
mov eax [ ebp - 0x140 ]
jmp r-xdata
mov al [ ebp - 0x114 ]
and al 0xfe
mov [ ebp - 0x114 ] al
lea ecx [ ebp - 0x124 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_47eecc
sub_432879
push ebp
mov ebp esp
push 0xffffffff
push sub_499032
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_432750
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0xc4
call sub_47c7b1
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x28 ]
call sub_487b10
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x28 ]
add ecx 0xc4
call sub_47c7b1
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
call sub_405dc0
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0xc4
call sub_47c761
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x1c ]
call sub_432e70
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
push 0x41e
lea edx [ ebp - 0x18 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x28 ]
cmp [ ecx + 0xa8 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
mov ecx [ ebp - 0x10 ]
call [ edx + 0x60 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x10 ]
call [ edx + 0x64 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push 0x0
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0xa8 ]
call sub_43de14
mov [ ebp - 0x20 ] eax
push 0x1
push 0x2
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_44d960
sub_4329d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc0 ]
push ecx
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
call sub_49215a
mov esp ebp
pop ebp
retn
sub_4329f3
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push sub_432a20
call [ EnumWindows@IAT ]
test eax eax
jne r-xdata
sub_432a20
push ebp
mov ebp esp
sub esp 0x44
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call [ GetParent@IAT ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax 0x1
push 0x40
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ GetClassNameA@IAT ]
push rw-data
lea edx [ ebp - 0x44 ]
push edx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_432a77
push ebp
mov ebp esp
push 0xffffffff
push sub_49904e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov [ ebp - 0x40 ] ecx
call [ GetCommandLineA@IAT ]
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x34 ]
call sub_47711c
mov [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
push 0xffffffff
push 0x0
mov ecx [ ebp + 0xc ]
call sub_4771af
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x1c ]
jge r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call sub_47714f
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x18 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x1
xor ecx ecx
cmp eax [ ebp - 0x1c ]
sete cl
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x38 ]
movsx eax [ edx ]
cmp eax 0x2d
je r-xdata
mov [ ebp - 0x14 ] 0x1
mov eax [ ebp - 0x38 ]
add eax 0x1
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov ecx [ ebp - 0x38 ]
movsx edx [ ecx ]
cmp edx 0x2f
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x3c ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x3c ]
call sub_47c7b1
lea edx [ ebp - 0x3c ]
push edx
mov ecx [ ebp + 0xc ]
call sub_428850
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
call sub_47c674
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_432b99
push ebp
mov ebp esp
push 0xffffffff
push sub_499062
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x80 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x80 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x80 ]
mov eax [ edx ]
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
push 0x20
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_437140
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x80 ] eax
sub_432c32
push ebp
mov ebp esp
push 0xffffffff
push sub_499077
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push r--data
push r--data
mov ecx [ ebp - 0x18 ]
call sub_49194f
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0xb4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
push 0x28
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
push 0x1e
mov eax [ ebp + 0x8 ]
push eax
push r--data
push r--data
push r--data
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_43d0b0
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0xa8 ] eax
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0xa8 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xa8 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_432cf8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xa8 ]
call sub_43da4f
mov esp ebp
pop ebp
retn 0x8
sub_432d60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_432d90
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_432d90
push ebp
mov ebp esp
push 0xffffffff
push sub_499099
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xc4
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_491ff4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_432de0
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x2c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push rw-data
push 0x0
call [ GetClassInfoA@IAT ]
mov [ ebp - 0x24 ] sub_40b640
mov [ ebp - 0x4 ] rw-data
lea ecx [ ebp - 0x28 ]
push ecx
call sub_47993f
mov eax [ ebp - 0x2c ]
mov esp ebp
pop ebp
retn
sub_432e40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_432e90
mov ecx [ ebp - 0x4 ]
add ecx 0x4
call sub_432e90
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_432e90
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_432ea0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
push eax
call sub_405400
push eax
call [ LoadIconA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_432ed0
push ebp
mov ebp esp
push 0xffffffff
push sub_4990ba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x770
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_432f57
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_432f57
push ebp
mov ebp esp
push 0xffffffff
push sub_499112
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_480b4a
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x50
call sub_47d515
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x64 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_40da47
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0x10 ]
mov [ edx + 0x84 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x88
call sub_4770bc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_4770bc
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x10 ]
mov [ eax + 0xb0 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xb4 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x32c ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x330
call sub_432e90
mov eax [ ebp - 0x10 ]
mov [ eax + 0x334 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x73c ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x740 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x744 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x748
call sub_429380
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x88
call sub_477524
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_477524
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x748
call sub_477524
call sub_402850
mov edx [ ebp - 0x10 ]
mov [ edx + 0x738 ] eax
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_4367a6
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4330cf
push ebp
mov ebp esp
push 0xffffffff
push sub_49915b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x748
call sub_4293d7
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_4770ef
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x88
call sub_4770ef
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_40daba
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x50
call sub_47d56a
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_480ba4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_433168
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_4817a3
test eax eax
jne r-xdata
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
push 0x0
push 0x4000
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0x68
call sub_403430
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0xc ]
call sub_436866
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4331c4
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4817c8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_47c0f5
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_433223
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ edx + 0x60 ] 0x1
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_436866
mov ecx [ ebp - 0x8 ]
call sub_47c10a
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_433223
push ebp
mov ebp esp
push 0xffffffff
push sub_499195
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1e4
mov [ ebp - 0x1e8 ] ecx
call [ GetTickCount@IAT ]
mov [ ebp - 0x134 ] eax
lea ecx [ ebp - 0x12c ]
call sub_432e40
mov eax [ ebp - 0x1e8 ]
cmp [ eax + 0x54 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x1e8 ]
add ecx 0x50
call sub_437050
lea ecx [ ebp - 0x15c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x158 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor edx edx
test edx edx
je r-xdata
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c8 ] eax
mov eax [ ebp - 0x1c8 ]
mov [ ebp - 0x160 ] eax
push 0x0
push 0x4000
mov ecx [ ebp - 0x160 ]
push ecx
mov ecx [ ebp - 0x1e8 ]
add ecx 0x68
call sub_403430
jmp r-xdata
mov edx [ ebp - 0x1e8 ]
cmp [ edx + 0x54 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x15c ]
call sub_47c7b1
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1d4 ] eax
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x190 ] ecx
mov [ ebp - 0x170 ] 0xc
mov [ ebp - 0x16c ] 0x0
mov [ ebp - 0x168 ] 0x1
push 0x0
push 0x0
push 0x0
push 0x2
lea eax [ ebp - 0x170 ]
push eax
mov ecx [ ebp - 0x1e8 ]
mov edx [ ecx + 0x54 ]
push edx
call [ CreateFileMappingA@IAT ]
mov [ ebp - 0x178 ] eax
cmp [ ebp - 0x178 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1e8 ]
cmp [ eax + 0x204 ] 0x0
jne r-xdata
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x15c ]
call sub_4027c0
push eax
call sub_47ed67
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1e8 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x15c ]
call sub_47c761
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x1e0 ] ecx
mov edx [ ebp - 0x1e0 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x190 ]
push ecx
mov ecx [ ebp - 0x1e8 ]
add ecx 0x50
mov edx [ ebp - 0x1e8 ]
mov eax [ edx + 0x50 ]
call [ eax + 0x34 ]
mov [ ebp - 0x198 ] eax
cmp [ ebp - 0x198 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x4
mov eax [ ebp - 0x178 ]
push eax
call [ MapViewOfFile@IAT ]
mov [ ebp - 0x180 ] eax
cmp [ ebp - 0x180 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
call [ GetTickCount@IAT ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0x134 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x130 ]
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x14 ]
xor edx edx
mov ecx 0x3e8
div ecx
push edx
mov eax [ ebp - 0x14 ]
xor edx edx
mov ecx 0x3e8
div ecx
push eax
mov edx [ ebp - 0x1e8 ]
mov eax [ edx + 0x84 ]
push eax
push rw-data
lea ecx [ ebp - 0x130 ]
push ecx
call sub_475837
add esp 0x14
mov [ ebp - 0x1e4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x130 ]
call sub_47c674
mov eax [ ebp - 0x1e4 ]
mov ecx [ ebp - 0x1e8 ]
add ecx 0x50
mov edx [ ebp - 0x1e8 ]
mov eax [ edx + 0x50 ]
call [ eax + 0x4c ]
mov eax [ ebp - 0x11c ]
and eax 0xff
and eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x15c ]
push ecx
push 0x3fc
lea edx [ ebp - 0x158 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x158 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x1bc ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x158 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x15c ]
call sub_47c674
mov eax [ ebp - 0x1bc ]
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x188 ] ecx
mov edx [ ebp - 0x198 ]
shr edx 0xe
mov [ ebp - 0x1b8 ] edx
mov [ ebp - 0x194 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x1e8 ]
mov eax [ edx + 0x84 ]
shr eax 0xe
mov [ ebp - 0x184 ] eax
mov ecx [ ebp - 0x180 ]
mov [ ebp - 0x164 ] ecx
mov [ ebp - 0x17c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x178 ]
push ecx
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x150 ] 0x2
mov [ ebp - 0x150 ] 0x0
mov ecx [ ebp - 0x1e8 ]
mov [ ecx + 0x64 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x194 ]
cmp ecx [ ebp - 0x1b8 ]
jge r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov ecx [ ebp - 0x150 ]
or ecx 0x40
mov [ ebp - 0x150 ] ecx
jmp r-xdata
cmp [ ebp - 0x1ec ] 0x1
je r-xdata
mov edx [ ebp - 0x1e8 ]
mov eax [ edx + 0x204 ]
mov [ ebp - 0x1ec ] eax
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
mov eax [ ebp - 0x198 ]
xor edx edx
mov ecx 0x4000
div ecx
test edx edx
je r-xdata
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1d8 ] eax
mov edx [ ebp - 0x1d8 ]
mov [ ebp - 0x18c ] edx
push 0x4000
mov eax [ ebp - 0x188 ]
push eax
mov ecx [ ebp - 0x18c ]
push ecx
call sub_467a70
add esp 0xc
push 0x4000
push 0x4000
mov edx [ ebp - 0x18c ]
push edx
mov ecx [ ebp - 0x1e8 ]
add ecx 0x68
call sub_403430
mov eax [ ebp - 0x188 ]
add eax 0x4000
mov [ ebp - 0x188 ] eax
jmp r-xdata
mov eax [ ebp - 0x1e8 ]
mov eax [ eax + 0x84 ]
xor edx edx
mov ecx 0x4000
div ecx
test edx edx
je r-xdata
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1cc ] eax
mov ecx [ ebp - 0x1cc ]
mov [ ebp - 0x174 ] ecx
push 0x4000
mov edx [ ebp - 0x164 ]
push edx
mov eax [ ebp - 0x174 ]
push eax
call sub_467a70
add esp 0xc
push 0x4000
push 0x4000
mov ecx [ ebp - 0x174 ]
push ecx
mov ecx [ ebp - 0x1e8 ]
add ecx 0x68
call sub_403430
mov edx [ ebp - 0x164 ]
add edx 0x4000
mov [ ebp - 0x164 ] edx
jmp r-xdata
push 0x0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x14c ]
call sub_4035b0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x14c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
lea ecx [ ebp - 0x15c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1e8 ]
add ecx 0x50
mov eax [ ebp - 0x1e8 ]
mov edx [ eax + 0x50 ]
call [ edx + 0x20 ]
mov [ ebp - 0x138 ] eax
cmp [ ebp - 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x150 ]
or edx 0x20
mov [ ebp - 0x150 ] edx
jmp r-xdata
cmp [ ebp - 0x1ec ] 0x2
je r-xdata
mov eax [ ebp - 0x198 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1dc ] eax
mov edx [ ebp - 0x1dc ]
mov [ ebp - 0x18c ] edx
mov eax [ ebp - 0x198 ]
xor edx edx
mov ecx 0x4000
div ecx
push edx
mov edx [ ebp - 0x188 ]
push edx
mov eax [ ebp - 0x18c ]
push eax
call sub_467a70
add esp 0xc
mov eax [ ebp - 0x198 ]
xor edx edx
mov ecx 0x4000
div ecx
push edx
push 0x4000
mov edx [ ebp - 0x18c ]
push edx
mov ecx [ ebp - 0x1e8 ]
add ecx 0x68
call sub_403430
mov eax [ ebp - 0x194 ]
add eax 0x1
mov [ ebp - 0x194 ] eax
mov eax [ ebp - 0x180 ]
push eax
call [ UnmapViewOfFile@IAT ]
test eax eax
jne r-xdata
push 0x4000
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1d0 ] eax
mov edx [ ebp - 0x1d0 ]
mov [ ebp - 0x174 ] edx
mov eax [ ebp - 0x1e8 ]
mov eax [ eax + 0x84 ]
xor edx edx
mov ecx 0x4000
div ecx
push edx
mov edx [ ebp - 0x164 ]
push edx
mov eax [ ebp - 0x174 ]
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x1e8 ]
mov eax [ ecx + 0x84 ]
xor edx edx
mov ecx 0x4000
div ecx
push edx
push 0x4000
mov edx [ ebp - 0x174 ]
push edx
mov ecx [ ebp - 0x1e8 ]
add ecx 0x68
call sub_403430
mov edx [ ebp - 0x17c ]
add edx 0x1
mov [ ebp - 0x17c ] edx
lea ecx [ ebp - 0x12c ]
push ecx
mov ecx [ ebp - 0x1e8 ]
add ecx 0x50
call sub_47ec8d
lea edx [ ebp - 0x128 ]
push edx
mov ecx [ ebp - 0x1e8 ]
add ecx 0x330
call sub_437070
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14c ]
call sub_403680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x158 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x15c ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x144 ]
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0xb
jne r-xdata
mov eax [ ebp - 0x150 ]
or al 0x10
mov [ ebp - 0x150 ] eax
jmp r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x1b4 ]
push ecx
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x178 ]
push edx
call [ CloseHandle@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x178 ]
push ecx
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x1e8 ]
add ecx 0x50
mov eax [ ebp - 0x1e8 ]
mov edx [ eax + 0x50 ]
call [ edx + 0x30 ]
mov ecx [ ebp - 0x1e8 ]
mov [ ecx + 0x84 ] eax
mov [ ebp - 0x10 ] 0x190000
mov edx [ ebp - 0x1e8 ]
cmp [ edx + 0x84 ] 0x0
jne r-xdata
cmp [ ebp - 0x154 ] 0x5
jne r-xdata
push 0xffffffff
push 0x1
push 0x411
call sub_4840fb
cmp eax 0x1
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x1b4 ]
push edx
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1b4 ]
push eax
call [ DispatchMessageA@IAT ]
cmp [ ebp - 0x138 ] 0x0
jne r-xdata
mov [ ebp - 0x150 ] 0x0
mov ecx [ ebp - 0x1e8 ]
mov edx [ ecx + 0x204 ]
mov [ ebp - 0x1f0 ] edx
cmp [ ebp - 0x1f0 ] 0x0
je r-xdata
mov [ ebp - 0x150 ] 0x40
lea ecx [ ebp - 0x14c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
lea ecx [ ebp - 0x15c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1e8 ]
add ecx 0x50
mov eax [ ebp - 0x1e8 ]
mov edx [ eax + 0x50 ]
call [ edx + 0x20 ]
mov [ ebp - 0x138 ] eax
cmp [ ebp - 0x138 ] 0x0
je r-xdata
mov [ ebp - 0x1c0 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14c ]
call sub_403680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x158 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x15c ]
call sub_47c674
mov eax [ ebp - 0x1c0 ]
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
lea ecx [ ebp - 0x158 ]
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x150 ]
or al 0x40
mov [ ebp - 0x150 ] eax
jmp r-xdata
cmp [ ebp - 0x1f0 ] 0x1
je r-xdata
lea ecx [ ebp - 0x158 ]
call sub_47c5ff
mov eax [ ebp - 0x1e8 ]
mov [ eax + 0x64 ] 0x0
jmp r-xdata
push 0x0
push 0x10
lea ecx [ ebp - 0x158 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x1c4 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14c ]
call sub_403680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x158 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x15c ]
call sub_47c674
mov eax [ ebp - 0x1c4 ]
jmp r-xdata
mov edx [ ebp - 0x15c ]
push edx
push 0x3fc
lea eax [ ebp - 0x158 ]
push eax
call sub_47584a
add esp 0xc
lea eax [ ebp - 0x14c ]
push eax
mov ecx [ ebp - 0x150 ]
push ecx
lea ecx [ ebp - 0x15c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1e8 ]
add ecx 0x50
mov edx [ ebp - 0x1e8 ]
mov eax [ edx + 0x50 ]
call [ eax + 0x20 ]
mov [ ebp - 0x138 ] eax
cmp [ ebp - 0x138 ] 0x0
je r-xdata
mov ecx [ ebp - 0x150 ]
or ecx 0x20
mov [ ebp - 0x150 ] ecx
jmp r-xdata
cmp [ ebp - 0x1f0 ] 0x2
je r-xdata
mov ecx [ ebp - 0x1e8 ]
mov [ ecx + 0x64 ] 0x0
mov edx [ ebp - 0x150 ]
or edx 0x10
mov [ ebp - 0x150 ] edx
jmp r-xdata
sub_433c05
push ebp
mov ebp esp
push 0xffffffff
push sub_4991b1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
cmp [ eax + 0xf4 ] 0x0
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_4340bf
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0xb4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_433d4d
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push 0x3f2
call sub_4840fb
push 0x1
mov edx [ ebp + 0x8 ]
push edx
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_436866
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x1c ]
call sub_435ee3
mov ecx [ ebp - 0x1c ]
call sub_43603c
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x32c ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x14 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
push ecx
push 0x3fa
lea edx [ ebp - 0x18 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x35
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
call sub_4840c3
cmp eax 0x4
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
jmp r-xdata
sub_433d4d
push ebp
mov ebp esp
push 0xffffffff
push sub_4991d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x170
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x17c ] ecx
mov ecx [ ebp - 0x17c ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x150 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x17c ]
cmp [ eax + 0x54 ] 0xffffffff
je r-xdata
mov [ ebp - 0x14c ] 0x1002
mov ecx [ ebp - 0x17c ]
cmp [ ecx + 0x204 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x17c ]
add ecx 0x50
mov edx [ ebp - 0x17c ]
mov eax [ edx + 0x50 ]
call [ eax + 0x4c ]
mov eax [ ebp - 0x17c ]
cmp [ eax + 0x204 ] 0x2
jne r-xdata
mov edx [ ebp - 0x14c ]
or edx 0x20
mov [ ebp - 0x14c ] edx
jmp r-xdata
mov edx [ ebp - 0x14c ]
or edx 0x40
mov [ ebp - 0x14c ] edx
mov ecx [ ebp - 0x14c ]
or ecx 0x10
mov [ ebp - 0x14c ] ecx
jmp r-xdata
push 0x0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x30 ]
call sub_4035b0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x14c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x17c ]
add ecx 0x50
mov eax [ ebp - 0x17c ]
mov edx [ eax + 0x50 ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x17c ]
add ecx 0x68
call sub_40dbf0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x16c ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x150 ]
call sub_47c674
mov eax [ ebp - 0x16c ]
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x17c ]
mov edx [ ebp - 0x17c ]
mov eax [ edx ]
call [ eax + 0x5c ]
mov ecx [ ebp - 0x17c ]
add ecx 0x50
mov edx [ ebp - 0x17c ]
mov eax [ edx + 0x50 ]
call [ eax + 0x4c ]
mov [ ebp - 0x14c ] 0x2
mov ecx [ ebp - 0x17c ]
mov edx [ ecx + 0x204 ]
mov [ ebp - 0x180 ] edx
cmp [ ebp - 0x180 ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_41da20
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x17c ]
add ecx 0x50
mov edx [ ebp - 0x17c ]
mov eax [ edx + 0x50 ]
call [ eax + 0x38 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x14c ]
or al 0x40
mov [ ebp - 0x14c ] eax
jmp r-xdata
cmp [ ebp - 0x180 ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x17c ]
add ecx 0x68
call sub_40dbc0
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x14c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x17c ]
add ecx 0x50
mov eax [ ebp - 0x17c ]
mov edx [ eax + 0x50 ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14c ]
or ecx 0x20
mov [ ebp - 0x14c ] ecx
jmp r-xdata
cmp [ ebp - 0x180 ] 0x2
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x148 ]
call sub_432e40
lea eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x17c ]
add ecx 0x50
call sub_47ec8d
lea ecx [ ebp - 0x144 ]
push ecx
mov ecx [ ebp - 0x17c ]
add ecx 0x330
call sub_437070
mov edx [ ebp - 0x17c ]
cmp [ edx + 0x204 ] 0x0
jne r-xdata
mov [ ebp - 0x174 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x150 ]
call sub_47c674
mov eax [ ebp - 0x174 ]
jmp r-xdata
mov edx [ ebp - 0x14c ]
or edx 0x10
mov [ ebp - 0x14c ] edx
jmp r-xdata
mov [ ebp - 0x178 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_403680
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x150 ]
call sub_47c674
mov eax [ ebp - 0x178 ]
mov ecx [ ebp - 0x17c ]
add ecx 0x50
mov eax [ ebp - 0x17c ]
mov edx [ eax + 0x50 ]
call [ edx + 0x4c ]
sub_4340bf
push ebp
mov ebp esp
push 0xffffffff
push sub_49920d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x1d4
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1d0 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1d0 ]
call sub_4348fe
test eax eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1d0 ]
call sub_4345e0
mov ecx [ ebp - 0x1d0 ]
cmp [ ecx + 0xfc ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ ebp - 0x168 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
push rw-data
lea edx [ ebp - 0x168 ]
push edx
call sub_475837
add esp 0x10
mov eax [ ebp - 0x1d0 ]
cmp [ eax + 0xf8 ] 0x1
jne r-xdata
mov edx [ ebp - 0x1d0 ]
add edx 0x100
push edx
lea ecx [ ebp - 0x14 ]
call sub_47c7b1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x164 ]
push edx
lea ecx [ ebp - 0x168 ]
call sub_4027c0
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
jne r-xdata
push 0x0
lea ecx [ ebp - 0x168 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ CopyFileA@IAT ]
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x168 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x1b8 ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x168 ]
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ CopyFileA@IAT ]
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x168 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x1bc ]
jmp r-xdata
mov edx [ ebp - 0x1d0 ]
mov eax [ ebp - 0x1c ]
cmp eax [ edx + 0xf8 ]
jge r-xdata
lea ecx [ ebp - 0x178 ]
call sub_47d515
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x1d0 ]
mov edx [ ebp - 0x1c ]
cmp edx [ ecx + 0xf8 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
push rw-data
lea ecx [ ebp - 0x168 ]
push ecx
call sub_475837
add esp 0x14
lea edx [ ebp - 0x164 ]
push edx
lea ecx [ ebp - 0x168 ]
call sub_4027c0
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x168 ]
call sub_4027c0
mov [ ebp - 0x1d4 ] eax
mov eax [ ebp - 0x1d4 ]
push eax
call sub_47d975
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
call [ FindClose@IAT ]
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x1c ]
sub ecx 0x2
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
lea edx [ ebp - 0x168 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_47c761
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
push rw-data
lea edx [ ebp - 0x168 ]
push edx
call sub_475837
add esp 0x10
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0x18 ]
call sub_4027c0
mov [ ebp - 0x1e0 ] eax
lea ecx [ ebp - 0x168 ]
call sub_4027c0
mov [ ebp - 0x1e4 ] eax
mov eax [ ebp - 0x1e0 ]
push eax
mov ecx [ ebp - 0x1e4 ]
push ecx
call sub_47d953
jmp r-xdata
lea ecx [ ebp - 0x168 ]
push ecx
lea ecx [ ebp - 0x18 ]
call sub_47c761
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
push rw-data
lea edx [ ebp - 0x168 ]
push edx
call sub_475837
add esp 0x14
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x18 ]
call sub_4027c0
mov [ ebp - 0x1d8 ] eax
lea ecx [ ebp - 0x168 ]
call sub_4027c0
mov [ ebp - 0x1dc ] eax
mov eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x1dc ]
push ecx
call sub_47d953
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
push 0x0
lea ecx [ ebp - 0x168 ]
call sub_4027c0
push eax
mov edx [ ebp + 0x8 ]
push edx
call [ CopyFileA@IAT ]
mov [ ebp - 0x1cc ] eax
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x178 ]
call sub_47d56a
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x168 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x1
mov [ ebp - 0x1c ] eax
sub_4345e0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ CharNextA@IAT ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x5c
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_47c7b1
mov eax [ ebp - 0x8 ]
add eax 0x1
push eax
mov ecx [ ebp + 0x10 ]
call sub_47c7b1
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x5c
mov eax 0x1
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
sub_43465c
push ebp
mov ebp esp
push 0xffffffff
push sub_499220
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
call sub_47c5ff
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_47c7b1
lea ecx [ ebp - 0x18 ]
call sub_4027c0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call [ CharNextA@IAT ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
movsx edx [ ecx ]
cmp edx 0x2e
jne r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c7b1
mov ecx [ ebp + 0x8 ]
call sub_47cb4a
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x14 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
sub_434726
push ebp
mov ebp esp
push 0xffffffff
push sub_49924e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_437110
push 0x0
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x28 ]
call [ edx + 0x50 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x28 ]
call [ edx + 0x58 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_437110
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x28 ]
call sub_428c70
push eax
lea ecx [ ebp - 0x18 ]
call sub_47c761
push rw-data
lea ecx [ ebp - 0x18 ]
call sub_47ca04
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x28 ]
call sub_480c30
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x404
call sub_402850
mov ecx eax
call sub_402890
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x20 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x28 ]
call sub_428c70
push eax
lea ecx [ ebp - 0x20 ]
call sub_47c761
lea ecx [ ebp - 0x20 ]
call sub_4027a0
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
sub ecx 0x2
push ecx
lea ecx [ ebp - 0x20 ]
call sub_4027d0
movsx edx al
cmp edx 0x20
jne r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
lea ecx [ ebp - 0x20 ]
call sub_4027d0
movsx ecx al
cmp ecx 0x2a
jne r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x2
push edx
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4754b7
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x24 ]
call sub_47c674
lea ecx [ ebp - 0x20 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x28 ]
call sub_480c30
sub_4348fe
push ebp
mov ebp esp
sub esp 0x94
mov [ ebp - 0x90 ] ecx
push 0x4000
lea eax [ ebp - 0x8c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ OpenFile@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ GetFileAttributesA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x94 ] 0x0
mov eax [ ebp - 0x4 ]
and eax 0x10
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x94 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x94 ]
sub_43496a
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x4 ]
add edi 0xf4
mov ecx 0x88
[ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_43498e
push ebp
mov ebp esp
push 0xffffffff
push sub_499261
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0xb0 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0xb0 ] eax
mov ecx [ ebp - 0x14 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4016b0
test eax eax
je r-xdata
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x50 ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_434a29
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0xb4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0xb4 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_434a52
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x68
call sub_40dbf0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x84 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_41d980
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x84 ]
add ecx eax
mov edx [ ebp - 0x8 ]
mov [ edx + 0x84 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x68
call sub_40dbc0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_434ac1
push ebp
mov ebp esp
push 0xffffffff
push sub_499274
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
mov [ ebp - 0x3c ] ecx
mov eax [ ebp - 0x3c ]
add eax 0x68
push eax
lea ecx [ ebp - 0x20 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
push ecx
mov dl [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_41c1b1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41b22c
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
push 0x1
mov ecx [ ebp - 0x3c ]
mov edx [ ecx ]
mov ecx [ ebp - 0x3c ]
call [ edx + 0x5c ]
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x32c ]
add ecx 0x1
mov edx [ ebp - 0x3c ]
mov [ edx + 0x32c ] ecx
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ecx ] 0xc00001
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0x3c ]
add ecx 0x88
call sub_407e30
cmp [ ebp + 0x10 ] 0x2
je r-xdata
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x28 ]
mov [ edx ] 0xc0000001
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x28 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x3c ]
add ecx 0x9c
call sub_407e30
jmp r-xdata
push 0x1
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ ebp - 0x3c ]
mov ecx [ ecx + 0x738 ]
call sub_4286ae
mov ecx [ ebp - 0x3c ]
call sub_43603c
sub_434c29
push ebp
mov ebp esp
push 0xffffffff
push sub_499287
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x38 ] ecx
mov eax [ ebp - 0x38 ]
add eax 0x68
push eax
lea ecx [ ebp - 0x20 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov cl [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_41c238
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41b22c
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
push 0x1
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x38 ]
call [ edx + 0x5c ]
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x32c ]
add ecx 0x1
mov edx [ ebp - 0x38 ]
mov [ edx + 0x32c ] ecx
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ecx ] 0xc00003
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x38 ]
add ecx 0x88
call sub_407e30
cmp [ ebp + 0x10 ] 0x2
je r-xdata
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
mov [ ecx ] 0xc0000003
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x38 ]
add ecx 0x9c
call sub_407e30
jmp r-xdata
mov ecx [ ebp - 0x38 ]
call sub_434a52
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
mov ecx [ ebp - 0x38 ]
call sub_436e84
push 0x0
mov edx [ ebp + 0x8 ]
push edx
push 0x1
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x738 ]
call sub_4286ae
mov ecx [ ebp - 0x38 ]
call sub_43603c
sub_434d88
push ebp
mov ebp esp
push 0xffffffff
push sub_49929a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
mov [ ebp - 0x3c ] ecx
mov eax [ ebp - 0x3c ]
add eax 0x68
push eax
lea ecx [ ebp - 0x20 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_41c4ef
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41b22c
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push 0x1
mov eax [ ebp - 0x3c ]
mov edx [ eax ]
mov ecx [ ebp - 0x3c ]
call [ edx + 0x5c ]
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x32c ]
add ecx 0x1
mov edx [ ebp - 0x3c ]
mov [ edx + 0x32c ] ecx
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ecx ] 0xc00002
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0x3c ]
add ecx 0x88
call sub_407e30
cmp [ ebp + 0xc ] 0x2
je r-xdata
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ecx ] 0xc0000002
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x3c ]
add ecx 0x9c
call sub_407e30
jmp r-xdata
mov ecx [ ebp - 0x3c ]
call sub_434a52
push 0x1
mov eax [ ebp + 0x8 ]
push eax
push 0x2
mov ecx [ ebp - 0x3c ]
call sub_436e84
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
mov edx [ ebp - 0x3c ]
mov ecx [ edx + 0x738 ]
call sub_4286ae
mov ecx [ ebp - 0x3c ]
call sub_43603c
sub_434f03
push ebp
mov ebp esp
push 0xffffffff
push sub_4992ad
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x2c ]
add eax 0x68
push eax
lea ecx [ ebp - 0x20 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
push ecx
mov dl [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_41c676
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41b22c
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x738 ]
call sub_4286ae
sub_434f92
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_435078
mov esp ebp
pop ebp
retn 0x8
sub_434fb3
push ebp
mov ebp esp
push 0xffffffff
push sub_4992c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x84 ]
jb r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x68
push edx
lea ecx [ ebp - 0x28 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_41c709
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_41b22c
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
push 0x408
call sub_402850
mov ecx eax
call sub_402890
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_435078
push ebp
mov ebp esp
push 0xffffffff
push sub_4992d3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x40 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x84 ]
jb r-xdata
mov edx [ ebp - 0x40 ]
add edx 0x68
push edx
lea ecx [ ebp - 0x28 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_41c8e3
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_41b22c
mov eax [ ebp - 0x3c ]
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
push 0x1
mov ecx [ ebp - 0x40 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x40 ]
call [ edx + 0x5c ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x32c ]
add ecx 0x1
mov edx [ ebp - 0x40 ]
mov [ edx + 0x32c ] ecx
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ecx ] 0xc00008
mov edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x40 ]
add ecx 0x88
call sub_407e30
cmp [ ebp + 0x10 ] 0x2
je r-xdata
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov [ edx ] 0xc0000008
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x40 ]
add ecx 0x9c
call sub_407e30
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x40 ]
call sub_43603c
mov ecx [ ebp - 0x40 ]
call sub_434a52
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x2
mov ecx [ ebp - 0x40 ]
call sub_436e84
mov ecx [ ebp + 0xc ]
sub ecx [ ebp + 0x8 ]
add ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x1
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x738 ]
call sub_4286ae
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
push 0x408
call sub_402850
mov ecx eax
call sub_402890
sub_435240
push ebp
mov ebp esp
push 0xffffffff
push sub_4992e6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x38 ] ecx
mov eax [ ebp - 0x38 ]
add eax 0x68
push eax
lea ecx [ ebp - 0x20 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_41ccbd
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41b22c
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
push 0x1
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x38 ]
call [ edx + 0x5c ]
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x32c ]
add ecx 0x1
mov edx [ ebp - 0x38 ]
mov [ edx + 0x32c ] ecx
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ecx ] 0xc00007
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx - 0x1 ]
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x38 ]
add ecx 0x88
call sub_407e30
cmp [ ebp + 0x14 ] 0x2
je r-xdata
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
mov [ edx ] 0xc0000007
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx - 0x1 ]
mov edx [ ebp - 0x24 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x38 ]
add ecx 0x9c
call sub_407e30
jmp r-xdata
mov ecx [ ebp - 0x38 ]
call sub_434a52
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
mov ecx [ ebp - 0x38 ]
call sub_436e84
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp - 0x38 ]
mov ecx [ ecx + 0x738 ]
call sub_4286ae
mov ecx [ ebp - 0x38 ]
call sub_43603c
sub_4353b5
push ebp
mov ebp esp
push 0xffffffff
push sub_4992f9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x40 ]
add eax 0x68
push eax
lea ecx [ ebp - 0x28 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
sub ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_41cf5f
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_41b22c
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push 0x1
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
mov ecx [ ebp - 0x40 ]
call [ eax + 0x5c ]
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + 0x32c ]
add edx 0x1
mov eax [ ebp - 0x40 ]
mov [ eax + 0x32c ] edx
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
mov [ edx ] 0xc00009
mov eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx - 0x1 ]
mov edx [ ebp - 0x30 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0x10 ] eax
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x40 ]
add ecx 0x88
call sub_407e30
cmp [ ebp + 0x18 ] 0x2
je r-xdata
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov [ edx ] 0xc0000009
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx - 0x1 ]
mov edx [ ebp - 0x2c ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0x10 ] eax
mov ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x40 ]
add ecx 0x9c
call sub_407e30
jmp r-xdata
mov ecx [ ebp - 0x40 ]
call sub_434a52
mov edx [ ebp - 0x14 ]
cmp edx [ ebp + 0x14 ]
jbe r-xdata
mov ecx [ ebp - 0x40 ]
call sub_43603c
mov edx [ ebp - 0x14 ]
cmp edx [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x2
mov ecx [ ebp - 0x40 ]
call sub_436e84
jmp r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
xor edx edx
cmp ecx [ ebp + 0x14 ]
setne dl
push edx
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x738 ]
call sub_4286ae
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
mov ecx [ ebp - 0x40 ]
call sub_436e84
sub_435599
push ebp
mov ebp esp
push 0xffffffff
push sub_49930c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x38 ] ecx
mov eax [ ebp - 0x38 ]
add eax 0x68
push eax
lea ecx [ ebp - 0x28 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
sub ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
lea edx [ ebp - 0x14 ]
push edx
mov al [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_41d7ad
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_41b22c
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
push 0x1
mov eax [ ebp - 0x38 ]
mov edx [ eax ]
mov ecx [ ebp - 0x38 ]
call [ edx + 0x5c ]
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x32c ]
add ecx 0x1
mov edx [ ebp - 0x38 ]
mov [ edx + 0x32c ] ecx
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ecx ] 0xc0000a
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp + 0x10 ]
and edx 0xff
mov eax [ ebp - 0x2c ]
mov [ eax + 0x10 ] edx
mov ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x38 ]
add ecx 0x88
call sub_407e30
cmp [ ebp + 0x14 ] 0x2
je r-xdata
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ ebp - 0x38 ]
mov ecx [ ecx + 0x738 ]
call sub_4286ae
mov ecx [ ebp - 0x38 ]
call sub_43603c
sub_4356cc
push ebp
mov ebp esp
push 0xffffffff
push sub_49931f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
mov [ ebp - 0x3c ] ecx
mov eax [ ebp - 0x3c ]
add eax 0x68
push eax
lea ecx [ ebp - 0x28 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
sub ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_41cf5f
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_41b22c
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
sub ecx [ ebp + 0x8 ]
add ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x0
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x738 ]
call sub_4286ae
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov [ edx ] 0xc000000a
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x2c ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x3c ]
add ecx 0x9c
call sub_407e30
sub_4357e0
push ebp
mov ebp esp
sub esp 0x50
mov [ ebp - 0x4c ] ecx
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_41b1b0
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
sub ecx 0xc00001
mov [ ebp - 0x50 ] ecx
cmp [ ebp - 0x50 ] 0x9
ja r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x48 ]
push ecx
call sub_47c3de
add esp 0x4
push 0x1
mov edx [ ebp - 0x1c ]
sub edx 0x1
push edx
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_47763d
mov edx [ ebp - 0x50 ]
jmp [ edx * 4 + jump_table_435b41 ]
mov esp ebp
pop ebp
retn
push 0x1
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4c ]
call sub_434ac1
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_47763d
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x4c ]
call sub_434c29
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
call sub_47c3de
add esp 0x4
push 0x1
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_47763d
jmp r-xdata
push 0x1
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4c ]
call sub_434d88
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x28 ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_47763d
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x4c ]
call sub_435078
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
push eax
call sub_47c3de
add esp 0x4
push 0x1
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_47763d
jmp r-xdata
push 0x1
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x8 ]
sub eax [ edx + 0x4 ]
add eax 0x1
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x4c ]
call sub_435240
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
push eax
call sub_47c3de
add esp 0x4
push 0x1
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_47763d
jmp r-xdata
push 0x1
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4c ]
call sub_4353b5
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x3c ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_47763d
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4c ]
call sub_4356cc
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x8 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x40 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
push ecx
call sub_47c3de
add esp 0x4
push 0x1
mov edx [ ebp - 0x1c ]
sub edx 0x1
push edx
mov ecx [ ebp - 0x4c ]
add ecx 0x88
call sub_47763d
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x32c ]
sub ecx 0x1
mov edx [ ebp - 0x4c ]
mov [ edx + 0x32c ] ecx
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x32c ]
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ edx ]
mov ecx [ ebp - 0x4c ]
call [ eax + 0x5c ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x84 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
push 0x0
mov ecx [ ebp - 0x4c ]
call sub_481a51
mov eax 0x1
sub_435b69
push ebp
mov ebp esp
sub esp 0x4c
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_41b1b0
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x4c ]
add ecx 0x3fffffff
mov [ ebp - 0x4c ] ecx
cmp [ ebp - 0x4c ] 0x9
ja r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp - 0x44 ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_47763d
mov edx [ ebp - 0x4c ]
jmp [ edx * 4 + jump_table_435ebb ]
mov esp ebp
pop ebp
retn
push 0x2
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x48 ]
call sub_434ac1
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
push eax
call sub_47c3de
add esp 0x4
push 0x1
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_47763d
jmp r-xdata
push 0x2
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x48 ]
call sub_434c29
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_47763d
jmp r-xdata
push 0x2
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x48 ]
call sub_434d88
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
push ecx
call sub_47c3de
add esp 0x4
push 0x1
mov edx [ ebp - 0x1c ]
sub edx 0x1
push edx
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_47763d
jmp r-xdata
push 0x1
push 0x2
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x48 ]
call sub_435078
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_47763d
jmp r-xdata
push 0x2
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
sub edx [ ecx + 0x4 ]
add edx 0x1
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x48 ]
call sub_435240
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_47763d
jmp r-xdata
push 0x2
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx [ ebp - 0x48 ]
call sub_4353b5
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
add ecx [ eax + 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
push eax
call sub_47c3de
add esp 0x4
push 0x1
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_47763d
jmp r-xdata
push 0x2
mov edx [ ebp - 0x4 ]
mov al [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x48 ]
call sub_435599
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x40 ]
push edx
call sub_47c3de
add esp 0x4
push 0x1
mov eax [ ebp - 0x1c ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0x9c
call sub_47763d
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x32c ]
push edx
mov eax [ ebp - 0x48 ]
mov edx [ eax ]
mov ecx [ ebp - 0x48 ]
call [ edx + 0x5c ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x84 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
push 0x0
mov ecx [ ebp - 0x48 ]
call sub_481a51
mov eax 0x1
sub_435ee3
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x88
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x30 ]
add ecx 0x88
call sub_407e10
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x30 ]
add ecx 0x88
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
sub eax 0xc00001
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x9
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
push edx
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x34 ]
jmp [ ecx * 4 + jump_table_436014 ]
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
jmp r-xdata
sub_43603c
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x9c
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x9c
call sub_407e10
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x28 ]
add ecx 0x9c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
add eax 0x3fffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x9
ja r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x2c ]
jmp [ ecx * 4 + jump_table_43613d ]
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
jmp r-xdata
sub_436165
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x68
call sub_40db02
mov ecx [ ebp - 0x4 ]
call sub_435ee3
mov ecx [ ebp - 0x4 ]
call sub_43603c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x84 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_480c4d
mov esp ebp
pop ebp
retn
sub_4361a0
push ebp
mov ebp esp
push 0xffffffff
push sub_499332
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4016b0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_481992
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x54 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x50
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x50 ]
call [ eax + 0x4c ]
sub_43621f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x6c ]
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_433223
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x84 ]
push ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_436e84
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x84 ]
push eax
push 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x738 ]
call sub_4286ae
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x5c ]
sub_43628c
push ebp
mov ebp esp
push 0xffffffff
push sub_499360
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x20 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0xb0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
call sub_428c70
push eax
lea ecx [ ebp - 0x14 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_4016b0
test eax eax
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x20 ]
call sub_4345e0
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x20 ]
call [ eax + 0x58 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x20 ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x20 ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_480c30
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x20 ]
call sub_480c30
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_47c674
push rw-data
lea ecx [ ebp - 0x1c ]
call sub_47ca04
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x20 ]
call sub_480c30
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47ca04
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x20 ]
call sub_480c30
push rw-data
lea ecx [ ebp - 0x14 ]
call sub_47ca04
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_43640b
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0x88
call sub_416b40
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x88
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_436450
push ebp
mov ebp esp
push 0xffffffff
push sub_499382
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x150
mov [ ebp - 0x15c ] ecx
mov eax [ ebp - 0x15c ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x15c ]
cmp [ ecx + 0x54 ] 0xffffffff
jne r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ ebp - 0x130 ]
call sub_432e40
lea ecx [ ebp - 0x130 ]
push ecx
mov ecx [ ebp - 0x15c ]
add ecx 0x50
call sub_47ec8d
lea edx [ ebp - 0x12c ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_437090
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ecx [ ebp - 0x15c ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x14c ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14c ]
call sub_4016b0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x15c ]
add eax 0x330
push ecx
mov ecx esp
mov [ ebp - 0x158 ] esp
push eax
call sub_437090
lea ecx [ ebp - 0x14 ]
call sub_4370b0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x15c ]
add ecx 0x50
mov eax [ ebp - 0x15c ]
mov edx [ eax + 0x50 ]
call [ edx + 0x4c ]
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x148 ] 0x40
push 0x0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x144 ]
call sub_4035b0
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
lea ecx [ ebp - 0x14c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x15c ]
add ecx 0x50
mov edx [ ebp - 0x15c ]
mov eax [ edx + 0x50 ]
call [ eax + 0x20 ]
test eax eax
jne r-xdata
mov [ ebp - 0x150 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14c ]
call sub_47c674
mov eax [ ebp - 0x150 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x15c ]
add ecx 0x330
call sub_437070
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x144 ]
call sub_403680
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14c ]
call sub_47c674
mov [ ebp - 0x154 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x144 ]
call sub_403680
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14c ]
call sub_47c674
mov eax [ ebp - 0x154 ]
jmp r-xdata
sub_436640
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x334 ]
cmp [ ecx + 0x5c ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0xffffff
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push 0x400
mov edx [ ebp - 0x8 ]
add edx 0x338
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_467a70
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x4 ] 0x20
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 ] 0xffff00
jmp r-xdata
cmp [ ebp - 0x4 ] 0x80
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x4 ] 0x80
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 ] 0xff
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_436702
push ebp
mov ebp esp
push 0xffffffff
push sub_499395
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x7ffe
je r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_4367a6
jmp r-xdata
cmp [ ebp - 0x1c ] 0x7fff
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x18 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c761
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_436866
jmp r-xdata
sub_4367a6
push ebp
mov ebp esp
sub esp 0x2f8
push esi
push edi
mov [ ebp - 0x2f8 ] ecx
mov [ ebp - 0x2f4 ] 0xf
push 0x0
lea eax [ ebp - 0x2f4 ]
push eax
push 0x400
call sub_402850
mov ecx eax
call sub_402890
mov edi [ ebp - 0x2f8 ]
add edi 0xb8
mov ecx 0xf
lea esi [ ebp - 0xd0 ]
[ edi ] [ esi ]
mov edi [ ebp - 0x2f8 ]
add edi 0xf4
mov ecx 0x88
lea esi [ ebp - 0x2f0 ]
[ edi ] [ esi ]
mov edi [ ebp - 0x2f8 ]
add edi 0x314
mov ecx 0x6
lea esi [ ebp - 0x94 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x64 ]
push ecx
mov ecx [ ebp - 0x2f8 ]
call sub_43498e
mov edx [ ebp - 0xa8 ]
push edx
mov ecx [ ebp - 0x2f8 ]
call sub_434a29
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x0
push 0xe
push 0x0
mov ecx [ ebp - 0x2f8 ]
call sub_481a51
sub_436866
push ebp
mov ebp esp
push 0xffffffff
push sub_4993ab
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x308
mov [ ebp - 0x314 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x304 ] 0x28
push 0x0
lea ecx [ ebp - 0x304 ]
push ecx
push 0x400
call sub_402850
mov ecx eax
call sub_402890
mov edx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x304 ] 0x8
push 0x0
lea eax [ ebp - 0x304 ]
push eax
push 0x400
call sub_402850
mov ecx eax
call sub_402890
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41b1b0
mov [ ebp - 0x310 ] eax
mov [ ebp - 0x30c ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x308 ]
push ecx
mov ecx [ ebp - 0x314 ]
call sub_43465c
lea ecx [ ebp - 0x308 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x30c ]
cmp eax [ ebp - 0x310 ]
jge r-xdata
mov ecx [ ebp - 0x30c ]
cmp ecx [ ebp - 0x310 ]
jne r-xdata
mov ecx [ ebp - 0x30c ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402780
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x308 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
mov edx [ ebp - 0x30c ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_402780
mov ecx [ ebp - 0x314 ]
mov [ ecx + 0x334 ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x30c ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x314 ]
call sub_436aaa
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x314 ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
mov edx [ ebp - 0x30c ]
add edx 0x1
mov [ ebp - 0x30c ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x308 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
push 0x0
push 0xf
push 0x0
mov ecx [ ebp - 0x314 ]
call sub_481a51
mov edx [ ebp - 0x314 ]
mov eax [ edx + 0x334 ]
mov ecx [ ebp - 0x314 ]
mov edx [ eax + 0x94 ]
mov [ ecx + 0x73c ] edx
mov eax [ ebp - 0x314 ]
mov ecx [ eax + 0x334 ]
mov edx [ ebp - 0x314 ]
mov eax [ ecx + 0xa8 ]
mov [ edx + 0x740 ] eax
mov ecx [ ebp - 0x314 ]
mov edx [ ecx + 0x334 ]
mov eax [ ebp - 0x314 ]
mov ecx [ edx + 0xa4 ]
mov [ eax + 0x744 ] ecx
cmp [ ebp - 0x98 ] 0x0
je r-xdata
mov ecx [ ebp - 0x314 ]
mov edx [ ecx + 0x334 ]
cmp [ edx + 0x90 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x314 ]
mov [ ecx + 0x64 ] 0x2
mov eax [ ebp - 0x314 ]
mov [ eax + 0x64 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x314 ]
mov [ eax + 0x64 ] 0x2
jmp r-xdata
sub_436aaa
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x334 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x100
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x334 ]
add ecx 0x48
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x338 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x14 ]
mov ecx [ edx + 0x334 ]
add ecx 0x48
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ eax + edx * 4 + 0x338 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_436b54
push ebp
mov ebp esp
push 0xffffffff
push sub_4993be
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
mov [ ebp - 0x44 ] ecx
mov eax [ ebp - 0x44 ]
add eax 0x68
push eax
lea ecx [ ebp - 0x1c ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_41b237
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov eax [ ebp + 0x10 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_41b7fb
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp eax [ ebp + 0xc ]
jge r-xdata
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41b22c
mov eax [ ebp - 0x38 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp + 0x10 ]
add ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x44 ]
call sub_435240
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41b22c
mov eax [ ebp - 0x40 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp + 0xc ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push 0x8
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_481a51
mov ecx [ ebp + 0xc ]
sub ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
add edx ecx
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41b22c
mov eax [ ebp - 0x3c ]
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
push 0x0
call sub_402850
mov ecx eax
call sub_48a6e8
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov ecx [ ebp - 0x30 ]
call sub_48c57e
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax - 0x1 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_45d263
push 0x0
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x34 ]
call sub_44d960
sub_436ce5
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x64 ] 0x2
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x64 ]
push edx
push 0x11
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_481a51
mov eax 0x1
sub_436d39
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x73c ] 0x0
sete cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x73c ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x73c ]
push ecx
push 0x12
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_481a51
mov esp ebp
pop ebp
retn
sub_436d72
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x5
jle r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x744 ]
je r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x744 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x744 ]
push edx
push 0xc
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_481a51
sub_436dc4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
jle r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x740 ]
je r-xdata
mov eax 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x740 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x740 ]
push edx
push 0xd
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_481a51
sub_436e16
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x748
call sub_42943a
mov edx [ ebp + 0x8 ]
push edx
push 0x13
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_481a51
mov esp ebp
pop ebp
retn 0x8
sub_436e49
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x78 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x54 ]
sub_436e84
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x324 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x748
call sub_4297f0
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x748
call sub_4370d0
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x748
call sub_4370d0
mov ecx [ eax ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x748
call sub_4296c4
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0xc ]
add edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x748
call sub_4370d0
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
add eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x748
call sub_4370d0
mov eax [ eax ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x748
call sub_4370d0
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
sub eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x748
call sub_4296c4
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_437020
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4330cf
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_437050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0x28 ]
mov esp ebp
pop ebp
retn
sub_43717b
push ebp
mov ebp esp
push 0xffffffff
push sub_49940c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x514
mov [ ebp - 0x520 ] ecx
mov [ ebp - 0x4fc ] 0x21
push 0x0
lea eax [ ebp - 0x4fc ]
push eax
push 0x400
call sub_402850
mov ecx eax
call sub_402890
push 0x0
push 0x0
push 0x6
push 0x0
push 0x0
mov ecx [ ebp + 0x14 ]
push ecx
lea ecx [ ebp - 0x208 ]
call sub_475893
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x518 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x518 ]
call sub_47e84a
mov eax [ ebp - 0x178 ]
or eax [ ebp + 0x10 ]
mov [ ebp - 0x178 ] eax
cmp [ ebp - 0x2dc ] 0x0
je r-xdata
lea ecx [ ebp - 0x514 ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x508 ]
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x22c ]
call sub_41b1b0
mov [ ebp - 0x50c ] eax
lea ecx [ ebp - 0x510 ]
call sub_401690
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x504 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x178 ]
or ecx 0x100000
mov [ ebp - 0x178 ] ecx
mov eax [ ebp - 0x504 ]
cmp eax [ ebp - 0x50c ]
jge r-xdata
lea ecx [ ebp - 0x514 ]
call sub_4027c0
mov [ ebp - 0x1a0 ] eax
lea ecx [ ebp - 0x518 ]
call sub_4027c0
mov [ ebp - 0x17c ] eax
push 0x104
mov ecx [ ebp + 0x8 ]
call sub_47ca58
mov [ ebp - 0x190 ] eax
mov eax [ ebp - 0x20c ]
cmp [ eax + 0x114 ] 0x0
je r-xdata
mov ecx [ ebp - 0x504 ]
push ecx
mov ecx [ ebp - 0x22c ]
call sub_402780
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
add edx 0x4
push edx
lea ecx [ ebp - 0x514 ]
call sub_47ca40
push 0x28
lea ecx [ ebp - 0x514 ]
call sub_47ca2b
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push ecx
push rw-data
lea edx [ ebp - 0x510 ]
push edx
call sub_475837
add esp 0xc
lea eax [ ebp - 0x510 ]
push eax
lea ecx [ ebp - 0x514 ]
call sub_47ca40
push 0x29
lea ecx [ ebp - 0x514 ]
call sub_47ca2b
push 0x0
lea ecx [ ebp - 0x514 ]
call sub_47ca2b
lea ecx [ ebp - 0x510 ]
push ecx
lea ecx [ ebp - 0x514 ]
call sub_47ca40
push 0x0
lea ecx [ ebp - 0x514 ]
call sub_47ca2b
mov edx [ ebp - 0x198 ]
add edx 0x1
mov [ ebp - 0x198 ] edx
jmp r-xdata
lea ecx [ ebp - 0x208 ]
call sub_4759f5
sub eax 0x1
neg eax
sbb eax eax
inc eax
mov [ ebp - 0x500 ] eax
push 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_47caa7
mov edx [ ebp - 0x500 ]
mov [ ebp - 0x51c ] edx
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x510 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x508 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x514 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x518 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x208 ]
call sub_402730
mov eax [ ebp - 0x51c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp - 0x20c ]
add ecx 0x118
mov [ ebp - 0x180 ] ecx
mov edx [ ebp - 0x504 ]
add edx 0x1
mov [ ebp - 0x504 ] edx
sub_43742c
push ebp
mov ebp esp
sub esp 0x238
mov [ ebp - 0x238 ] ecx
mov ecx [ ebp - 0x238 ]
add ecx 0x4
call sub_437690
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10c ] 0x0
mov [ ebp - 0x218 ] 0x0
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
cmp ecx 0x22
jne r-xdata
push 0x104
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
call [ lstrcpynA@IAT ]
push 0x22
lea edx [ ebp - 0x210 ]
push edx
call sub_437670
add esp 0x8
mov [ ebp - 0x214 ] eax
cmp [ ebp - 0x214 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
lea ecx [ ebp - 0x210 ]
push ecx
lea edx [ ebp - 0x108 ]
push edx
call sub_47dcaf
mov eax [ ebp - 0x214 ]
mov [ eax ] 0x0
cmp [ ebp - 0x218 ] 0x0
je r-xdata
lea eax [ ebp - 0x21c ]
push eax
mov ecx [ ebp - 0x238 ]
add ecx 0x4
call sub_4376b0
mov ecx [ eax ]
mov [ ebp - 0x220 ] ecx
lea edx [ ebp - 0x218 ]
push edx
lea eax [ ebp - 0x108 ]
push eax
mov ecx [ ebp - 0x220 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x220 ]
call [ edx + 0x68 ]
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x224 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
cmp [ ebp - 0x10c ] 0x0
jne r-xdata
mov eax [ ebp - 0x218 ]
mov edx [ eax ]
mov ecx [ ebp - 0x218 ]
call [ edx + 0x60 ]
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0x0
je r-xdata
cmp [ ebp - 0x224 ] 0x5
jne r-xdata
mov ecx [ ebp - 0x224 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x220 ]
mov [ ebp - 0x10c ] edx
push 0x1
lea ecx [ ebp - 0x108 ]
push ecx
mov edx [ ebp - 0x10c ]
mov eax [ edx ]
mov ecx [ ebp - 0x10c ]
call [ eax + 0x80 ]
push 0xffffffff
push 0x0
push 0xf101
call sub_4840fb
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x218 ]
jmp r-xdata
lea eax [ ebp - 0x228 ]
push eax
mov ecx [ ebp - 0x218 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x218 ]
call [ edx + 0x64 ]
mov [ ebp - 0x22c ] eax
mov ecx [ ebp - 0x22c ]
call sub_47a2e8
mov [ ebp - 0x230 ] eax
cmp [ ebp - 0x230 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
call sub_4036e0
mov eax [ eax + 0x1c ]
mov [ ebp - 0x234 ] eax
mov ecx [ ebp - 0x230 ]
cmp ecx [ ebp - 0x234 ]
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x230 ]
mov edx [ eax ]
mov ecx [ ebp - 0x230 ]
call [ edx + 0xcc ]
cmp [ ebp - 0x21c ] 0x0
je r-xdata
push 0xffffffff
mov edx [ ebp - 0x234 ]
mov eax [ edx ]
mov ecx [ ebp - 0x234 ]
call [ eax + 0xcc ]
sub_437640
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_43715f
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4376b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
mov esp ebp
pop ebp
retn 0x4
sub_4376e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_412030
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x240 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x244 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x250 ] 0xffffffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x258 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_437746
push ebp
mov ebp esp
push 0xffffffff
push sub_499429
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_43928b
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_412232
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4377a7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_412387
mov esp ebp
pop ebp
retn 0x10
sub_4377cc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x248 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x24c ] eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4123fa
mov esp ebp
pop ebp
retn 0x14
sub_437805
push ebp
mov ebp esp
push 0xffffffff
push sub_4994d5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2e0
push esi
mov [ ebp - 0x2ac ] ecx
mov eax [ ebp - 0x2ac ]
push eax
lea ecx [ ebp - 0xcc ]
call sub_4805ce
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x2ac ]
call sub_40d400
push eax
lea ecx [ ebp - 0xcc ]
call sub_47fe32
lea ecx [ ebp - 0xcc ]
mov [ ebp - 0x108 ] ecx
lea ecx [ ebp - 0xec ]
call sub_428cd0
lea edx [ ebp - 0xec ]
push edx
mov eax [ ebp - 0x108 ]
mov edx [ eax ]
mov ecx [ ebp - 0x108 ]
call [ edx + 0x50 ]
mov eax [ ebp - 0x2ac ]
add eax 0x1b0
push eax
mov ecx [ ebp - 0x108 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x108 ]
call [ edx + 0x28 ]
mov [ ebp - 0x104 ] eax
push 0x8
call [ GetSysColor@IAT ]
mov [ ebp - 0x20 ] eax
push 0x5
call [ GetSysColor@IAT ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0xd8 ]
call sub_416cb0
mov [ ebp - 0x4 ] 0x1
push 0x5
call [ GetSysColor@IAT ]
xor eax 0x3d3d3d
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0xd8 ]
call sub_416d20
lea eax [ ebp - 0xd8 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_47fe32
mov [ ebp - 0xd0 ] eax
lea ecx [ ebp - 0x74 ]
call sub_416cb0
mov [ ebp - 0x4 ] 0x2
push 0xf
call [ GetSysColor@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
and eax 0xff
imul eax eax 0x4b
cdq
mov ecx 0x64
idiv ecx
mov ecx eax
and ecx 0xff
mov eax [ ebp - 0x1c ]
and eax 0xffff
sar eax 0x8
and eax 0xff
imul eax eax 0x4b
cdq
mov esi 0x64
idiv esi
and eax 0xff
shl eax 0x8
or ecx eax
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
imul eax eax 0x4b
cdq
mov esi 0x64
idiv esi
and eax 0xff
shl eax 0x10
or ecx eax
mov [ ebp - 0x1c ] ecx
mov esi [ ebp - 0x1c ]
not esi
and esi 0xffffff
push 0x5
call [ GetSysColor@IAT ]
xor esi eax
push esi
push 0x1
push 0x0
lea ecx [ ebp - 0x74 ]
call sub_416d20
lea ecx [ ebp - 0x100 ]
call sub_416cb0
mov [ ebp - 0x4 ] 0x3
push 0x0
push 0x1
push 0x0
lea ecx [ ebp - 0x100 ]
call sub_416d20
lea ecx [ ebp - 0xf8 ]
call sub_406640
mov [ ebp - 0x4 ] 0x4
push 0xffffff
lea ecx [ ebp - 0xf8 ]
call sub_406660
lea ecx [ ebp - 0x14 ]
call sub_406640
mov [ ebp - 0x4 ] 0x5
mov edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_406660
lea eax [ ebp - 0x68 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_405d30
mov ecx [ ebp - 0x2ac ]
add ecx 0x1d8
mov edx [ ecx ]
mov [ ebp - 0x30 ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] eax
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x28 ] edx
mov eax [ ecx + 0xc ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x2ac ]
add ecx 0x1d8
call sub_404fe0
mov esi eax
mov ecx [ ebp - 0x2ac ]
add ecx 0x1c8
call sub_404fe0
sub esi eax
mov ecx [ ebp - 0x2ac ]
mov eax esi
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0x6c ] eax
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x208 ]
mov ecx [ ebp - 0x6c ]
lea esi [ eax + ecx + 0x1 ]
mov ecx [ ebp - 0x2ac ]
add ecx 0x190
call sub_41b1b0
cmp esi eax
jge r-xdata
mov ecx [ ebp - 0x2ac ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x2b0 ] eax
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x208 ]
mov ecx [ ebp - 0x6c ]
lea edx [ eax + ecx + 0x1 ]
mov [ ebp - 0x2b0 ] edx
jmp r-xdata
mov edx [ ebp - 0x2ac ]
mov eax [ ebp - 0xe8 ]
cmp eax [ edx + 0x1dc ]
jle r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0xec ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_405210
mov eax [ ebp - 0x2ac ]
cmp [ eax + 0x214 ] 0x0
je r-xdata
mov eax [ ebp - 0x2b0 ]
mov [ ebp - 0xf0 ] eax
mov ecx [ ebp - 0x2ac ]
add ecx 0x190
call sub_41b1b0
test eax eax
jne r-xdata
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1dc ]
mov [ ebp - 0x2b4 ] eax
mov ecx [ ebp - 0xe8 ]
mov [ ebp - 0x2b4 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2ac ]
cmp [ ecx + 0x218 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x2ac ]
mov eax [ ebp - 0x134 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x2ac ]
mov ecx [ edx + 0x208 ]
lea edx [ eax + ecx - 0x1 ]
mov [ ebp - 0x2b8 ] edx
mov [ ebp - 0x2b8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2ac ]
mov edx [ ebp - 0x2b4 ]
sub edx [ ecx + 0x1dc ]
mov [ ebp - 0x134 ] edx
mov ecx [ ebp - 0x2ac ]
mov eax [ ebp - 0x134 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x2ac ]
mov ecx [ edx + 0x208 ]
lea edx [ eax + ecx - 0x1 ]
test edx edx
jge r-xdata
mov eax [ ebp - 0x2ac ]
mov ecx [ ebp - 0x2ac ]
mov edx [ eax + 0x1f0 ]
cmp edx [ ecx + 0x1e8 ]
je r-xdata
mov ecx [ ebp - 0x2ac ]
call sub_415153
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1e4 ]
add eax 0x1
mov [ ebp - 0x2bc ] eax
mov ecx [ ebp - 0xe0 ]
add ecx 0x1
mov [ ebp - 0x2bc ] ecx
jmp r-xdata
mov eax [ ebp - 0x2b8 ]
mov [ ebp - 0x110 ] eax
mov ecx [ ebp - 0xe0 ]
add ecx 0x1
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1e4 ]
add eax 0x1
cmp ecx eax
jge r-xdata
mov ecx [ ebp - 0x104 ]
push ecx
mov edx [ ebp - 0x108 ]
mov eax [ edx ]
mov ecx [ ebp - 0x108 ]
call [ eax + 0x28 ]
mov ecx [ ebp - 0xd0 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
lea ecx [ ebp - 0xd8 ]
call sub_480765
lea ecx [ ebp - 0x100 ]
call sub_480765
lea ecx [ ebp - 0x74 ]
call sub_480765
lea ecx [ ebp - 0xf8 ]
call sub_480765
lea ecx [ ebp - 0x14 ]
call sub_480765
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x14 ]
call sub_405020
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0xf8 ]
call sub_405020
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x100 ]
call sub_416d00
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x74 ]
call sub_416d00
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xd8 ]
call sub_416d00
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xcc ]
call sub_480640
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2ac ]
mov ecx [ ebp - 0x2ac ]
mov edx [ eax + 0x204 ]
cmp edx [ ecx + 0x1fc ]
je r-xdata
mov ecx [ ebp - 0x2ac ]
mov eax [ ebp - 0x134 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x2ac ]
mov ecx [ edx + 0x208 ]
lea edx [ eax + ecx + 0x1 ]
mov [ ebp - 0x2c0 ] edx
mov ecx [ ebp - 0x2ac ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x2c0 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2ac ]
mov edx [ ebp - 0x2bc ]
sub edx [ ecx + 0x1dc ]
mov [ ebp - 0x134 ] edx
mov ecx [ ebp - 0x2ac ]
add ecx 0x190
call sub_41b1b0
mov ecx eax
mov esi [ ebp - 0x2ac ]
mov eax [ ebp - 0x134 ]
cdq
idiv [ esi + 0x1a8 ]
mov edx [ ebp - 0x2ac ]
mov edx [ edx + 0x208 ]
lea eax [ eax + edx + 0x1 ]
cmp ecx eax
jge r-xdata
lea ecx [ ebp - 0x200 ]
call sub_428cd0
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1e8 ]
mov [ ebp - 0x200 ] ecx
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1fc ]
mov [ ebp - 0x1fc ] eax
mov ecx [ ebp - 0x2ac ]
mov edx [ ecx + 0x1f0 ]
mov [ ebp - 0x1f8 ] edx
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x204 ]
mov [ ebp - 0x1f4 ] ecx
lea ecx [ ebp - 0x1f0 ]
call sub_406640
mov [ ebp - 0x4 ] 0xd
push 0xf
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x1f0 ]
call sub_406660
lea edx [ ebp - 0x1f0 ]
push edx
lea eax [ ebp - 0x200 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_405210
lea ecx [ ebp - 0x1f0 ]
call sub_480765
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x1f0 ]
call sub_405020
mov ecx [ ebp - 0x78 ]
cmp ecx [ ebp - 0x128 ]
jge r-xdata
mov eax [ ebp - 0x2c0 ]
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x2ac ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x128 ] eax
mov ecx [ ebp - 0x128 ]
lea edx [ ecx * 4 + 0x4 ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x204 ] eax
mov eax [ ebp - 0x204 ]
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x2ac ]
mov edx [ ebp - 0x2ac ]
mov eax [ ecx + 0x1d8 ]
sub eax [ edx + 0x20c ]
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x78 ] 0x0
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x144 ]
mov [ ecx ] edx
jmp r-xdata
mov eax [ ebp - 0x2ac ]
mov ecx [ ebp - 0xec ]
cmp ecx [ eax + 0x1d8 ]
jle r-xdata
mov edx [ ebp - 0x78 ]
push edx
mov ecx [ ebp - 0x2ac ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x120 ] eax
mov ecx [ ebp - 0x120 ]
mov edx [ ebp - 0x144 ]
add edx [ ecx + 0x4 ]
mov [ ebp - 0x144 ] edx
mov eax [ ebp - 0x78 ]
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x144 ]
mov [ ecx + eax * 4 + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1d8 ]
mov [ ebp - 0x2c4 ] ecx
mov edx [ ebp - 0xec ]
mov [ ebp - 0x2c4 ] edx
jmp r-xdata
mov eax [ ebp - 0x78 ]
add eax 0x1
mov [ ebp - 0x78 ] eax
mov edx [ ebp - 0x78 ]
cmp edx [ ebp - 0x128 ]
jg r-xdata
mov edx [ ebp - 0x2ac ]
mov eax [ ebp - 0x2c4 ]
sub eax [ edx + 0x1d8 ]
mov [ ebp - 0x134 ] eax
mov [ ebp - 0x78 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x78 ]
sub eax 0x1
test eax eax
jge r-xdata
mov eax [ ebp - 0x78 ]
mov ecx [ ebp - 0x130 ]
mov edx [ ecx + eax * 4 ]
cmp edx [ ebp - 0x134 ]
jl r-xdata
mov ecx [ ebp - 0x78 ]
sub ecx 0x1
mov [ ebp - 0x2c8 ] ecx
mov [ ebp - 0x2c8 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1e0 ]
mov [ ebp - 0x2cc ] ecx
mov edx [ ebp - 0xe4 ]
mov [ ebp - 0x2cc ] edx
jmp r-xdata
mov edx [ ebp - 0x2c8 ]
mov [ ebp - 0x140 ] edx
mov eax [ ebp - 0x2ac ]
mov ecx [ ebp - 0xe4 ]
cmp ecx [ eax + 0x1e0 ]
jge r-xdata
mov ecx [ ebp - 0x78 ]
add ecx 0x1
mov [ ebp - 0x78 ] ecx
mov ecx [ ebp - 0x78 ]
cmp ecx [ ebp - 0x128 ]
jg r-xdata
mov edx [ ebp - 0x2cc ]
mov [ ebp - 0x134 ] edx
jmp r-xdata
mov ecx [ ebp - 0x2ac ]
add ecx 0x17c
call sub_41b1b0
cmp [ ebp - 0x78 ] eax
jge r-xdata
mov edx [ ebp - 0x78 ]
mov eax [ ebp - 0x130 ]
mov ecx [ eax + edx * 4 ]
cmp ecx [ ebp - 0x134 ]
jl r-xdata
mov ecx [ ebp - 0x2ac ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x2d0 ] eax
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x2d0 ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x140 ] 0x0
jne r-xdata
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1dc ]
push eax
mov ecx [ ebp - 0xec ]
push ecx
lea edx [ ebp - 0x20c ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1dc ]
push ecx
mov edx [ ebp - 0xe4 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_480308
mov eax [ ebp - 0x2d0 ]
mov [ ebp - 0x124 ] eax
lea ecx [ ebp - 0x11c ]
call sub_416cb0
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x18 ]
push ecx
push 0x1
push 0x0
lea ecx [ ebp - 0x11c ]
call sub_416d20
cmp [ ebp - 0x110 ] 0x0
jne r-xdata
mov eax [ ebp - 0x78 ]
add eax 0x1
mov [ ebp - 0x78 ] eax
lea ecx [ ebp - 0x11c ]
call sub_480765
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x108 ]
mov edx [ eax ]
mov ecx [ ebp - 0x108 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x108 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x108 ]
call [ edx + 0x2c ]
lea ecx [ ebp - 0x13c ]
call sub_401690
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x110 ]
mov [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1dc ]
push ecx
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1d8 ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0xe0 ]
push edx
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1d8 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_480308
mov edx [ ebp - 0x78 ]
cmp edx [ ebp - 0x12c ]
jge r-xdata
mov eax [ ebp - 0x130 ]
mov [ ebp - 0x2a8 ] eax
mov ecx [ ebp - 0x2a8 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x2ac ]
mov eax [ ebp - 0x78 ]
sub eax [ edx + 0x208 ]
mov ecx [ ebp - 0x2ac ]
imul eax [ ecx + 0x1a8 ]
mov edx [ ebp - 0x2ac ]
mov ecx [ edx + 0x1dc ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0xe0 ]
jg r-xdata
mov eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x2ac ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x148 ] ecx
mov edx [ ebp - 0x2ac ]
mov eax [ ebp - 0x78 ]
sub eax [ edx + 0x208 ]
mov ecx [ ebp - 0x2ac ]
imul eax [ ecx + 0x1a8 ]
mov edx [ ebp - 0x2ac ]
mov ecx [ edx + 0x1dc ]
add ecx eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2ac ]
mov eax [ ebp - 0x2c ]
add eax [ edx + 0x1a8 ]
mov ecx [ ebp - 0x2ac ]
cmp [ ecx + 0x1e4 ] eax
jge r-xdata
mov ecx [ ebp - 0x140 ]
cmp ecx [ ebp - 0x124 ]
jl r-xdata
lea ecx [ ebp - 0x1d8 ]
call sub_428cd0
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x1d4 ] ecx
mov edx [ ebp - 0xe0 ]
mov [ ebp - 0x1cc ] edx
mov eax [ ebp - 0xec ]
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0xe4 ]
mov [ ebp - 0x1d0 ] ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_405210
mov ecx [ ebp - 0x2ac ]
mov edx [ ebp - 0x2c ]
add edx [ ecx + 0x1a8 ]
mov [ ebp - 0x2d4 ] edx
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1e4 ]
mov [ ebp - 0x2d4 ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0xe4 ]
jg r-xdata
cmp [ ebp - 0x140 ] 0x0
je r-xdata
mov eax [ ebp - 0x140 ]
mov [ ebp - 0xdc ] eax
jmp r-xdata
lea ecx [ ebp - 0x150 ]
call sub_406640
mov [ ebp - 0x4 ] 0x8
push 0xd
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x150 ]
call sub_406660
push 0xe
call [ GetSysColor@IAT ]
push eax
mov eax [ ebp - 0x108 ]
mov edx [ eax ]
mov ecx [ ebp - 0x108 ]
call [ edx + 0x30 ]
push 0xd
call [ GetSysColor@IAT ]
push eax
mov eax [ ebp - 0x108 ]
mov edx [ eax ]
mov ecx [ ebp - 0x108 ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x140 ]
mov [ ebp - 0xdc ] eax
jmp r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x2ac ]
mov edx [ ebp - 0x78 ]
cmp edx [ ecx + 0x210 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x13c ]
call sub_47c674
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x11c ]
call sub_416d00
lea ecx [ ebp - 0x1e8 ]
call sub_428cd0
mov eax [ ebp - 0xe8 ]
mov [ ebp - 0x1e4 ] eax
mov ecx [ ebp - 0xe0 ]
mov [ ebp - 0x1dc ] ecx
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x1e8 ] edx
mov eax [ ebp - 0xe4 ]
mov [ ebp - 0x1e0 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x1e8 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_405210
mov edx [ ebp - 0x140 ]
mov eax [ ebp - 0x130 ]
mov ecx [ eax + edx * 4 ]
sub ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0xdc ]
cmp edx [ ebp - 0x124 ]
jge r-xdata
mov edx [ ebp - 0xdc ]
cmp edx [ ebp - 0x124 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1a4 ]
mov edx [ ebp - 0xdc ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0xdc ]
mov edx [ ebp - 0x130 ]
mov eax [ ebp - 0xdc ]
mov esi [ ebp - 0x130 ]
mov ecx [ edx + ecx * 4 + 0x4 ]
sub ecx [ esi + eax * 4 ]
mov [ ebp - 0x10c ] ecx
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0x130 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x2ac ]
mov eax [ ebp - 0xdc ]
mov ecx [ ebp - 0x130 ]
mov edx [ edx + 0x1e0 ]
cmp edx [ ecx + eax * 4 + 0x4 ]
jge r-xdata
mov eax [ ebp - 0x2ac ]
cmp [ eax + 0x214 ] 0x0
je r-xdata
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1a4 ]
mov edx [ ebp - 0xdc ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0xdc ]
mov edx [ ebp - 0x130 ]
mov eax [ ebp - 0xdc ]
mov esi [ ebp - 0x130 ]
mov ecx [ edx + ecx * 4 + 0x4 ]
sub ecx [ esi + eax * 4 ]
mov [ ebp - 0x10c ] ecx
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0x130 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x2ac ]
mov eax [ ebp - 0xdc ]
mov ecx [ ebp - 0x130 ]
mov edx [ edx + 0x1e0 ]
cmp edx [ ecx + eax * 4 + 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x78 ]
add ecx 0x1
mov [ ebp - 0x78 ] ecx
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0x130 ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x2e4 ] ecx
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1e0 ]
mov [ ebp - 0x2e4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x108 ]
mov edx [ eax ]
mov ecx [ ebp - 0x108 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x108 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x108 ]
call [ edx + 0x2c ]
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x150 ]
call sub_405020
jmp r-xdata
mov ecx [ ebp - 0x2ac ]
cmp [ ecx + 0x218 ] 0x0
jne r-xdata
mov edx [ ebp - 0xdc ]
mov eax [ ebp - 0x130 ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x2d8 ] ecx
mov eax [ ebp - 0x2ac ]
mov ecx [ eax + 0x1e0 ]
mov [ ebp - 0x2d8 ] ecx
jmp r-xdata
mov [ ebp - 0x138 ] 0x0
mov eax [ ebp - 0x148 ]
mov ecx [ eax + 0x34 ]
imul ecx ecx 0x15
mov [ ebp - 0x138 ] ecx
mov edx [ ebp - 0x148 ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov edx [ ebp - 0x2e4 ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0xdc ] 0x1
jne r-xdata
mov ecx [ ebp - 0x2ac ]
call sub_415153
mov [ ebp - 0x138 ] 0x0
mov eax [ ebp - 0x148 ]
mov ecx [ eax + 0x34 ]
imul ecx ecx 0x15
mov [ ebp - 0x138 ] ecx
mov edx [ ebp - 0x148 ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov edx [ ebp - 0x2d8 ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0xdc ] 0x1
jne r-xdata
cmp [ ebp - 0x138 ] 0x0
je r-xdata
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0x264 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_416db0
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x198 ] edx
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x114 ] 0x6
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x138 ]
add eax 0xf
mov [ ebp - 0x138 ] eax
cmp [ ebp - 0x138 ] 0x0
je r-xdata
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0x220 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_416db0
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x15c ] edx
mov [ ebp - 0x158 ] eax
cmp [ ebp - 0x114 ] 0x6
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x138 ]
add eax 0xf
mov [ ebp - 0x138 ] eax
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
push 0x0
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x30 ]
push eax
push 0x6
mov ecx [ ebp - 0x2c ]
add ecx 0x2
push ecx
mov edx [ ebp - 0x190 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_409390
mov eax [ ebp - 0x30 ]
sub eax 0x1
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x2c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_405210
mov edx [ ebp - 0x30 ]
sub edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x2c ]
sub eax 0x1
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x1a0 ]
call sub_43ce40
mov [ ebp - 0x4 ] 0xc
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x1a0 ]
call sub_43ceb0
lea edx [ ebp - 0x1a0 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_4801f8
lea eax [ ebp - 0x74 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_47fe32
mov ecx [ ebp - 0x148 ]
cmp [ ecx + 0x34 ] 0x0
je r-xdata
cmp [ ebp - 0x114 ] 0x2
jne r-xdata
mov eax [ ebp - 0x10c ]
sub eax [ ebp - 0x138 ]
sub eax 0x6
sub eax [ ebp - 0x198 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x190 ]
add ecx eax
mov [ ebp - 0x190 ] ecx
jmp r-xdata
push 0x3
mov ecx [ ebp - 0x10c ]
sub ecx [ ebp - 0x138 ]
push ecx
mov edx [ ebp - 0xdc ]
push edx
lea eax [ ebp - 0x25c ]
push eax
mov ecx [ ebp - 0x148 ]
call sub_40efd0
mov [ ebp - 0x2e8 ] eax
mov ecx [ ebp - 0x2e8 ]
mov [ ebp - 0x2ec ] ecx
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x2ec ]
call sub_4027c0
push eax
mov edx [ ebp - 0x108 ]
push edx
mov ecx [ ebp - 0x2ac ]
call sub_413cdf
push eax
lea ecx [ ebp - 0x13c ]
call sub_47c7b1
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x25c ]
call sub_47c674
mov eax [ ebp - 0x138 ]
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + eax + 0x3 ]
mov [ ebp - 0x190 ] edx
cmp [ ebp - 0x114 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
push 0x0
lea ecx [ ebp - 0x13c ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
push 0x6
mov eax [ ebp - 0x2c ]
add eax 0x2
push eax
mov ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_409390
mov edx [ ebp - 0x2c ]
sub edx 0x1
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
lea edx [ ebp - 0x150 ]
push edx
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_405210
mov ecx [ ebp - 0x2c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x164 ]
call sub_43ce40
mov [ ebp - 0x4 ] 0xa
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x164 ]
call sub_43ceb0
lea eax [ ebp - 0x164 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_4801f8
lea ecx [ ebp - 0x74 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
mov edx [ ebp - 0x148 ]
cmp [ edx + 0x34 ] 0x0
je r-xdata
cmp [ ebp - 0x114 ] 0x2
jne r-xdata
mov eax [ ebp - 0x10c ]
sub eax [ ebp - 0x138 ]
sub eax 0x6
sub eax [ ebp - 0x15c ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x154 ]
add ecx eax
mov [ ebp - 0x154 ] ecx
jmp r-xdata
push 0x3
mov ecx [ ebp - 0x10c ]
sub ecx [ ebp - 0x138 ]
push ecx
mov edx [ ebp - 0xdc ]
push edx
lea eax [ ebp - 0x218 ]
push eax
mov ecx [ ebp - 0x148 ]
call sub_40efd0
mov [ ebp - 0x2dc ] eax
mov ecx [ ebp - 0x2dc ]
mov [ ebp - 0x2e0 ] ecx
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebp - 0x2e0 ]
call sub_4027c0
push eax
mov edx [ ebp - 0x108 ]
push edx
mov ecx [ ebp - 0x2ac ]
call sub_413cdf
push eax
lea ecx [ ebp - 0x13c ]
call sub_47c7b1
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x218 ]
call sub_47c674
mov eax [ ebp - 0x138 ]
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + eax + 0x3 ]
mov [ ebp - 0x154 ] edx
cmp [ ebp - 0x114 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x2a4 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_480308
mov ecx [ ebp - 0x148 ]
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov edx [ ebp - 0x148 ]
mov eax [ edx + 0x34 ]
sub eax 0x1
imul eax eax 0x15
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + eax + 0x9 ]
mov [ ebp - 0x1a8 ] edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x1a8 ]
push ecx
lea edx [ ebp - 0x26c ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov eax [ ebp - 0x148 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov edx [ ebp - 0x10c ]
sub edx [ ebp - 0x138 ]
sub edx 0x6
sub edx [ ebp - 0x198 ]
mov eax [ ebp - 0x190 ]
add eax edx
mov [ ebp - 0x190 ] eax
mov ecx [ ebp - 0xdc ]
add ecx 0x1
mov [ ebp - 0xdc ] ecx
mov eax [ ebp - 0x148 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x148 ]
mov ecx [ eax + 0x34 ]
sub ecx 0x1
imul ecx ecx 0x15
mov edx [ ebp - 0x30 ]
lea eax [ edx + ecx + 0x9 ]
mov [ ebp - 0x16c ] eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x16c ]
push edx
lea eax [ ebp - 0x228 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov ecx [ ebp - 0x148 ]
cmp [ ecx + 0x3c ] 0x0
je r-xdata
mov edx [ ebp - 0x10c ]
sub edx [ ebp - 0x138 ]
sub edx 0x6
sub edx [ ebp - 0x15c ]
mov eax [ ebp - 0x154 ]
add eax edx
mov [ ebp - 0x154 ] eax
mov ecx [ ebp - 0xdc ]
add ecx 0x1
mov [ ebp - 0xdc ] ecx
lea ecx [ ebp - 0xd8 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
push 0x0
mov ecx [ ebp - 0x108 ]
call sub_4801f8
lea ecx [ ebp - 0x1a0 ]
call sub_480765
push 0x0
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x30 ]
push eax
push 0x4
mov ecx [ ebp - 0x2c ]
add ecx 0x3
push ecx
mov edx [ ebp - 0x190 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_409390
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x1a0 ]
call sub_43ce90
jmp r-xdata
mov edx [ ebp - 0x148 ]
mov eax [ edx + 0x34 ]
imul eax eax 0x15
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + eax + 0x4 ]
mov [ ebp - 0x1c4 ] edx
mov eax [ ebp - 0x2ac ]
mov eax [ eax + 0x1a8 ]
sub eax 0xb
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x2c ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x1c8 ] edx
lea ecx [ ebp - 0x1c0 ]
call sub_428cd0
mov eax [ ebp - 0x1c4 ]
mov [ ebp - 0x1c0 ] eax
mov ecx [ ebp - 0x1c8 ]
mov [ ebp - 0x1bc ] ecx
mov edx [ ebp - 0x1c0 ]
add edx 0xb
mov [ ebp - 0x1b8 ] edx
mov eax [ ebp - 0x1bc ]
add eax 0xb
mov [ ebp - 0x1b4 ] eax
lea ecx [ ebp - 0xf8 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
lea edx [ ebp - 0x1c0 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_43ced0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_47fe32
lea ecx [ ebp - 0x100 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
mov edx [ ebp - 0x1c8 ]
add edx 0x5
push edx
mov eax [ ebp - 0x1c4 ]
add eax 0x2
push eax
lea ecx [ ebp - 0x284 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x1c8 ]
add edx 0x5
push edx
mov eax [ ebp - 0x1c4 ]
add eax 0x9
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
mov ecx [ ebp - 0x148 ]
cmp [ ecx + 0x30 ] 0x1
jne r-xdata
mov eax [ ebp - 0x2ac ]
mov eax [ eax + 0x1a8 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x2c ]
add ecx eax
push ecx
mov edx [ ebp - 0x1a8 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_480308
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x1a8 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_480308
jmp r-xdata
lea ecx [ ebp - 0xd8 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
push 0x0
mov ecx [ ebp - 0x108 ]
call sub_4801f8
lea ecx [ ebp - 0x164 ]
call sub_480765
push 0x0
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x30 ]
push eax
push 0x4
mov ecx [ ebp - 0x2c ]
add ecx 0x3
push ecx
mov edx [ ebp - 0x154 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_409390
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x164 ]
call sub_43ce90
jmp r-xdata
mov ecx [ ebp - 0x148 ]
mov edx [ ecx + 0x34 ]
imul edx edx 0x15
mov eax [ ebp - 0x30 ]
lea ecx [ eax + edx + 0x4 ]
mov [ ebp - 0x188 ] ecx
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1a8 ]
sub eax 0xb
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x2c ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x18c ] edx
lea ecx [ ebp - 0x184 ]
call sub_428cd0
mov eax [ ebp - 0x188 ]
mov [ ebp - 0x184 ] eax
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x180 ] ecx
mov edx [ ebp - 0x184 ]
add edx 0xb
mov [ ebp - 0x17c ] edx
mov eax [ ebp - 0x180 ]
add eax 0xb
mov [ ebp - 0x178 ] eax
lea ecx [ ebp - 0xf8 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
lea edx [ ebp - 0x184 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_43ced0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_47fe32
lea ecx [ ebp - 0x100 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
mov edx [ ebp - 0x18c ]
add edx 0x5
push edx
mov eax [ ebp - 0x188 ]
add eax 0x2
push eax
lea ecx [ ebp - 0x240 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x18c ]
add edx 0x5
push edx
mov eax [ ebp - 0x188 ]
add eax 0x9
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
mov ecx [ ebp - 0x148 ]
cmp [ ecx + 0x30 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x2ac ]
mov eax [ ecx + 0x1a8 ]
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x2c ]
add edx eax
push edx
mov eax [ ebp - 0x16c ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x16c ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
jmp r-xdata
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x29c ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
lea ecx [ ebp - 0x30 ]
call sub_405cf0
cmp eax [ ebp - 0x10c ]
jne r-xdata
lea ecx [ ebp - 0x74 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
mov edx [ ebp - 0x1c8 ]
add edx 0xb
push edx
mov eax [ ebp - 0x1c4 ]
add eax 0x5
push eax
lea ecx [ ebp - 0x294 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x1c4 ]
add eax 0x5
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
mov edx [ ebp - 0x1c8 ]
add edx 0x2
push edx
mov eax [ ebp - 0x1c4 ]
add eax 0x5
push eax
lea ecx [ ebp - 0x28c ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x1c8 ]
add edx 0x9
push edx
mov eax [ ebp - 0x1c4 ]
add eax 0x5
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
jmp r-xdata
mov ecx [ ebp - 0x1ac ]
cmp ecx [ ebp - 0x1b0 ]
jge r-xdata
mov eax [ ebp - 0x2ac ]
mov eax [ eax + 0x1a8 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x2c ]
add ecx eax
push ecx
mov edx [ ebp - 0x1a8 ]
push edx
lea eax [ ebp - 0x274 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov ecx [ ebp - 0x2ac ]
mov eax [ ecx + 0x1a8 ]
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x2c ]
add edx eax
push edx
mov eax [ ebp - 0x1a8 ]
add eax 0xf
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
mov ecx [ ebp - 0x148 ]
mov edx [ ecx + 0x34 ]
sub edx 0x1
mov [ ebp - 0x1b0 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x18
mov [ ebp - 0x1a4 ] eax
mov ecx [ ebp - 0x1a8 ]
sub ecx 0x15
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1ac ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x30 ]
sub ecx 0x3
push ecx
lea edx [ ebp - 0x258 ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x108 ]
call sub_480308
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
lea ecx [ ebp - 0x74 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_47fe32
mov edx [ ebp - 0x18c ]
add edx 0xb
push edx
mov eax [ ebp - 0x188 ]
add eax 0x5
push eax
lea ecx [ ebp - 0x250 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x188 ]
add eax 0x5
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
mov edx [ ebp - 0x18c ]
add edx 0x2
push edx
mov eax [ ebp - 0x188 ]
add eax 0x5
push eax
lea ecx [ ebp - 0x248 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x18c ]
add edx 0x9
push edx
mov eax [ ebp - 0x188 ]
add eax 0x5
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
jmp r-xdata
mov eax [ ebp - 0x170 ]
cmp eax [ ebp - 0x174 ]
jge r-xdata
mov ecx [ ebp - 0x2ac ]
mov eax [ ecx + 0x1a8 ]
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x2c ]
add edx eax
push edx
mov eax [ ebp - 0x16c ]
push eax
lea ecx [ ebp - 0x230 ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x2ac ]
mov eax [ edx + 0x1a8 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x2c ]
add ecx eax
push ecx
mov edx [ ebp - 0x16c ]
add edx 0xf
push edx
mov ecx [ ebp - 0x108 ]
call sub_480308
mov eax [ ebp - 0x148 ]
mov ecx [ eax + 0x34 ]
sub ecx 0x1
mov [ ebp - 0x174 ] ecx
mov edx [ ebp - 0x148 ]
add edx 0x18
mov [ ebp - 0x168 ] edx
mov eax [ ebp - 0x16c ]
sub eax 0x15
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x170 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
mov eax [ edx + 0x2c ]
mov [ ebp - 0x1a4 ] eax
mov ecx [ ebp - 0x1a4 ]
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp - 0x168 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x168 ] edx
mov eax [ ebp - 0x168 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x1a8 ]
push eax
lea ecx [ ebp - 0x27c ]
push ecx
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x1a8 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_480308
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x16c ]
push edx
lea eax [ ebp - 0x238 ]
push eax
mov ecx [ ebp - 0x108 ]
call sub_4802bc
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x16c ]
push edx
mov ecx [ ebp - 0x108 ]
call sub_480308
mov edx [ ebp - 0x1ac ]
add edx 0x1
mov [ ebp - 0x1ac ] edx
mov eax [ ebp - 0x1a8 ]
sub eax 0x15
mov [ ebp - 0x1a8 ] eax
mov ecx [ ebp - 0x170 ]
add ecx 0x1
mov [ ebp - 0x170 ] ecx
mov edx [ ebp - 0x16c ]
sub edx 0x15
mov [ ebp - 0x16c ] edx
sub_43928b
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_407e10
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov [ ebp - 0x20 ] 0x0
push 0x1
mov ecx [ ebp - 0xc ]
call sub_416b60
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_407e10
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
push 0x1
mov ecx [ ebp - 0x14 ]
call sub_43cdd0
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_439380
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_407e10
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_477524
mov edx [ ebp - 0x14 ]
mov [ edx + 0x210 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_4129f8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov eax [ ebp - 0x14 ]
add eax 0x1d8
push eax
mov ecx [ ebp - 0x14 ]
call sub_405470
mov [ ebp - 0x18 ] 0x0
push 0x1
mov ecx [ ebp - 0xc ]
call sub_416b90
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_43945c
push ebp
mov ebp esp
push 0xffffffff
push sub_4994e8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
call sub_47711c
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x58 ]
call sub_439574
push 0x1
push 0x1
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp - 0x58 ]
call sub_439d20
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x50 ]
call sub_47714f
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_4394e2
push ebp
mov ebp esp
push 0xffffffff
push sub_4994fb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
call sub_47711c
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x3c ]
push ecx
lea edx [ ebp - 0x50 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x58 ]
call sub_439574
push 0x0
push 0x0
lea ecx [ ebp - 0x3c ]
push ecx
lea edx [ ebp - 0x50 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x58 ]
call sub_439e72
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x50 ]
call sub_47714f
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x18
sub_439574
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
add ecx [ eax + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x250 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax + 0x18 ] 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x8
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x18 ]
mov [ edx + 0x1c ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
mov [ ecx + 0x24 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ eax + 0x28 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x2c ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x240 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_439660
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x18 ] 0x0
sub_439660
push ebp
mov ebp esp
push 0xffffffff
push sub_499520
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x2c ] ecx
push 0xffffffff
push 0x3
mov ecx [ ebp + 0x8 ]
call sub_4771af
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_47c5ff
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x8
ja r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x14 ]
call sub_47ca40
lea edx [ ebp - 0x14 ]
push edx
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_40a100
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x30 ]
jmp [ ecx * 4 + jump_table_439946 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x18 ]
jge r-xdata
mov edx [ ebp + 0xc ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
push eax
push rw-data
lea ecx [ ebp - 0x14 ]
push ecx
call sub_475837
add esp 0x14
jmp r-xdata
push 0x1772
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
push 0x1773
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
push 0x1774
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
push 0x1775
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
push 0x1776
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
push 0x1777
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
push 0x1778
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
push 0x1779
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x1c ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c761
push rw-data
lea ecx [ ebp - 0x14 ]
call sub_47ca04
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0xc
push edx
lea ecx [ ebp - 0x14 ]
call sub_47c761
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
push eax
push rw-data
lea ecx [ ebp - 0x14 ]
push ecx
call sub_475837
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
call sub_40a100
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_43996a
mov edx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_47c5ff
lea ecx [ ebp - 0x14 ]
call sub_47c5ff
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x10 ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_467a70
add esp 0xc
lea ecx [ ebp - 0x20 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp [ eax + 0x10 ] 0x100
jle r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push 0x2
mov ecx [ ebp + 0x8 ]
call sub_40a100
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x34 ] 0x100
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x248 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_45fecb
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
push eax
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x20 ]
call sub_45feb7
jmp r-xdata
sub_43996a
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x8
ja r-xdata
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_439afe
mov ecx [ ebp - 0x20 ]
jmp [ ecx * 4 + jump_table_439ada ]
mov edx [ ebp + 0xc ]
add edx [ ebp + 0x10 ]
movsx eax [ edx ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x10 ]
xor ecx ecx
mov cl [ eax ]
mov eax ecx
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x24c ]
push eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x10 ]
push ecx
call sub_411274
add esp 0x8
and eax 0xffff
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x24c ]
push eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x10 ]
push ecx
call sub_411274
add esp 0x8
and eax 0xffff
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x24c ]
push eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x10 ]
push ecx
call sub_4112aa
add esp 0x8
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x24c ]
push ecx
mov edx [ ebp + 0xc ]
add edx [ ebp + 0x10 ]
push edx
call sub_4112aa
add esp 0x8
xor ecx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x24c ]
push eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x10 ]
push ecx
call sub_4112aa
add esp 0x8
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x18 ] edx
fld [ ebp - 0x18 ]
fstp [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x24c ]
push eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x10 ]
push ecx
call sub_411303
add esp 0x8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_47c5ff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x14
sub_439afe
push ebp
mov ebp esp
push 0xffffffff
push sub_49953c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov [ ebp - 0x2c ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x7
ja r-xdata
mov ecx [ ebp + 0x8 ]
call sub_47c5ff
mov ecx [ ebp - 0x30 ]
jmp [ ecx * 4 + jump_table_439d00 ]
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
fld [ ebp - 0x14 ]
fstp [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_411b06
add esp 0x8
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c761
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
call sub_411b9e
add esp 0xc
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x40 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_47c761
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
jmp r-xdata
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
movsx edx [ ebp + 0xc ]
push edx
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_475837
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
movsx edx [ ebp + 0xc ]
push edx
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_475837
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_475837
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
mov al [ ebp + 0xc ]
and eax 0xff
push eax
push rw-data
mov ecx [ ebp + 0x8 ]
push ecx
call sub_475837
add esp 0xc
mov cl [ ebp + 0xc ]
and ecx 0xff
push ecx
push rw-data
mov edx [ ebp + 0x8 ]
push edx
call sub_475837
add esp 0xc
jmp r-xdata
jmp r-xdata
mov ax [ ebp + 0xc ]
and eax 0xffff
push eax
push rw-data
mov ecx [ ebp + 0x8 ]
push ecx
call sub_475837
add esp 0xc
mov cx [ ebp + 0xc ]
and ecx 0xffff
push ecx
push rw-data
mov edx [ ebp + 0x8 ]
push edx
call sub_475837
add esp 0xc
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
push rw-data
mov ecx [ ebp + 0x8 ]
push ecx
call sub_475837
add esp 0xc
mov ecx [ ebp + 0xc ]
push ecx
push rw-data
mov edx [ ebp + 0x8 ]
push edx
call sub_475837
add esp 0xc
jmp r-xdata
jmp r-xdata
sub_439d20
push ebp
mov ebp esp
push 0xffffffff
push sub_49955a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push esi
push edi
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
call sub_40efb0
cmp eax [ ebp - 0x1c ]
je r-xdata
push 0x48
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x24 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x24 ]
call sub_416be0
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ecx
push 0xffffffff
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_4771af
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp - 0x14 ]
add edi 0x18
mov ecx 0xc
[ edi ] [ esi ]
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x190
call sub_407e30
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40efd0
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_40a100
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x2c ]
call sub_4129f8
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
push 0x1
mov edx [ ebp - 0x2c ]
add edx 0x1b8
push edx
mov ecx [ ebp - 0x2c ]
call sub_405470
sub_439e72
push ebp
mov ebp esp
push 0xffffffff
push sub_499578
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push esi
push edi
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
call sub_40efb0
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
push 0x48
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x20 ]
call sub_416be0
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ecx
push 0xffffffff
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_4771af
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edi [ ebp - 0x10 ]
add edi 0x18
mov ecx 0xc
[ edi ] [ esi ]
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x28 ]
add ecx 0x190
call sub_4776fb
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_40efd0
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40a100
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
call sub_4129f8
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
push 0x1
mov eax [ ebp - 0x28 ]
add eax 0x1b8
push eax
mov ecx [ ebp - 0x28 ]
call sub_405470
sub_439fe7
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_416b40
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_43cdd0
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x210 ]
jg r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx + 0x210 ] 0xffffffff
jmp r-xdata
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_47763d
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_41b1b0
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x210 ]
sub eax 0x1
test eax eax
jle r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_4129f8
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x210 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_41b1b0
push 0x1
mov edx [ ebp - 0x10 ]
add edx 0x1b8
push edx
mov ecx [ ebp - 0x10 ]
call sub_405470
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x210 ] ecx
sub_43a103
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4129f8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
push 0x1
mov eax [ ebp - 0x4 ]
add eax 0x1b8
push eax
mov ecx [ ebp - 0x4 ]
call sub_405470
sub_43a131
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416b40
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416c00
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x14 ]
sub_43a179
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416b40
cmp [ ebp + 0x8 ] eax
jle r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x14 ] eax
xor eax eax
sub_43a1c8
push ebp
mov ebp esp
push 0xffffffff
push sub_4995a2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_47c5ff
cmp [ ebp + 0xc ] 0x0
jl r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov ecx [ ebp - 0x18 ]
or ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp + 0xc ] eax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov eax [ ebp - 0x18 ]
or al 0x1
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x17c
call sub_41b1b0
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x190
call sub_416c00
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_416c20
push eax
lea ecx [ ebp - 0x14 ]
call sub_47c761
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov ecx [ ebp - 0x18 ]
or ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
sub_43a2e2
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0xc ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x17c
call sub_41b1b0
cmp [ ebp + 0xc ] eax
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_416c60
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax 0x1
lea ecx [ ebp - 0x14 ]
call sub_428cd0
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_415566
push 0x1
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
sub_43a387
push ebp
mov ebp esp
push 0xffffffff
push sub_4995b5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_415678
mov [ ebp + 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_43a54a
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_428cd0
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_415566
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x1c ]
cmp eax [ edx + 0x1e0 ]
jge r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x1e0 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x224 ] edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_40efd0
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x38 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_47bc7c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
push 0x5
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_47bda6
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_401740
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_47be0f
mov eax [ ebp - 0x2c ]
mov [ eax + 0x25c ] 0x1
mov eax 0x1
mov ecx [ ebp - 0x2c ]
call sub_415153
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] ecx
push 0x1
lea edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_406160
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x214 ] 0x0
je r-xdata
sub_43a54a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_43a573
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_43a573
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x248 ] 0x3
setne cl
mov eax ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1c ] 0x2
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x3
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
cmp [ edx + 0x248 ] 0x3
sete al
jmp r-xdata
xor eax eax
sub_43a5e4
push ebp
mov ebp esp
push 0xffffffff
push sub_4995d1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x30 ] ecx
push 0x0
mov ecx [ ebp - 0x30 ]
call sub_43b463
test eax eax
jne r-xdata
push 0x1
mov ecx [ ebp - 0x30 ]
call sub_43b5ba
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ecx
lea edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_43cf70
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x30 ]
call sub_43a958
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x210 ] 0xffffffff
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x210 ]
push ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x190
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
lea ecx [ ebp - 0x20 ]
call sub_4052e0
mov [ ebp - 0x4 ] 0x0
push 0xbd
lea ecx [ ebp - 0x20 ]
call sub_4053d0
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_4053a0
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_405340
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_405340
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x30 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x30 ]
cmp [ ecx + 0x244 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x30 ] 0x2
jne r-xdata
push rw-data
lea ecx [ ebp - 0x2c ]
call sub_47c7b1
jmp r-xdata
push 0x3
mov ecx [ ebp - 0x18 ]
call sub_4053a0
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push 0x1
push 0x80ed
mov ecx [ ebp - 0x18 ]
call sub_42ce00
lea ecx [ ebp - 0x2c ]
call sub_4027c0
push eax
push 0x80ed
push 0x0
push 0x80ed
mov ecx [ ebp - 0x18 ]
call sub_43cf40
push 0x401
push 0x3
mov ecx [ ebp - 0x18 ]
call sub_42ce00
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_47c674
push rw-data
lea ecx [ ebp - 0x2c ]
call sub_47c7b1
jmp r-xdata
push 0x408
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_43cf10
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
push 0x8
mov ecx [ ebp - 0x18 ]
call sub_479810
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_405340
sub_43a7c7
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_43b463
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x228 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_4054c0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x21c ] 0x1
mov ecx [ ebp - 0x8 ]
call sub_47be0f
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x228 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x22c ] eax
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_41576c
mov ecx [ ebp - 0x8 ]
xor edx edx
cmp eax [ ecx + 0x210 ]
sete dl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x258 ] edx
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_43a958
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_405500
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x22c ]
push edx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ edx + 0x21c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x22c ]
push ecx
call [ SetFocus@IAT ]
sub_43a8b5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x1
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
sub_43a8e3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_415895
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x258 ] 0x0
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x210 ] 0xffffffff
je r-xdata
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_41576c
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0x210 ]
jne r-xdata
push 0xffffffff
lea edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x210 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_43a387
sub_43a958
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x24 ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x24 ]
call sub_41576c
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_415678
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0x210 ]
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_43b5ba
mov ecx [ ebp - 0x24 ]
add ecx 0x1d8
call sub_404fe0
mov ecx [ ebp - 0x24 ]
cdq
idiv [ ecx + 0x1a8 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x208 ]
add eax [ ebp - 0x14 ]
cmp [ ebp - 0x18 ] eax
jl r-xdata
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x224 ] 0xffffffff
je r-xdata
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_43aacf
test eax eax
je r-xdata
push 0x96
call [ Sleep@IAT ]
push 0x0
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x14 ]
add ecx 0x1
push ecx
push 0x4
mov ecx [ ebp - 0x24 ]
call sub_43c4c2
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x224 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x210 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_41497a
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x210 ] eax
mov ecx [ ebp - 0x24 ]
call sub_415c3b
cmp [ ebp - 0x20 ] 0x0
je r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ ebp - 0x24 ]
mov [ eax + 0x21c ] 0x0
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x210 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
call sub_43ac95
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
call sub_43a387
test eax eax
je r-xdata
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_43b5ba
mov eax 0x1
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_405470
mov eax 0x1
jmp r-xdata
sub_43aacf
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax ]
cmp edx [ ecx + 0x1d8 ]
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax ]
cmp edx [ ecx + 0x1e0 ]
jg r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x1dc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x1e4 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov eax [ eax + 0x4 ]
sub eax [ ecx + 0x1dc ]
mov ecx [ ebp - 0x34 ]
cdq
idiv [ ecx + 0x1a8 ]
mov edx [ ebp - 0x34 ]
add eax [ edx + 0x208 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x34 ]
add ecx 0x190
call sub_41b1b0
cmp [ ebp - 0x20 ] eax
jl r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
cmp [ edx + 0x30 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x17c
call sub_41b1b0
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x1d8 ]
sub edx [ ecx + 0x20c ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x28 ]
jge r-xdata
cmp [ ebp - 0x24 ] 0x1
je r-xdata
mov edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
add edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax ]
jl r-xdata
lea ecx [ ebp - 0x10 ]
call sub_428cd0
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x34 ]
imul ecx ecx 0x15
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx + 0x3 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0xb
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x20 ]
sub eax [ edx + 0x208 ]
mov ecx [ ebp - 0x34 ]
imul eax [ ecx + 0x1a8 ]
mov edx [ ebp - 0x34 ]
mov ecx [ edx + 0x1dc ]
add ecx eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x1a8 ]
sub eax 0xb
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
add ecx 0xb
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_405000
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
add edx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
sub_43ac95
push ebp
mov ebp esp
push 0xffffffff
push sub_4995f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x90
push esi
mov [ ebp - 0x94 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x94 ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x30 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x30 ] 0x2
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x30 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x98 ] edx
cmp [ ebp - 0x98 ] 0x7
ja r-xdata
push 0x1
mov ecx [ ebp - 0x94 ]
call sub_43a103
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x10 ]
mov [ edx + 0x30 ] 0x1
mov ecx [ ebp - 0x94 ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x88 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x40 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x98 ]
jmp [ eax * 4 + jump_table_43b133 ]
mov esi [ ebp + 0x8 ]
add esi 0x1
mov ecx [ ebp - 0x94 ]
add ecx 0x190
call sub_41b1b0
cmp esi eax
jl r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x1c ] 0x8
jne r-xdata
mov [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x5c ]
imul eax [ edx + 0x2c ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
mov [ ebp - 0x5c ] 0x2
jmp r-xdata
mov [ ebp - 0x5c ] 0x4
jmp r-xdata
mov [ ebp - 0x5c ] 0x8
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x94 ]
add ecx 0x190
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x84 ] edx
mov eax [ ebp - 0x84 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x34 ]
cmp edx [ ecx + 0x34 ]
jle r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x34 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x18
mov [ ebp - 0x64 ] ecx
lea ecx [ ebp - 0x68 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_47711c
mov [ ebp - 0x4 ] 0x1
push 0xffffffff
push 0x3
lea ecx [ ebp - 0x28 ]
call sub_4771af
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x28 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x2c ] 0x0
jle r-xdata
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0x1
push eax
mov ecx [ ebp - 0x94 ]
call sub_439fe7
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x40 ]
add ecx 0x8
call sub_41b1b0
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x78 ] 0x0
jmp r-xdata
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x78 ]
cmp edx [ ebp - 0x80 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x6c ]
cmp edx [ ecx + 0x28 ]
jge r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_47714f
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x68 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x40 ]
add ecx 0x8
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x7c ] edx
mov eax [ ebp - 0x64 ]
push eax
mov ecx [ ebp - 0x80 ]
sub ecx 0x1
xor edx edx
cmp [ ebp - 0x78 ] ecx
setne dl
push edx
mov eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x7c ]
push eax
mov ecx [ ebp - 0x78 ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0x1 ]
push eax
mov ecx [ ebp - 0x94 ]
call sub_4394e2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x5c ]
imul eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x18 ]
add edx eax
mov [ ebp - 0x58 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x94 ]
cmp [ ecx + 0x250 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x78 ]
add ecx 0x1
mov [ ebp - 0x78 ] ecx
mov ecx [ ebp - 0x94 ]
mov edx [ ecx + 0x250 ]
mov [ ebp - 0x50 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x28 ]
sub eax 0x1
cmp [ ebp - 0x6c ] eax
jne r-xdata
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0x54 ]
push ecx
mov edx [ ebp - 0x58 ]
push edx
mov eax [ ebp - 0x94 ]
mov ecx [ eax + 0x240 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov ecx [ ebp - 0x94 ]
call sub_43996a
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x40 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x6c ]
push ecx
push rw-data
lea edx [ ebp - 0x68 ]
push edx
call sub_475837
add esp 0xc
lea eax [ ebp - 0x68 ]
push eax
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40a100
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x6c ]
add eax 0x1
mov [ ebp - 0x6c ] eax
lea ecx [ ebp - 0x68 ]
call sub_47c5ff
mov ecx [ ebp - 0x5c ]
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x8c ] eax
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x70 ] edx
mov eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0x94 ]
mov edx [ ecx + 0x240 ]
add edx [ ebp - 0x58 ]
push edx
mov eax [ ebp - 0x70 ]
push eax
call sub_467a70
add esp 0xc
lea ecx [ ebp - 0x74 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x5c ] 0x100
jle r-xdata
cmp [ ebp - 0x54 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x9c ] 0x100
jmp r-xdata
lea ecx [ ebp - 0x68 ]
call sub_47c5ff
jmp r-xdata
lea edx [ ebp - 0x68 ]
push edx
mov eax [ ebp - 0x9c ]
push eax
mov ecx [ ebp - 0x70 ]
push ecx
mov edx [ ebp - 0x94 ]
mov eax [ edx + 0x248 ]
push eax
lea ecx [ ebp - 0x74 ]
call sub_45fecb
mov ecx [ ebp - 0x70 ]
mov [ ebp - 0x90 ] ecx
mov edx [ ebp - 0x90 ]
push edx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x74 ]
call sub_45feb7
jmp r-xdata
lea eax [ ebp - 0x68 ]
push eax
push 0x2
lea ecx [ ebp - 0x28 ]
call sub_40a100
push 0x0
push 0x0
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
mov eax [ ebp - 0x6c ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x1 ]
push edx
mov ecx [ ebp - 0x94 ]
call sub_439e72
jmp r-xdata
sub_43b153
push ebp
mov ebp esp
push 0xffffffff
push sub_499612
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
mov [ ebp - 0x4c ] ecx
mov ecx [ ebp - 0x4c ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x2
lea ecx [ ebp - 0x20 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4c ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x28 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x20 ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x240 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x4c ]
call sub_43996a
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x2
jge r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4c ]
add ecx 0x17c
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x4c ]
add edx 0x1d8
mov eax [ edx ]
mov [ ebp - 0x3c ] eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov eax [ edx + 0x8 ]
mov [ ebp - 0x34 ] eax
mov ecx [ edx + 0xc ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
sub eax [ edx + 0x20c ]
cmp [ ebp - 0x3c ] eax
jle r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4c ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x2c ]
add edx [ ecx + 0x4 ]
mov [ ebp - 0x2c ] edx
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_47c5ff
lea ecx [ ebp - 0x20 ]
call sub_47c5ff
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x28 ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + 0x240 ]
mov eax [ ebp - 0x10 ]
add edx [ eax + 0x18 ]
push edx
mov ecx [ ebp - 0x24 ]
push ecx
call sub_467a70
add esp 0xc
lea ecx [ ebp - 0x28 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x28 ] 0x100
jle r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
sub eax [ edx + 0x20c ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x54 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x2
mov ecx [ ebp - 0x10 ]
call sub_416c20
mov ecx eax
call sub_47c761
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x50 ] 0x100
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ eax + 0x20c ]
mov edx [ ebp - 0x40 ]
add ecx [ edx + 0x4 ]
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x58 ] edx
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
sub eax [ edx + 0x20c ]
mov ecx [ ebp - 0x40 ]
add eax [ ecx + 0x4 ]
cmp [ ebp - 0x34 ] eax
jge r-xdata
jmp r-xdata
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x248 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_45fecb
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x48 ]
push edx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_45feb7
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x34 ] eax
push 0x1
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx [ ebp - 0x4c ]
call sub_405470
sub_43b411
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xc ] 0xd
jne r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x140
call sub_47bda6
mov edx [ ebp - 0x8 ]
mov [ edx + 0x25c ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x224 ] 0xffffffff
mov esp ebp
pop ebp
retn 0x8
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_43b60b
sub_43b463
push ebp
mov ebp esp
push 0xffffffff
push sub_499625
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x25c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0x234 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_47bda6
mov edx [ ebp - 0x2c ]
mov [ edx + 0x224 ] 0xffffffff
mov eax [ ebp - 0x2c ]
mov [ eax + 0x25c ] 0x0
mov eax 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x140
call sub_4796e8
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x210 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x190
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x2c ]
call sub_43a573
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x2c ]
call sub_43bd06
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_47c761
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
sub_43b5ba
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_43b60b
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x140
call sub_47bda6
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_43b60b
push ebp
mov ebp esp
push 0xffffffff
push sub_499638
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x210 ]
push ecx
mov ecx [ ebp - 0x38 ]
add ecx 0x190
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x38 ]
call sub_43a573
test eax eax
je r-xdata
lea edx [ ebp - 0x34 ]
push edx
mov ecx [ ebp - 0x38 ]
call sub_43b463
test eax eax
jne r-xdata
lea ecx [ ebp - 0x2c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x38 ]
call sub_43b463
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x38 ]
call sub_43b8e2
test eax eax
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x38 ]
call sub_43b775
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_47c674
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x1c ]
push edx
mov ecx [ ebp - 0x38 ]
call sub_43caab
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x1c ]
push edx
mov ecx [ ebp - 0x38 ]
call sub_43caab
mov ecx [ ebp - 0x28 ]
imul eax [ ecx + 0x28 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x38 ]
call sub_40a1e0
mov [ ebp - 0x24 ] eax
push 0xfffffff4
mov eax [ ebp - 0x24 ]
push eax
call [ GetWindowLongA@IAT ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x5
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x18 ] edx
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x4e
mov ecx [ ebp - 0x38 ]
call sub_4066d0
mov ecx eax
call sub_402890
sub_43b775
push ebp
mov ebp esp
push 0xffffffff
push sub_499654
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x34 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_47c5ff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_43caab
mov edx [ ebp + 0x8 ]
imul eax [ edx + 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
push edx
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0xc ]
call sub_4027a0
push eax
mov ecx [ ebp + 0xc ]
call sub_47ca58
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x1c ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_4027a0
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x248 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_4600f6
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
push ecx
call sub_47c3de
add esp 0x4
xor edx edx
cmp [ ebp - 0x20 ] 0xffffffff
setne dl
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_45feb7
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x248 ] 0x3
jne r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x2
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] edx
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x240 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x18 ]
push ecx
call sub_467a70
add esp 0xc
sub_43b8e2
push ebp
mov ebp esp
push 0xffffffff
push sub_499679
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x58 ]
call sub_439afe
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x5c ] edx
cmp [ ebp - 0x5c ] 0x7
ja r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x224 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_416c20
push eax
lea edx [ ebp - 0x14 ]
push edx
call sub_416c90
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x5c ]
jmp [ eax * 4 + jump_table_43bce6 ]
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x54 ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x224 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40a100
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov cl [ ebp + 0xc ]
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x240 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x18 ]
mov [ eax + edx ] cl
jmp r-xdata
mov al [ ebp + 0xc ]
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x240 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x18 ]
mov [ edx + ecx ] al
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x24c ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_411274
add esp 0x8
and eax 0xffff
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x240 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov dx [ ebp - 0x10 ]
mov [ ecx + eax ] dx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x24c ]
push edx
lea eax [ ebp - 0x10 ]
push eax
call sub_411274
add esp 0x8
and eax 0xffff
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x240 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov ax [ ebp - 0x10 ]
mov [ edx + ecx ] ax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x24c ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_4112aa
add esp 0x8
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x240 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + edx ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x24c ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_4112aa
add esp 0x8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x240 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + eax ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x18 ] ecx
fld [ ebp - 0x1c ]
fstp [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x24c ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_4112aa
add esp 0x8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x240 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + eax ] edx
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x24c ]
push ecx
lea edx [ ebp + 0xc ]
push edx
call sub_411303
add esp 0x8
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x240 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x18 ]
mov eax [ ebp + 0xc ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_428cd0
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x224 ]
push edx
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x210 ]
push ecx
mov ecx [ ebp - 0x58 ]
call sub_415566
push 0x1
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x58 ]
call sub_405470
mov [ ebp - 0x50 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1c ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x40 ] eax
lea ecx [ ebp - 0x44 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x44 ]
call sub_47c5ff
mov ecx [ ebp - 0x40 ]
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x240 ]
add ecx [ edx ]
push ecx
mov edx [ ebp - 0x34 ]
push edx
call sub_467a70
add esp 0xc
lea ecx [ ebp - 0x38 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x40 ] 0x100
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x60 ] 0x100
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x38 ]
call sub_45feb7
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call sub_47c674
mov edx [ ebp + 0x14 ]
push edx
lea ecx [ ebp - 0x44 ]
call sub_4027c0
push eax
push 0x2
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x58 ]
call sub_43a2e2
lea ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x60 ]
push edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x248 ]
push edx
lea ecx [ ebp - 0x38 ]
call sub_45fecb
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x4c ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x58 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x210 ]
sub ecx [ eax + 0x38 ]
sub ecx 0x1
mov [ ebp - 0x3c ] ecx
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
sub_43bd06
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x6
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_43bf11
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x7
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x30
jne r-xdata
mov [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x4 ] 0x2
jl r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x2d
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov eax 0x1
jmp r-xdata
push 0x1
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov cl [ ebp - 0x10 ]
or cl 0x20
mov [ ebp - 0x10 ] cl
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x78
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x30
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x30
jl r-xdata
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_43c13b
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x39
jle r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x41
jl r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x39
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x61
jl r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x46
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x66
jle r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
sub_43bf11
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x2b
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x2d
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x30
jl r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp + 0x8 ]
call sub_4027c0
push eax
mov eax [ ebp - 0x24 ]
push eax
call [ lstrcpyA@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
call sub_4689cd
add esp 0x8
fstp [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0x8 ]
cmp [ ebp - 0xc ] edx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x2e
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x39
jg r-xdata
xor eax eax
fld [ ebp - 0x1c ]
fcomp [ r--data ]
fnstsw ax
test ah 0x40
je r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x45
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x1c ]
mov [ ecx ] edx
mov eax [ ebp - 0x18 ]
mov [ ecx + 0x4 ] eax
mov eax 0x1
jmp r-xdata
call sub_4689bb
cmp [ eax ] 0x22
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x65
je r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
push eax
call sub_4688f1
add esp 0x4
fstp [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x20 ]
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x44
je r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x2b
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x64
jne r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x2d
je r-xdata
jmp r-xdata
jmp r-xdata
sub_43c13b
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0xc ] al
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x2d
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4027a0
mov [ ebp - 0x20 ] eax
jmp r-xdata
jmp r-xdata
push 0x0
push 0x10
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call sub_468a80
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4027d0
mov [ ebp - 0xc ] al
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x39
jg r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push 0x0
push 0xa
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_468a80
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_4027d0
movsx ecx al
sub ecx 0x30
mov [ ebp - 0xc ] cl
mov eax [ ebp - 0xc ]
and eax 0xff
cdq
mov ecx [ ebp - 0x14 ]
add ecx eax
mov eax [ ebp - 0x10 ]
adc eax edx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x5
ja r-xdata
mov cl [ ebp - 0xc ]
and cl 0x5f
mov [ ebp - 0xc ] cl
mov dl [ ebp - 0xc ]
sub dl 0x37
mov [ ebp - 0xc ] dl
mov al [ ebp - 0xc ]
sub al 0x30
mov [ ebp - 0xc ] al
jmp r-xdata
push 0xffffffff
push 0xffffffff
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_468a80
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
jmp [ ecx * 4 + jump_table_43c359 ]
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
and eax 0xff
cdq
mov ecx [ ebp - 0x14 ]
add ecx eax
mov eax [ ebp - 0x10 ]
adc eax edx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x14 ]
mov [ edx ] eax
mov ecx [ ebp - 0x10 ]
mov [ edx + 0x4 ] ecx
cmp [ ebp - 0x10 ] 0x0
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
jg r-xdata
cmp [ ebp - 0x10 ] 0x1
jg r-xdata
mov [ ebp - 0x2c ] 0x0
jl r-xdata
mov [ ebp - 0x30 ] 0x0
jl r-xdata
mov [ ebp - 0x34 ] 0x0
jl r-xdata
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x14 ] 0x100
jae r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10000
jae r-xdata
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jae r-xdata
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] ecx
sub_43c371
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_43b463
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4141b8
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_43c3a7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_43b463
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_414222
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_43c3dd
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_43b463
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_41428c
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_43c413
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_43b463
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_414496
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_43c449
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_47ad1b
cmp [ ebp + 0x8 ] 0x201
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
and edx 0xffff
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
shr eax 0x10
and eax 0xffff
and eax 0xffff
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
add ecx 0x1d8
call sub_405000
test eax eax
jne r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
call sub_43b463
test eax eax
je r-xdata
push 0x1
mov ecx [ ebp - 0xc ]
call sub_43b5ba
sub_43c4c2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_43b463
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_414b2f
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_43c4f3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_43b463
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_414e81
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_43c524
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x100
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0xd
jne r-xdata
cmp [ ebp - 0x8 ] 0x101
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0xd
jne r-xdata
cmp [ ebp - 0x8 ] 0x102
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_479601
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
shr edx 0x10
and edx 0xffff
and edx 0xffff
push edx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_43c655
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x224 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x8 ] 0xd
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
shr eax 0x10
and eax 0xffff
and eax 0xffff
push eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_43c7c6
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x224 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
shr ecx 0x10
and ecx 0xffff
and ecx 0xffff
push ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_43c79d
mov eax 0x1
jmp r-xdata
sub_43c655
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
cmp [ ebp + 0x8 ] 0xd
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_415ecd
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x210 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x190
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x210 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_43ac95
jmp r-xdata
cmp [ ebp - 0x10 ] 0x2
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx + 0x20c ]
mov ecx [ ebp - 0x18 ]
cmp eax [ ecx + 0x1e0 ]
jle r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x17c
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
push 0x2
push 0x0
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x210 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_43a387
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x17c
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1d8
call sub_405cf0
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4 ] eax
jle r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
push 0x0
mov ecx [ ebp - 0x18 ]
add ecx 0x1d8
call sub_405cf0
mov edx [ ebp - 0x14 ]
sub edx eax
push edx
push 0x4
mov ecx [ ebp - 0x18 ]
call sub_43c4f3
push 0x0
mov edx [ ebp - 0x8 ]
push edx
push 0x4
mov ecx [ ebp - 0x18 ]
call sub_43c4f3
jmp r-xdata
sub_43c79d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0xd
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_43c7c6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0xd
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_43c808
push ebp
mov ebp esp
push 0xffffffff
push sub_49968c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x210 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x190
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x80ee
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x80ef
mov edx [ ebp - 0x10 ]
mov [ edx + 0x20 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x24 ]
mov [ ecx + 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x20 ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x240 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_43996a
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
push 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x210 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_43a2e2
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
sub_43c8f9
push ebp
mov ebp esp
push 0xffffffff
push sub_49969f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x190
call sub_41b1b0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
sub eax 0x80f3
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x250 ] eax
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x250 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_405450
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x30 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x250 ]
mov [ edx + 0x20 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x240 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_43996a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
push 0x2
mov edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_43a2e2
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x24 ]
mov [ edx + 0x20 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x240 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_43996a
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
push 0x2
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_43a2e2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
sub_43caab
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x7
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
jmp [ ecx * 4 + jump_table_43cafe ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_43cb1e
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
add ecx 0x8
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x8 ]
add ecx 0x8
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_43945c
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_43cb7b
push ebp
mov ebp esp
push 0xffffffff
push sub_4996bb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x30 ]
call sub_43ce20
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
push 0x1
mov ecx [ ebp - 0x30 ]
call sub_405450
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x30 ]
add ecx 0x190
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x20 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x18 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x240 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x30 ]
call sub_43996a
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x2c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_47c5ff
lea ecx [ ebp - 0x1c ]
call sub_47c5ff
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x28 ]
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x240 ]
mov ecx [ ebp - 0x10 ]
add eax [ ecx + 0x18 ]
push eax
mov edx [ ebp - 0x20 ]
push edx
call sub_467a70
add esp 0xc
lea ecx [ ebp - 0x24 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x28 ] 0x100
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x34 ] 0x100
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
push 0x2
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x30 ]
call sub_43a2e2
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x248 ]
push ecx
lea ecx [ ebp - 0x24 ]
call sub_45fecb
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
push eax
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_45feb7
jmp r-xdata
sub_43cd53
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_43b5ba
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x244 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x248 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x24c ] edx
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_43cb7b
mov esp ebp
pop ebp
retn 0xc
sub_43cda0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_437746
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_43cdd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_43ce00
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_43ce60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_43ce90
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_43ceb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call [ CreateRectRgnIndirect@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_48070e
mov esp ebp
pop ebp
retn 0x4
sub_43ced0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ Rectangle@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_43cf10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ CheckMenuItem@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_43cf40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ ModifyMenuA@IAT ]
mov esp ebp
pop ebp
retn 0x10
sub_43cf70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
call [ ScreenToClient@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_43cf90
push ebp
mov ebp esp
push 0xffffffff
push sub_4996da
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x11c
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_43d007
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_43d007
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_493af9
mov eax [ ebp - 0x4 ]
mov [ eax + 0x118 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_43d080
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_43d033
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_43d0b0
push ebp
mov ebp esp
push 0xffffffff
push sub_499705
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_47f0ca
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x20
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x14 ]
mov [ edx ] r--data
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x20
call sub_47c7b1
mov ecx [ ebp + 0x18 ]
shl ecx 0x2
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x24 ] eax
mov ecx [ ebp + 0x18 ]
shl ecx 0x2
push ecx
push 0x0
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x24 ]
push eax
call sub_467a10
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x18
sub_43d165
push ebp
mov ebp esp
push 0xffffffff
push sub_499724
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x20
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
call sub_47f19e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_47c3de
add esp 0x4
sub_43d1dd
push ebp
mov ebp esp
sub esp 0x110
push esi
mov [ ebp - 0x110 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x104 ]
push ecx
call sub_47dcaf
mov [ ebp - 0x108 ] 0x0
mov [ ebp - 0x10c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
cmp [ ebp - 0x10c ] ecx
jge r-xdata
jmp r-xdata
lea edx [ ebp - 0x104 ]
push edx
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x10c ]
lea ecx [ ecx + edx * 4 ]
call sub_4027c0
push eax
call sub_47de45
test eax eax
je r-xdata
cmp [ ebp - 0x10c ] 0x0
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp - 0x10c ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x108 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x8 ]
call sub_47c7b1
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x24 ]
mov eax [ ebp - 0x108 ]
mov [ edx ] eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x110 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x10c ]
lea edx [ eax + ecx * 4 - 0x4 ]
push edx
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x10c ]
lea ecx [ ecx + edx * 4 ]
call sub_47c761
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp - 0x110 ]
mov eax [ edx + 0x24 ]
mov edx [ ebp - 0x10c ]
mov esi [ ebp - 0x10c ]
mov ecx [ ecx + esi * 4 - 0x4 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10c ]
add edx 0x1
mov [ ebp - 0x10c ] edx
mov ecx [ ebp - 0x10c ]
sub ecx 0x1
mov [ ebp - 0x10c ] ecx
sub_43d310
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + edx * 4 ]
call sub_47c5ff
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
sub eax 0x1
cmp [ ebp - 0x4 ] eax
jge r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ edx + eax * 4 ]
call sub_47c5ff
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ edx + eax * 4 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ edx + eax * 4 + 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 ]
call sub_47c761
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
mov eax [ eax + esi * 4 + 0x4 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_43d3ac
push ebp
mov ebp esp
push 0xffffffff
push sub_49975e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x150
mov [ ebp - 0x144 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x144 ]
add ecx 0x1c
call sub_4016b0
test eax eax
je r-xdata
mov edx [ ebp - 0x144 ]
mov ecx [ edx + 0x8 ]
call sub_4016b0
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x144 ]
add ecx 0x1c
call sub_4016b0
test eax eax
jne r-xdata
push 0x0
mov edx [ ebp - 0x144 ]
add edx 0x1c
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_43df20
mov [ ebp - 0x124 ] 0x0
jmp r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
jmp r-xdata
mov ecx [ ebp - 0x144 ]
add ecx 0x1c
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0xc ]
cmp [ ebp - 0x124 ] 0x10
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x114 ]
push edx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x114 ]
push eax
call [ lstrlenA@IAT ]
mov [ ebp - 0x11c ] eax
mov ecx [ ebp - 0x11c ]
mov [ ebp + ecx - 0x114 ] 0x5c
mov edx [ ebp - 0x11c ]
add edx 0x1
mov [ ebp - 0x11c ] edx
mov eax [ ebp - 0x11c ]
mov [ ebp + eax - 0x114 ] 0x0
lea ecx [ ebp - 0x118 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x120 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x124 ] 0x0
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
add eax [ ebp - 0x124 ]
push eax
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
call sub_43ded0
jmp r-xdata
mov edx [ ebp - 0x144 ]
mov eax [ ebp - 0x124 ]
cmp eax [ edx + 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x124 ]
add ecx 0x1
mov [ ebp - 0x124 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
call sub_43df00
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x120 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x118 ]
call sub_47c674
push 0x1
mov ecx [ ebp - 0x11c ]
push ecx
lea edx [ ebp - 0x114 ]
push edx
mov eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x118 ]
push ecx
mov ecx [ ebp - 0x144 ]
call sub_47f2a7
test eax eax
jne r-xdata
lea ecx [ ebp - 0x118 ]
call sub_4027c0
mov [ ebp - 0x134 ] eax
lea ecx [ ebp - 0x118 ]
call sub_4027a0
shl eax 0x1
push eax
lea ecx [ ebp - 0x120 ]
call sub_47ca58
mov [ ebp - 0x138 ] eax
jmp r-xdata
mov eax [ ebp - 0x138 ]
mov [ eax ] 0x0
push 0xffffffff
lea ecx [ ebp - 0x120 ]
call sub_47caa7
mov ecx [ ebp - 0x144 ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp - 0x124 ]
lea eax [ eax + edx + 0x1 ]
xor edx edx
mov ecx 0xa
div ecx
push edx
push rw-data
lea edx [ ebp - 0x130 ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x130 ]
push ecx
lea ecx [ ebp - 0x13c ]
call sub_47c6e2
mov [ ebp - 0x148 ] eax
mov edx [ ebp - 0x148 ]
mov [ ebp - 0x14c ] edx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x14c ]
push eax
lea ecx [ ebp - 0x140 ]
push ecx
call sub_47c857
mov [ ebp - 0x150 ] eax
mov edx [ ebp - 0x150 ]
mov [ ebp - 0x154 ] edx
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x154 ]
call sub_4027c0
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x158 ] ecx
mov edx [ ebp - 0x158 ]
push edx
push 0x400
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x15c ] ecx
mov edx [ ebp - 0x15c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
call sub_43df70
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x140 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x13c ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x134 ]
movsx edx [ ecx ]
cmp edx 0x26
jne r-xdata
mov ecx [ ebp - 0x124 ]
add ecx 0x1
mov [ ebp - 0x124 ] ecx
mov edx [ ebp - 0x134 ]
xor eax eax
mov al [ edx ]
xor ecx ecx
mov cl [ eax + rw-data ]
and ecx 0x4
test ecx ecx
je r-xdata
mov eax [ ebp - 0x138 ]
mov [ eax ] 0x26
mov ecx [ ebp - 0x138 ]
add ecx 0x1
mov [ ebp - 0x138 ] ecx
mov ecx [ ebp - 0x138 ]
mov edx [ ebp - 0x134 ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp - 0x138 ]
add ecx 0x1
mov [ ebp - 0x138 ] ecx
mov edx [ ebp - 0x134 ]
add edx 0x1
mov [ ebp - 0x134 ] edx
jmp r-xdata
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x134 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp - 0x138 ]
add edx 0x1
mov [ ebp - 0x138 ] edx
mov eax [ ebp - 0x134 ]
add eax 0x1
mov [ ebp - 0x134 ] eax
mov edx [ ebp - 0x134 ]
movsx eax [ edx ]
test eax eax
je r-xdata
sub_43d7db
push ebp
mov ebp esp
push 0xffffffff
push sub_499771
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x10
call sub_4027a0
add eax 0x5
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
call sub_4036e0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0x4 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x10
call sub_4027c0
push eax
mov edx [ ebp - 0x10 ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
push rw-data
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0xc
call sub_4027c0
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_4919bb
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x18 ]
lea ecx [ edx + eax * 4 ]
call sub_47c761
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov ecx [ ebp - 0x18 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x28 ]
add ecx 0x20
call sub_4027c0
push eax
mov edx [ ebp - 0x10 ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0xc
call sub_4027c0
push eax
mov ecx [ ebp - 0x14 ]
call sub_49194f
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x24 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_43d922
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x10
call sub_4027a0
add eax 0x5
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
call sub_4036e0
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
mov ecx [ ebp - 0x18 ]
add ecx 0xc
call sub_4027c0
push eax
mov ecx [ ebp - 0x8 ]
call sub_48780f
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
cmp eax [ edx + 0x4 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
call sub_47c3de
add esp 0x4
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
lea ecx [ edx + eax * 4 ]
call sub_4016b0
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x10
call sub_4027c0
push eax
mov edx [ ebp - 0x4 ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
lea ecx [ ecx + edx * 4 ]
call sub_4027c0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xc
call sub_4027c0
push eax
mov ecx [ ebp - 0x8 ]
call sub_48780f
mov ecx [ ebp - 0xc ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x20
call sub_4027c0
push eax
mov edx [ ebp - 0x4 ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0xc
call sub_4027c0
push eax
mov ecx [ ebp - 0x8 ]
call sub_48779a
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_43da4f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x4 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
lea ecx [ ecx + edx * 4 ]
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ edx + eax * 4 ]
call sub_4027c0
push eax
call sub_47de45
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ edx + eax * 4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_43dac4
push ebp
mov ebp esp
push 0xffffffff
push sub_499784
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x34 ] ecx
call sub_4036e0
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x30 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x1c ]
cmp edx [ ecx + 0x4 ]
jge r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x1c ]
lea ecx [ ecx + edx * 4 ]
call sub_4016b0
test eax eax
je r-xdata
mov ecx [ ebp - 0x2c ]
call sub_4841fc
mov [ ebp - 0x28 ] eax
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_48420e
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x54 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x58 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x30 ]
call sub_47c761
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x1c ]
lea ecx [ ecx + edx * 4 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x30 ]
call sub_4027c0
push eax
call sub_468ea8
add esp 0x8
test eax eax
je r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
mov ecx [ ebp - 0x24 ]
call [ edx + 0x60 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x24 ]
call [ edx + 0x64 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_405ca0
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x24 ]
mov ecx [ ebp - 0x1c ]
mov [ edx + ecx * 4 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
sub_43dc1f
push ebp
mov ebp esp
push 0xffffffff
push sub_499799
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push esi
mov [ ebp - 0x3c ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x10
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x3c ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x40 ] 0x0
push sub_47c674
push sub_401690
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
mov [ edx ] eax
mov ecx [ ebp - 0x10 ]
push ecx
push 0x4
mov edx [ ebp - 0x28 ]
add edx 0x4
push edx
call sub_467f48
mov eax [ ebp - 0x28 ]
add eax 0x4
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x44 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0x2
push edx
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp + 0x8 ]
jge r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x1c ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
lea ecx [ edx + ecx * 4 ]
call sub_47c761
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov esi [ ebp - 0x1c ]
mov ecx [ ecx + esi * 4 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
lea ecx [ edx + ecx * 4 ]
call sub_47c5ff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov [ ecx + eax * 4 ] 0x0
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
push 0x3
mov ecx [ ebp - 0x30 ]
call sub_43de60
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x24 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x20 ]
mov [ ecx + 0x24 ] edx
mov eax [ ebp - 0x3c ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax 0x1
sub_43de30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_43d165
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_43de60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
push sub_47c674
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x4 ]
push edx
push 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_467e54
mov ecx [ ebp + 0x8 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x4 ]
sub eax 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x4
push edx
call sub_47c3de
add esp 0x4
mov esp ebp
pop ebp
retn 0x4
sub_43ded0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ DeleteMenu@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_43df20
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
push eax
push 0x100
push 0x100
mov ecx [ ebp + 0xc ]
call sub_47ca58
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
push eax
call [ GetMenuStringA@IAT ]
mov [ ebp - 0x4 ] eax
push 0xffffffff
mov ecx [ ebp + 0xc ]
call sub_47caa7
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_43df70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ InsertMenuA@IAT ]
mov esp ebp
pop ebp
retn 0x10
sub_43dfa0
push ebp
mov ebp esp
push 0xffffffff
push sub_4997ba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x34c
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_43e027
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_43e027
push ebp
mov ebp esp
push 0xffffffff
push sub_499863
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_481c5c
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x40 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_401260
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_406640
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_406640
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_406640
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_4635d0
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0xb0
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0xd0
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0xe0
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0xf0
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x100
call sub_428cd0
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_41de80
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x11c ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x120 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x124 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x128
call sub_41de80
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x10 ]
add ecx 0x134
call sub_41de80
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_41de80
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
call sub_405070
mov [ ebp - 0x4 ] 0xa
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x154 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x15c ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x160 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x16c ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x174 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x23c ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x240 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x244 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x2c8
call sub_401690
mov [ ebp - 0x4 ] 0xb
mov eax [ ebp - 0x10 ]
mov [ eax + 0x2cc ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x2d0 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x2d4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x2d8 ] 0xffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x2dc ] 0xffff
mov edx [ ebp - 0x10 ]
mov [ edx + 0x2e0 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x2e4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x2e8 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x2ec ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x2f8 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x2fc ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x300 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x304 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x308 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x30c ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x324
call sub_4770bc
mov eax [ ebp - 0x10 ]
mov [ eax + 0x338 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x10 ]
mov [ edx + 0x17c ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x180 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x1d0 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_43e319
push ebp
mov ebp esp
push 0xffffffff
push sub_49991b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_480765
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_480765
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_480765
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
call sub_480765
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x10 ]
add ecx 0x324
call sub_4770ef
mov [ ebp - 0x4 ] 0xa
mov ecx [ ebp - 0x10 ]
add ecx 0x2c8
call sub_47c674
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
call sub_4050c0
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_41df4e
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x10 ]
add ecx 0x134
call sub_41df4e
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x10 ]
add ecx 0x128
call sub_41df4e
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_41df4e
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_463603
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_405020
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_405020
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_405020
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_401380
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_481c6c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_43e45a
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0x30 ]
not edx
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x64
call sub_45ed60
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_45ed40
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x40 ] eax
sub_43e4a3
push ebp
mov ebp esp
push 0xffffffff
push sub_499931
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x98
mov [ ebp - 0xa4 ] ecx
mov eax [ ebp - 0xa4 ]
push eax
lea ecx [ ebp - 0xa0 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xa4 ]
mov edx [ ecx + 0x248 ]
add edx 0xb0
push edx
lea ecx [ ebp - 0xa0 ]
call sub_47fe32
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0xa0 ]
call sub_405d30
mov ecx [ ebp - 0xa4 ]
mov edx [ ebp - 0x74 ]
mov [ ecx + 0xa8 ] edx
mov eax [ ebp - 0xa4 ]
mov ecx [ ebp - 0x88 ]
mov [ eax + 0xac ] ecx
mov edx [ ebp - 0x8c ]
push edx
lea ecx [ ebp - 0xa0 ]
call sub_47fe32
lea eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0xa4 ]
mov ecx [ ecx + 0x248 ]
add ecx 0xb0
call sub_416d50
mov ecx [ ebp - 0xa4 ]
call sub_40a1e0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
push edx
call ImmGetContext
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call ImmSetCompositionFontA
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call ImmReleaseContext
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa0 ]
call sub_4804d8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_43e5b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
call sub_406660
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x58 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
call sub_480765
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0x2c ]
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x54
call sub_406660
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x54
call sub_480765
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0x30 ]
push edx
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_406660
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_480765
sub_43e647
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
or ecx 0x300000
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_481cbf
mov esp ebp
pop ebp
retn 0x4
sub_43e672
push ebp
mov ebp esp
push 0xffffffff
push sub_49994d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47c5ff
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x160 ] ecx
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x160 ]
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0xa0 ]
jge r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0xa0 ]
jge r-xdata
mov [ ebp - 0x22 ] 0x20
mov [ ebp - 0x21 ] 0x0
lea edx [ ebp - 0x24 ]
push edx
mov al [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_45ed80
mov ecx [ ebp - 0x1c ]
lea edx [ ebp + ecx - 0x24 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_45ee10
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca40
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
push rw-data
lea eax [ ebp - 0x18 ]
push eax
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca40
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
push rw-data
lea ecx [ ebp - 0x18 ]
push ecx
call sub_475837
add esp 0xc
lea edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca40
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0x160 ] eax
jg r-xdata
push rw-data
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca04
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
add ecx 0x1
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x160 ] ecx
jne r-xdata
push rw-data
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca04
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0xa0 ]
jne r-xdata
push rw-data
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca04
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0x2
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x160 ]
sub ecx edx
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
add ecx 0x2
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x160 ]
sub eax ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0xa0 ]
jge r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0xa0 ]
jge r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
push rw-data
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca04
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
and eax 0x8000000f
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
mov ecx 0xa
idiv ecx
push edx
push rw-data
lea edx [ ebp - 0x18 ]
push edx
call sub_475837
add esp 0xc
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca40
jmp r-xdata
push eax
push rw-data
lea ecx [ ebp - 0x18 ]
push ecx
call sub_475837
add esp 0xc
lea edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x2c8
call sub_47ca40
jmp r-xdata
dec eax
or eax 0xfffffff0
inc eax
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
sub_43ea2e
push ebp
mov ebp esp
push 0xffffffff
push sub_49996c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2d8
push esi
mov [ ebp - 0x22c ] ecx
mov ecx [ ebp + 0x8 ]
call sub_405110
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x22c ]
call sub_405c80
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x54 ]
call sub_404f90
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
add edx 0xb0
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x28 ]
mov [ ebp - 0x6c ] eax
lea ecx [ ebp - 0x64 ]
call sub_428cd0
lea eax [ ebp - 0x64 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x50 ]
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x3c ]
cmp edx [ ecx + 0xe4 ]
jle r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe4 ]
mov [ ebp - 0x230 ] edx
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x230 ] eax
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xd8 ]
mov [ ebp - 0x234 ] edx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
mov eax [ ebp - 0x230 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x40 ]
cmp edx [ ecx + 0xd8 ]
jle r-xdata
mov ecx [ ebp - 0x22c ]
add ecx 0xd0
push ecx
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_4092d0
test eax eax
je r-xdata
mov ecx [ ebp - 0x22c ]
add ecx 0x4c
call sub_45ee80
push eax
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x30 ]
push eax
call [ FillRect@IAT ]
push 0xb
push rw-data
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xc4 ]
push edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xc0 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ TextOutA@IAT ]
mov ecx [ ebp - 0x22c ]
add ecx 0x2c8
call sub_4027a0
push eax
mov ecx [ ebp - 0x22c ]
add ecx 0x2c8
call sub_4027c0
push eax
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xc4 ]
push ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xa8 ]
imul eax eax 0xb
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xc0 ]
add edx eax
push edx
mov eax [ ebp - 0x30 ]
push eax
call [ TextOutA@IAT ]
mov eax [ ebp - 0x234 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x22c ]
add ecx 0x5c
call sub_45ee80
push eax
lea ecx [ ebp - 0x40 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ FillRect@IAT ]
push 0x1
mov ecx [ ebp + 0x8 ]
call sub_47fea7
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x1c ]
call sub_428cd0
mov eax [ ebp - 0x22c ]
add eax 0xc0
push eax
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_4092d0
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_45eed0
mov [ ebp - 0x68 ] eax
mov ecx [ ebp - 0x54 ]
call sub_404f70
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ ebp - 0x22c ]
add ecx 0x54
call sub_45ee80
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call [ FillRect@IAT ]
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x60 ]
cmp eax [ edx + 0xd4 ]
jle r-xdata
mov eax [ ebp - 0x68 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x22c ]
add edx 0xe0
push edx
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_4092d0
test eax eax
je r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xd4 ]
mov [ ebp - 0x238 ] eax
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x238 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x22c ]
call sub_45b11e
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x30 ]
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47fea7
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x28 ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x50 ]
call sub_41b22c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x22c ]
add eax 0xf0
push eax
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_4092d0
test eax eax
je r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x60 ]
cmp edx [ ecx + 0xe4 ]
jle r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xdc ]
mov [ ebp - 0x23c ] eax
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x23c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov eax [ ebp - 0x238 ]
cdq
idiv [ ecx + 0xac ]
sub eax 0x1
mov [ ebp - 0x70 ] eax
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x58 ]
cmp eax [ edx + 0xdc ]
jge r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x60 ]
cmp eax [ edx + 0xf4 ]
jle r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe4 ]
mov [ ebp - 0x244 ] edx
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x244 ] eax
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x240 ] ecx
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov eax [ ebp - 0x23c ]
cdq
idiv [ ecx + 0xac ]
mov [ ebp - 0x74 ] eax
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x22c ]
mov ecx [ edx + 0x164 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x78 ] ecx
mov edx [ ebp - 0x74 ]
cmp edx [ ebp - 0x78 ]
jge r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf4 ]
mov [ ebp - 0x29c ] eax
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x29c ] ecx
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xec ]
mov [ ebp - 0x248 ] eax
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x248 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov eax [ ebp - 0x244 ]
cdq
idiv [ ecx + 0xac ]
sub eax 0x1
mov [ ebp - 0xb0 ] eax
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x58 ]
cmp eax [ edx + 0xec ]
jge r-xdata
mov [ ebp - 0x88 ] 0x20
mov [ ebp - 0x7f ] 0x20
mov [ ebp - 0x7e ] 0x20
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x70 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xd4 ]
add eax ecx
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x15c ]
add edx [ ebp - 0x70 ]
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
imul edx [ ecx + 0xa0 ]
mov [ ebp - 0x8c ] edx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov edx [ ebp - 0x240 ]
mov [ ebp - 0x74 ] edx
mov eax [ ebp - 0x74 ]
cmp eax [ ebp - 0x70 ]
jl r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xfc ]
mov [ ebp - 0x2a0 ] eax
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x2a0 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov eax [ ebp - 0x29c ]
cdq
idiv [ ecx + 0xac ]
sub eax 0x1
mov [ ebp - 0x190 ] eax
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x58 ]
cmp eax [ edx + 0xfc ]
jge r-xdata
mov ecx [ ebp - 0xec ]
mov [ ebp - 0x24c ] ecx
mov eax [ ebp - 0xd4 ]
mov [ ebp - 0x24c ] eax
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov eax [ ebp - 0x248 ]
cdq
idiv [ ecx + 0xac ]
mov [ ebp - 0xd4 ] eax
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x22c ]
mov ecx [ edx + 0x164 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0xec ] ecx
mov edx [ ebp - 0xd4 ]
cmp edx [ ebp - 0xec ]
jge r-xdata
mov ecx [ ebp - 0x70 ]
mov [ ebp - 0xa0 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov [ ebp - 0x9c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1ac ]
mov [ ebp - 0x2a4 ] ecx
mov eax [ ebp - 0x1a0 ]
mov [ ebp - 0x2a4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov eax [ ebp - 0x2a0 ]
cdq
idiv [ ecx + 0xac ]
mov [ ebp - 0x1a0 ] eax
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x22c ]
mov ecx [ edx + 0x164 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x1ac ] ecx
mov edx [ ebp - 0x1a0 ]
cmp edx [ ebp - 0x1ac ]
jge r-xdata
mov [ ebp - 0xa2 ] 0x20
mov [ ebp - 0xa1 ] 0x0
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xa8 ]
imul edx edx 0x3
mov [ ebp - 0xf8 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
add edx 0x1
imul edx edx 0x3
add edx 0x1
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x20c ] eax
mov eax [ ebp - 0x20c ]
mov [ ebp - 0xe4 ] eax
lea ecx [ ebp - 0xc4 ]
call sub_428cd0
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0xd4 ]
sub eax [ ebp - 0xb0 ]
add eax 0x1
mov ecx [ edx + 0xa0 ]
imul ecx eax
mov [ ebp - 0xa8 ] ecx
mov edx [ ebp - 0xa8 ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x210 ] eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xdc ] 0x0
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x24c ]
mov [ ebp - 0xd4 ] edx
mov eax [ ebp - 0xd4 ]
cmp eax [ ebp - 0xb0 ]
jge r-xdata
mov edx [ ebp - 0xa0 ]
cmp edx [ ebp - 0x74 ]
jge r-xdata
mov edx [ ebp - 0x9c ]
cmp edx [ ebp - 0x74 ]
jge r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
lea ecx [ ebp - 0x19c ]
call sub_43ce40
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xd8 ]
mov edx [ ebp - 0x22c ]
add ecx [ edx + 0xa8 ]
mov eax [ ebp - 0x22c ]
cmp [ eax + 0xf0 ] ecx
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0x2a4 ]
mov [ ebp - 0x1a0 ] edx
mov eax [ ebp - 0x1a0 ]
cmp eax [ ebp - 0x190 ]
jge r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x160 ]
mov [ ebp - 0xf0 ] eax
mov [ ebp - 0x124 ] 0x0
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x64 ]
cmp edx [ ecx + 0xe0 ]
jle r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x64 ]
sub ecx [ eax + 0xe0 ]
mov edx [ ebp - 0x22c ]
mov esi [ edx + 0xa8 ]
imul esi esi 0x3
mov eax ecx
cdq
idiv esi
test eax eax
jge r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x90 ] 0x8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x90 ] 0x9
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
add ecx 0x2
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x21c ] eax
mov edx [ ebp - 0x21c ]
mov [ ebp - 0x1a8 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
shl edx 0x2
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x1a4 ] eax
mov [ ebp - 0x194 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x22c ]
add eax 0xf0
mov ecx [ eax ]
mov [ ebp - 0x1bc ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x1b8 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1b4 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x1b0 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xd8 ]
mov edx [ ebp - 0x22c ]
add ecx [ edx + 0xa8 ]
mov [ ebp - 0x1bc ] ecx
lea eax [ ebp - 0x1bc ]
push eax
lea ecx [ ebp - 0x19c ]
call sub_43ceb0
lea ecx [ ebp - 0x19c ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4801f8
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
cmp [ ebp - 0xf0 ] edx
jge r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x64 ]
sub ecx [ eax + 0xe0 ]
mov esi [ ebp - 0x22c ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0xf0 ]
add edx [ ebp - 0x124 ]
mov [ ebp - 0xf0 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x64 ]
sub ecx [ eax + 0xe0 ]
mov edx [ ebp - 0x22c ]
mov esi [ edx + 0xa8 ]
imul esi esi 0x3
mov eax ecx
cdq
idiv esi
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x250 ] 0x0
jmp r-xdata
cmp [ ebp - 0x90 ] 0x1
jl r-xdata
cmp [ ebp - 0x90 ] 0x0
jl r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x194 ]
cmp ecx [ eax + 0xa0 ]
jge r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
mov [ ebp - 0x258 ] eax
mov eax [ ebp - 0xf0 ]
mov [ ebp - 0x258 ] eax
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x5c ]
sub ecx [ eax + 0xe0 ]
mov edx [ ebp - 0x22c ]
mov esi [ edx + 0xa8 ]
imul esi esi 0x3
mov eax ecx
cdq
idiv esi
add eax 0x1
mov [ ebp - 0x254 ] eax
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
mov [ ebp - 0x254 ] edx
jmp r-xdata
mov eax [ ebp - 0x250 ]
mov [ ebp - 0xf0 ] eax
mov ecx [ ebp - 0x22c ]
mov ecx [ ecx + 0x248 ]
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x5c ]
sub eax [ edx + 0xe0 ]
mov edx [ ebp - 0x22c ]
mov esi [ edx + 0xa8 ]
imul esi esi 0x3
cdq
idiv esi
add eax 0x1
cmp [ ecx + 0xa0 ] eax
jge r-xdata
push 0xb
lea eax [ ebp - 0x88 ]
push eax
mov ecx [ ebp - 0x7c ]
push ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xd0 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call [ TextOutA@IAT ]
jmp r-xdata
mov edx [ ebp - 0x98 ]
and edx 0xf
mov [ ebp - 0x94 ] dl
mov eax [ ebp - 0x94 ]
and eax 0xff
cmp eax 0x9
jg r-xdata
push 0xb
lea edx [ ebp - 0x88 ]
push edx
mov eax [ ebp - 0x7c ]
push eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xd0 ]
push edx
mov eax [ ebp - 0x30 ]
push eax
call [ TextOutA@IAT ]
jmp r-xdata
mov eax [ ebp - 0x98 ]
xor edx edx
mov ecx 0xa
div ecx
add edx 0x30
mov [ ebp - 0x94 ] dl
mov edx [ ebp - 0x90 ]
mov al [ ebp - 0x94 ]
mov [ ebp + edx - 0x88 ] al
mov eax [ ebp - 0x98 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0x98 ] eax
jmp r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x15c ]
add eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
imul eax [ edx + 0xa0 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_41b237
mov eax [ ebp - 0x1a4 ]
push eax
mov ecx [ ebp - 0x1a8 ]
push ecx
mov edx [ ebp - 0x1a0 ]
push edx
mov eax [ ebp - 0x190 ]
push eax
lea ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x22c ]
mov eax [ ebp - 0x22c ]
call [ eax + 0x344 ]
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x224 ] ecx
mov edx [ ebp - 0x224 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x228 ] eax
mov ecx [ ebp - 0x228 ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
jne r-xdata
mov edx [ ebp - 0x194 ]
mov eax [ ebp - 0x1a4 ]
mov ecx [ ebp - 0x22c ]
mov ecx [ ecx + 0xa8 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x124 ]
imul edx [ ecx + 0xa8 ]
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0xf0 ]
mov [ ebp - 0x120 ] eax
cmp [ ebp - 0x12c ] 0x0
je r-xdata
mov edx 0x3
sub edx [ ebp - 0x12c ]
mov eax [ ebp - 0x124 ]
add eax edx
mov [ ebp - 0x124 ] eax
mov ecx [ ebp - 0x258 ]
mov [ ebp - 0xf0 ] ecx
mov eax [ ebp - 0xf0 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x12c ] edx
mov eax [ ebp - 0xf0 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0xf0 ] eax
cmp [ ebp - 0x12c ] 0x0
je r-xdata
mov ecx [ ebp - 0x108 ]
cmp ecx [ ebp - 0xd4 ]
jge r-xdata
mov eax [ ebp - 0x254 ]
mov [ ebp - 0xcc ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax [ ebp - 0xcc ]
mov [ ebp - 0x10c ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x15c ]
add edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
imul edx [ ecx + 0xa0 ]
mov [ ebp - 0x100 ] edx
push 0x0
push 0x0
mov edx [ ebp - 0x100 ]
push edx
lea ecx [ ebp - 0x50 ]
call sub_41b237
mov eax [ ebp - 0xe0 ]
push eax
mov ecx [ ebp - 0xa8 ]
push ecx
lea ecx [ ebp - 0x50 ]
call sub_41b7fb
mov [ ebp - 0xa8 ] eax
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0x108 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0xb0 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe4 ]
add eax ecx
mov [ ebp - 0xfc ] eax
jmp r-xdata
mov edx [ ebp - 0xa0 ]
add edx 0x1
mov [ ebp - 0xa0 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x7c ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x7c ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x8c ]
add ecx [ eax + 0xa0 ]
mov [ ebp - 0x8c ] ecx
mov dl [ ebp - 0x94 ]
add dl 0x37
mov [ ebp - 0x94 ] dl
mov cl [ ebp - 0x94 ]
add cl 0x30
mov [ ebp - 0x94 ] cl
jmp r-xdata
mov edx [ ebp - 0x9c ]
add edx 0x1
mov [ ebp - 0x9c ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x7c ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x7c ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x8c ]
add ecx [ eax + 0xa0 ]
mov [ ebp - 0x8c ] ecx
mov ecx [ ebp - 0x90 ]
sub ecx 0x1
mov [ ebp - 0x90 ] ecx
mov edx [ ebp - 0x22c ]
cmp [ edx + 0x27c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x22c ]
cmp [ ecx + 0x124 ] 0x8
jne r-xdata
mov ecx [ ebp - 0x194 ]
add ecx 0x1
mov [ ebp - 0x194 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe8 ]
mov ecx [ ebp - 0x22c ]
add eax [ ecx + 0xa8 ]
cmp [ ebp - 0x5c ] eax
jge r-xdata
mov ecx [ ebp - 0x120 ]
add ecx 0x1
mov [ ebp - 0x120 ] ecx
jmp r-xdata
cmp [ ebp - 0xf0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x90 ]
sub ecx 0x1
mov [ ebp - 0x90 ] ecx
mov eax [ ebp - 0x90 ]
mov cl [ ebp - 0x94 ]
mov [ ebp + eax - 0x88 ] cl
mov edx [ ebp - 0x98 ]
shr edx 0x4
mov [ ebp - 0x98 ] edx
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x22c ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x1c4 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x22c ]
mov eax [ ecx + 0x13c ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x1c0 ] eax
mov ecx [ ebp - 0x1c4 ]
cmp ecx [ ebp - 0x1a0 ]
jg r-xdata
mov eax [ ebp - 0x22c ]
cmp [ eax + 0x11c ] 0x0
je r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xd8 ]
mov edx [ ebp - 0x22c ]
add ecx [ edx + 0xa8 ]
mov eax [ ebp - 0x22c ]
cmp [ eax + 0xf0 ] ecx
jg r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xe8 ]
mov edx [ ebp - 0x22c ]
add ecx [ edx + 0xa8 ]
mov [ ebp - 0x25c ] ecx
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x25c ] edx
jmp r-xdata
mov edx [ ebp - 0xe4 ]
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0xe0 ]
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov [ ebp - 0xe8 ] 0x0
mov edx [ ebp - 0xf0 ]
mov [ ebp - 0x114 ] edx
mov eax [ ebp - 0xf0 ]
imul eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe0 ]
add edx eax
mov [ ebp - 0x110 ] edx
jmp r-xdata
mov edx [ ebp - 0xdc ]
add edx [ ebp - 0xf0 ]
mov [ ebp - 0xdc ] edx
mov eax [ ebp - 0xdc ]
cmp eax [ ebp - 0xa8 ]
jl r-xdata
mov edx [ ebp - 0x1c0 ]
cmp edx [ ebp - 0x190 ]
jl r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x19c ]
call sub_43ce90
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_4801f8
lea ecx [ ebp - 0x19c ]
call sub_480765
push 0xffffffff
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x20 ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe8 ]
mov eax [ ebp - 0x22c ]
add edx [ eax + 0xa8 ]
cmp [ ebp - 0x5c ] edx
jge r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
mov [ ebp - 0x260 ] eax
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x25c ]
sub eax [ edx + 0xe0 ]
cdq
idiv [ ebp - 0xf8 ]
mov edx [ ebp - 0xf0 ]
lea eax [ eax + edx + 0x2 ]
cmp [ ecx + 0xa0 ] eax
jge r-xdata
mov eax [ ebp - 0x22c ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov edx [ ebp - 0x22c ]
cmp [ edx + 0x124 ] 0x8
jne r-xdata
mov eax [ ebp - 0x114 ]
cmp eax [ ebp - 0xcc ]
jge r-xdata
mov ecx [ ebp - 0x100 ]
add ecx [ ebp - 0xf0 ]
mov [ ebp - 0x100 ] ecx
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe8 ]
mov ecx [ ebp - 0x22c ]
add eax [ ecx + 0xa8 ]
mov [ ebp - 0x264 ] eax
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x264 ] ecx
jmp r-xdata
mov eax [ ebp - 0x260 ]
mov [ ebp - 0xcc ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax [ ebp - 0xcc ]
mov [ ebp - 0x134 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x15c ]
add edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
imul edx [ ecx + 0xa0 ]
mov [ ebp - 0x11c ] edx
push 0x0
push 0x0
mov edx [ ebp - 0x11c ]
push edx
lea ecx [ ebp - 0x50 ]
call sub_41b237
mov eax [ ebp - 0xe0 ]
push eax
mov ecx [ ebp - 0xa8 ]
push ecx
lea ecx [ ebp - 0x50 ]
call sub_41b7fb
mov [ ebp - 0xa8 ] eax
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0xb0 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe4 ]
add eax ecx
mov [ ebp - 0x118 ] eax
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x22c ]
mov ecx [ edx + 0x130 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x148 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x22c ]
mov ecx [ edx + 0x13c ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x144 ] ecx
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0xd4 ]
jg r-xdata
mov ecx [ ebp - 0x22c ]
cmp [ ecx + 0x11c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x30 ]
mov ecx [ ebp - 0xac ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x2c ]
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0xfc ]
add edx [ ecx + 0xac ]
push edx
mov eax [ ebp - 0xe8 ]
sub eax 0x1
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xa8 ]
imul edx eax
mov eax [ ebp - 0xc8 ]
add eax edx
push eax
mov ecx [ ebp - 0xfc ]
push ecx
mov edx [ ebp - 0xc8 ]
push edx
lea ecx [ ebp - 0xc4 ]
call sub_4092a0
push 0x0
mov eax [ ebp - 0xe8 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0xe4 ]
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push 0x2
mov eax [ ebp - 0xfc ]
push eax
mov ecx [ ebp - 0xc8 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ ExtTextOutA@IAT ]
cmp [ ebp - 0x10c ] 0x0
je r-xdata
mov ecx [ ebp - 0xdc ]
cmp ecx [ ebp - 0xa8 ]
jl r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0x2
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x160 ]
sub edx eax
test edx edx
jge r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x64 ]
sub eax [ edx + 0xf0 ]
mov ecx [ ebp - 0x22c ]
cdq
idiv [ ecx + 0xa8 ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x130 ]
cmp ecx [ ebp - 0xd4 ]
jge r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x264 ]
sub eax [ edx + 0xe0 ]
cdq
idiv [ ebp - 0xf8 ]
mov ecx [ ebp - 0xf0 ]
lea edx [ eax + ecx + 0x2 ]
mov [ ebp - 0x260 ] edx
mov eax [ ebp - 0x144 ]
cmp eax [ ebp - 0xb0 ]
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0xdc ]
add eax [ ebp - 0x10c ]
mov [ ebp - 0xdc ] eax
mov ecx [ ebp - 0x100 ]
add ecx [ ebp - 0x10c ]
mov [ ebp - 0x100 ] ecx
mov edx [ ebp - 0xe0 ]
add edx [ ebp - 0xdc ]
mov al [ edx ]
mov [ ebp - 0x104 ] al
mov ecx [ ebp - 0xdc ]
add ecx 0x1
mov [ ebp - 0xdc ] ecx
lea edx [ ebp - 0xd0 ]
push edx
lea eax [ ebp - 0xf4 ]
push eax
mov ecx [ ebp - 0x100 ]
push ecx
mov dl [ ebp - 0x104 ]
push edx
mov ecx [ ebp - 0x22c ]
call sub_45cf92
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x114 ]
cmp eax [ ebp - 0xf0 ]
jne r-xdata
cmp [ ebp - 0xe8 ] 0x0
je r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0x2
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x160 ]
sub ecx edx
mov [ ebp - 0x2b0 ] ecx
mov [ ebp - 0x2b0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x64 ]
sub eax [ edx + 0xf0 ]
mov ecx [ ebp - 0x22c ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0x2a8 ] eax
mov [ ebp - 0x2a8 ] 0x0
jmp r-xdata
cmp [ ebp - 0xf0 ] 0x0
je r-xdata
mov [ ebp - 0x14c ] 0x0
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0xcc ]
xor ecx ecx
cmp eax [ edx + 0xa0 ]
sete cl
mov [ ebp - 0x168 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov ecx [ ebp - 0x108 ]
add ecx 0x1
mov [ ebp - 0x108 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0xfc ]
add eax [ edx + 0xac ]
mov [ ebp - 0xfc ] eax
mov eax [ ebp - 0xb4 ]
cmp eax [ ebp - 0xf4 ]
jne r-xdata
mov ecx [ ebp - 0x110 ]
mov [ ebp - 0xc8 ] ecx
mov edx [ ebp - 0xf4 ]
mov [ ebp - 0xb4 ] edx
mov eax [ ebp - 0xd0 ]
mov [ ebp - 0xac ] eax
mov ecx [ ebp - 0xe4 ]
push ecx
mov dl [ ebp - 0x104 ]
push edx
mov ecx [ ebp - 0x22c ]
call sub_45ed80
mov [ ebp - 0xe8 ] 0x3
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xb4 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0xac ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0xfc ]
add ecx [ eax + 0xac ]
push ecx
mov edx [ ebp - 0xe8 ]
sub edx 0x1
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
mov edx [ ebp - 0xc8 ]
add edx ecx
push edx
mov eax [ ebp - 0xfc ]
push eax
mov ecx [ ebp - 0xc8 ]
push ecx
lea ecx [ ebp - 0xc4 ]
call sub_4092a0
push 0x0
mov edx [ ebp - 0xe8 ]
sub edx 0x1
push edx
mov eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push 0x2
mov edx [ ebp - 0xfc ]
push edx
mov eax [ ebp - 0xc8 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call [ ExtTextOutA@IAT ]
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x5c ]
sub ecx [ eax + 0xf0 ]
mov esi [ ebp - 0x22c ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
add eax 0x1
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
mov [ ebp - 0x2b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x2b0 ]
mov [ ebp - 0x1e4 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x5c ]
sub eax [ edx + 0xf0 ]
mov esi [ ebp - 0x22c ]
cdq
idiv [ esi + 0xa8 ]
add eax 0x1
cmp [ ecx + 0xa0 ] eax
jge r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x5c ]
sub ecx [ eax + 0xf0 ]
mov esi [ ebp - 0x22c ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
mov [ ebp - 0x2ac ] edx
jmp r-xdata
mov edx [ ebp - 0x2a8 ]
mov [ ebp - 0x1e4 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x5c ]
sub eax [ edx + 0xf0 ]
mov esi [ ebp - 0x22c ]
cdq
idiv [ esi + 0xa8 ]
add eax 0x1
cmp [ ecx + 0xa0 ] eax
jge r-xdata
cmp [ ebp - 0x12c ] 0x0
je r-xdata
mov edx [ ebp - 0xdc ]
add edx [ ebp - 0xf0 ]
mov [ ebp - 0xdc ] edx
mov eax [ ebp - 0xdc ]
cmp eax [ ebp - 0xa8 ]
jl r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x160 ]
cdq
idiv ecx
mov eax edx
cdq
mov ecx 0x3
idiv ecx
mov eax [ ebp - 0x22c ]
imul edx [ eax + 0xa8 ]
mov [ ebp - 0x14c ] edx
mov ecx [ ebp - 0x22c ]
mov eax [ ecx + 0x160 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x16c ] eax
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x12c ]
sub eax [ ebp - 0x16c ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x12c ]
mov [ ebp - 0x164 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x138 ]
mov [ ebp - 0x150 ] ecx
jmp r-xdata
mov edx [ ebp - 0xb4 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0xac ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0xfc ]
add ecx [ eax + 0xac ]
push ecx
mov edx [ ebp - 0xe8 ]
sub edx 0x1
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
mov edx [ ebp - 0xc8 ]
add edx ecx
push edx
mov eax [ ebp - 0xfc ]
push eax
mov ecx [ ebp - 0xc8 ]
push ecx
lea ecx [ ebp - 0xc4 ]
call sub_4092a0
push 0x0
mov edx [ ebp - 0xe8 ]
sub edx 0x1
push edx
mov eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push 0x2
mov edx [ ebp - 0xfc ]
push edx
mov eax [ ebp - 0xc8 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call [ ExtTextOutA@IAT ]
mov edx [ ebp - 0x110 ]
mov [ ebp - 0xc8 ] edx
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0xe4 ]
push edx
mov al [ ebp - 0x104 ]
push eax
mov ecx [ ebp - 0x22c ]
call sub_45ed80
mov [ ebp - 0xe8 ] 0x3
mov ecx [ ebp - 0xac ]
cmp ecx [ ebp - 0xd0 ]
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
add ecx 0x2
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x160 ]
sub eax ecx
mov [ ebp - 0x2b8 ] eax
mov [ ebp - 0x2b8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2b4 ]
mov [ ebp - 0x1c8 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0x2
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x160 ]
sub ecx edx
test ecx ecx
jge r-xdata
lea ecx [ ebp - 0x1dc ]
call sub_428cd0
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x22c ]
mov edx [ eax + 0x130 ]
cmp edx [ ecx + 0x13c ]
jne r-xdata
mov edx [ ebp - 0x2ac ]
mov [ ebp - 0x1c8 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x12c ]
mov [ ebp - 0x1e0 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x138 ]
mov [ ebp - 0x1cc ] eax
jmp r-xdata
mov [ ebp - 0xe8 ] 0x0
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe0 ]
add eax [ ebp - 0x124 ]
mov ecx 0x3
sub ecx [ ebp - 0x12c ]
mov edx [ ebp - 0x22c ]
imul ecx [ edx + 0xa8 ]
sub eax ecx
mov [ ebp - 0x140 ] eax
mov eax [ ebp - 0xdc ]
cmp eax [ ebp - 0xa8 ]
jl r-xdata
mov ecx [ ebp - 0x11c ]
add ecx [ ebp - 0xf0 ]
mov [ ebp - 0x11c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x12c ]
sub edx [ ebp - 0x16c ]
mov [ ebp - 0x268 ] edx
mov [ ebp - 0x268 ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x160 ]
call sub_428cd0
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x22c ]
mov edx [ eax + 0x130 ]
cmp edx [ ecx + 0x13c ]
jne r-xdata
mov eax [ ebp - 0x114 ]
add eax 0x1
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0x110 ]
add ecx [ ebp - 0xf8 ]
mov [ ebp - 0x110 ] ecx
mov edx [ ebp - 0x100 ]
add edx 0x1
mov [ ebp - 0x100 ] edx
cmp [ ebp - 0xd8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x12c ]
sub edx [ ebp - 0x1e8 ]
mov [ ebp - 0x2bc ] edx
mov [ ebp - 0x2bc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x1e8 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x12c ]
sub eax [ ebp - 0x1e8 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x130 ]
add ecx 0x1
mov edx [ ebp - 0x22c ]
cmp ecx [ edx + 0x13c ]
jne r-xdata
mov eax [ ebp - 0x1e4 ]
cmp eax [ ebp - 0x1e0 ]
jle r-xdata
mov ecx [ ebp - 0x13c ]
cmp ecx [ ebp - 0xcc ]
jge r-xdata
mov ecx [ ebp - 0xe0 ]
add ecx [ ebp - 0xdc ]
mov dl [ ecx ]
mov [ ebp - 0x128 ] dl
mov eax [ ebp - 0xdc ]
add eax 0x1
mov [ ebp - 0xdc ] eax
lea ecx [ ebp - 0xa4 ]
push ecx
mov dl [ ebp - 0x128 ]
push edx
mov ecx [ ebp - 0x22c ]
call sub_45ed80
mov eax [ ebp - 0x140 ]
mov [ ebp - 0xc8 ] eax
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0xb4 ]
push edx
mov eax [ ebp - 0x11c ]
push eax
mov cl [ ebp - 0x128 ]
push ecx
mov ecx [ ebp - 0x22c ]
call sub_45cf92
mov [ ebp - 0xd8 ] eax
mov edx [ ebp - 0x12c ]
lea eax [ ebp + edx - 0xa4 ]
push eax
mov ecx [ ebp - 0xe4 ]
push ecx
call [ lstrcpyA@IAT ]
mov edx 0x3
sub edx [ ebp - 0x12c ]
mov [ ebp - 0xe8 ] edx
mov eax [ ebp - 0x11c ]
add eax 0x1
mov [ ebp - 0x11c ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x138 ]
sub ecx [ ebp - 0x16c ]
mov [ ebp - 0x26c ] ecx
mov [ ebp - 0x26c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x268 ]
mov [ ebp - 0x164 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x138 ]
sub edx [ ebp - 0x16c ]
test edx edx
jge r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x130 ]
add edx 0x1
mov eax [ ebp - 0x22c ]
cmp edx [ eax + 0x13c ]
jne r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax [ ebp - 0x164 ]
jle r-xdata
mov edx [ ebp - 0xe4 ]
add edx [ ebp - 0xe8 ]
push edx
mov al [ ebp - 0x104 ]
push eax
mov ecx [ ebp - 0x22c ]
call sub_45ed80
mov ecx [ ebp - 0xe8 ]
add ecx 0x3
mov [ ebp - 0xe8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x138 ]
sub ecx [ ebp - 0x1e8 ]
mov [ ebp - 0x2c0 ] ecx
mov [ ebp - 0x2c0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x1e0 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x138 ]
sub edx [ ebp - 0x1e8 ]
test edx edx
jge r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x1e4 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x1dc ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x1c8 ]
imul edx [ ecx + 0xa8 ]
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xf0 ]
add ecx edx
mov [ ebp - 0x1d4 ] ecx
mov edx [ ebp - 0x190 ]
cmp edx [ ebp - 0x1c4 ]
jle r-xdata
mov eax [ ebp - 0x1e4 ]
cmp eax [ ebp - 0x1e0 ]
jle r-xdata
mov edx [ ebp - 0x1e0 ]
mov [ ebp - 0x2c4 ] edx
mov ecx [ ebp - 0x1e4 ]
mov [ ebp - 0x2c4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x30 ]
mov ecx [ ebp - 0xac ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x2c ]
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x118 ]
add edx [ ecx + 0xac ]
push edx
mov eax [ ebp - 0xe8 ]
sub eax 0x1
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xa8 ]
imul edx eax
mov eax [ ebp - 0xc8 ]
add eax edx
push eax
mov ecx [ ebp - 0x118 ]
push ecx
mov edx [ ebp - 0xc8 ]
push edx
lea ecx [ ebp - 0xc4 ]
call sub_4092a0
push 0x0
mov eax [ ebp - 0xe8 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0xe4 ]
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push 0x2
mov eax [ ebp - 0x118 ]
push eax
mov ecx [ ebp - 0xc8 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ ExtTextOutA@IAT ]
cmp [ ebp - 0x134 ] 0x0
je r-xdata
mov edx [ ebp - 0xdc ]
cmp edx [ ebp - 0xa8 ]
jl r-xdata
mov ecx [ ebp - 0x120 ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe0 ]
add eax [ ebp - 0x124 ]
mov [ ebp - 0x138 ] eax
jmp r-xdata
mov ecx [ ebp - 0xf0 ]
sub ecx [ ebp - 0x16c ]
mov [ ebp - 0x270 ] ecx
mov [ ebp - 0x270 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x26c ]
mov [ ebp - 0x150 ] edx
mov eax [ ebp - 0xf0 ]
sub eax [ ebp - 0x16c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0xf0 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe0 ]
add eax ecx
sub eax [ ebp - 0x14c ]
mov [ ebp - 0x160 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0xcc ]
imul edx [ ecx + 0xa8 ]
imul edx edx 0x3
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xe0 ]
add ecx edx
sub ecx [ ebp - 0x14c ]
mov [ ebp - 0x158 ] ecx
cmp [ ebp - 0x168 ] 0x0
je r-xdata
mov ecx [ ebp - 0xf0 ]
cmp ecx [ ebp - 0x164 ]
jle r-xdata
mov edx [ ebp - 0x164 ]
mov [ ebp - 0x278 ] edx
mov ecx [ ebp - 0xf0 ]
mov [ ebp - 0x278 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2c0 ]
mov [ ebp - 0x1cc ] edx
mov ecx [ ebp - 0x1c4 ]
mov [ ebp - 0x2d8 ] ecx
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x2d8 ] eax
jmp r-xdata
mov edx [ ebp - 0x1e0 ]
mov [ ebp - 0x2cc ] edx
mov ecx [ ebp - 0x1e4 ]
mov [ ebp - 0x2cc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1cc ]
add ecx 0x1
mov [ ebp - 0x2c8 ] ecx
mov eax [ ebp - 0x1c8 ]
add eax 0x1
mov [ ebp - 0x2c8 ] eax
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x2c4 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x1dc ] eax
mov ecx [ ebp - 0x1c8 ]
add ecx 0x1
mov edx [ ebp - 0x1cc ]
add edx 0x1
cmp ecx edx
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0xdc ]
add eax [ ebp - 0x134 ]
mov [ ebp - 0xdc ] eax
mov ecx [ ebp - 0x11c ]
add ecx [ ebp - 0x134 ]
mov [ ebp - 0x11c ] ecx
mov edx [ ebp - 0xe0 ]
add edx [ ebp - 0xdc ]
mov al [ edx ]
mov [ ebp - 0x128 ] al
mov ecx [ ebp - 0xdc ]
add ecx 0x1
mov [ ebp - 0xdc ] ecx
lea edx [ ebp - 0xd0 ]
push edx
lea eax [ ebp - 0xf4 ]
push eax
mov ecx [ ebp - 0x11c ]
push ecx
mov dl [ ebp - 0x128 ]
push edx
mov ecx [ ebp - 0x22c ]
call sub_45cf92
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x13c ]
cmp eax [ ebp - 0xf0 ]
jne r-xdata
cmp [ ebp - 0xe8 ] 0x0
je r-xdata
mov ecx [ ebp - 0xcc ]
sub ecx [ ebp - 0x16c ]
mov [ ebp - 0x274 ] ecx
mov [ ebp - 0x274 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x270 ]
mov [ ebp - 0xf0 ] edx
mov eax [ ebp - 0xcc ]
sub eax [ ebp - 0x16c ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0xb0 ]
cmp ecx [ ebp - 0x148 ]
jle r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x158 ]
sub eax [ edx + 0xa8 ]
mov [ ebp - 0x158 ] eax
mov eax [ ebp - 0x164 ]
mov [ ebp - 0x280 ] eax
mov edx [ ebp - 0xf0 ]
mov [ ebp - 0x280 ] edx
jmp r-xdata
mov ecx [ ebp - 0x150 ]
add ecx 0x1
mov [ ebp - 0x27c ] ecx
mov eax [ ebp - 0xcc ]
add eax 0x1
mov [ ebp - 0x27c ] eax
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x278 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe0 ]
add eax ecx
sub eax [ ebp - 0x14c ]
mov [ ebp - 0x160 ] eax
mov ecx [ ebp - 0xcc ]
add ecx 0x1
mov edx [ ebp - 0x150 ]
add edx 0x1
cmp ecx edx
jge r-xdata
mov edx [ ebp - 0x1c0 ]
add edx 0x1
mov [ ebp - 0x2dc ] edx
mov ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x2dc ] ecx
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x2d8 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xf4 ]
add edx eax
mov [ ebp - 0x1d8 ] edx
mov eax [ ebp - 0x1c0 ]
add eax 0x1
cmp [ ebp - 0x1a0 ] eax
jge r-xdata
mov ecx [ ebp - 0x1c8 ]
add ecx 0x1
mov [ ebp - 0x2d0 ] ecx
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
mov [ ebp - 0x2d0 ] eax
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x2cc ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x1dc ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x1c8 ]
add eax 0x1
cmp [ edx + 0xa0 ] eax
jge r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x2c8 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xf0 ]
add edx eax
mov [ ebp - 0x1d4 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x1c4 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf4 ]
add eax ecx
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x1d8 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x1d0 ] edx
push 0x550009
lea ecx [ ebp - 0x1dc ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x1dc ]
call sub_405cf0
push eax
mov eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x1dc ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x118 ]
add eax [ edx + 0xac ]
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0xb4 ]
cmp eax [ ebp - 0xf4 ]
jne r-xdata
cmp [ ebp - 0x12c ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xb4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0xac ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x118 ]
add ecx [ eax + 0xac ]
push ecx
mov edx [ ebp - 0xe8 ]
sub edx 0x1
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
mov edx [ ebp - 0xc8 ]
add edx ecx
push edx
mov eax [ ebp - 0x118 ]
push eax
mov ecx [ ebp - 0xc8 ]
push ecx
lea ecx [ ebp - 0xc4 ]
call sub_4092a0
push 0x0
mov edx [ ebp - 0xe8 ]
sub edx 0x1
push edx
mov eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push 0x2
mov edx [ ebp - 0x118 ]
push edx
mov eax [ ebp - 0xc8 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call [ ExtTextOutA@IAT ]
mov edx [ ebp - 0x274 ]
mov [ ebp - 0xcc ] edx
mov eax [ ebp - 0x148 ]
mov [ ebp - 0x28c ] eax
mov edx [ ebp - 0xb0 ]
mov [ ebp - 0x28c ] edx
jmp r-xdata
mov edx [ ebp - 0xcc ]
add edx 0x1
mov [ ebp - 0x284 ] edx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
mov [ ebp - 0x284 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x280 ]
imul edx [ ecx + 0xa8 ]
imul edx edx 0x3
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xe0 ]
add ecx edx
sub ecx [ ebp - 0x14c ]
mov [ ebp - 0x160 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0xcc ]
add ecx 0x1
cmp [ eax + 0xa0 ] ecx
jge r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x27c ]
imul eax [ edx + 0xa8 ]
imul eax eax 0x3
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe0 ]
add edx eax
mov eax [ ebp - 0x22c ]
sub edx [ eax + 0xa8 ]
sub edx [ ebp - 0x14c ]
mov [ ebp - 0x158 ] edx
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x148 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xe4 ]
add ecx edx
mov [ ebp - 0x15c ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x15c ]
add eax [ edx + 0xac ]
mov [ ebp - 0x154 ] eax
push 0x550009
lea ecx [ ebp - 0x160 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x160 ]
call sub_405cf0
push eax
mov ecx [ ebp - 0x15c ]
push ecx
mov edx [ ebp - 0x160 ]
push edx
mov eax [ ebp - 0x30 ]
push eax
call [ PatBlt@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c0 ]
cmp eax [ ebp - 0x1a0 ]
jg r-xdata
mov edx [ ebp - 0x22c ]
cmp [ edx + 0x12c ] 0x0
je r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x2dc ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf4 ]
add eax ecx
mov [ ebp - 0x1d0 ] eax
mov ecx [ ebp - 0x1c4 ]
cmp ecx [ ebp - 0x190 ]
jl r-xdata
mov ecx [ ebp - 0x1cc ]
add ecx 0x1
mov [ ebp - 0x2d4 ] ecx
mov eax [ ebp - 0x1c8 ]
add eax 0x1
mov [ ebp - 0x2d4 ] eax
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x2d0 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xf0 ]
add edx eax
mov [ ebp - 0x1d4 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x1c4 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf4 ]
add eax ecx
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x1d8 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x1d0 ] edx
push 0x550009
lea ecx [ ebp - 0x1dc ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x1dc ]
call sub_405cf0
push eax
mov eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x1dc ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x1e4 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x1dc ] eax
mov ecx [ ebp - 0x1c8 ]
add ecx 0x1
mov edx [ ebp - 0x1cc ]
add edx 0x1
cmp ecx edx
jge r-xdata
mov edx [ ebp - 0xb4 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0xac ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x118 ]
add ecx [ eax + 0xac ]
push ecx
mov edx [ ebp - 0xe8 ]
sub edx 0x1
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
mov edx [ ebp - 0xc8 ]
add edx ecx
push edx
mov eax [ ebp - 0x118 ]
push eax
mov ecx [ ebp - 0xc8 ]
push ecx
lea ecx [ ebp - 0xc4 ]
call sub_4092a0
push 0x0
mov edx [ ebp - 0xe8 ]
sub edx 0x1
push edx
mov eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push 0x2
mov edx [ ebp - 0x118 ]
push edx
mov eax [ ebp - 0xc8 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call [ ExtTextOutA@IAT ]
mov edx [ ebp - 0x138 ]
mov [ ebp - 0xc8 ] edx
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xd0 ]
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0xe4 ]
push edx
mov al [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x22c ]
call sub_45ed80
mov [ ebp - 0xe8 ] 0x3
mov ecx [ ebp - 0xac ]
cmp ecx [ ebp - 0xd0 ]
jne r-xdata
mov ecx [ ebp - 0x138 ]
mov [ ebp - 0xc8 ] ecx
mov edx [ ebp - 0xf4 ]
mov [ ebp - 0xb4 ] edx
mov eax [ ebp - 0xd0 ]
mov [ ebp - 0xac ] eax
mov ecx [ ebp - 0xe4 ]
push ecx
mov dl [ ebp - 0x128 ]
push edx
mov ecx [ ebp - 0x22c ]
call sub_45ed80
mov [ ebp - 0xe8 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x144 ]
add ecx 0x1
mov [ ebp - 0x290 ] ecx
mov eax [ ebp - 0xd4 ]
mov [ ebp - 0x290 ] eax
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x28c ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xe4 ]
add ecx edx
mov [ ebp - 0x15c ] ecx
mov edx [ ebp - 0x144 ]
add edx 0x1
cmp [ ebp - 0xd4 ] edx
jge r-xdata
mov eax [ ebp - 0x150 ]
add eax 0x1
mov [ ebp - 0x288 ] eax
mov edx [ ebp - 0xcc ]
add edx 0x1
mov [ ebp - 0x288 ] edx
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x284 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov ecx [ ebp - 0x22c ]
sub eax [ ecx + 0xa8 ]
sub eax [ ebp - 0x14c ]
mov [ ebp - 0x158 ] eax
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x148 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe4 ]
add edx eax
mov [ ebp - 0x15c ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x15c ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x154 ] ecx
push 0x550009
lea ecx [ ebp - 0x160 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x160 ]
call sub_405cf0
push eax
mov edx [ ebp - 0x15c ]
push edx
mov eax [ ebp - 0x160 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
call [ PatBlt@IAT ]
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0xf0 ]
imul eax [ edx + 0xa8 ]
imul eax eax 0x3
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe0 ]
add edx eax
sub edx [ ebp - 0x14c ]
mov [ ebp - 0x160 ] edx
mov eax [ ebp - 0xcc ]
add eax 0x1
mov ecx [ ebp - 0x150 ]
add ecx 0x1
cmp eax ecx
jge r-xdata
push 0x550009
lea ecx [ ebp - 0x1dc ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x1dc ]
call sub_405cf0
push eax
mov eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x1dc ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x22c ]
cmp [ ecx + 0x138 ] eax
je r-xdata
mov eax [ ebp - 0x1dc ]
mov [ ebp - 0x1f8 ] eax
mov ecx [ ebp - 0x1d8 ]
mov [ ebp - 0x1f4 ] ecx
mov edx [ ebp - 0x1d4 ]
mov [ ebp - 0x1f0 ] edx
mov eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1ec ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x1f4 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x1ec ] edx
mov eax [ ebp - 0x1e4 ]
cmp eax [ ebp - 0x1e0 ]
jle r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x2d4 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xf0 ]
add edx eax
mov [ ebp - 0x1d4 ] edx
mov eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x1d0 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x1d0 ] edx
push 0x550009
lea ecx [ ebp - 0x1dc ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x1dc ]
call sub_405cf0
push eax
mov eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x1dc ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x13c ]
add ecx 0x1
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x138 ]
add edx [ ebp - 0xf8 ]
mov [ ebp - 0x138 ] edx
mov eax [ ebp - 0x11c ]
add eax 0x1
mov [ ebp - 0x11c ] eax
cmp [ ebp - 0xd8 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x144 ]
cmp edx [ ebp - 0xd4 ]
jg r-xdata
mov ecx [ ebp - 0x22c ]
cmp [ ecx + 0x12c ] 0x0
je r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x290 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe4 ]
add edx eax
mov [ ebp - 0x154 ] edx
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0xb0 ]
jl r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x288 ]
imul edx [ ecx + 0xa8 ]
imul edx edx 0x3
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xe0 ]
add ecx edx
mov edx [ ebp - 0x22c ]
sub ecx [ edx + 0xa8 ]
sub ecx [ ebp - 0x14c ]
mov [ ebp - 0x158 ] ecx
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x15c ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x154 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x154 ] edx
push 0x550009
lea ecx [ ebp - 0x160 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x160 ]
call sub_405cf0
push eax
mov eax [ ebp - 0x15c ]
push eax
mov ecx [ ebp - 0x160 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
jmp r-xdata
mov edx [ ebp - 0x1dc ]
mov [ ebp - 0x208 ] edx
mov eax [ ebp - 0x1d8 ]
mov [ ebp - 0x204 ] eax
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x200 ] ecx
mov edx [ ebp - 0x1d0 ]
mov [ ebp - 0x1fc ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x1c0 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf4 ]
add eax ecx
mov [ ebp - 0x204 ] eax
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x204 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x1fc ] edx
mov eax [ ebp - 0x1c8 ]
add eax 0x1
mov ecx [ ebp - 0x1cc ]
add ecx 0x1
cmp eax ecx
jge r-xdata
mov edx [ ebp - 0x1e0 ]
mov [ ebp - 0x2e0 ] edx
mov ecx [ ebp - 0x1e4 ]
mov [ ebp - 0x2e0 ] ecx
jmp r-xdata
mov edx [ ebp - 0xe4 ]
add edx [ ebp - 0xe8 ]
push edx
mov al [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x22c ]
call sub_45ed80
mov ecx [ ebp - 0xe8 ]
add ecx 0x3
mov [ ebp - 0xe8 ] ecx
jmp r-xdata
push 0x550009
lea ecx [ ebp - 0x160 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x160 ]
call sub_405cf0
push eax
mov eax [ ebp - 0x15c ]
push eax
mov ecx [ ebp - 0x160 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x22c ]
cmp [ eax + 0x138 ] edx
je r-xdata
mov edx [ ebp - 0x160 ]
mov [ ebp - 0x17c ] edx
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x178 ] eax
mov ecx [ ebp - 0x158 ]
mov [ ebp - 0x174 ] ecx
mov edx [ ebp - 0x154 ]
mov [ ebp - 0x170 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x178 ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x170 ] ecx
mov edx [ ebp - 0xf0 ]
cmp edx [ ebp - 0x164 ]
jle r-xdata
mov eax [ ebp - 0x1cc ]
add eax 0x1
mov [ ebp - 0x2e4 ] eax
mov edx [ ebp - 0x1c8 ]
add edx 0x1
mov [ ebp - 0x2e4 ] edx
jmp r-xdata
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x2e0 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x1f8 ] eax
push 0x550009
lea ecx [ ebp - 0x1f8 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x1f8 ]
call sub_405cf0
push eax
mov ecx [ ebp - 0x1f4 ]
push ecx
mov edx [ ebp - 0x1f8 ]
push edx
mov eax [ ebp - 0x30 ]
push eax
call [ PatBlt@IAT ]
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x1d8 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x1d8 ] edx
mov ecx [ ebp - 0x160 ]
mov [ ebp - 0x18c ] ecx
mov edx [ ebp - 0x15c ]
mov [ ebp - 0x188 ] edx
mov eax [ ebp - 0x158 ]
mov [ ebp - 0x184 ] eax
mov ecx [ ebp - 0x154 ]
mov [ ebp - 0x180 ] ecx
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x144 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe4 ]
add edx eax
mov [ ebp - 0x188 ] edx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x188 ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x180 ] ecx
mov edx [ ebp - 0xcc ]
add edx 0x1
mov eax [ ebp - 0x150 ]
add eax 0x1
cmp edx eax
jge r-xdata
mov ecx [ ebp - 0x164 ]
mov [ ebp - 0x294 ] ecx
mov eax [ ebp - 0xf0 ]
mov [ ebp - 0x294 ] eax
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x2e4 ]
imul edx [ ecx + 0xa8 ]
mov eax [ ebp - 0x22c ]
mov ecx [ eax + 0xf0 ]
add ecx edx
mov [ ebp - 0x200 ] ecx
mov edx [ ebp - 0x204 ]
mov [ ebp - 0x1d0 ] edx
push 0x550009
lea ecx [ ebp - 0x1dc ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x1dc ]
call sub_405cf0
push eax
mov eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x1dc ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
push 0x550009
lea ecx [ ebp - 0x208 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x208 ]
call sub_405cf0
push eax
mov eax [ ebp - 0x204 ]
push eax
mov ecx [ ebp - 0x208 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
jmp r-xdata
mov edx [ ebp - 0x150 ]
add edx 0x1
mov [ ebp - 0x298 ] edx
mov ecx [ ebp - 0xcc ]
add ecx 0x1
mov [ ebp - 0x298 ] ecx
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ ebp - 0x294 ]
imul eax [ edx + 0xa8 ]
imul eax eax 0x3
mov ecx [ ebp - 0x22c ]
mov edx [ ecx + 0xe0 ]
add edx eax
sub edx [ ebp - 0x14c ]
mov [ ebp - 0x17c ] edx
push 0x550009
lea ecx [ ebp - 0x17c ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x17c ]
call sub_405cf0
push eax
mov eax [ ebp - 0x178 ]
push eax
mov ecx [ ebp - 0x17c ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x15c ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x15c ] ecx
mov eax [ ebp - 0x22c ]
mov ecx [ ebp - 0x298 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x22c ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov ecx [ ebp - 0x22c ]
sub eax [ ecx + 0xa8 ]
sub eax [ ebp - 0x14c ]
mov [ ebp - 0x184 ] eax
mov edx [ ebp - 0x188 ]
mov [ ebp - 0x154 ] edx
push 0x550009
lea ecx [ ebp - 0x160 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x160 ]
call sub_405cf0
push eax
mov eax [ ebp - 0x15c ]
push eax
mov ecx [ ebp - 0x160 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
push 0x550009
lea ecx [ ebp - 0x18c ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x18c ]
call sub_405cf0
push eax
mov eax [ ebp - 0x188 ]
push eax
mov ecx [ ebp - 0x18c ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
call [ PatBlt@IAT ]
jmp r-xdata
sub_441a10
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
call sub_405110
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x10 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0xf4 ]
add ecx edx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0xa0 ]
jge r-xdata
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0xf0 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call [ ExtTextOutA@IAT ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x20
jl r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x7f
jge r-xdata
jmp r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call [ ExtTextOutA@IAT ]
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0xc ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_441b66
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_405110
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0xc ]
call sub_41bf7d
cmp eax 0x2
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x10 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xf4 ]
add ecx edx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn 0x18
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x20
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x14 ]
cmp eax [ edx + 0xa0 ]
jge r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ ExtTextOutA@IAT ]
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x14 ]
sub eax [ edx + 0xa0 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x8 ]
mov [ ecx + 0x1 ] 0x0
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xf0 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call [ ExtTextOutA@IAT ]
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x20
jl r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0xa1
jl r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x7f
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ ExtTextOutA@IAT ]
mov dl [ ebp - 0xc ]
push edx
call [ IsDBCSLeadByte@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0xe0
jge r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0xc ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x8 ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov al [ ebp - 0xc ]
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
lea edx [ ebp - 0xc ]
push edx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov dl [ ebp - 0xc ]
push edx
mov ecx [ ebp + 0xc ]
call sub_41db30
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x14 ]
sub edx 0x1
mov [ ebp - 0x14 ] edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
call sub_41bc53
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0xc ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x2e
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0xf0 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call [ ExtTextOutA@IAT ]
jmp r-xdata
jmp r-xdata
sub_441e45
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_405110
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0xc ]
call sub_41bd1c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x2
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
cmp [ ebp - 0x10 ] 0x5
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x10 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xf4 ]
add ecx edx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn 0x18
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x20
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x14 ]
cmp eax [ edx + 0xa0 ]
jge r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ ExtTextOutA@IAT ]
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x14 ]
sub eax [ edx + 0xa0 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x8 ]
mov [ ecx + 0x1 ] 0x0
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0xf0 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call [ ExtTextOutA@IAT ]
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x4 ] ecx
mov cl [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41da60
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov dl [ ebp - 0xc ]
push edx
mov ecx [ ebp + 0xc ]
call sub_41dab0
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ ExtTextOutA@IAT ]
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x20
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
lea edx [ ebp - 0xc ]
push edx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov cl [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41da60
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x8 ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x7f
jge r-xdata
mov cl [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41dae0
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x8 ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41bc53
mov edx [ ebp - 0x20 ]
shl edx 0x8
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
add ecx eax
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
sub edx 0x8080
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
push eax
call sub_46903d
add esp 0x4
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx ] cl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx ] cl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx ] 0x2e
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ ExtTextOutA@IAT ]
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x8 ]
mov dl [ ebp - 0xc ]
mov [ ecx ] dl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0x8 ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41bc53
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0xc ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx ] 0x20
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ ExtTextOutA@IAT ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_44223c
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_405110
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x15c ]
add ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x248 ]
imul ecx [ eax + 0xa0 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
and ecx 0x80000001
jns r-xdata
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x10 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xf4 ]
add eax ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x14 ]
jge r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn 0x18
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x20
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0xa0 ]
jge r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xf0 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call [ ExtTextOutA@IAT ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x14 ]
sub ecx [ eax + 0xa0 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0xc ]
mov [ eax + 0x1 ] 0x0
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xf0 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call [ ExtTextOutA@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
add eax [ edx + 0xac ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
and eax 0xff
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
shl ecx 0x8
mov edx [ ebp - 0x8 ]
or edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x2c0 ]
mov edx [ ebp - 0x8 ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0xc ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0xf0 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
call [ ExtTextOutA@IAT ]
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0xc ]
mov [ edx ] 0x2e
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x100
jb r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0xc ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
call [ ExtTextOutA@IAT ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x8 ] 0x20
jb r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0xc ]
mov [ edx ] cl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0xc ]
mov [ edx ] cl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0xa1
jb r-xdata
cmp [ ebp - 0x8 ] 0x7f
jb r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x2e
cmp [ ebp - 0x8 ] 0xe0
jb r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0xc ]
mov [ edx ] cl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x18 ]
add ecx [ ebp - 0xc ]
mov [ ecx ] 0x20
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_442551
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
call sub_405110
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x10 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0xf4 ]
add ecx edx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0xa0 ]
jge r-xdata
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0xf0 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call [ ExtTextOutA@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
call sub_4111a0
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx ] 0x2e
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0x14 ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call [ ExtTextOutA@IAT ]
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
sub_44269b
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
call sub_405110
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x10 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0xf4 ]
add ecx edx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0xa0 ]
jge r-xdata
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0xf0 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call [ ExtTextOutA@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_41bbb8
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
call sub_4111d5
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx ] 0x2e
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0x14 ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x8 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0xf0 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call [ ExtTextOutA@IAT ]
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
sub_4427e5
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_405c80
mov ecx eax
call sub_404f70
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push 0x422
call sub_4840fb
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_494f18
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x154 ] 0x1
mov esp ebp
pop ebp
retn 0x4
sub_442840
push ebp
mov ebp esp
sub esp 0xa4
mov [ ebp - 0xa4 ] ecx
push 0x3c
push 0x0
lea eax [ ebp - 0x40 ]
push eax
call sub_467a10
add esp 0xc
mov [ ebp - 0x40 ] 0x64
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x29 ] 0x80
push rw-data
lea ecx [ ebp - 0x24 ]
push ecx
call [ lstrcpyA@IAT ]
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0xa4 ]
add ecx 0x44
call sub_489de7
mov ecx [ ebp - 0xa4 ]
add ecx 0x44
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x28 ]
mov [ ebp - 0x80 ] eax
lea ecx [ ebp - 0x78 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_405d30
mov edx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x94 ] eax
mov ecx [ ebp - 0x80 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x28 ]
mov ecx [ ebp + 0xc ]
add ecx 0x24
mov edx [ ecx ]
mov [ ebp - 0x90 ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x8c ] eax
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x88 ] edx
mov eax [ ecx + 0xc ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x8c ] 0x0
push 0x8
mov ecx [ ebp + 0x8 ]
call sub_45eeb0
mov [ ebp - 0x88 ] eax
push 0xa
mov ecx [ ebp + 0x8 ]
call sub_45eeb0
mov [ ebp - 0x84 ] eax
mov ecx [ ebp - 0x94 ]
shl ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
shl edx 0x1
push edx
lea ecx [ ebp - 0x90 ]
call sub_4065f0
mov eax [ ebp - 0x8c ]
add eax [ ebp - 0x94 ]
mov [ ebp - 0x8c ] eax
mov ecx [ ebp - 0xa4 ]
call sub_405c80
mov [ ebp - 0x98 ] eax
mov ecx [ ebp - 0xa4 ]
cmp [ ecx + 0x338 ] 0x0
je r-xdata
mov ecx [ ebp - 0x98 ]
call sub_404f70
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0x9c ]
shr eax 0x4
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0x9c ]
xor edx edx
mov ecx 0x10
div ecx
test edx edx
je r-xdata
mov edx [ ebp - 0xa4 ]
mov eax [ edx + 0x338 ]
mov ecx [ ebp - 0xa4 ]
mov edx [ ecx + 0x338 ]
mov eax [ eax + 0x4 ]
sub eax [ edx ]
add eax 0x1
mov [ ebp - 0x9c ] eax
mov ecx [ ebp - 0xa4 ]
mov edx [ ecx + 0x338 ]
mov eax [ edx ]
xor edx edx
mov ecx 0x10
div ecx
test edx edx
je r-xdata
lea ecx [ ebp - 0x90 ]
call sub_404fe0
cdq
idiv [ ebp - 0x94 ]
sub eax 0x2
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0xa0 ]
cdq
idiv [ ebp - 0x7c ]
test edx edx
je r-xdata
mov edx [ ebp - 0xa0 ]
add edx 0x1
mov [ ebp - 0xa0 ] edx
mov [ ebp - 0xa0 ] 0x0
mov edx [ ebp - 0xa4 ]
mov eax [ edx + 0x338 ]
mov eax [ eax ]
xor edx edx
mov ecx 0x10
div ecx
mov eax 0x10
sub eax edx
mov ecx [ ebp - 0x9c ]
sub ecx eax
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0xa0 ] 0x1
jmp r-xdata
mov eax [ ebp - 0xa0 ]
cdq
idiv [ ebp - 0x7c ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0xa0 ]
cdq
idiv [ ebp - 0x7c ]
add eax 0x1
mov [ ebp - 0xa0 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xa0 ]
add edx 0x1
mov [ ebp - 0xa0 ] edx
mov edx [ ebp - 0x9c ]
shr edx 0x4
mov eax [ ebp - 0xa0 ]
add eax edx
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0x9c ]
xor edx edx
mov ecx 0x10
div ecx
test edx edx
je r-xdata
push 0x1
mov ecx [ ebp + 0xc ]
call sub_45f400
mov eax [ ebp - 0xa0 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_45f420
mov esp ebp
pop ebp
retn 0x8
sub_442af3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x154 ] 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x44
call sub_480765
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
call sub_45e915
sub_442b29
push ebp
mov ebp esp
push 0xffffffff
push sub_49998e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xac
push esi
mov [ ebp - 0xb4 ] ecx
mov eax [ ebp - 0xb4 ]
add eax 0x44
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x28 ]
mov [ ebp - 0x7c ] eax
push 0x0
push 0x2
push 0x0
lea ecx [ ebp - 0x98 ]
call sub_48077b
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_47fe32
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_405d30
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x90 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x24 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x68 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x2c ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x28 ]
add eax [ ebp - 0x90 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x90 ]
shl ecx 0x1
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x30 ]
sub eax ecx
mov [ ebp - 0xa4 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x24
mov edx [ ecx ]
mov [ ebp - 0x8c ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x88 ] eax
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x84 ] edx
mov eax [ ecx + 0xc ]
mov [ ebp - 0x80 ] eax
mov ecx [ ebp - 0x90 ]
shl ecx 0x1
push ecx
mov edx [ ebp - 0x14 ]
shl edx 0x1
push edx
lea ecx [ ebp - 0x8c ]
call sub_4065f0
mov eax [ ebp - 0x88 ]
add eax [ ebp - 0x90 ]
mov [ ebp - 0x88 ] eax
mov ecx [ ebp - 0xb4 ]
call sub_405c80
mov [ ebp - 0x9c ] eax
lea ecx [ ebp - 0xa8 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x9c ]
call sub_405dc0
push eax
lea ecx [ ebp - 0xa8 ]
call sub_47c761
lea ecx [ ebp - 0xa8 ]
call sub_4016b0
test eax eax
je r-xdata
lea ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x68 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_409350
lea ecx [ ebp - 0x2c ]
call sub_428cd0
lea ecx [ ebp - 0x78 ]
push ecx
call [ GetLocalTime@IAT ]
mov edx [ ebp - 0x72 ]
and edx 0xffff
push edx
mov eax [ ebp - 0x76 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x78 ]
and ecx 0xffff
push ecx
push rw-data
lea edx [ ebp - 0xa8 ]
push edx
call sub_475837
add esp 0x14
push 0x400
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_429e30
lea edx [ ebp - 0xa8 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_405cf0
mov ecx [ ebp - 0x1c ]
sub ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_409350
mov ecx [ ebp + 0xc ]
call sub_45f440
push eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push eax
push rw-data
lea ecx [ ebp - 0xa8 ]
push ecx
call sub_475837
add esp 0x10
push 0x400
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_429e30
lea ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0xa4 ]
add edx [ ebp - 0x90 ]
push edx
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x68 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
lea ecx [ ebp - 0x2c ]
call sub_405cf0
cdq
sub eax edx
sar eax 0x1
sub esi eax
push esi
mov ecx [ ebp + 0x8 ]
call sub_409350
mov ecx [ ebp - 0x9c ]
call sub_45ee60
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0xb8 ] eax
cmp [ ebp - 0xb8 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x9c ]
call sub_428c70
push eax
lea ecx [ ebp - 0xa8 ]
call sub_47c761
lea ecx [ ebp - 0xa8 ]
call sub_47c5ff
cmp [ ebp - 0xb8 ] 0x5
jle r-xdata
mov ecx [ ebp - 0xa0 ]
add ecx 0x1798
push ecx
lea ecx [ ebp - 0xa8 ]
call sub_47e84a
jmp r-xdata
jmp r-xdata
push 0x400
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_429e30
lea ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0xa4 ]
add edx [ ebp - 0x90 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_405cf0
mov ecx [ ebp - 0x1c ]
sub ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_409350
mov eax [ ebp - 0x90 ]
imul eax eax 0x3
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x10 ]
add edx eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x68 ]
push ecx
lea edx [ ebp - 0xb0 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4802bc
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_480308
mov edx [ ebp - 0xa4 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_480308
mov ecx [ ebp - 0xa4 ]
push ecx
mov edx [ ebp - 0x68 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_480308
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x68 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_480308
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x8c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xb4 ]
call sub_442f27
mov ecx [ ebp - 0x7c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x28 ]
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47fe32
lea ecx [ ebp - 0x98 ]
call sub_480765
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xa8 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x98 ]
call sub_416d00
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_442f27
push ebp
mov ebp esp
push 0xffffffff
push sub_4999a1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x98
mov [ ebp - 0x98 ] ecx
mov ecx [ ebp - 0x98 ]
call sub_405c80
mov [ ebp - 0x68 ] eax
mov ecx [ ebp - 0x68 ]
call sub_404f90
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x54 ] 0x0
mov ecx [ ebp - 0x98 ]
cmp [ ecx + 0x338 ] 0x0
je r-xdata
mov [ ebp - 0x7c ] 0x0
mov ecx [ ebp - 0x68 ]
call sub_404f70
sub eax 0x1
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
add eax 0x1
mov [ ebp - 0x70 ] eax
mov edx [ ebp - 0x98 ]
mov eax [ edx + 0x338 ]
mov ecx [ eax ]
mov [ ebp - 0x7c ] ecx
mov edx [ ebp - 0x98 ]
mov eax [ edx + 0x338 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
sub edx [ ebp - 0x7c ]
add edx 0x1
mov [ ebp - 0x70 ] edx
mov eax [ ebp - 0x7c ]
xor edx edx
mov ecx 0x10
div ecx
test edx edx
je r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0xac ] 0x0
jne r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x1
mov [ ebp - 0x54 ] edx
jmp r-xdata
mov eax [ ebp - 0x7c ]
xor edx edx
mov ecx 0x10
div ecx
mov eax 0x10
sub eax edx
mov ecx [ ebp - 0x70 ]
sub ecx eax
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x54 ]
add edx 0x1
mov [ ebp - 0x54 ] edx
push 0x4d
push rw-data
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x5c ]
push 0x4d
push rw-data
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x5c ]
jmp r-xdata
mov ecx [ ebp - 0x70 ]
shr ecx 0x4
mov edx [ ebp - 0x54 ]
add edx ecx
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x70 ]
xor edx edx
mov ecx 0x10
div ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x2c ]
imul ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x54 ]
sub edx ecx
add edx 0x1
mov [ ebp - 0x9c ] edx
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x9c ] eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax + 0x14 ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0xc ]
call sub_404fe0
cdq
idiv [ ebp + 0x14 ]
sub eax 0x2
mov [ ebp - 0x40 ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x28 ] 0x2
mov ecx [ ebp + 0xc ]
call sub_404fe0
cdq
idiv [ ebp + 0x14 ]
sub eax 0x1
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x2c ]
imul ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x54 ]
sub edx ecx
add edx 0x1
cmp [ ebp - 0x48 ] edx
jge r-xdata
mov [ ebp - 0x84 ] 0x2
jmp r-xdata
mov [ ebp - 0x80 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x17 ] 0x20
mov [ ebp - 0x16 ] 0x20
mov eax [ ebp - 0x7c ]
xor edx edx
mov ecx 0x10
div ecx
mov eax [ ebp - 0x7c ]
sub eax edx
mov ecx [ ebp - 0x2c ]
imul ecx [ ebp - 0x40 ]
shl ecx 0x4
add eax ecx
mov [ ebp - 0x30 ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x98 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0xac ] 0x0
jne r-xdata
mov ecx [ ebp - 0x84 ]
cmp ecx [ ebp - 0x48 ]
jg r-xdata
mov edx [ ebp - 0x80 ]
cmp edx [ ebp - 0x48 ]
jg r-xdata
mov eax [ ebp + 0x14 ]
imul eax eax 0x3
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
add edx eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x34 ]
add ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x8c ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_4802bc
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
imul ecx ecx 0x4d
mov edx [ ebp - 0x34 ]
add edx ecx
push edx
mov ecx [ ebp + 0x8 ]
call sub_480308
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x78 ] edx
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x50 ] 0x9
jmp r-xdata
mov eax [ ebp - 0x7c ]
xor edx edx
mov ecx 0x10
div ecx
mov eax [ ebp - 0x7c ]
sub eax edx
mov ecx [ ebp - 0x2c ]
imul ecx [ ebp - 0x40 ]
shl ecx 0x4
add eax ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x0
jl r-xdata
mov eax [ ebp - 0x40 ]
shl eax 0x4
mov ecx [ ebp - 0x10 ]
add ecx eax
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0x38 ]
sub edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0xa0 ] edx
jmp r-xdata
mov edx [ ebp - 0x38 ]
sub edx [ ebp - 0x10 ]
add edx 0x1
mov eax [ ebp - 0x40 ]
shl eax 0x4
mov ecx [ ebp - 0x10 ]
add ecx eax
cmp edx ecx
jae r-xdata
push 0xb
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x5c ]
jmp r-xdata
mov ecx [ ebp - 0x78 ]
and ecx 0xf
mov [ ebp - 0x74 ] cl
mov edx [ ebp - 0x74 ]
and edx 0xff
cmp edx 0x9
jg r-xdata
push 0xb
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x5c ]
jmp r-xdata
mov eax [ ebp - 0x78 ]
xor edx edx
mov ecx 0xa
div ecx
add edx 0x30
mov [ ebp - 0x74 ] dl
mov edx [ ebp - 0x50 ]
mov al [ ebp - 0x74 ]
mov [ ebp + edx - 0x20 ] al
mov eax [ ebp - 0x78 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0x78 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xa4 ] edx
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xa4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xa0 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x7c ]
cmp eax [ ebp - 0x10 ]
jbe r-xdata
mov ecx [ ebp - 0x84 ]
add ecx 0x1
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp + 0x14 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x30 ]
add eax 0x10
mov [ ebp - 0x30 ] eax
mov cl [ ebp - 0x74 ]
add cl 0x37
mov [ ebp - 0x74 ] cl
mov al [ ebp - 0x74 ]
add al 0x30
mov [ ebp - 0x74 ] al
jmp r-xdata
mov edx [ ebp - 0x80 ]
add edx 0x1
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x10
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x50 ]
sub ecx 0x1
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp - 0x44 ]
cmp ecx [ ebp - 0x3c ]
jge r-xdata
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x3c ] 0x34
mov ecx [ ebp - 0x3c ]
shl ecx 0x2
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x90 ] eax
mov edx [ ebp - 0x90 ]
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x44 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x50 ]
sub eax 0x1
mov [ ebp - 0x50 ] eax
mov edx [ ebp - 0x50 ]
mov al [ ebp - 0x74 ]
mov [ ebp + edx - 0x20 ] al
mov ecx [ ebp - 0x78 ]
shr ecx 0x4
mov [ ebp - 0x78 ] ecx
jmp r-xdata
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
push 0x2
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x98 ]
call sub_443474
mov edx [ ebp - 0x6c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
push 0x2
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x98 ]
mov edx [ ebp - 0x98 ]
call [ edx + 0x348 ]
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x94 ] eax
mov ecx [ ebp - 0x94 ]
push ecx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_41b22c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x6c ]
mov ecx [ ebp + 0x10 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x44 ]
add eax 0x1
mov [ ebp - 0x44 ] eax
sub_443474
push ebp
mov ebp esp
sub esp 0x74
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x6 ] 0x20
mov [ ebp - 0x5 ] 0x0
push 0x34
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x3c ] 0x10
push 0x0
push 0x0
mov ecx [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41b237
lea ecx [ ebp - 0x2c ]
call sub_428cd0
mov edx [ ebp + 0x28 ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] 0x0
mov ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp + 0x28 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_41b7fb
mov [ ebp + 0x28 ] eax
mov ecx [ ebp + 0x8 ]
call sub_45eef0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
call sub_45eed0
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp + 0x1c ]
imul ecx [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
add eax ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x40 ]
cmp eax [ ebp + 0x20 ]
jg r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x30 ]
mov ecx [ ebp - 0x58 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x2c ]
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0x6c ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x70 ] eax
mov ecx [ ebp - 0x70 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0xb
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax ecx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x40 ]
cmp ecx [ ebp + 0x1c ]
jne r-xdata
mov esp ebp
pop ebp
retn 0x28
mov [ ebp - 0x60 ] 0x0
mov edx [ ebp + 0x24 ]
and edx 0x8000000f
jns r-xdata
cmp [ ebp - 0x34 ] 0x10
jge r-xdata
mov [ ebp - 0x60 ] edx
mov eax [ ebp - 0x60 ]
imul eax [ ebp + 0x14 ]
imul eax eax 0x3
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0xac ]
push ecx
mov edx [ ebp - 0x48 ]
sub edx 0x1
mov eax [ ebp - 0x74 ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
mov edx [ ebp - 0x30 ]
add edx ecx
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_4092a0
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x48 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x54 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
push 0x2
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp + 0x28 ]
jl r-xdata
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x40 ]
add ecx 0x1
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x50 ]
add eax [ ebp - 0x4c ]
mov cl [ eax ]
mov [ ebp - 0x18 ] cl
mov edx [ ebp - 0x4c ]
add edx 0x1
mov [ ebp - 0x4c ] edx
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov al [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x74 ]
call sub_45d161
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x60 ]
jne r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x5c ]
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x54 ]
push edx
mov al [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x74 ]
call sub_45ed80
mov [ ebp - 0x48 ] 0x3
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x4 ]
add eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp - 0x48 ]
sub ecx 0x1
mov edx [ ebp + 0x14 ]
imul edx ecx
mov eax [ ebp - 0x30 ]
add eax edx
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_4092a0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x48 ]
sub ecx 0x1
push ecx
mov edx [ ebp - 0x54 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
push 0x2
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x30 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0xac ]
push ecx
mov edx [ ebp - 0x48 ]
sub edx 0x1
mov eax [ ebp - 0x74 ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
mov edx [ ebp - 0x30 ]
add edx ecx
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_4092a0
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x48 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x54 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
push 0x2
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x54 ]
push ecx
mov dl [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x74 ]
call sub_45ed80
mov [ ebp - 0x48 ] 0x3
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x38 ]
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x24 ]
add ecx 0x1
mov [ ebp + 0x24 ] ecx
mov edx [ ebp + 0x14 ]
imul edx edx 0x3
mov eax [ ebp - 0x1c ]
add eax edx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0x54 ]
add eax [ ebp - 0x48 ]
push eax
mov cl [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x74 ]
call sub_45ed80
mov edx [ ebp - 0x48 ]
add edx 0x3
mov [ ebp - 0x48 ] edx
jmp r-xdata
sub_44384d
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] 0x12
push 0x12
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x20 ] eax
push 0x0
push 0x0
mov ecx [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41b237
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x1c ]
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
add edx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x20 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
push 0x12
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3d
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax ecx
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x1c ]
jne r-xdata
mov esp ebp
pop ebp
retn 0x28
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp + 0x24 ]
and edx 0x8000000f
jns r-xdata
cmp [ ebp - 0x28 ] 0x10
jge r-xdata
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
imul eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
add ecx eax
mov [ ebp - 0x14 ] ecx
jmp r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x28 ]
jge r-xdata
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x24 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0xc ]
mov [ ecx + 0x1 ] 0x0
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x20
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x7f
jge r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0xc ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
sub_443a24
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] 0x12
push 0x12
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
push 0x0
push 0x0
mov ecx [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41b237
mov edx [ ebp + 0x24 ]
and edx 0x8000000f
jns r-xdata
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x10 ]
call sub_41bf7d
cmp eax 0x2
jne r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x1c ]
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
add edx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x1c ]
cmp edx [ ebp + 0x20 ]
jg r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
push eax
call sub_47c3de
add esp 0x4
jmp r-xdata
push 0x12
push 0x0
mov eax [ ebp - 0x24 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3d
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x28
jmp r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
push 0x20
mov edx [ ebp - 0x24 ]
push edx
call sub_467a10
add esp 0xc
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
jge r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
mov ecx [ ebp - 0x18 ]
sub ecx 0x10
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp + 0x28 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp + 0x28 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x20
jl r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0xa1
jl r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x7f
jl r-xdata
mov al [ ebp - 0x10 ]
push eax
call [ IsDBCSLeadByte@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0xe0
jge r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0xc ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0xc ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0xc ]
mov dl [ ebp - 0x10 ]
mov [ ecx ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x20 ]
cmp edx [ ebp + 0x28 ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0xc ]
mov [ ecx + 0x1 ] 0x0
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0xc ]
mov dl [ ebp - 0x10 ]
mov [ ecx ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
sub_443d37
push ebp
mov ebp esp
sub esp 0x3c
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x8 ] 0x12
push 0x12
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x24 ] eax
push 0x0
push 0x0
mov ecx [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41b237
mov edx [ ebp + 0x24 ]
and edx 0x8000000f
jns r-xdata
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x10 ]
call sub_41bd1c
cmp eax 0x2
jne r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x1c ]
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
add edx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x1c ]
cmp edx [ ebp + 0x20 ]
jg r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
push 0x12
push 0x0
mov eax [ ebp - 0x24 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3d
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x28
jmp r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
push 0x20
mov edx [ ebp - 0x24 ]
push edx
call sub_467a10
add esp 0xc
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
jge r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x28 ]
je r-xdata
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x18 ]
sub eax 0x10
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp + 0x28 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp + 0x28 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov al [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
call sub_41dab0
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x20 ]
cmp edx [ ebp + 0x28 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x20
jl r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x20 ]
cmp eax [ ebp + 0x28 ]
jge r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x7f
jge r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0xc ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0xc ]
mov [ eax + 0x1 ] 0x0
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov cl [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41da60
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0xc ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov [ edx ] 0x2e
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0xc ]
mov [ ecx + 0x1 ] 0x0
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov cl [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41dae0
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0xc ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x2c ]
shl edx 0x8
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
sub edx 0x8080
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
push eax
call sub_46903d
add esp 0x4
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
shr ecx 0x8
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov [ edx ] cl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x2c ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov [ edx ] cl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov [ edx ] 0x2e
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov dl [ ebp - 0x10 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_41da60
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
sub_44419a
push ebp
mov ebp esp
sub esp 0x38
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0xc ] 0x12
push 0x12
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
push 0x0
push 0x0
mov ecx [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41b237
mov edx [ ebp + 0x24 ]
and edx 0x8000000f
jns r-xdata
mov [ ebp - 0x2c ] edx
mov eax [ ebp + 0x24 ]
and eax 0x80000001
jns r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov ecx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x1c ]
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
add edx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
dec eax
or eax 0xfffffffe
inc eax
mov edx [ ebp - 0x20 ]
cmp edx [ ebp + 0x20 ]
jg r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
push 0x12
push 0x0
mov eax [ ebp - 0x28 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3d
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x28
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
push 0x20
mov edx [ ebp - 0x28 ]
push edx
call sub_467a10
add esp 0xc
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp - 0x1c ] 0x10
jge r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x2c ]
je r-xdata
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x1c ]
sub eax 0x10
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0x28 ]
jge r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0x28 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x10 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
jmp r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x10 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x14 ]
and edx 0xff
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0x28 ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x10 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x10 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x60 ]
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x14 ]
and edx 0xff
shl edx 0x8
mov eax [ ebp - 0x8 ]
or eax edx
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x2c0 ]
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x10 ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x10 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x8 ] 0x100
jb r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x8 ] 0x20
jb r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x10 ]
mov [ eax ] dl
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x8
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x10 ]
mov [ eax ] dl
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0xa1
jb r-xdata
cmp [ ebp - 0x8 ] 0x7f
jb r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x2e
cmp [ ebp - 0x8 ] 0xe0
jb r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x10 ]
mov [ eax ] dl
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x10 ]
mov [ edx ] 0x20
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub_44450a
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] 0x12
push 0x12
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x20 ] eax
push 0x0
push 0x0
mov ecx [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41b237
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x1c ]
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
add edx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x20 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
push 0x12
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3d
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax ecx
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x1c ]
jne r-xdata
mov esp ebp
pop ebp
retn 0x28
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp + 0x24 ]
and edx 0x8000000f
jns r-xdata
cmp [ ebp - 0x28 ] 0x10
jge r-xdata
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
imul eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
add ecx eax
mov [ ebp - 0x14 ] ecx
jmp r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x28 ]
jge r-xdata
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x24 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0xc ]
mov [ ecx + 0x1 ] 0x0
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_4111a0
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0xc ]
mov [ edx ] 0x2e
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
jmp r-xdata
sub_4446d5
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] 0x12
push 0x12
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x20 ] eax
push 0x0
push 0x0
mov ecx [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41b237
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x1c ]
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
add edx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x20 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
push 0x12
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3d
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax ecx
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x1c ]
jne r-xdata
mov esp ebp
pop ebp
retn 0x28
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp + 0x24 ]
and edx 0x8000000f
jns r-xdata
cmp [ ebp - 0x28 ] 0x10
jge r-xdata
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
imul eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
add ecx eax
mov [ ebp - 0x14 ] ecx
jmp r-xdata
dec edx
or edx 0xfffffff0
inc edx
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x28 ]
jge r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x24 ]
test edx edx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0xc ]
mov [ eax + 0x1 ] 0x0
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x60 ]
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_4111d5
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0xc ]
mov [ edx ] 0x2e
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
sub_4448a1
push ebp
mov ebp esp
sub esp 0x308
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x308 ]
call sub_481cfe
cmp eax 0xffffffff
jne r-xdata
push 0x0
push 0x1
push 0x0
mov ecx [ ebp - 0x308 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x304 ]
call sub_40b400
push eax
mov ecx [ ebp - 0x308 ]
add ecx 0x64
mov edx [ ebp - 0x308 ]
mov eax [ edx + 0x64 ]
call [ eax + 0xb8 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x308 ]
mov [ ecx + 0x114 ] 0x0
mov edx [ ebp - 0x308 ]
mov [ edx + 0x118 ] 0x0
mov [ ebp - 0x2f4 ] 0xffffffff
push 0x0
lea eax [ ebp - 0x2f4 ]
push eax
push 0x400
call sub_402850
mov ecx eax
call sub_402890
mov edi [ ebp - 0x308 ]
add edi 0x288
mov ecx 0x7
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov edi [ ebp - 0x308 ]
add edi 0x2a4
mov ecx 0x9
lea esi [ ebp - 0x24 ]
[ edi ] [ esi ]
mov edi [ ebp - 0x308 ]
add edi 0x24c
mov ecx 0xf
lea esi [ ebp - 0xd0 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x308 ]
call sub_45b347
push 0x0
mov ecx [ ebp - 0x24 ]
call sub_402780
mov ecx [ ebp - 0x308 ]
mov [ ecx + 0x248 ] eax
mov edx [ ebp - 0x308 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa4 ]
push ecx
mov ecx [ ebp - 0x308 ]
call sub_45b235
mov ecx [ ebp - 0x308 ]
call sub_45ef10
mov ecx [ ebp - 0x308 ]
call sub_45ef90
mov ecx [ ebp - 0x308 ]
call sub_43e4a3
push 0x90
mov ecx [ ebp - 0x308 ]
add ecx 0x14c
call sub_45f000
xor eax eax
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_444a1d
push ebp
mov ebp esp
sub esp 0x30c
mov [ ebp - 0x30c ] ecx
mov [ ebp - 0x2f4 ] 0x26
push 0x0
lea eax [ ebp - 0x2f4 ]
push eax
push 0x400
call sub_402850
mov ecx eax
call sub_402890
mov ecx [ ebp - 0x30c ]
call sub_405c80
mov [ ebp - 0x2f8 ] eax
mov ecx [ ebp - 0x2f8 ]
call sub_45f030
mov ecx [ ebp - 0x30c ]
mov [ ecx + 0x248 ] eax
mov edx [ ebp - 0x30c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x30c ]
mov edx [ eax + 0x98 ]
mov [ ecx + 0x11c ] edx
mov ecx [ ebp - 0x30c ]
call sub_450ec5
mov ecx [ ebp - 0x30c ]
call sub_43e4a3
mov ecx [ ebp - 0x30c ]
call sub_43e5b8
mov ecx [ ebp - 0x30c ]
call sub_43e45a
mov ecx [ ebp - 0x2f8 ]
call sub_45ee60
push eax
mov ecx [ ebp - 0x30c ]
call sub_45b235
mov ecx [ ebp - 0x30c ]
call sub_45ef10
mov ecx [ ebp - 0x30c ]
call sub_45ef90
mov ecx [ ebp - 0x30c ]
call sub_45f0b0
mov ecx [ ebp - 0x30c ]
call sub_43e672
lea ecx [ ebp - 0x308 ]
call sub_428cd0
lea eax [ ebp - 0x308 ]
push eax
mov ecx [ ebp - 0x30c ]
call sub_405410
lea ecx [ ebp - 0x308 ]
call sub_404fe0
push eax
lea ecx [ ebp - 0x308 ]
call sub_405cf0
push eax
mov ecx [ ebp - 0x30c ]
call sub_444be1
mov ecx [ ebp - 0x30c ]
call sub_45f130
mov ecx [ ebp - 0xa4 ]
push ecx
mov ecx [ ebp - 0x30c ]
add ecx 0x64
call sub_45f050
push 0x1
push 0x1
push 0x41a
call sub_402850
mov ecx eax
call sub_405d50
mov ecx [ ebp - 0x30c ]
call sub_47be0f
mov ecx [ ebp - 0x30c ]
call sub_481ea2
mov esp ebp
pop ebp
retn
sub_444b94
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_444c9c
mov ecx [ ebp - 0x4 ]
call sub_43e672
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_444be1
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
mov esp ebp
pop ebp
retn 0xc
sub_444be1
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x17
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x164 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x15c ]
mov [ ebp - 0x8 ] eax
push 0x1
lea ecx [ ebp - 0x1c ]
push ecx
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_47a67d
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x17
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
lea edx [ ecx * 4 + 0xe ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x160 ]
mov [ ebp - 0x8 ] eax
push 0x1
lea ecx [ ebp - 0x1c ]
push ecx
push 0x0
mov ecx [ ebp - 0x20 ]
call sub_47a67d
mov esp ebp
pop ebp
retn 0x8
sub_444c9c
push ebp
mov ebp esp
sub esp 0x54
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0xb0
push eax
mov ecx [ ebp - 0x18 ]
call sub_405410
lea ecx [ ebp - 0x10 ]
call sub_428cd0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
lea ecx [ eax * 4 + 0xf ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xa8 ]
imul eax ecx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x158 ]
add edx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xac ]
imul ecx edx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
cdq
idiv [ ecx + 0xac ]
sub eax 0x1
mov edx [ ebp - 0x18 ]
mov [ edx + 0x158 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x18 ]
sub ecx [ edx + 0x15c ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x158 ]
sub edx ecx
sub edx 0x1
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax + 0xc0 ] 0x0
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0xc4 ] 0x0
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0xc8 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0xac ]
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x160 ]
neg eax
mov ecx [ ebp - 0x18 ]
imul eax [ ecx + 0xa8 ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc0 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax + 0xc4 ] 0x0
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0xc8 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0xac ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
cdq
idiv [ ecx + 0xa8 ]
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ecx + 0xa0 ]
lea ecx [ edx * 4 + 0xf ]
mov edx [ ebp - 0x18 ]
sub ecx [ edx + 0x160 ]
sub eax ecx
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x15c ]
sub ecx [ ebp - 0x14 ]
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xac ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xac ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x160 ]
sub ecx [ ebp - 0x14 ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x15c ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xa8 ]
imul ecx ecx 0xa
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x40 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + 0xcc ] ecx
mov edx [ ebp - 0x18 ]
mov [ edx + 0xd0 ] 0x0
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xcc ]
mov [ eax + 0xd4 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xa8 ]
imul ecx ecx 0xa
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov eax [ ebp - 0x18 ]
mov ecx 0xa
sub ecx [ eax + 0x160 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xa8 ]
imul eax ecx
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ edx + 0xcc ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xc0 ]
mov [ ecx + 0xd0 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xcc ]
mov [ ecx + 0xd4 ] eax
mov ecx [ ebp - 0x18 ]
mov edx 0xa
sub edx [ ecx + 0x160 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x160 ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x15c ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xa8 ]
imul ecx ecx 0xb
mov [ ebp - 0x44 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x40 ]
mov [ edx + 0xd8 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0xdc ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xa8 ]
imul ecx ecx 0xb
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov ecx [ ebp - 0x18 ]
mov edx 0xb
sub edx [ ecx + 0x160 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0xd8 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0xdc ] ecx
mov edx [ ebp - 0x18 ]
mov eax 0xb
sub eax [ edx + 0x160 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xa8 ]
imul edx eax
cmp [ ebp - 0x10 ] edx
jge r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x20 ]
mov [ ecx + 0x160 ] edx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
add ecx 0xa
mov edx [ ebp - 0x18 ]
sub ecx [ edx + 0x160 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0xa8 ]
imul edx ecx
cmp [ ebp - 0x10 ] edx
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xe0 ]
mov [ edx + 0xe8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x44 ]
mov [ edx + 0xe0 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xcc ]
mov [ ecx + 0xe4 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0xd
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x160 ] eax
jl r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0xa
mov eax [ ebp - 0x18 ]
sub edx [ eax + 0x160 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0xa8 ]
imul eax edx
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov [ edx + 0xe0 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xcc ]
mov [ ecx + 0xe4 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0xa
mov ecx [ ebp - 0x18 ]
sub eax [ ecx + 0x160 ]
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0xa8 ]
imul ecx eax
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0xa
mov ecx [ ebp - 0x18 ]
sub eax [ ecx + 0x160 ]
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0xa8 ]
imul ecx eax
mov [ ebp - 0x48 ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xdc ]
mov [ ecx + 0xec ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0xd
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x160 ] eax
jl r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
add ecx 0xd
mov edx [ ebp - 0x18 ]
sub ecx [ edx + 0x160 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0xa8 ]
imul edx ecx
mov [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x30 ]
mov [ ecx + 0xe8 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xdc ]
mov [ eax + 0xec ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0xd
mov eax [ ebp - 0x18 ]
sub edx [ eax + 0x160 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0xa8 ]
imul eax edx
cmp [ ebp - 0x10 ] eax
jge r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0xd
mov ecx [ ebp - 0x18 ]
sub eax [ ecx + 0x160 ]
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0xa8 ]
imul ecx eax
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
add ecx 0xd
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x160 ]
sub eax ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xa8 ]
imul edx eax
cmp [ ebp - 0x10 ] edx
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x48 ]
mov [ edx + 0xe8 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
lea edx [ ecx * 4 + 0xf ]
mov eax [ ebp - 0x18 ]
sub edx [ eax + 0x160 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0xa8 ]
imul eax edx
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x34 ]
mov [ eax + 0xf0 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xcc ]
mov [ edx + 0xf4 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
lea edx [ ecx * 4 + 0xf ]
mov eax [ ebp - 0x18 ]
sub edx [ eax + 0x160 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0xa8 ]
imul eax edx
cmp [ ebp - 0x10 ] eax
jge r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0xd
mov eax [ ebp - 0x18 ]
sub edx [ eax + 0x160 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0xa8 ]
imul eax edx
mov [ ebp - 0x50 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0xd
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x160 ]
sub edx eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xa8 ]
imul ecx edx
mov [ ebp - 0x4c ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x38 ]
mov [ ecx + 0xf8 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xdc ]
mov [ eax + 0xfc ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
lea eax [ edx * 4 + 0xf ]
mov ecx [ ebp - 0x18 ]
sub eax [ ecx + 0x160 ]
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0xa8 ]
imul ecx eax
mov [ ebp - 0x54 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x54 ] edx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x50 ]
mov [ ecx + 0xf0 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
lea eax [ edx * 4 + 0xf ]
mov ecx [ ebp - 0x18 ]
sub eax [ ecx + 0x160 ]
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0xa8 ]
imul ecx eax
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4c ]
mov [ edx + 0xf0 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x18 ]
call sub_450ec5
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x54 ]
mov [ edx + 0xf8 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xcc ]
mov [ ecx + 0xf4 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xdc ]
mov [ ecx + 0xfc ] eax
sub_445461
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x120 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_455490
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x120 ] 0x3
jne r-xdata
mov ecx [ ebp - 0xc ]
call sub_45f190
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
sub edx 0x8
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0xda
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_44a0a9
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x2cc ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_405500
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx + lookup_table_4459d7 ]
jmp [ eax * 4 + jump_table_445973 ]
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
sub edx 0x70
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x2
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x2
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x2e
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov [ ebp - 0x8 ] 0x2f
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x2
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x36
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x124 ] 0x0
jne r-xdata
push 0x25
call [ GetAsyncKeyState@IAT ]
movsx ecx ax
and ecx 0x8000
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x34
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0xc
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x27
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x28
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x28
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x2a
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x2b
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x2c
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x2d
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44f9d7
mov [ ebp - 0x8 ] 0x34
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44fb4d
mov [ ebp - 0x8 ] 0x35
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44dbf5
mov ecx [ ebp - 0xc ]
call sub_449cfc
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x124 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x38
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x124 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x37
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44dc4e
mov [ ebp - 0x8 ] 0x30
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44dec9
mov [ ebp - 0x8 ] 0x31
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44e282
mov [ ebp - 0x8 ] 0x32
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_44e641
mov [ ebp - 0x8 ] 0x33
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x26c ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x268 ] 0x0
je r-xdata
push 0x27
call [ GetAsyncKeyState@IAT ]
movsx edx ax
and edx 0x8000
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_44eb35
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_4467a4
mov ecx [ ebp - 0xc ]
call sub_44669c
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_446621
mov ecx [ ebp - 0xc ]
call sub_44669c
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_4497b3
jmp r-xdata
push 0x3
mov ecx [ ebp - 0xc ]
call sub_44a051
push 0x26
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x8000
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_44ed9d
jmp r-xdata
push 0x28
call [ GetAsyncKeyState@IAT ]
movsx ecx ax
and ecx 0x8000
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_44f0cf
jmp r-xdata
push 0x9
call [ GetAsyncKeyState@IAT ]
movsx edx ax
and edx 0x8000
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
call sub_44f4b0
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_449cfc
sub_445ab2
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x2cc ] 0xffffffff
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x79
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_44a0a9
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_45f190
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
sub eax 0x70
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4557df
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_428c20
sub_445b23
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
shr eax 0x10
and eax 0xffff
and eax 0xffff
push eax
mov ecx [ ebp + 0xc ]
and ecx 0xffff
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_445bac
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
sub_445b5c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d4 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_445bac
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x2d4 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_445bac
push ebp
mov ebp esp
sub esp 0x3c
mov [ ebp - 0x3c ] ecx
cmp [ ebp + 0x8 ] 0x20
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_45f190
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
and eax 0x2
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x3c ]
call sub_45f240
test eax eax
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x3c ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_45ee60
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
call sub_45f170
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
cmp [ ebp + 0x8 ] 0x9
je r-xdata
mov ecx [ ebp - 0x3c ]
cmp [ ecx + 0x11c ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x100
sbb eax eax
add eax 0x2
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x3c ]
cmp [ ecx + 0x11c ] 0x0
je r-xdata
jmp r-xdata
push 0x0
call [ MessageBeep@IAT ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x3c ]
call sub_45f1f0
test eax eax
jne r-xdata
lea edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x3c ]
call sub_445ef5
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x3c ]
call sub_45f1f0
test eax eax
jne r-xdata
lea edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x3c ]
call sub_445ef5
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x38 ] ecx
cmp [ ebp - 0x38 ] 0x39
ja r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov ax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ax
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ax
mov ecx [ ebp - 0x18 ]
and ecx 0xffff
cmp ecx 0x39
jg r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov ax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
mov eax [ ebp - 0x38 ]
or al 0x20
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
sub ecx 0x57
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
sub edx 0x30
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shr edx 0x8
mov [ ebp - 0x30 ] dx
mov eax [ ebp + 0x8 ]
and eax 0xff
shl eax 0x8
mov cx [ ebp - 0x30 ]
or cx ax
mov [ ebp - 0x30 ] cx
mov cx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] cx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ax [ ebp - 0x18 ]
or al 0x20
mov [ ebp - 0x18 ] ax
mov cx [ ebp - 0x18 ]
sub cx 0x57
mov [ ebp - 0x18 ] cx
mov dx [ ebp - 0x18 ]
sub dx 0x30
mov [ ebp - 0x18 ] dx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shr edx 0x8
mov [ ebp - 0x18 ] dx
mov eax [ ebp + 0x8 ]
and eax 0xff
shl eax 0x8
mov cx [ ebp - 0x18 ]
or cx ax
mov [ ebp - 0x18 ] cx
mov cx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] cx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x38 ]
shl ecx 0x4
mov [ ebp - 0x38 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x3c ]
call sub_4463ca
jmp r-xdata
mov edx [ ebp - 0x3c ]
cmp [ edx + 0x16c ] 0x0
je r-xdata
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x30 ]
and edx 0xffff
push edx
mov ecx [ ebp - 0x3c ]
call sub_446449
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x30 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x3c ]
call sub_4461a4
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
push 0x9
mov ecx [ ebp - 0x3c ]
call sub_456855
mov [ ebp - 0x24 ] 0x0
lea edx [ ebp - 0x2c ]
push edx
push 0x9
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_481a51
push 0x1
mov ecx [ ebp - 0x3c ]
call sub_45cb47
jmp r-xdata
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x1c ]
mov [ ebp - 0x2c ] eax
mov dx [ ebp - 0x18 ]
shl dx 0x4
mov [ ebp - 0x18 ] dx
mov eax [ ebp - 0x3c ]
mov [ eax + 0x16c ] 0x1
mov ecx [ ebp - 0x3c ]
mov [ ecx + 0x124 ] 0x0
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x3c ]
add edx [ eax + 0x12c ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x3c ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x14 ] ecx
push 0x0
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4353b5
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x24 ] 0x1
mov edx [ ebp - 0x3c ]
cmp [ edx + 0x11c ] 0x0
je r-xdata
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x3c ]
call sub_446319
mov edx [ ebp - 0x38 ]
push edx
mov ecx [ ebp - 0x3c ]
call sub_4462a4
jmp r-xdata
jmp r-xdata
sub_445ef5
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
call sub_405c80
mov ecx eax
call sub_45ee60
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x5
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x30 ]
jmp [ eax * 4 + jump_table_446155 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x100
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x100
jae r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x100
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x100
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x100
jb r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_4690a5
add esp 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
or ecx 0x8080
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xa1
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x18 ] dl
push 0x2
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea ecx [ ebp - 0x18 ]
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx ]
shl eax 0x8
or ecx eax
mov [ ebp - 0x10 ] cx
push 0x2
lea ecx [ ebp - 0xc ]
push ecx
push 0x2
lea edx [ ebp - 0x10 ]
push edx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0xc ]
and eax 0xffff
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x20 ] dl
lea eax [ ebp - 0x20 ]
push eax
call sub_41120a
add esp 0x4
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1c ] dl
lea eax [ ebp - 0x1c ]
push eax
call sub_41120a
add esp 0x4
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
shr eax 0x8
mov [ ebp - 0x1c ] al
lea ecx [ ebp - 0x1c ]
push ecx
call sub_41120a
add esp 0x4
mov edx [ ebp - 0x1c ]
and edx 0xff
shl edx 0x8
mov eax [ ebp - 0x8 ]
or eax edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov [ ebp - 0x28 ] cl
lea edx [ ebp - 0x28 ]
push edx
call sub_41123f
add esp 0x4
mov eax [ ebp - 0x28 ]
and eax 0xff
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov [ ebp - 0x24 ] cl
lea edx [ ebp - 0x24 ]
push edx
call sub_41123f
add esp 0x4
mov eax [ ebp - 0x24 ]
and eax 0xff
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
shr edx 0x8
mov [ ebp - 0x24 ] dl
lea eax [ ebp - 0x24 ]
push eax
call sub_41123f
add esp 0x4
mov ecx [ ebp - 0x24 ]
and ecx 0xff
shl ecx 0x8
mov edx [ ebp - 0x8 ]
or edx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x8 ] 0xdf
ja r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ch 0x8e
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
jmp r-xdata
sub_44616d
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
call sub_405ca0
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_434c29
mov esp ebp
pop ebp
retn 0x4
sub_4461a4
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
call sub_45f240
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x100
jb r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x28 ]
call sub_405c80
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x28 ]
call sub_405ca0
mov [ ebp - 0x14 ] eax
push 0x0
lea ecx [ ebp + 0x8 ]
push ecx
push 0x2
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_435240
mov eax [ ebp - 0x14 ]
add eax 0x2
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] 0x1
lea ecx [ ebp - 0x24 ]
push ecx
push 0x8
mov ecx [ ebp - 0x28 ]
call sub_456855
mov [ ebp - 0x1c ] 0x0
lea edx [ ebp - 0x24 ]
push edx
push 0x8
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_481a51
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_44616d
mov ecx [ ebp - 0x28 ]
call sub_405ca0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x1
lea ecx [ ebp - 0x10 ]
push ecx
push 0x2
mov ecx [ ebp - 0x28 ]
call sub_456855
mov ecx [ ebp - 0x28 ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
push 0x2
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_481a51
jmp r-xdata
mov [ ebp + 0xc ] 0x1
mov [ ebp + 0xc ] 0x2
jmp r-xdata
sub_4462a4
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_45f240
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_44616d
mov ecx [ ebp - 0x14 ]
call sub_405ca0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x1
lea ecx [ ebp - 0x10 ]
push ecx
push 0x6
mov ecx [ ebp - 0x14 ]
call sub_456855
mov ecx [ ebp - 0x14 ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
push 0x6
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_481a51
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_446319
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_45f240
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_4465ea
mov ecx [ ebp - 0x14 ]
call sub_405ca0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x1
lea edx [ ebp - 0x10 ]
push edx
push 0x5
mov ecx [ ebp - 0x14 ]
call sub_456855
mov ecx [ ebp - 0x14 ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x5
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_481a51
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_4462a4
jmp r-xdata
sub_4463ca
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
call sub_45f240
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x18 ]
call sub_405ca0
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_434f03
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0xc ] 0x1
lea eax [ ebp - 0x14 ]
push eax
push 0x4
mov ecx [ ebp - 0x18 ]
call sub_456855
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push 0x4
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_481a51
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_446449
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
call sub_45f240
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x100
jb r-xdata
mov ecx [ ebp - 0x4 ]
call sub_45f290
test eax eax
je r-xdata
mov ecx [ ebp - 0x2c ]
call sub_405ca0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x2c ]
call sub_4465ea
mov ecx [ ebp - 0x2c ]
call sub_405ca0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ ebp - 0x2c ]
call sub_456855
mov [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
mov edx [ ebp - 0x2c ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_481a51
jmp r-xdata
mov [ ebp + 0xc ] 0x1
mov [ ebp + 0xc ] 0x2
jmp r-xdata
push 0x0
call [ MessageBeep@IAT ]
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_4461a4
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] 0x2
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x168 ]
sub ecx 0x1
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x114 ] ecx
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
push 0x0
mov edx [ ebp - 0x18 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_4353b5
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] 0x1
lea ecx [ ebp - 0x28 ]
push ecx
push 0x9
mov ecx [ ebp - 0x2c ]
call sub_456855
mov [ ebp - 0x20 ] 0x0
lea edx [ ebp - 0x28 ]
push edx
push 0x9
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_481a51
sub_4465ea
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
call sub_405ca0
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_434ac1
mov esp ebp
pop ebp
retn 0x4
sub_446621
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
call sub_45f240
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x18 ]
call sub_405ca0
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_434d88
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] 0x1
lea edx [ ebp - 0x14 ]
push edx
push 0x3
mov ecx [ ebp - 0x18 ]
call sub_456855
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x3
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_481a51
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_44669c
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
call sub_45f240
test eax eax
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x124 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x124 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x1c ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x130 ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x1c ]
add eax [ ecx + 0x12c ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x13c ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x1c ]
add edx [ eax + 0x138 ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_434f92
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
lea ecx [ ebp - 0x18 ]
push ecx
push 0x7
mov ecx [ ebp - 0x1c ]
call sub_456855
mov [ ebp - 0x10 ] 0x0
lea edx [ ebp - 0x18 ]
push edx
push 0x7
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_481a51
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x124 ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_450ec5
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_45cb47
mov edx [ ebp - 0x1c ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
sub_4467a4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f240
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x118 ] 0x0
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44dc4e
mov ecx [ ebp - 0x4 ]
call sub_446621
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x114 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
jmp r-xdata
sub_4467ef
push ebp
mov ebp esp
push 0xffffffff
push sub_4999b7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xdc
mov [ ebp - 0xe8 ] ecx
mov ecx [ ebp - 0xe8 ]
call sub_45f240
test eax eax
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov eax [ ebp - 0xe8 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0xe8 ]
add edx [ eax + 0x12c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0xe8 ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0xe8 ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x10 ] ecx
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0xc4 ]
call sub_410c80
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xc4 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc4 ]
call sub_410f30
mov ecx [ ebp - 0xe8 ]
call sub_405c80
mov [ ebp - 0xc8 ] eax
push 0x0
mov dl [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0xc8 ]
call sub_435599
lea ecx [ ebp - 0xd8 ]
call sub_428cd0
push 0x0
lea edx [ ebp - 0xd8 ]
push edx
mov ecx [ ebp - 0xe8 ]
call sub_45ca79
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0xdc ] 0x1
lea ecx [ ebp - 0xe4 ]
push ecx
push 0xa
mov ecx [ ebp - 0xe8 ]
call sub_456855
mov [ ebp - 0xdc ] 0x0
lea edx [ ebp - 0xe4 ]
push edx
push 0xa
mov eax [ ebp - 0xe8 ]
push eax
mov ecx [ ebp - 0xc8 ]
call sub_481a51
sub_446986
push ebp
mov ebp esp
push 0xffffffff
push sub_4999ee
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x78
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x88 ] ecx
mov eax [ ebp - 0x88 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x88 ]
call sub_405c80
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x88 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x88 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x88 ]
add edx [ eax + 0x12c ]
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x88 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x88 ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x88 ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x78 ] eax
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x88 ]
call sub_45b3c0
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
call sub_4036e0
mov ecx eax
call sub_43272c
test eax eax
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
lea ecx [ ebp - 0x4c ]
call sub_47d515
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x3c ]
call sub_4035b0
mov [ ebp - 0x4 ] 0x2
push 0x0
push 0x1021
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x4c ]
call sub_47d627
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x4c ]
call sub_47d77e
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3f2
call sub_4840fb
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x7c ] ecx
mov edx [ ebp - 0x7c ]
push edx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x3c ]
call sub_403680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4c ]
call sub_47d56a
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x4c ]
call sub_47d842
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x3c ]
call sub_403680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4c ]
call sub_47d56a
sub_446b33
mov [ ebp - 0x4 ] 0x5
push 0xffffffff
push 0x0
push 0x423
call sub_4840fb
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x80 ]
push eax
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x60 ]
call sub_403680
mov eax r-xdata
retn
sub_446baa
mov [ ebp - 0x4 ] 0x8
push 0xffffffff
push 0x0
push 0x3f2
call sub_4840fb
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x84 ]
push edx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x74 ]
call sub_403680
mov eax r-xdata
retn
sub_446c4a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45f2b0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_446c7a
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_446c7a
push ebp
mov ebp esp
push 0xffffffff
push sub_499a01
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x28 ]
call sub_405c80
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x24 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_4016b0
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
mov ecx [ ebp - 0x10 ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_45ca79
mov ecx [ ebp - 0x10 ]
call sub_43621f
test eax eax
je r-xdata
push 0xffffffff
push 0x4
push 0x3fe
call sub_4840fb
cmp eax 0x6
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x0
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
call [ eax + 0x5c ]
push 0x0
push 0xe102
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
push 0x0
push 0xb
mov ecx [ ebp - 0x28 ]
call sub_456855
push 0x0
push 0xb
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_481a51
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
sub_446da3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe100
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_446dc6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe101
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_446de9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe102
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
mov esp ebp
pop ebp
retn
sub_446e0c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe103
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_446e2f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe104
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_446e52
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe103
push 0x111
call sub_402850
mov ecx eax
call sub_402890
push 0x0
push 0xe102
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
mov esp ebp
pop ebp
retn
sub_446e8d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe107
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_446eb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe109
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_446ed3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe106
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_446ef6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x8005
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
mov esp ebp
pop ebp
retn
sub_446f19
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x8006
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_446f3c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x8007
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
mov esp ebp
pop ebp
retn
sub_446f5f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x8008
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
mov esp ebp
pop ebp
retn
sub_446f82
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x8009
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
mov esp ebp
pop ebp
retn
sub_446fa5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe141
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
mov esp ebp
pop ebp
retn
sub_446fc8
push ebp
mov ebp esp
push 0xffffffff
push sub_499a20
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x198
mov [ ebp - 0x1a4 ] ecx
mov ecx [ ebp - 0x1a4 ]
call sub_405c80
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_404f70
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x1a4 ]
call sub_44737a
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x1a4 ]
mov eax [ edx + 0x124 ]
and eax 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
push 0x0
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x19c ]
call sub_40dc20
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x19c ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x1a4 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x1a4 ]
mov ecx [ eax + 0x130 ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x1a4 ]
add ecx [ edx + 0x12c ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x1a4 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x1a4 ]
mov eax [ edx + 0x13c ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x1a4 ]
add eax [ ecx + 0x138 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x19c ]
call sub_40e070
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea ecx [ ebp - 0x19c ]
call sub_40e015
mov ecx [ ebp - 0x1c ]
call sub_45ee60
mov [ ebp - 0x1a0 ] eax
mov edx [ ebp - 0x1a0 ]
push edx
mov eax [ ebp - 0x1a4 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xac ]
push edx
mov eax [ ebp - 0x1a4 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
lea ecx [ ebp - 0x13c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1a4 ]
call sub_45d3e2
sub_447187
push ebp
mov ebp esp
push 0xffffffff
push sub_499a36
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x198
mov [ ebp - 0x1a4 ] ecx
mov ecx [ ebp - 0x1a4 ]
call sub_405c80
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_404f70
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a4 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x194 ]
call sub_42cee0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x194 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x1a4 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x1a4 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x1a4 ]
add edx [ eax + 0x12c ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x1a4 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x1a4 ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x1a4 ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x194 ]
call sub_42d180
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x194 ]
call sub_42d11e
mov eax [ ebp - 0x1a4 ]
cmp [ eax + 0x338 ] 0x0
je r-xdata
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1a0 ] eax
mov ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x198 ] ecx
mov edx [ ebp - 0x1a4 ]
mov eax [ ebp - 0x198 ]
mov [ edx + 0x338 ] eax
mov ecx [ ebp - 0x198 ]
mov edx [ ebp - 0x1c ]
mov [ ecx ] edx
mov eax [ ebp - 0x198 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ecx
lea ecx [ ebp - 0x194 ]
call sub_45f2d0
test eax eax
je r-xdata
mov ecx [ ebp - 0x1a4 ]
mov edx [ ecx + 0x338 ]
mov [ ebp - 0x19c ] edx
mov eax [ ebp - 0x19c ]
push eax
call sub_47c3de
add esp 0x4
push 0x0
push 0xe107
push 0x111
call sub_402850
mov ecx eax
call sub_402890
push 0x0
push 0xe109
push 0x111
call sub_402850
mov ecx eax
call sub_402890
jmp r-xdata
sub_44737a
push ebp
mov ebp esp
push 0xffffffff
push sub_499a6f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x128
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x128 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x10 ]
call sub_4016b0
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
lea eax [ ebp - 0x11c ]
push eax
call [ lstrcpyA@IAT ]
lea ecx [ ebp - 0x11c ]
push ecx
call sub_411cc7
add esp 0x4
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x120 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_428c70
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c761
lea ecx [ ebp - 0x10 ]
call sub_4027a0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub eax 0x1
push eax
lea ecx [ ebp - 0x10 ]
call sub_4027d0
movsx ecx al
cmp ecx 0x2a
jne r-xdata
cmp [ ebp - 0x120 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18 ]
movsx eax [ edx ]
cmp eax 0x2e
jne r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_47ca04
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx 0x2
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4754b7
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x130 ]
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0x134 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x124 ]
call sub_47c674
push rw-data
mov ecx [ ebp - 0x120 ]
push ecx
call [ lstrcpyA@IAT ]
lea edx [ ebp - 0x11c ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x120 ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x120 ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov ecx [ ebp - 0x128 ]
or ecx 0x1
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x18 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
sub_447530
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_428cd0
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_45ca79
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
call sub_4497b3
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x124 ] 0x2
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_405470
mov esp ebp
pop ebp
retn
sub_44758c
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x118 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x110
test eax eax
je r-xdata
mov edx [ ebp - 0x1c ]
cmp [ edx + 0x114 ] 0x0
jne r-xdata
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x114
mov [ ebp - 0x20 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x114 ]
sub edx 0x1
mov eax [ ebp - 0x1c ]
mov [ eax + 0x114 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x1c ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x118 ]
sub edx 0x1
mov eax [ ebp - 0x1c ]
mov [ eax + 0x118 ] edx
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x1c ]
cmp [ edx + 0x114 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
mov [ edx + 0x124 ] 0x1
mov eax [ ebp - 0x1c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x1c ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x134
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x124 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x1c ]
add eax 0x12c
mov [ ebp - 0x24 ] eax
jmp r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x1c ]
call sub_450689
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x134
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x8 ]
call sub_45f310
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_457838
mov ecx [ ebp - 0x1c ]
call sub_45c237
mov ecx [ ebp - 0x1c ]
call sub_45f2f0
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp - 0x1c ]
add edx 0x138
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
sub_4477d7
push ebp
mov ebp esp
push 0xffffffff
push sub_499a94
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
mov [ ebp - 0x6c ] ecx
mov eax [ ebp - 0x6c ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x6c ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x110
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x6c ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jne r-xdata
mov [ ebp - 0x70 ] 0x0
mov edx [ ebp - 0x6c ]
add edx 0x114
mov [ ebp - 0x70 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x6c ]
mov eax [ edx + 0x114 ]
add eax 0x1
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x114 ] eax
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x114 ] 0x0
mov edx [ ebp - 0x6c ]
mov eax [ edx + 0x118 ]
add eax 0x1
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x118 ] eax
jmp r-xdata
mov eax [ ebp - 0x70 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x6c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x6c ]
cmp [ eax + 0x114 ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x6c ]
add edx 0x110
test edx edx
je r-xdata
mov eax [ ebp - 0x6c ]
mov [ eax + 0x124 ] 0x1
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x6c ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_41df4e
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x40 ]
push edx
mov eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_41dece
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx [ ebp - 0x6c ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_41df4e
jmp r-xdata
mov edx [ ebp - 0x6c ]
cmp [ edx + 0x124 ] 0x0
jne r-xdata
mov [ ebp - 0x74 ] 0x0
mov eax [ ebp - 0x6c ]
add eax 0x114
mov [ ebp - 0x74 ] eax
jmp r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x6c ]
call sub_450689
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
sub ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x74 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x2
mov ecx [ ebp - 0x6c ]
call sub_457838
mov ecx [ ebp - 0x6c ]
call sub_45c237
mov ecx [ ebp - 0x6c ]
call sub_45f2f0
mov [ ebp - 0x78 ] 0x0
mov ecx [ ebp - 0x6c ]
add ecx 0x12c
mov [ ebp - 0x78 ] ecx
jmp r-xdata
mov eax [ ebp - 0x6c ]
add eax 0x128
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x68 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x64 ]
push ecx
mov edx [ ebp - 0x68 ]
push edx
lea ecx [ ebp - 0x60 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x6c ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call sub_41df4e
mov ecx [ ebp - 0x6c ]
add ecx 0x134
test ecx ecx
je r-xdata
mov edx [ ebp - 0x78 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x48 ]
push edx
mov eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov [ ebp - 0x7c ] 0x0
mov edx [ ebp - 0x6c ]
add edx 0x138
mov [ ebp - 0x7c ] edx
jmp r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x6c ]
cmp [ eax + 0x12c ] edx
jne r-xdata
mov edx [ ebp - 0x6c ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0x54 ]
push ecx
mov ecx [ ebp - 0x6c ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov edx [ ebp - 0x6c ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x12c ] eax
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x12c ] 0x0
mov edx [ ebp - 0x6c ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x130 ] eax
jmp r-xdata
jmp r-xdata
sub_447b44
push ebp
mov ebp esp
push 0xffffffff
push sub_499aa7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x34 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x118 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x110
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x34 ]
add eax 0x114
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x34 ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x34 ]
mov [ edx + 0x124 ] 0x1
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41df4e
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x118 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x118 ] edx
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x124 ] 0x0
jne r-xdata
mov [ ebp - 0x3c ] 0x0
mov eax [ ebp - 0x34 ]
add eax 0x12c
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov eax [ ecx + 0x130 ]
cmp eax [ edx + 0x13c ]
jne r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x34 ]
call sub_450689
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x34 ]
cmp eax [ ecx + 0x13c ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x128
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x3
mov ecx [ ebp - 0x34 ]
call sub_457838
mov ecx [ ebp - 0x34 ]
call sub_45c237
mov ecx [ ebp - 0x34 ]
call sub_45f2f0
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
add eax 0x1
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x12c ] eax
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x12c ]
cmp edx [ ecx + 0x138 ]
jg r-xdata
mov edx [ ebp - 0x34 ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x128
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
jmp r-xdata
jmp r-xdata
sub_447ed4
push ebp
mov ebp esp
push 0xffffffff
push sub_499aba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x34 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x110
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov edx [ ebp - 0x34 ]
add edx 0x114
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x124 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jge r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x118 ]
add ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x118 ] ecx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x124 ] 0x1
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41df4e
mov ecx [ ebp - 0x34 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x168 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x114 ]
mov [ ebp - 0x3c ] ecx
jmp r-xdata
mov [ ebp - 0x40 ] 0x0
mov edx [ ebp - 0x34 ]
add edx 0x12c
mov [ ebp - 0x40 ] edx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
mov [ ecx + 0x114 ] edx
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x130 ]
cmp ecx [ eax + 0x13c ]
jne r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x34 ]
call sub_450689
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x34 ]
cmp eax [ ecx + 0x13c ]
jne r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x134
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x12c ] edx
jne r-xdata
push 0x0
push 0x0
push 0x4
mov ecx [ ebp - 0x34 ]
call sub_457838
mov ecx [ ebp - 0x34 ]
call sub_45c237
mov ecx [ ebp - 0x34 ]
call sub_45f2f0
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
add eax 0x1
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x12c ] eax
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x12c ] eax
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x12c ] 0x0
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x130 ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x12c ]
cmp edx [ ecx + 0x138 ]
jg r-xdata
mov edx [ ebp - 0x34 ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x134
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x12c ] eax
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
sub_44839a
push ebp
mov ebp esp
push 0xffffffff
push sub_499acd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x34 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x114 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x110
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x34 ]
add eax 0x114
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
mov [ eax + 0x124 ] 0x1
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41df4e
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x114 ] 0x0
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x124 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x130 ]
cmp edx [ ecx + 0x13c ]
jne r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x34 ]
call sub_450689
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x118 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x13c ] edx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov eax [ ebp - 0x34 ]
add eax 0x128
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x5
mov ecx [ ebp - 0x34 ]
call sub_457838
mov ecx [ ebp - 0x34 ]
call sub_45c237
mov ecx [ ebp - 0x34 ]
call sub_45f2f0
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x34 ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
jmp r-xdata
sub_4485d3
push ebp
mov ebp esp
push 0xffffffff
push sub_499ae0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
mov [ ebp - 0x3c ] ecx
mov eax [ ebp - 0x3c ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x3c ]
cmp [ ecx + 0x114 ] eax
jne r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3c ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
je r-xdata
mov edx [ ebp - 0x3c ]
add edx 0x110
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0x3c ]
add eax 0x114
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x3c ]
mov [ ecx + 0x114 ] eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x168 ]
sub edx 0x1
mov eax [ ebp - 0x3c ]
mov [ eax + 0x114 ] edx
jmp r-xdata
mov ecx [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x3c ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0x3c ]
mov [ eax + 0x124 ] 0x1
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x3c ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41df4e
mov eax [ ebp - 0x3c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x3c ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x3c ]
mov [ eax + 0x138 ] edx
jmp r-xdata
mov edx [ ebp - 0x3c ]
cmp [ edx + 0x124 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x3c ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x3c ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x130 ]
cmp ecx [ eax + 0x13c ]
jne r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x3c ]
call sub_450689
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x6
mov ecx [ ebp - 0x3c ]
call sub_457838
mov ecx [ ebp - 0x3c ]
call sub_45c237
mov ecx [ ebp - 0x3c ]
call sub_45f2f0
mov eax [ ebp - 0x3c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x3c ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x3c ]
add edx 0x134
push edx
mov ecx [ ebp - 0x3c ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x12c ]
add ecx 0x1
mov edx [ ebp - 0x3c ]
mov [ edx + 0x12c ] ecx
mov eax [ ebp - 0x3c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x3c ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x3c ]
add ecx 0x134
test ecx ecx
je r-xdata
mov [ ebp - 0x44 ] 0x0
mov edx [ ebp - 0x3c ]
add edx 0x138
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x3c ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x3c ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x3c ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
sub_4488d9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x118 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x124 ] 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x114 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
jmp r-xdata
push 0x0
push 0x0
push 0x9
mov ecx [ ebp - 0x4 ]
call sub_457838
mov ecx [ ebp - 0x4 ]
call sub_45c237
mov ecx [ ebp - 0x4 ]
call sub_45f2f0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x118 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x114 ] 0x0
mov eax [ ebp - 0x4 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x128
call sub_45f350
push 0x1
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_450689
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
mov esp ebp
pop ebp
retn
sub_4489f1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x124 ] 0x1
mov edx [ ebp - 0x4 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x4 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x118 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x168 ]
mov [ eax + 0x114 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
jmp r-xdata
push 0x0
push 0x0
push 0xa
mov ecx [ ebp - 0x4 ]
call sub_457838
mov ecx [ ebp - 0x4 ]
call sub_45c237
mov ecx [ ebp - 0x4 ]
call sub_45f2f0
push 0x1
push 0x3
mov ecx [ ebp - 0x4 ]
call sub_450689
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_448b29
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_404f70
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x124 ] 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + 0x118 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x114 ] 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x13c ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x168 ]
sub eax 0x1
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x138 ] eax
push 0x1
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_450689
mov ecx [ ebp - 0x8 ]
call sub_45f2f0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_457838
mov ecx [ ebp - 0x8 ]
call sub_45c237
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_448bf2
push ebp
mov ebp esp
push 0xffffffff
push sub_499af3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x34 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x34 ]
add ecx 0x110
test ecx ecx
je r-xdata
mov [ ebp - 0x38 ] 0x0
mov edx [ ebp - 0x34 ]
add edx 0x114
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x158 ]
mov edx [ ebp - 0x34 ]
mov [ edx + 0x118 ] ecx
mov eax [ ebp - 0x34 ]
mov [ eax + 0x114 ] 0x0
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x118 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x158 ]
shl ecx 0x1
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x118 ] ecx
jge r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x124 ] 0x1
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41df4e
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x124 ] 0x0
jne r-xdata
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x34 ]
add edx 0x12c
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x118 ]
cmp edx [ ecx + 0x130 ]
jge r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
push 0xffff
mov ecx [ ebp - 0x34 ]
call sub_45200e
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x130 ]
jne r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x128
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0xc
mov ecx [ ebp - 0x34 ]
call sub_457838
mov ecx [ ebp - 0x34 ]
call sub_45c237
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
call sub_45f2f0
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x12c ]
jne r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x114 ]
cmp ecx [ eax + 0x12c ]
jle r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x124 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x128
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
sub_44906a
push ebp
mov ebp esp
push 0xffffffff
push sub_499b06
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x34 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x34 ]
add ecx 0x110
test ecx ecx
je r-xdata
mov [ ebp - 0x38 ] 0x0
mov edx [ ebp - 0x34 ]
add edx 0x114
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x118 ]
mov eax [ ebp - 0x34 ]
add edx [ eax + 0x158 ]
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x118 ] edx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x118 ] eax
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x118 ] edx
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x168 ]
mov [ ecx + 0x114 ] eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x158 ]
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x118 ]
lea ecx [ eax + ecx * 2 ]
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp ecx eax
jle r-xdata
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x124 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x114 ]
cmp ecx [ eax + 0x168 ]
jge r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x128
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
mov [ eax + 0x124 ] 0x1
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41df4e
mov eax [ ebp - 0x34 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x34 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x168 ]
mov [ ebp - 0x3c ] edx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x114 ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov [ ebp - 0x40 ] 0x0
mov ecx [ ebp - 0x34 ]
add ecx 0x12c
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + 0x114 ] ecx
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x13c ]
jle r-xdata
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
push 0x0
push 0x3
push 0x0
push 0xffff
mov ecx [ ebp - 0x34 ]
call sub_45200e
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x13c ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x134
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x12c ] ecx
jne r-xdata
push 0x0
push 0x0
push 0xd
mov ecx [ ebp - 0x34 ]
call sub_457838
mov ecx [ ebp - 0x34 ]
call sub_45c237
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
call sub_45f2f0
mov ecx [ ebp - 0x34 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x138 ]
add edx 0x1
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x114 ] edx
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x12c ]
add edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x12c ] edx
mov eax [ ebp - 0x34 ]
mov [ eax + 0x12c ] 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x130 ]
add edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x130 ] edx
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x114 ]
cmp ecx [ eax + 0x138 ]
jg r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x124 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x134
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x12c ]
add edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x12c ] edx
mov ecx [ ebp - 0x34 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x34 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x34 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x34 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x34 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
sub_44956b
push ebp
mov ebp esp
push 0xffffffff
push sub_499b1c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x188
mov [ ebp - 0x194 ] ecx
mov ecx [ ebp - 0x194 ]
call sub_405c80
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_404f70
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x194 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x20 ] 0x0
je r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x190 ]
call sub_405de0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x190 ]
call sub_47841e
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0x194 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x194 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x194 ]
add edx [ eax + 0x12c ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x194 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x194 ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x194 ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x190 ]
call sub_405feb
mov eax [ ebp - 0x194 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x194 ]
mov [ ecx + 0x124 ] 0x1
mov edx [ ebp - 0x194 ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp - 0x1c ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x194 ]
mov [ edx + 0x130 ] eax
mov eax [ ebp - 0x194 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x1c ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x194 ]
mov [ eax + 0x12c ] edx
mov ecx [ ebp - 0x194 ]
mov ecx [ ecx + 0x248 ]
mov eax [ ebp - 0x10 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x194 ]
mov [ edx + 0x13c ] eax
mov eax [ ebp - 0x194 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x10 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x194 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x194 ]
add ecx 0x134
push ecx
mov ecx [ ebp - 0x194 ]
add ecx 0x110
call sub_45f350
push 0x1
push 0x3
mov ecx [ ebp - 0x194 ]
call sub_450689
mov ecx [ ebp - 0x194 ]
call sub_45f2f0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x194 ]
call sub_457838
mov ecx [ ebp - 0x194 ]
call sub_45c237
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x190 ]
call sub_406050
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x190 ]
call sub_406050
jmp r-xdata
sub_4497b3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_45cb47
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x124 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x124 ] 0x2
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x124 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x27c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x1
mov eax [ ebp - 0x4 ]
add eax 0xf0
push eax
mov ecx [ ebp - 0x4 ]
call sub_405470
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x11c ] 0x0
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
add eax 0xe0
push eax
mov ecx [ ebp - 0x4 ]
call sub_405470
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x11c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x27c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_450ec5
sub_44985f
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x10 ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x10 ]
add edx [ eax + 0x12c ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x10 ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_45c53f
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_434fb3
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x270 ] 0x0
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
call sub_4497b3
sub_449912
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
call sub_45f240
test eax eax
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x1c ]
add edx [ eax + 0x12c ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x1c ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_45c53f
push 0x1
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_435078
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] 0x1
lea edx [ ebp - 0x18 ]
push edx
push 0x7
mov ecx [ ebp - 0x1c ]
call sub_456855
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x7
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_481a51
mov edx [ ebp - 0x1c ]
mov [ edx + 0x124 ] 0x0
sub_449a02
push ebp
mov ebp esp
sub esp 0x54
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp - 0x50 ]
call sub_45f240
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x407
call sub_402850
mov ecx eax
call sub_402890
test eax eax
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x50 ]
call sub_405c80
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
call sub_404f70
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x50 ]
call sub_405ca0
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0xc ]
call sub_45f170
test eax eax
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x124 ] 0x0
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x50 ]
add edx [ eax + 0x12c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x50 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x50 ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x50 ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x10 ] ecx
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_4353b5
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] 0x1
lea edx [ ebp - 0x20 ]
push edx
push 0x9
mov ecx [ ebp - 0x50 ]
call sub_456855
mov [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x9
mov ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_481a51
push 0x1
mov ecx [ ebp - 0x50 ]
call sub_45cb47
jmp r-xdata
mov ecx [ ebp - 0x50 ]
call sub_405ca0
mov [ ebp - 0x40 ] eax
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_435240
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x44 ] 0x1
lea edx [ ebp - 0x4c ]
push edx
push 0x8
mov ecx [ ebp - 0x50 ]
call sub_456855
mov [ ebp - 0x44 ] 0x0
lea eax [ ebp - 0x4c ]
push eax
push 0x8
mov ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_481a51
mov edx [ ebp - 0x50 ]
cmp [ edx + 0x260 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x30 ]
lea ecx [ eax + edx - 0x1 ]
mov edx [ ebp - 0x28 ]
sub edx 0x1
cmp ecx edx
jae r-xdata
mov eax [ ebp - 0x28 ]
sub eax 0x1
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + eax - 0x1 ]
mov [ ebp - 0x54 ] edx
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x2c ] ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_4353b5
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x1
lea ecx [ ebp - 0x3c ]
push ecx
push 0x9
mov ecx [ ebp - 0x50 ]
call sub_456855
mov [ ebp - 0x34 ] 0x0
lea edx [ ebp - 0x3c ]
push edx
push 0x9
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_481a51
jmp r-xdata
sub_449c4d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe130
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_449c70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe132
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_449c93
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe133
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_449cb6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe134
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_449cd9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe131
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_449cfc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x409
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_449d39
push ebp
mov ebp esp
sub esp 0x40
push esi
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
call sub_4066d0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_45f3b0
test eax eax
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f390
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
call sub_4066d0
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x2c ]
call sub_428cd0
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
call sub_4061a0
lea ecx [ ebp - 0x14 ]
call sub_428cd0
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_4061a0
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
lea edx [ ecx * 4 + 0xf ]
mov eax [ ebp - 0x34 ]
mov esi [ eax + 0xa8 ]
imul esi edx
push 0x20
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax * 2 ]
push 0x5
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax * 4 ]
push 0x2
call [ GetSystemMetrics@IAT ]
add esi eax
mov [ ebp - 0x4 ] esi
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x164 ]
add edx 0x1
cmp edx 0x11
jle r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x164 ]
add ecx 0x1
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x38 ] 0x11
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x3c ] eax
lea ecx [ ebp - 0x14 ]
call sub_404fe0
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov esi [ edx + 0xac ]
imul esi [ ebp - 0x38 ]
push 0x21
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax * 2 ]
push 0x6
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax * 4 ]
push 0x4
call [ GetSystemMetrics@IAT ]
add esi eax
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x14 ]
call sub_404fe0
cmp eax [ ebp - 0x1c ]
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x40 ] ecx
lea ecx [ ebp - 0x2c ]
call sub_405cf0
mov [ ebp - 0x40 ] eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_405cf0
cmp eax [ ebp - 0x4 ]
jge r-xdata
push 0x6
mov edx [ ebp - 0x3c ]
push edx
mov eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_47bd57
sub_449f9b
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0xc ]
call sub_428cd0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x100
call sub_45f3d0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_4066d0
mov ecx eax
call sub_40b4e0
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x2ac ]
push edx
lea ecx [ ebp - 0x4 ]
call sub_465c40
mov esp ebp
pop ebp
retn 0xc
sub_44a051
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x2cc ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x2d0 ] 0x0
push 0x0
push 0x1f4
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_416e90
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0xa
push ecx
mov ecx [ ebp - 0x4 ]
call sub_449f9b
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_44a0a9
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov [ eax + 0x2d4 ] 0x1
cmp [ ebp + 0x8 ] 0x100
jb r-xdata
cmp [ ebp + 0x8 ] 0x1b
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x2cc ]
add ecx 0xa
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
imul edx edx 0x14
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x2ac ]
add ecx edx
call sub_41b1b0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_416ec0
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x2cc ] 0xffffffff
mov edx [ ebp - 0x1c ]
mov [ edx + 0x2d0 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x14
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x2ac ]
add ecx eax
call sub_41b1d0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_416ec0
mov edx [ ebp - 0x1c ]
mov [ edx + 0x2cc ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov [ eax + 0x2d0 ] 0x0
mov cx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] cx
mov dx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_455818
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x10
and ecx 0xffff
mov [ ebp - 0x18 ] cl
movsx edx [ ebp + 0x8 ]
movsx eax [ ebp - 0x18 ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
sub_44a1c9
push ebp
mov ebp esp
push 0xffffffff
push sub_499b3e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18c
mov [ ebp - 0x194 ] ecx
mov eax [ ebp - 0x194 ]
cmp [ eax + 0x2e4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x194 ]
mov [ ecx + 0x2e4 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x194 ]
call sub_44b654
test eax eax
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_428cd0
push 0x1
lea edx [ ebp - 0x38 ]
push edx
mov ecx [ ebp - 0x194 ]
call sub_45ca79
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x194 ]
mov [ edx + 0x2e4 ] 0x0
push 0x0
push 0x4
mov ecx [ ebp - 0x194 ]
call sub_44a651
mov ecx [ ebp - 0x194 ]
mov [ ecx + 0x2e4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x194 ]
call sub_405c80
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
call sub_45ee60
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x194 ]
cmp [ ecx + 0x1d4 ] 0x0
je r-xdata
push 0x1
lea eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x194 ]
call sub_405470
xor eax eax
mov ecx [ ebp - 0x194 ]
mov edx [ ecx + 0x1d0 ]
mov [ ebp - 0x1c ] edx
lea ecx [ ebp - 0xec ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x0
push 0xa0
lea edx [ ebp - 0x18c ]
push edx
mov eax [ ebp - 0x194 ]
mov ecx [ eax + 0x1d0 ]
push ecx
mov edx [ ebp - 0x194 ]
add edx 0x180
push edx
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0xec ]
call sub_4600f6
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xec ]
call sub_45feb7
jmp r-xdata
mov ecx [ ebp - 0x194 ]
mov edx [ ecx + 0x228 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x194 ]
add eax 0x1d8
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x190 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x1
push 0xa0
lea ecx [ ebp - 0xe8 ]
push ecx
mov edx [ ebp - 0x194 ]
mov eax [ edx + 0x228 ]
push eax
mov ecx [ ebp - 0x194 ]
add ecx 0x1d8
push ecx
mov edx [ ebp - 0x28 ]
push edx
lea ecx [ ebp - 0x190 ]
call sub_4600f6
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xe8 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x190 ]
call sub_45feb7
jmp r-xdata
mov eax [ ebp - 0x194 ]
cmp [ eax + 0x22c ] 0x0
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push 0x9
mov ecx [ ebp - 0x194 ]
call sub_456855
mov [ ebp - 0x40 ] 0x0
lea ecx [ ebp - 0x48 ]
push ecx
push 0x9
mov edx [ ebp - 0x194 ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_481a51
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x194 ]
cmp [ ecx + 0x234 ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x48 ] edx
mov ecx [ ebp - 0x194 ]
call sub_405ca0
add eax 0x1
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
sub ecx 0x1
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x3c ]
lea ecx [ eax + edx - 0x1 ]
mov [ ebp - 0x18 ] ecx
push 0x0
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x3c ]
push edx
mov ecx [ ebp - 0x20 ]
call sub_4353b5
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x40 ] 0x1
mov ecx [ ebp - 0x194 ]
cmp [ ecx + 0x11c ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
sub edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx - 0x1 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x194 ]
mov edx [ ebp - 0x194 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov eax [ ebp - 0x194 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x14 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x194 ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x194 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x14 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x194 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x194 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x194 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov eax [ ebp - 0x194 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x198 ] ecx
mov ecx [ ebp - 0x194 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x198 ] edx
jmp r-xdata
mov edx [ ebp - 0x194 ]
mov eax [ ebp - 0x198 ]
mov [ edx + 0x114 ] eax
sub_44a53a
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov esi [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
add edi 0x178
mov ecx 0x31
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xb8 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xb8 ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x23c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x23c ] 0x0
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x23c ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x23c ] 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x130 ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x8 ]
add ecx [ edx + 0x12c ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0x240 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x8 ]
add ecx [ edx + 0x138 ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0x244 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_44b486
mov ecx [ ebp - 0x8 ]
call sub_44b2b8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x23c ] 0x3
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xbc ] 0x0
je r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x240 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x244 ] 0x0
sub_44a651
push ebp
mov ebp esp
sub esp 0x54
mov [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov ecx [ ecx + 0x2e8 ]
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x2e8 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x2e8 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov ecx [ ecx + 0x2ec ]
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x2ec ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x2ec ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x44 ] 0x0
push 0x1
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x4 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x2e4 ] 0x0
je r-xdata
mov [ ebp - 0x48 ] 0x0
push 0x1
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
mov ecx [ ebp - 0x1c ]
call [ edx + 0x4 ]
mov [ ebp - 0x48 ] eax
jmp r-xdata
push 0x1
call sub_402850
mov ecx eax
call sub_47bde8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax + 0x2e8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x2f8 ]
call sub_409eff
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x40 ]
mov ecx [ ecx + 0x2f8 ]
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x2f8 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x2f8 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov edx [ ebp - 0x40 ]
mov ecx [ edx + 0x2f0 ]
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x2f0 ]
mov eax [ edx ]
call [ eax + 0x58 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + 0x2f0 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax + 0x2ec ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x50 ] 0x0
push 0x1
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
mov ecx [ ebp - 0x2c ]
call [ edx + 0x4 ]
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov [ ebp - 0x4c ] 0x0
push 0x1
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x24 ]
call [ edx + 0x4 ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
call sub_47be0f
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x40 ]
je r-xdata
mov edx [ ebp - 0x40 ]
mov ecx [ edx + 0x2fc ]
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax + 0x2f8 ] 0x0
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x2fc ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x40 ]
call sub_405ca0
mov ecx [ ebp - 0x40 ]
mov [ ecx + 0x240 ] eax
mov edx [ ebp - 0x40 ]
cmp [ edx + 0x234 ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax + 0x2f0 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x40 ]
cmp [ eax + 0x230 ] 0x2
jne r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x1d0 ]
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x240 ]
lea ecx [ eax + ecx - 0x1 ]
mov edx [ ebp - 0x40 ]
mov [ edx + 0x240 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_47a2e8
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x40 ]
mov ecx [ edx + 0x2fc ]
call sub_407e10
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x2fc ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] edx
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x2fc ]
call sub_402780
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
push ecx
call sub_47c3de
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x40 ]
mov [ edx + 0x244 ] 0x0
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x234 ] 0x0
je r-xdata
mov [ ebp - 0x54 ] 0x0
push 0x1
mov eax [ ebp - 0x38 ]
mov edx [ eax ]
mov ecx [ ebp - 0x38 ]
call [ edx + 0x4 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x40 ]
add edx [ eax + 0x12c ]
mov ecx [ ebp - 0x40 ]
mov [ ecx + 0x244 ] edx
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + 0x13c ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x40 ]
add edx [ eax + 0x138 ]
mov ecx [ ebp - 0x40 ]
mov [ ecx + 0x244 ] edx
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ eax + 0x2fc ] 0x0
mov ecx [ ebp - 0x40 ]
call sub_428c00
mov ecx [ ebp - 0x40 ]
call sub_44c0d1
xor eax eax
jmp r-xdata
jmp r-xdata
sub_44a9ea
push ebp
mov ebp esp
sub esp 0x38
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x110
test eax eax
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0x114
mov [ ebp - 0x2c ] ecx
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x28 ]
call sub_450689
mov ecx [ ebp - 0x28 ]
cmp [ ecx + 0x124 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp - 0x14 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x28 ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x14 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x28 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov edx [ ebp - 0x28 ]
mov [ edx + 0x124 ] 0x8
mov eax [ ebp - 0x28 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x134
call sub_45f350
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0x248 ]
cdq
idiv [ ecx + 0xa0 ]
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x13c ]
add ecx eax
mov edx [ ebp - 0x28 ]
mov [ edx + 0x13c ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx + 0x248 ]
cdq
idiv [ ecx + 0xa0 ]
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x138 ]
add ecx edx
mov edx [ ebp - 0x28 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x138 ]
cmp eax [ ecx + 0xa0 ]
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x128
test edx edx
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
call sub_45f2f0
push 0x0
push 0x0
push 0xffffffff
mov ecx [ ebp - 0x28 ]
call sub_457838
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x138 ]
sub ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x28 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0x28 ]
mov [ edx + 0x13c ] ecx
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp - 0x28 ]
add eax 0x12c
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x30 ]
mov [ edx + 0x114 ] eax
mov [ ebp - 0x38 ] 0x0
mov edx [ ebp - 0x28 ]
add edx 0x138
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x134
test ecx ecx
je r-xdata
mov edx [ ebp - 0x28 ]
mov [ edx + 0x124 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push 0xb
mov ecx [ ebp - 0x28 ]
call sub_457838
mov ecx [ ebp - 0x28 ]
call sub_45f2f0
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x28 ]
call sub_45a8f4
mov ecx [ ebp - 0x28 ]
cmp [ ecx + 0x124 ] 0x3
jne r-xdata
sub_44ad1e
push ebp
mov ebp esp
push 0xffffffff
push sub_499b52
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov [ eax + 0x1d0 ] 0x0
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x23c ] 0x0
push 0x0
call sub_402850
mov ecx eax
call sub_47bde8
push 0x17c
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x2b0 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_42f800
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x2e8 ] ecx
mov edx [ ebp - 0x18 ]
push edx
push 0xa1
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x2e8 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x2e8 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
push 0x5
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x2e8 ]
call sub_47bda6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_44ae0d
push ebp
mov ebp esp
push 0xffffffff
push sub_499b68
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x180
mov [ ebp - 0x18c ] ecx
mov eax [ ebp - 0x18c ]
mov [ eax + 0x1d0 ] 0x0
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x23c ] 0x0
mov edx [ ebp - 0x18c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18c ]
mov edx [ ecx + 0x124 ]
and edx 0x1
push edx
mov eax [ ebp - 0x18c ]
mov ecx [ eax + 0x2b0 ]
push ecx
lea ecx [ ebp - 0x188 ]
call sub_42f800
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x188 ]
call sub_47841e
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0x18c ]
add edx 0x178
push edx
lea ecx [ ebp - 0x188 ]
call sub_430073
mov eax [ ebp - 0x18c ]
cmp [ eax + 0x230 ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x188 ]
call sub_4300f0
jmp r-xdata
mov edx [ ebp - 0x18c ]
cmp [ edx + 0x230 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x23c ] 0x1
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x18c ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x18c ]
add edx [ eax + 0x12c ]
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x240 ] edx
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x18c ]
mov edx [ ecx + 0x13c ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x18c ]
add edx [ eax + 0x138 ]
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x244 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x23c ] 0x0
mov eax [ ebp - 0x18c ]
mov [ eax + 0x23c ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x18c ]
cmp [ ecx + 0x234 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18c ]
call sub_44b486
mov ecx [ ebp - 0x18c ]
call sub_44b2b8
jmp r-xdata
mov edx [ ebp - 0x18c ]
mov [ edx + 0x240 ] 0x0
mov eax [ ebp - 0x18c ]
mov [ eax + 0x244 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x188 ]
call sub_4300f0
sub_44aff7
push ebp
mov ebp esp
push 0xffffffff
push sub_499b7c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov [ eax + 0x1d0 ] 0x0
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x23c ] 0x0
push 0x0
call sub_402850
mov ecx eax
call sub_47bde8
push 0x17c
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
push edx
mov ecx [ ebp - 0x14 ]
call sub_430180
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x2ec ] edx
mov eax [ ebp - 0x18 ]
push eax
push 0xa0
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x2ec ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x2ec ]
mov edx [ eax ]
call [ edx + 0xd0 ]
push 0x5
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x2ec ]
call sub_47bda6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_44b0dc
push ebp
mov ebp esp
push 0xffffffff
push sub_499b92
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x180
mov [ ebp - 0x18c ] ecx
mov eax [ ebp - 0x18c ]
mov [ eax + 0x1d0 ] 0x0
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x23c ] 0x0
mov edx [ ebp - 0x18c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18c ]
mov edx [ ecx + 0x124 ]
and edx 0x1
push edx
lea ecx [ ebp - 0x188 ]
call sub_430180
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x188 ]
call sub_47841e
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x178
push eax
lea ecx [ ebp - 0x188 ]
call sub_43054e
mov ecx [ ebp - 0x18c ]
cmp [ ecx + 0x230 ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x188 ]
call sub_4305d0
jmp r-xdata
mov eax [ ebp - 0x18c ]
cmp [ eax + 0x230 ] 0x1
jne r-xdata
mov edx [ ebp - 0x18c ]
mov [ edx + 0x23c ] 0x1
mov eax [ ebp - 0x18c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x130 ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18c ]
add eax [ ecx + 0x12c ]
mov edx [ ebp - 0x18c ]
mov [ edx + 0x240 ] eax
mov eax [ ebp - 0x18c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x13c ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18c ]
add eax [ ecx + 0x138 ]
mov edx [ ebp - 0x18c ]
mov [ edx + 0x244 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x18c ]
mov [ edx + 0x23c ] 0x0
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x23c ] 0x3
jmp r-xdata
mov edx [ ebp - 0x18c ]
cmp [ edx + 0x234 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18c ]
call sub_44b486
mov ecx [ ebp - 0x18c ]
call sub_44b2b8
jmp r-xdata
mov eax [ ebp - 0x18c ]
mov [ eax + 0x240 ] 0x0
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x244 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x188 ]
call sub_4305d0
sub_44b2b8
push ebp
mov ebp esp
push 0xffffffff
push sub_499ba8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x180
mov [ ebp - 0x18c ] ecx
mov eax [ ebp - 0x18c ]
cmp [ eax + 0x1d0 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18c ]
mov [ edx + 0x234 ] 0x1
mov ecx [ ebp - 0x18c ]
push ecx
push 0x1
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x124 ]
and eax 0x1
push eax
mov ecx [ ebp - 0x18c ]
mov edx [ ecx + 0x2b0 ]
push edx
lea ecx [ ebp - 0x188 ]
call sub_42f800
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x188 ]
call sub_47841e
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x178
push eax
lea ecx [ ebp - 0x188 ]
call sub_430073
mov ecx [ ebp - 0x18c ]
cmp [ ecx + 0x230 ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x188 ]
call sub_4300f0
jmp r-xdata
mov eax [ ebp - 0x18c ]
cmp [ eax + 0x230 ] 0x1
jne r-xdata
mov edx [ ebp - 0x18c ]
mov [ edx + 0x23c ] 0x1
mov eax [ ebp - 0x18c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x130 ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18c ]
add eax [ ecx + 0x12c ]
mov edx [ ebp - 0x18c ]
mov [ edx + 0x240 ] eax
mov eax [ ebp - 0x18c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x13c ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18c ]
add eax [ ecx + 0x138 ]
mov edx [ ebp - 0x18c ]
mov [ edx + 0x244 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18c ]
mov [ edx + 0x23c ] 0x0
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x23c ] 0x3
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x188 ]
call sub_4300f0
jmp r-xdata
mov ecx [ ebp - 0x18c ]
call sub_44b654
mov eax [ ebp - 0x18c ]
mov [ eax + 0x240 ] 0x0
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x244 ] 0x0
sub_44b486
push ebp
mov ebp esp
push 0xffffffff
push sub_499bbe
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x180
mov [ ebp - 0x18c ] ecx
mov eax [ ebp - 0x18c ]
cmp [ eax + 0x1d0 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18c ]
mov [ edx + 0x234 ] 0x0
mov ecx [ ebp - 0x18c ]
push ecx
push 0x0
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x124 ]
and eax 0x1
push eax
mov ecx [ ebp - 0x18c ]
mov edx [ ecx + 0x2b0 ]
push edx
lea ecx [ ebp - 0x188 ]
call sub_42f800
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x188 ]
call sub_47841e
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x178
push eax
lea ecx [ ebp - 0x188 ]
call sub_430073
mov ecx [ ebp - 0x18c ]
cmp [ ecx + 0x230 ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x188 ]
call sub_4300f0
jmp r-xdata
mov eax [ ebp - 0x18c ]
cmp [ eax + 0x230 ] 0x1
jne r-xdata
mov edx [ ebp - 0x18c ]
mov [ edx + 0x23c ] 0x1
mov eax [ ebp - 0x18c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x130 ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18c ]
add eax [ ecx + 0x12c ]
mov edx [ ebp - 0x18c ]
mov [ edx + 0x240 ] eax
mov eax [ ebp - 0x18c ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x18c ]
mov eax [ edx + 0x13c ]
imul eax [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18c ]
add eax [ ecx + 0x138 ]
mov edx [ ebp - 0x18c ]
mov [ edx + 0x244 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18c ]
mov [ edx + 0x23c ] 0x0
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x23c ] 0x3
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x188 ]
call sub_4300f0
jmp r-xdata
mov ecx [ ebp - 0x18c ]
call sub_44b654
mov eax [ ebp - 0x18c ]
mov [ eax + 0x240 ] 0x0
mov ecx [ ebp - 0x18c ]
mov [ ecx + 0x244 ] 0x0
sub_44b654
push ebp
mov ebp esp
push 0xffffffff
push sub_499bda
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x124
mov [ ebp - 0x110 ] ecx
lea ecx [ ebp - 0x48 ]
call sub_428cd0
push 0x1
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x110 ]
call sub_45ca79
test eax eax
je r-xdata
mov ecx [ ebp - 0x110 ]
call sub_405c80
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
call sub_404f90
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x110 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x110 ]
call sub_405470
mov ecx [ ebp - 0x110 ]
cmp [ ecx + 0x114 ] 0x0
jne r-xdata
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x38 ] 0x0
mov ecx [ ebp - 0x110 ]
call sub_405ca0
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x23c ]
mov [ ebp - 0x114 ] edx
cmp [ ebp - 0x114 ] 0x4
ja r-xdata
mov ecx [ ebp - 0x110 ]
call sub_405ca0
sub eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edx [ ebp - 0x110 ]
cmp [ edx + 0x118 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x114 ]
jmp [ eax * 4 + jump_table_44bdd6 ]
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x23c ]
mov [ ebp - 0x11c ] ecx
cmp [ ebp - 0x11c ] 0x4
ja r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x110 ]
cmp [ edx + 0x17c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x4c ] ecx
jmp r-xdata
mov edx [ ebp - 0x110 ]
mov [ edx + 0x23c ] 0x4
jmp r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x240 ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x110 ]
mov eax [ edx + 0x244 ]
add eax 0x1
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x110 ]
mov [ ecx + 0x23c ] 0x2
jmp r-xdata
mov edx [ ebp - 0x110 ]
mov eax [ edx + 0x240 ]
cmp eax [ ebp - 0x1c ]
jbe r-xdata
mov edx [ ebp - 0x11c ]
jmp [ edx * 4 + jump_table_44bdea ]
mov [ ebp - 0x18 ] 0x1
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x4c ]
push ecx
mov edx [ ebp - 0x110 ]
xor eax eax
cmp [ edx + 0x234 ] 0x0
sete al
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x110 ]
mov al [ edx + 0x180 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_41d6bf
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x110 ]
cmp [ eax + 0x1d4 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x240 ]
mov [ ebp - 0x118 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x248 ]
imul edx [ ecx + 0xa0 ]
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x168 ]
lea edx [ edx + ecx - 0x1 ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x110 ]
mov [ eax + 0x23c ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x244 ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x240 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x110 ]
mov [ edx + 0x23c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x244 ]
cmp ecx [ ebp - 0x1c ]
jae r-xdata
mov eax [ ebp - 0x110 ]
cmp [ eax + 0x264 ] 0x0
je r-xdata
mov ecx [ ebp - 0x110 ]
add ecx 0x110
test ecx ecx
je r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x1d0 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x110 ]
xor edx edx
cmp [ ecx + 0x234 ] 0x0
sete dl
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x110 ]
add edx 0x180
push edx
lea ecx [ ebp - 0x30 ]
call sub_41d2d5
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x50 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x1
push 0xa0
lea ecx [ ebp - 0xf0 ]
push ecx
mov edx [ ebp - 0x110 ]
mov eax [ edx + 0x1d0 ]
push eax
mov ecx [ ebp - 0x110 ]
add ecx 0x180
push ecx
mov ecx [ ebp - 0x34 ]
call sub_45ee60
push eax
lea ecx [ ebp - 0x50 ]
call sub_4600f6
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x118 ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x110 ]
mov eax [ edx + 0x244 ]
add eax 0x1
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x120 ] ecx
mov edx [ ebp - 0x110 ]
mov eax [ edx + 0x244 ]
mov [ ebp - 0x120 ] eax
jmp r-xdata
push 0x0
call [ MessageBeep@IAT ]
push 0xffffffff
push 0x40
push 0x3ee
call sub_4840fb
jmp r-xdata
mov [ ebp - 0x124 ] 0x0
mov edx [ ebp - 0x110 ]
add edx 0x114
mov [ ebp - 0x124 ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x110 ]
xor edx edx
cmp [ ecx + 0x234 ] 0x0
sete dl
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_41d2d5
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x120 ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x240 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41b22c
mov eax [ ebp - 0x10c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x1
push 0x2
mov ecx [ ebp - 0x110 ]
call sub_450689
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x124 ]
and edx 0x2
test edx edx
je r-xdata
mov ecx [ ebp - 0x110 ]
mov edx [ ebp - 0x110 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xf8 ] ecx
mov [ ebp - 0xf4 ] edx
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x10 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x110 ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x10 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x110 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x110 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
call sub_45feb7
jmp r-xdata
mov edx [ ebp - 0x110 ]
mov [ edx + 0x124 ] 0x8
mov eax [ ebp - 0x110 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x110 ]
add ecx 0x134
call sub_45f350
push eax
mov ecx [ ebp - 0x110 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x18 ]
sub eax 0x1
mov ecx [ ebp - 0x110 ]
mov ecx [ ecx + 0x248 ]
cdq
idiv [ ecx + 0xa0 ]
mov edx [ ebp - 0x110 ]
mov ecx [ edx + 0x13c ]
add ecx eax
mov edx [ ebp - 0x110 ]
mov [ edx + 0x13c ] ecx
mov eax [ ebp - 0x18 ]
sub eax 0x1
mov ecx [ ebp - 0x110 ]
mov ecx [ ecx + 0x248 ]
cdq
idiv [ ecx + 0xa0 ]
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x138 ]
add ecx edx
mov edx [ ebp - 0x110 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x110 ]
mov eax [ edx + 0x138 ]
cmp eax [ ecx + 0xa0 ]
jl r-xdata
mov eax [ ebp - 0x110 ]
add eax 0x128
test eax eax
je r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x128 ] ecx
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x128 ] edx
jmp r-xdata
mov ecx [ ebp - 0x110 ]
call sub_45f2f0
push 0x0
push 0x0
push 0xffffffff
mov ecx [ ebp - 0x110 ]
call sub_457838
mov ecx [ ebp - 0x110 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x138 ]
sub ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x110 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x110 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0x110 ]
mov [ edx + 0x13c ] ecx
mov [ ebp - 0x12c ] 0x0
mov ecx [ ebp - 0x110 ]
add ecx 0x12c
mov [ ebp - 0x12c ] ecx
jmp r-xdata
mov edx [ ebp - 0x110 ]
mov eax [ ebp - 0x128 ]
mov [ edx + 0x114 ] eax
mov [ ebp - 0x130 ] 0x0
mov eax [ ebp - 0x110 ]
add eax 0x138
mov [ ebp - 0x130 ] eax
jmp r-xdata
mov edx [ ebp - 0x12c ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x100 ] eax
mov [ ebp - 0xfc ] ecx
mov edx [ ebp - 0x110 ]
add edx 0x134
test edx edx
je r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0x100 ]
push ecx
push 0xb
mov ecx [ ebp - 0x110 ]
call sub_457838
jmp r-xdata
mov ecx [ ebp - 0x110 ]
call sub_45f2f0
mov ecx [ ebp - 0x130 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x108 ] edx
mov [ ebp - 0x104 ] eax
push 0x0
lea ecx [ ebp - 0xf8 ]
push ecx
mov ecx [ ebp - 0x110 ]
call sub_45a8f4
mov edx [ ebp - 0x110 ]
cmp [ edx + 0x124 ] 0x3
jne r-xdata
mov ecx [ ebp - 0x110 ]
call sub_45c237
jmp r-xdata
sub_44bdfe
push ebp
mov ebp esp
push 0xffffffff
push sub_499bfd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x15c
mov [ ebp - 0x164 ] ecx
mov ecx [ ebp - 0x164 ]
call sub_45f240
test eax eax
jne r-xdata
mov eax [ ebp - 0x164 ]
mov [ eax + 0x1d0 ] 0x0
mov ecx [ ebp - 0x164 ]
mov [ ecx + 0x23c ] 0x0
push 0x0
mov edx [ ebp - 0x164 ]
mov eax [ edx + 0x124 ]
and eax 0x1
push eax
mov ecx [ ebp - 0x164 ]
mov edx [ ecx + 0x2b4 ]
push edx
mov eax [ ebp - 0x164 ]
mov ecx [ eax + 0x2b0 ]
push ecx
lea ecx [ ebp - 0x158 ]
call sub_42dfb0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x158 ]
call sub_47841e
cmp eax 0x1
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x164 ]
add edx 0x178
push edx
lea ecx [ ebp - 0x158 ]
call sub_42ecb1
mov eax [ ebp - 0x164 ]
cmp [ eax + 0x230 ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x158 ]
call sub_42ed30
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x164 ]
cmp [ edx + 0x230 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x164 ]
mov [ ecx + 0x23c ] 0x1
mov edx [ ebp - 0x164 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x164 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x164 ]
add edx [ eax + 0x12c ]
mov ecx [ ebp - 0x164 ]
mov [ ecx + 0x240 ] edx
mov edx [ ebp - 0x164 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x164 ]
mov edx [ ecx + 0x13c ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x164 ]
add edx [ eax + 0x138 ]
mov ecx [ ebp - 0x164 ]
mov [ ecx + 0x244 ] edx
jmp r-xdata
mov ecx [ ebp - 0x164 ]
mov [ ecx + 0x23c ] 0x0
mov eax [ ebp - 0x164 ]
mov [ eax + 0x23c ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x164 ]
call sub_44b654
test eax eax
jne r-xdata
mov ecx [ ebp - 0x164 ]
cmp [ ecx + 0x238 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x158 ]
call sub_42ed30
jmp r-xdata
mov edx [ ebp - 0x164 ]
mov [ edx + 0x240 ] 0x0
mov eax [ ebp - 0x164 ]
mov [ eax + 0x244 ] 0x0
push 0x0
call sub_402850
mov ecx eax
call sub_47bde8
push 0x64
call sub_405cd0
mov [ ebp - 0x160 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x160 ] 0x0
je r-xdata
mov ecx [ ebp - 0x164 ]
call sub_44c0d1
jmp r-xdata
mov [ ebp - 0x168 ] 0x0
mov edx [ ebp - 0x164 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_42de90
mov [ ebp - 0x168 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x158 ]
call sub_42ed30
mov eax [ ebp - 0x168 ]
mov [ ebp - 0x15c ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x164 ]
mov edx [ ebp - 0x15c ]
mov [ ecx + 0x2f0 ] edx
mov eax [ ebp - 0x164 ]
push eax
push 0xa3
mov ecx [ ebp - 0x164 ]
mov ecx [ ecx + 0x2f0 ]
mov edx [ ebp - 0x164 ]
mov eax [ edx + 0x2f0 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
push 0x5
mov eax [ ebp - 0x164 ]
mov ecx [ eax + 0x2f0 ]
call sub_47bda6
sub_44c0d1
push ebp
mov ebp esp
push 0xffffffff
push sub_499c37
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1cc
mov [ ebp - 0x1d4 ] ecx
mov ecx [ ebp - 0x1d4 ]
call sub_405c80
mov [ ebp - 0xd8 ] eax
mov ecx [ ebp - 0xd8 ]
call sub_45ee60
mov [ ebp - 0xe0 ] eax
mov eax [ ebp - 0x1d4 ]
cmp [ eax + 0x1d4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x1d4 ]
mov edx [ ecx + 0x1d0 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1d4 ]
add eax 0x180
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x1bc ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x0
push 0xa0
lea ecx [ ebp - 0xc4 ]
push ecx
mov edx [ ebp - 0x1d4 ]
mov eax [ edx + 0x1d0 ]
push eax
mov ecx [ ebp - 0x1d4 ]
add ecx 0x180
push ecx
mov edx [ ebp - 0xe0 ]
push edx
lea ecx [ ebp - 0x1bc ]
call sub_4600f6
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1bc ]
call sub_45feb7
jmp r-xdata
mov edx [ ebp - 0x1d4 ]
mov eax [ edx + 0x228 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1d4 ]
add ecx 0x1d8
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x1c0 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x1
push 0xa0
lea edx [ ebp - 0x1b8 ]
push edx
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x228 ]
push ecx
mov edx [ ebp - 0x1d4 ]
add edx 0x1d8
push edx
mov eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0x1c0 ]
call sub_4600f6
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c0 ]
call sub_45feb7
jmp r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ecx + 0x22c ] 0x0
je r-xdata
push 0xffffffff
push 0x40
push 0x3ee
call sub_4840fb
jmp r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x0
call sub_402850
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x1d4 ]
mov [ edx + 0x310 ] 0x1
mov [ ebp - 0x118 ] 0x0
push 0x0
push 0x4
push 0x0
push 0x0
push r--data
call sub_47cd8b
mov ecx [ ebp - 0x1d4 ]
mov [ ecx + 0x320 ] eax
mov edx [ ebp - 0x1d4 ]
add edx 0x310
push edx
mov eax [ ebp - 0x1d4 ]
add eax 0x31c
push eax
mov ecx [ ebp - 0x1d4 ]
call sub_40a1e0
push eax
mov ecx [ ebp - 0x1d4 ]
mov ecx [ ecx + 0x320 ]
call sub_42f162
mov edx [ ebp - 0x1d4 ]
mov ecx [ edx + 0x320 ]
call sub_45f3e0
mov ecx [ ebp - 0xd8 ]
call sub_404f90
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xd4 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x2
call sub_4036e0
mov [ ebp - 0xdc ] eax
mov ecx [ ebp - 0x1d4 ]
mov edx [ ecx + 0x240 ]
mov [ ebp - 0x104 ] edx
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x244 ]
mov [ ebp - 0xe4 ] ecx
cmp [ ebp - 0x118 ] 0x0
je r-xdata
mov eax [ ebp - 0xe4 ]
push eax
mov ecx [ ebp - 0x104 ]
push ecx
mov edx [ ebp - 0x1d4 ]
xor eax eax
cmp [ edx + 0x234 ] 0x0
sete al
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0xd4 ]
call sub_41d2d5
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ecx + 0x310 ] 0x0
je r-xdata
lea ecx [ ebp - 0x1d0 ]
call sub_428cd0
push 0x1
lea eax [ ebp - 0x1d0 ]
push eax
mov ecx [ ebp - 0x1d4 ]
call sub_45ca79
test eax eax
je r-xdata
push 0x0
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax - 0x1 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0xd8 ]
call sub_4353b5
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x114 ] ecx
mov [ ebp - 0x10c ] 0x1
mov edx [ ebp - 0x1d4 ]
cmp [ edx + 0x11c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x31c ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1d4 ]
mov [ edx + 0x310 ] 0x0
mov edx [ ebp - 0x1d4 ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp - 0x104 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x1d4 ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x104 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x1d4 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x1d4 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x1d4 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
push 0x1
lea ecx [ ebp - 0x1d0 ]
push ecx
mov ecx [ ebp - 0x1d4 ]
call sub_405470
lea ecx [ ebp - 0x114 ]
push ecx
push 0x9
mov ecx [ ebp - 0x1d4 ]
call sub_456855
mov [ ebp - 0x10c ] 0x0
lea edx [ ebp - 0x114 ]
push edx
push 0x9
mov eax [ ebp - 0x1d4 ]
push eax
mov ecx [ ebp - 0xd8 ]
call sub_481a51
mov ecx [ ebp - 0x1d4 ]
cmp [ ecx + 0x234 ] 0x0
je r-xdata
mov eax [ ebp - 0x114 ]
add eax 0x1
mov [ ebp - 0x114 ] eax
push 0x1
call sub_402850
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x1d4 ]
mov [ edx + 0x31c ] 0x0
mov ecx [ ebp - 0x1d4 ]
call sub_428c00
lea ecx [ ebp - 0x108 ]
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x118 ]
push eax
push 0x3f9
lea ecx [ ebp - 0x108 ]
push ecx
call sub_47584a
add esp 0xc
push 0x0
push 0x40
lea ecx [ ebp - 0x108 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x108 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xd4 ]
call sub_41b22c
push 0x0
mov edx [ ebp - 0x118 ]
push edx
push 0x40c
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x31c ]
push ecx
call [ SendMessageA@IAT ]
mov ecx [ ebp - 0x1d4 ]
call sub_45c237
mov ecx [ ebp - 0x1d4 ]
call sub_450ec5
mov ecx [ ebp - 0x1d4 ]
mov edx [ ebp - 0x1d4 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x104 ] eax
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov [ ebp - 0x104 ] edx
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x1d8 ] ecx
mov ecx [ ebp - 0x1d4 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x1d8 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xdc ]
mov edx [ eax ]
mov ecx [ ebp - 0xdc ]
call [ edx + 0x5c ]
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
push 0x0
mov edx [ ebp - 0x118 ]
push edx
push 0x40e
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + 0x31c ]
push ecx
call [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x100 ]
push edx
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1d4 ]
mov eax [ ebp - 0x1d8 ]
mov [ edx + 0x114 ] eax
mov edx [ ebp - 0x1d4 ]
cmp [ edx + 0x310 ] 0x0
je r-xdata
sub_44c6b0
push ebp
mov ebp esp
push 0xffffffff
push sub_499c4a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x74
mov [ ebp - 0x80 ] ecx
push 0x0
mov ecx [ ebp - 0x80 ]
call sub_44cbad
cmp eax 0x2
jge r-xdata
mov ecx [ ebp - 0x80 ]
call sub_405c80
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_409600
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x7c ]
call sub_47841e
cmp eax 0x1
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x7c ]
call sub_409846
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x7c ]
call sub_409835
push eax
mov ecx [ ebp - 0x80 ]
call sub_44c75e
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7c ]
call sub_402b00
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x7c ]
call sub_402b00
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_44c75e
push ebp
mov ebp esp
push 0xffffffff
push sub_499c68
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
mov [ ebp - 0x3c ] ecx
mov ecx [ ebp - 0x3c ]
call sub_405c80
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
call sub_405c80
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
call sub_404f70
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
call sub_404f70
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push 0x3ff
call sub_4840fb
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
push 0x14
call sub_405cd0
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push 0x400
call sub_4840fb
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x10 ]
jbe r-xdata
mov [ ebp - 0x40 ] 0x0
mov ecx [ ebp - 0x28 ]
call sub_4770bc
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x3c ]
mov ecx [ edx + 0x2fc ]
call sub_41b1b0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x24 ]
mov [ ecx + 0x2fc ] edx
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x2fc ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
push 0x0
mov ecx [ ebp - 0x3c ]
call sub_44c96c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x3c ]
call sub_47c0f5
push 0x2c0
call sub_405cd0
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x38 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push 0x401
call sub_4840fb
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x2fc ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x3c ]
push edx
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x2fc ]
push ecx
mov ecx [ ebp - 0x38 ]
call sub_409930
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov [ ebp - 0x44 ] 0x0
push 0x1
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
mov ecx [ ebp - 0x2c ]
call [ edx + 0x4 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x2f8 ] ecx
mov edx [ ebp - 0x3c ]
push edx
push 0xa7
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x2f8 ]
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0x2f8 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
push 0x5
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x2f8 ]
call sub_47bda6
mov ecx [ ebp - 0x3c ]
call sub_47c10a
mov eax [ ebp - 0x3c ]
mov [ eax + 0x2fc ] 0x0
jmp r-xdata
sub_44c96c
push ebp
mov ebp esp
push 0xffffffff
push sub_499c84
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
mov [ ebp - 0x74 ] ecx
mov ecx [ ebp + 0x10 ]
call sub_404f90
push eax
lea ecx [ ebp - 0x40 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x14 ]
call sub_404f90
push eax
lea ecx [ ebp - 0x24 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_41b237
test eax eax
je r-xdata
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_41b22c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_41b22c
mov eax [ ebp - 0x64 ]
jmp r-xdata
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x24 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x14
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x40 ]
call sub_41bbb8
test eax eax
je r-xdata
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_41b22c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_41b22c
mov eax [ ebp - 0x68 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x74 ]
call sub_47c0f5
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x28 ] ecx
call sub_4036e0
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x74 ]
call sub_47c10a
mov [ ebp - 0x70 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_41b22c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_41b22c
mov eax [ ebp - 0x70 ]
mov eax [ ebp - 0x30 ]
and eax 0xff
mov ecx [ ebp - 0x2c ]
and ecx 0xff
cmp eax ecx
jne r-xdata
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x6c ] eax
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
and eax 0xff
mov ecx [ ebp - 0x2c ]
and ecx 0xff
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x30 ]
and eax 0xff
mov ecx [ ebp - 0x2c ]
and ecx 0xff
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x28 ]
sub edx 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x18 ]
call sub_407e30
mov edx [ ebp - 0x28 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov edx [ eax ]
mov ecx [ ebp - 0x44 ]
call [ edx + 0x5c ]
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_41bbb8
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x24 ]
call sub_41bbb8
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x60 ]
push edx
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_41bbb8
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x24 ]
call sub_41bbb8
jmp r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
sub_44cbad
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0xc ] 0x0
call sub_4036e0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
call sub_4841fc
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_48420e
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x54 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x58 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x60 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x64 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_44ccc4
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jl r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x3
jl r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x14 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_45ca79
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_405ca0
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_405c80
mov ecx eax
call sub_436e16
push 0x1
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
sub_44cd68
push ebp
mov ebp esp
sub esp 0x4c
mov [ ebp - 0x3c ] ecx
lea ecx [ ebp - 0x20 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x3c ]
call sub_45ca79
test eax eax
je r-xdata
mov ecx [ ebp - 0x3c ]
call sub_405c80
mov ecx eax
call sub_45f460
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_4297f0
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0x1
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x3c ]
call sub_405470
mov ecx [ ebp - 0x3c ]
call sub_405ca0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_42952f
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x3c ]
add eax 0x110
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x40 ] 0x0
mov ecx [ ebp - 0x3c ]
add ecx 0x114
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x1
push 0x2
mov ecx [ ebp - 0x3c ]
call sub_450689
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x124 ]
and edx 0x2
test edx edx
je r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3c ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x3c ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp - 0x28 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x3c ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x28 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x3c ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x3c ]
call sub_45c237
mov eax [ ebp - 0x3c ]
add eax 0x128
test eax eax
je r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ ebp - 0x3c ]
add ecx 0x12c
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
mov [ edx + 0x114 ] eax
mov [ ebp - 0x4c ] 0x0
mov eax [ ebp - 0x3c ]
add eax 0x138
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x3c ]
add edx 0x134
test edx edx
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
push 0xb
mov ecx [ ebp - 0x3c ]
call sub_457838
mov ecx [ ebp - 0x3c ]
call sub_45f2f0
mov ecx [ ebp - 0x4c ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] eax
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x3c ]
call sub_45a8f4
mov edx [ ebp - 0x3c ]
cmp [ edx + 0x124 ] 0x3
jne r-xdata
sub_44cf53
push ebp
mov ebp esp
sub esp 0x4c
mov [ ebp - 0x3c ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x3c ]
call sub_45ca79
test eax eax
je r-xdata
mov ecx [ ebp - 0x3c ]
call sub_405c80
mov ecx eax
call sub_45f460
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_4297f0
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x3c ]
call sub_405470
mov ecx [ ebp - 0x3c ]
call sub_405ca0
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_429596
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x3c ]
add eax 0x110
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x40 ] 0x0
mov ecx [ ebp - 0x3c ]
add ecx 0x114
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x1
push 0x2
mov ecx [ ebp - 0x3c ]
call sub_450689
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x124 ]
and edx 0x2
test edx edx
je r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3c ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x3c ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x3c ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x3c ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x3c ]
call sub_45c237
mov eax [ ebp - 0x3c ]
add eax 0x128
test eax eax
je r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ ebp - 0x3c ]
add ecx 0x12c
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
mov [ edx + 0x114 ] eax
mov [ ebp - 0x4c ] 0x0
mov eax [ ebp - 0x3c ]
add eax 0x138
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x3c ]
add edx 0x134
test edx edx
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
push 0xb
mov ecx [ ebp - 0x3c ]
call sub_457838
mov ecx [ ebp - 0x3c ]
call sub_45f2f0
mov ecx [ ebp - 0x4c ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] eax
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x3c ]
call sub_45a8f4
mov edx [ ebp - 0x3c ]
cmp [ edx + 0x124 ] 0x3
jne r-xdata
sub_44d13e
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_45f460
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_4297f0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4296a6
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_481a51
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_44d18a
push ebp
mov ebp esp
push 0xffffffff
push sub_499c9a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x110
mov [ ebp - 0x118 ] ecx
mov ecx [ ebp - 0x118 ]
call sub_405c80
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_404f70
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x118 ]
call sub_405ca0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x118 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x118 ]
mov ecx [ eax + 0x248 ]
add ecx 0x34
push ecx
mov edx [ ebp - 0x118 ]
mov eax [ edx + 0x248 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x18 ]
call sub_45f460
push eax
lea ecx [ ebp - 0xf4 ]
call sub_429e70
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xf4 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x118 ]
cmp [ edx + 0x124 ] 0x3
jne r-xdata
lea ecx [ ebp - 0x108 ]
call sub_428cd0
push 0x0
lea ecx [ ebp - 0x108 ]
push ecx
mov ecx [ ebp - 0x118 ]
call sub_45ca79
lea ecx [ ebp - 0xf4 ]
call sub_45f480
mov [ ebp - 0xf8 ] eax
cmp [ ebp - 0xf8 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x18 ]
call sub_481a51
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xf4 ]
call sub_42a9c0
mov ecx [ ebp - 0x118 ]
call sub_45f2f0
lea ecx [ ebp - 0xf4 ]
call sub_45f4a0
mov [ ebp - 0x10c ] eax
mov edx [ ebp - 0x10c ]
cmp edx [ ebp - 0x10 ]
jb r-xdata
mov eax [ ebp - 0x118 ]
add eax 0x110
test eax eax
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xf4 ]
call sub_42a9c0
jmp r-xdata
mov [ ebp - 0x11c ] 0x0
mov ecx [ ebp - 0x118 ]
add ecx 0x114
mov [ ebp - 0x11c ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x118 ]
call sub_45c237
push 0x0
lea eax [ ebp - 0x114 ]
push eax
mov ecx [ ebp - 0x118 ]
call sub_45a8f4
mov ecx [ ebp - 0x118 ]
cmp [ ecx + 0x124 ] 0x3
jne r-xdata
mov edx [ ebp - 0x11c ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] ecx
mov edx [ ebp - 0x118 ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp - 0x10c ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x118 ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x118 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x10c ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x118 ]
mov [ eax + 0x114 ] edx
push 0x1
push 0x2
mov ecx [ ebp - 0x118 ]
call sub_450689
mov ecx [ ebp - 0x118 ]
mov edx [ ecx + 0x124 ]
and edx 0x2
test edx edx
je r-xdata
mov ecx [ ebp - 0x118 ]
call sub_45f2f0
sub_44d3fb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x8050
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_44d41e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x8051
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_44d441
push ebp
mov ebp esp
push 0xffffffff
push sub_499cad
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
lea ecx [ ebp - 0x18 ]
call sub_4052e0
mov [ ebp - 0x4 ] 0x0
push 0xb3
lea ecx [ ebp - 0x18 ]
call sub_4053d0
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4053a0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_428cd0
mov ecx [ ebp - 0x24 ]
add ecx 0x100
call sub_45f3d0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
call sub_4066d0
mov ecx eax
call sub_40b4e0
push 0x0
call sub_402850
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_479810
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_44d522
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
push 0xb
push 0x0
call sub_4036e0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
call [ edx + 0x98 ]
mov esp ebp
pop ebp
retn
sub_44d549
push ebp
mov ebp esp
push 0xffffffff
push sub_499cc0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
lea ecx [ ebp - 0x18 ]
call sub_4052e0
mov [ ebp - 0x4 ] 0x0
push 0xbf
lea ecx [ ebp - 0x18 ]
call sub_4053d0
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4053a0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_428cd0
mov ecx [ ebp - 0x24 ]
add ecx 0x100
call sub_45f3d0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
call sub_4066d0
mov ecx eax
call sub_40b4e0
push 0x0
call sub_402850
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_479810
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_405340
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_44d647
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_405ca0
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x304 ] eax
call sub_402850
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x304 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_45efe0
push eax
mov ecx [ ebp - 0x8 ]
call sub_45ee60
push eax
mov ecx [ ebp - 0xc ]
call sub_45f240
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4287c9
mov esp ebp
pop ebp
retn
sub_44d6a9
push ebp
mov ebp esp
push 0xffffffff
push sub_499cdf
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x114
mov [ ebp - 0x120 ] ecx
push 0x1
mov ecx [ ebp - 0x120 ]
call sub_44cbad
cmp eax 0x2
jge r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4770bc
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x120 ]
add eax 0x324
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x120 ]
call sub_45cf3d
push 0x0
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x110 ]
call sub_463740
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x110 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x110 ]
call sub_45f4c0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_4770ef
mov ecx [ ebp - 0x120 ]
add ecx 0x324
call sub_41b1b0
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x118 ]
cmp edx [ ebp - 0x11c ]
jge r-xdata
mov ecx [ ebp - 0x120 ]
add ecx 0x324
call sub_407e10
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x120 ]
add ecx 0x324
push ecx
mov ecx [ ebp - 0x120 ]
call sub_45cf3d
mov ecx [ ebp - 0x120 ]
add ecx 0x324
call sub_41b1b0
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x118 ]
push eax
mov ecx [ ebp - 0x120 ]
add ecx 0x324
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x114 ]
cmp edx [ ebp - 0x120 ]
jne r-xdata
mov eax [ ebp - 0x118 ]
cmp eax [ ebp - 0x11c ]
jge r-xdata
push 0x0
mov ecx [ ebp - 0x114 ]
call sub_45cdda
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x118 ]
push ecx
mov ecx [ ebp - 0x120 ]
add ecx 0x324
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x114 ] edx
mov eax [ ebp - 0x114 ]
cmp eax [ ebp - 0x120 ]
jne r-xdata
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
mov ecx [ ebp - 0x120 ]
add ecx 0x324
push ecx
mov ecx [ ebp - 0x114 ]
call sub_45cdda
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x118 ]
add edx 0x1
mov [ ebp - 0x118 ] edx
sub_44d8a8
push ebp
mov ebp esp
push 0xffffffff
push sub_499cf5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc0
mov [ ebp - 0xcc ] ecx
mov ecx [ ebp - 0xcc ]
call sub_405c80
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_404f70
mov [ ebp - 0x10 ] eax
push 0x0
mov ecx [ ebp - 0xcc ]
call sub_405ca0
push eax
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0xc4 ]
call sub_418140
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xc4 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc4 ]
call sub_418710
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xc4 ]
call sub_45f530
mov [ ebp - 0xc8 ] eax
push 0x0
push 0x2
mov ecx [ ebp - 0xc8 ]
push ecx
mov ecx [ ebp - 0xcc ]
call sub_44d960
sub_44d960
push ebp
mov ebp esp
sub esp 0x40
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
call sub_405c80
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
call sub_404f70
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jbe r-xdata
lea ecx [ ebp - 0x20 ]
call sub_428cd0
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_45ca79
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x110
test eax eax
je r-xdata
push 0x1
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x34 ]
call sub_405470
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x38 ] 0x0
mov ecx [ ebp - 0x34 ]
add ecx 0x114
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
call sub_45c237
call sub_428be0
cmp eax [ ebp - 0x34 ]
je r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x34 ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x34 ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x34 ]
mov [ eax + 0x114 ] edx
push 0x1
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_450689
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x124 ]
and eax 0x2
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x34 ]
call sub_47be0f
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x34 ]
add edx 0x12c
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov eax 0x1
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x304 ] ecx
mov [ ebp - 0x40 ] 0x0
mov ecx [ ebp - 0x34 ]
add ecx 0x138
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x34 ]
add eax 0x134
test eax eax
je r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
push 0xb
mov ecx [ ebp - 0x34 ]
call sub_457838
mov ecx [ ebp - 0x34 ]
call sub_45f2f0
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] ecx
push 0x0
lea edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x34 ]
call sub_45a8f4
mov eax [ ebp - 0x34 ]
cmp [ eax + 0x124 ] 0x3
jne r-xdata
sub_44db0b
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_405c80
mov ecx eax
call sub_45f2b0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_43640b
mov [ ebp - 0x4 ] eax
push 0x0
push 0x2
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_44d960
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_44db5b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_436ce5
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x0
call [ MessageBeep@IAT ]
sub_44dbbd
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_45f130
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call sub_450ec5
sub_44dbf5
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_428cd0
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
xor eax eax
cmp [ edx + 0x11c ] 0x0
sete al
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x11c ] eax
push 0x1
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_450689
mov esp ebp
pop ebp
retn
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_405470
sub_44dc4e
push ebp
mov ebp esp
sub esp 0x38
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x18 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x118 ] 0x0
jne r-xdata
push 0x1
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_405470
mov ecx [ ebp - 0x2c ]
add ecx 0x110
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x114 ] 0x0
jne r-xdata
mov [ ebp - 0x30 ] 0x0
mov edx [ ebp - 0x2c ]
add edx 0x114
mov [ ebp - 0x30 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x114 ]
sub eax 0x1
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x114 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x114 ] eax
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x118 ]
sub eax 0x1
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x118 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x114 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
call sub_45c237
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0x124 ] 0x2
jne r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x2c ]
call sub_450689
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x124 ]
and eax 0x2
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + 0x124 ] 0x3
mov eax [ ebp - 0x2c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x2c ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x134
call sub_45f350
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x12c
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x134
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x8 ]
call sub_45f310
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x2c ]
call sub_457838
mov ecx [ ebp - 0x2c ]
call sub_45f2f0
mov [ ebp - 0x38 ] 0x0
mov edx [ ebp - 0x2c ]
add edx 0x138
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + 0x124 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
sub_44dec9
push ebp
mov ebp esp
push 0xffffffff
push sub_499d1a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x80
mov [ ebp - 0x7c ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x7c ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x7c ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x7c ]
cmp [ ecx + 0x118 ] eax
jne r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x7c ]
call sub_405470
mov edx [ ebp - 0x7c ]
add edx 0x110
test edx edx
je r-xdata
mov edx [ ebp - 0x7c ]
mov eax [ ebp - 0x7c ]
mov ecx [ edx + 0x114 ]
cmp ecx [ eax + 0x168 ]
jne r-xdata
mov [ ebp - 0x80 ] 0x0
mov eax [ ebp - 0x7c ]
add eax 0x114
mov [ ebp - 0x80 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ecx [ eax + 0x114 ]
add ecx 0x1
mov edx [ ebp - 0x7c ]
mov [ edx + 0x114 ] ecx
mov edx [ ebp - 0x7c ]
mov [ edx + 0x114 ] 0x0
mov eax [ ebp - 0x7c ]
mov ecx [ eax + 0x118 ]
add ecx 0x1
mov edx [ ebp - 0x7c ]
mov [ edx + 0x118 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x80 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x7c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x7c ]
cmp [ ecx + 0x114 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x7c ]
call sub_45c237
mov edx [ ebp - 0x7c ]
cmp [ edx + 0x124 ] 0x2
jne r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x7c ]
call sub_450689
mov eax [ ebp - 0x7c ]
mov ecx [ eax + 0x124 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov edx [ ebp - 0x7c ]
add edx 0x110
test edx edx
je r-xdata
mov eax [ ebp - 0x7c ]
mov [ eax + 0x124 ] 0x3
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
lea ecx [ ebp - 0x38 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x38 ]
push edx
mov ecx [ ebp - 0x7c ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_41df4e
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x50 ]
push edx
mov eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_41dece
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx [ ebp - 0x7c ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4c ]
call sub_41df4e
jmp r-xdata
mov [ ebp - 0x84 ] 0x0
mov eax [ ebp - 0x7c ]
add eax 0x114
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov ecx [ ebp - 0x7c ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
mov edx [ ebp - 0x2c ]
sub edx 0x1
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x7c ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x28 ]
sub ecx 0x1
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x84 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x2
mov ecx [ ebp - 0x7c ]
call sub_457838
mov ecx [ ebp - 0x7c ]
call sub_45f2f0
mov [ ebp - 0x88 ] 0x0
mov ecx [ ebp - 0x7c ]
add ecx 0x12c
mov [ ebp - 0x88 ] ecx
jmp r-xdata
mov eax [ ebp - 0x7c ]
add eax 0x128
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x78 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x74 ] eax
mov ecx [ ebp - 0x74 ]
push ecx
mov edx [ ebp - 0x78 ]
push edx
lea ecx [ ebp - 0x70 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x7c ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
call sub_41df4e
mov ecx [ ebp - 0x7c ]
add ecx 0x134
test ecx ecx
je r-xdata
mov edx [ ebp - 0x88 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x58 ]
push edx
mov eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov [ ebp - 0x8c ] 0x0
mov edx [ ebp - 0x7c ]
add edx 0x138
mov [ ebp - 0x8c ] edx
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x7c ]
cmp [ eax + 0x12c ] edx
jne r-xdata
mov edx [ ebp - 0x7c ]
mov [ edx + 0x124 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x60 ] edx
mov eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x64 ]
push ecx
mov ecx [ ebp - 0x7c ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov edx [ ebp - 0x7c ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x7c ]
mov [ ecx + 0x12c ] eax
mov ecx [ ebp - 0x7c ]
mov [ ecx + 0x12c ] 0x0
mov edx [ ebp - 0x7c ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x7c ]
mov [ ecx + 0x130 ] eax
jmp r-xdata
jmp r-xdata
sub_44e282
push ebp
mov ebp esp
push 0xffffffff
push sub_499d2d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
mov [ ebp - 0x44 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x44 ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x118 ] 0x0
jne r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_405470
mov eax [ ebp - 0x44 ]
add eax 0x110
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ ebp - 0x44 ]
add ecx 0x114
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x44 ]
call sub_45c237
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x124 ] 0x2
jne r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x118 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x118 ] eax
push 0x1
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_450689
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x124 ]
and eax 0x2
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x44 ]
mov [ edx + 0x124 ] 0x3
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov [ ebp - 0x4c ] 0x0
mov eax [ ebp - 0x44 ]
add eax 0x12c
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x44 ]
mov eax [ ecx + 0x130 ]
cmp eax [ edx + 0x13c ]
jne r-xdata
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x40 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
cmp eax [ ecx + 0x13c ]
jne r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x128
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x3
mov ecx [ ebp - 0x44 ]
call sub_457838
mov ecx [ ebp - 0x44 ]
call sub_45f2f0
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x12c ] eax
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x44 ]
mov edx [ eax + 0x12c ]
cmp edx [ ecx + 0x138 ]
jg r-xdata
mov edx [ ebp - 0x44 ]
mov [ edx + 0x124 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x128
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
jmp r-xdata
jmp r-xdata
sub_44e641
push ebp
mov ebp esp
push 0xffffffff
push sub_499d40
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov [ ebp - 0x44 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x44 ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x118 ] eax
jne r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_405470
mov edx [ ebp - 0x44 ]
add edx 0x110
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x44 ]
add eax 0x114
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0x1
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_450689
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x124 ]
and edx 0x2
test edx edx
je r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x44 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x118 ]
add edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x118 ] edx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x44 ]
call sub_45c237
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x124 ] 0x2
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x4c ] ecx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x124 ] 0x3
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov ecx [ ebp - 0x44 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
mov [ edx + 0x114 ] eax
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x44 ]
add edx 0x12c
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x130 ]
cmp ecx [ eax + 0x13c ]
jne r-xdata
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
cmp eax [ ecx + 0x13c ]
jne r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x134
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x12c ] edx
jne r-xdata
push 0x0
push 0x0
push 0x4
mov ecx [ ebp - 0x44 ]
call sub_457838
mov ecx [ ebp - 0x44 ]
call sub_45f2f0
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x12c ] eax
jne r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x12c ] eax
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x12c ] 0x0
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x130 ] eax
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x44 ]
mov edx [ eax + 0x12c ]
cmp edx [ ecx + 0x138 ]
jg r-xdata
mov edx [ ebp - 0x44 ]
mov [ edx + 0x124 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x134
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x12c ] eax
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
sub_44eb35
push ebp
mov ebp esp
push 0xffffffff
push sub_499d53
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
mov [ ebp - 0x44 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x44 ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x114 ] 0x0
jne r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_405470
mov eax [ ebp - 0x44 ]
add eax 0x110
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ ebp - 0x44 ]
add ecx 0x114
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x44 ]
call sub_45c237
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x124 ] 0x2
jne r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x44 ]
mov [ edx + 0x114 ] 0x0
push 0x1
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_450689
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x124 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0x44 ]
mov [ eax + 0x124 ] 0x3
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x44 ]
mov edx [ eax + 0x130 ]
cmp edx [ ecx + 0x13c ]
jne r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x118 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x13c ] edx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov eax [ ebp - 0x44 ]
add eax 0x128
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x5
mov ecx [ ebp - 0x44 ]
call sub_457838
mov ecx [ ebp - 0x44 ]
call sub_45f2f0
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x44 ]
mov [ edx + 0x124 ] 0x2
jmp r-xdata
jmp r-xdata
sub_44ed9d
push ebp
mov ebp esp
push 0xffffffff
push sub_499d66
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov [ ebp - 0x4c ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x4c ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x4c ]
cmp [ ecx + 0x118 ] eax
jne r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x4c ]
call sub_405470
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x4c ]
cmp [ edx + 0x114 ] ecx
jne r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x4c ]
mov ecx [ edx + 0x114 ]
cmp ecx [ eax + 0x168 ]
je r-xdata
mov eax [ ebp - 0x4c ]
add eax 0x110
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x50 ] 0x0
mov ecx [ ebp - 0x4c ]
add ecx 0x114
mov [ ebp - 0x50 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x4c ]
mov [ edx + 0x114 ] ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x168 ]
mov [ edx + 0x114 ] ecx
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x4c ]
cmp [ ecx + 0x118 ] eax
jne r-xdata
mov ecx [ ebp - 0x4c ]
call sub_45c237
mov edx [ ebp - 0x4c ]
cmp [ edx + 0x124 ] 0x2
jne r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x4c ]
call sub_450689
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x124 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp - 0x4c ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0x4c ]
mov [ eax + 0x124 ] 0x3
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x4c ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov eax [ ebp - 0x4c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x4c ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x4c ]
mov [ eax + 0x138 ] edx
jmp r-xdata
mov ecx [ ebp - 0x4c ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x4c ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x4c ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x4c ]
mov ecx [ edx + 0x130 ]
cmp ecx [ eax + 0x13c ]
jne r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x6
mov ecx [ ebp - 0x4c ]
call sub_457838
mov ecx [ ebp - 0x4c ]
call sub_45f2f0
mov eax [ ebp - 0x4c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x4c ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x4c ]
add edx 0x134
push edx
mov ecx [ ebp - 0x4c ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x12c ]
add ecx 0x1
mov edx [ ebp - 0x4c ]
mov [ edx + 0x12c ] ecx
mov eax [ ebp - 0x4c ]
add eax 0x110
push eax
mov ecx [ ebp - 0x4c ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x4c ]
add ecx 0x134
test ecx ecx
je r-xdata
mov [ ebp - 0x54 ] 0x0
mov edx [ ebp - 0x4c ]
add edx 0x138
mov [ ebp - 0x54 ] edx
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x4c ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x4c ]
mov [ edx + 0x124 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x4c ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
sub_44f0cf
push ebp
mov ebp esp
push 0xffffffff
push sub_499d79
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov [ ebp - 0x44 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x44 ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x118 ] 0x0
jne r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_405470
mov eax [ ebp - 0x44 ]
add eax 0x110
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ ebp - 0x44 ]
add ecx 0x114
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4c ] 0x0
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x118 ]
sub edx 0x2
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x118 ]
sub eax 0x2
test eax eax
jle r-xdata
mov ecx [ ebp - 0x44 ]
call sub_45c237
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x124 ] 0x2
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x4c ]
mov [ eax + 0x118 ] ecx
push 0x1
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_450689
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x124 ]
and eax 0x2
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x44 ]
mov [ edx + 0x124 ] 0x3
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x44 ]
add eax 0x12c
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x130 ]
add edx 0x2
mov eax [ ebp - 0x44 ]
cmp edx [ eax + 0x13c ]
jle r-xdata
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x40 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x130 ]
add eax 0x2
mov ecx [ ebp - 0x44 ]
cmp eax [ ecx + 0x13c ]
jne r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x128
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x7
mov ecx [ ebp - 0x44 ]
call sub_457838
mov ecx [ ebp - 0x44 ]
call sub_45f2f0
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x12c ] eax
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x44 ]
mov edx [ eax + 0x12c ]
cmp edx [ ecx + 0x138 ]
jg r-xdata
mov edx [ ebp - 0x44 ]
mov [ edx + 0x124 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x128
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
jmp r-xdata
jmp r-xdata
sub_44f4b0
push ebp
mov ebp esp
push 0xffffffff
push sub_499d8c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov [ ebp - 0x44 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x44 ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x118 ] eax
jne r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_405470
mov edx [ ebp - 0x44 ]
add edx 0x110
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x44 ]
add eax 0x114
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov [ ebp - 0x4c ] edx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x118 ]
add eax 0x2
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x118 ]
add edx 0x2
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
cmp edx ecx
jge r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_450689
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x124 ]
and eax 0x2
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x114 ]
cmp ecx [ eax + 0x168 ]
jge r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x4c ]
mov [ eax + 0x118 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x118 ] eax
jne r-xdata
mov ecx [ ebp - 0x44 ]
call sub_45c237
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x124 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x168 ]
mov [ ebp - 0x50 ] edx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x114 ]
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x44 ]
mov [ edx + 0x124 ] 0x3
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x50 ]
mov [ eax + 0x114 ] ecx
mov [ ebp - 0x54 ] 0x0
mov eax [ ebp - 0x44 ]
add eax 0x12c
mov [ ebp - 0x54 ] eax
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x130 ]
add ecx 0x2
mov edx [ ebp - 0x44 ]
cmp ecx [ edx + 0x13c ]
jle r-xdata
mov ecx [ ebp - 0x54 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x40 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x130 ]
add ecx 0x2
mov edx [ ebp - 0x44 ]
cmp ecx [ edx + 0x13c ]
jne r-xdata
mov eax [ ebp - 0x44 ]
add eax 0x134
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x12c ] eax
jne r-xdata
push 0x0
push 0x0
push 0x8
mov ecx [ ebp - 0x44 ]
call sub_457838
mov ecx [ ebp - 0x44 ]
call sub_45f2f0
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x138 ]
add ecx 0x1
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x12c ] ecx
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x12c ]
add ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x12c ] ecx
mov edx [ ebp - 0x44 ]
mov [ edx + 0x12c ] 0x0
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x130 ]
add ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x130 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x44 ]
mov eax [ ecx + 0x12c ]
cmp eax [ edx + 0x138 ]
jg r-xdata
mov eax [ ebp - 0x44 ]
mov [ eax + 0x124 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x134
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x12c ]
add ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x12c ] ecx
mov eax [ ebp - 0x44 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
sub_44f9d7
push ebp
mov ebp esp
sub esp 0x38
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x18 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x110
test edx edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_405470
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x114
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x158 ]
mov eax [ ebp - 0x2c ]
mov [ eax + 0x118 ] edx
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x114 ] 0x0
mov edx [ ebp - 0x2c ]
mov [ edx + 0x118 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x158 ]
shl edx 0x1
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x118 ] edx
jge r-xdata
mov ecx [ ebp - 0x2c ]
call sub_45c237
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
add eax 0x128
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
push 0xffff
mov ecx [ ebp - 0x2c ]
call sub_45200e
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x124 ]
and edx 0x2
test edx edx
je r-xdata
mov [ ebp - 0x34 ] 0x0
mov ecx [ ebp - 0x2c ]
add ecx 0x12c
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x138
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x2c ]
add edx 0x134
test edx edx
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
push 0xb
mov ecx [ ebp - 0x2c ]
call sub_457838
mov ecx [ ebp - 0x2c ]
call sub_45f2f0
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] eax
push 0x0
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_45a8f4
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
sub_44fb4d
push ebp
mov ebp esp
sub esp 0x3c
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x18 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x110
test edx edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_405470
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x114
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x118 ]
mov ecx [ ebp - 0x2c ]
add eax [ ecx + 0x158 ]
mov edx [ ebp - 0x2c ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x168 ]
mov [ edx + 0x114 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x158 ]
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x118 ]
lea edx [ ecx + edx * 2 ]
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
cmp edx ecx
jle r-xdata
push 0x0
push 0x3
push 0x0
push 0xffff
mov ecx [ ebp - 0x2c ]
call sub_45200e
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x124 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jge r-xdata
mov ecx [ ebp - 0x2c ]
call sub_45c237
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x168 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x114 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x12c
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x34 ]
mov [ ecx + 0x114 ] edx
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x2c ]
add edx 0x138
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x134
test ecx ecx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
push 0xb
mov ecx [ ebp - 0x2c ]
call sub_457838
mov ecx [ ebp - 0x2c ]
call sub_45f2f0
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_45a8f4
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
sub_44fd31
push ebp
mov ebp esp
sub esp 0x38
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x18 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x110
test edx edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_405470
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x114
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x158 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x118 ]
sub edx eax
mov eax [ ebp - 0x2c ]
mov [ eax + 0x118 ] edx
mov eax [ ebp - 0x2c ]
mov [ eax + 0x114 ] 0x0
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x118 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov eax [ ecx + 0x158 ]
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x118 ] eax
jge r-xdata
mov ecx [ ebp - 0x2c ]
call sub_45c237
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
add eax 0x128
test eax eax
je r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x2c ]
call sub_450689
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x124 ]
and edx 0x2
test edx edx
je r-xdata
mov [ ebp - 0x34 ] 0x0
mov ecx [ ebp - 0x2c ]
add ecx 0x12c
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x138
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x2c ]
add edx 0x134
test edx edx
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
push 0xb
mov ecx [ ebp - 0x2c ]
call sub_457838
mov ecx [ ebp - 0x2c ]
call sub_45f2f0
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] eax
push 0x0
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_45a8f4
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x124 ]
and eax 0x1
test eax eax
je r-xdata
sub_44feaa
push ebp
mov ebp esp
sub esp 0x3c
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x18 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x110
test edx edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_405470
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x114
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ ecx + 0x158 ]
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x118 ]
add ecx eax
mov edx [ ebp - 0x2c ]
mov [ edx + 0x118 ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x2c ]
mov [ eax + 0x118 ] edx
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x168 ]
mov [ ecx + 0x114 ] eax
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov eax [ ecx + 0x158 ]
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x118 ]
add ecx eax
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp ecx eax
jle r-xdata
push 0x1
push 0x0
mov ecx [ ebp - 0x2c ]
call sub_450689
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x124 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jge r-xdata
mov ecx [ ebp - 0x2c ]
call sub_45c237
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x168 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x114 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov eax [ ebp - 0x2c ]
add eax 0x12c
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x34 ]
mov [ ecx + 0x114 ] edx
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x2c ]
add edx 0x138
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x134
test ecx ecx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
push 0xb
mov ecx [ ebp - 0x2c ]
call sub_457838
mov ecx [ ebp - 0x2c ]
call sub_45f2f0
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x2c ]
call sub_45a8f4
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
sub_450092
push ebp
mov ebp esp
push 0xffffffff
push sub_499d9f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
mov [ ebp - 0x44 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x44 ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x110
test edx edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_405470
mov [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x44 ]
add eax 0x114
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov ecx [ ebp - 0x44 ]
call sub_45c237
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x124 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x114 ] 0x0
mov edx [ ebp - 0x44 ]
mov [ edx + 0x118 ] 0x0
push 0x1
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_450689
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x124 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x3c ]
push edx
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0x44 ]
mov [ eax + 0x124 ] 0x3
mov ecx [ ebp - 0x44 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov ecx [ ebp - 0x44 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x128
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x44 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov ecx [ ebp - 0x44 ]
call sub_45f2f0
push 0x0
push 0x0
push 0x9
mov ecx [ ebp - 0x44 ]
call sub_457838
jmp r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
sub_450304
push ebp
mov ebp esp
push 0xffffffff
push sub_499db2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
mov [ ebp - 0x44 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x44 ]
call sub_45ca79
test eax eax
je r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x110
test edx edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x44 ]
call sub_405470
mov [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x44 ]
add eax 0x114
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov ecx [ ebp - 0x44 ]
call sub_45c237
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x124 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x168 ]
mov [ ecx + 0x114 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x118 ] edx
push 0x1
push 0x0
mov ecx [ ebp - 0x44 ]
call sub_450689
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x124 ]
and edx 0x2
test edx edx
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x12c
call sub_45f310
test eax eax
je r-xdata
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x124 ] 0x3
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov ecx [ ebp - 0x44 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x44 ]
cmp [ edx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x134
push edx
mov ecx [ ebp - 0x44 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
cmp [ eax + 0x12c ] edx
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x138 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x138 ] edx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x13c ]
sub edx 0x1
mov eax [ ebp - 0x44 ]
mov [ eax + 0x13c ] edx
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x12c ] eax
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x12c ] 0x0
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x130 ] eax
jmp r-xdata
mov ecx [ ebp - 0x44 ]
call sub_45f2f0
push 0x0
push 0x0
push 0xa
mov ecx [ ebp - 0x44 ]
call sub_457838
jmp r-xdata
sub_4505bc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x0
push 0xffff
mov ecx [ ebp - 0x4 ]
call sub_45200e
mov esp ebp
pop ebp
retn
sub_4505da
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x1
push 0x0
push 0xffff
mov ecx [ ebp - 0x4 ]
call sub_45200e
mov esp ebp
pop ebp
retn
sub_4505f8
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
call sub_45f240
test eax eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_428cd0
push 0x1
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_45ca79
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_4357e0
push 0x1
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
mov esp ebp
pop ebp
retn
sub_45064e
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_45f240
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_435b69
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_450689
push ebp
mov ebp esp
sub esp 0x58
push esi
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x8 ] 0xffff
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x11c ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x11c ] 0x0
je r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x114 ]
imul edx edx 0x3
mov eax [ ebp - 0x30 ]
cmp edx [ eax + 0x160 ]
jge r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x114 ]
lea edx [ edx + ecx + 0x2 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x20 ]
cmp ecx [ eax + 0x160 ]
jge r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x114 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x160 ]
sub eax 0xb
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x114 ]
lea edx [ edx + ecx + 0xd ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x160 ]
jge r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0xe8 ]
mov edx [ ebp - 0x30 ]
add ecx [ edx + 0xa8 ]
mov eax [ ebp - 0x30 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov [ ebp - 0x8 ] 0x4
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x114 ]
imul edx edx 0x3
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x30 ]
mov edx [ eax + 0xf8 ]
cmp edx [ ecx + 0xb8 ]
jge r-xdata
mov [ ebp - 0x8 ] 0x4
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x30 ]
mov eax [ eax + 0xb8 ]
sub eax [ ecx + 0xd0 ]
mov ecx [ ebp - 0x30 ]
cdq
idiv [ ecx + 0xa8 ]
sub eax 0xb
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
sub ecx 0x1
cmp [ ebp - 0x1c ] ecx
jge r-xdata
mov [ ebp - 0x8 ] 0x4
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x114 ]
imul edx edx 0x3
add edx 0xb
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x30 ]
mov edx [ eax + 0xf8 ]
cmp edx [ ecx + 0xb8 ]
jge r-xdata
mov [ ebp - 0x8 ] 0x4
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x50 ] edx
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0xe8 ]
mov eax [ ebp - 0x30 ]
add edx [ eax + 0xa8 ]
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0xffff
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
mov ecx [ edx + 0x118 ]
cmp ecx [ eax + 0x15c ]
jge r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xb8 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0xf8 ]
mov [ ebp - 0x44 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
sub edx 0x1
mov [ ebp - 0x40 ] edx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xb8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0xf8 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xe8 ]
mov ecx [ ebp - 0x30 ]
add eax [ ecx + 0xa8 ]
mov edx [ ebp - 0x30 ]
cmp eax [ edx + 0xb8 ]
jge r-xdata
mov [ ebp - 0x54 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x50 ]
sub ecx [ eax + 0xe0 ]
mov esi [ ebp - 0x30 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x15c ]
mov ecx [ ebp - 0x30 ]
add eax [ ecx + 0x158 ]
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x118 ] eax
jl r-xdata
mov [ ebp - 0x10 ] 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
mov ecx [ edx + 0xf8 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x44 ]
sub eax [ ecx + 0xe0 ]
mov ecx [ ebp - 0x30 ]
cdq
idiv [ ecx + 0xa8 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x1c ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x114 ] eax
jl r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
sub eax 0x1
cmp [ ebp - 0x1c ] eax
je r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x30 ]
mov eax [ ecx + 0xf8 ]
cmp eax [ edx + 0xb8 ]
jge r-xdata
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jge r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0xb8 ]
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0xe8 ]
mov edx [ ebp - 0x30 ]
add ecx [ edx + 0xa8 ]
mov [ ebp - 0x58 ] ecx
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
cmp [ ebp - 0x28 ] edx
je r-xdata
cmp [ ebp - 0x10 ] 0xffff
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x118 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x4c ] edx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0xf8 ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x160 ]
mov edx [ ebp - 0x24 ]
lea eax [ ecx + edx - 0x1 ]
cmp [ ebp - 0x20 ] eax
jle r-xdata
mov [ ebp - 0x8 ] 0x4
mov eax [ ebp - 0x30 ]
mov esi [ eax + 0x114 ]
imul esi esi 0x3
add esi 0x2
mov ecx [ ebp - 0x30 ]
add ecx 0xb0
call sub_405cf0
mov ecx [ ebp - 0x30 ]
cdq
idiv [ ecx + 0xa8 ]
sub esi eax
add esi 0xc
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0xb8 ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0xf8 ]
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x38 ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x160 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x1 ]
cmp [ ebp - 0x14 ] edx
jle r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x248 ]
mov ecx [ ecx + 0xa0 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x160 ]
cdq
idiv ecx
mov eax edx
add eax [ ebp - 0x28 ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x114 ] eax
jl r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x58 ]
sub eax [ edx + 0xe0 ]
mov ecx [ ebp - 0x30 ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0x54 ] eax
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_45200e
jmp r-xdata
cmp [ ebp - 0x8 ] 0xffff
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x15c ]
mov edx [ ebp - 0x30 ]
add ecx [ edx + 0x158 ]
mov eax [ ebp - 0x30 ]
cmp [ eax + 0x118 ] ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov [ ebp - 0x8 ] 0x4
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x114 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x4c ]
sub ecx [ eax + 0xe0 ]
mov esi [ ebp - 0x30 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x8 ] 0x4
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x30 ]
cmp [ ecx + 0x114 ] eax
jne r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x8 ] 0x4
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x114 ]
imul ecx ecx 0x3
add ecx 0x2
sub ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x30 ]
call sub_450ec5
mov [ ebp - 0x2c ] 0x1
mov ecx [ ebp - 0x30 ]
add ecx 0xe0
call sub_404fe0
mov ecx [ ebp - 0x30 ]
cdq
idiv [ ecx + 0xac ]
test edx edx
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x158 ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x30 ]
mov eax [ ecx + 0x158 ]
add eax 0x1
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x30 ]
mov ecx [ edx + 0x118 ]
sub ecx eax
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x158 ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp + 0x8 ] 0x3
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ ecx + 0x158 ]
add eax 0x1
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x30 ]
mov ecx [ edx + 0x118 ]
sub ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x118 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_450d2c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_481ed4
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
call sub_45c237
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_45cb47
push 0x0
push 0x0
push 0x41b
mov ecx [ ebp - 0x4 ]
call sub_405d50
sub_450d76
push ebp
mov ebp esp
push 0xffffffff
push sub_499dd1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc8
mov [ ebp - 0xcc ] ecx
mov ecx [ ebp - 0xcc ]
call sub_405c80
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
call sub_436450
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x10 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x14 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
push 0x0
push ecx
mov ecx esp
mov [ ebp - 0xc4 ] esp
lea eax [ ebp - 0x14 ]
push eax
call sub_47c3e9
mov [ ebp - 0xd0 ] eax
lea ecx [ ebp - 0xbc ]
call sub_42d950
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xbc ]
call sub_47841e
cmp [ ebp - 0x24 ] 0x1
jne r-xdata
cmp [ ebp - 0x24 ] 0x2
jne r-xdata
mov ecx [ ebp - 0xcc ]
call sub_446c7a
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xbc ]
call sub_42ddd0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x10 ]
call sub_436e49
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4027a0
add eax 0x1
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xc8 ] eax
mov ecx [ ebp - 0xc8 ]
mov [ ebp - 0xc0 ] ecx
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov edx [ ebp - 0xc0 ]
push edx
call [ lstrcpyA@IAT ]
mov eax [ ebp - 0xcc ]
push eax
mov ecx [ ebp - 0xc0 ]
push ecx
push 0x41e
call sub_402850
mov ecx eax
call sub_405d50
sub_450ec5
push ebp
mov ebp esp
sub esp 0x94
push esi
mov [ ebp - 0x64 ] ecx
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
mov edx [ eax + 0x118 ]
cmp edx [ ecx + 0x15c ]
jl r-xdata
mov ecx [ ebp - 0x64 ]
call sub_45f2f0
push 0x0
mov ecx [ ebp - 0x64 ]
add ecx 0x64
call sub_45f080
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x15c ]
mov edx [ ebp - 0x64 ]
add ecx [ edx + 0x158 ]
mov eax [ ebp - 0x64 ]
cmp [ eax + 0x118 ] ecx
jle r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
call sub_428cd0
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x1c ] 0x1
mov ecx [ ebp - 0x64 ]
cmp [ ecx + 0x11c ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x64 ]
mov eax [ ecx + 0xe8 ]
cmp eax [ edx + 0xb8 ]
jge r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x114 ]
imul eax ecx
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xe0 ]
add edx eax
mov eax [ ebp - 0x64 ]
mov [ eax + 0x100 ] edx
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0x114 ]
lea eax [ eax + edx + 0x2 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x64 ]
mov eax [ ecx + 0xf8 ]
cmp eax [ edx + 0xb8 ]
jge r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x64 ]
mov eax [ ecx + 0x114 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xf0 ]
add edx eax
mov eax [ ebp - 0x64 ]
mov [ eax + 0x100 ] edx
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0xb8 ]
mov [ ebp - 0x80 ] ecx
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xe8 ]
mov [ ebp - 0x80 ] edx
jmp r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
add ecx 0x1
mov edx [ ebp - 0x64 ]
imul ecx [ edx + 0xac ]
mov eax [ ebp - 0x64 ]
mov edx [ eax + 0xe4 ]
add edx ecx
mov eax [ ebp - 0x64 ]
mov [ eax + 0x10c ] edx
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0xb8 ]
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xf8 ]
mov [ ebp - 0x68 ] edx
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x64 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
add eax 0x1
mov ecx [ ebp - 0x64 ]
imul eax [ ecx + 0xac ]
mov edx [ ebp - 0x64 ]
mov ecx [ edx + 0xf4 ]
add ecx eax
mov edx [ ebp - 0x64 ]
mov [ edx + 0x10c ] ecx
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0xe8 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x80 ]
sub eax [ edx + 0xe0 ]
mov ecx [ ebp - 0x64 ]
cdq
idiv [ ecx + 0xa8 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x114 ]
lea ecx [ ecx + eax + 0x2 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0xf8 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
mov edx [ eax + 0x114 ]
imul edx [ ecx + 0xa8 ]
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0xf0 ]
add ecx edx
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0xf8 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xd8 ]
mov ecx [ ebp - 0x64 ]
add eax [ ecx + 0xa8 ]
mov edx [ ebp - 0x68 ]
sub edx eax
mov ecx [ ebp - 0x64 ]
mov eax edx
cdq
idiv [ ecx + 0xa8 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0xe8 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xa8 ]
imul eax eax 0x3
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0x114 ]
imul edx eax
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0xe0 ]
add ecx edx
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x88 ] edx
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xe8 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
mov edx [ ebp - 0x84 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x114 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
cmp ecx [ edx + 0x160 ]
jl r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x8c ] edx
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xf8 ]
mov [ ebp - 0x8c ] eax
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x18 ]
add ecx [ eax + 0xa8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
add ecx 0x1
mov edx [ ebp - 0x64 ]
imul ecx [ edx + 0xac ]
mov eax [ ebp - 0x64 ]
mov edx [ eax + 0xf4 ]
add edx ecx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
sub eax 0x2
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x70 ] edx
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xf8 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0x160 ]
jl r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x74 ] edx
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xe8 ]
mov [ ebp - 0x74 ] eax
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xa8 ]
mov eax [ ebp - 0x18 ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
add ecx 0x1
mov edx [ ebp - 0x64 ]
imul ecx [ edx + 0xac ]
mov eax [ ebp - 0x64 ]
mov edx [ eax + 0xe4 ]
add edx ecx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
sub eax 0x2
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x64 ]
call sub_45f2f0
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x114 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x248 ]
mov esi [ eax + 0xa0 ]
imul esi esi 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x160 ]
cdq
idiv esi
add edx [ ebp - 0x2c ]
cmp ecx edx
jl r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x88 ]
sub ecx [ eax + 0xe0 ]
mov esi [ ebp - 0x64 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
mov [ ebp - 0x84 ] eax
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0xf8 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0xd8 ]
mov edx [ ebp - 0x64 ]
add ecx [ edx + 0xa8 ]
mov eax [ ebp - 0x8c ]
sub eax ecx
mov ecx [ ebp - 0x64 ]
cdq
idiv [ ecx + 0xa8 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x100 ]
mov ecx [ ebp - 0x64 ]
add eax [ ecx + 0xa8 ]
mov edx [ ebp - 0x64 ]
mov [ edx + 0x108 ] eax
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x100 ]
add eax 0x2
mov ecx [ ebp - 0x64 ]
mov [ ecx + 0x108 ] eax
jmp r-xdata
mov ecx [ ebp - 0x64 ]
call sub_45f2f0
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x160 ]
add eax [ ebp - 0x20 ]
cmp [ ebp - 0x24 ] eax
jle r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0xd8 ]
mov edx [ ebp - 0x64 ]
add ecx [ edx + 0xa8 ]
mov eax [ ebp - 0x70 ]
sub eax ecx
mov ecx [ ebp - 0x64 ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0x6c ] eax
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
mov ecx [ edx + 0xe8 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov [ ebp - 0x78 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x74 ]
sub ecx [ eax + 0xe0 ]
mov esi [ ebp - 0x64 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x64 ]
mov eax [ ecx + 0x10c ]
sub eax [ edx + 0xac ]
mov ecx [ ebp - 0x64 ]
mov [ ecx + 0x104 ] eax
mov ecx [ ebp - 0x64 ]
call sub_405c80
mov ecx eax
call sub_45f170
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x114 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x248 ]
mov esi [ eax + 0xa0 ]
imul esi esi 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x160 ]
cdq
idiv esi
sub ecx edx
mov eax [ ebp - 0x64 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov ecx [ ebp - 0x64 ]
mov [ ecx + 0x100 ] eax
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x94 ] edx
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xf8 ]
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov edx [ ebp - 0x90 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x34 ]
cmp ecx [ eax + 0x160 ]
jl r-xdata
call sub_428be0
xor ecx ecx
cmp eax [ ebp - 0x64 ]
sete cl
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xa8 ]
push edx
mov ecx [ ebp - 0x64 ]
add ecx 0x100
call sub_406140
mov eax [ ebp - 0x64 ]
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x64 ]
mov eax [ ecx + 0x114 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xf0 ]
add edx eax
mov eax [ ebp - 0x64 ]
mov [ eax + 0x100 ] edx
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x7c ] edx
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xe8 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x114 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
cmp ecx [ edx + 0x160 ]
jl r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40b490
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x160 ]
add eax [ ebp - 0x30 ]
cmp [ ebp - 0x34 ] eax
jle r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0xd8 ]
mov edx [ ebp - 0x64 ]
add ecx [ edx + 0xa8 ]
mov eax [ ebp - 0x94 ]
sub eax ecx
mov ecx [ ebp - 0x64 ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
add ecx 0x100
call sub_404fe0
push eax
mov ecx [ ebp - 0x64 ]
add ecx 0x100
call sub_405cf0
push eax
mov ecx [ ebp - 0x64 ]
call sub_45f5c0
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x100 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0x104 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x3c ]
push ecx
call sub_45f5f0
mov edx [ ebp - 0x8 ]
and edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40b490
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x114 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x248 ]
mov esi [ eax + 0xa0 ]
imul esi esi 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x160 ]
cdq
idiv esi
add edx [ ebp - 0x28 ]
cmp ecx edx
jl r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x7c ]
sub ecx [ eax + 0xe0 ]
mov esi [ ebp - 0x64 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x64 ]
mov eax [ ecx + 0x114 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0xf0 ]
add edx eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x64 ]
add ecx 0x64
call sub_45f590
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x64 ]
add ecx 0x64
call sub_45f080
mov ecx [ ebp - 0x64 ]
call sub_45f610
mov ecx [ ebp - 0x64 ]
call sub_40a1e0
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
push eax
call ImmGetContext
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x60 ] 0x2
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x58 ] edx
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x44 ]
push ecx
call ImmSetCompositionWindow
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp - 0x40 ]
push eax
call ImmReleaseContext
mov eax [ ebp - 0x64 ]
mov ecx [ eax + 0x114 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x248 ]
mov esi [ eax + 0xa0 ]
imul esi esi 0x3
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x160 ]
cdq
idiv esi
sub ecx edx
mov eax [ ebp - 0x64 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov [ ebp - 0x18 ] eax
sub_4517a2
push ebp
mov ebp esp
sub esp 0x20
push esi
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x8 ]
call sub_428cd0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x110
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x114
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x15c ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40b490
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x15c ]
mov eax [ ebp - 0x10 ]
add edx [ eax + 0x158 ]
cmp [ ebp - 0x4 ] edx
jle r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0xe8 ]
cmp edx [ ecx + 0xb8 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
imul edx ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xe0 ]
add ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xb8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xe8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sub eax [ edx + 0x15c ]
add eax 0x1
mov ecx [ ebp - 0x10 ]
imul eax [ ecx + 0xac ]
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0xe4 ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x10c ]
sub edx [ ecx + 0xac ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xa8 ]
imul edx edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax 0x1
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + 0xe8 ]
cmp ecx [ eax + 0xb8 ]
jge r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
sub eax [ ecx + 0xe0 ]
mov ecx [ ebp - 0x10 ]
cdq
idiv [ ecx + 0xa8 ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xb8 ]
mov [ ebp - 0x20 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xe8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
imul eax eax 0x3
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x160 ]
sub edx 0x1
cmp eax edx
jl r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40b490
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x248 ]
mov esi [ eax + 0xa0 ]
imul esi esi 0x3
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x160 ]
cdq
idiv esi
add edx [ ebp - 0xc ]
cmp ecx edx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ eax + 0xe0 ]
mov esi [ ebp - 0x10 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x248 ]
mov esi [ eax + 0xa0 ]
imul esi esi 0x3
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x160 ]
cdq
idiv esi
sub ecx edx
mov eax [ ebp - 0x10 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub_451a21
push ebp
mov ebp esp
sub esp 0x40
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax + 0x164 ]
sub edx [ ecx + 0x158 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x7
ja r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2c ]
jmp [ ecx * 4 + jump_table_451bd9 ]
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x15c ]
neg eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x25c ]
neg ecx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x25c ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x158 ]
neg edx
cmp edx 0xffffffff
jle r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x158 ] 0x1
jge r-xdata
mov [ ebp - 0x20 ] 0x1c
push 0x17
lea ecx [ ebp - 0x20 ]
push ecx
push 0x1
mov ecx [ ebp - 0x28 ]
call sub_47a6ca
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
sub edx [ ecx + 0x15c ]
cmp [ ebp - 0x4 ] edx
jge r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x158 ]
neg ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x30 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
sub edx [ ecx + 0x15c ]
cmp [ ebp - 0x4 ] edx
jge r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x15c ]
neg eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x15c ]
neg ecx
cmp ecx [ ebp - 0x38 ]
jle r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x28 ]
call sub_47af5c
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x28 ]
call sub_451bf9
mov ecx [ ebp - 0x28 ]
call sub_45cd12
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
sub_451bf9
push ebp
mov ebp esp
push 0xffffffff
push sub_499de4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
call sub_45f2f0
mov eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x34 ]
call sub_45b11e
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x15c ]
add eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x15c ] eax
mov edx [ ebp - 0x34 ]
add edx 0xb0
mov eax [ edx ]
mov [ ebp - 0x1c ] eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov eax [ edx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ edx + 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0xcc ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0x8 ]
imul ecx [ eax + 0xac ]
imul ecx ecx 0xffffffff
push ecx
push 0x0
mov ecx [ ebp - 0x34 ]
call sub_47a75e
mov ecx [ ebp - 0x34 ]
call sub_405430
mov ecx [ ebp - 0x34 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x34 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x34 ]
call sub_444be1
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x34 ]
call sub_45b11e
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_4804d8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
call sub_428be0
cmp eax [ ebp - 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
call sub_450ec5
sub_451d1d
push ebp
mov ebp esp
push 0xffffffff
push sub_499df7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp - 0x5c ]
add ecx 0xb0
call sub_405cf0
mov ecx [ ebp - 0x5c ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x5c ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
lea edx [ ecx * 4 + 0xf ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x60 ] ecx
cmp [ ebp - 0x60 ] 0x7
ja r-xdata
jmp r-xdata
mov edx [ ebp - 0x60 ]
jmp [ edx * 4 + jump_table_451fee ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x5c ]
mov ecx [ eax + 0x160 ]
neg ecx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0x34 ]
sub eax [ edx + 0x160 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0x14 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x10 ]
neg ecx
cmp ecx 0xffffffff
jle r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
mov [ ebp - 0x30 ] 0x1c
push 0x17
lea eax [ ebp - 0x30 ]
push eax
push 0x0
mov ecx [ ebp - 0x5c ]
call sub_47a6ca
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x18 ]
sub edx [ ecx + 0x160 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov ecx [ ebp - 0x5c ]
call sub_45f2f0
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x34 ]
sub ecx [ eax + 0x160 ]
cmp [ ebp - 0x14 ] ecx
jge r-xdata
mov edx [ ebp - 0x10 ]
neg edx
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x64 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x68 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x34 ]
sub ecx [ eax + 0x160 ]
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x6c ] edx
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x34 ]
sub ecx [ eax + 0x160 ]
cmp [ ebp - 0x14 ] ecx
jge r-xdata
mov ecx [ ebp - 0x5c ]
mov edx [ ecx + 0x160 ]
neg edx
mov [ ebp - 0x70 ] edx
jmp r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ edx + 0x160 ]
neg eax
cmp eax [ ebp - 0x6c ]
jle r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x34 ]
sub ecx [ eax + 0x160 ]
mov [ ebp - 0x74 ] ecx
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x74 ] edx
jmp r-xdata
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x58 ]
push edx
mov ecx [ ebp - 0x5c ]
call sub_45b11e
mov eax [ ebp - 0x5c ]
mov ecx [ eax + 0x160 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x5c ]
mov [ edx + 0x160 ] ecx
push 0x0
mov ecx [ ebp - 0x5c ]
call sub_444c9c
mov eax [ ebp - 0x5c ]
add eax 0xb0
mov ecx [ eax ]
mov [ ebp - 0x44 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x40 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x3c ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x5c ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
jne r-xdata
mov edx [ ebp - 0x74 ]
mov [ ebp - 0x70 ] edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x5c ]
call sub_47af5c
mov ecx [ ebp - 0x5c ]
call sub_450ec5
lea ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
push 0x0
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x14 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0xffffffff
push ecx
mov ecx [ ebp - 0x5c ]
call sub_47a75e
mov ecx [ ebp - 0x5c ]
call sub_405430
mov ecx [ ebp - 0x5c ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x5c ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x5c ]
call sub_444be1
lea edx [ ebp - 0x58 ]
push edx
mov ecx [ ebp - 0x5c ]
call sub_45b11e
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x58 ]
call sub_4804d8
mov edx [ ebp - 0x5c ]
mov eax [ edx + 0xe0 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x5c ]
call sub_43e672
sub_45200e
push ebp
mov ebp esp
push 0xffffffff
push sub_499e0a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x48 ]
add ecx 0xb0
call sub_405cf0
mov ecx [ ebp - 0x48 ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
lea edx [ ecx * 4 + 0xf ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4c ] ecx
cmp [ ebp - 0x4c ] 0x7
ja r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4c ]
jmp [ edx * 4 + jump_table_452504 ]
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x58 ]
jmp [ eax * 4 + jump_table_452524 ]
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x160 ]
neg ecx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x1c ]
sub eax [ edx + 0x160 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0x14 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x18 ]
neg ecx
cmp ecx 0xffffffff
jle r-xdata
cmp [ ebp - 0x18 ] 0x1
jge r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0x160 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x1c ]
sub edx [ ecx + 0x160 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x15c ]
neg edx
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x10 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov [ ebp - 0x20 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x158 ]
neg eax
cmp eax 0xffffffff
jle r-xdata
mov ecx [ ebp - 0x48 ]
cmp [ ecx + 0x158 ] 0x1
jge r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ ebp + 0x14 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0x164 ]
sub ecx [ eax + 0x158 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x58 ] edx
cmp [ ebp - 0x58 ] 0x7
ja r-xdata
mov edx [ ebp - 0x18 ]
neg edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x50 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x54 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x1c ]
sub edx [ ecx + 0x160 ]
cmp [ ebp - 0x14 ] edx
jge r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x160 ]
neg eax
mov [ ebp - 0x68 ] eax
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x160 ]
neg ecx
cmp ecx [ ebp - 0x64 ]
jle r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x1c ]
sub edx [ ecx + 0x160 ]
cmp [ ebp - 0x14 ] edx
jge r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x158 ]
neg edx
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x5c ] 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x60 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x1c ]
sub edx [ ecx + 0x160 ]
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x10 ]
sub eax [ edx + 0x15c ]
cmp [ ebp - 0x20 ] eax
jge r-xdata
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x10 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x70 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x70 ] ecx
jmp r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x68 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x10 ]
sub eax [ edx + 0x15c ]
cmp [ ebp - 0x20 ] eax
jge r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x15c ]
neg ecx
mov [ ebp - 0x74 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x15c ]
neg edx
cmp edx [ ebp - 0x70 ]
jle r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x10 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x78 ] ecx
jmp r-xdata
mov edx [ ebp - 0x74 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x48 ]
call sub_45f2f0
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx [ ebp - 0x48 ]
call sub_45b11e
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x160 ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x160 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x15c ]
add eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x15c ] eax
push 0x0
mov ecx [ ebp - 0x48 ]
call sub_444c9c
mov edx [ ebp - 0x20 ]
push edx
call sub_46836b
add esp 0x4
mov ecx [ ebp - 0x48 ]
cmp eax [ ecx + 0x158 ]
jle r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x74 ] ecx
mov edx [ ebp - 0x48 ]
add edx 0xb0
mov eax [ edx ]
mov [ ebp - 0x44 ] eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ecx
mov eax [ edx + 0x8 ]
mov [ ebp - 0x3c ] eax
mov ecx [ edx + 0xc ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0xcc ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
jne r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0xe0 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x48 ]
call sub_43e672
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push 0x1
mov ecx [ ebp - 0x48 ]
add ecx 0xb0
push ecx
mov ecx [ ebp - 0x48 ]
call sub_405470
jmp r-xdata
mov ecx [ ebp - 0x48 ]
call sub_43e672
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x48 ]
call sub_450ec5
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x20 ]
imul eax [ edx + 0xac ]
imul eax eax 0xffffffff
push eax
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x14 ]
imul edx [ ecx + 0xa8 ]
imul edx edx 0xffffffff
push edx
mov ecx [ ebp - 0x48 ]
call sub_47a75e
mov ecx [ ebp - 0x48 ]
call sub_405430
push 0x0
mov edx [ ebp - 0x48 ]
add edx 0xc0
push edx
mov ecx [ ebp - 0x48 ]
call sub_405470
mov edx [ ebp - 0x20 ]
push edx
call sub_46836b
add esp 0x4
mov ecx [ ebp - 0x48 ]
cmp eax [ ecx + 0x158 ]
jle r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x48 ]
call sub_444be1
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x48 ]
call sub_45b11e
mov ecx [ ebp - 0x48 ]
call sub_45cd12
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call sub_4804d8
mov ecx [ ebp - 0x48 ]
add ecx 0xd0
push ecx
mov edx [ ebp - 0x48 ]
add edx 0xd0
push edx
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x20 ]
imul ecx [ eax + 0xac ]
imul ecx ecx 0xffffffff
push ecx
push 0x0
mov ecx [ ebp - 0x48 ]
call sub_47a75e
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0xd0 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
sub_452544
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_405c80
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x24c
push eax
mov ecx [ ebp - 0x4 ]
call sub_45f630
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x278 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x64
call sub_45f050
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_405450
mov esp ebp
pop ebp
retn
sub_45258c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x15c ]
imul eax [ ecx + 0xa0 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
call sub_405ca0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
call sub_405c80
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
call sub_45f030
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x248 ] eax
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x10 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x248 ]
mov eax [ ebp - 0x8 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x15c ] eax
mov eax [ ebp - 0x10 ]
mov [ eax + 0x160 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_45f0b0
mov ecx [ ebp - 0x10 ]
call sub_43e4a3
mov ecx [ ebp - 0xc ]
call sub_45ee60
push eax
mov ecx [ ebp - 0x10 ]
call sub_45b235
mov ecx [ ebp - 0x10 ]
call sub_45ef10
mov ecx [ ebp - 0x10 ]
call sub_45ef90
mov ecx [ ebp - 0x10 ]
call sub_43e5b8
mov ecx [ ebp - 0x10 ]
call sub_43e45a
push 0x1
mov ecx [ ebp - 0x10 ]
call sub_444c9c
mov ecx [ ebp - 0x10 ]
call sub_43e672
mov ecx [ ebp - 0x10 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x10 ]
call sub_444be1
push 0x1
mov ecx [ ebp - 0x10 ]
call sub_405450
mov esp ebp
pop ebp
retn
sub_4526d2
push ebp
mov ebp esp
push 0xffffffff
push sub_499e1d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
call sub_4036e0
mov [ ebp - 0x14 ] eax
push 0x7f00
mov ecx [ ebp - 0x14 ]
call sub_42de70
push eax
push 0x5
call [ GetStockObject@IAT ]
push eax
push 0x7f00
mov ecx [ ebp - 0x14 ]
call sub_405520
push eax
push 0x0
call sub_4799e0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c7b1
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
call sub_479360
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x1c
sub_45278a
push ebp
mov ebp esp
push 0xffffffff
push sub_499e39
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x78
push esi
mov [ ebp - 0x78 ] ecx
mov eax [ ebp - 0x78 ]
cmp [ eax + 0x120 ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_428cd0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x44 ]
push ecx
mov ecx [ ebp - 0x78 ]
add ecx 0xe0
call sub_405000
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x78 ]
call sub_405500
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x60 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x5c ]
push edx
mov eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x78 ]
add ecx 0xf0
call sub_405000
test eax eax
je r-xdata
push 0x1
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x78 ]
call sub_45ca79
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x78 ]
call sub_45c237
push 0x1
mov ecx [ ebp - 0x78 ]
call sub_45cb47
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x78 ]
call sub_405500
push 0x1
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x78 ]
call sub_45ca79
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_428cd0
mov ecx [ ebp - 0x78 ]
mov eax [ ebp + 0x10 ]
sub eax [ ecx + 0xe4 ]
mov ecx [ ebp - 0x78 ]
cdq
idiv [ ecx + 0xac ]
mov edx [ ebp - 0x78 ]
add eax [ edx + 0x15c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
je r-xdata
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x78 ]
call sub_405470
mov eax [ ebp - 0x78 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0xf0 ]
mov esi [ ebp - 0x78 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
mov edx [ ebp - 0x78 ]
mov ecx [ edx + 0x248 ]
cmp eax [ ecx + 0xa0 ]
jge r-xdata
push 0x1
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x78 ]
call sub_405470
mov [ ebp - 0x30 ] 0x0
mov edx [ ebp - 0x78 ]
mov eax [ edx + 0x160 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov edx [ ebp - 0x78 ]
mov eax [ ebp + 0xc ]
sub eax [ edx + 0xe0 ]
mov ecx [ ebp - 0x78 ]
cdq
idiv [ ecx + 0xa8 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x78 ]
mov [ eax + 0x170 ] 0x0
mov ecx [ ebp - 0x78 ]
call sub_4054c0
mov ecx [ ebp - 0x78 ]
call sub_47be0f
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_428cd0
mov edx [ ebp - 0x78 ]
mov eax [ ebp + 0x10 ]
sub eax [ edx + 0xf4 ]
mov ecx [ ebp - 0x78 ]
cdq
idiv [ ecx + 0xac ]
mov edx [ ebp - 0x78 ]
add eax [ edx + 0x15c ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x78 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0xf0 ]
mov esi [ ebp - 0x78 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x38 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0xe0 ]
add edx [ ebp - 0x30 ]
mov eax [ ebp + 0xc ]
sub eax edx
mov ecx [ ebp - 0x78 ]
cdq
idiv [ ecx + 0xa8 ]
cdq
mov ecx 0x3
idiv ecx
test eax eax
jge r-xdata
mov edx 0x3
sub edx [ ebp - 0x2c ]
mov eax [ ebp - 0x78 ]
imul edx [ eax + 0xa8 ]
mov [ ebp - 0x30 ] edx
cmp [ ebp - 0x24 ] 0x0
jl r-xdata
mov edx [ ebp - 0x78 ]
cmp [ edx + 0x170 ] 0x0
je r-xdata
mov ecx [ ebp - 0x34 ]
call sub_40a1e0
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x174 ] eax
jmp r-xdata
mov edx [ ebp - 0x78 ]
mov eax [ ebp - 0x38 ]
cmp eax [ edx + 0x164 ]
jge r-xdata
mov edx [ ebp - 0x78 ]
mov eax [ edx + 0xe0 ]
add eax [ ebp - 0x30 ]
mov ecx [ ebp + 0xc ]
sub ecx eax
mov esi [ ebp - 0x78 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x7c ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x78 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0x164 ]
jge r-xdata
mov eax [ ebp - 0x78 ]
mov [ eax + 0x120 ] 0x1
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x124 ] 0x0
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x174 ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x3c ] 0x0
jl r-xdata
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0xe0 ]
add ecx [ ebp - 0x30 ]
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov edx [ ebp - 0x7c ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x160 ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x28 ]
add edx eax
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x2c ] 0x0
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x174 ] 0x0
mov edx [ ebp - 0x78 ]
mov [ edx + 0x120 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x78 ]
mov eax [ edx + 0x174 ]
push eax
call [ SetFocus@IAT ]
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x3c ]
cmp eax [ edx + 0xa0 ]
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x78 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x28 ]
cmp ecx [ eax + 0xa0 ]
jl r-xdata
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
cmp [ ebp - 0x38 ] edx
jne r-xdata
mov edx [ ebp - 0x78 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp [ ebp - 0x24 ] eax
jne r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x74 ] eax
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_41dece
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x6c ]
push ecx
mov ecx [ ebp - 0x78 ]
add ecx 0x110
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6c ]
call sub_41df4e
mov edx [ ebp - 0x78 ]
mov [ edx + 0x11c ] 0x1
mov ecx [ ebp - 0x78 ]
call sub_450ec5
mov eax [ ebp - 0x78 ]
mov ecx [ ebp - 0x3c ]
cmp ecx [ eax + 0x168 ]
jge r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x50 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x50 ]
push edx
mov ecx [ ebp - 0x78 ]
add ecx 0x110
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x50 ]
call sub_41df4e
mov eax [ ebp - 0x78 ]
mov [ eax + 0x11c ] 0x0
mov ecx [ ebp - 0x78 ]
call sub_450ec5
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x170 ] 0x0
mov ecx [ ebp - 0x78 ]
call sub_4054c0
mov ecx [ ebp - 0x78 ]
call sub_47be0f
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov ecx [ ebp - 0x78 ]
mov edx [ ebp - 0x28 ]
cmp edx [ ecx + 0x168 ]
jge r-xdata
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x84 ] edx
jmp r-xdata
mov eax [ ebp - 0x78 ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
call sub_40a1e0
mov edx [ ebp - 0x78 ]
mov [ edx + 0x174 ] eax
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x168 ]
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov edx [ ebp - 0x84 ]
mov [ ebp - 0x3c ] edx
mov ecx [ ebp - 0x78 ]
mov [ ecx + 0x120 ] 0x1
mov edx [ ebp - 0x78 ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov edx [ ecx + 0x174 ]
push edx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x78 ]
mov [ edx + 0x174 ] 0x0
mov eax [ ebp - 0x78 ]
mov [ eax + 0x120 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x174 ]
push ecx
call [ SetFocus@IAT ]
sub_452d17
push ebp
mov ebp esp
push 0xffffffff
push sub_499e64
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xec
push esi
mov [ ebp - 0xb4 ] ecx
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x120 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0xb4 ]
cmp [ ecx + 0x120 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xb4 ]
call sub_405500
jmp r-xdata
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x120 ] 0x3
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_41de80
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x11c ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0xb4 ]
mov eax [ ebp + 0x10 ]
sub eax [ edx + 0x148 ]
push eax
call sub_46836b
add esp 0x4
mov ecx [ ebp - 0xb4 ]
cdq
idiv [ ecx + 0xac ]
sub eax 0x1
mov [ ebp - 0x78 ] eax
mov edx 0xa
sub edx [ ebp - 0x78 ]
test edx edx
jge r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x10
test eax eax
je r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ ebp + 0x10 ]
cmp eax [ edx + 0xe4 ]
jge r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xf4 ]
jge r-xdata
mov eax 0xa
sub eax [ ebp - 0x78 ]
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0xf8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
mov [ ecx + 0x120 ] 0x2
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xec ]
jle r-xdata
mov ecx [ ebp - 0xb4 ]
cmp [ ecx + 0x15c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp + 0x10 ]
cmp edx [ ecx + 0xfc ]
jle r-xdata
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x15c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp - 0xf8 ]
mov [ ecx + 0x340 ] edx
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x2dc ] 0xffff
je r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x158 ]
sub eax 0x1
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x164 ]
sub edx eax
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x15c ] edx
jne r-xdata
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x2dc ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
cmp [ ecx + 0x2dc ] 0xffff
je r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x158 ]
sub ecx 0x1
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x164 ]
sub eax ecx
mov ecx [ ebp - 0xb4 ]
cmp [ ecx + 0x15c ] eax
jne r-xdata
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x2dc ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
mov eax [ ebp + 0x10 ]
sub eax [ ecx + 0xe4 ]
mov ecx [ ebp - 0xb4 ]
cdq
idiv [ ecx + 0xac ]
mov edx [ ebp - 0xb4 ]
add eax [ edx + 0x15c ]
mov [ ebp - 0x14 ] eax
push 0xffff
mov ecx [ ebp - 0xb4 ]
call sub_453edf
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x2dc ] 0x1
jne r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp - 0xb4 ]
mov edx [ eax + 0x118 ]
cmp edx [ ecx + 0x15c ]
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ ebp + 0x10 ]
sub eax [ edx + 0xf4 ]
mov ecx [ ebp - 0xb4 ]
cdq
idiv [ ecx + 0xac ]
mov edx [ ebp - 0xb4 ]
add eax [ edx + 0x15c ]
mov [ ebp - 0x14 ] eax
push 0xffff
mov ecx [ ebp - 0xb4 ]
call sub_453edf
mov ecx [ ebp - 0xb4 ]
cmp [ ecx + 0x2dc ] 0x1
jne r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp - 0xb4 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x15c ]
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x15c ]
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x158 ]
lea edx [ edx + ecx - 0x1 ]
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x118 ] edx
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xb4 ]
add edx 0x110
push edx
lea ecx [ ebp - 0x1c ]
call sub_45f350
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0xe0 ]
jl r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp - 0xb4 ]
mov edx [ eax + 0xf8 ]
sub edx [ ecx + 0xa8 ]
cmp [ ebp + 0xc ] edx
jle r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x15c ]
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x158 ]
lea eax [ eax + edx - 0x1 ]
mov ecx [ ebp - 0xb4 ]
cmp [ ecx + 0x118 ] eax
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xb4 ]
add eax 0x110
push eax
lea ecx [ ebp - 0x1c ]
call sub_45f350
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x15c ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0xf0 ]
jge r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
jne r-xdata
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x160 ] 0xb
jl r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0xe8 ]
jle r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0xb0 ]
jge r-xdata
mov eax [ ebp - 0xb4 ]
add eax 0x110
push eax
lea ecx [ ebp - 0x1c ]
call sub_45f350
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x15c ]
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x158 ]
lea edx [ edx + ecx - 0x1 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
push 0x0
mov ecx [ ebp - 0xb4 ]
call sub_453edf
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x2d8 ] 0xffff
je r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0xd
mov ecx [ ebp - 0xb4 ]
cmp [ ecx + 0x160 ] eax
jl r-xdata
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
push ecx
lea ecx [ ebp - 0x1c ]
call sub_45f350
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x15c ]
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x158 ]
lea eax [ eax + edx - 0x1 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push 0x0
mov ecx [ ebp - 0xb4 ]
call sub_453edf
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x2d8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x160 ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb4 ]
cmp [ eax + 0x2d8 ] 0xffff
je r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
push 0x1
mov ecx [ ebp - 0xb4 ]
call sub_453edf
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
cmp [ ebp - 0x14 ] edx
jge r-xdata
mov ecx [ ebp - 0xb4 ]
mov eax [ ebp + 0xc ]
sub eax [ ecx + 0xf0 ]
mov ecx [ ebp - 0xb4 ]
cdq
idiv [ ecx + 0xa8 ]
test eax eax
jge r-xdata
push 0xffff
mov ecx [ ebp - 0xb4 ]
call sub_453ec5
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0xb4 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x2d8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xb4 ]
cmp [ ecx + 0x160 ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
push 0x1
mov ecx [ ebp - 0xb4 ]
call sub_453edf
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jge r-xdata
push 0x0
mov ecx [ ebp - 0xb4 ]
call sub_453ec5
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
push 0xffff
mov ecx [ ebp - 0xb4 ]
call sub_453ec5
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0xb4 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ ebp + 0xc ]
sub eax [ edx + 0xf0 ]
mov ecx [ ebp - 0xb4 ]
cdq
idiv [ ecx + 0xa8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xbc ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x168 ]
mov [ ebp - 0xb8 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0xb8 ] ecx
jmp r-xdata
push 0x0
mov ecx [ ebp - 0xb4 ]
call sub_453ec5
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x64 ] 0x0
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x160 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x60 ] edx
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp - 0xb4 ]
mov edx [ eax + 0xe0 ]
sub edx [ ecx + 0xa8 ]
mov eax [ ebp + 0xc ]
sub eax edx
mov ecx [ ebp - 0xb4 ]
mov ecx [ ecx + 0xa8 ]
imul ecx ecx 0x3
cdq
idiv ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x168 ]
mov [ ebp - 0xd8 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0xd8 ] ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xb4 ]
call sub_405500
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41df4e
jmp r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov ecx [ ebp - 0xb8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xb4 ]
call sub_405500
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41df4e
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp - 0xb4 ]
mov eax [ ecx + 0xe0 ]
sub eax [ edx + 0xa8 ]
add eax [ ebp - 0x64 ]
mov ecx [ ebp + 0xc ]
sub ecx eax
mov edx [ ebp - 0xb4 ]
mov esi [ edx + 0xa8 ]
imul esi esi 0x3
mov eax ecx
cdq
idiv esi
test eax eax
jge r-xdata
mov edx 0x3
sub edx [ ebp - 0x60 ]
mov eax [ ebp - 0xb4 ]
imul edx [ eax + 0xa8 ]
mov [ ebp - 0x64 ] edx
jmp r-xdata
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xb4 ]
call sub_405500
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41df4e
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x164 ]
jge r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xb4 ]
call sub_405500
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41df4e
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x164 ]
jge r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ ebp - 0xb4 ]
mov edx [ eax + 0xe0 ]
sub edx [ ecx + 0xa8 ]
add edx [ ebp - 0x64 ]
mov eax [ ebp + 0xc ]
sub eax edx
mov ecx [ ebp - 0xb4 ]
mov ecx [ ecx + 0xa8 ]
imul ecx ecx 0x3
cdq
idiv ecx
mov [ ebp - 0xdc ] eax
mov [ ebp - 0xdc ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0xe0 ]
add ecx [ ebp - 0x64 ]
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov edx [ ebp - 0xdc ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0xb4 ]
mov eax [ eax + 0x160 ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x18 ]
add edx eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + 0xa0 ]
jl r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + 0xa0 ]
jl r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x168 ]
jge r-xdata
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x168 ]
jge r-xdata
mov [ ebp - 0xc4 ] 0x0
mov edx [ ebp - 0xb4 ]
add edx 0x114
mov [ ebp - 0xc4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x168 ]
mov [ ebp - 0xc0 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc0 ] eax
jmp r-xdata
mov [ ebp - 0xe4 ] 0x0
mov edx [ ebp - 0xb4 ]
add edx 0x114
mov [ ebp - 0xe4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x168 ]
mov [ ebp - 0xe0 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xe0 ] eax
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_428cd0
lea ecx [ ebp - 0x34 ]
call sub_428cd0
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x124 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xb4 ]
call sub_405500
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41df4e
jmp r-xdata
mov eax [ ebp - 0xc4 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x7c ] edx
mov eax [ ebp - 0x7c ]
push eax
mov ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x18 ]
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x50 ]
call sub_428cd0
lea ecx [ ebp - 0x5c ]
call sub_428cd0
mov edx [ ebp - 0xb4 ]
cmp [ edx + 0x124 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xb4 ]
call sub_405500
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41df4e
jmp r-xdata
mov eax [ ebp - 0xe4 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x98 ] edx
mov eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp - 0x9c ]
push ecx
lea ecx [ ebp - 0x18 ]
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xb4 ]
add eax 0x110
test eax eax
je r-xdata
mov eax [ ebp - 0xb4 ]
mov [ eax + 0x124 ] 0x1
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x118 ]
cmp edx [ ebp - 0x14 ]
jl r-xdata
mov eax [ ebp - 0xb4 ]
add eax 0x110
test eax eax
je r-xdata
mov eax [ ebp - 0xb4 ]
mov [ eax + 0x124 ] 0x1
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x118 ]
cmp edx [ ebp - 0x14 ]
jl r-xdata
mov [ ebp - 0xcc ] 0x0
mov ecx [ ebp - 0xb4 ]
add ecx 0x114
mov [ ebp - 0xcc ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0xb4 ]
add ecx 0x134
call sub_45f350
push eax
mov ecx [ ebp - 0xb4 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x118 ]
cmp ecx [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0xec ] 0x0
mov ecx [ ebp - 0xb4 ]
add ecx 0x114
mov [ ebp - 0xec ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0xb4 ]
add ecx 0x134
call sub_45f350
push eax
mov ecx [ ebp - 0xb4 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x118 ]
cmp ecx [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0xd0 ] 0x0
mov ecx [ ebp - 0xb4 ]
add ecx 0x12c
mov [ ebp - 0xd0 ] ecx
jmp r-xdata
mov edx [ ebp - 0xcc ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] ecx
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
call sub_45f350
mov eax [ ebp - 0xb4 ]
add eax 0x128
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
call sub_45f350
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb4 ]
add edx 0x110
test edx edx
je r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x114 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ ebp - 0xf0 ] 0x0
mov ecx [ ebp - 0xb4 ]
add ecx 0x12c
mov [ ebp - 0xf0 ] ecx
jmp r-xdata
mov edx [ ebp - 0xec ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] ecx
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
call sub_45f350
mov eax [ ebp - 0xb4 ]
add eax 0x128
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0xb4 ]
add ecx 0x110
call sub_45f350
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb4 ]
add edx 0x110
test edx edx
je r-xdata
mov edx [ ebp - 0xb4 ]
mov eax [ edx + 0x114 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ ebp - 0xd4 ] 0x0
mov eax [ ebp - 0xb4 ]
add eax 0x138
mov [ ebp - 0xd4 ] eax
jmp r-xdata
mov edx [ ebp - 0xd0 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0xb4 ]
add edx 0x134
test edx edx
je r-xdata
push 0x0
push 0x2
mov ecx [ ebp - 0xb4 ]
call sub_450689
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
mov [ ebp - 0xc8 ] 0x0
mov eax [ ebp - 0xb4 ]
add eax 0x114
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov [ ebp - 0xf4 ] 0x0
mov eax [ ebp - 0xb4 ]
add eax 0x138
mov [ ebp - 0xf4 ] eax
jmp r-xdata
mov edx [ ebp - 0xf0 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0xb4 ]
add edx 0x134
test edx edx
je r-xdata
push 0x0
push 0x2
mov ecx [ ebp - 0xb4 ]
call sub_450689
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
mov [ ebp - 0xe8 ] 0x0
mov eax [ ebp - 0xb4 ]
add eax 0x114
mov [ ebp - 0xe8 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
push 0xb
mov ecx [ ebp - 0xb4 ]
call sub_457838
mov ecx [ ebp - 0xb4 ]
call sub_45c237
jmp r-xdata
mov ecx [ ebp - 0xb4 ]
call sub_45f2f0
mov ecx [ ebp - 0xd4 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x2c ] ecx
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] edx
push 0x1
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0xb4 ]
call sub_45a8f4
mov edx [ ebp - 0x3c ]
sub edx 0x1
mov [ ebp - 0x3c ] edx
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x38 ]
sub ecx 0x1
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc8 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x54 ]
push ecx
push 0xb
mov ecx [ ebp - 0xb4 ]
call sub_457838
mov ecx [ ebp - 0xb4 ]
call sub_45c237
mov ecx [ ebp - 0xb4 ]
call sub_45f2f0
mov ecx [ ebp - 0xf4 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x58 ] eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] ecx
lea edx [ ebp - 0x5c ]
mov [ ebp - 0x48 ] edx
push 0x1
lea eax [ ebp - 0x74 ]
push eax
mov ecx [ ebp - 0xb4 ]
call sub_45a8f4
mov edx [ ebp - 0x6c ]
sub edx 0x1
mov [ ebp - 0x6c ] edx
mov ecx [ ebp - 0xb4 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov [ ebp - 0x6c ] eax
mov ecx [ ebp - 0x68 ]
sub ecx 0x1
mov [ ebp - 0x68 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xe8 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_41df4e
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x94 ] eax
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x90 ] ecx
mov edx [ ebp - 0x90 ]
push edx
mov eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x8c ]
call sub_41dece
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx [ ebp - 0xb4 ]
add ecx 0x134
call sub_45f350
push eax
mov ecx [ ebp - 0xb4 ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
call sub_41df4e
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0xb4 ]
call sub_405500
mov eax [ ebp - 0x6c ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0xac ]
push edx
mov eax [ ebp - 0xb0 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx [ ebp - 0xb4 ]
add ecx 0x134
call sub_45f350
push eax
mov ecx [ ebp - 0xb4 ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xa8 ]
call sub_41df4e
sub_453edf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2dc ] 0xffff
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2dc ] 0xffff
jne r-xdata
cmp [ ebp + 0x8 ] 0xffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x2dc ] edx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0xffff
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x2d8 ] 0xffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d8 ] 0xffff
jne r-xdata
push 0x1f4
mov ecx [ ebp - 0x4 ]
call sub_416ec0
jmp r-xdata
push 0x0
push 0x32
push 0x1f4
mov ecx [ ebp - 0x4 ]
call sub_416e90
sub_453f66
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x33c ]
add ecx 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + 0x33c ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2e0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x2d0 ]
add ecx 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + 0x2d0 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x2d0 ]
cmp edx [ ecx + 0x284 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x2e0 ] 0x1
cmp [ ebp + 0x8 ] 0x1f4
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_416ec0
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x2cc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2cc ] 0xffffffff
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x2d0 ] 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
add edx 0xa
push edx
mov ecx [ ebp - 0x8 ]
call sub_449f9b
cmp [ ebp + 0x8 ] 0x1f5
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_45406d
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2e0 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x33c ]
cmp ecx [ eax + 0x340 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
call sub_45501b
mov edx [ ebp - 0x8 ]
mov [ edx + 0x33c ] 0x0
sub_45406d
push ebp
mov ebp esp
push 0xffffffff
push sub_499e77
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x9c
push esi
mov [ ebp - 0x60 ] ecx
lea ecx [ ebp - 0x24 ]
call sub_428cd0
lea eax [ ebp - 0x24 ]
push eax
call [ GetCursorPos@IAT ]
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x60 ]
call sub_43cf70
lea ecx [ ebp - 0x30 ]
call sub_41de80
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0xffff
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x18 ] 0xffff
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x15c ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x2d8 ] 0xffff
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2dc ] 0xffff
jne r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x11c ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2dc ] 0xffff
je r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x11c ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0xe0 ]
jge r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0xf0 ]
jge r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x160 ]
jne r-xdata
lea ecx [ ebp - 0x4c ]
call sub_428cd0
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x27c ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x20 ]
cmp ecx [ eax + 0xe4 ]
jge r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x20 ]
cmp eax [ edx + 0xf4 ]
jge r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0xe8 ]
jle r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x60 ]
mov ecx [ edx + 0xf8 ]
sub ecx [ eax + 0xa8 ]
cmp [ ebp - 0x24 ] ecx
jle r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x1c ]
cmp edx [ ecx + 0x15c ]
jne r-xdata
mov edx [ ebp - 0x60 ]
mov [ edx + 0x2d8 ] 0xffff
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2dc ] 0xffff
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2dc ] 0x0
jne r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x11c ] 0x0
je r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x20 ]
cmp edx [ ecx + 0xec ]
jle r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x15c ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x20 ]
cmp ecx [ eax + 0xfc ]
jle r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x15c ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2d8 ] 0xffff
je r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x60 ]
mov ecx [ edx + 0xb8 ]
cmp ecx [ eax + 0xe8 ]
jle r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x248 ]
cmp [ eax + 0x9c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x160 ] 0xb
jl r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x2d8 ] 0xffff
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x60 ]
call sub_45200e
mov ecx [ ebp - 0x60 ]
call sub_45c237
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_45cb47
mov ecx [ ebp - 0x60 ]
call sub_45f2f0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
mov eax [ ebp - 0x60 ]
mov [ eax + 0x2dc ] 0xffff
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x2d8 ] 0xffff
jne r-xdata
mov [ ebp - 0x14 ] 0xffff
push 0x1f4
mov ecx [ ebp - 0x60 ]
call sub_416ec0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
jmp r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x2dc ] 0x1
jne r-xdata
mov ecx [ ebp - 0x60 ]
add ecx 0xf0
mov edx [ ecx ]
mov [ ebp - 0x4c ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x48 ] eax
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x44 ] edx
mov eax [ ecx + 0xc ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x48 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x40 ] edx
push 0x1
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x60 ]
call sub_405470
mov ecx [ ebp - 0x60 ]
mov eax [ ecx + 0xf4 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x60 ]
cdq
idiv [ ecx + 0xac ]
cdq
sub eax edx
sar eax 0x1
add eax 0x1
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x18 ] 0x4
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x118 ]
sub eax [ ebp - 0x3c ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x27c ] 0x0
jne r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x2dc ] 0xffff
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x158 ]
sub ecx 0x1
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x164 ]
sub eax ecx
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x15c ] eax
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2dc ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x2dc ] 0xffff
je r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x158 ]
sub eax 0x1
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x164 ]
sub edx eax
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x15c ] edx
jne r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x2dc ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
push 0xffff
mov ecx [ ebp - 0x60 ]
call sub_453ec5
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x2d8 ] 0x1
je r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp [ ebp - 0x28 ] eax
jne r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x2d8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x160 ] 0x0
jne r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x24 ]
sub eax [ edx + 0xf0 ]
mov esi [ ebp - 0x60 ]
cdq
idiv [ esi + 0xa8 ]
cmp ecx eax
jge r-xdata
push 0xffff
mov ecx [ ebp - 0x60 ]
call sub_453ec5
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2d8 ] 0x1
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
cmp [ ebp - 0x28 ] ecx
jne r-xdata
mov [ ebp - 0x18 ] 0xffff
push 0x1f4
mov ecx [ ebp - 0x60 ]
call sub_416ec0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41df4e
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x60 ]
add eax 0xf0
mov ecx [ eax ]
mov [ ebp - 0x4c ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x48 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x44 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x158 ]
sub ecx 0x1
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0xac ]
imul eax ecx
mov ecx [ ebp - 0x48 ]
add ecx eax
mov [ ebp - 0x48 ] ecx
push 0x1
lea edx [ ebp - 0x4c ]
push edx
mov ecx [ ebp - 0x60 ]
call sub_405470
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ eax + 0xec ]
mov esi [ ebp - 0x60 ]
mov eax ecx
cdq
idiv [ esi + 0xac ]
cdq
sub eax edx
sar eax 0x1
add eax 0x1
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x18 ] 0x4
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x118 ]
add edx [ ebp - 0x3c ]
cmp eax edx
jge r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x118 ]
sub edx [ ebp - 0x3c ]
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x74 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2dc ] 0x0
jne r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x11c ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ eax + 0xe4 ]
mov esi [ ebp - 0x60 ]
mov eax ecx
cdq
idiv [ esi + 0xac ]
mov edx [ ebp - 0x60 ]
add eax [ edx + 0x15c ]
mov [ ebp - 0x28 ] eax
push 0xffff
mov ecx [ ebp - 0x60 ]
call sub_453edf
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x2dc ] 0x1
je r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov [ ebp - 0x28 ] eax
jmp r-xdata
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_453edf
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x20 ]
sub eax [ edx + 0xf4 ]
mov ecx [ ebp - 0x60 ]
cdq
idiv [ ecx + 0xac ]
mov edx [ ebp - 0x60 ]
add eax [ edx + 0x15c ]
mov [ ebp - 0x28 ] eax
push 0xffff
mov ecx [ ebp - 0x60 ]
call sub_453edf
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x2dc ] 0x1
je r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_453edf
mov [ ebp - 0x38 ] 0x0
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x160 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x34 ] edx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x60 ]
mov edx [ eax + 0xe0 ]
sub edx [ ecx + 0xa8 ]
mov eax [ ebp - 0x24 ]
sub eax edx
mov ecx [ ebp - 0x60 ]
mov ecx [ ecx + 0xa8 ]
imul ecx ecx 0x3
cdq
idiv ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x60 ]
call sub_453ec5
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x2c ]
cmp edx [ ecx + 0x168 ]
jge r-xdata
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_453ec5
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x24 ]
sub ecx [ eax + 0xf0 ]
mov esi [ ebp - 0x60 ]
mov eax ecx
cdq
idiv [ esi + 0xa8 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov [ ebp - 0x68 ] edx
jmp r-xdata
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x60 ]
call sub_453ec5
mov [ ebp - 0x2c ] 0x0
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x2c ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x118 ]
add eax [ ebp - 0x3c ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov [ ebp - 0x80 ] ecx
jmp r-xdata
sub esp 0xc
mov ecx esp
mov [ ebp - 0x50 ] esp
lea eax [ ebp - 0x30 ]
push eax
call sub_45f660
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x2dc ]
push edx
mov ecx [ ebp - 0x60 ]
call sub_454d3e
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x118 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x168 ]
sub ecx 0x1
cmp [ ebp - 0x2c ] ecx
jge r-xdata
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
cmp [ ebp - 0x28 ] edx
jne r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x2dc ] 0x1
jne r-xdata
mov ecx [ ebp - 0x60 ]
add ecx 0xe0
mov edx [ ecx ]
mov [ ebp - 0x4c ] edx
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x48 ] eax
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x44 ] edx
mov eax [ ecx + 0xc ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x48 ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x40 ] edx
push 0x1
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x60 ]
call sub_405470
mov ecx [ ebp - 0x60 ]
mov eax [ ecx + 0xe4 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x60 ]
cdq
idiv [ ecx + 0xac ]
cdq
sub eax edx
sar eax 0x1
add eax 0x1
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x18 ] 0x4
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x118 ]
sub eax [ ebp - 0x3c ]
test eax eax
jge r-xdata
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x60 ]
call sub_453edf
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x60 ]
call sub_453edf
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x60 ]
mov eax [ ecx + 0xe0 ]
sub eax [ edx + 0xa8 ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x24 ]
sub ecx eax
mov edx [ ebp - 0x60 ]
mov esi [ edx + 0xa8 ]
imul esi esi 0x3
mov eax ecx
cdq
idiv esi
test eax eax
jge r-xdata
mov edx 0x3
sub edx [ ebp - 0x34 ]
mov eax [ ebp - 0x60 ]
imul edx [ eax + 0xa8 ]
mov [ ebp - 0x38 ] edx
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x168 ]
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x168 ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x64 ] ecx
jmp r-xdata
sub esp 0xc
mov ecx esp
mov [ ebp - 0x54 ] esp
lea edx [ ebp - 0x30 ]
push edx
call sub_45f660
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x2dc ]
push ecx
mov ecx [ ebp - 0x60 ]
call sub_454d3e
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x158 ]
sub eax 0x1
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x164 ]
sub edx eax
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x158 ]
sub ecx 0x1
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0x118 ]
sub eax ecx
cmp edx eax
jge r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x168 ]
sub edx 0x1
cmp [ ebp - 0x2c ] edx
jge r-xdata
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp [ ebp - 0x28 ] eax
jne r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x168 ]
sub ecx 0x1
mov [ ebp - 0x78 ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x78 ] edx
jmp r-xdata
mov eax [ ebp - 0x60 ]
add eax 0xe0
mov ecx [ eax ]
mov [ ebp - 0x4c ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x48 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x44 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x158 ]
sub ecx 0x1
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0xac ]
imul eax ecx
mov ecx [ ebp - 0x48 ]
add ecx eax
mov [ ebp - 0x48 ] ecx
push 0x1
lea edx [ ebp - 0x4c ]
push edx
mov ecx [ ebp - 0x60 ]
call sub_405470
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ eax + 0xec ]
mov esi [ ebp - 0x60 ]
mov eax ecx
cdq
idiv [ esi + 0xac ]
cdq
sub eax edx
sar eax 0x1
add eax 0x1
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x18 ] 0x4
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x118 ]
add edx [ ebp - 0x3c ]
cmp eax edx
jge r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x118 ]
sub edx [ ebp - 0x3c ]
mov [ ebp - 0x90 ] edx
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x60 ]
mov edx [ eax + 0xe0 ]
sub edx [ ecx + 0xa8 ]
add edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
sub eax edx
mov ecx [ ebp - 0x60 ]
mov ecx [ ecx + 0xa8 ]
imul ecx ecx 0x3
cdq
idiv ecx
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x70 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x158 ]
sub eax 0x1
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x118 ]
sub edx eax
mov [ ebp - 0x8c ] edx
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x158 ]
sub edx 0x1
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x164 ]
sub ecx edx
mov [ ebp - 0x8c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x168 ]
sub edx 0x1
mov [ ebp - 0x84 ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x118 ]
add eax [ ebp - 0x3c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov [ ebp - 0x9c ] ecx
jmp r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x168 ]
sub ecx 0x1
cmp [ ebp - 0x2c ] ecx
jge r-xdata
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
cmp [ ebp - 0x28 ] edx
jne r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0xe0 ]
add ecx [ ebp - 0x38 ]
cmp [ ebp - 0x24 ] ecx
jle r-xdata
mov edx [ ebp - 0x70 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0x160 ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x2c ]
add edx eax
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x27c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x168 ]
sub edx 0x1
cmp [ ebp - 0x2c ] edx
jge r-xdata
mov ecx [ ebp - 0x9c ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x164 ]
sub eax 0x1
cmp [ ebp - 0x28 ] eax
jne r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x118 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x11c ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x168 ]
sub ecx 0x1
mov [ ebp - 0x94 ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x94 ] edx
jmp r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x1
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x158 ]
sub edx 0x1
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x164 ]
sub ecx edx
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x158 ]
sub eax 0x1
mov edx [ ebp - 0x60 ]
mov edx [ edx + 0x118 ]
sub edx eax
cmp ecx edx
jge r-xdata
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x11c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x168 ]
sub edx 0x1
mov [ ebp - 0xa0 ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xa0 ] eax
jmp r-xdata
sub esp 0xc
mov ecx esp
mov [ ebp - 0x58 ] esp
lea edx [ ebp - 0x30 ]
push edx
call sub_45f660
mov [ ebp - 0x98 ] eax
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_454d3e
mov edx [ ebp - 0x94 ]
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x158 ]
sub edx 0x1
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x118 ]
sub ecx edx
mov [ ebp - 0xa8 ] ecx
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x158 ]
sub ecx 0x1
mov edx [ ebp - 0x60 ]
mov eax [ edx + 0x164 ]
sub eax ecx
mov [ ebp - 0xa8 ] eax
jmp r-xdata
sub esp 0xc
mov ecx esp
mov [ ebp - 0x5c ] esp
lea eax [ ebp - 0x30 ]
push eax
call sub_45f660
mov [ ebp - 0xa4 ] eax
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_454d3e
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0xa8 ]
mov [ ebp - 0x1c ] edx
sub_454d3e
push ebp
mov ebp esp
push 0xffffffff
push sub_499e8a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x30 ]
add eax 0x110
test eax eax
je r-xdata
mov eax [ ebp - 0x30 ]
add eax 0x110
test eax eax
je r-xdata
mov [ ebp - 0x3c ] 0x0
mov ecx [ ebp - 0x30 ]
add ecx 0x114
mov [ ebp - 0x3c ] ecx
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
mov ecx [ ebp - 0x30 ]
add ecx 0x114
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov edx [ ebp - 0x30 ]
add edx 0x134
test edx edx
je r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x134
call sub_45f350
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x12c
call sub_45f6b0
test eax eax
je r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x128
call sub_45f350
mov ecx [ ebp - 0x30 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x12c
call sub_45f6b0
test eax eax
je r-xdata
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0x30 ]
add eax 0x138
mov [ ebp - 0x40 ] eax
jmp r-xdata
lea edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x30 ]
add ecx 0x110
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_41df4e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x38 ] 0x0
mov edx [ ebp - 0x30 ]
add edx 0x12c
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
add ecx 0x134
push ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x128
call sub_45f350
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x12c ] eax
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x12c ]
cmp edx [ eax + 0xa0 ]
jl r-xdata
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x40 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp + 0xc ]
call sub_41df62
test eax eax
je r-xdata
lea eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x30 ]
add ecx 0x134
call sub_45f350
mov edx [ ebp - 0x30 ]
add edx 0x128
push edx
mov ecx [ ebp - 0x30 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x30 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x30 ]
cmp [ eax + 0x138 ] 0x0
jge r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp + 0xc ]
call sub_41dfa5
test eax eax
je r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x30 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x30 ]
mov [ eax + 0x12c ] 0x0
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x130 ]
add edx 0x1
mov eax [ ebp - 0x30 ]
mov [ eax + 0x130 ] edx
lea edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x30 ]
add ecx 0x110
call sub_45f350
jmp r-xdata
lea edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x30 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
sub_45501b
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x24 ] ecx
lea ecx [ ebp - 0x18 ]
call sub_428cd0
lea eax [ ebp - 0x18 ]
push eax
call [ GetCursorPos@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_43cf70
lea ecx [ ebp - 0x20 ]
call sub_428cd0
mov [ ebp - 0x8 ] 0xffff
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x148 ]
sub eax 0x10
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x148 ]
add eax 0x10
cmp [ ebp - 0x14 ] eax
jle r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x29c ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x4
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x15c ]
sub ecx [ ebp - 0x4 ]
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x15c ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] 0x97
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x29c ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x4
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x158 ]
sub ecx 0x1
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x164 ]
sub eax ecx
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x15c ]
add edx [ ebp - 0x4 ]
cmp eax edx
jge r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x15c ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
push 0x0
push 0xffff
mov ecx [ ebp - 0x24 ]
call sub_45200e
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x15c ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x158 ]
sub ecx 0x1
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x164 ]
sub eax ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_4036e0
mov ecx eax
call sub_45f6f0
push eax
call [ SetCursor@IAT ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x15c ]
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] 0x91
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x92
jmp r-xdata
sub_455190
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4551b9
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
sub_4551b9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x120 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x120 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_455490
call sub_4054a0
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2dc ] 0xffff
je r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x174 ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push 0x1f4
mov ecx [ ebp - 0x4 ]
call sub_416ec0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x174 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x120 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x174 ]
push eax
call [ SetFocus@IAT ]
sub_455255
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x120 ] 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_455490
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x120 ] 0x3
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
sub_455296
push ebp
mov ebp esp
push 0xffffffff
push sub_499ea6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov [ ebp - 0x3c ] ecx
mov eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x120 ]
mov [ ebp - 0x40 ] edx
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x3c ]
mov [ eax + 0x170 ] 0x0
mov ecx [ ebp - 0x3c ]
call sub_4054c0
mov ecx [ ebp - 0x3c ]
call sub_47be0f
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x40 ] 0x1
je r-xdata
mov edx [ ebp - 0x3c ]
cmp [ edx + 0x170 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_40a1e0
mov ecx [ ebp - 0x3c ]
mov [ ecx + 0x174 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_4804d8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ eax + 0x120 ] 0x3
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x3c ]
add ecx 0x140
call sub_45f350
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_41df4e
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x3c ]
call sub_45b11e
mov ecx [ ebp - 0x3c ]
mov [ ecx + 0x340 ] 0xa
mov edx [ ebp - 0x3c ]
mov [ edx + 0x33c ] 0x0
push 0x0
push 0x32
push 0x1f5
mov ecx [ ebp - 0x3c ]
call sub_416e90
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_4804d8
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x174 ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x3c ]
call sub_455490
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x3c ]
call sub_405500
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_4804d8
mov ecx [ ebp - 0x3c ]
mov [ ecx + 0x174 ] 0x0
mov edx [ ebp - 0x3c ]
mov [ edx + 0x120 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_4804d8
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0x174 ]
push eax
call [ SetFocus@IAT ]
sub_45545b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x120 ] 0x2
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405500
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
call sub_455490
sub_455490
push ebp
mov ebp esp
push 0xffffffff
push sub_499eb9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
call sub_4054a0
cmp eax [ ebp - 0x24 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_480466
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x24 ]
call sub_45b11e
push 0x1f5
mov ecx [ ebp - 0x24 ]
call sub_416ec0
push 0x7f00
call sub_4036e0
mov ecx eax
call sub_405520
push eax
call [ SetCursor@IAT ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x174 ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ ebp - 0x24 ]
mov [ eax + 0x174 ] 0x0
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x120 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_4804d8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x174 ]
push edx
call [ SetFocus@IAT ]
sub_45555d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5f0
mov ecx [ ebp - 0x4 ]
call sub_45f2f0
mov esp ebp
pop ebp
retn 0x4
sub_45557e
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x31c ]
push ecx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_40b5f0
mov edx [ ebp - 0xc ]
cmp [ edx + 0x124 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x31c ]
push eax
call [ SetFocus@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_45c237
mov ecx [ ebp - 0xc ]
call sub_45f720
mov ecx [ ebp - 0xc ]
call sub_45f130
mov ecx [ ebp - 0xc ]
call sub_45f550
mov ecx [ ebp - 0xc ]
call sub_45f760
mov ecx [ ebp - 0xc ]
call sub_45ef10
mov ecx [ ebp - 0xc ]
call sub_45ef90
mov ecx [ ebp - 0xc ]
call sub_450ec5
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xc ]
add ecx 0x100
call sub_404fe0
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x100
call sub_405cf0
push eax
mov ecx [ ebp - 0xc ]
call sub_45f5c0
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x100 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x104 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_45f5f0
mov ecx [ ebp - 0xc ]
call sub_45f610
push 0x1
mov ecx [ ebp - 0xc ]
add ecx 0x64
call sub_45f080
sub_455672
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
sub edx 0x100
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x5
ja r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
jmp [ eax * 4 + jump_table_4557a3 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x70
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
sub edx 0x70
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x14 ] 0x9
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
sub ecx 0x70
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x9
ja r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x10 ] 0x79
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
xor eax eax
mov al [ ecx + lookup_table_4557c3 ]
jmp [ eax * 4 + jump_table_4557bb ]
mov eax [ ebp - 0x18 ]
xor edx edx
mov dl [ eax + lookup_table_4557d5 ]
jmp [ edx * 4 + jump_table_4557cd ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
shr ecx 0x10
and ecx 0xffff
and ecx 0xffff
push ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_445ab2
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
shr eax 0x10
and eax 0xffff
and eax 0xffff
push eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_445461
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4557df
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
shl eax 0x6
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x2a8 ]
lea eax [ edx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x4 ] dx
mov ax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_455818
mov esp ebp
pop ebp
retn 0x8
sub_455818
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
xor eax eax
mov al [ rw-data ]
and eax 0x1
test eax eax
jne r-xdata
xor edx edx
mov dl [ rw-data ]
and edx 0x2
test edx edx
jne r-xdata
mov cl [ rw-data ]
or cl 0x1
mov [ rw-data ] cl
mov [ rw-data ] sub_446d98
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_446da3
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_446dc6
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_446de9
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_446e0c
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_446e2f
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_446e52
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_446ef6
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_446f19
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_446f3c
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_446e8d
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_446eb0
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_446ed3
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_446f5f
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_446f82
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_446fa5
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_446fc8
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_447187
mov ecx [ rw-data ]
mov [ rw-data ] ecx
xor ecx ecx
mov cl [ rw-data ]
and ecx 0x4
test ecx ecx
jne r-xdata
mov al [ rw-data ]
or al 0x2
mov [ rw-data ] al
mov [ rw-data ] sub_44dc4e
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44dec9
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44e282
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44e641
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_450092
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_450304
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44eb35
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44ed9d
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44f0cf
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44f4b0
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44f9d7
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44fb4d
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44fd31
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44feaa
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_4505bc
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_4505da
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44d8a8
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44db0b
mov eax [ rw-data ]
mov [ rw-data ] eax
xor ecx ecx
mov cl [ rw-data ]
and ecx 0x8
test ecx ecx
jne r-xdata
mov dl [ rw-data ]
or dl 0x4
mov [ rw-data ] dl
mov [ rw-data ] sub_447530
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44758c
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_4477d7
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_447b44
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_447ed4
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_4488d9
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_4489f1
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44839a
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_4485d3
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_448b29
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_448bf2
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44906a
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44956b
mov eax [ rw-data ]
mov [ rw-data ] eax
xor ecx ecx
mov cl [ rw-data ]
and ecx 0x10
test ecx ecx
jne r-xdata
mov dl [ rw-data ]
or dl 0x8
mov [ rw-data ] dl
mov [ rw-data ] sub_4505f8
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_45064e
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_449912
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44985f
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_449a02
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44db5b
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44dba3
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44dbf5
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_446621
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_4467a4
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44669c
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_4467ef
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_446986
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_446c4a
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44d62a
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44d647
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
mov dl [ rw-data ]
and edx 0x20
test edx edx
jne r-xdata
mov dl [ rw-data ]
or dl 0x10
mov [ rw-data ] dl
mov [ rw-data ] sub_44ac76
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44ac8b
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44aca0
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44acb5
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44acca
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44acdf
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44acf4
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44ad09
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44b2b8
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44b486
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44bdfe
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44c6b0
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44cc68
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44d6a9
mov ecx [ rw-data ]
mov [ rw-data ] ecx
xor edx edx
mov dl [ rw-data ]
and edx 0x40
test edx edx
jne r-xdata
mov al [ rw-data ]
or al 0x20
mov [ rw-data ] al
mov [ rw-data ] sub_449ea1
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_449eba
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_449ed3
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_449eec
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_449f05
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_449f1e
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_449f37
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_449f50
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_449f69
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_449f82
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44a012
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44a027
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44a03c
mov ecx [ rw-data ]
mov [ rw-data ] ecx
xor eax eax
mov al [ rw-data ]
and eax 0x80
test eax eax
jne r-xdata
mov al [ rw-data ]
or al 0x40
mov [ rw-data ] al
mov [ rw-data ] sub_449c4d
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_449c70
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_449c93
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_449cb6
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_449cd9
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_449cfc
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_449d1c
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_449d39
mov edx [ rw-data ]
mov [ rw-data ] edx
mov eax [ ebp + 0x8 ]
and eax 0xffff
and eax 0xff00
mov [ ebp - 0x4 ] ax
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
and ecx 0xff
mov [ ebp - 0x8 ] cx
mov edx [ ebp - 0x4 ]
and edx 0xffff
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x400
jg r-xdata
mov cl [ rw-data ]
or cl 0x80
mov [ rw-data ] cl
mov [ rw-data ] sub_44cc85
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44cd68
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44cf53
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44d13e
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44d18a
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44d3de
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44d3fb
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44d41e
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44d441
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44d522
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] sub_44d549
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] sub_44cc9a
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] sub_44ccaf
mov edx [ rw-data ]
mov [ rw-data ] edx
cmp [ ebp - 0x10 ] 0x500
je r-xdata
cmp [ ebp - 0x10 ] 0x400
je r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0xd
jl r-xdata
cmp [ ebp - 0x10 ] 0x600
je r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0xe
jl r-xdata
cmp [ ebp - 0x10 ] 0x200
jg r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov ecx [ ebp - 0xc ]
call [ edx * 4 + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0x8
jl r-xdata
cmp [ ebp - 0x10 ] 0x700
je r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov ecx [ ebp - 0xc ]
call [ edx * 4 + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x300
je r-xdata
cmp [ ebp - 0x10 ] 0x200
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov ecx [ ebp - 0xc ]
call [ edx * 4 + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0xd
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0x10
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0xd
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov ecx [ ebp - 0xc ]
call [ edx * 4 + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov ecx [ ebp - 0xc ]
call [ edx * 4 + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov ecx [ ebp - 0xc ]
call [ edx * 4 + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0x12
jl r-xdata
cmp [ ebp - 0x10 ] 0x100
je r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov ecx [ ebp - 0xc ]
call [ edx * 4 + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0x12
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov ecx [ ebp - 0xc ]
call [ edx * 4 + rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
sub_45649a
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0xd0
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
test eax eax
jle r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
test edx edx
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x158 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
sub edx [ ecx + 0xac ]
mov eax [ ebp - 0x4 ]
cmp edx [ eax + 0xd4 ]
jle r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xd4 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0xac ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
add eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x114 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] ecx
sub_4565be
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0xe0
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xa8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jle r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x158 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0xac ]
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0xe4 ]
jle r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xe4 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0xac ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x114 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
sub_4566f7
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0xf0
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xa8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jle r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x158 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0xac ]
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0xf4 ]
jle r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xf4 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0xac ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x114 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
sub_456830
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_456855
mov esp ebp
pop ebp
retn 0xc
sub_456855
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_428cd0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jg r-xdata
cmp [ ebp - 0x1c ] 0xc00001
jg r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0xc00002
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x8
ja r-xdata
cmp [ ebp - 0x1c ] 0xc00001
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x3fffffff
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x9
ja r-xdata
mov edx [ ebp - 0x18 ]
add edx 0xf0
push edx
mov eax [ ebp - 0x18 ]
add eax 0xe0
push eax
lea ecx [ ebp - 0x10 ]
call sub_45f7d0
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
mov eax [ ebp - 0x1c ]
jmp [ eax * 4 + jump_table_457747 ]
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x1
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x12
ja r-xdata
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
mov edx [ ebp - 0x1c ]
jmp [ edx * 4 + jump_table_4576d3 ]
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
mov edx [ ebp + 0xc ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_4517a2
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x1c ]
jmp [ ecx * 4 + jump_table_4576fb ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_45649a
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4565be
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4566f7
cmp [ ebp + 0x8 ] 0xc0000002
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_45649a
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4565be
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_405470
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45c237
mov ecx [ ebp - 0x18 ]
call sub_45f720
push 0x1
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_45649a
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4565be
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_405470
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4517a2
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_405470
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4517a2
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_405470
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4517a2
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_406130
push eax
mov ecx [ ebp - 0x18 ]
call sub_405470
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_45649a
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_405470
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_4565be
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
mov ecx [ ebp - 0x18 ]
call sub_44dec9
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_45649a
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4565be
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_405470
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45f0b0
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x18 ]
call sub_444be1
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x164 ]
jge r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_45b235
mov ecx [ ebp - 0x18 ]
call sub_45ef10
push 0x1
mov edx [ ebp - 0x18 ]
add edx 0xf0
push edx
mov ecx [ ebp - 0x18 ]
call sub_405470
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45ef90
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_452544
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_45258c
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_44db81
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_44dbbd
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4517a2
test eax eax
je r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_4517a2
push 0x1
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_405470
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4566f7
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
mov ecx [ ebp - 0x18 ]
call sub_44dec9
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub ecx 0x1
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_405470
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x114 ] 0x1
jne r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
push 0x1
push 0x2
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
push 0x1
push 0x2
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ edx + 0x16c ] 0x1
mov ecx [ ebp - 0x18 ]
call sub_450ec5
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ edx + 0x16c ] 0x1
mov ecx [ ebp - 0x18 ]
call sub_450ec5
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ edx + 0x16c ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_44dec9
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_44dec9
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
mov ecx [ ebp - 0x18 ]
call sub_450ec5
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x118 ] eax
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x248 ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x18 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x18 ]
mov [ eax + 0x118 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x168 ]
mov [ ecx + 0x114 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x164 ]
jne r-xdata
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405470
push 0x1
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0xac ]
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xf4 ] edx
jle r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x40 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x48 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x114 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
push 0x1
push 0x3
mov ecx [ ebp - 0x18 ]
call sub_450689
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
push 0x1
push 0x2
mov ecx [ ebp - 0x18 ]
call sub_450689
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_405450
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x168 ]
jle r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
sub ecx [ eax + 0xac ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xf4 ]
mov [ ebp - 0x2c ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
mov [ edx + 0x114 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
mov [ edx + 0x114 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x38 ]
mov [ edx + 0x114 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x40 ]
mov [ edx + 0x114 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x44 ]
mov [ edx + 0x114 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x48 ]
mov [ edx + 0x114 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ edx + 0x114 ] eax
mov edx [ ebp - 0x2c ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x34 ]
mov [ edx + 0x114 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x3c ]
mov [ edx + 0x114 ] eax
sub_45776b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x13
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_481a51
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_457791
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
shr eax 0x10
and eax 0xffff
and eax 0xffff
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_47a1e2
mov cx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] cx
mov edx [ ebp - 0x4 ]
and edx 0xffff
cmp edx 0xe12b
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xffff
cmp eax 0xe12c
je r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xffff
cmp ecx 0xe107
je r-xdata
mov edx [ ebp - 0x4 ]
and edx 0xffff
cmp edx 0xe108
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xffff
cmp eax 0xe109
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x111
call sub_402850
mov ecx eax
call sub_405d50
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_457838
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_428cd0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_45787f
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_405470
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_45cb47
mov esp ebp
pop ebp
retn 0xc
sub_45787f
push ebp
mov ebp esp
sub esp 0x2c8
push esi
mov [ ebp - 0xb0 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_428cd0
lea ecx [ ebp - 0x30 ]
call sub_428cd0
lea ecx [ ebp - 0x20 ]
call sub_428cd0
mov eax [ ebp - 0xb0 ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0xf0
mov eax [ edx ]
mov [ ebp - 0x30 ] eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x2c ] ecx
mov eax [ edx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov ecx [ edx + 0xc ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0xb4 ] edx
mov eax [ ebp - 0xb4 ]
add eax 0x1
mov [ ebp - 0xb4 ] eax
cmp [ ebp - 0xb4 ] 0xc
ja r-xdata
mov ecx [ ebp - 0xb0 ]
cmp [ ecx + 0x11c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x30 ]
mov [ eax ] ecx
mov edx [ ebp - 0x2c ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x24 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0xb4 ]
jmp [ ecx * 4 + jump_table_45a88c ]
mov eax [ ebp - 0xb0 ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0xe0
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov eax [ edx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ edx + 0xc ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] edx
mov eax [ ebp - 0x1c0 ]
add eax 0x1
mov [ ebp - 0x1c0 ] eax
cmp [ ebp - 0x1c0 ] 0xc
ja r-xdata
mov ecx [ ebp - 0xb0 ]
cmp [ ecx + 0x11c ] 0x0
jne r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x110
test edx edx
je r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x110
test edx edx
je r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x118 ]
sub eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x118 ]
sub ecx 0x2
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x13c ]
add edx 0x1
mov eax [ ebp - 0xb0 ]
sub edx [ eax + 0x15c ]
test edx edx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov edx [ ebp - 0xb0 ]
cmp [ edx + 0x27c ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c0 ]
jmp [ ecx * 4 + jump_table_45a8c0 ]
pop esi
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0xb8 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x114
mov [ ebp - 0xb8 ] eax
jmp r-xdata
mov [ ebp - 0xd0 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x114
mov [ ebp - 0xd0 ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0xe8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x118 ]
sub eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0xf4 ] eax
mov [ ebp - 0xf4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x100 ] ecx
mov [ ebp - 0x100 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x10c ] edx
mov [ ebp - 0x10c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x118 ] eax
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x118 ]
sub ecx 0x2
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x124 ] ecx
mov [ ebp - 0x124 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x130 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x13c ]
add edx 0x1
mov eax [ ebp - 0xb0 ]
sub edx [ eax + 0x15c ]
mov [ ebp - 0x13c ] edx
mov [ ebp - 0x13c ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x154 ] 0x0
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x20 ]
mov [ edx ] eax
mov ecx [ ebp - 0x1c ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x14 ]
mov [ edx + 0xc ] ecx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_45f7d0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x110
test edx edx
je r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x110
test edx edx
je r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x118 ]
sub eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x118 ]
sub ecx 0x2
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0x2
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x160 ]
sub edx eax
test edx edx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x10 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0xb8 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
sub edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xb0 ]
cmp [ ecx + 0x114 ] 0x0
jne r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0xec ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
cmp eax [ ebp - 0xe8 ]
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x118 ]
sub ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0xf8 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
cmp eax [ ebp - 0xf4 ]
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0x104 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
cmp eax [ ebp - 0x100 ]
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x110 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0x10c ]
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x11c ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
cmp edx [ ebp - 0x118 ]
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x118 ]
sub edx 0x2
mov eax [ ebp - 0xb0 ]
sub edx [ eax + 0x15c ]
test edx edx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x128 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0x124 ]
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0x134 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
cmp eax [ ebp - 0x130 ]
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x140 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x13c ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x2c ]
add eax edx
cmp [ ebp - 0x24 ] eax
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x158 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x154 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x2c ]
add ecx eax
cmp [ ebp - 0x24 ] ecx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
add ecx 0x128
test ecx ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x1c4 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x114
mov [ ebp - 0x1c4 ] eax
jmp r-xdata
mov [ ebp - 0x1dc ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x114
mov [ ebp - 0x1dc ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x1f4 ] ecx
mov [ ebp - 0x1f4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x118 ]
sub eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0x200 ] eax
mov [ ebp - 0x200 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x20c ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x118 ]
sub ecx 0x2
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x230 ] ecx
mov [ ebp - 0x230 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0x23c ] eax
mov [ ebp - 0x23c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x248 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x260 ] 0x0
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0x2
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x160 ]
sub ecx edx
mov [ ebp - 0xbc ] ecx
mov [ ebp - 0xbc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x30 ]
add ecx [ eax + 0xa8 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xa8 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x30 ]
sub ecx eax
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xc ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0x2
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x160 ]
sub edx eax
test edx edx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x10 ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0xf0 ] edx
mov [ ebp - 0xf0 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xec ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x2c ]
add eax edx
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0xac ]
mov eax [ ebp - 0x2c ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x118 ]
sub ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0xfc ] ecx
mov [ ebp - 0xfc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xf8 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x2c ]
add eax edx
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0xac ]
mov eax [ ebp - 0x2c ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x108 ] edx
mov [ ebp - 0x108 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x104 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x2c ]
add eax edx
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x2c ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x114 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x110 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x2c ]
add eax [ edx + 0xac ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x120 ] ecx
mov [ ebp - 0x120 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x11c ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0xac ]
imul ecx ecx 0x3
mov edx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x118 ]
sub edx 0x2
mov eax [ ebp - 0xb0 ]
sub edx [ eax + 0x15c ]
mov [ ebp - 0x12c ] edx
mov [ ebp - 0x12c ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x128 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xac ]
imul eax eax 0x3
mov ecx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x138 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x134 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x2c ]
add eax edx
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x13c ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x144 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x140 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x130 ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x15c ] ecx
mov [ ebp - 0x15c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x158 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov [ ebp - 0x16c ] 0x0
mov edx [ ebp - 0xb0 ]
add edx 0x12c
mov [ ebp - 0x16c ] edx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
mov ecx [ edx + 0xa0 ]
imul ecx ecx 0x3
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x160 ]
cdq
idiv ecx
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x44 ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x10 ]
sub edx eax
test edx edx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x10 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c4 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
sub edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1dc ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xb0 ]
cmp [ ecx + 0x114 ] 0x0
jne r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0x1f8 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
cmp eax [ ebp - 0x1f4 ]
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x118 ]
sub ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0x204 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
cmp eax [ ebp - 0x200 ]
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0x210 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
cmp eax [ ebp - 0x20c ]
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0x218 ]
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x228 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
cmp edx [ ebp - 0x224 ]
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x118 ]
sub edx 0x2
mov eax [ ebp - 0xb0 ]
sub edx [ eax + 0x15c ]
test edx edx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0x230 ]
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
mov [ ebp - 0x240 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
cmp eax [ ebp - 0x23c ]
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x130 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x24c ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
cmp edx [ ebp - 0x248 ]
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x264 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x260 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x1c ]
add ecx eax
cmp [ ebp - 0x14 ] ecx
jge r-xdata
mov ecx [ ebp - 0xb0 ]
add ecx 0x128
test ecx ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x34 ]
mov [ ebp - 0xc0 ] ecx
mov [ ebp - 0xc0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xbc ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x34 ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0x2
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x160 ]
sub ecx edx
mov [ ebp - 0xd4 ] ecx
mov [ ebp - 0xd4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x30 ]
add ecx [ eax + 0xa8 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xa8 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x30 ]
sub ecx eax
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xc ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0xf0 ]
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0xfc ]
mov [ ebp - 0xf8 ] eax
mov eax [ ebp - 0x108 ]
mov [ ebp - 0x104 ] eax
mov ecx [ ebp - 0x114 ]
mov [ ebp - 0x110 ] ecx
mov edx [ ebp - 0x120 ]
mov [ ebp - 0x11c ] edx
mov ecx [ ebp - 0x12c ]
mov [ ebp - 0x128 ] ecx
mov eax [ ebp - 0x138 ]
mov [ ebp - 0x134 ] eax
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x130 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x148 ] edx
mov [ ebp - 0x148 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x144 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x140 ] ecx
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x160 ] eax
mov [ ebp - 0x160 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x15c ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x158 ] edx
mov [ ebp - 0x170 ] 0x0
mov edx [ ebp - 0xb0 ]
add edx 0x138
mov [ ebp - 0x170 ] edx
jmp r-xdata
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xb0 ]
add ecx 0x134
test ecx ecx
je r-xdata
mov [ ebp - 0x174 ] 0x0
mov edx [ ebp - 0xb0 ]
add edx 0x12c
mov [ ebp - 0x174 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x44 ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x10 ]
sub edx eax
mov [ ebp - 0x1c8 ] edx
mov [ ebp - 0x1c8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x110
test edx edx
je r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
mov ecx [ edx + 0xa0 ]
imul ecx ecx 0x3
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x160 ]
cdq
idiv ecx
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x4c ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x10 ]
sub edx eax
test edx edx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x10 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
cmp [ edx + 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x1fc ] edx
mov [ ebp - 0x1fc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x1f8 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
add eax edx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x118 ]
sub ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x208 ] ecx
mov [ ebp - 0x208 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x204 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
add eax edx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x118 ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x214 ] edx
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x210 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
add eax edx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x1c ]
add edx [ ecx + 0xac ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x118 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x21c ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x1c ]
add eax [ edx + 0xac ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x118 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x22c ] ecx
mov [ ebp - 0x22c ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x228 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0xac ]
imul ecx ecx 0x3
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x118 ]
sub edx 0x2
mov eax [ ebp - 0xb0 ]
sub edx [ eax + 0x15c ]
mov [ ebp - 0x238 ] edx
mov [ ebp - 0x238 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x234 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xac ]
imul eax eax 0x3
mov ecx [ ebp - 0x1c ]
add ecx eax
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x244 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x240 ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
add eax edx
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x130 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x250 ] ecx
mov [ ebp - 0x250 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x24c ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x268 ] ecx
mov [ ebp - 0x268 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x264 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov [ ebp - 0x278 ] 0x0
mov edx [ ebp - 0xb0 ]
add edx 0x12c
mov [ ebp - 0x278 ] edx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xc0 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0xf0 ]
add edx eax
mov [ ebp - 0x30 ] edx
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0xc4 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x38 ]
mov [ ebp - 0xd8 ] ecx
mov [ ebp - 0xd8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xd4 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x38 ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0xdc ] edx
mov [ ebp - 0xdc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x14c ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0x148 ]
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x130 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x164 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
cmp edx [ ebp - 0x160 ]
jge r-xdata
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
add eax 0x128
test eax eax
je r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x134
test edx edx
je r-xdata
mov eax [ ebp - 0x174 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x58 ] edx
mov eax [ ebp - 0x58 ]
push eax
mov ecx [ ebp - 0x5c ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_45f310
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x19c ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x40 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x20 ]
sub ecx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1c8 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x40 ] edx
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov [ ebp - 0x1cc ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x114
mov [ ebp - 0x1cc ] eax
jmp r-xdata
mov eax [ ebp - 0x4c ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x10 ]
sub edx eax
mov [ ebp - 0x1e0 ] edx
mov [ ebp - 0x1e0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x110
test edx edx
je r-xdata
mov eax [ ebp - 0x1fc ]
mov [ ebp - 0x1f8 ] eax
mov eax [ ebp - 0x208 ]
mov [ ebp - 0x204 ] eax
mov eax [ ebp - 0x214 ]
mov [ ebp - 0x210 ] eax
mov ecx [ ebp - 0x220 ]
mov [ ebp - 0x21c ] ecx
mov edx [ ebp - 0x22c ]
mov [ ebp - 0x228 ] edx
mov ecx [ ebp - 0x238 ]
mov [ ebp - 0x234 ] ecx
mov eax [ ebp - 0x244 ]
mov [ ebp - 0x240 ] eax
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x254 ] ecx
mov [ ebp - 0x254 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x250 ]
mov [ ebp - 0x24c ] edx
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x26c ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x268 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x264 ] edx
mov [ ebp - 0x27c ] 0x0
mov edx [ ebp - 0xb0 ]
add edx 0x138
mov [ ebp - 0x27c ] edx
jmp r-xdata
mov eax [ ebp - 0x278 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xb0 ]
add ecx 0x134
test ecx ecx
je r-xdata
mov [ ebp - 0x280 ] 0x0
mov edx [ ebp - 0xb0 ]
add edx 0x12c
mov [ ebp - 0x280 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0xcc ] ecx
mov [ ebp - 0xcc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc8 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x2c ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xd8 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0xf0 ]
add edx eax
mov [ ebp - 0x30 ] edx
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0xe0 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0xdc ]
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x130 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x150 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x14c ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x130 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x168 ] ecx
mov [ ebp - 0x168 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x164 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x2c ] edx
jmp r-xdata
mov [ ebp - 0x17c ] 0x0
mov ecx [ ebp - 0xb0 ]
add ecx 0x12c
mov [ ebp - 0x17c ] ecx
jmp r-xdata
mov [ ebp - 0x178 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x138
mov [ ebp - 0x178 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x1a0 ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x19c ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x2c ]
add ecx eax
cmp [ ebp - 0x24 ] ecx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xa8 ]
imul eax eax 0x3
mov ecx [ ebp - 0x20 ]
add ecx eax
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xa8 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x20 ]
sub ecx eax
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xc ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ eax + 0xa8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x1cc ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x7c ] edx
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x78 ]
push ecx
mov edx [ ebp - 0x7c ]
push edx
mov ecx [ ebp - 0xb0 ]
add ecx 0x12c
call sub_45f6b0
test eax eax
je r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x48 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x20 ]
sub ecx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1e0 ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4c ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x48 ] edx
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov [ ebp - 0x1e4 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x114
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x13c ]
add edx 0x1
mov eax [ ebp - 0xb0 ]
sub edx [ eax + 0x15c ]
test edx edx
jge r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x258 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x254 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
cmp [ ebp - 0x14 ] edx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x130 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x270 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
cmp edx [ ebp - 0x26c ]
jge r-xdata
mov eax [ ebp - 0x27c ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
add eax 0x128
test eax eax
je r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x134
test edx edx
je r-xdata
mov eax [ ebp - 0x280 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x88 ] edx
mov eax [ ebp - 0x88 ]
push eax
mov ecx [ ebp - 0x8c ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_45f310
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0x1
mov ecx [ ebp - 0xb0 ]
sub eax [ ecx + 0x15c ]
mov [ ebp - 0x2a8 ] eax
mov [ ebp - 0x2a8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xcc ]
mov [ ebp - 0xc8 ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0xe4 ] ecx
mov [ ebp - 0xe4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xe0 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x2c ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x150 ]
mov [ ebp - 0x14c ] ecx
mov edx [ ebp - 0x168 ]
mov [ ebp - 0x164 ] edx
mov eax [ ebp - 0xb0 ]
add eax 0x134
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x13c ]
jl r-xdata
mov edx [ ebp - 0x17c ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] ecx
mov edx [ ebp - 0x68 ]
push edx
mov eax [ ebp - 0x6c ]
push eax
mov ecx [ ebp + 0x10 ]
call sub_45f310
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40b490
jmp r-xdata
mov ecx [ ebp - 0x178 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x1a4 ] ecx
mov [ ebp - 0x1a4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1a0 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x1d0 ] edx
mov [ ebp - 0x1d0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xa8 ]
imul eax eax 0x3
mov ecx [ ebp - 0x20 ]
add ecx eax
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xa8 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x20 ]
sub ecx eax
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xc ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ eax + 0xa8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x1e4 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x80 ] eax
mov ecx [ ebp - 0x80 ]
push ecx
mov edx [ ebp - 0x84 ]
push edx
mov ecx [ ebp - 0xb0 ]
add ecx 0x12c
call sub_45f6b0
test eax eax
je r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x13c ]
add edx 0x1
mov eax [ ebp - 0xb0 ]
sub edx [ eax + 0x15c ]
mov [ ebp - 0x25c ] edx
mov [ ebp - 0x25c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x258 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x130 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x274 ] ecx
mov [ ebp - 0x274 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x270 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov [ ebp - 0x288 ] 0x0
mov ecx [ ebp - 0xb0 ]
add ecx 0x12c
mov [ ebp - 0x288 ] ecx
jmp r-xdata
mov [ ebp - 0x284 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x138
mov [ ebp - 0x284 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x2ac ] edx
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x2a8 ]
imul eax [ edx + 0xac ]
mov ecx [ ebp - 0x1c ]
add ecx eax
cmp [ ebp - 0x14 ] ecx
jge r-xdata
mov edx [ ebp - 0xe4 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0x188 ] 0x0
mov ecx [ ebp - 0xb0 ]
add ecx 0x138
mov [ ebp - 0x188 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xb0 ]
add edx 0x134
test edx edx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x13c ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x1a8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1a4 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x1a0 ] edx
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0x1d0 ]
jge r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x15c ]
mov [ ebp - 0x1e8 ] edx
mov [ ebp - 0x1e8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x25c ]
imul edx [ ecx + 0xac ]
mov eax [ ebp - 0x1c ]
add eax edx
mov [ ebp - 0x258 ] eax
mov edx [ ebp - 0x274 ]
mov [ ebp - 0x270 ] edx
mov eax [ ebp - 0xb0 ]
add eax 0x134
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x13c ]
jl r-xdata
mov edx [ ebp - 0x288 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x98 ] ecx
mov edx [ ebp - 0x98 ]
push edx
mov eax [ ebp - 0x9c ]
push eax
mov ecx [ ebp + 0x10 ]
call sub_45f310
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_40b490
jmp r-xdata
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x90 ] eax
mov ecx [ ebp - 0x90 ]
push ecx
mov edx [ ebp - 0x94 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx 0x1
mov edx [ ebp - 0xb0 ]
sub ecx [ edx + 0x15c ]
mov [ ebp - 0x2b0 ] ecx
mov [ ebp - 0x2b0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2ac ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x15c ]
test eax eax
jge r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x130 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x130 ]
jl r-xdata
mov edx [ ebp - 0x188 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x74 ]
push eax
mov ecx [ ebp + 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov [ ebp - 0x180 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x138
mov [ ebp - 0x180 ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x134
test edx edx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx ]
cmp eax [ edx + 0x138 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x1ac ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
cmp edx [ ebp - 0x1a8 ]
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x1d8 ] ecx
mov [ ebp - 0x1d8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1d4 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1c ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + 0x15c ]
test edx edx
jge r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x158 ]
mov [ ebp - 0x1ec ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
cmp ecx [ ebp - 0x1e8 ]
jge r-xdata
mov [ ebp - 0x294 ] 0x0
mov ecx [ ebp - 0xb0 ]
add ecx 0x138
mov [ ebp - 0x294 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xb0 ]
add edx 0x134
test edx edx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x13c ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x2b4 ] eax
mov [ ebp - 0x2b4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x2b0 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x2ac ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x130 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xb0 ]
add edx 0x128
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x130 ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x180 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov [ ebp - 0x184 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x138
mov [ ebp - 0x184 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1b0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1ac ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov edx [ ebp - 0x1d8 ]
mov [ ebp - 0x1d4 ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xc ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x1f0 ] ecx
mov [ ebp - 0x1f0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1ec ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1c ]
add ecx [ eax + 0xac ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x130 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x130 ]
jl r-xdata
mov edx [ ebp - 0x294 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0xa0 ]
push edx
mov eax [ ebp - 0xa4 ]
push eax
mov ecx [ ebp + 0x14 ]
call sub_45f310
test eax eax
je r-xdata
mov [ ebp - 0x28c ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x138
mov [ ebp - 0x28c ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x134
test edx edx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx ]
cmp eax [ edx + 0x138 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0x15c ]
test ecx ecx
jge r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x2b8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x158 ]
cmp edx [ ebp - 0x2b4 ]
jge r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x13c ]
jg r-xdata
mov ecx [ ebp - 0xb0 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax ]
cmp edx [ ecx + 0x12c ]
jge r-xdata
mov [ ebp - 0x18c ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x12c
mov [ ebp - 0x18c ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x128
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx ]
cmp eax [ edx + 0x12c ]
jge r-xdata
mov ecx [ ebp - 0x184 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0x1b0 ]
mov [ ebp - 0x1ac ] edx
mov edx [ ebp - 0x1f0 ]
mov [ ebp - 0x1ec ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x130 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xb0 ]
add edx 0x128
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x130 ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x28c ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov [ ebp - 0x290 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x138
mov [ ebp - 0x290 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x2bc ] ecx
mov [ ebp - 0x2bc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x2b8 ]
imul ecx [ eax + 0xac ]
mov edx [ ebp - 0x1c ]
add edx ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x13c ]
jne r-xdata
mov [ ebp - 0x194 ] 0x0
mov edx [ ebp - 0xb0 ]
add edx 0x12c
mov [ ebp - 0x194 ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov [ ebp - 0x190 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x12c
mov [ ebp - 0x190 ] eax
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
imul eax eax 0x3
add eax 0x2
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x160 ]
sub edx eax
test edx edx
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp - 0xb0 ]
imul edx [ eax + 0xa8 ]
mov ecx [ ebp - 0xb0 ]
mov eax [ ecx + 0xf0 ]
add eax edx
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x13c ]
jg r-xdata
mov ecx [ ebp - 0xb0 ]
add ecx 0x128
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xb0 ]
mov edx [ eax ]
cmp edx [ ecx + 0x12c ]
jge r-xdata
mov [ ebp - 0x298 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x12c
mov [ ebp - 0x298 ] eax
jmp r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x128
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx ]
cmp eax [ edx + 0x12c ]
jge r-xdata
mov ecx [ ebp - 0x290 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x9c ] 0x0
je r-xdata
mov edx [ ebp - 0x2bc ]
mov [ ebp - 0x2b8 ] edx
mov edx [ ebp - 0xb0 ]
add edx 0x134
test edx edx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx ]
cmp eax [ edx + 0x138 ]
jle r-xdata
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0x3
add edx 0x2
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0x160 ]
sub ecx edx
mov [ ebp - 0x1b4 ] ecx
mov [ ebp - 0x1b4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov eax [ ecx + 0xa8 ]
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x30 ]
sub edx eax
mov [ ebp - 0x30 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x13c ]
jne r-xdata
mov [ ebp - 0x2a0 ] 0x0
mov edx [ ebp - 0xb0 ]
add edx 0x12c
mov [ ebp - 0x2a0 ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x298 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov [ ebp - 0x29c ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x12c
mov [ ebp - 0x29c ] eax
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0x248 ]
mov ecx [ edx + 0xa0 ]
imul ecx ecx 0x3
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0x160 ]
cdq
idiv ecx
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x54 ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
sub ecx eax
test ecx ecx
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ edx ]
imul ecx [ eax + 0xa8 ]
imul ecx ecx 0x3
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xe0 ]
add eax ecx
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp - 0xb0 ]
imul edx [ eax + 0xa8 ]
imul edx edx 0x3
mov ecx [ ebp - 0xb0 ]
mov eax [ ecx + 0xe0 ]
add eax edx
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov [ ebp - 0x198 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x138
mov [ ebp - 0x198 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1b4 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
sub ecx [ ebp - 0x3c ]
test ecx ecx
jge r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x134
test edx edx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xb0 ]
mov eax [ ecx ]
cmp eax [ edx + 0x138 ]
jle r-xdata
mov eax [ ebp - 0x2a0 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x29c ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x54 ]
cdq
mov ecx 0x3
idiv ecx
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
sub ecx eax
mov [ ebp - 0x2c0 ] ecx
mov [ ebp - 0x2c0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
add edx 0x110
test edx edx
je r-xdata
mov ecx [ ebp - 0x198 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
add edx 0x1
sub edx [ ebp - 0x3c ]
mov [ ebp - 0x1bc ] edx
mov [ ebp - 0x1bc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x1b8 ]
imul edx [ ecx + 0xa8 ]
mov eax [ ebp - 0xb0 ]
mov ecx [ eax + 0xf0 ]
add ecx edx
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax 0x1
sub eax [ ebp - 0x3c ]
test eax eax
jge r-xdata
mov [ ebp - 0x2a4 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x138
mov [ ebp - 0x2a4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
add ecx 0x1
mov eax [ ebp - 0x54 ]
cdq
mov esi 0x3
idiv esi
sub ecx eax
mov [ ebp - 0x2c4 ] ecx
mov [ ebp - 0x2c4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x2c0 ]
imul eax [ edx + 0xa8 ]
imul eax eax 0x3
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0xe0 ]
add edx eax
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx 0x1
mov eax [ ebp - 0x54 ]
cdq
mov esi 0x3
idiv esi
sub ecx eax
test ecx ecx
jge r-xdata
mov [ ebp - 0x2c8 ] 0x0
mov eax [ ebp - 0xb0 ]
add eax 0x114
mov [ ebp - 0x2c8 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x1bc ]
imul ecx [ eax + 0xa8 ]
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xf0 ]
add eax ecx
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x2a4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x50 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x20 ]
sub ecx eax
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x50 ]
imul eax [ edx + 0xa8 ]
mov ecx [ ebp - 0x18 ]
sub ecx eax
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0x2c4 ]
imul eax [ edx + 0xa8 ]
imul eax eax 0x3
mov ecx [ ebp - 0xb0 ]
mov edx [ ecx + 0xe0 ]
add edx eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x54 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0x50 ] edx
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ edx + 0xa8 ]
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x20 ]
sub ecx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ eax + 0xa8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x2c8 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xac ] edx
mov [ ebp - 0xa8 ] eax
mov ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0xac ]
push edx
mov ecx [ ebp - 0xb0 ]
add ecx 0x12c
call sub_45f6b0
test eax eax
je r-xdata
sub_45a8f4
push ebp
mov ebp esp
push 0xffffffff
push sub_499ed5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
mov [ ebp - 0x54 ] ecx
mov eax [ ebp - 0x54 ]
cmp [ eax + 0x124 ] 0x2
je r-xdata
mov edx [ ebp - 0x54 ]
mov [ edx + 0x124 ] 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x54 ]
add ecx 0x114
call sub_45f310
test eax eax
je r-xdata
mov ecx [ ebp - 0x54 ]
cmp [ ecx + 0x124 ] 0x0
jne r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x118 ]
cmp ecx [ eax + 0x4 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x130 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x118 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x54 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x13c ]
jl r-xdata
mov ecx [ ebp - 0x54 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x130 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x114 ]
cmp ecx [ eax ]
jge r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x128
call sub_45f350
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x54 ]
add ecx 0x110
push ecx
mov ecx [ ebp - 0x54 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x54 ]
mov eax [ ecx + 0x118 ]
cmp eax [ edx + 0x13c ]
jne r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x128
test edx edx
je r-xdata
mov ecx [ ebp - 0x54 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x12c ]
cmp eax [ edx ]
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x3c ]
push edx
mov eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x54 ]
add ecx 0x128
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_41df4e
mov edx [ ebp - 0x54 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x54 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x24 ]
call sub_41dece
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x134
call sub_45f350
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_41df4e
mov eax [ ebp - 0x54 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x134
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0x248 ]
mov edx [ ecx + 0xa0 ]
sub edx 0x1
mov eax [ ebp - 0x54 ]
cmp [ eax + 0x12c ] edx
jne r-xdata
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x54 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x138 ]
jg r-xdata
mov [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x54 ]
add eax 0x12c
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x54 ]
mov [ eax + 0x124 ] 0x2
mov edx [ ebp - 0x54 ]
mov [ edx + 0x124 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x54 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x54 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x12c ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x12c ] eax
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x12c ] 0x0
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x130 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x130 ] eax
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x54 ]
mov ecx [ edx + 0x118 ]
cmp ecx [ eax + 0x130 ]
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x5c ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x4c ]
push ecx
mov edx [ ebp - 0x50 ]
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x114
call sub_45f310
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x54 ]
add eax 0x12c
mov [ ebp - 0x58 ] eax
jmp r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x128
test edx edx
je r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x128
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x54 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x54 ]
mov ecx [ edx + 0x118 ]
cmp ecx [ eax + 0x130 ]
jne r-xdata
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x124 ] 0x2
mov eax [ ebp - 0x54 ]
mov [ eax + 0x124 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x134
call sub_45f350
mov eax [ ebp - 0x54 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x58 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x114
call sub_45f310
test eax eax
je r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x54 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov eax [ ebp - 0x54 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x54 ]
add ecx 0x134
call sub_45f350
mov ecx [ ebp - 0x54 ]
cmp [ ecx + 0x138 ] 0x0
jne r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x54 ]
mov ecx [ edx + 0x114 ]
cmp ecx [ eax + 0x12c ]
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x138 ] eax
mov ecx [ ebp - 0x54 ]
mov edx [ ecx + 0x248 ]
mov eax [ edx + 0xa0 ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x13c ]
sub eax 0x1
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x13c ] eax
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov [ ecx + 0x124 ] 0x2
mov eax [ ebp - 0x54 ]
mov [ eax + 0x124 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x54 ]
add edx 0x110
push edx
mov ecx [ ebp - 0x54 ]
add ecx 0x128
call sub_45f350
jmp r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0x138 ]
sub ecx 0x1
mov edx [ ebp - 0x54 ]
mov [ edx + 0x138 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0xa0 ]
sub ecx 0x1
mov edx [ ebp - 0x54 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0x13c ]
sub ecx 0x1
mov edx [ ebp - 0x54 ]
mov [ edx + 0x13c ] ecx
jmp r-xdata
jmp r-xdata
sub_45aeed
push ebp
mov ebp esp
sub esp 0x3c
mov [ ebp - 0x2c ] ecx
call sub_428be0
cmp eax [ ebp - 0x2c ]
je r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x120 ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
call sub_455490
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0x120 ] 0x3
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x154 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x10
and eax 0xffff
movsx ecx ax
mov [ ebp - 0xc ] ecx
mov dx [ ebp + 0xc ]
mov [ ebp - 0x10 ] dx
mov eax [ ebp + 0xc ]
shr eax 0x10
and eax 0xffff
mov [ ebp - 0x4 ] ax
mov cx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] cx
mov edx [ ebp - 0x8 ]
and edx 0xffff
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
mov edx [ eax + 0x164 ]
sub edx [ ecx + 0x158 ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x29c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x29c ]
neg ecx
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x18 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x2c ]
call sub_45f2f0
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x18 ]
sub eax [ edx + 0x15c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x18 ]
sub eax [ edx + 0x15c ]
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x15c ]
neg ecx
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x15c ]
neg edx
cmp edx [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x18 ]
sub eax [ edx + 0x15c ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x3c ] ecx
jmp r-xdata
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x2c ]
call sub_450ec5
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x15c ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x2c ]
mov [ edx + 0x15c ] ecx
mov eax [ ebp - 0x2c ]
add eax 0xb0
mov ecx [ eax ]
mov [ ebp - 0x28 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x24 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x20 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0xcc ]
mov [ ebp - 0x24 ] ecx
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x14 ]
imul edx [ ecx + 0xac ]
imul edx edx 0xffffffff
push edx
push 0x0
mov ecx [ ebp - 0x2c ]
call sub_47a75e
mov ecx [ ebp - 0x2c ]
call sub_405430
mov ecx [ ebp - 0x2c ]
add ecx 0xb0
call sub_404fe0
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0xb0
call sub_405cf0
push eax
mov ecx [ ebp - 0x2c ]
call sub_444be1
mov ecx [ ebp - 0x2c ]
call sub_45cd12
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] ecx
sub_45b0f6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4054e0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x170 ] 0x1
mov ecx [ ebp - 0x4 ]
call sub_4551b9
mov esp ebp
pop ebp
retn
sub_45b11e
push ebp
mov ebp esp
push 0xffffffff
push sub_499ee8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x120 ] 0x2
je r-xdata
call sub_428be0
cmp eax [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x120 ] 0x3
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
call sub_47fbe7
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_405140
mov eax [ ebp - 0x20 ]
add eax 0x14c
push eax
lea ecx [ ebp - 0x1c ]
call sub_405170
push 0x660046
push 0x0
push 0x0
lea ecx [ ebp - 0x1c ]
push ecx
push 0x20
push 0x20
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x148 ]
sub eax 0xf
push eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x144 ]
sub edx 0xf
push edx
mov ecx [ ebp + 0x8 ]
call sub_405240
lea ecx [ ebp - 0x1c ]
call sub_47fd06
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47fd1c
sub_45b1e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_436d72
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_45b235
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0xf0
call sub_406130
push eax
mov ecx [ ebp - 0x4 ]
call sub_405470
mov ecx [ ebp - 0x4 ]
call sub_45ef10
mov esp ebp
pop ebp
retn 0x4
sub_45b235
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x5
ja r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
jmp [ ecx * 4 + jump_table_45b307 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x344 ] sub_441a10
mov eax [ ebp - 0x4 ]
mov [ eax + 0x348 ] sub_44384d
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x344 ] sub_441b66
mov edx [ ebp - 0x4 ]
mov [ edx + 0x348 ] sub_443a24
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x344 ] sub_441e45
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x348 ] sub_443d37
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x344 ] sub_44223c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x348 ] sub_44419a
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x344 ] sub_442551
mov edx [ ebp - 0x4 ]
mov [ edx + 0x348 ] sub_44450a
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x344 ] sub_44269b
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x348 ] sub_4446d5
sub_45b31f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_436dc4
mov ecx [ ebp - 0x4 ]
call sub_45ef90
mov esp ebp
pop ebp
retn 0x4
sub_45b347
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x2b0 ]
call sub_41b1b0
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1d0 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x17c ] 0x0
push 0x0
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x2b0 ]
call sub_402780
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x50 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x180
push eax
call sub_467a70
add esp 0xc
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x50 ]
mov [ ecx + 0x1d0 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_45b3c0
push ebp
mov ebp esp
push 0xffffffff
push sub_499efb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x30 ]
call sub_405c80
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
call sub_404f90
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_41b237
test eax eax
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_41b7fb
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41b22c
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41b22c
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_45b46b
push ebp
mov ebp esp
push 0xffffffff
push sub_499f0e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x64
mov [ ebp - 0x70 ] ecx
mov ecx [ ebp - 0x70 ]
call sub_45f240
test eax eax
jne r-xdata
mov ecx [ ebp - 0x70 ]
call sub_405c80
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
call sub_404f70
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x18 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x30 ]
call sub_404f90
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_41b237
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_41b7fb
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_41b22c
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x68 ] eax
mov ecx [ ebp - 0x68 ]
push ecx
call sub_47c3de
add esp 0x4
lea ecx [ ebp - 0x40 ]
call sub_428cd0
push 0x1
lea edx [ ebp - 0x40 ]
push edx
mov ecx [ ebp - 0x70 ]
call sub_45ca79
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_468550
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp + 0xc ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x44 ] 0x0
mov edx [ ebp + 0x8 ]
cmp edx [ ebp - 0x18 ]
jne r-xdata
push 0x1
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x70 ]
call sub_405470
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x60 ] ecx
mov edx [ ebp - 0x60 ]
push edx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_41b22c
mov eax [ ebp - 0x64 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_435240
lea eax [ ebp - 0x4c ]
push eax
push 0x8
mov ecx [ ebp - 0x70 ]
call sub_456855
lea ecx [ ebp - 0x4c ]
push ecx
push 0x8
mov edx [ ebp - 0x70 ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_481a51
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax - 0x1 ]
mov [ ebp - 0x54 ] edx
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x54 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x30 ]
call sub_4353b5
lea ecx [ ebp - 0x4c ]
push ecx
push 0x9
mov ecx [ ebp - 0x70 ]
call sub_456855
lea edx [ ebp - 0x4c ]
push edx
push 0x9
mov eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x30 ]
call sub_481a51
mov ecx [ ebp - 0x18 ]
sub ecx 0x1
mov [ ebp - 0x50 ] ecx
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_4353b5
lea eax [ ebp - 0x4c ]
push eax
push 0x9
mov ecx [ ebp - 0x70 ]
call sub_456855
lea ecx [ ebp - 0x4c ]
push ecx
push 0x9
mov edx [ ebp - 0x70 ]
push edx
mov ecx [ ebp - 0x30 ]
call sub_481a51
jmp r-xdata
mov [ ebp - 0x6c ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_41b22c
mov eax [ ebp - 0x6c ]
sub_45b6e8
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_404f70
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] eax
sbb eax eax
inc eax
mov esp ebp
pop ebp
retn 0x4
sub_45b716
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0xc ]
push eax
push 0x1
push 0xe
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn 0xc
sub_45b89c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45f2b0
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45b8d6
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f240
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45b932
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax ]
mov esp ebp
pop ebp
retn 0x4
sub_45b969
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_45f240
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x407
call sub_402850
mov ecx eax
call sub_402890
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45bac9
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f240
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45f2b0
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45bb28
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f240
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45f7f0
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45bb8f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45f270
neg eax
sbb eax eax
neg eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_45f240
neg eax
sbb eax eax
inc eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45bc66
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f240
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45bcc2
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f240
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45bd1e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax ]
mov esp ebp
pop ebp
retn 0x4
sub_45bd55
push ebp
mov ebp esp
push 0xffffffff
push sub_499f21
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
call sub_405c80
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_405dc0
push eax
lea ecx [ ebp - 0x10 ]
call sub_47c3e9
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_45f240
test eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x14 ]
call sub_45f2b0
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4016b0
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_45be0a
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
call sub_402850
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_428343
mov esp ebp
pop ebp
retn 0x4
sub_45befe
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f240
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45bf31
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_44cbad
xor ecx ecx
cmp eax 0x2
setge cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax ]
mov esp ebp
pop ebp
retn 0x4
sub_45bf6e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_44cbad
xor ecx ecx
cmp eax 0x2
setge cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax ]
mov esp ebp
pop ebp
retn 0x4
sub_45bfbe
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_44cbad
xor ecx ecx
cmp eax 0x2
setge cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax ]
mov esp ebp
pop ebp
retn 0x4
sub_45c00e
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
call sub_4066d0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_45f3b0
test eax eax
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_45f390
test eax eax
jne r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45c097
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jl r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45c0ef
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jl r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45c147
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x164 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x118 ] ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0x168 ]
jl r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45c237
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x20 ]
call sub_405ca0
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x8
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_45b3c0
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
call sub_402850
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_42784e
mov esp ebp
pop ebp
retn
sub_45c299
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45ee60
neg eax
sbb eax eax
inc eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45c2e7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45ee60
sub eax 0x1
neg eax
sbb eax eax
inc eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45c338
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45ee60
xor ecx ecx
cmp eax 0x2
sete cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45c389
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45ee60
xor ecx ecx
cmp eax 0x3
sete cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45c3da
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45ee60
xor ecx ecx
cmp eax 0x4
sete cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45c42b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45ee60
xor ecx ecx
cmp eax 0x5
sete cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
call [ eax + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45c47c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45efe0
neg eax
sbb eax eax
inc eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45c4ca
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45efe0
sub eax 0x1
neg eax
sbb eax eax
inc eax
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45c53f
push ebp
mov ebp esp
push 0xffffffff
push sub_499f46
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
mov [ ebp - 0x64 ] ecx
mov ecx [ ebp - 0x64 ]
call sub_405c80
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
call sub_404f90
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_41b237
test eax eax
jne r-xdata
mov ecx [ ebp - 0x64 ]
call sub_42ce30
test eax eax
jne r-xdata
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41b22c
mov eax [ ebp - 0x4c ]
jmp r-xdata
call [ EmptyClipboard@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41b22c
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
push eax
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x1c ]
push edx
push 0x0
mov eax [ ebp - 0x18 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_41b7fb
mov eax [ ebp - 0x64 ]
cmp [ eax + 0x11c ] 0x0
je r-xdata
call [ CloseClipboard@IAT ]
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41b22c
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
imul eax eax 0x3
add eax 0x1
push eax
push 0x42
call [ GlobalAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
call [ GlobalLock@IAT ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x44 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x40 ]
call sub_45fea0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x64 ]
call sub_405c80
mov ecx eax
call sub_45ee60
push eax
lea ecx [ ebp - 0x40 ]
call sub_45fecb
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x40 ]
call sub_45feb7
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x1
push ecx
push 0x42
call [ GlobalAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
push edx
call [ GlobalLock@IAT ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x38 ]
push ecx
call sub_467a70
add esp 0xc
mov edx [ ebp - 0x14 ]
push edx
call [ GlobalUnlock@IAT ]
mov edx [ ebp - 0x1c ]
imul edx edx 0x3
mov eax [ ebp - 0x38 ]
mov [ eax + edx - 0x1 ] 0x0
mov ecx [ ebp - 0x14 ]
push ecx
call [ GlobalUnlock@IAT ]
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x48 ]
xor edx edx
mov dl [ ecx ]
push edx
push rw-data
mov eax [ ebp - 0x48 ]
imul eax eax 0x3
mov ecx [ ebp - 0x38 ]
add ecx eax
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x5c ] edx
mov eax [ ebp - 0x5c ]
push eax
call sub_47c3de
add esp 0x4
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x14 ]
push ecx
push 0x1
call [ SetClipboardData@IAT ]
neg eax
sbb eax eax
inc eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x1
mov [ ebp - 0x48 ] edx
call [ CloseClipboard@IAT ]
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_41b22c
mov eax [ ebp - 0x60 ]
sub_45c7e5
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x110
test eax eax
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x20 ]
add ecx 0x114
mov [ ebp - 0x24 ] ecx
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_450689
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_45b3c0
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x124 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
mov eax [ ecx + 0x114 ]
cmp eax [ edx + 0x168 ]
jge r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x20 ]
mov ecx [ edx + 0x248 ]
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x118 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0x20 ]
mov [ eax + 0x114 ] edx
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x164 ]
sub edx 0x1
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x118 ] edx
jne r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx + 0x124 ] 0x8
mov eax [ ebp - 0x20 ]
add eax 0x110
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0x134
call sub_45f350
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0x128
call sub_45f350
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + 0x248 ]
cdq
idiv [ ecx + 0xa0 ]
mov edx [ ebp - 0x20 ]
mov ecx [ edx + 0x13c ]
add ecx eax
mov edx [ ebp - 0x20 ]
mov [ edx + 0x13c ] ecx
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + 0x248 ]
cdq
idiv [ ecx + 0xa0 ]
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x138 ]
add ecx edx
mov edx [ ebp - 0x20 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x138 ]
cmp eax [ ecx + 0xa0 ]
jl r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x128
test edx edx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x168 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
call sub_45f2f0
push 0x0
push 0x0
push 0xffffffff
mov ecx [ ebp - 0x20 ]
call sub_457838
mov ecx [ ebp - 0x20 ]
call sub_45c237
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x138 ]
sub ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x138 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x13c ]
add ecx 0x1
mov edx [ ebp - 0x20 ]
mov [ edx + 0x13c ] ecx
mov [ ebp - 0x2c ] 0x0
mov eax [ ebp - 0x20 ]
add eax 0x12c
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
mov [ edx + 0x114 ] eax
mov [ ebp - 0x30 ] 0x0
mov edx [ ebp - 0x20 ]
add edx 0x138
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x134
test ecx ecx
je r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx + 0x124 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push 0xb
mov ecx [ ebp - 0x20 ]
call sub_457838
mov ecx [ ebp - 0x20 ]
call sub_45f2f0
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_45a8f4
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x124 ] 0x3
jne r-xdata
sub_45ca79
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16c ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x124 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x124 ]
and edx 0x1
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x124 ] 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0xffffffff
mov ecx [ ebp - 0x4 ]
call sub_45787f
mov ecx [ ebp - 0x4 ]
call sub_450ec5
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_45cb47
mov ecx [ ebp + 0x8 ]
call sub_45f810
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x124 ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x124 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
push 0xffffffff
mov ecx [ ebp - 0x4 ]
call sub_45787f
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_45cb47
mov ecx [ ebp + 0x8 ]
call sub_45f810
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x124 ] 0x8
jne r-xdata
xor eax eax
sub_45cb47
push ebp
mov ebp esp
push 0xffffffff
push sub_499f59
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x24 ] ecx
call sub_402850
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x124 ]
and ecx 0x1
test ecx ecx
je r-xdata
push 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_428388
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_47c5ff
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x130 ]
imul edx [ eax + 0xa0 ]
mov eax [ ebp - 0x24 ]
add edx [ eax + 0x12c ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x13c ]
imul ecx [ edx + 0xa0 ]
mov edx [ ebp - 0x24 ]
add ecx [ edx + 0x138 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push rw-data
lea edx [ ebp - 0x14 ]
push edx
call sub_475837
add esp 0x18
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4027c0
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4016b0
test eax eax
je r-xdata
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_428388
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
sub_45cc8f
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x164 ]
sub edx [ ecx + 0x158 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0xa0 ]
cmp [ ebp - 0xc ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0xa0 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_451bf9
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
sub ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_45cd12
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x324
call sub_41b1b0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x15c ]
imul eax [ ecx + 0xa0 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x324
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x324
call sub_47763d
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_45cc8f
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
sub_45cdda
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x324
call sub_407e10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_402780
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x324
call sub_407e30
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_45ce45
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x324
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x324
call sub_416c20
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x324
call sub_407e30
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_45cec0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x324
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x324
call sub_416c20
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x324
call sub_47763d
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_45cf3d
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
call sub_407e10
mov ecx [ ebp + 0xc ]
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_416c20
mov eax [ eax ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_407e30
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_45cf92
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x300 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x14 ]
mov [ edx ] 0xffffff
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
call sub_405c80
mov ecx eax
call sub_45f460
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_429608
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x2fc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x30c ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ eax + edx * 4 + 0x14 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + ecx * 4 + 0x34 ]
mov [ eax ] edx
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0x2fc ]
call sub_41b1b0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x40 ]
mov edx [ ebp + 0x10 ]
mov eax [ eax + ecx * 4 ]
mov [ edx ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp + 0x14 ]
mov ecx [ edx + 0x30 ]
mov [ eax ] ecx
xor eax eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0x304 ]
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x248 ]
mov eax [ ebp + 0x10 ]
mov ecx [ edx + 0x10 ]
mov [ eax ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp + 0x14 ]
mov edx [ eax + 0x30 ]
mov [ ecx ] edx
xor eax eax
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x308 ]
ja r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp + 0x10 ]
mov edx [ eax + 0x24 ]
mov [ ecx ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp + 0x14 ]
mov eax [ ecx + 0x44 ]
mov [ edx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x2fc ]
call sub_402780
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x4 ]
ja r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x248 ]
mov ecx [ ebp + 0x10 ]
mov edx [ eax + 0x20 ]
mov [ ecx ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x248 ]
mov edx [ ebp + 0x14 ]
mov eax [ ecx + 0x40 ]
mov [ edx ] eax
xor eax eax
jmp r-xdata
sub_45d161
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x300 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x14 ]
mov [ edx ] 0xffffff
xor eax eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x2fc ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x2fc ]
call sub_41b1b0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x2fc ]
call sub_402780
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x4 ]
ja r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov edx [ ebp + 0x10 ]
mov [ edx ] 0xffffff
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
sub_45d228
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x300 ]
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x300 ] eax
push 0x1
mov ecx [ ebp - 0x4 ]
add ecx 0xe0
push ecx
mov ecx [ ebp - 0x4 ]
call sub_405470
sub_45d263
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
push eax
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x30c ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
add eax 0xe0
push eax
mov ecx [ ebp - 0x4 ]
call sub_405470
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x304 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
mov [ ecx + 0x308 ] edx
sub_45d2c8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x304 ]
mov ecx [ ebp - 0x4 ]
call sub_405ca0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_45d2ee
push ebp
mov ebp esp
push 0xffffffff
push sub_499f6f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x13c
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x148 ]
call sub_405c80
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_404f70
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x148 ]
call sub_405ca0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x148 ]
mov ecx [ eax + 0x248 ]
add ecx 0x34
push ecx
mov edx [ ebp - 0x148 ]
mov eax [ edx + 0x248 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x1c ]
call sub_45f460
push eax
lea ecx [ ebp - 0x140 ]
call sub_460680
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x140 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x140 ]
call sub_45f880
mov eax [ ebp - 0x144 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x14 ] 0x1
lea ecx [ ebp - 0x140 ]
call sub_45f860
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub_45d3e2
push ebp
mov ebp esp
push 0xffffffff
push sub_499fc7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x128
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x12c ] ecx
lea ecx [ ebp - 0x88 ]
call sub_47d515
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_4035b0
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0x1021
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_47d627
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x14 ]
lea eax [ edx * 4 + 0x10 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] 0x40000
mov ecx [ ebp - 0x6c ]
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xe8 ] eax
mov edx [ ebp - 0xe8 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x130 ] ecx
cmp [ ebp - 0x130 ] 0x5
ja r-xdata
push 0xffffffff
push 0x0
push 0x3f2
call sub_4840fb
mov [ ebp - 0xe4 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_403680
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x88 ]
call sub_47d56a
mov eax [ ebp - 0xe4 ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x88 ]
push eax
mov ecx [ ebp - 0x12c ]
call sub_45dd4e
test eax eax
jne r-xdata
mov edx [ ebp - 0x130 ]
jmp [ edx * 4 + jump_table_45dd36 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp - 0x6c ]
xor edx edx
div [ ebp - 0x70 ]
imul eax [ ebp + 0x14 ]
cmp [ ebp - 0x44 ] eax
jae r-xdata
lea ecx [ ebp - 0x88 ]
call sub_47d842
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0xec ] ecx
mov edx [ ebp - 0xec ]
push edx
call sub_47c3de
add esp 0x4
push 0xffffffff
push 0x0
push 0x423
call sub_4840fb
mov [ ebp - 0xf0 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_403680
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x88 ]
call sub_47d56a
mov eax [ ebp - 0xf0 ]
jmp r-xdata
mov [ ebp - 0x74 ] sub_45e0a9
jmp r-xdata
mov [ ebp - 0x74 ] sub_45e147
jmp r-xdata
mov [ ebp - 0x74 ] sub_45e323
jmp r-xdata
mov [ ebp - 0x74 ] sub_45e5ef
jmp r-xdata
mov [ ebp - 0x74 ] sub_45e7f1
jmp r-xdata
mov [ ebp - 0x74 ] sub_45e883
mov eax [ ebp - 0x6c ]
xor edx edx
div [ ebp - 0x70 ]
imul eax [ ebp + 0x14 ]
mov [ ebp - 0x134 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x134 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0xc ]
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp - 0x90 ] edx
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp - 0x90 ]
mov [ ebp - 0x8c ] ecx
mov edx [ ebp - 0x70 ]
push edx
push 0x20
mov eax [ ebp - 0x64 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x64 ]
push ecx
mov ecx [ ebp - 0x12c ]
call sub_45dfb1
mov edx [ ebp - 0x64 ]
add edx 0xb
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x8c ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_41b7fb
mov edx [ ebp - 0x90 ]
imul edx edx 0x3
mov eax [ ebp - 0x64 ]
add eax edx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x134 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x40 ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xf4 ] eax
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x12c ]
call sub_405c80
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x5c ]
call sub_404f90
mov [ ebp - 0x3c ] eax
mov edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0x58 ]
call sub_41b1f0
mov [ ebp - 0x4 ] 0x2
push 0x0
push 0x0
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_41b237
mov eax [ ebp + 0xc ]
xor edx edx
div [ ebp + 0x14 ]
test edx edx
je r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x44 ]
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
mov eax [ ebp - 0x6c ]
xor edx edx
div [ ebp - 0x70 ]
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x8c ]
jge r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x11c ] eax
mov ecx [ ebp - 0x11c ]
push ecx
call sub_47c3de
add esp 0x4
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x120 ] edx
mov eax [ ebp - 0x120 ]
push eax
call sub_47c3de
add esp 0x4
mov [ ebp - 0x4 ] 0xc
lea ecx [ ebp - 0x88 ]
call sub_47d842
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x44 ]
push edx
lea ecx [ ebp - 0x58 ]
call sub_41b7fb
mov eax [ ebp - 0x70 ]
push eax
push 0x20
mov ecx [ ebp - 0x64 ]
push ecx
call sub_467a10
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
mov ecx [ ebp - 0x12c ]
call sub_45dfb1
mov eax [ ebp - 0x64 ]
add eax 0xb
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x44 ]
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp - 0x138 ] eax
mov eax [ ebp - 0x6c ]
xor edx edx
div [ ebp - 0x70 ]
mov [ ebp - 0x138 ] eax
jmp r-xdata
mov edx [ ebp - 0x64 ]
add edx 0x2
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x64 ]
add eax [ ebp - 0x90 ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x8c ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ ebp - 0x12c ]
call [ ebp - 0x74 ]
mov ecx [ ebp - 0x8c ]
mov edx [ ebp - 0x64 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x64 ]
mov [ ecx ] 0xd
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x64 ]
mov [ eax ] 0xa
mov ecx [ ebp - 0x64 ]
add ecx 0x1
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_47d77e
jmp r-xdata
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x38 ]
mov dl [ ecx ]
mov [ ebp - 0x68 ] dl
mov eax [ ebp - 0x64 ]
push eax
mov cl [ ebp - 0x68 ]
push ecx
mov ecx [ ebp - 0x12c ]
call sub_45ed80
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x128 ] 0x1
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x58 ]
call sub_41b22c
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_403680
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x88 ]
call sub_47d56a
mov eax [ ebp - 0x128 ]
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x44 ]
jge r-xdata
mov eax [ ebp - 0x34 ]
imul eax [ ebp + 0x14 ]
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp - 0x78 ]
push edx
lea ecx [ ebp - 0x58 ]
call sub_41b7fb
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x138 ]
mov [ ebp - 0x34 ] edx
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8c ]
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x8c ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x38 ]
add ecx 0x1
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x64 ]
add edx 0x3
mov [ ebp - 0x64 ] edx
mov edx [ ebp + 0x14 ]
imul edx edx 0x3
mov eax [ ebp - 0x64 ]
lea ecx [ eax + edx + 0x2 ]
mov [ ebp - 0x64 ] ecx
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x58 ]
push ecx
mov ecx [ ebp - 0x12c ]
call [ ebp - 0x74 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x64 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x64 ] ecx
mov edx [ ebp - 0x64 ]
mov [ edx ] 0xd
mov eax [ ebp - 0x64 ]
add eax 0x1
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x64 ]
mov [ ecx ] 0xa
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x88 ]
call sub_47d77e
jmp r-xdata
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x38 ]
mov cl [ eax ]
mov [ ebp - 0x68 ] cl
mov edx [ ebp - 0x38 ]
imul edx edx 0x3
mov eax [ ebp - 0x64 ]
add eax edx
push eax
mov cl [ ebp - 0x68 ]
push ecx
mov ecx [ ebp - 0x12c ]
call sub_45ed80
jmp r-xdata
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x34 ]
jge r-xdata
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x38 ]
add ecx 0x1
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x4 ] 0x6
mov edx [ ebp - 0x34 ]
imul edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_47d77e
jmp r-xdata
mov edx [ ebp - 0x70 ]
push edx
push 0x20
mov eax [ ebp - 0x64 ]
push eax
call sub_467a10
add esp 0xc
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x64 ]
push ecx
mov ecx [ ebp - 0x12c ]
call sub_45dfb1
mov edx [ ebp - 0x64 ]
add edx 0xb
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x48 ]
cmp ecx [ ebp + 0x14 ]
jge r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
lea eax [ edx + ecx + 0x2 ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
lea eax [ ebp - 0x58 ]
push eax
mov ecx [ ebp - 0x12c ]
call [ ebp - 0x74 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x64 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x64 ]
mov [ ecx ] 0xd
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x64 ]
mov [ eax ] 0xa
mov ecx [ ebp - 0x64 ]
add ecx 0x1
mov [ ebp - 0x64 ] ecx
mov edx [ ebp - 0x60 ]
add edx [ ebp + 0x14 ]
mov [ ebp - 0x60 ] edx
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x44 ]
sub ecx [ ebp + 0x14 ]
mov [ ebp - 0x44 ] ecx
jmp r-xdata
mov edx [ ebp - 0x60 ]
add edx [ ebp - 0x48 ]
mov al [ edx ]
mov [ ebp - 0x68 ] al
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x64 ]
add edx ecx
push edx
mov al [ ebp - 0x68 ]
push eax
mov ecx [ ebp - 0x12c ]
call sub_45ed80
jmp r-xdata
mov eax [ ebp - 0x38 ]
add eax 0x1
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x48 ]
add eax 0x1
mov [ ebp - 0x48 ] eax
sub_45d77b
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x88 ]
call sub_47d842
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0xf8 ] ecx
mov edx [ ebp - 0xf8 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xfc ] eax
mov ecx [ ebp - 0xfc ]
push ecx
call sub_47c3de
add esp 0x4
push 0xffffffff
push 0x0
push 0x423
call sub_4840fb
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xa4 ]
call sub_403680
mov eax r-xdata
retn
sub_45d9df
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x88 ]
call sub_47d842
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x104 ] ecx
mov edx [ ebp - 0x104 ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x108 ] eax
mov ecx [ ebp - 0x108 ]
push ecx
call sub_47c3de
add esp 0x4
push 0xffffffff
push 0x0
push 0x423
call sub_4840fb
mov [ ebp - 0x10c ] 0x0
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0xb8 ]
call sub_403680
mov eax r-xdata
retn
sub_45db96
mov [ ebp - 0x4 ] 0xb
lea ecx [ ebp - 0x88 ]
call sub_47d842
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x110 ] edx
mov eax [ ebp - 0x110 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x114 ]
push edx
call sub_47c3de
add esp 0x4
push 0xffffffff
push 0x0
push 0x423
call sub_4840fb
mov [ ebp - 0x118 ] 0x0
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp - 0xcc ]
call sub_403680
mov eax r-xdata
retn
sub_45dd4e
push ebp
mov ebp esp
push 0xffffffff
push sub_499fd1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x28
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x38 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
push rw-data
mov ecx [ ebp + 0xc ]
push ecx
call [ lstrcpyA@IAT ]
mov edx [ ebp + 0xc ]
push edx
call [ lstrlenA@IAT ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
push rw-data
mov eax [ ebp + 0xc ]
push eax
call [ lstrcpyA@IAT ]
mov ecx [ ebp + 0xc ]
add ecx 0x2
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
push rw-data
mov ecx [ ebp + 0xc ]
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
mov edx [ ebp + 0xc ]
add edx 0x3
mov [ ebp + 0xc ] edx
jmp r-xdata
push rw-data
mov ecx [ ebp + 0xc ]
push ecx
call [ lstrcpyA@IAT ]
mov edx [ ebp + 0xc ]
add edx 0x2
mov [ ebp + 0xc ] edx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
push rw-data
mov edx [ ebp + 0xc ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
mov eax [ ebp + 0xc ]
add eax 0x3
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x20
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0xc ]
mov [ eax ] 0xd
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0xc ]
mov [ edx ] 0xa
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x18 ]
push edx
call [ lstrlenA@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub eax 0x2
push eax
push 0x2d
mov ecx [ ebp + 0xc ]
push ecx
call sub_467a10
add esp 0xc
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
lea ecx [ eax + edx - 0x2 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0xc ]
mov [ edx ] 0xd
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0xa
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x38 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and ecx 0x8000000f
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
cdq
mov ecx 0xa
idiv ecx
push edx
push rw-data
mov edx [ ebp + 0xc ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push ecx
push rw-data
mov edx [ ebp + 0xc ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
dec ecx
or ecx 0xfffffff0
inc ecx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
sub_45dfb1
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
xor edx edx
div [ ebp + 0x10 ]
test edx edx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
div [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
sub eax edx
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x20
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] 0x9
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
jl r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x9 ] 0x20
mov edx [ ebp + 0x8 ]
mov [ edx + 0xa ] 0x20
mov eax [ ebp - 0xc ]
and eax 0xf
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x8 ]
and ecx 0xff
cmp ecx 0x9
jg r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xa ] 0x20
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov ecx 0xa
div ecx
add edx 0x30
mov [ ebp - 0x8 ] dl
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov al [ ebp - 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0xc ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov al [ ebp - 0x8 ]
add al 0x37
mov [ ebp - 0x8 ] al
mov dl [ ebp - 0x8 ]
add dl 0x30
mov [ ebp - 0x8 ] dl
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x8 ]
mov [ ecx ] dl
mov eax [ ebp - 0xc ]
shr eax 0x4
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_45e0a9
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
cmp ecx 0x20
jl r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
and edx 0xff
cmp edx 0x7f
jge r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov cl [ ebp - 0x8 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
jmp r-xdata
sub_45e147
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_41bf7d
cmp eax 0x2
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x20
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
add eax 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x4 ]
add eax 0x1
push 0x0
push 0x1
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41b237
mov edx [ ebp - 0x8 ]
and edx 0xff
cmp edx 0x20
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
cmp ecx 0xa1
jl r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xff
cmp eax 0x7f
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ecx + 0x1 ] 0x0
mov al [ ebp - 0x8 ]
push eax
call [ IsDBCSLeadByte@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xff
cmp edx 0xe0
jge r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov cl [ ebp - 0x8 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov cl [ ebp - 0x8 ]
mov [ ebp - 0xc ] cl
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov dl [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41db30
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41bc53
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov cl [ ebp - 0xc ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov cl [ ebp - 0x8 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2e
jmp r-xdata
sub_45e323
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
call sub_41bd1c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x2
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x5
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x20
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
add eax 0x1
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x10 ]
jle r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x4 ]
add eax 0x1
push 0x0
push 0x1
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41b237
mov dl [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41da60
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov dl [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41dab0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xff
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ecx + 0x1 ] 0x0
mov ecx [ ebp - 0x8 ]
and ecx 0xff
cmp ecx 0x20
jl r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xff
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov cl [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41da60
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
and edx 0xff
cmp edx 0x7f
jge r-xdata
mov al [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41dae0
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41bc53
mov edx [ ebp - 0x14 ]
shl edx 0x8
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
add ecx eax
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
sub edx 0x8080
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
call sub_46903d
add esp 0x4
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov [ edx ] cl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov [ edx ] cl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov cl [ ebp - 0x8 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41bc53
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x8 ]
mov [ ecx ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] 0x20
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_45e5ef
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
lea eax [ ebp - 0xc ]
push eax
push 0x1
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_41b237
mov eax [ ebp - 0xc ]
xor edx edx
mov ecx 0x2
div ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x20
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
mov [ edx + 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
add eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x10 ]
jle r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x8 ]
add eax 0x1
push 0x0
push 0x1
mov edx [ ebp + 0x10 ]
sub edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41b237
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
shl ecx 0x8
mov edx [ ebp - 0x4 ]
or edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x2c0 ]
mov edx [ ebp - 0x4 ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0x2e
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
mov [ edx ] 0x2e
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x100
jb r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
mov [ ecx ] 0x2e
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x20
jb r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xff
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
mov [ edx ] cl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
shr ecx 0x8
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
mov [ edx ] cl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa1
jb r-xdata
cmp [ ebp - 0x4 ] 0x7f
jb r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x2e
cmp [ ebp - 0x4 ] 0xe0
jb r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xff
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
mov [ edx ] cl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
mov [ ecx ] 0x20
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
sub_45e7f1
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
call sub_4111a0
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov [ edx ] 0x2e
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov al [ ebp - 0x8 ]
mov [ edx ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_45e883
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_41bbb8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
call sub_4111d5
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov [ edx ] 0x2e
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov al [ ebp - 0x8 ]
mov [ edx ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_45e915
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x338 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x338 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x338 ] 0x0
sub_45e953
push ebp
mov ebp esp
push 0xffffffff
push sub_499fe6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x20 ] ecx
push 0x18
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_493ab7
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push 0xffffffff
push 0x0
push 0xf109
call sub_4840fb
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_47c3de
add esp 0x4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
push r--data
mov eax [ ebp - 0x20 ]
push eax
push 0x7803
mov ecx [ ebp - 0x20 ]
call sub_45e9fe
test eax eax
jne r-xdata
sub_45e9fe
push ebp
mov ebp esp
push 0xffffffff
push sub_499ffa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x64
mov [ ebp - 0x60 ] ecx
call sub_402850
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x28 ]
call sub_45f8f0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x60 ]
call sub_405c80
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x10 ]
call sub_47e52c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x88 ] eax
mov ecx [ ebp + 0x14 ]
push ecx
push 0x1
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
call [ eax + 0xd0 ]
push 0x88
call sub_405cd0
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x34 ]
call sub_488780
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8c ]
mov [ ecx + 0x3c ] 0x1
lea edx [ ebp - 0x28 ]
push edx
push 0xe900
mov eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x54 ]
call sub_40b400
push eax
push 0x50800000
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x54 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push 0x0
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
call [ eax + 0xd0 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x8c ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x30 ]
mov [ edx + 0x8c ] eax
push 0xe802
push 0x2800
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8c ]
call sub_4887f4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
call sub_48c57e
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
call [ eax + 0xc0 ]
mov ecx eax
call sub_48c57e
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x10 ]
call [ edx + 0xd0 ]
mov eax [ ebp - 0x14 ]
mov [ eax + 0x88 ] 0x0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x58 ] edx
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov [ ebp - 0x68 ] 0x0
push 0x1
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x38 ]
call [ edx + 0x4 ]
mov [ ebp - 0x68 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_493c88
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x2c ]
push edx
push 0x0
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
mov ecx [ ebp - 0x2c ]
call [ edx + 0xe4 ]
mov [ ebp - 0x70 ] 0x0
push 0x1
mov eax [ ebp - 0x58 ]
mov edx [ eax ]
mov ecx [ ebp - 0x58 ]
call [ edx + 0x4 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
mov [ ebp - 0x6c ] 0x0
push 0x1
mov ecx [ ebp - 0x40 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x40 ]
call [ edx + 0x4 ]
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x8c ] 0x0
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x88 ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x40 ] 0x0
je r-xdata
push 0x1
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x10 ]
call sub_48c585
push 0x0
push 0x1
push 0x363
mov edx [ ebp - 0x14 ]
mov ecx [ edx + 0x8c ]
call sub_402890
push 0x1
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
mov ecx [ ebp - 0x10 ]
call [ edx + 0xc8 ]
mov ecx [ ebp - 0x10 ]
call sub_405430
mov eax 0x1
mov ecx [ ebp - 0x14 ]
call sub_493f80
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
sub_45eccf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x18 ]
call sub_45f910
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_482128
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp - 0x4 ]
call sub_45e915
sub_45ed10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_43e319
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_45ed60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x40 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
mov esp ebp
pop ebp
retn 0x4
sub_45ed80
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
sar eax 0x4
mov [ ebp - 0x4 ] al
mov ecx [ ebp - 0x4 ]
and ecx 0xff
cmp ecx 0x9
jg r-xdata
mov al [ ebp - 0x4 ]
add al 0x37
mov [ ebp - 0x4 ] al
mov dl [ ebp - 0x4 ]
add dl 0x30
mov [ ebp - 0x4 ] dl
jmp r-xdata
mov al [ ebp - 0x4 ]
add al 0x37
mov [ ebp - 0x4 ] al
mov dl [ ebp - 0x4 ]
add dl 0x30
mov [ ebp - 0x4 ] dl
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov dl [ ebp - 0x4 ]
mov [ ecx ] dl
mov eax [ ebp + 0x8 ]
and eax 0xff
and eax 0xf
mov [ ebp - 0x4 ] al
mov ecx [ ebp - 0x4 ]
and ecx 0xff
cmp ecx 0x9
jg r-xdata
mov ecx [ ebp + 0xc ]
mov dl [ ebp - 0x4 ]
mov [ ecx + 0x1 ] dl
mov eax [ ebp + 0xc ]
mov [ eax + 0x2 ] 0x20
mov esp ebp
pop ebp
retn 0x8
sub_45ee10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45ee40
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47c7b1
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45ee80
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_45eeb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ GetDeviceCaps@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_45ef10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45ef50
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45ee60
push eax
push 0x40b
mov ecx [ ebp - 0x4 ]
call sub_47a448
mov ecx eax
call sub_402890
sub_45ef50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_47a448
mov ecx eax
call sub_48a6e8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_48c57e
xor ecx ecx
cmp eax [ ebp - 0x8 ]
sete cl
mov eax ecx
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_45ef90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45ef50
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45efe0
push eax
push 0x41c
mov ecx [ ebp - 0x4 ]
call sub_47a448
mov ecx eax
call sub_402890
mov ecx [ ebp - 0x4 ]
call sub_45c237
sub_45f000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
push eax
call sub_405400
push eax
call [ LoadBitmapA@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_48070e
mov esp ebp
pop ebp
retn 0x4
sub_45f050
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x3c ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40a1e0
push eax
call [ IsWindowVisible@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_45f080
mov esp ebp
pop ebp
retn 0x4
sub_45f080
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
and ecx [ eax + 0x3c ]
neg ecx
sbb ecx ecx
and ecx 0x5
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_47bda6
mov esp ebp
pop ebp
retn 0x4
sub_45f0b0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_404f70
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ecx + 0xa0 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x164 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x164 ]
add ecx 0x1
mov edx [ ebp - 0xc ]
mov [ edx + 0x164 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ecx + 0xa0 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x168 ] edx
mov esp ebp
pop ebp
retn
sub_45f130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45ef50
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45f170
push eax
push 0x401
mov ecx [ ebp - 0x4 ]
call sub_47a448
mov ecx eax
call sub_402890
sub_45f190
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
push 0x10
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x8000
test eax eax
je r-xdata
push 0x11
call [ GetAsyncKeyState@IAT ]
movsx edx ax
and edx 0x8000
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
or al 0x2
mov [ ebp - 0x4 ] eax
sub_45f1f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x30
jb r-xdata
mov eax [ ebp + 0x8 ]
or al 0x20
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0x8 ] 0x61
jb r-xdata
cmp [ ebp + 0x8 ] 0x39
ja r-xdata
mov [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x66
ja r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
sub_45f240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45f270
xor ecx ecx
cmp eax 0x2
sete cl
mov eax ecx
mov esp ebp
pop ebp
retn
sub_45f2b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x88
call sub_41b1b0
neg eax
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn
sub_45f310
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_45f350
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45f4c0
push ebp
mov ebp esp
push 0xffffffff
push sub_49a034
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
call sub_4770ef
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_489f66
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489f66
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_45f550
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45ef50
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_45f270
push eax
push 0x403
mov ecx [ ebp - 0x4 ]
call sub_47a448
mov ecx eax
call sub_402890
sub_45f590
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_406160
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_405450
mov esp ebp
pop ebp
retn 0x4
sub_45f5c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
push eax
call [ CreateCaret@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_45f630
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
add esi 0xb8
mov ecx 0xf
mov edi [ ebp + 0x8 ]
[ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_45f660
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_45f6b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_45f6f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
push eax
call sub_405400
push eax
call [ LoadCursorA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_45f720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45ef50
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_404f70
push eax
push 0x413
mov ecx [ ebp - 0x4 ]
call sub_47a448
mov ecx eax
call sub_402890
sub_45f760
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_45ef50
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
call sub_405c80
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
call sub_45f7b0
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
push 0x404
call sub_402850
mov ecx eax
call sub_402890
sub_45f7d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ UnionRect@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_45f7f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x9c
call sub_41b1b0
neg eax
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn
sub_45f810
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_45f880
push ebp
mov ebp esp
push 0xffffffff
push sub_49a064
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_47c674
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call sub_416fa3
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_429946
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_45f8f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x14
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_467a10
add esp 0xc
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_45f930
push ebp
mov ebp esp
push 0xffffffff
push sub_49a094
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
push eax
push 0xbb
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416f70
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_401690
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xa4 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_45f9cb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3ef
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xa0
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov esp ebp
pop ebp
retn 0x4
sub_45fa20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
push 0x2
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
call sub_40d950
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_45fa45
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
push 0x1
mov ecx [ ebp - 0x14 ]
call sub_47b0ce
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0xa0
push ecx
call sub_41145e
add esp 0xc
test eax eax
je r-xdata
push 0xffffffff
push 0x0
push 0x3ec
call sub_4840fb
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_401740
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jb r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov al [ ebp - 0x4 ]
mov [ edx + 0xa8 ] al
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xa4 ]
call sub_41b1b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
je r-xdata
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x14 ]
mov ecx [ edx + 0xa4 ]
call sub_402780
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + 0xa8 ]
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx ]
cmp ecx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_478709
push 0xffffffff
push 0x0
push 0x412
call sub_4840fb
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
call sub_401740
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_45fb60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_407db0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_45fbdb
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_409900
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_4098d0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_45fc0c
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4100c0
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4098d0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_45fc58
push ebp
mov ebp esp
push 0xffffffff
push sub_49a0b2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov [ ebp - 0x50 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
push ecx
call sub_47fc89
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x3
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x4
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_406640
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
and eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
mov ecx [ ebp - 0x18 ]
call [ eax + 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
add edx 0x1c
push edx
lea ecx [ ebp - 0x4c ]
call sub_406be0
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4066b0
push 0x8
call [ GetSysColor@IAT ]
push eax
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x30 ]
push 0x5
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_406660
push 0xe
call [ GetSysColor@IAT ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x30 ]
push 0xd
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_406660
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405210
mov edx [ ebp + 0x8 ]
add edx 0x1c
push edx
lea ecx [ ebp - 0x30 ]
call sub_406be0
mov eax [ ebp - 0x30 ]
add eax 0x16
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
add edx 0x3
mov [ ebp - 0x3c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x3
mov [ ebp - 0x38 ] ecx
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_47fea7
lea ecx [ ebp - 0x34 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx ]
push eax
push rw-data
lea ecx [ ebp - 0x34 ]
push ecx
call sub_475837
add esp 0xc
push 0x0
lea edx [ ebp - 0x34 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x1c
push eax
push 0x0
mov ecx [ ebp - 0x38 ]
push ecx
mov edx [ ebp - 0x30 ]
add edx 0x2
push edx
mov ecx [ ebp - 0x18 ]
call sub_409390
lea ecx [ ebp - 0x20 ]
call sub_480765
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_406660
push 0x0
push 0x52
lea ecx [ ebp - 0x30 ]
call sub_406140
mov edx [ ebp - 0x30 ]
add edx 0x36
mov [ ebp - 0x28 ] edx
push 0x1
push 0x0
lea ecx [ ebp - 0x30 ]
call sub_4065f0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405210
push 0xf
push 0x5
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4092f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_405020
sub_45fe70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45fbaf
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_45fecb
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp + 0x14 ]
call sub_47c5ff
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x5
ja r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x24 ]
jmp [ ecx * 4 + jump_table_4600de ]
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_4603fa
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0x10 ] eax
mov edx [ ebp - 0x4 ]
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
call sub_467a10
add esp 0xc
mov [ ebp - 0x14 ] 0x2e
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x459
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x1
mov [ ebp - 0xc ] edx
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x10 ]
mov dl [ ecx ]
mov [ ebp - 0x14 ] dl
mov eax [ ebp - 0x14 ]
and eax 0xff
cmp eax 0x20
jl r-xdata
mov ecx [ ebp + 0x14 ]
call sub_4027a0
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x10 ]
mov al [ edx ]
push eax
mov ecx [ ebp + 0x14 ]
call sub_47ca2b
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x14 ]
call sub_460660
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
push edx
call sub_47c3de
add esp 0x4
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x10 ]
mov al [ edx ]
mov [ ebp - 0x14 ] al
lea ecx [ ebp - 0x14 ]
push ecx
call sub_4111a0
add esp 0x4
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x10 ]
mov al [ edx ]
mov [ ebp - 0x14 ] al
lea ecx [ ebp - 0x14 ]
push ecx
call sub_4111d5
add esp 0x4
test eax eax
jne r-xdata
mov [ ebp - 0x14 ] 0x2e
mov ecx [ ebp - 0x14 ]
and ecx 0xff
cmp ecx 0x7f
jl r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov dl [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_47ca2b
jmp r-xdata
mov [ ebp - 0x14 ] 0x2e
mov dl [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_47ca2b
jmp r-xdata
mov [ ebp - 0x14 ] 0x2e
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov dl [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x14 ]
call sub_47ca2b
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_4600f6
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x5
ja r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp - 0x14 ]
jmp [ ecx * 4 + jump_table_460269 ]
mov edx [ ebp + 0x10 ]
cmp edx [ ebp + 0x18 ]
jge r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_460281
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x459
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x18 ]
jge r-xdata
mov edx [ ebp + 0x10 ]
cmp edx [ ebp + 0x18 ]
jge r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
call sub_467a70
add esp 0xc
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
mov cl [ eax ]
mov [ ebp - 0xc ] cl
lea edx [ ebp - 0xc ]
push edx
call sub_41120a
add esp 0x4
mov eax [ ebp + 0x14 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0xc ]
mov [ eax ] cl
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
mov al [ edx ]
mov [ ebp - 0xc ] al
lea ecx [ ebp - 0xc ]
push ecx
call sub_41123f
add esp 0x4
mov edx [ ebp + 0x14 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0xc ]
mov [ edx ] al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_460281
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x14 ]
mov al [ edx ]
mov [ ebp - 0x10 ] al
mov cl [ ebp - 0x10 ]
push ecx
call [ IsDBCSLeadByte@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0xa1
jl r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0xc ]
jl r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x20
jl r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0xdf
jg r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x14 ]
mov dl [ ecx ]
mov [ ebp - 0xc ] dl
mov al [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4605c0
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x7f
jl r-xdata
mov ecx [ ebp + 0x10 ]
add ecx [ ebp - 0x8 ]
mov [ ecx ] 0x8e
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
shl ecx 0x8
mov edx [ ebp - 0xc ]
and edx 0xff
or ecx edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_4690a5
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
or ecx 0x8080
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
shr edx 0x8
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov [ eax ] dl
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
and edx 0xff
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov [ eax ] dl
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_4603fa
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
call sub_47c5ff
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0xc ]
jge r-xdata
mov ecx [ ebp + 0x10 ]
call sub_4027a0
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x10 ]
mov al [ edx ]
mov [ ebp - 0xc ] al
mov cl [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41da60
test eax eax
je r-xdata
mov cl [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x14 ]
call sub_41dab0
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
cmp edx [ ebp + 0xc ]
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
cmp eax 0x20
jl r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
cmp edx [ ebp + 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x8 ] cl
mov dl [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_41da60
test eax eax
je r-xdata
push 0x2e
mov ecx [ ebp + 0x10 ]
call sub_47ca2b
jmp r-xdata
mov [ ebp - 0xc ] 0x2e
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x7f
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x8 ] cl
mov dl [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x14 ]
call sub_460610
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
push 0x2e
mov ecx [ ebp + 0x10 ]
call sub_47ca2b
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
and ecx 0xff
shl ecx 0x8
mov edx [ ebp - 0x8 ]
and edx 0xff
or ecx edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x8080
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_46903d
add esp 0x4
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
shr edx 0x8
push edx
mov ecx [ ebp + 0x10 ]
call sub_47ca2b
mov eax [ ebp - 0x4 ]
and eax 0xff
push eax
mov ecx [ ebp + 0x10 ]
call sub_47ca2b
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov dl [ ebp - 0xc ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_47ca2b
mov dl [ ebp - 0xc ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_47ca2b
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov cl [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_47ca2b
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_460590
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45feb7
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_4605c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
cmp eax 0x40
jl r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
and ecx 0xff
cmp ecx 0xfc
jg r-xdata
mov edx [ ebp + 0x8 ]
and edx 0xff
cmp edx 0x7f
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_460610
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
cmp eax 0xa1
jl r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
and ecx 0xff
cmp ecx 0xdf
jg r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_460680
push ebp
mov ebp esp
push 0xffffffff
push sub_49a0f3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x1c ]
push eax
push 0xc4
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_4298e0
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call sub_416f70
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x110 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x114 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x118 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ecx + 0x11c ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x120 ] ecx
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_47c7b1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x108 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x10c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x18
sub_460777
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x3fd
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xc0
push eax
push 0x3ef
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0x104
push edx
push 0x3ef
mov eax [ ebp + 0x8 ]
push eax
call sub_483d6c
mov ecx [ ebp - 0x4 ]
add ecx 0x108
push ecx
push 0x3fc
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov eax [ ebp - 0x4 ]
add eax 0x10c
push eax
push 0x3f8
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483e10
mov esp ebp
pop ebp
retn 0x4
sub_460813
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_460843
mov ecx [ ebp - 0x4 ]
call sub_46094f
mov ecx [ ebp - 0x4 ]
call sub_460aa3
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_460843
push ebp
mov ebp esp
push 0xffffffff
push sub_49a106
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x108 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x120 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x120 ]
push edx
push rw-data
lea eax [ ebp - 0x10 ]
push eax
call sub_475837
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x11c ]
push eax
push rw-data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_475837
add esp 0xc
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x11c ]
push eax
push rw-data
lea ecx [ ebp - 0x10 ]
push ecx
call sub_475837
add esp 0xc
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x405
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x108 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x3fb
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_46094f
push ebp
mov ebp esp
push 0xffffffff
push sub_49a119
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
push 0x3
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x118 ]
push ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x114 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_429d69
call sub_402850
mov ecx eax
call sub_40a130
mov [ ebp - 0x1c ] eax
push 0x1
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_416e60
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_407f50
mov edx [ ebp - 0x24 ]
mov ecx [ edx + 0x110 ]
call sub_4297f0
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_407ec0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x110 ]
call sub_429830
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
push rw-data
lea edx [ ebp - 0x18 ]
push edx
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_409900
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0x110 ]
call sub_429688
push eax
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0x5c
call sub_4098d0
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_460aa3
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
xor ecx ecx
cmp [ eax + 0x10c ] 0x0
sete cl
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
push 0x405
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp - 0x4 ]
push eax
push 0x3fb
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x464
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0xc0
call sub_47bde8
mov eax [ ebp - 0x4 ]
push eax
push 0x465
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x3fc
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x4 ]
push edx
push 0x3fe
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
xor eax eax
cmp [ ebp - 0x4 ] 0x0
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_460b7f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_47b0ce
xor eax eax
cmp [ ebp + 0x8 ] 0x3fe
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0xc0
call sub_4171b1
mov ecx [ ebp - 0x8 ]
call sub_460843
mov esp ebp
pop ebp
retn 0x4
sub_460bc1
push ebp
mov ebp esp
push 0xffffffff
push sub_49a135
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
mov [ ebp - 0x3c ] ecx
push 0x1
mov ecx [ ebp - 0x3c ]
call sub_47b0ce
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x10c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x0
mov ecx [ ebp - 0x3c ]
add ecx 0x104
call sub_4027d0
movsx ecx al
cmp ecx 0x2b
je r-xdata
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x3c ]
mov ecx [ ecx + 0x110 ]
call sub_429830
mov [ ebp - 0x10 ] eax
push 0xffffffff
push 0x0
push 0x421
call sub_4840fb
mov ecx [ ebp - 0x3c ]
add ecx 0x5c
call sub_47be0f
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x3c ]
add ecx 0x104
call sub_4027d0
movsx eax al
cmp eax 0x2d
jne r-xdata
push 0x0
mov ecx [ ebp - 0x3c ]
add ecx 0x104
call sub_4027d0
movsx edx al
cmp edx 0x2d
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x104
push ecx
lea ecx [ ebp - 0x18 ]
call sub_47c761
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0x108 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
call sub_41145e
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x104
call sub_4027a0
sub eax 0x1
push eax
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x3c ]
add ecx 0x104
call sub_47543b
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_47c761
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_47c674
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x108 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x11c ]
xor eax eax
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x120 ]
xor eax eax
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x48 ]
ja r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
push 0xffffffff
push 0x0
push 0x3ec
call sub_4840fb
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x120 ]
jbe r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x11c ]
jbe r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x3c ]
call sub_47bb2c
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x28 ]
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
jb r-xdata
push 0x3ef
mov ecx [ ebp - 0x3c ]
call sub_47bb2c
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x3c ]
call sub_47bb2c
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x30 ]
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0x11c ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0xffffffff
push 0x0
push 0x3eb
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x3c ]
call sub_47bb2c
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x2c ]
call sub_401740
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
ja r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x4c ]
ja r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x11c ] eax
mov ecx [ ebp - 0x3c ]
call sub_478709
cmp [ ebp - 0x24 ] 0x10000000
jb r-xdata
jmp r-xdata
sub_460f40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f880
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_460f70
push ebp
mov ebp esp
push 0xffffffff
push sub_49a173
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xc0
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_4093d0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_4028f0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0xd8 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0xdc ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_461027
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x405
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x98
push eax
push 0x41d
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0xd4
push edx
push 0x405
mov eax [ ebp + 0x8 ]
push eax
call sub_483d6c
mov esp ebp
pop ebp
retn 0x4
sub_461094
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xe0 ] ecx
mov edx [ ebp + 0x8 ]
push edx
push 0xc0
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x8
sub_4610be
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_4612f8
mov ecx [ ebp - 0x4 ]
call sub_4611bd
mov ecx [ ebp - 0x4 ]
call sub_4610ff
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47be0f
xor eax eax
mov esp ebp
pop ebp
retn
sub_4610ff
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0xd4
call sub_47c5ff
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xdc ]
push edx
push rw-data
mov eax [ ebp - 0x4 ]
add eax 0xd4
push eax
call sub_475837
add esp 0xc
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov esp ebp
pop ebp
retn
sub_461188
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xd8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0xdc ] eax
mov ecx [ ebp - 0x4 ]
call sub_4611bd
mov ecx [ ebp - 0x4 ]
call sub_4610ff
mov esp ebp
pop ebp
retn 0x14
sub_4611bd
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_402970
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xd8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xe0 ]
call sub_402780
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ edx + 0xdc ]
cmp ecx [ eax + 0x4 ]
sbb edx edx
inc edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x14 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xdc ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
push 0x463
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x10 ]
cmp [ edx + 0xd8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
push 0x464
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x10 ]
xor eax eax
cmp [ edx + 0xd8 ] 0x0
setne al
push eax
push 0x462
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x10 ]
xor edx edx
cmp [ ecx + 0xd8 ] 0x0
setne dl
push edx
push 0x465
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp - 0x10 ]
xor ecx ecx
cmp [ eax + 0xd8 ] 0x0
setne cl
push ecx
push 0x420
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_4612f8
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_402ad0
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xe0 ]
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
push 0xffffffff
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_4029a0
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xe0 ]
call sub_402780
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_402aa0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_46137c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x98
call sub_402970
push eax
push 0x1
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4613ac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x4
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4613cf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x5
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4613f2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x6
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_461415
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x7
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_461438
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x3
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_46145b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x2
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_46147e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x8
push 0x41d
mov ecx [ ebp - 0x4 ]
call sub_4066d0
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4614c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d370
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4614f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xc3
mov ecx [ ebp - 0x4 ]
call sub_478369
mov ecx [ ebp - 0x4 ]
mov [ ecx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_461561
push ebp
mov ebp esp
push 0xffffffff
push sub_49a189
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0x2
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
and eax 0x4
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0xffffffff
jne r-xdata
push 0xe707
lea ecx [ ebp - 0x10 ]
call sub_47e84a
lea ecx [ ebp - 0x10 ]
call sub_47c5ff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
and edx 0x8
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
add ecx 0x1798
push ecx
lea ecx [ ebp - 0x10 ]
call sub_47e84a
lea ecx [ ebp - 0x10 ]
call sub_47c5ff
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x45e
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
push rw-data
lea edx [ ebp - 0x10 ]
push edx
call sub_475837
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
add eax 0x17a2
push eax
lea ecx [ ebp - 0x10 ]
call sub_47e84a
lea ecx [ ebp - 0x10 ]
call sub_47c5ff
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x45f
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
push 0x460
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bc7c
sub_4616c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40d3e0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4616f0
push ebp
mov ebp esp
push 0xffffffff
push sub_49a1ac
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_4770bc
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_477524
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_46174e
push ebp
mov ebp esp
push 0xffffffff
push sub_49a1c2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_46327b
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_4770ef
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4617a2
push ebp
mov ebp esp
push 0xffffffff
push sub_49a1d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x118
mov [ ebp - 0x124 ] ecx
push 0x104
lea eax [ ebp - 0x118 ]
push eax
call sub_411190
push eax
call [ GetModuleFileNameA@IAT ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x118 ]
mov [ ebp - 0x11c ] ecx
lea edx [ ebp - 0x118 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x1 ] 0x0
lea ecx [ ebp - 0x120 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x1771
lea ecx [ ebp - 0x120 ]
call sub_47e84a
lea ecx [ ebp - 0x120 ]
call sub_4027c0
push eax
lea ecx [ ebp - 0x118 ]
push ecx
call [ lstrcatA@IAT ]
lea edx [ ebp - 0x118 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_47c7b1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x120 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x11c ]
movsx eax [ edx ]
cmp eax 0x5c
jne r-xdata
mov edx [ ebp - 0x11c ]
push edx
call [ CharNextA@IAT ]
mov [ ebp - 0x11c ] eax
jmp r-xdata
mov ecx [ ebp - 0x11c ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x11c ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
sub_4618a2
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx [ ebp + 0xc ]
sbb eax eax
neg eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xff
cmp ecx 0x2f
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
cmp eax 0x20
je r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_461954
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xff
cmp ecx 0x9
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx 0xff
cmp edx 0xd
je r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
and eax 0xff
cmp eax 0xa
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
jmp r-xdata
sub_461954
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov al [ edx ]
mov [ ebp - 0x4 ] al
mov ecx [ ebp - 0x4 ]
and ecx 0xff
cmp ecx 0x2f
je r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
jb r-xdata
mov edx [ ebp - 0x4 ]
and edx 0xff
cmp edx 0x2a
je r-xdata
mov edx [ ebp - 0x4 ]
and edx 0xff
cmp edx 0x2f
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov cl [ eax ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
and edx 0xff
cmp edx 0x2a
jne r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov cl [ eax ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
and edx 0xff
cmp edx 0xd
jne r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xff
cmp eax 0x2f
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov cl [ eax ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x4 ]
and edx 0xff
cmp edx 0x2f
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov cl [ eax ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x4 ]
and edx 0xff
cmp edx 0xa
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
cmp eax 0x2a
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
xor eax eax
jmp r-xdata
sub_461b0d
push ebp
mov ebp esp
push 0xffffffff
push sub_49a1eb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
lea ecx [ ebp - 0x18 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov cl [ eax ]
mov [ ebp - 0x10 ] cl
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x20
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_47c761
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov eax [ ebp - 0x1c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x9
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0xd
je r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0xa
je r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x2c
je r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0xff
cmp ecx 0x3b
je r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
cmp edx 0x2f
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
cmp eax 0x5b
jne r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov cl [ ebp - 0x10 ]
push ecx
call [ IsDBCSLeadByte@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov dl [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_47ca2b
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
sub_461c5e
push ebp
mov ebp esp
push 0xffffffff
push sub_49a1fe
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4617a2
lea ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
call sub_461ccb
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_461ccb
push ebp
mov ebp esp
push 0xffffffff
push sub_49a379
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x168
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x160 ] ecx
lea ecx [ ebp - 0x30 ]
call sub_47d515
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x20
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_47d627
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x30 ]
call sub_47d921
mov [ ebp - 0x164 ] eax
mov ecx [ ebp - 0x164 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov [ ebp - 0x110 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_47d56a
mov eax [ ebp - 0x110 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x18 ]
add edx 0x1
push edx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0x118 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_47d744
jmp r-xdata
mov [ ebp - 0x11c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_47d56a
mov eax [ ebp - 0x11c ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x30 ]
call sub_47d842
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4c ]
call sub_401690
mov [ ebp - 0x4 ] 0x9
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x18 ]
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x150 ] eax
mov ecx [ ebp - 0x150 ]
push ecx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x154 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_47d56a
mov eax [ ebp - 0x154 ]
jmp r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_461b0d
test eax eax
jne r-xdata
jmp r-xdata
push rw-data
lea eax [ ebp - 0x4c ]
push eax
call sub_4635b0
and eax 0xff
test eax eax
je r-xdata
push 0xffffffff
push 0x10
push 0x7d9
call sub_4840fb
jmp r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
push 0xffffffff
push 0x10
push 0x7d9
call sub_4840fb
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x158 ] edx
mov eax [ ebp - 0x158 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x160 ]
call sub_46327b
mov [ ebp - 0x15c ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4c ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_47d56a
mov eax [ ebp - 0x15c ]
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_461b0d
test eax eax
jne r-xdata
push 0xffffffff
push 0x10
push 0x7d8
call sub_4840fb
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x160 ]
call sub_463209
test eax eax
jne r-xdata
push 0xffffffff
push 0x10
push 0x7d8
call sub_4840fb
jmp r-xdata
push 0x1c
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x134 ] eax
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x134 ] 0x0
je r-xdata
lea ecx [ ebp - 0xa8 ]
call sub_401690
mov [ ebp - 0x4 ] 0xa
mov eax [ ebp - 0x4c ]
push eax
push 0x7da
lea ecx [ ebp - 0xa8 ]
push ecx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xa8 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xa8 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x168 ] 0x0
mov ecx [ ebp - 0x134 ]
call sub_463400
mov [ ebp - 0x168 ] eax
jmp r-xdata
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4633d0
mov [ ebp - 0x34 ] al
mov eax [ ebp - 0x34 ]
and eax 0xff
cmp eax 0x7b
je r-xdata
lea ecx [ ebp - 0xac ]
call sub_401690
mov [ ebp - 0x4 ] 0xc
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
push eax
push 0x7d2
lea ecx [ ebp - 0xac ]
push ecx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xac ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xac ]
call sub_47c674
jmp r-xdata
mov edx [ ebp - 0x168 ]
mov [ ebp - 0x130 ] edx
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp - 0x130 ]
mov [ ebp - 0x50 ] eax
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x50 ]
add ecx 0x8
call sub_477524
mov ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp - 0x160 ]
add ecx 0x4
call sub_407e30
lea edx [ ebp - 0x4c ]
push edx
mov ecx [ ebp - 0x50 ]
call sub_47c761
mov eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
lea ecx [ ebp - 0xb0 ]
call sub_401690
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
push edx
push 0x7d7
lea eax [ ebp - 0xb0 ]
push eax
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xb0 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xb0 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x3c ] 0x0
lea ecx [ ebp - 0xb4 ]
call sub_401690
mov [ ebp - 0x4 ] 0xe
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d2
lea edx [ ebp - 0xb4 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xb4 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xb4 ]
call sub_47c674
jmp r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4c ]
push ecx
mov edx [ ebp - 0x44 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x160 ]
call sub_461b0d
test eax eax
jne r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x54 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x160 ]
add ecx 0x4
call sub_41b1b0
sub eax 0x1
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x100 ]
call sub_401690
mov [ ebp - 0x4 ] 0x23
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
push eax
push 0x7d1
lea ecx [ ebp - 0x100 ]
push ecx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0x100 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0x100 ]
call sub_47c674
jmp r-xdata
push 0x1
push 0x7d
lea ecx [ ebp - 0x13c ]
call sub_4753f2
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0x13c ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
call sub_4027f0
mov [ ebp - 0x138 ] al
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0x13c ]
call sub_47c674
mov eax [ ebp - 0x138 ]
and eax 0xff
test eax eax
je r-xdata
lea ecx [ ebp - 0xb8 ]
call sub_401690
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
push edx
push 0x7d5
lea eax [ ebp - 0xb8 ]
push eax
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xb8 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xb8 ]
call sub_47c674
jmp r-xdata
mov edx [ ebp - 0xa0 ]
cmp edx [ ebp - 0x3c ]
jge r-xdata
push 0x20
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x4 ] 0x14
cmp [ ebp - 0x144 ] 0x0
je r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xa0 ]
push eax
mov ecx [ ebp - 0x50 ]
add ecx 0x8
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x48 ]
cmp [ edx + 0x4 ] 0x8
je r-xdata
mov [ ebp - 0x16c ] 0x0
mov ecx [ ebp - 0x144 ]
call sub_463450
mov [ ebp - 0x16c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x160 ]
call sub_4633d0
mov [ ebp - 0x34 ] al
mov ecx [ ebp - 0x34 ]
and ecx 0xff
cmp ecx 0x3b
je r-xdata
lea ecx [ ebp - 0xbc ]
call sub_401690
mov [ ebp - 0x4 ] 0x11
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d2
lea edx [ ebp - 0xbc ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xbc ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xbc ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x104 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x48 ]
mov [ eax ] 0x0
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebp - 0x140 ]
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x48 ]
push edx
mov ecx [ ebp - 0x50 ]
add ecx 0x8
call sub_407e30
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x54 ]
mov [ eax + 0x18 ] ecx
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x44 ]
jne r-xdata
lea ecx [ ebp - 0xc0 ]
call sub_401690
mov [ ebp - 0x4 ] 0x12
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
push eax
push 0x7d2
lea ecx [ ebp - 0xc0 ]
push ecx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xc0 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xc0 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x104 ]
cmp ecx [ ebp - 0xa4 ]
jge r-xdata
mov ecx [ ebp - 0xa0 ]
add ecx 0x1
mov [ ebp - 0xa0 ] ecx
mov eax [ ebp - 0x48 ]
mov [ eax + 0x1c ] 0x0
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0xc4 ]
call sub_401690
mov [ ebp - 0x4 ] 0x13
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d5
lea edx [ ebp - 0xc4 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xc4 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xc4 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x104 ]
cmp eax [ ebp - 0xa4 ]
jne r-xdata
mov edx [ ebp - 0x104 ]
push edx
mov ecx [ ebp - 0x160 ]
add ecx 0x4
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x98 ] eax
mov ecx [ ebp - 0x98 ]
push ecx
mov edx [ ebp - 0x48 ]
add edx 0x8
push edx
call sub_4027f0
and eax 0xff
test eax eax
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_461b0d
test eax eax
jne r-xdata
lea ecx [ ebp - 0xc8 ]
call sub_401690
mov [ ebp - 0x4 ] 0x15
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d6
lea edx [ ebp - 0xc8 ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xc8 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xc8 ]
call sub_47c674
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x4 ] 0x1
mov edx [ ebp - 0x48 ]
mov [ edx ] 0x2
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x10c ]
call sub_401690
mov [ ebp - 0x4 ] 0x24
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d0
lea edx [ ebp - 0x10c ]
push edx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0x10c ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0x10c ]
call sub_47c674
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x98 ]
mov [ eax + 0x1c ] ecx
mov edx [ ebp - 0x48 ]
cmp [ edx + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x48 ]
add ecx 0xc
call sub_47c761
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
lea ecx [ ebp - 0xcc ]
call sub_401690
mov [ ebp - 0x4 ] 0x16
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d5
lea edx [ ebp - 0xcc ]
push edx
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xcc ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xcc ]
call sub_47c674
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x4 ] 0x1
mov ecx [ ebp - 0x48 ]
mov [ ecx ] 0x1
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x104 ]
add eax 0x1
mov [ ebp - 0x104 ] eax
mov ecx [ ebp - 0x48 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ ebp - 0x48 ]
mov edx [ eax + 0x4 ]
imul edx [ ecx + 0x10 ]
mov eax [ ebp - 0x48 ]
imul edx [ eax + 0x14 ]
mov [ ebp - 0x9c ] edx
jmp r-xdata
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4633d0
mov [ ebp - 0x34 ] al
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x34 ]
and eax 0xff
cmp eax 0x5b
jne r-xdata
lea ecx [ ebp - 0xd0 ]
call sub_401690
mov [ ebp - 0x4 ] 0x17
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
push eax
push 0x7d3
lea ecx [ ebp - 0xd0 ]
push ecx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xd0 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xd0 ]
call sub_47c674
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ edx + 0x4 ] 0x2
mov eax [ ebp - 0x48 ]
mov [ eax ] 0x0
mov [ ebp - 0x40 ] 0x2
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x98 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x9c ] eax
mov edx [ ebp - 0x98 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0x4 ]
imul ecx [ eax + 0x10 ]
mov [ ebp - 0x9c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov edx [ ecx + 0x4 ]
add edx [ ebp - 0x9c ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xa0 ]
add ecx 0x1
mov [ ebp - 0x108 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x38 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x38 ] 0x1
jge r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x44 ]
jae r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x108 ]
cmp eax [ ebp - 0x3c ]
jge r-xdata
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x170 ] edx
mov [ ebp - 0x170 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x44 ]
jne r-xdata
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4633d0
mov [ ebp - 0x34 ] al
mov eax [ ebp - 0x34 ]
and eax 0xff
cmp eax 0x30
jl r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x4 ] 0x3
mov edx [ ebp - 0x48 ]
mov [ edx ] 0x2
mov [ ebp - 0x40 ] 0x2
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x108 ]
push ecx
mov ecx [ ebp - 0x50 ]
add ecx 0x8
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0x94 ] edx
mov eax [ ebp - 0x94 ]
mov ecx [ eax + 0x18 ]
add ecx [ ebp - 0x9c ]
mov edx [ ebp - 0x94 ]
mov [ edx + 0x18 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x174 ] eax
mov [ ebp - 0x174 ] 0x1
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
jge r-xdata
mov eax [ ebp - 0x34 ]
and eax 0xff
cmp eax 0x5d
je r-xdata
lea ecx [ ebp - 0xd4 ]
call sub_401690
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d4
lea edx [ ebp - 0xd4 ]
push edx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xd4 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xd4 ]
call sub_47c674
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34 ]
and ecx 0xff
cmp ecx 0x39
jle r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x4 ] 0x3
mov ecx [ ebp - 0x48 ]
mov [ ecx ] 0x1
mov [ ebp - 0x40 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x108 ]
add edx 0x1
mov [ ebp - 0x108 ] edx
mov edx [ ebp - 0x34 ]
and edx 0xff
cmp edx 0x3b
je r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x1
mov [ ebp - 0x3c ] ecx
push 0x20
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x4 ] 0x20
cmp [ ebp - 0x14c ] 0x0
je r-xdata
mov ecx [ ebp - 0x40 ]
imul ecx [ ebp - 0x170 ]
imul ecx [ ebp - 0x174 ]
mov edx [ ebp - 0x54 ]
add edx ecx
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x34 ]
and eax 0xff
cmp eax 0x2c
jne r-xdata
mov eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
lea ecx [ ebp - 0xd8 ]
call sub_401690
mov [ ebp - 0x4 ] 0x19
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d4
lea edx [ ebp - 0xd8 ]
push edx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xd8 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xd8 ]
call sub_47c674
jmp r-xdata
mov edx [ ebp - 0x38 ]
imul edx edx 0xa
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x34 ]
and eax 0xff
mov ecx [ ebp - 0x38 ]
lea edx [ ecx + eax - 0x30 ]
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ edx + 0x4 ] 0x4
mov eax [ ebp - 0x48 ]
mov [ eax ] 0x0
mov [ ebp - 0x40 ] 0x4
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x44 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
lea ecx [ ebp - 0xf8 ]
call sub_401690
mov [ ebp - 0x4 ] 0x21
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
push eax
push 0x7d3
lea ecx [ ebp - 0xf8 ]
push ecx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xf8 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xf8 ]
call sub_47c674
jmp r-xdata
mov [ ebp - 0x178 ] 0x0
mov ecx [ ebp - 0x14c ]
call sub_463450
mov [ ebp - 0x178 ] eax
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
lea ecx [ ebp - 0xdc ]
call sub_401690
mov [ ebp - 0x4 ] 0x1a
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
push edx
push 0x7d3
lea eax [ ebp - 0xdc ]
push eax
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xdc ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xdc ]
call sub_47c674
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x1
mov [ ebp - 0x3c ] ecx
jmp r-xdata
lea ecx [ ebp - 0xfc ]
call sub_401690
mov [ ebp - 0x4 ] 0x22
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
push edx
push 0x7d2
lea eax [ ebp - 0xfc ]
push eax
call sub_47584a
add esp 0xc
push 0x0
push 0x10
lea ecx [ ebp - 0xfc ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xfc ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
mov edx [ ebp - 0x178 ]
mov [ ebp - 0x148 ] edx
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp - 0x148 ]
mov [ ebp - 0xf4 ] eax
mov ecx [ ebp - 0xf4 ]
push ecx
mov ecx [ ebp - 0x50 ]
add ecx 0x8
call sub_407e30
mov edx [ ebp - 0xf4 ]
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0xf4 ]
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ ebp - 0xf4 ]
mov eax [ ebp - 0x54 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp - 0xf4 ]
mov [ ebp - 0x48 ] ecx
jmp r-xdata
lea ecx [ ebp - 0xe0 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1b
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
push edx
push 0x7d4
lea eax [ ebp - 0xe0 ]
push eax
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xe0 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xe0 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x44 ]
jne r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x4 ] 0x5
mov edx [ ebp - 0x48 ]
mov [ edx ] 0x2
mov [ ebp - 0x40 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x44 ]
jae r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x160 ]
call sub_4633d0
mov [ ebp - 0x34 ] al
mov edx [ ebp - 0x34 ]
and edx 0xff
cmp edx 0x5b
jne r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x4 ] 0x5
mov ecx [ ebp - 0x48 ]
mov [ ecx ] 0x1
mov [ ebp - 0x40 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x44 ]
jae r-xdata
mov edx [ ebp - 0x48 ]
mov [ edx + 0x4 ] 0x6
mov eax [ ebp - 0x48 ]
mov [ eax ] 0xffffffff
mov [ ebp - 0x40 ] 0x4
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x44 ]
jne r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x160 ]
call sub_4633d0
mov [ ebp - 0x34 ] al
mov edx [ ebp - 0x34 ]
and edx 0xff
cmp edx 0x30
jl r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x34 ]
and edx 0xff
cmp edx 0x5d
je r-xdata
lea ecx [ ebp - 0xe4 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1c
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
push eax
push 0x7d4
lea ecx [ ebp - 0xe4 ]
push ecx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xe4 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xe4 ]
call sub_47c674
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
and eax 0xff
cmp eax 0x39
jle r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x4 ] 0x7
mov edx [ ebp - 0x48 ]
mov [ edx ] 0xffffffff
mov [ ebp - 0x40 ] 0x8
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x44 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x160 ]
call sub_4618a2
test eax eax
jne r-xdata
lea ecx [ ebp - 0xe8 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1d
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
push eax
push 0x7d4
lea ecx [ ebp - 0xe8 ]
push ecx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xe8 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xe8 ]
call sub_47c674
jmp r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx ecx 0xa
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x34 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx - 0x30 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x4 ] 0x8
mov ecx [ ebp - 0x48 ]
mov [ ecx ] 0x0
lea edx [ ebp - 0x4c ]
push edx
mov ecx [ ebp - 0x48 ]
add ecx 0x8
call sub_47c761
mov [ ebp - 0x40 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0xec ]
call sub_401690
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d3
lea edx [ ebp - 0xec ]
push edx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xec ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xec ]
call sub_47c674
jmp r-xdata
lea ecx [ ebp - 0xf0 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1f
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
push ecx
push 0x7d4
lea edx [ ebp - 0xf0 ]
push edx
call sub_47584a
add esp 0x10
push 0x0
push 0x10
lea ecx [ ebp - 0xf0 ]
call sub_4027c0
push eax
call sub_4840c3
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0xf0 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x44 ]
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x160 ]
call sub_4633d0
mov [ ebp - 0x34 ] al
sub_461df7
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x120 ] ecx
mov edx [ ebp - 0x120 ]
push edx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x7c ]
call sub_403680
mov eax r-xdata
retn
sub_461e5e
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x128 ] eax
mov ecx [ ebp - 0x128 ]
push ecx
call sub_47c3de
add esp 0x4
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x90 ]
call sub_403680
mov eax r-xdata
retn
sub_463209
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp eax [ ebp - 0x8 ]
sete cl
mov eax ecx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call sub_428880
and eax 0xff
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_46327b
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
add ecx 0x4
call sub_41b1b0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x4
call sub_407e10
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x2c ]
add ecx 0x4
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x8
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x8
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x34 ] 0x0
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_4634e0
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_4634b0
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_4633a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_46174e
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_4633d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_463400
push ebp
mov ebp esp
push 0xffffffff
push sub_49a399
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_4770bc
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_463450
push ebp
mov ebp esp
push 0xffffffff
push sub_49a3bc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_401690
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4634b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_463510
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_4634e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_463560
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_463510
push ebp
mov ebp esp
push 0xffffffff
push sub_49a3dc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_463560
push ebp
mov ebp esp
push 0xffffffff
push sub_49a3f9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_4770ef
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4635d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4093d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_46362f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x3c ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x18 ]
mov [ edx + 0x40 ] eax
mov [ ebp - 0x4 ] 0x48000000
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_489e85
mov esp ebp
pop ebp
retn 0x14
sub_463671
push ebp
mov ebp esp
push 0xffffffff
push sub_49a422
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
mov [ ebp - 0x7c ] ecx
mov eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_4805ce
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x78 ]
call sub_428cd0
lea ecx [ ebp - 0x78 ]
push ecx
mov ecx [ ebp - 0x7c ]
call sub_405410
lea edx [ ebp - 0x78 ]
push edx
lea ecx [ ebp - 0x68 ]
call sub_48027a
mov eax [ ebp - 0x7c ]
mov ecx [ eax + 0x40 ]
push ecx
lea ecx [ ebp - 0x14 ]
call sub_4807cb
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_405210
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_405020
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x68 ]
call sub_480640
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_463710
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_463603
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_463740
push ebp
mov ebp esp
push 0xffffffff
push sub_49a454
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x10 ]
push eax
push 0xc1
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_410070
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_410070
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xd4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0xd8 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
call sub_4770bc
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
sub_4637de
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x5c
push ecx
push 0x400
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x98
push eax
push 0x3fd
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov esp ebp
pop ebp
retn 0x4
sub_463833
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_4639a9
mov ecx [ ebp - 0x4 ]
call sub_46385b
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_46385b
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_407f50
mov ecx [ ebp - 0x1c ]
add ecx 0x5c
call sub_407f50
mov ecx [ ebp - 0x1c ]
add ecx 0xdc
call sub_41b1b0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0xd8 ]
call sub_41b1b0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
push 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_407ec0
push 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x5c
call sub_407ec0
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0xdc
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0x4 ]
cmp ecx [ eax + 0xd4 ]
jne r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0xd8 ]
call sub_402780
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x4 ] eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x5c
call sub_409900
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x5c
call sub_4098d0
mov ecx [ ebp - 0x10 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_409900
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_4098d0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
sub_4639a9
push ebp
mov ebp esp
push 0xffffffff
push sub_49a472
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x48 ]
add ecx 0xdc
call sub_407e10
push 0x0
mov ecx [ ebp - 0x48 ]
call sub_47a448
mov ecx eax
call sub_48a6e8
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_4036e0
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_4841fc
mov [ ebp - 0x38 ] eax
lea ecx [ ebp - 0x24 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_48420e
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x54 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x58 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov edx [ eax ]
mov ecx [ ebp - 0x34 ]
call [ edx + 0x60 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
jmp r-xdata
push 0x8
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4c ] 0x0
mov ecx [ ebp - 0x44 ]
call sub_40a150
mov [ ebp - 0x4c ] eax
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x2c ] ecx
lea edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x34 ]
mov edx [ eax ]
mov ecx [ ebp - 0x34 ]
call [ edx + 0x64 ]
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x2c ]
mov ecx [ edx + 0x4 ]
call sub_47a2e8
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_4796e8
mov ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x48 ]
add ecx 0xdc
call sub_407e30
jmp r-xdata
sub_463b1c
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0xdc
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0xdc
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
call sub_4640d0
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_463b95
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_47b0ce
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407ef0
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407f20
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x4 ] eax
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407e60
sub eax 0x1
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407ec0
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0xdc
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407e60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_4027c0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_4100c0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_4098d0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407ec0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407ef0
cmp eax [ ebp - 0x14 ]
jl r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_463cc7
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407ef0
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407f20
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x4 ] eax
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407e60
sub eax 0x1
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407ec0
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
add ecx 0xdc
call sub_416c20
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407e60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_4027c0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_4100c0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_4098d0
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407ec0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x98
call sub_407ef0
cmp eax [ ebp - 0x14 ]
jl r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_463dec
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x5c
call sub_407f50
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_407e90
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_407ef0
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_42c870
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_407f50
mov ecx [ ebp - 0x1c ]
add ecx 0xdc
call sub_41b1b0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_407ec0
push 0x1
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_42c870
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0xdc
call sub_416c20
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0xd4 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_409900
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x98
call sub_4098d0
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_463f00
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x98
call sub_407e60
neg eax
sbb eax eax
neg eax
push eax
push 0x42f
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x8 ]
add ecx 0x5c
call sub_407e60
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
push 0x45b
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x45c
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_463f7a
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xd8 ]
call sub_407e10
mov ecx [ ebp - 0x18 ]
add ecx 0xdc
call sub_41b1b0
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407e60
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
call sub_463b1c
mov ecx [ ebp - 0x18 ]
call sub_478709
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0xdc
call sub_416c20
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x5c
call sub_407ef0
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x18 ]
mov ecx [ edx + 0xd8 ]
call sub_407e30
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0xd4 ]
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_464075
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0xe146
push 0x111
call sub_402850
mov ecx eax
call sub_402890
mov esp ebp
pop ebp
retn
sub_4640a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45f4c0
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4640d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_464100
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_464139
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x7c
call sub_47c3b5
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1f
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov eax 0x1f
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_464195
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x36
jae r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x4 ] 0x36
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx * 8 + rw-data ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax * 8 + rw-data ]
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_4641ee
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0xc
je r-xdata
push 0x30
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_468550
add esp 0xc
neg eax
sbb eax eax
inc eax
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_464281
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_409900
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_4098d0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_4642b2
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4100c0
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_4098d0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_4642fe
push ebp
mov ebp esp
push 0xffffffff
push sub_49a489
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
mov [ ebp - 0x4c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
push ecx
call sub_47fc89
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x3
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x4
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_406640
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
lea ecx [ ebp - 0x48 ]
call sub_406be0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x8
call [ GetSysColor@IAT ]
push eax
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x30 ]
push 0x5
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_406660
push 0xe
call [ GetSysColor@IAT ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x18 ]
call [ edx + 0x30 ]
push 0xd
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_406660
jmp r-xdata
lea edx [ ebp - 0x48 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_4066b0
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + 0xc ]
test eax eax
je r-xdata
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_47fea7
push 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x1c
push edx
push 0x0
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x2
push ecx
mov ecx [ ebp - 0x18 ]
call sub_409390
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_405020
lea ecx [ ebp - 0x20 ]
call sub_480765
push 0xf
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_406660
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x18 ]
call sub_405210
push 0xf
push 0x5
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_4092f0
push 0x0
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x3c ]
call sub_464540
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov ecx [ ebp - 0x18 ]
call sub_405210
mov edx [ ebp + 0x8 ]
add edx 0x1c
push edx
lea ecx [ ebp - 0x30 ]
call sub_406be0
mov eax [ ebp - 0x30 ]
add eax 0x16
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
add edx 0x3
mov [ ebp - 0x38 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x3
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0x16
mov [ ebp - 0x48 ] ecx
sub_464510
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_46423f
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_464540
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_405110
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ ImageList_Draw@IAT ]
mov esp ebp
pop ebp
retn 0x14
sub_464580
push ebp
mov ebp esp
push 0xffffffff
push sub_49a4aa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0x1fc
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_4645fb
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4645fb
push ebp
mov ebp esp
push 0xffffffff
push sub_49a4f9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0xb2
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_4028f0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_464220
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_464220
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14c ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x150 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x154
call sub_47671e
mov [ ebp - 0x4 ] 0x4
push sub_4770ef
push sub_4770bc
push 0x8
push 0x14
mov ecx [ ebp - 0x10 ]
add ecx 0x15c
push ecx
call sub_467f48
mov edx [ ebp - 0x10 ]
mov [ edx ] r--data
mov eax [ ebp - 0x10 ]
mov [ eax + 0x148 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
sub_4646da
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x402
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xc8
push eax
push 0x400
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0x108
push edx
push 0x3fd
mov eax [ ebp + 0x8 ]
push eax
call sub_483f62
mov ecx [ ebp - 0x4 ]
add ecx 0x148
push ecx
push 0x402
mov edx [ ebp + 0x8 ]
push edx
call sub_483f20
mov esp ebp
pop ebp
retn 0x4
sub_464762
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
push 0xc0c0c0
push 0xa
push 0x10
push 0x80
mov ecx [ ebp - 0x4 ]
add ecx 0x154
call sub_4767b0
mov eax [ ebp - 0x4 ]
add eax 0x154
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x108
call sub_46426b
mov ecx [ ebp - 0x4 ]
add ecx 0x154
push ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xc8
call sub_46426b
mov ecx [ ebp - 0x4 ]
call sub_4647fb
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14c ]
mov ecx [ eax ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_464987
mov ecx [ ebp - 0x4 ]
call sub_464b3a
mov ecx [ ebp - 0x4 ]
call sub_464bd4
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_4647fb
push ebp
mov ebp esp
push 0xffffffff
push sub_49a520
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x14 ]
call sub_409420
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_464120
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
jge r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_46412e
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40942e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
cmp [ ebp - 0x20 ] 0x12
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
imul edx edx 0x24
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cx [ edx + eax * 2 + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x28 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x28 ]
call sub_4655f0
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x24
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov cx [ ecx + eax * 2 + rw-data ]
mov [ edx ] cx
mov edx [ ebp - 0x1c ]
mov ax [ edx ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_409439
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0xc ] ax
mov edx [ ebp - 0x1c ]
xor eax eax
mov ax [ edx + 0xc ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_464195
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx * 2 + rw-data ]
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dx [ ecx ]
and edx 0xff
add eax edx
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x8
call sub_47e84a
mov eax [ ebp - 0x1c ]
mov [ eax + 0x10 ] 0x1
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x18 ]
imul edx edx 0x14
mov eax [ ebp - 0x2c ]
lea ecx [ eax + edx + 0x15c ]
call sub_407e30
jmp r-xdata
sub_464987
push ebp
mov ebp esp
push 0xffffffff
push sub_49a547
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov [ ebp - 0x28 ] ecx
lea ecx [ ebp - 0x14 ]
call sub_409420
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_464120
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x150 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx ]
jge r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ edx + 0x150 ]
cmp [ eax ] 0x0
je r-xdata
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
call sub_465610
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_46412e
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40942e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
push 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0x108
call sub_407ec0
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x24 ]
call sub_4655f0
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ eax ] 0x0
push rw-data
mov ecx [ ebp - 0x1c ]
add ecx 0x8
call sub_47c7b1
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dx [ ecx + 0xc ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_464195
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x1c ]
mov ax [ edx + 0xc ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_40948a
mov ecx [ ebp - 0x1c ]
mov [ ecx ] ax
mov edx [ ebp - 0x1c ]
xor eax eax
mov ax [ edx ]
sar eax 0x8
xor ecx ecx
mov cx [ eax * 2 + rw-data ]
mov edx [ ebp - 0x1c ]
xor eax eax
mov ax [ edx ]
and eax 0xff
add ecx eax
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x8
call sub_47e84a
mov ecx [ ebp - 0x1c ]
mov dx [ ecx ]
push edx
mov ecx [ ebp - 0x28 ]
call sub_464ca2
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov cx [ edx + ecx * 4 ]
mov [ eax + 0xc ] cx
mov edx [ ebp - 0x1c ]
xor eax eax
mov ax [ edx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x1c ]
add ecx 0x8
call sub_4027c0
push eax
mov ecx [ ebp - 0x28 ]
add ecx 0x108
call sub_464281
jmp r-xdata
sub_464b3a
push ebp
mov ebp esp
push 0xffffffff
push sub_49a55a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x14 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
mov edx [ ebp - 0x18 ]
mov [ edx + 0x148 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
add ecx 0xfa0
push ecx
lea ecx [ ebp - 0x14 ]
call sub_47e84a
lea ecx [ ebp - 0x14 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x18 ]
add ecx 0x8c
call sub_402aa0
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_464bd4
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407f50
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x148 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx + 0x15c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_402780
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_465610
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_407ec0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x8
call sub_4027c0
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_464281
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_464ca2
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
sar eax 0x8
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x18 ]
lea eax [ edx + ecx + 0x15c ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_41b1b0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x14 ]
call sub_402780
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
mov eax [ ebp + 0x8 ]
and eax 0xffff
cmp edx eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_464d28
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x8
jge r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x108
call sub_407e60
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x20 ]
lea ecx [ edx + ecx + 0x15c ]
call sub_41b1b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x20 ]
add ecx 0x108
call sub_407ef0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x4 ]
imul eax eax 0x14
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx + eax + 0x15c ]
call sub_402780
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x0
push 0x1
mov ecx [ ebp - 0x18 ]
call sub_465720
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x24 ] 0x0
push 0x1
mov ecx [ ebp - 0x10 ]
call sub_465720
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_464e28
push ebp
mov ebp esp
push 0xffffffff
push sub_49a56f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x20 ] ecx
push 0x1
mov ecx [ ebp - 0x20 ]
call sub_47b0ce
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_4655f0
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x14 ]
mov [ eax + 0xc ] 0x0
push rw-data
mov ecx [ ebp - 0x14 ]
add ecx 0x8
call sub_47c7b1
mov ecx [ ebp - 0x20 ]
add ecx 0x108
call sub_407e90
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x14 ]
add ecx 0x8
call sub_4027c0
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x20 ]
add ecx 0x108
call sub_4642b2
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x108
call sub_407ec0
mov ecx [ ebp - 0x20 ]
call sub_465610
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_464f28
push ebp
mov ebp esp
push 0xffffffff
push sub_49a584
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ ebp - 0x24 ] ecx
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_47b0ce
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407e90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x10 ] 0x0
push 0x14
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0x20 ]
call sub_4655f0
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
call sub_465770
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407f20
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
jge r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407e60
sub eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0xc8
call sub_407ec0
mov ecx [ ebp - 0x24 ]
add ecx 0x108
call sub_407e90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x18 ]
push edx
mov ecx [ ebp - 0x18 ]
add ecx 0x8
call sub_4027c0
push eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x108
call sub_4642b2
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x24 ]
add ecx 0x108
call sub_407ec0
mov ecx [ ebp - 0x24 ]
call sub_465610
sub_4650eb
push ebp
mov ebp esp
push 0xffffffff
push sub_49a597
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
mov [ ebp - 0x3c ] ecx
push 0x1
mov ecx [ ebp - 0x3c ]
call sub_47b0ce
mov ecx [ ebp - 0x3c ]
add ecx 0x108
call sub_407e90
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x3c ]
add ecx 0x108
call sub_407ef0
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dx [ ecx ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x3c ]
add ecx 0x108
call sub_407f20
mov ecx [ ebp - 0x3c ]
add ecx 0x108
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x10 ] eax
jge r-xdata
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cx [ eax ]
sar ecx 0x8
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x28 ]
imul edx edx 0x14
mov eax [ ebp - 0x3c ]
lea ecx [ eax + edx + 0x15c ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
call sub_41b1b0
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x3c ]
add ecx 0x108
call sub_407e60
sub eax 0x1
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x108
call sub_407e60
sub eax 0x1
cmp [ ebp - 0x10 ] eax
jge r-xdata
mov [ ebp - 0x44 ] 0x0
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
jge r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x2c ]
call sub_402780
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx ]
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dx [ ecx ]
cmp eax edx
jne r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x108
call sub_407e60
sub eax 0x1
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x48 ] edx
jmp r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
mov ecx [ ebp - 0x3c ]
add ecx 0x108
call sub_407ec0
mov ecx [ ebp - 0x3c ]
call sub_465610
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
mov [ edx + 0x10 ] 0x1
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x148 ]
cmp ecx [ ebp - 0x28 ]
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
lea ecx [ ebp - 0x30 ]
call sub_409510
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x14 ]
mov ax [ edx ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_40956a
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x1c ]
add ecx 0x8
call sub_4027c0
push eax
mov ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x3c ]
add ecx 0xc8
call sub_4642b2
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
push edx
mov ecx [ ebp - 0x3c ]
add ecx 0xc8
call sub_407ec0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_409527
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x3c ]
add ecx 0xc8
call sub_407ef0
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx ]
and edx 0xffff
push edx
lea ecx [ ebp - 0x30 ]
call sub_40956a
cmp eax [ ebp - 0x24 ]
jle r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x38 ]
add ecx 0x1
mov [ ebp - 0x38 ] ecx
sub_465359
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0x108
call sub_407e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x108
call sub_407ef0
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0x108
call sub_407f20
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x8
call sub_4027c0
push eax
mov eax [ ebp - 0x4 ]
sub eax 0x1
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x108
call sub_4642b2
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
push ecx
mov ecx [ ebp - 0xc ]
add ecx 0x108
call sub_407ec0
mov ecx [ ebp - 0xc ]
call sub_465680
sub_4653ee
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_407e60
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_407e90
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_407ef0
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_407f20
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x8
call sub_4027c0
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_4642b2
mov edx [ ebp - 0x8 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_407ec0
mov ecx [ ebp - 0x10 ]
call sub_465680
sub_4654bf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4654fd
mov ecx [ ebp - 0x4 ]
call sub_464d28
mov ecx [ ebp - 0x4 ]
call sub_48d869
mov esp ebp
pop ebp
retn
sub_4654fd
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_47b0ce
mov ecx [ ebp - 0x1c ]
add ecx 0x108
call sub_407e60
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x14c ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
push eax
call sub_47c3de
add esp 0x4
mov ecx [ ebp - 0x4 ]
shl ecx 0x2
push ecx
call sub_47c3b5
add esp 0x4
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x14c ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x150 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x1c ]
add ecx 0x108
call sub_407ef0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_4655c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_428a20
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_465610
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xc8
call sub_407e60
neg eax
sbb eax eax
neg eax
push eax
push 0x42f
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
add ecx 0x108
call sub_407e60
neg eax
sbb eax eax
neg eax
push eax
push 0x430
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
call sub_465680
mov esp ebp
pop ebp
retn
sub_465680
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x108
call sub_407e60
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x431
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x432
mov ecx [ ebp - 0x14 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x108
call sub_407e90
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
xor eax eax
cmp [ ebp - 0x10 ] 0x0
setg al
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
xor edx edx
cmp [ ebp - 0x10 ] ecx
setl dl
mov [ ebp - 0x4 ] edx
sub_465720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_465750
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_47c3de
add esp 0x4
sub_465770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx ]
mov [ eax ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_47c761
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + 0xc ]
mov [ ecx + 0xc ] ax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4657d0
push ebp
mov ebp esp
push 0xffffffff
push sub_49a5ba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push 0xa8
call sub_405cd0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
call sub_465849
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_465849
push ebp
mov ebp esp
push 0xffffffff
push sub_49a5dc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0xc5
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_401690
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0xa4 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_47c7b1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x90 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x94 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x98 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x9c ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0xa0 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
push rw-data
mov eax [ ebp - 0x10 ]
add eax 0x8c
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x90 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x94 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov [ ecx + 0x98 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ecx + 0x9c ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0xa0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_465978
push ebp
mov ebp esp
push 0xffffffff
push sub_49a5ef
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_48d60a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4659cf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x3ef
mov edx [ ebp + 0x8 ]
push edx
call sub_483d6c
mov eax [ ebp - 0x4 ]
add eax 0x90
push eax
push 0x3f3
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0x94
push edx
push 0x3f7
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0x98
push ecx
push 0x3fc
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0x9c
push eax
push 0x401
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0xa0
push edx
push 0x42a
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov esp ebp
pop ebp
retn 0x4
sub_465a86
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
call sub_4786a4
push 0x3f1
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x8 ] eax
push 0x10
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40d980
push 0x3ef
mov ecx [ ebp - 0xc ]
call sub_47bb2c
mov [ ebp - 0x4 ] eax
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_40d950
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_465ad6
push ebp
mov ebp esp
push 0xffffffff
push sub_49a602
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov [ ebp - 0x24 ] ecx
push 0x1
mov ecx [ ebp - 0x24 ]
call sub_47b0ce
mov eax [ ebp - 0x24 ]
mov [ eax + 0xa4 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x24 ]
add edx 0x8c
push edx
call sub_4113b1
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jl r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
push 0x3ef
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x14 ]
call sub_401740
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
push 0x10
push 0x1
push 0x3e9
lea eax [ ebp - 0x1c ]
push eax
call sub_47584a
add esp 0x10
push 0x0
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_4027c0
push eax
call sub_4840c3
push 0x3ef
mov ecx [ ebp - 0x24 ]
call sub_47bb2c
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x18 ]
call sub_401740
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_47c674
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x10
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xa4 ] 0x1
mov ecx [ ebp - 0x24 ]
call sub_48d884
sub_465c10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_465978
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_465c40
push ebp
mov ebp esp
push 0xffffffff
push sub_49a634
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov [ ebp - 0x50 ] ecx
lea ecx [ ebp - 0x20 ]
call sub_409420
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_4052e0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
call sub_465fa0
mov eax [ ebp + 0xc ]
imul eax eax 0x14
mov ecx [ ebp + 0x8 ]
add ecx eax
call sub_41b1b0
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_405340
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_40942e
jmp r-xdata
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x34 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp + 0xc ]
imul ecx ecx 0x14
mov edx [ ebp + 0x8 ]
add ecx edx
call sub_41b1d0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x30 ] 0x8
jmp r-xdata
push 0x0
push 0x0
push 0x800
lea ecx [ ebp - 0x18 ]
call sub_465fc0
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xffff
mov [ ebp - 0x48 ] al
mov cx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] cx
mov edx [ ebp - 0x38 ]
and edx 0xffff
and edx 0xff00
mov [ ebp - 0x40 ] dx
mov eax [ ebp - 0x38 ]
and eax 0xffff
and eax 0xff
mov [ ebp - 0x3c ] ax
mov cx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_409439
mov [ ebp - 0x1c ] ax
lea ecx [ ebp - 0x4c ]
call sub_401690
mov [ ebp - 0x4 ] 0x2
movsx edx [ ebp - 0x48 ]
push edx
push rw-data
lea eax [ ebp - 0x4c ]
push eax
call sub_475837
add esp 0xc
lea ecx [ ebp - 0x44 ]
call sub_401690
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x40 ]
and ecx 0xffff
mov [ ebp - 0x54 ] ecx
cmp [ ebp - 0x54 ] 0x400
jg r-xdata
push 0x0
call sub_402850
push eax
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_479810
lea ecx [ ebp - 0x18 ]
call sub_47e4db
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_405340
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_40942e
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x54 ] 0x500
je r-xdata
cmp [ ebp - 0x54 ] 0x400
je r-xdata
mov ecx [ ebp - 0x3c ]
and ecx 0xffff
add ecx 0x15e0
push ecx
lea ecx [ ebp - 0x44 ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x54 ] 0x600
je r-xdata
mov eax [ ebp - 0x3c ]
and eax 0xffff
add eax 0x157c
push eax
lea ecx [ ebp - 0x44 ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x54 ] 0x200
jg r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
lea ecx [ ebp - 0x4c ]
call sub_47ca40
lea ecx [ ebp - 0x4c ]
call sub_4027c0
push eax
mov edx [ ebp - 0x1c ]
and edx 0xffff
push edx
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_465fc0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x44 ]
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x4c ]
call sub_47c674
jmp r-xdata
mov edx [ ebp - 0x3c ]
and edx 0xffff
add edx 0x1644
push edx
lea ecx [ ebp - 0x44 ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x54 ] 0x700
je r-xdata
cmp [ ebp - 0x54 ] 0x300
je r-xdata
cmp [ ebp - 0x54 ] 0x200
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
and eax 0xffff
add eax 0x16a8
push eax
lea ecx [ ebp - 0x44 ]
call sub_47e84a
jmp r-xdata
mov edx [ ebp - 0x3c ]
and edx 0xffff
add edx 0x1518
push edx
lea ecx [ ebp - 0x44 ]
call sub_47e84a
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x3c ]
and ecx 0xffff
add ecx 0x14b4
push ecx
lea ecx [ ebp - 0x44 ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov edx [ ebp - 0x3c ]
and edx 0xffff
add edx 0x13ec
push edx
lea ecx [ ebp - 0x44 ]
call sub_47e84a
jmp r-xdata
cmp [ ebp - 0x54 ] 0x100
je r-xdata
mov eax [ ebp - 0x3c ]
and eax 0xffff
add eax 0x1450
push eax
lea ecx [ ebp - 0x44 ]
call sub_47e84a
jmp r-xdata
jmp r-xdata
sub_465fc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ AppendMenuA@IAT ]
mov esp ebp
pop ebp
retn 0xc
sub_465ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_49a649
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x99
mov ecx [ ebp - 0x10 ]
call sub_478369
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_401690
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_46609b
push ebp
mov ebp esp
push 0xffffffff
push sub_49a665
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov [ ebp - 0x48 ] ecx
push 0x3fd
mov ecx [ ebp - 0x48 ]
call sub_47bb2c
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
call sub_407f50
push 0x0
mov ecx [ ebp - 0x48 ]
call sub_47a448
mov ecx eax
call sub_48a6e8
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_4036e0
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
call sub_4841fc
mov [ ebp - 0x3c ] eax
lea ecx [ ebp - 0x28 ]
call sub_401690
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call sub_401690
mov [ ebp - 0x4 ] 0x1
push 0x3f0
lea ecx [ ebp - 0x44 ]
call sub_47e84a
lea ecx [ ebp - 0x44 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x30 ]
call sub_409900
push 0x0
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x50 ]
push edx
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x30 ]
call sub_4098d0
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x30 ]
call sub_407ec0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
call sub_47c674
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_48420e
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x54 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x14 ]
call [ edx + 0x58 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
mov edx [ eax ]
mov ecx [ ebp - 0x38 ]
call [ edx + 0x60 ]
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x3c ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x38 ]
call [ edx + 0x64 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
call sub_47a2e8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x40 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_4796e8
lea ecx [ ebp - 0x28 ]
call sub_4027c0
push eax
mov ecx [ ebp - 0x30 ]
call sub_409900
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x4c ]
push edx
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x30 ]
call sub_4098d0
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
sub_46625b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x5c
push eax
mov ecx [ ebp - 0x4 ]
call sub_46632c
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_478722
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x60 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_478709
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_46629f
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x3fd
mov ecx [ ebp - 0x10 ]
call sub_47bb2c
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
call sub_407e90
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call sub_407ef0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
push ecx
mov ecx [ ebp - 0x10 ]
call sub_46632c
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x60 ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call sub_478722
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ edx + 0x60 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x64 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call sub_478709
mov esp ebp
pop ebp
retn
sub_46632c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x1
push 0x1004
push 0xf000
mov eax [ ebp + 0x8 ]
push eax
call sub_4036e0
mov ecx eax
call sub_487a35
mov esp ebp
pop ebp
retn 0x4
sub_466370
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_428b40
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_4663a0
push ebp
mov ebp esp
push 0xffffffff
push sub_49a6f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push 0x0
push 0xb6
mov ecx [ ebp - 0x10 ]
call sub_48d504
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_4016f0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_4016f0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_4016f0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_4016f0
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_401690
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x10 ]
add ecx 0x194
call sub_401690
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x10 ]
add ecx 0x198
call sub_401690
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
call sub_401690
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0x10 ]
mov [ eax + 0x1b4 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x10 ]
mov [ edx + 0x17c ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x180 ] 0x0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x184 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x188 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18c ] 0xffffffff
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_47c7b1
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x194
call sub_47c7b1
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x198
call sub_47c7b1
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
call sub_47c7b1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x1a0 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x1a4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x1a8 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x1ac ] 0x0
mov edx [ ebp - 0x10 ]
mov [ edx + 0x1b0 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov [ eax + 0x180 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x17c ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ eax + 0x184 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov [ eax + 0x188 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov [ eax + 0x1a0 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x18c ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
mov [ eax + 0x1a4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
mov [ eax + 0x1ac ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x34 ]
mov [ eax + 0x1a8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov [ eax + 0x1b0 ] edx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x18c ] 0x3
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
push rw-data
mov eax [ ebp - 0x10 ]
add eax 0x194
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
push rw-data
mov eax [ ebp - 0x10 ]
add eax 0x198
push eax
call sub_475837
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0xc ]
sub eax [ edx + 0x4 ]
add eax 0x1
push eax
push rw-data
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
push ecx
call sub_475837
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x10 ]
sub ecx [ eax + 0x8 ]
add ecx 0x1
push ecx
push rw-data
mov edx [ ebp - 0x10 ]
add edx 0x190
push edx
call sub_475837
add esp 0xc
sub_46668d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov ecx [ ebp - 0x4 ]
add ecx 0x8c
push ecx
push 0x438
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0xc8
push eax
push 0x437
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483f62
mov edx [ ebp - 0x4 ]
add edx 0x104
push edx
push 0x436
mov eax [ ebp + 0x8 ]
push eax
call sub_483f62
mov ecx [ ebp - 0x4 ]
add ecx 0x140
push ecx
push 0x43b
mov edx [ ebp + 0x8 ]
push edx
call sub_483f62
mov eax [ ebp - 0x4 ]
add eax 0x17c
push eax
push 0x3f3
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0x180
push edx
push 0x3f7
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov ecx [ ebp - 0x4 ]
add ecx 0x184
push ecx
push 0x3fc
mov edx [ ebp + 0x8 ]
push edx
call sub_483dbe
mov eax [ ebp - 0x4 ]
add eax 0x188
push eax
push 0x401
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0x18c
push edx
push 0x3f8
mov eax [ ebp + 0x8 ]
push eax
call sub_483e10
mov ecx [ ebp - 0x4 ]
add ecx 0x190
push ecx
push 0x43b
mov edx [ ebp + 0x8 ]
push edx
call sub_483d6c
mov eax [ ebp - 0x4 ]
add eax 0x194
push eax
push 0x436
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483d6c
mov edx [ ebp - 0x4 ]
add edx 0x198
push edx
push 0x437
mov eax [ ebp + 0x8 ]
push eax
call sub_483d6c
mov ecx [ ebp - 0x4 ]
add ecx 0x19c
push ecx
push 0x438
mov edx [ ebp + 0x8 ]
push edx
call sub_483d6c
mov eax [ ebp - 0x4 ]
add eax 0x1a0
push eax
push 0x42a
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0x1a4
push edx
push 0x414
mov eax [ ebp + 0x8 ]
push eax
call sub_483e10
mov ecx [ ebp - 0x4 ]
add ecx 0x1a8
push ecx
push 0x47b
mov edx [ ebp + 0x8 ]
push edx
call sub_483e10
mov eax [ ebp - 0x4 ]
add eax 0x1ac
push eax
push 0x42d
mov ecx [ ebp + 0x8 ]
push ecx
call sub_483dbe
mov edx [ ebp - 0x4 ]
add edx 0x1b0
push edx
push 0x42e
mov eax [ ebp + 0x8 ]
push eax
call sub_483dbe
mov esp ebp
pop ebp
retn 0x4
sub_466860
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_4668bb
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1a4 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4669ab
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_4668bb
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
xor ecx ecx
cmp [ eax + 0x18c ] 0x3
sete cl
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x104
call sub_47bde8
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0xc8
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x8c
call sub_47bde8
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
add ecx 0x140
call sub_47bde8
mov eax [ ebp - 0x4 ]
push eax
push 0x434
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov ecx [ ebp - 0x4 ]
push ecx
push 0x435
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov edx [ ebp - 0x4 ]
push edx
push 0x43a
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov eax [ ebp - 0x4 ]
push eax
push 0x439
mov ecx [ ebp - 0x8 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn
sub_466982
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1a4 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4669ab
mov esp ebp
pop ebp
retn 0x4
sub_4669ab
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
cmp [ ebp + 0x8 ] 0x2
sete al
push eax
push 0x42d
mov ecx [ ebp - 0x4 ]
call sub_47bb2c
mov ecx eax
call sub_47bde8
mov esp ebp
pop ebp
retn 0x4
sub_4669d6
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x1c ] ecx
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_47b0ce
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x18c ] 0x3
je r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x1b4 ] 0x0
push 0x0
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0x18 ] eax
push 0x1
call [ GetSystemMetrics@IAT ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
add eax 0x194
push eax
call sub_4113b1
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x18 ]
jle r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0x104
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0x104
call sub_401740
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x1c ]
add eax 0x198
push eax
call sub_4113b1
add esp 0x8
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x40e
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0x104
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0x104
call sub_401740
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jle r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_401740
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x1c ]
add eax 0x19c
push eax
call sub_4113b1
add esp 0x8
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0x40e
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_401740
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0x8c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0x8c
call sub_401740
xor eax eax
jmp r-xdata
push 0xffffffff
push 0x0
push 0x40c
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0x8c
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0x8c
call sub_401740
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x18 ]
jle r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x1c ]
add eax 0x190
push eax
call sub_4113b1
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
push 0xffffffff
push 0x0
push 0x3e8
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0x140
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0x140
call sub_401740
xor eax eax
jmp r-xdata
push 0xffffffff
push 0x0
push 0x40d
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0x140
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0x140
call sub_401740
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0xc ]
jle r-xdata
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x4 ]
test edx edx
jge r-xdata
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x14 ]
test eax eax
jge r-xdata
push 0xffffffff
push 0x0
push 0x40e
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0x104
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0x104
call sub_401740
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x1b4 ] 0x1
mov ecx [ ebp - 0x1c ]
call sub_48d884
push 0xffffffff
push 0x0
push 0x40e
call sub_4840fb
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_47be0f
push 0x0
push 0xffff0000
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_401740
xor eax eax
jmp r-xdata
sub_466d10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_428950
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_401240
sub_466d64
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
setne al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
jmp r-xdata
sub_466e3c
push esi
push edi
call sub_466d64
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x3
jne r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_466e92
push ebp
mov ebp esp
sub esp 0x2c
call sub_466d64
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_466e3c
jmp r-xdata
test eax eax
je r-xdata
sub_466efd
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_466d64
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx ] 0x48
push 0x1
movsd [ edi ] [ esi ]
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
add ebx 0x28
push r--data
push ebx
call [ lstrcpyA@IAT ]
sub_467072
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_467097
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_4670eb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_4671ff
push esi
mov esi ecx
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
push 0x0
push [ esi + 0x1c ]
push 0x221
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
retn
sub_467226
push esi
mov esi ecx
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
push 0x0
push [ esi + 0x1c ]
push 0x222
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
retn
sub_467275
mov eax sub_49ae72
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_47e7d8
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x20 ]
call sub_477a26
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_477a26
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4672d9
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x8
sub_467315
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x8 ]
call sub_4779a2
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn
sub_46733d
mov eax sub_49ba40
call sub_469294
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ esi + 0xc ]
push ebx
mov eax [ edi ]
mov [ esi + 0xc ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_477982
mov ecx [ esi + 0x4 ]
dec ecx
mov edx ecx
imul edx [ esi ]
test ecx ecx
lea eax [ edx + eax + 0x4 ]
jl r-xdata
inc ecx
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
sub eax [ esi ]
dec ecx
jne r-xdata
sub_4673cc
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
push ebx
mov [ edi ] eax
mov [ esi + 0xc ] edi
call [ LeaveCriticalSection@IAT ]
pop ebx
sub_4673f8
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
inc eax
cmp eax [ esi + 0x28 ]
jbe r-xdata
mov eax [ esi + 0x24 ]
mov cl [ esp + 0x8 ]
mov [ eax ] cl
inc [ esi + 0x24 ]
mov eax esi
pop esi
retn 0x4
call sub_483619
sub_46741b
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
inc eax
inc eax
cmp eax [ esi + 0x28 ]
jbe r-xdata
mov eax [ esi + 0x24 ]
mov cx [ esp + 0x8 ]
mov [ eax ] cx
add [ esi + 0x24 ] 0x2
mov eax esi
pop esi
retn 0x4
call sub_483619
sub_467442
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
add eax 0x4
cmp eax [ esi + 0x28 ]
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
add [ esi + 0x24 ] 0x4
mov eax esi
pop esi
retn 0x4
call sub_483619
sub_467468
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
lea edx [ eax + 0x1 ]
cmp edx ecx
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov al [ eax ]
mov [ ecx ] al
inc [ esi + 0x24 ]
mov eax esi
pop esi
retn 0x4
sub eax ecx
mov ecx esi
inc eax
push eax
call sub_483695
sub_467497
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
lea edx [ eax + 0x2 ]
cmp edx ecx
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov ax [ eax ]
mov [ ecx ] ax
add [ esi + 0x24 ] 0x2
mov eax esi
pop esi
retn 0x4
sub eax ecx
mov ecx esi
inc eax
inc eax
push eax
call sub_483695
sub_4674ca
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
add [ esi + 0x24 ] 0x4
mov eax esi
pop esi
retn 0x4
sub eax ecx
mov ecx esi
add eax 0x4
push eax
call sub_483695
sub_467544
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_467586
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4675d5
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46a891
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_46760b
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_46765f
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_46b0a0
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_46765f
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_46a891
add esp 0x20
pop ebp
retn
sub_467684
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_46773a
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_46b153
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_46773a
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_46a891
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_467586
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4677af
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_46b2bb
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_46b2bb
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_46782c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46786e
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_46784c
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_467902
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_467920
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_467930
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_467a10
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_467a70
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_467ad0 ]
jmp [ ecx * 4 + jump_table_467b4c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_467bb8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_467bb8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_467d50 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_467c58 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_467d50 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_467bb8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_467bb8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_467bb8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_467d50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_467d50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_467d50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_467d50 ]
sub_467da5
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
push 0x19
call sub_46b33a
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46b3b0
pop ecx
pop ecx
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
mov al [ esi ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
and [ ebp + 0xc ] 0x0
jmp r-xdata
push 0x19
call sub_46b39b
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
push 0x19
call sub_46b39b
pop ecx
xor eax eax
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_467e54
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_467ebc
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_467ed4
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_467f48
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_467fb2
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_46801a
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_4680b0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_4680cf
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_46bb40
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_46ba28
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_468121
push ebp
mov ebp esp
sub esp 0x28
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_46c34a
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x10 ]
add esp 0x10
lea edx [ ecx - 0x1 ]
cmp edx 0xffffffff
jl r-xdata
dec eax
push 0x0
push eax
lea eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push eax
call sub_46b68b
add esp 0x10
lea esi [ eax - 0x1 ]
cmp edx esi
jg r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl [ rw-data ]
je r-xdata
sub eax ecx
push eax
lea eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push eax
call sub_46b7ae
add esp 0xc
jmp r-xdata
mov eax esi
pop esi
leave
retn
mov cl [ eax ]
test cl cl
je r-xdata
inc eax
jmp r-xdata
mov esi eax
mov ecx eax
cmp cl 0x65
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
inc eax
jmp r-xdata
sub_4681d0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_468290
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_468344
push ebp
mov ebp esp
add esp 0xfffffff4
fwait
fnstcw [ ebp - 0x2 ]
fwait
mov ax [ ebp - 0x2 ]
or ah 0xc
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
leave
retn
sub_468376
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
mov [ ebp + 0xb ] cl
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
pop edi
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ecx * 2 ]
and eax 0x4
leave
retn
push 0x4
push ecx
call sub_46b9b3
pop ecx
pop ecx
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp + 0xa ]
push 0x2
push eax
push 0x1
call sub_46c45c
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x4
je r-xdata
push 0x1
pop eax
leave
retn
sub_468410
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_468490
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
call sub_46c5b0
mov edi esi
push esi
sub edi eax
call sub_46c5b0
pop ecx
add edi eax
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_468410
pop ecx
pop ecx
jmp r-xdata
xor eax eax
cmp esi edi
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ esi ] bl
mov eax [ ebp + 0xc ]
je r-xdata
cmp [ eax ] bl
je r-xdata
mov edx esi
sub edx eax
mov eax esi
jmp r-xdata
push esi
call sub_469916
pop ecx
mov esi eax
jmp r-xdata
cmp [ edx + eax ] cl
jne r-xdata
cmp [ esi ] bl
je r-xdata
inc eax
cmp [ edx + eax ] bl
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_468506
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_46b33a
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_46b39b
pop ecx
pop esi
retn
push esi
call sub_46965a
pop ecx
sub_468550
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_4685fc
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
call sub_46b153
push 0x8
mov [ ebp + 0xc ] eax
pop ecx
xor eax eax
lea edi [ ebp - 0x20 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
mov bl 0x1
movzx ecx dl
mov eax ecx
and ecx edi
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x20 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov al [ edx ]
push 0x1
movzx esi al
mov ecx esi
pop ebx
and ecx edi
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x20 ]
test cl bl
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x18 ]
mov ebx edx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
and eax ebx
pop ebx
leave
retn
movzx esi al
mov ecx esi
push 0x1
and ecx edi
pop eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x20 ]
test cl al
jne r-xdata
inc edx
jmp r-xdata
and [ edx ] 0x0
inc edx
inc edx
jmp r-xdata
mov al [ edx ]
test al al
je r-xdata
sub_4686a0
push esi
call sub_468853
push [ rw-data ]
call sub_469f2f
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_469f2f
add eax 0x10
push eax
push [ rw-data ]
call sub_46c62b
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_46885c
mov eax esi
pop esi
retn
sub_468730
push 0x80
call sub_469520
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_469248
mov eax [ rw-data ]
pop ecx
sub_4687ae
push edi
call sub_468853
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_468865
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_46885c
pop edi
retn
push rw-data
push rw-data
call sub_468865
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_46887f
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push edi
push 0x19
call sub_46b33a
pop ecx
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46c960
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] eax
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
pop esi
pop ebp
retn
inc ecx
test dl dl
jne r-xdata
mov esi ecx
test esi esi
jmp r-xdata
movzx edi dl
shl eax 0x8
or eax edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov dl [ ecx ]
movzx eax dl
movzx edi al
test [ edi + rw-data ] 0x4
je r-xdata
push 0x19
call sub_46b39b
pop ecx
mov eax esi
pop edi
jne r-xdata
lea esi [ ecx - 0x1 ]
jmp r-xdata
sub_4688f1
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
movzx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ esi ]
push 0x8
push eax
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
push 0x0
push 0x0
push esi
call sub_46c5b0
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_46c987
fld [ eax + 0x10 ]
add esp 0x14
pop esi
leave
retn
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
sub_468948
push esi
call sub_4689c4
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_4689bb
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_4689bb
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_4689bb
mov [ eax ] 0xd
pop esi
retn
call sub_4689bb
mov [ eax ] 0x8
pop esi
retn
sub_4689cd
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edi
movzx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ esi ]
push 0x8
push eax
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
push 0x0
push 0x0
push esi
call sub_46c5b0
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_46c987
mov ecx [ ebp + 0xc ]
add esp 0x14
test ecx ecx
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
mov edx [ eax ]
test dx 0x240
je r-xdata
mov edx [ eax + 0x4 ]
add edx esi
mov [ ecx ] edx
cmp [ rw-data ] 0x1
jle r-xdata
test dl 0x81
je r-xdata
test ecx ecx
fldz
je r-xdata
test dh 0x1
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
pop edi
pop esi
leave
retn
mov [ ecx ] edi
jmp r-xdata
fld [ eax + 0x10 ]
fldz
jmp r-xdata
fstp [ ebp - 0x8 ]
call sub_4689bb
fld [ ebp - 0x8 ]
mov [ eax ] 0x22
jmp r-xdata
fchs
sub_468a80
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_468ab4
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_46b33a
push [ ebp + 0x8 ]
call sub_468c61
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_468cde
xor edx edx
mov eax rw-data
push 0x19
call sub_46b39b
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_468cab
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_468d07
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_468cab
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_468c61
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_468cab
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_468cde
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_468d07
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_46c45c
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_46ca08
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_46ca08
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_468ea8
push ebp
mov ebp esp
sub esp 0xc
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
push 0x19
call sub_46b33a
mov esi [ ebp + 0xc ]
pop ecx
mov ecx [ ebp + 0x8 ]
mov ebx 0x200
lea eax [ esi - 0x1 ]
mov [ ebp - 0xc ] eax
lea eax [ ecx - 0x1 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46cc30
pop ecx
pop ecx
jmp r-xdata
movzx eax ax
mov cl [ eax + rw-data ]
and cl 0x10
cmp cl 0x10
jne r-xdata
cmp [ ecx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi eax
movzx di [ eax + rw-data ]
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push 0x2
push eax
push 0x2
push [ ebp - 0x8 ]
push ebx
push [ rw-data ]
call sub_46ca08
add esp 0x20
cmp eax 0x1
jne r-xdata
xor edi edi
jmp r-xdata
movzx esi ax
mov al [ esi + rw-data ]
and al 0x10
cmp al 0x10
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movzx ax [ esi ]
movzx ecx al
inc esi
inc [ ebp - 0xc ]
test [ ecx + rw-data ] 0x4
mov [ ebp + 0xc ] esi
je r-xdata
cmp eax 0x2
jne r-xdata
movzx di [ ebp - 0x4 ]
jmp r-xdata
cmp di si
jne r-xdata
movzx si [ esi + rw-data ]
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push 0x2
push eax
push 0x2
push [ ebp - 0xc ]
push ebx
push [ rw-data ]
call sub_46ca08
add esp 0x20
cmp eax 0x1
jne r-xdata
xor esi esi
jmp r-xdata
push 0x19
call sub_46b39b
pop ecx
mov eax 0x7fffffff
jmp r-xdata
movzx di [ ebp - 0x4 ]
movzx ax [ ebp - 0x3 ]
shl edi 0x8
add edi eax
inc [ ebp + 0x8 ]
inc [ ebp - 0x8 ]
jmp r-xdata
push 0x19
call sub_46b39b
cmp si di
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
test di di
je r-xdata
cmp eax 0x2
jne r-xdata
movzx si [ ebp - 0x4 ]
jmp r-xdata
push 0x19
call sub_46b39b
pop ecx
xor eax eax
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
jmp r-xdata
movzx si [ ebp - 0x4 ]
movzx ax [ ebp - 0x3 ]
shl esi 0x8
add esi eax
inc [ ebp + 0xc ]
inc [ ebp - 0xc ]
jmp r-xdata
movzx ax [ ecx ]
movzx edx al
inc ecx
inc [ ebp - 0x8 ]
test [ edx + rw-data ] 0x4
mov [ ebp + 0x8 ] ecx
je r-xdata
sub_46903d
cmp [ rw-data ] 0x3a4
je r-xdata
mov eax [ esp + 0x4 ]
xor ecx ecx
mov cl ah
and eax 0xff
cmp ecx 0x21
mov edx eax
jb r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
retn
cmp ecx 0x7e
ja r-xdata
cmp edx 0x21
jb r-xdata
cmp edx 0x7e
ja r-xdata
test cl 0x1
je r-xdata
add edx 0x7e
cmp edx 0x5f
ja r-xdata
shl eax 0x8
or eax edx
retn
add eax 0x40
add edx 0x20
jmp r-xdata
add edx 0x1f
jmp r-xdata
lea eax [ ecx - 0x21 ]
shr eax 0x1
add eax 0x81
cmp eax 0x9f
jbe r-xdata
sub_4690a5
cmp [ rw-data ] 0x3a4
push esi
je r-xdata
mov ecx [ esp + 0x8 ]
xor eax eax
mov al ch
mov edx 0xff
movzx esi al
and ecx edx
test [ esi + rw-data ] 0x4
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
xor eax eax
movzx esi cl
test [ esi + rw-data ] 0x8
je r-xdata
cmp eax 0xa0
sbb esi esi
and esi 0xffffffc0
add esi 0xc1
sub eax esi
cmp ecx 0x9f
jb r-xdata
push 0x7e
pop esi
cmp esi ecx
sbb esi esi
neg esi
add esi 0x1f
shl eax 0x9
sub ecx esi
add eax 0x2100
or ecx eax
mov eax ecx
add eax 0x11
add ecx 0xffffff82
shl eax 0x9
or eax ecx
jmp r-xdata
cmp eax 0x2121
jb r-xdata
cmp eax 0x7e7e
ja r-xdata
mov ecx eax
and ecx edx
cmp ecx 0x7e
ja r-xdata
cmp ecx 0x21
jae r-xdata
pop esi
retn
sub_469140
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_46d639
pop ecx
test eax eax
jne r-xdata
call sub_46b0ec
test eax eax
jne r-xdata
push 0x1c
call sub_46926d
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_46d308
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_46d1d6
mov [ rw-data ] eax
call sub_46cf89
call sub_46ced0
call sub_46875f
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_46ce78
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_46926d
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_475387
mov [ ebp - 0x60 ] eax
push eax
call sub_46878c
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_46cd00
pop ecx
pop ecx
retn
sub_4692b3
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_469304
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
test al 0x8
jne r-xdata
movsx eax bl
push eax
call sub_46d886
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
test ebx ebx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
call sub_4689bb
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov eax [ ebp + 0x14 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x8 ] eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
and eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] esi
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_469532
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_46955e
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_46d9c1
test eax eax
pop ecx
jne r-xdata
sub_46955e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x9
call sub_46b33a
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_46dd78
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4695c5
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
add eax 0xf
and al 0xf0
push eax
push 0x1
pop eax
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp r-xdata
jmp r-xdata
push esi
jmp r-xdata
push 0x9
call sub_46b33a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_46e81b
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_469624
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] esi
cmp esi [ rw-data ]
ja r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
sub_46965a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_46b33a
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_46da24
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push esi
push 0x9
call sub_46b33a
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_46e77f
add esp 0xc
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4696c4
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
push esi
push eax
call sub_46da4f
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_46971c
cmp [ ebp - 0x24 ] 0x0
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x28 ]
call sub_46e7d6
add esp 0xc
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_469743
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_469760
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
jne r-xdata
push 0x19
call sub_46b33a
mov esi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4681d0
pop ecx
pop ecx
jmp r-xdata
push 0x19
call sub_46b39b
mov eax [ ebp + 0xc ]
pop ecx
movzx ecx bx
sub eax ecx
neg eax
sbb eax eax
not eax
and eax esi
movzx eax bl
test [ eax + rw-data ] 0x4
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax bx
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
inc esi
jmp r-xdata
push 0x19
call sub_46b39b
pop ecx
xor eax eax
jmp r-xdata
movzx ecx bx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
je r-xdata
movzx bx [ esi ]
test bx bx
je r-xdata
push 0x19
call sub_46b39b
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
sub_4697f7
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
push 0x19
call sub_46b33a
mov esi [ esp + 0x10 ]
pop ecx
cmp [ esi ] bl
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_46ebf0
pop ecx
pop ecx
pop ebx
retn
push 0x19
call sub_46b39b
mov al [ esi ]
pop ecx
neg al
sbb eax eax
and eax esi
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x14 ]
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
pop edi
movzx eax [ esi ]
test [ eax + rw-data ] 0x4
je r-xdata
cmp cl [ esi ]
je r-xdata
cmp cl [ esi ]
jne r-xdata
inc esi
cmp [ esi ] bl
jne r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
cmp [ eax + 0x1 ] bl
lea ecx [ eax + 0x1 ]
je r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ esi + 0x1 ]
je r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
mov eax ecx
jmp r-xdata
sub_46988c
push ebp
mov ebp esp
push esi
push edi
push 0x19
call sub_46b33a
mov edi [ ebp + 0x8 ]
pop ecx
mov esi edi
cmp [ edi ] 0x0
je r-xdata
push 0x19
call sub_46b39b
pop ecx
mov eax edi
movzx ecx [ esi ]
mov al [ ecx + rw-data ]
test al 0x4
je r-xdata
and al 0x20
cmp al 0x20
jne r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push [ rw-data ]
push 0x2
push eax
push 0x2
push esi
push 0x200
push [ rw-data ]
call sub_46ca08
add esp 0x20
test eax eax
je r-xdata
mov [ esi ] cl
movzx ecx [ ecx + rw-data ]
push 0x19
call sub_46b39b
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp eax 0x1
mov [ esi ] cl
jle r-xdata
pop edi
pop esi
pop ebp
retn
inc esi
cmp [ esi ] 0x0
jne r-xdata
inc esi
mov [ esi ] ch
jmp r-xdata
sub_469930
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_469990 ]
jmp [ ecx * 4 + jump_table_469a0c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_469a78 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_469a78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_469c10 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_469b18 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_469c10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_469a78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_469a78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_469a78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_469c10 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_469c10 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_469c10 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_469c10 ]
sub_469c65
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_46bb40
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_46ba28
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_469ccc
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
push esi
push edi
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
jne r-xdata
push 0x19
call sub_46b33a
dec [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46ece0
add esp 0xc
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0xc ] ebx
test [ eax + rw-data ] 0x4
jne r-xdata
push 0x19
call sub_46b39b
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov al [ esi ]
dec [ ebp + 0x10 ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
mov [ ebp + 0xc ] ebx
jmp r-xdata
push 0x19
call sub_46b39b
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_469dbb
push ebp
mov ebp esp
push esi
push edi
push 0x74
push 0x1
xor edi edi
call sub_46a01d
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
call sub_46965a
test edi edi
pop ecx
je r-xdata
push esi
call sub_46b140
pop ecx
mov eax [ ebp + 0x10 ]
push [ ebp + 0x1c ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ ebp + 0x14 ]
push [ ebp + 0x18 ]
mov [ esi + 0x4c ] eax
push esi
push sub_469e26
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
xor eax eax
push edi
call sub_468948
pop ecx
pop edi
pop esi
pop ebp
retn
call [ GetLastError@IAT ]
mov edi eax
sub_469e26
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x10
call sub_469248
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x4c ]
call [ esi + 0x48 ]
push eax
call sub_469ec2
call eax
sub_469ec2
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
call sub_46b153
mov esi eax
test esi esi
jne r-xdata
call eax
push esi
call sub_46b1ba
pop ecx
push [ esp + 0x8 ]
call [ ExitThread@IAT ]
push 0x10
call sub_469248
pop ecx
sub_469f00
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_469f2f
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_46b33a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
push esi
call sub_46da24
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x9
call sub_46b33a
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call sub_46e77f
add esp 0xc
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov esi [ ebp - 0x20 ]
mov esi [ esi - 0x4 ]
sub esi 0x9
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi [ ebp - 0x20 ]
movzx esi [ eax ]
shl esi 0x4
mov [ ebp - 0x20 ] esi
jmp r-xdata
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_469f99
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_46a014
cmp [ ebp - 0x28 ] 0x0
sub_46a01d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
mov [ ebp - 0x1c ] esi
cmp esi 0xffffffe0
ja r-xdata
xor ebx ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
jmp r-xdata
push 0x1
pop esi
mov eax [ ebp - 0x20 ]
cmp [ rw-data ] ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp edi [ rw-data ]
ja r-xdata
mov [ ebp - 0x20 ] ebx
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_46d9c1
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push 0x9
call sub_46b33a
pop ecx
mov [ ebp - 0x4 ] ebx
push edi
call sub_46dd78
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_46a0b6
cmp [ ebp - 0x20 ] ebx
je r-xdata
jmp r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x20 ] eax
push 0x9
call sub_46b33a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_46e81b
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_46a13f
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
push ebx
push [ ebp - 0x20 ]
call sub_467a10
add esp 0xc
sub_46a15a
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_46c5b0
inc eax
push eax
call sub_469520
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_467920
pop ecx
pop ecx
pop esi
retn
sub_46a185
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ esp + 0xc ] edi
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x19
call sub_46b33a
movzx eax [ edi - 0x1 ]
lea esi [ edi - 0x1 ]
pop ecx
test [ eax + rw-data ] 0x4
je r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop edi
pop esi
retn
dec esi
cmp [ esp + 0xc ] esi
ja r-xdata
push 0x19
call sub_46b39b
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
push 0x19
call sub_46b39b
pop ecx
mov eax edi
mov ecx edi
sub ecx esi
and ecx 0x1
sub eax ecx
dec eax
movzx eax [ esi ]
test [ eax + rw-data ] 0x4
jne r-xdata
sub_46a1fb
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
cmp esi 0xffffffe0
jbe r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_46b33a
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
push edi
call sub_46da24
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
test esi esi
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_46a28d
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
cmp esi [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push 0x9
call sub_46b33a
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov edi [ ebp + 0x8 ]
push edi
call sub_46e77f
add esp 0xc
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
push 0x1
pop esi
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
push edi
push eax
call sub_46e22d
add esp 0xc
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_46a322
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
cmp esi [ rw-data ]
ja r-xdata
mov [ ebp - 0x1c ] edi
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_46786e
pop ecx
pop ecx
jmp r-xdata
shr esi 0x4
push esi
push eax
push [ ebp - 0x24 ]
push [ ebp - 0x2c ]
call sub_46eb47
add esp 0x10
test eax eax
je r-xdata
push esi
push [ ebp + 0x8 ]
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] edi
sub_46a36d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x14 ]
cmp ecx 0x45
jl r-xdata
or eax 0xffffffff
cmp ecx 0x8b
jg r-xdata
mov esi [ edi + 0x10 ]
test esi esi
jl r-xdata
push ebx
mov eax esi
push 0xc
cdq
pop ebx
idiv ebx
push ebx
add ecx eax
mov eax esi
cdq
pop esi
pop ebx
idiv esi
test edx edx
mov [ edi + 0x10 ] edx
jge r-xdata
cmp esi 0xb
jle r-xdata
cmp ecx 0x45
jl r-xdata
add edx 0xc
dec ecx
mov [ edi + 0x10 ] edx
mov edx [ edi + 0x10 ]
test cl 0x3
mov eax [ edx * 4 + rw-data ]
jne r-xdata
cmp ecx 0x8b
jg r-xdata
lea edx [ ecx - 0x1 ]
imul ecx ecx 0x16d
sar edx 0x2
add eax edx
lea eax [ ecx + eax - 0x63df ]
mov ecx [ edi + 0xc ]
test eax eax
lea esi [ eax + ecx ]
jl r-xdata
cmp edx 0x1
jle r-xdata
test ecx ecx
jge r-xdata
test ecx ecx
jl r-xdata
inc eax
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x18
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi ]
test ecx ecx
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
jge r-xdata
test edx edx
jl r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_46a551
test eax eax
pop ecx
je r-xdata
call sub_46ed18
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_46a65b
test eax eax
pop ecx
je r-xdata
jmp r-xdata
push 0x9
mov esi eax
mov eax [ ebp + 0x8 ]
pop ecx
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
jg r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_46a65b
pop ecx
jmp r-xdata
jge r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
sub_46a551
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
xor ebx ebx
call sub_46b153
test esi esi
mov edi eax
jge r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x40 ]
push 0x24
call sub_469520
pop ecx
mov [ edi + 0x40 ] eax
test eax eax
mov ecx rw-data
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov [ ecx + 0x14 ] edx
cdq
mov edi 0x15180
idiv edi
mov edi rw-data
mov [ ecx + 0x1c ] eax
imul eax eax 0xfffeae80
add esi eax
test ebx ebx
jne r-xdata
sub esi eax
inc edx
cmp esi eax
jl r-xdata
mov eax esi
mov edi 0x7861f80
cdq
idiv edi
mov edx eax
imul edx edx 0xf879e080
add esi edx
lea edx [ eax * 4 + 0x46 ]
mov eax 0x1e13380
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
push 0x1
pop eax
lea ebx [ edi + 0x4 ]
mov edi rw-data
sub esi eax
mov eax 0x1e28500
inc edx
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
dec eax
mov [ ecx + 0x10 ] eax
push 0x7
sub edx [ edi + eax * 4 ]
mov eax [ esp + 0x14 ]
mov edi 0x15180
mov [ ecx + 0xc ] edx
mov eax [ eax ]
cdq
idiv edi
pop edi
push 0x3c
add eax 0x4
cdq
idiv edi
mov eax esi
mov edi 0xe10
mov [ ecx + 0x18 ] edx
cdq
idiv edi
pop edi
mov [ ecx + 0x8 ] eax
imul eax eax 0xfffff1f0
add esi eax
mov eax esi
cdq
idiv edi
mov [ ecx + 0x4 ] eax
imul eax eax 0x3c
sub esi eax
and [ ecx + 0x20 ] 0x0
mov [ ecx ] esi
mov eax ecx
inc eax
add ebx 0x4
jmp r-xdata
push 0x1
pop ebx
inc edx
sub esi eax
jmp r-xdata
cmp [ ebx ] edx
jge r-xdata
sub_46a65b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jge r-xdata
call sub_46ed18
mov eax [ esi ]
cmp eax 0x3f480
jle r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_46a551
mov esi eax
push esi
call sub_46efcd
pop ecx
test eax eax
mov eax [ esi ]
pop ecx
je r-xdata
cmp eax 0x7ffc0b7f
jge r-xdata
pop esi
pop ebp
retn
sub eax [ rw-data ]
push edi
push 0x3c
mov [ ebp + 0x8 ] eax
pop ecx
cdq
mov edi ecx
idiv edi
test edx edx
mov [ esi ] edx
jge r-xdata
sub eax [ rw-data ]
sub eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_46a551
cmp [ rw-data ] 0x0
pop ecx
mov esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi ecx
cdq
idiv edi
add eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
cdq
idiv edi
pop edi
test edx edx
mov [ esi + 0x4 ] edx
jge r-xdata
add edx ecx
mov [ esi ] edx
sub [ ebp + 0x8 ] ecx
mov eax esi
push esi
call sub_46efcd
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
idiv ecx
pop ecx
add eax [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
cdq
idiv ecx
test edx edx
mov [ esi + 0x8 ] edx
jge r-xdata
add edx 0x3c
mov [ esi + 0x4 ] edx
sub [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
sub [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_46a551
mov esi eax
pop ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
pop ecx
idiv ecx
mov ecx eax
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
add edx ecx
mov [ esi + 0x8 ] edx
sub [ ebp + 0x8 ] ecx
jge r-xdata
mov eax [ esi + 0x18 ]
push 0x7
add eax ecx
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0x18 ]
push 0x7
lea eax [ eax + ecx + 0x7 ]
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
test eax eax
jg r-xdata
mov eax [ ebp + 0x8 ]
add [ esi + 0x1c ] eax
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x16c
mov [ esi + 0x10 ] 0xb
jmp r-xdata
sub_46a7c0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_46a870
cmp cl 0x40
jae r-xdata
sar edx 0x1f
mov eax edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
sar edx 0x1f
and cl 0x1f
sar eax cl
retn
shrd eax edx cl
sar edx cl
retn
sub_46a891
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_46b2bb
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_46a92c
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_46abe6
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_46a92c
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_46b2bb
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_46b25a
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_46aadf
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_46b153
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4677af
add esp 0x14
mov ebx eax
call sub_46b153
mov esi [ eax + 0x6c ]
call sub_46b153
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_46f2da
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_46b2bb
push 0x1
push esi
call sub_46b008
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_46ab89
add esp 0xc
test eax eax
jne r-xdata
call sub_46b2bb
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_46ac84
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_46aadf
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_46b153
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4677af
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_467684
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46ac84
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_46ab89
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_46b3b0
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_46abe6
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_46b2bb
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_46b0a0
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_46ac84
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_46ae44
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_467544
call sub_467586
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_46abe6
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_46acff
add esp 0x2c
test eax eax
je r-xdata
sub_46acff
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_46b153
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_46b153
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_46b153
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_46b153
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_46760b
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_46adcc
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_46adcc
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_46b153
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_46b153
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_4678d6
push eax
push edi
call sub_46b008
pop ecx
pop ecx
sub_46ae1a
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_46ae44
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_46f2da
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_46f2da
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_46b2bb
push 0x1
push edi
call sub_46f2f6
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_46f2da
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_46f2da
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_46f2f6
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_46f2f6
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_46f2f6
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_469930
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_46f312
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_46b06f
pop ecx
pop ecx
push eax
push edi
call sub_469930
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_46b06f
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_467578
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_46b06f
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_46757f
jmp r-xdata
push eax
call sub_46b06f
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_46b008
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_467578
or [ ebp - 0x4 ] 0xffffffff
sub_46b06f
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_46b0a0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4678f9
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4678f9
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_46b0ec
push esi
call sub_46b311
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_46a01d
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_46b140
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_46b153
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_46a01d
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_469248
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_46b140
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_46b1ba
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_46965a
pop ecx
push 0x0
push [ rw-data ]
call [ TlsSetValue@IAT ]
pop esi
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call sub_46965a
pop ecx
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
push eax
call sub_46965a
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_46965a
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_46965a
pop ecx
mov eax [ esi + 0x50 ]
cmp eax rw-data
je r-xdata
push eax
call sub_46965a
pop ecx
push esi
call sub_46965a
pop ecx
push eax
call sub_46965a
pop ecx
sub_46b25a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_46b153
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_46b153
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_46d6cf
push 0x16
call sub_470a4b
pop ecx
pop ecx
push 0x3
call sub_46879d
sub_46b2bb
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_46b25a
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_46b33a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_469520
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_46b33a
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_469248
pop ecx
call sub_46965a
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_46b39b
pop ecx
pop edi
sub_46b3b0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_46b434
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_46786e
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_46782c
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_46786e
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_467902
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_46b526
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_46b564
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_46b526
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_46b58d
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_46f4a7
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_46b5e7
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_46b64d
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_46f9a0
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_46f973
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_46b68b
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_46c34a
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add edx eax
add ecx edx
push ecx
call sub_46f9cd
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
call sub_46b6ec
mov eax [ ebp + 0xc ]
add esp 0x30
pop esi
leave
retn
sub_46b6ec
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x18 ] bl
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi ] 0x2d
mov eax edi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setg al
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax edi
push eax
call sub_46b98e
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
jle r-xdata
mov [ edi ] 0x2d
lea eax [ edi + 0x1 ]
xor ecx ecx
cmp [ ebp + 0x18 ] bl
push r--data
sete cl
add ecx eax
add ecx [ ebp + 0xc ]
push ecx
call sub_467920
cmp [ ebp + 0x10 ] ebx
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov dl [ eax + 0x1 ]
lea ecx [ eax + 0x1 ]
mov [ eax ] dl
mov eax ecx
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_46b7ae
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_46c34a
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
add eax esi
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
push eax
call sub_46f9cd
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push esi
push [ ebp + 0xc ]
call sub_46b803
mov eax [ ebp + 0xc ]
add esp 0x2c
pop esi
leave
retn
sub_46b803
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
dec eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi ] 0x2d
mov edi ebx
jne r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea edi [ ebx + 0x1 ]
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebx
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
add edi eax
push 0x1
push edi
call sub_46b98e
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
push 0x1
push edi
call sub_46b98e
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
neg esi
cmp [ ebp + 0xc ] esi
jl r-xdata
neg esi
jmp r-xdata
push [ ebp + 0xc ]
push edi
call sub_46b98e
push [ ebp + 0xc ]
push 0x30
push edi
call sub_467a10
add esp 0x14
mov [ ebp + 0xc ] esi
sub_46b8aa
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
lea eax [ ebp - 0x28 ]
push edi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_46c34a
mov eax [ ebp - 0xc ]
mov ebx [ ebp + 0x10 ]
lea esi [ eax - 0x1 ]
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edi
call sub_46f9cd
mov eax [ ebp - 0xc ]
add esp 0x1c
dec eax
cmp esi eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
call sub_46b6ec
add esp 0x14
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push ebx
push [ ebp + 0xc ]
call sub_46b803
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ edi - 0x2 ] al
sub_46b93d
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46b68b
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46b8aa
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46b7ae
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_46b98e
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_46c5b0
inc eax
push eax
push esi
add esi edi
push esi
call sub_469930
add esp 0x10
pop esi
sub_46b9b3
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_46c45c
add esp 0x1c
test eax eax
jne r-xdata
sub_46ba28
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_46fb25
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_46fd59
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_46fb25
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_46fd15
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_46fa4d
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_46bb40
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_46c261 ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_46c31f
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_46c31f
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_46c281
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_46c281
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_46c32c
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_46c31f
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_46c31f
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_46c31f
pop ecx
xor edx edx
call sub_46c31f
pop ecx
jmp r-xdata
call sub_46c31f
pop ecx
movzx eax ax
jmp r-xdata
call sub_46c31f
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_46c5b0
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_46c31f
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_46c33c
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_46fee2
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_46c31f
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_470020
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_46ffb0
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_46c2e7
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_46c2b6
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_46c2e7
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_46c2b6
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_46c2b6
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_46c2e7
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_46fee2
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_46c281
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_46ba28
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_46c2b6
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_46c281
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_46c2e7
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_46c281
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_46c34a
push ebp
mov ebp esp
sub esp 0x28
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_46c3a6
pop ecx
lea eax [ ebp - 0x28 ]
pop ecx
lea esi [ ebp - 0xc ]
push eax
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_470095
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
movsx eax [ ebp - 0x26 ]
mov [ esi ] eax
movsx eax [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_467920
add esp 0x20
mov [ esi + 0xc ] edi
mov eax esi
pop edi
pop esi
leave
retn
sub_46c3a6
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_46c45c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_469f00
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_467a10
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_46c5b0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_46c62b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
push [ ebp + 0xc ]
call sub_469520
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
push ebx
call sub_46965a
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2
jne r-xdata
mov [ ebp - 0x24 ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
cmp esi 0xffffffe0
ja r-xdata
mov eax [ ebp - 0x24 ]
cmp eax edi
jne r-xdata
push 0x9
call sub_46b33a
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_46da24
pop ecx
mov [ ebp - 0x28 ] eax
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp esi edi
jne r-xdata
mov [ ebp - 0x24 ] edi
cmp esi 0xffffffe0
ja r-xdata
cmp esi edi
jbe r-xdata
cmp [ rw-data ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_46c7af
cmp [ ebp - 0x28 ] edi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
mov eax [ ebp - 0x24 ]
cmp eax edi
jne r-xdata
push 0x9
call sub_46b33a
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push ebx
call sub_46e77f
add esp 0xc
mov edi eax
mov [ ebp - 0x30 ] edi
test edi edi
je r-xdata
push 0x10
pop esi
add esi 0xf
and esi 0xfffffff0
jmp r-xdata
push esi
call sub_46d9c1
pop ecx
test eax eax
jne r-xdata
cmp esi edi
jne r-xdata
cmp [ ebp - 0x24 ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_46e22d
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_46d9c1
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x24 ] eax
cmp esi [ rw-data ]
jae r-xdata
mov [ ebp + 0xc ] esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x24 ] eax
push 0x1
pop esi
cmp esi edi
jne r-xdata
push esi
call sub_46dd78
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x24 ] ebx
jmp r-xdata
push esi
call sub_46d9c1
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ebx esi
shr ebx 0x4
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_46eb47
add esp 0x10
test eax eax
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
push 0x1
pop esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
mov [ ebp - 0x20 ] eax
cmp eax esi
jb r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_46c8fd
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
push ebx
call sub_46e81b
pop ecx
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
mov [ ebp - 0x20 ] eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x24 ]
call sub_467a70
push ebx
push [ ebp - 0x28 ]
call sub_46da4f
add esp 0x14
mov eax esi
movzx eax [ edi ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
cmp eax esi
jb r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ edi ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x24 ]
call sub_467a70
push ebx
push [ ebp - 0x28 ]
call sub_46da4f
add esp 0x14
mov eax esi
push eax
push ebx
push [ ebp - 0x24 ]
call sub_467a70
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_46e7d6
add esp 0x18
jmp r-xdata
mov eax esi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
call sub_467a70
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_46e7d6
add esp 0x18
mov eax esi
sub_46c960
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_46c987
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
xor esi esi
push edi
push esi
push esi
push esi
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
xor edi edi
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_470328
mov ebx eax
add esp 0x1c
test bl 0x4
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_46f947
pop ecx
test bl 0x2
pop ecx
jne r-xdata
mov edi 0x200
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edi 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
fld [ ebp - 0xc ]
mov [ eax ] edi
pop edi
fstp [ eax + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
or edi 0x100
cmp eax 0x2
jne r-xdata
test bl 0x1
jne r-xdata
sub_46ca08
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_47187e
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_469f00
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_469f00
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_46cc30
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_46b33a
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_46b39b
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_46f516
mov ebx eax
add esp 0x4
call sub_46f516
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_46cd00
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_46b153
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_46ce3e
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_46ce3e
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_46ce78
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_468e8c
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_4707f9
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_46ced0
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_468e8c
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_469520
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_469248
pop ecx
push esi
call sub_46c5b0
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_46965a
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_469520
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_46c5b0
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_467920
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_469248
pop ecx
sub_46cf89
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_468e8c
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_46d022
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_469520
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_46d022
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_469248
pop ecx
sub_46d022
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_46d1d6
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_469520
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_469520
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_467a70
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_46965a
pop ecx
mov [ esp + 0x10 ] ebx
sub_46d308
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_469520
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_469248
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_469520
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_46d4c4
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne r-xdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_46d4f1
push ebp
mov ebp esp
mov eax 0x122c
call sub_469f00
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_46d4c4
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je r-xdata
cmp [ ebp - 0x94 ] 0x5
jb r-xdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push r--data
call sub_46ece0
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx ]
cmp al 0x61
jl r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je r-xdata
lea eax [ ebp - 0x122c ]
jmp r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_468410
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl r-xdata
cmp eax ebx
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_4681d0
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
inc eax
mov ecx eax
cmp [ eax ] bl
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_4692ed
add esp 0xc
cmp eax 0x2
je r-xdata
cmp [ ecx ] 0x3b
jne r-xdata
cmp eax 0x3
je r-xdata
inc ecx
mov [ ecx ] bl
jmp r-xdata
cmp eax 0x1
je r-xdata
cmp [ ecx ] bl
jne r-xdata
sub_46d639
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_46d4f1
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x3f8
call sub_46d9dc
pop ecx
jmp r-xdata
push 0x1
pop eax
retn
call sub_46e523
test eax eax
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_46d696
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_46d6cf
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_46d6cf
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_46d6cf
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_46c5b0
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_46c5b0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_467920
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_467920
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_467930
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_467930
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_467930
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_47083b
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_46c5b0
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_4708d0
add esp 0x10
sub_46d822
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_46f312
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_46b25a
pop esi
retn 0x4
sub_46d886
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x61
jl r-xdata
push [ esp + 0x10 ]
call sub_46d8f5
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_46b33a
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x7a
jg r-xdata
push esi
call edi
push 0x13
call sub_46b39b
pop ecx
jmp r-xdata
sub eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_46d8f5
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_46ca08
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_46d9c1
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_46d9dc
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_46da24
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_46da4f
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_469930
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_46dd78
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_46e132
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_46e081
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_46e081
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_46e132
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_46e22d
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_46e523
cmp [ rw-data ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne r-xdata
push 0x2020
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi rw-data
jmp r-xdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je r-xdata
cmp esi rw-data
je r-xdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rw-data
cmp esi eax
jne r-xdata
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov [ rw-data ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl r-xdata
push ebx
push 0x0
push edi
call sub_467a10
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov eax esi
jmp r-xdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp r-xdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae r-xdata
sub_46e667
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rw-data ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
or [ rw-data ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rw-data ]
call [ HeapFree@IAT ]
pop esi
retn
sub_46e6bd
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp esi [ rw-data ]
je r-xdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge r-xdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
cmp [ edi ] 0xf0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je r-xdata
or [ edi ] 0xffffffff
dec [ rw-data ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x18 ] 0xffffffff
jne r-xdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe r-xdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je r-xdata
cmp edx 0x400
jne r-xdata
inc edx
add eax 0x8
cmp edx 0x400
jl r-xdata
push ecx
call sub_46e667
pop ecx
cmp [ eax ] 0xffffffff
jne r-xdata
sub_46e77f
mov eax [ esp + 0x4 ]
mov edx rw-data
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
cmp eax [ ecx + 0x14 ]
jb r-xdata
xor eax eax
pop esi
retn
jmp r-xdata
test al 0xf
jne r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb r-xdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_46e7d6
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne r-xdata
retn
inc [ rw-data ]
cmp [ rw-data ] 0x20
jne r-xdata
push 0x10
call sub_46e6bd
pop ecx
sub_46e81b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae r-xdata
mov eax rw-data
mov edi eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl r-xdata
mov edi [ edi ]
cmp edi eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je r-xdata
mov esi [ esi ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ edi ]
cmp eax ebx
jl r-xdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
call sub_46e523
test eax eax
je r-xdata
jmp r-xdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
jmp r-xdata
push ebx
push ecx
push eax
call sub_46ea23
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rw-data ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp r-xdata
cmp [ edi + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
jmp r-xdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_46ea23
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae r-xdata
mov [ rw-data ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_467a10
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle r-xdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov [ edi + 0x4 ] ebx
mov [ rw-data ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne r-xdata
cmp ecx eax
add ecx 0x8
jmp r-xdata
cmp ecx eax
jae r-xdata
sub_46ea23
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb r-xdata
add esi edi
cmp [ esi ] 0x0
je r-xdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae r-xdata
lea esi [ eax + edx ]
cmp esi ebx
jae r-xdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp r-xdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne r-xdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp r-xdata
lea eax [ edi + 0x8 ]
jmp r-xdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne r-xdata
cmp esi edx
jae r-xdata
inc ebx
inc esi
jmp r-xdata
movzx eax al
add esi eax
jmp r-xdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp esi edi
jae r-xdata
cmp eax edx
jae r-xdata
inc ebx
inc eax
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp r-xdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] dl
add eax 0x8
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov esi ebx
jmp r-xdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_46eb47
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
movzx ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ edi + 0x10 ]
sar eax 0xc
cmp ecx [ ebp + 0x14 ]
lea edi [ edi + eax * 8 + 0x18 ]
jbe r-xdata
jae r-xdata
mov eax [ ebp + 0x14 ]
sub ecx eax
mov [ edx ] al
add [ edi ] ecx
mov [ edi + 0x4 ] 0xf1
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ edx + eax ]
lea eax [ ebx + 0xf8 ]
cmp esi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + edx ]
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov al [ ebp + 0x14 ]
mov [ edx ] al
mov eax [ ebx ]
cmp edx eax
ja r-xdata
cmp eax esi
inc eax
jmp r-xdata
sub ecx [ ebp + 0x14 ]
add [ edi ] ecx
cmp esi eax
jbe r-xdata
cmp eax esi
jae r-xdata
lea eax [ ebx + 0xf8 ]
cmp esi eax
jae r-xdata
and [ ebx + 0x4 ] 0x0
lea eax [ ebx + 0x8 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] esi
cmp [ esi ] al
jne r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc eax
cmp [ esi + eax ] 0x0
je r-xdata
sub_46ebf0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_46ec30
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
mov edx edi
mov esi edi
xor eax eax
or ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
pop esi
pop edi
leave
retn
dec edi
dec edi
mov ah [ esi ]
mov al [ edi ]
mov [ esi ] al
mov [ edi ] ah
inc esi
dec edi
jmp r-xdata
cmp esi edi
jae r-xdata
sub_46ec60
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jb r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_46eca0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_46ece0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_46ed18
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xb
call sub_46b33a
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
push 0xb
call sub_46b39b
pop ecx
call sub_46ed46
inc [ rw-data ]
sub_46ed46
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xc
pop edi
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
call sub_46b33a
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] ebx
mov [ esp ] r--data
call sub_4709ce
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
call sub_46b39b
mov [ esp ] rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call sub_46b39b
pop ecx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bx
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_46965a
push esi
call sub_46c5b0
inc eax
push eax
call sub_469520
add esp 0xc
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_46b3b0
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_467920
push edi
call sub_46b39b
push 0x3
push esi
push [ rw-data ]
call sub_4708d0
mov eax [ rw-data ]
add esi 0x3
add esp 0x18
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_46801a
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] 0x1
inc esi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebx
push 0x3f
mov edi 0x220
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc esi
push esi
call sub_46801a
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
test eax eax
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_4708d0
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_46801a
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_46efee
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_46f19a
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_46f19a
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_46f19a
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_46f19a
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_46f19a
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jge r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_46f341
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_46f38c
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_46f41e
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_46f38c
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_46f41e
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_46f4a7
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x41
jl r-xdata
push [ esp + 0x10 ]
call sub_46f516
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_46b33a
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x5a
jg r-xdata
push esi
call edi
push 0x13
call sub_46b39b
pop ecx
jmp r-xdata
add eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_46f516
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_46ca08
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_46f5e1
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_46f62a
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_470c0a
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_470c0a
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_46f680
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_46f5e1
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_46f62a
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_46f70c
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_46f733
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_46f74e
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_46f7db
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_46f70c
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_46f680
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_46f733
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_46f727
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_46f727
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_46f70c
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_46f74e
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_46f680
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_46f74e
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_46f74e
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_46f727
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_46f74e
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_46f973
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_470328
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_46f947
add esp 0x24
leave
retn
sub_46f9a0
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_470328
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_46f95d
add esp 0x24
leave
retn
sub_46f9cd
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_46c5b0
inc eax
push eax
push edi
push esi
call sub_469930
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_46fa4d
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4689bb
mov [ eax ] 0x9
call sub_4689c4
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_470e6c
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_46fab2
push esi
mov edi eax
call sub_470ecb
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_46fab2
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_470e2a
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_4689bb
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_468948
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_46fb25
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4689bb
mov [ eax ] 0x9
call sub_4689c4
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_470e6c
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_46fb8a
push esi
mov edi eax
call sub_470ecb
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_46fb8a
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_46fab2
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_4689bb
mov [ eax ] 0x1c
call sub_4689c4
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_468948
pop ecx
call sub_4689bb
mov [ eax ] 0x9
call sub_4689c4
mov [ eax ] esi
jmp r-xdata
sub_46fd15
inc [ rw-data ]
push 0x1000
call sub_469520
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_46fd59
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_46fd82
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_46a01d
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_46a01d
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor ecx ecx
mov edx rw-data
push 0x1a
call sub_469248
pop ecx
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
sar esi 0x5
and eax 0x1f
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_46fe3e
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_46b33a
pop ecx
retn
sub_46fe6d
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_46b33a
pop ecx
retn
sub_46fe90
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_46b39b
pop ecx
retn
sub_46febf
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_46b39b
pop ecx
retn
sub_46fee2
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_46ff3b
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_46b33a
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_46b39b
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_46ff3b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_4689bb
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_46ffb0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_470020
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_470095
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4712c5
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4710a5
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_467920
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_470c89
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_470cb7
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_467920
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_470c89
lea eax [ ebp - 0x10 ]
push eax
call sub_470c89
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_470c2b
lea eax [ ebp - 0x10 ]
push eax
call sub_470c89
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_470328
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_4707c9 ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_46b9b3
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_46b9b3
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_46b9b3
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_46b9b3
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_470ce4
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_4712c5
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_47080a
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_47083b
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_4708d0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_4709ce
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_46c5b0
pop ecx
mov edi eax
call sub_471380
test eax eax
jne r-xdata
push eax
call sub_46c5b0
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_471341
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_470a4b
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_46b153
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_470bcd
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_46b39b
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_46879d
push 0x1
call sub_46b39b
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_46b39b
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_46b33a
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_470bcd
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_470c0a
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_470c2b
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_470c0a
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_470c0a
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_470c0a
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_470c0a
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_470c89
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_470cb7
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_470ce4
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_470c89
push ebx
call sub_470c89
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_470c2b
push ebx
call sub_470c89
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_470c2b
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_470c89
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_470dab
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_4689bb
mov [ eax ] 0x9
call sub_4689c4
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_470e2a
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_4689bb
mov [ eax ] 0x9
call sub_4689c4
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_470e6c
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_46b33a
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_46b39b
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_470eed
push ebx
push edi
push 0x2
xor ebx ebx
call sub_46b33a
pop ecx
push 0x3
pop edi
cmp [ rw-data ] edi
jle r-xdata
push 0x2
call sub_46b39b
pop ecx
mov eax ebx
pop edi
pop ebx
retn
push esi
inc edi
cmp edi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov eax [ rw-data ]
mov esi edi
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
je r-xdata
pop esi
cmp edi 0x14
jl r-xdata
push eax
call sub_4714f1
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_46965a
mov eax [ rw-data ]
pop ecx
and [ esi + eax ] 0x0
inc ebx
sub_470f6e
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_470f9c
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_47156e
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_470f9c
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_46fb25
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_471001
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_46b33a
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_46b39b
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_46fe6d
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_46febf
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_470f6e
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_470f6e
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_4710a5
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_470c0a
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_470c89
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_470cb7
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_4712c5
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_4710a5
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_471341
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_471601
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_471380
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_469520
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_4718a9
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_4713f0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_46b33a
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_46f516
mov ebx eax
add esp 0x4
call sub_46f516
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_46b39b
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4714f1
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_46fe3e
push esi
call sub_471522
push esi
mov edi eax
call sub_46fe90
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_471522
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_470f9c
push esi
mov edi eax
call sub_471bcf
push [ esi + 0x10 ]
call sub_471aef
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_46965a
and [ esi + 0x1c ] 0x0
pop ecx
sub_47156e
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_4689bb
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_470e6c
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4689bb
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_470e2a
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_470ecb
pop ecx
mov eax esi
jmp r-xdata
call sub_4689c4
mov [ eax ] esi
test esi esi
je r-xdata
sub_471601
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_47187e
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_47187e
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_469f00
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_469f00
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_47187e
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_4718a9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_469760
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_471a88
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_471a30
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_469520
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_471380
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_46c62b
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_46965a
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_46c62b
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_469520
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_46c5b0
inc eax
inc eax
push eax
call sub_469520
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_467920
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_46965a
pop ecx
mov [ rw-data ] eax
sub_471a30
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_471341
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_471a88
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_469520
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_469248
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_46a15a
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_471aef
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4689bb
mov [ eax ] 0x9
call sub_4689c4
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_470e6c
push esi
call sub_471b4c
push esi
mov edi eax
call sub_470ecb
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_471b4c
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_470e2a
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_468948
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_470e2a
push 0x1
mov edi eax
call sub_470e2a
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_470e2a
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_470dab
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_471bcf
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_46965a
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_471c70
push esi
push edi
mov esi [ esp + 0xc ]
push esi
call sub_471c50
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ esp + 0x10 ]
cmp eax 0x6
jne r-xdata
lea eax [ eax + eax * 2 ]
mov edi [ eax * 8 + rw-data ]
mov edi [ rw-data ]
jmp r-xdata
push edi
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
sub_471cc0
sub esp 0x10
xor eax eax
mov ax [ rw-data ]
push esi
mov esi [ esp + 0x18 ]
push edi
push eax
mov edi [ GetPropA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push esi
call sub_471c50
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
push eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
push eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
push esi
call [ IsWindowUnicode@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
sub_471db0
mov eax [ esp + 0x8 ]
sub esp 0x4
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
mov edx [ rw-data ]
push eax
push ecx
push edx
call [ CallNextHookEx@IAT ]
mov edi eax
mov ecx [ rw-data ]
cmp [ esi + 0xc ] ecx
jne r-xdata
mov eax edi
pop edi
pop esi
add esp 0x4
retn 0xc
mov eax [ rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
cmp [ rw-data ] 0x35f
jb r-xdata
mov [ esp + 0x8 ] 0x1
push 0xfffffff0
mov eax [ esi + 0xc ]
push eax
call [ GetWindowLongA@IAT ]
mov [ esp + 0x8 ] 0x0
test al 0x4
jne r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ecx [ esi + 0xc ]
push eax
push ecx
call sub_471cc0
add esp 0x8
lea eax [ esp + 0x8 ]
mov ecx [ esi + 0xc ]
push eax
push 0x0
push 0x11f0
push ecx
call [ SendMessageA@IAT ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
sub_471e60
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ GetCurrentThreadId@IAT ]
push eax
mov ecx [ rw-data ]
push ecx
push sub_471db0
push 0x4
call [ SetWindowsHookExA@IAT ]
mov [ rw-data ] eax
retn
sub_471ea0
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi [ esp + 0x10 ]
push eax
push esi
call sub_471c70
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
add esp 0x8
push ecx
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
mov edi eax
mov ebx [ RemovePropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_471f20
push esi
mov esi rw-data
push esi
call sub_471f00
add esp 0x4
add esi 0x4
cmp esi rw-data
jb r-xdata
push rw-data
call sub_471f00
add esp 0x4
pop esi
retn
sub_471f50
mov eax [ esp + 0x8 ]
push esi
push 0xf00021
mov esi [ eax + 0x4 ]
mov edx [ eax ]
mov ecx [ eax + 0xc ]
sub ecx esi
mov eax [ eax + 0x8 ]
push ecx
sub eax edx
mov ecx [ esp + 0x10 ]
push eax
push esi
push edx
push ecx
call [ PatBlt@IAT ]
pop esi
retn
sub_471f80
mov eax [ esp + 0xc ]
sub esp 0x10
and eax 0xffff
push ebx
push esi
push edi
push ebp
mov ecx [ eax * 4 + rw-data ]
mov edi [ esp + 0x24 ]
push ecx
push edi
call [ SetBkColor@IAT ]
mov esi eax
mov ebx [ esp + 0x28 ]
lea ecx [ esp + 0x10 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebp [ ebx + 0x8 ]
mov [ ecx ] eax
mov eax [ ebx + 0xc ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebp
mov bp [ esp + 0x34 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x14 ]
inc eax
test bp 0x2
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ ebx + 0xc ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
inc eax
test bp 0x1
mov [ esp + 0x18 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov ax [ esp + 0x30 ]
cmp [ esp + 0x2c ] ax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x18 ] eax
dec eax
test bp 0x4
mov [ esp + 0x10 ] eax
je r-xdata
movzx eax ax
mov ecx [ eax * 4 + rw-data ]
push ecx
push edi
call [ SetBkColor@IAT ]
test bp 0x8
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
push esi
push edi
call [ SetBkColor@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
dec eax
test bp 0x1000
mov [ esp + 0x14 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
sub [ esp + 0x18 ] 0x2
sub_4720c0
mov ecx [ esp + 0x8 ]
sub esp 0x10
lea edx [ esp ]
push esi
push edi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
mov edi [ ecx + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov [ edx + 0x4 ] esi
mov [ edx + 0x8 ] edi
mov di [ esp + 0x24 ]
mov [ edx + 0xc ] eax
mov ax di
lea edx [ esp + 0x8 ]
and ax 0xf
mov esi [ esp + 0x1c ]
push eax
push 0x1
push 0x7
push edx
push esi
call sub_471f80
dec [ esp + 0x1c ]
dec [ esp + 0x20 ]
lea ecx [ esp + 0x1c ]
inc [ esp + 0x24 ]
inc [ esp + 0x28 ]
add esp 0x14
push edi
push 0x0
push 0x2
push ecx
push esi
call sub_471f80
add esp 0x14
pop edi
pop esi
add esp 0x10
retn
sub_472130
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push ecx
mov ecx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x20 ]
push eax
push ecx
push edx
call [ IntersectClipRect@IAT ]
add esp 0x10
retn
sub_472170
mov eax [ esp + 0x8 ]
sub esp 0x108
push ebx
cmp [ eax ] 0x0
push esi
push edi
lea esi [ esp + 0x14 ]
je r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push eax
mov [ esi ] 0x0
push ecx
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x120 ]
push ecx
push eax
call [ GetTextExtentPointA@IAT ]
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x120 ]
mov edx [ esp + 0x10 ]
mov [ eax ] ecx
mov ecx [ esp + 0x124 ]
pop edi
pop esi
pop ebx
mov [ ecx ] edx
add esp 0x108
retn
mov edi [ CharNextA@IAT ]
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
inc eax
mov [ esi ] cl
inc esi
cmp cl [ rw-data ]
jne r-xdata
jmp r-xdata
mov cl [ eax ]
cmp cl 0x26
jne r-xdata
cmp cl 0x1e
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
inc eax
cmp [ eax ] bl
je r-xdata
cmp cl 0x1f
jne r-xdata
jmp r-xdata
push eax
call edi
jmp r-xdata
cmp [ eax ] bl
jne r-xdata
sub_472220
push esi
push rw-data
call [ InitializeCriticalSection@IAT ]
push rw-data
call [ EnterCriticalSection@IAT ]
push rw-data
inc [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
mov esi [ esp + 0x8 ]
mov esi [ esp + 0x8 ]
push 0x0
push 0x1
push esi
call sub_475120
add esp 0xc
call sub_472cf0
jmp r-xdata
mov eax [ rw-data ]
pop esi
retn 0x4
push esi
call sub_472350
call sub_4724a0
test eax eax
je r-xdata
sub_472290
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
dec [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
call sub_472ee0
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
je r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + rw-data ] eax
jne r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_472360
cmp [ rw-data ] 0x30a
push esi
push edi
jae r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
or esi 0x1
test esi 0x2
je r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] 0x80
je r-xdata
and esi 0xfffffffc
push rw-data
call [ LeaveCriticalSection@IAT ]
xor eax eax
pop edi
pop esi
retn 0x8
call [ GetCurrentThreadId@IAT ]
mov edi eax
xor eax eax
cmp [ rw-data ] eax
jle r-xdata
push edi
mov eax [ rw-data ]
push eax
push sub_4734c0
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
je r-xdata
mov ecx rw-data
mov edx [ rw-data ]
mov ecx [ esp + 0xc ]
shl edx 0x2
mov [ edx + edx * 4 + rw-data ] ecx
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] edi
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] eax
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] 0x1
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] esi
mov ecx [ rw-data ]
mov [ rw-data ] edi
mov [ rw-data ] ecx
inc [ rw-data ]
shl eax 0x2
inc [ eax + eax * 4 + rw-data ]
jmp r-xdata
add ecx 0x14
inc eax
cmp eax [ rw-data ]
jl r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop edi
pop esi
retn 0x8
cmp [ ecx ] edi
je r-xdata
sub_4724a0
call [ GetCurrentThreadId@IAT ]
xor edx edx
cmp [ rw-data ] edx
jle r-xdata
xor eax eax
retn
mov ecx rw-data
mov eax 0x1
retn
add ecx 0x14
inc edx
cmp edx [ rw-data ]
jl r-xdata
cmp [ ecx ] eax
je r-xdata
sub_4724d0
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
jne r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_4725a0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov esi [ esp + 0x14 ]
push 0xfffffffc
push esi
call [ GetWindowLongA@IAT ]
xor ecx ecx
mov edi [ SetWindowLongA@IAT ]
mov ebx [ RemovePropA@IAT ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
inc ecx
cmp ecx 0x6
jl r-xdata
push ecx
push esi
call sub_471c70
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
xor eax eax
mov ecx 0x10
lea edx [ ecx + ecx * 2 ]
cmp [ edx * 8 + rw-data ] eax
jne r-xdata
jne r-xdata
push 0x5
push esi
mov esi [ GetWindow@IAT ]
call esi
mov edi eax
test edi edi
je r-xdata
cmp eax sub_473150
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
push edi
call sub_4725a0
push 0x2
push edi
call esi
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov edi [ GetPropA@IAT ]
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push ecx
push esi
call sub_471c70
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
jmp r-xdata
push 0x1
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
je r-xdata
sub_4726b0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov edi [ esp + 0x14 ]
test edi edi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
cmp edi 0x6
jg r-xdata
mov esi [ esp + 0x10 ]
push esi
call sub_471c50
add esp 0x4
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ebx eax
push esi
call [ GetParent@IAT ]
push eax
push 0x0
push 0xffff
mov eax edi
shl eax 0x5
push ebx
push esi
call [ eax + r--data ]
add esp 0x14
cmp eax 0x1
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
retn 0x8
lea eax [ edi + edi * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_471cc0
add esp 0x8
sub_472740
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
call sub_471c50
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push esi
call sub_473850
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x4
retn
pop edi
pop esi
pop ebx
add esp 0x4
retn
lea ebx [ esp + 0xc ]
mov edi [ SendMessageA@IAT ]
mov [ esp + 0xc ] 0x29a
push ebx
push 0x0
push 0x1944
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
push ebx
push 0x0
push 0x1943
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ RemovePropA@IAT ]
mov ax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ecx
push 0x0
push eax
push esi
call sub_473850
add esp 0x10
sub_4727f0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov eax [ esp + 0x14 ]
push 0x5
push eax
mov ebp [ GetWindow@IAT ]
call ebp
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov si [ esp + 0x18 ]
push 0x2
push edi
call ebp
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
push ebx
call sub_472740
add esp 0xc
push 0x2
push ebx
call ebp
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push esi
push edi
call sub_472740
add esp 0xc
push 0x5
push edi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
sub_472870
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
push sub_473150
push edi
call sub_471cc0
add esp 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov bp [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push ebx
call sub_473850
add esp 0x10
push 0x2
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
sub_4728e0
cmp [ rw-data ] 0x0
push esi
je r-xdata
xor eax eax
pop esi
retn 0xc
mov eax [ esp + 0x8 ]
cmp eax 0x134
jb r-xdata
cmp eax 0x137
je r-xdata
cmp eax 0x134
jne r-xdata
mov esi [ esp + 0xc ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx [ rw-data ]
push ecx
push esi
call [ SetBkColor@IAT ]
mov eax [ rw-data ]
pop esi
retn 0xc
cmp [ rw-data ] 0x35f
jae r-xdata
xor eax eax
pop esi
retn 0xc
mov esi [ esp + 0x10 ]
push 0x5
push esi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x3
cmp al 0x3
jne r-xdata
sub_4729a0
sub esp 0x3c
cmp [ esp + 0x50 ] 0x0
push ebx
push esi
push edi
push ebp
je r-xdata
mov esi [ esp + 0x50 ]
push 0x6
push esi
call sub_471c70
add esp 0x8
xor eax eax
mov esi [ esp + 0x50 ]
jmp r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x58 ]
push eax
push edx
push esi
call [ DefWindowProcA@IAT ]
mov edx [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x5c ]
test eax eax
push ecx
je r-xdata
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
cmp [ rw-data ] 0x0
mov [ esp + 0x10 ] eax
jne r-xdata
mov [ esp + 0x14 ] 0x1
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x11ef
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
mov ebp [ GetWindowLongA@IAT ]
push esi
call ebp
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov ecx eax
and ecx 0x10400080
cmp ecx 0x10400080
jne r-xdata
and eax 0xc00000
mov ebx [ rw-data ]
sub eax 0xc00000
cmp eax 0x1
push esi
sbb ebp ebp
neg ebp
cmp ebp 0x1
sbb eax eax
inc eax
sub ebx eax
call [ GetWindowDC@IAT ]
mov edi eax
lea eax [ esp + 0x1c ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub [ esp + 0x24 ] ecx
push 0xf
lea eax [ esp + 0x20 ]
push 0x7
sub [ esp + 0x30 ] edx
push 0x2
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x28 ] 0x0
push eax
push edi
call sub_471f80
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x1c ]
push 0xf
push 0x2
push 0x0
push ecx
push edi
call sub_471f80
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
mov ecx [ rw-data ]
push ecx
push edi
call [ SelectObject@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x1c ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push ecx
push edi
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x24 ]
add eax [ rw-data ]
mov [ esp + 0x3c ] eax
call sub_471f50
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
sub eax [ esp + 0x24 ]
add esp 0x8
sub eax [ rw-data ]
push 0x0
push eax
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x2c ]
push ecx
push edi
call sub_471f50
mov eax [ esp + 0x24 ]
add esp 0x8
add eax [ rw-data ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x24 ]
sub eax [ rw-data ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x34 ] eax
push ecx
mov eax [ esp + 0x34 ]
push edi
add eax ebx
mov [ esp + 0x40 ] eax
call sub_471f50
add esp 0x8
test ebp ebp
je r-xdata
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x2c ]
sub eax [ esp + 0x20 ]
push ecx
sub eax [ rw-data ]
push edi
add [ esp + 0x38 ] eax
mov eax [ esp + 0x38 ]
add eax [ rw-data ]
mov [ esp + 0x40 ] eax
call sub_471f50
mov ecx [ esp + 0x20 ]
add esp 0x8
push ecx
push edi
call [ SelectObject@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
mov ebp [ esp + 0x30 ]
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x3c ]
mov eax [ edx ]
add ebx [ esp + 0x30 ]
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebp
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
push 0xf
add eax ebx
push 0x0
push 0x2
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x48 ]
mov [ esp + 0x4c ] ebx
mov [ esp + 0x54 ] eax
push ecx
push edi
call sub_471f80
add esp 0x14
sub_472c50
sub esp 0xc
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
add esp 0xc
retn
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x8 ]
push 0x9
push eax
mov esi [ GetProfileStringA@IAT ]
mov [ rw-data ] 0x1e
push rw-data
push rw-data
push rw-data
call esi
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
mov edi [ lstrcmpiA@IAT ]
call edi
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x9
push eax
push rw-data
push rw-data
push rw-data
call esi
lea eax [ esp + 0x8 ]
push rw-data
push eax
call edi
test eax eax
jne r-xdata
mov [ rw-data ] 0x1f
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ rw-data ] 0x1f
sub_472cf0
sub esp 0x28
push ebx
push esi
push edi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0xc
push ebx
mov esi [ GetDeviceCaps@IAT ]
call esi
mov edi eax
push 0xe
push ebx
call esi
imul edi eax
mov eax 0x1
cmp edi 0x4
jge r-xdata
push 0x1
mov edi [ GetSystemMetrics@IAT ]
mov [ rw-data ] eax
call edi
cmp eax 0x15e
jne r-xdata
xor eax eax
push ebx
push 0x0
call [ ReleaseDC@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
call edi
cmp eax 0x280
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax [ rw-data ]
pop edi
pop esi
pop ebx
add esp 0x28
retn
push rw-data
mov esi [ GlobalAddAtomA@IAT ]
call esi
mov [ rw-data ] ax
test ax ax
jne r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
push 0x2a
call edi
mov [ rw-data ] al
call sub_472c50
push 0x1
call sub_472fc0
add esp 0x4
test eax eax
je r-xdata
mov ebx rw-data
mov esi r--data
mov edi [ GetClassInfoA@IAT ]
mov eax [ esi ]
lea edx [ esi - 0x14 ]
mov [ ebx ] eax
lea ecx [ esp + 0xc ]
push ecx
add ebx 0x18
push edx
add esi 0x20
push 0x0
call edi
mov ecx [ esp + 0x10 ]
cmp esi r--data
mov [ ebx - 0x14 ] ecx
jb r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x8002
push 0x0
call edi
test eax eax
je r-xdata
mov eax [ DefDlgProcA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
jmp r-xdata
sub_472ee0
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
mov eax rw-data
add eax 0x18
cmp eax rw-data
jb r-xdata
mov [ eax ] 0x0
cmp [ eax ] 0x0
je r-xdata
call sub_471f20
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ GlobalDeleteAtom@IAT ]
mov ax [ rw-data ]
mov esi [ GlobalDeleteAtom@IAT ]
push eax
call esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
mov [ rw-data ] 0x0
push rw-data
call [ LeaveCriticalSection@IAT ]
pop esi
retn
mov ax [ rw-data ]
push eax
call esi
sub_472fc0
sub esp 0x30
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor si si
mov ebx [ GetSysColor@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edi si
inc si
xor eax eax
mov ax [ edi * 2 + r--data ]
push eax
call ebx
cmp si 0x8
mov [ esp + edi * 4 + 0x1c ] eax
jb r-xdata
cmp [ rw-data ] 0x300
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
mov [ esp + 0x1c ] 0xffffff
cmp [ esp + 0x20 ] 0x808080
mov [ esp + 0x34 ] 0xc0c0c0
je r-xdata
mov eax [ esp + 0x34 ]
cmp [ esp + 0x20 ] eax
jne r-xdata
cmp [ esp + 0x40 ] 0x0
jne r-xdata
mov [ esp + 0x34 ] 0x808080
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x3c ]
push eax
push ecx
mov eax [ rw-data ]
xor si si
push edx
push 0x67c7
push eax
call sub_4751f0
mov edi [ CreateSolidBrush@IAT ]
mov [ esp + 0xc ] eax
mov esi rw-data
lea edi [ esp + 0x1c ]
mov ecx 0x20
[ esi ] [ edi ]
jne r-xdata
movzx eax si
inc si
mov ecx [ esp + eax * 4 + 0x1c ]
lea ebx [ eax * 4 ]
push ecx
call edi
cmp si 0x3
mov [ esp + ebx + 0x10 ] eax
jb r-xdata
xor eax eax
xor ecx ecx
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x30
retn
xor si si
inc ax
cmp ax 0x3
jb r-xdata
movzx eax si
inc si
lea ecx [ esp + eax * 4 + 0x10 ]
push ecx
call sub_471f00
add esp 0x4
cmp si 0x3
jb r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_471f00
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edx ax
cmp [ esp + edx * 4 + 0x10 ] ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
call sub_471f20
mov ebx [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
mov edx rw-data
lea esi [ esp + 0x1c ]
mov eax [ ecx ]
mov edi rw-data
mov ecx [ ecx + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ecx
mov ecx 0x8
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop edi
pop esi
mov [ rw-data ] eax
mov eax 0x1
pop ebx
add esp 0x30
retn
sub_473150
sub esp 0x18
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x30 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x2c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov ebp [ esp + 0x38 ]
push 0x6
mov ebx [ esp + 0x38 ]
push ebp
mov esi [ esp + 0x34 ]
push ebx
push edi
push esi
call sub_471ea0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x86
ja r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x138
ja r-xdata
cmp edi 0x85
jae r-xdata
cmp edi 0x1943
jb r-xdata
cmp edi 0x132
jae r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp edi 0xc
je r-xdata
mov ebx [ esp + 0x34 ]
mov ebp [ esp + 0x38 ]
cmp edi 0x1944
jbe r-xdata
lea eax [ esp + 0x18 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
cmp edi 0x110
je r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
push esi
call [ IsIconic@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov eax 0x3ee
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
push 0x4
push esi
call [ GetWindowLongA@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0x6
push esi
call sub_471c70
mov [ esp + 0x1c ] eax
add esp 0x8
cmp [ rw-data ] 0x35f
jb r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
push 0x0
mov ebx [ esp + 0x38 ]
push ebp
push ebx
push edi
push esi
call sub_4729a0
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp eax 0xffff0000
jbe r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
jmp r-xdata
push ebp
cmp eax 0x1
jne r-xdata
mov [ esp + 0x10 ] 0x1
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x30a
ja r-xdata
push ebx
push edi
call sub_4728e0
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
test eax eax
je r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
cmp [ rw-data ] 0x35f
mov edi eax
jb r-xdata
push esi
call sub_4725a0
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push esi
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0xffff
push esi
call sub_4727f0
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
sub_473480
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_471c50
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
xor eax eax
pop esi
retn
sub_4734c0
sub esp 0x4
push ebx
push esi
push edi
push ebp
call [ GetCurrentThreadId@IAT ]
mov esi eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] esi
je r-xdata
mov edi [ rw-data ]
push rw-data
call [ LeaveCriticalSection@IAT ]
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x20 ]
cmp esi 0x3
jne r-xdata
xor ecx ecx
cmp ecx [ rw-data ]
jge r-xdata
shl edi 0x2
push ebx
mov eax [ esp + 0x20 ]
mov ecx [ edi + edi * 4 + rw-data ]
push eax
push esi
push ecx
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov ebp [ ebx ]
cmp [ ebp + 0x28 ] 0x8002
jne r-xdata
jne r-xdata
mov eax rw-data
lea eax [ edi * 4 ]
test [ eax + eax * 4 + rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x20
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
push ebx
push eax
push esi
push 0x0
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov [ rw-data ] ecx
mov [ rw-data ] esi
add eax 0x14
inc ecx
cmp ecx [ rw-data ]
jl r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_473480
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
push sub_473150
push eax
call sub_471e60
add esp 0x8
jmp r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ eax ] esi
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x1c ]
push eax
push 0x1
push 0xffff
push ecx
call sub_473850
add esp 0x10
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov eax [ esp + 0x1c ]
push 0xfffffff0
push eax
mov ebp [ GetWindowLongA@IAT ]
call ebp
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
cmp ecx [ rw-data ]
cmp [ rw-data ] 0x18
je r-xdata
push sub_473150
push ebp
call sub_471cc0
add esp 0x8
jmp r-xdata
mov ebp [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push ebp
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
push eax
call [ GetParent@IAT ]
push eax
call sub_473480
add esp 0x4
test eax eax
je r-xdata
sub_4736a0
sub esp 0x10
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax 0x1
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea ecx [ esp ]
push 0x10
push ecx
push eax
call [ GetClassNameA@IAT ]
lea ecx [ esp ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
cmp eax 0x1
sbb eax eax
add esp 0x10
inc eax
retn
sub_4736f0
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov eax [ esp + 0x14 ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
xor eax eax
retn
cmp eax 0x3
je r-xdata
mov eax 0x1
retn
sub_473730
cmp [ rw-data ] 0x35f
push ebx
push esi
push edi
push ebp
jb r-xdata
mov eax [ esp + 0x18 ]
and eax 0x3
cmp eax 0x2
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebp eax
test ebp ebp
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_473850
add esp 0x10
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x2
push ebp
call sub_473850
add esp 0x10
push 0x2
push ebp
call esi
test eax eax
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_473850
add esp 0x10
sub_473800
mov eax [ esp + 0x8 ]
and ax 0x1f
movzx ecx ax
cmp ecx 0x3
je r-xdata
xor eax eax
retn
mov ax [ esp + 0xc ]
test al 0x10
je r-xdata
test al 0x20
je r-xdata
cmp ecx 0x2
jle r-xdata
cmp ecx 0x4
jl r-xdata
mov eax 0x1
retn
cmp ecx 0xc
je r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp ecx 0x9
jle r-xdata
cmp ecx 0x10
jl r-xdata
cmp ecx 0x12
jg r-xdata
sub_473850
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
push ebp
push esi
call sub_471c50
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x10
push eax
xor ebp ebp
push esi
mov ebx r--data
call [ GetClassNameA@IAT ]
mov di [ esp + 0x28 ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
add ebx 0x20
inc ebp
cmp ebx r--data
jb r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ ebx - 0x1c ]
push eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
test [ ebx ] di
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov bx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
push ecx
push ebx
push edi
push eax
push esi
mov eax ebp
shl eax 0x5
call [ eax + r--data ]
add esp 0x14
mov edi eax
cmp edi 0x1
jne r-xdata
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
cmp bx 0x1
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_471cc0
add esp 0x8
cmp edi 0x1
cmp [ rw-data ] 0x10
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_471e60
add esp 0x8
cmp edi 0x1
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
sub_473940
sub esp 0x10
lea eax [ esp ]
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
push eax
push edi
call [ GetWindowRect@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
mov esi eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
mov ecx [ eax + 0x18 ]
test cl 0xc0
jne r-xdata
lea eax [ esp + 0xc ]
push 0x0
push eax
push edi
call [ InvalidateRect@IAT ]
inc [ esp + 0x14 ]
and cl 0x3
cmp cl 0x2
jne r-xdata
test cl 0x2
je r-xdata
mov ecx [ esp + 0x14 ]
sub ecx [ eax + 0x10 ]
cmp ecx [ esp + 0xc ]
jne r-xdata
test cl 0x1
jne r-xdata
mov eax [ eax + 0x14 ]
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x10 ]
cmp ecx eax
jl r-xdata
inc eax
add [ esp + 0x10 ] eax
sub_473a00
sub esp 0x10
push ebx
push esi
push edi
push 0xfffffff0
mov edi [ esp + 0x24 ]
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
lea eax [ esp + 0xc ]
push eax
push edi
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0xc ]
push 0x1
push 0x1
push ecx
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
lea eax [ esp + 0xc ]
push eax
push edi
call [ ValidateRect@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
inc [ esp + 0x14 ]
sub_473a70
sub esp 0x1c
lea ecx [ esp + 0xc ]
push ebx
push esi
push edi
mov edi [ esp + 0x34 ]
push ebp
mov eax [ edi ]
mov edx [ edi + 0x4 ]
mov ebx [ edi + 0x8 ]
push 0xf
push 0x7
mov [ ecx ] eax
mov eax [ edi + 0xc ]
push 0x7
mov esi [ esp + 0x40 ]
push edi
push esi
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] eax
call sub_471f80
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
cmp [ esp + 0x44 ] 0x1
jne r-xdata
push 0xf00021
mov eax [ edi + 0x4 ]
push 0x1
mov ecx [ edi ]
push 0x1
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov ecx [ edi + 0x4 ]
push 0x1
mov eax [ edi + 0x8 ]
push 0x1
dec eax
push ecx
push eax
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
mov ecx [ edi ]
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
push eax
mov eax [ edi + 0x8 ]
dec eax
push eax
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x1
sbb ebx ebx
neg ebx
inc ebx
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov eax [ esp + 0x30 ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
lea eax [ esp + 0x1c ]
push 0xf
push 0x7
push 0x7
push eax
push esi
call sub_471f80
lea eax [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
mov eax [ rw-data ]
inc [ esp + 0x1c ]
inc [ esp + 0x20 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov ecx [ esp + 0x30 ]
push ecx
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
xor ebp ebp
push eax
push esi
call [ SelectObject@IAT ]
dec [ esp + 0x28 ]
dec [ esp + 0x24 ]
test ebx ebx
jle r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x20 ]
push 0xf00021
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ebx
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push ebx
mov ecx [ esp + 0x28 ]
push eax
mov edx [ esp + 0x28 ]
push ecx
push edx
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x0
jne r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x14 ]
mov ebx [ esp + 0x3c ]
push eax
push ecx
push ebx
push esi
call sub_472170
mov eax [ esp + 0x38 ]
sub eax [ esp + 0x30 ]
sub eax [ esp + 0x28 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x20 ] eax
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x1c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x18 ]
cmp eax ecx
jl r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push 0x1
inc eax
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
push eax
push 0x1
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea ecx [ ebx - 0x1 ]
cmp ecx ebp
jle r-xdata
mov ecx [ esp + 0x24 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
add eax [ esp + 0x14 ]
cmp eax ecx
jl r-xdata
mov eax ecx
inc ebp
cmp ebx ebp
jg r-xdata
lea eax [ esp + 0x1c ]
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
cmp [ esp + 0x48 ] 0x0
mov [ esp + 0x24 ] eax
je r-xdata
mov eax ecx
lea eax [ esp + 0x1c ]
push 0x20
mov ecx [ esp + 0x44 ]
push eax
push ecx
push ebx
push esi
call [ DrawTextA@IAT ]
mov ebp [ GetFocus@IAT ]
call ebp
cmp eax [ esp + 0x30 ]
jne r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
mov ebp [ OffsetRect@IAT ]
push eax
call ebp
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x24 ]
sub eax 0x3
cmp eax ecx
jl r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
lea eax [ esp + 0x1c ]
push edi
push eax
lea eax [ esp + 0x24 ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
mov eax [ edi + 0xc ]
sub eax 0x3
cmp eax ecx
jl r-xdata
mov eax ecx
pop ebp
pop edi
pop esi
pop ebx
add esp 0x1c
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x28 ] eax
mov eax ecx
sub_473db0
sub esp 0x154
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x168 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
mov ebx eax
push edi
and eax 0x20
and ebx 0x1f
mov ebp [ GetParent@IAT ]
mov [ esp + 0x24 ] eax
call ebp
mov esi [ esp + 0x16c ]
push 0x2
mov [ esp + 0x20 ] eax
push esi
call [ SetBkMode@IAT ]
lea eax [ esp + 0x44 ]
mov ebp [ GetClientRect@IAT ]
push eax
push edi
call ebp
mov ebp [ esp + 0x48 ]
lea edx [ esp + 0x44 ]
lea ecx [ esp + 0x34 ]
mov eax [ edx ]
push 0x0
push 0x0
push 0x31
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
push edi
mov edx [ edx + 0xc ]
mov [ ecx + 0x4 ] ebp
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push 0xf
mov ebp [ GetSysColor@IAT ]
call ebp
push eax
push esi
call [ SetBkColor@IAT ]
push 0x12
call ebp
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x1c ]
push edi
push esi
push 0x135
push eax
call [ SendMessageA@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x40 ]
push eax
mov ebp [ IntersectClipRect@IAT ]
mov eax [ esp + 0x38 ]
push ecx
push edx
push eax
push esi
call ebp
mov ebp [ esp + 0x170 ]
test ebp 0x10
je r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x10 ] eax
push edi
call [ IsWindowEnabled@IAT ]
mov [ esp + 0x28 ] eax
push 0x0
push 0x0
push 0xf2
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x18 ] 0x0
mov ecx eax
and ecx 0x3
mov [ esp + 0x30 ] ecx
cmp ecx 0x1
sbb ecx ecx
and eax 0x4
inc ecx
mov [ esp + 0x54 ] eax
sar eax 0x1
or eax ecx
mov edx eax
shl eax 0x3
sub eax edx
add eax eax
cmp [ esp + 0x28 ] 0x0
mov [ esp + 0x14 ] eax
jne r-xdata
cmp ebx 0x7
je r-xdata
test ebp 0xa
jne r-xdata
add ecx 0x2
mov eax ecx
shl ecx 0x3
sub ecx eax
mov eax [ esp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x40 ]
push 0xf00021
sub eax [ esp + 0x3c ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov eax [ esp + 0x44 ]
sub eax [ esp + 0x3c ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea eax [ esp + 0x64 ]
push 0x100
push eax
push edi
call [ GetWindowTextA@IAT ]
mov [ esp + 0x24 ] eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push esi
call [ SelectObject@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
jmp [ ebx * 4 + jump_table_4742d4 ]
cmp ebx 0x1
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x64 ]
push eax
lea eax [ esp + 0x48 ]
push ebx
push ecx
push edx
push eax
push esi
push edi
call sub_473a70
add esp 0x1c
jmp r-xdata
mov [ esp + 0x18 ] 0xd
test ebp 0x4
je r-xdata
cmp [ esp + 0x30 ] 0x2
jne r-xdata
test ebp 0x6
je r-xdata
cmp ebx 0x9
ja r-xdata
test ebp 0x2
je r-xdata
push esi
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
je r-xdata
mov [ esp + 0x18 ] 0x1a
jmp r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_472170
add esp 0x10
cmp [ esp + 0x20 ] 0x0
jne r-xdata
test ebp 0x8
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push edi
call [ SelectObject@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
add [ esp + 0x34 ] 0x4
mov eax [ esp + 0x30 ]
add eax [ esp + 0x34 ]
add eax 0x4
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x38 ]
test ebp 0x20
mov [ esp + 0x40 ] eax
je r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x54 ]
push eax
push ecx
push rw-data
push esi
call sub_472170
add esp 0x10
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x54 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_472170
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x30 ]
add eax [ esp + 0x38 ]
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x44 ]
je r-xdata
mov eax [ esp + 0x44 ]
add eax 0x12
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x4c ]
sub eax 0x12
mov [ esp + 0x3c ] eax
jmp r-xdata
push edi
call [ DeleteDC@IAT ]
mov eax [ esp + 0x18 ]
push 0xcc0020
mov ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x48 ]
push ecx
cmp [ esp + 0x2c ] 0x0
push edi
push 0xd
push 0xe
je r-xdata
mov eax [ esp + 0x20 ]
dec [ esp + 0x4c ]
dec [ esp + 0x50 ]
push 0xf
cdq
sub eax edx
push 0x2
sar eax 0x1
push 0x2
add [ esp + 0x54 ] eax
lea eax [ esp + 0x50 ]
push eax
push esi
call sub_471f80
lea eax [ esp + 0x58 ]
add esp 0x14
push 0x1
push 0x1
push eax
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x44 ]
push 0xf
push 0x0
push 0x0
push ecx
push esi
call sub_471f80
add esp 0x14
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x54 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x4c ]
push edx
push edi
mov esi [ ClientToScreen@IAT ]
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ebp
mov [ edx + 0xc ] eax
mov [ esp + 0x64 ] ecx
call esi
lea ecx [ esp + 0x5c ]
push ecx
push edi
call esi
lea eax [ esp + 0x54 ]
mov ecx [ esp + 0x1c ]
push eax
mov esi [ ScreenToClient@IAT ]
push ecx
call esi
lea ecx [ esp + 0x5c ]
mov eax [ esp + 0x1c ]
push ecx
push eax
call esi
lea ecx [ esp + 0x54 ]
push 0x1
mov edx [ esp + 0x20 ]
push ecx
push edx
call [ InvalidateRect@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
add eax 0x12
mov [ esp + 0x34 ] eax
sub [ esp + 0x4c ] 0x12
mov [ esp + 0x34 ] eax
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x24
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x4c ]
push ecx
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x54 ]
push ecx
sub eax 0xe
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x20
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x54 ]
push 0x1
add eax [ esp + 0x38 ]
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x44 ] eax
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x44 ]
lea eax [ esp + 0x34 ]
push ecx
push eax
lea eax [ esp + 0x3c ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
push eax
push esi
call [ BitBlt@IAT ]
push ebx
push edi
call [ SelectObject@IAT ]
sub_474300
sub esp 0x48
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x60 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x5c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x68 ]
push 0x0
mov ebx [ esp + 0x68 ]
push eax
mov esi [ esp + 0x64 ]
push ebx
push edi
push esi
call sub_471ea0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0xf1
mov eax edi
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_471c70
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp eax 0xf3
je r-xdata
je r-xdata
mov ebp 0x4
cmp eax 0x1943
jb r-xdata
sub eax 0x7
cmp eax 0x8
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_471c70
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0x7
je r-xdata
cmp eax 0x1944
jbe r-xdata
jmp [ eax * 4 + jump_table_4745b0 ]
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x14 ] eax
cmp edi 0x7
je r-xdata
and eax 0xefffffff
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x68 ]
pop ebp
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e8
add esp 0x48
retn 0x10
mov ebp 0x16
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x1f
cmp al 0x9
jne r-xdata
mov ebp 0x6
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov edi eax
mov ebx [ esp + 0x64 ]
mov ebp ebx
test ebp ebp
jne r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov ebx eax
cmp edi 0xf3
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
or eax 0x10000000
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
xor ebp ebp
jmp r-xdata
push 0x0
push 0x0
push 0xf3
push esi
call [ SendMessageA@IAT ]
mov ebp 0x16
jmp r-xdata
and al 0x1f
cmp al 0x7
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ esp + 0x18 ]
mov ebp [ BeginPaint@IAT ]
push eax
push esi
call ebp
mov ebp eax
cmp ebx [ esp + 0x10 ]
je r-xdata
cmp edi 0xf1
jne r-xdata
mov ebp 0x22
jmp r-xdata
test ebx ebx
jne r-xdata
and edi 0x8
or edi 0x6
push edi
push ebp
push esi
call sub_473db0
add esp 0xc
mov eax [ esp + 0x14 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
push esi
call [ GetDC@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
lea eax [ esp + 0x18 ]
push eax
push esi
call [ EndPaint@IAT ]
xor ebx [ esp + 0x10 ]
test bl 0x3
je r-xdata
push esi
and ebx 0x8
push edi
or ebx ebp
call [ ExcludeUpdateRgn@IAT ]
push ebx
push edi
push esi
call sub_473db0
add esp 0xc
push edi
push esi
call [ ReleaseDC@IAT ]
or ebp 0x4
sub_4745e0
sub esp 0x44
push ebx
push esi
mov esi [ esp + 0x50 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
cmp [ esp + 0x60 ] 0x3
jne r-xdata
cmp [ esp + 0x5c ] 0x0
je r-xdata
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push esi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0x24 ]
push eax
push edi
call ebx
lea ecx [ esp + 0x2c ]
mov bp 0xf
push ecx
push edi
call ebx
push edi
call [ GetDC@IAT ]
mov ebx eax
mov eax [ esp + 0x10 ]
and eax 0x100000
mov [ esp + 0x1c ] eax
je r-xdata
push esi
call [ HideCaret@IAT ]
push 0x0
push 0x0
push 0x157
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
and eax 0x200000
mov [ esp + 0x20 ] eax
je r-xdata
mov bp 0x7
push 0xfffffff4
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x5c ]
sub ecx eax
cmp ecx 0xfffffc18
jne r-xdata
and bp 0xfffb
lea eax [ esp + 0x24 ]
push ebp
push eax
push ebx
call sub_4720c0
add esp 0xc
cmp [ esp + 0x60 ] 0x3
jne r-xdata
mov [ esp + 0x18 ] 0x29a
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1944
push edi
call [ SendMessageA@IAT ]
cmp [ esp + 0x18 ] 0x29a
mov [ esp + 0x34 ] eax
jne r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x44 ]
push 0x10
push eax
push edi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x44 ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1943
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x34 ] eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x4
inc [ esp + 0x30 ]
push 0x0
push 0x0
push eax
push ebx
call sub_471f80
mov eax [ esp + 0x38 ]
dec [ esp + 0x40 ]
mov ebp [ esp + 0x40 ]
mov [ esp + 0x58 ] eax
add esp 0x14
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x8
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_471f80
mov eax [ esp + 0x58 ]
mov [ esp + 0x38 ] eax
add esp 0x14
mov ebp [ esp + 0x2c ]
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0xc
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_471f80
add esp 0x14
push esi
call sub_473a00
add esp 0x4
jmp r-xdata
push edi
call [ GetParent@IAT ]
mov [ esp + 0x14 ] eax
push 0x2
lea eax [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edi
call [ MapWindowPoints@IAT ]
push ebx
push edi
call [ ReleaseDC@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
call [ GetDC@IAT ]
cmp [ esp + 0x5c ] 0x0
mov ebx eax
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
push ebx
push edi
call [ ReleaseDC@IAT ]
cmp [ esp + 0x5c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x8
inc [ esp + 0x34 ]
push 0x0
push 0x0
push eax
push ebx
call sub_471f80
dec [ esp + 0x44 ]
add esp 0x14
mov ebp [ esp + 0x30 ]
push 0x15
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x4
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x30 ] ebp
push 0x7
push eax
push ebx
call sub_471f80
add esp 0x14
and bp 0xfffd
inc [ esp + 0x28 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
cmp [ esp + 0x34 ] 0x3eb
jne r-xdata
push esi
call [ ShowCaret@IAT ]
push 0x0
push 0x0
push 0x157
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp eax 0x3
je r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push ebx
push eax
call [ ReleaseDC@IAT ]
push esi
call [ ShowCaret@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
and bp 0xfff7
push 0x5
push edi
call [ GetWindow@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x34 ]
push 0x1008
sub eax [ esp + 0x40 ]
lea ecx [ esp + 0x28 ]
add [ esp + 0x30 ] eax
push ecx
push ebx
call sub_4720c0
mov eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add [ esp + 0x38 ] eax
add esp 0xc
jmp r-xdata
sub_474920
sub esp 0x4
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x1c ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x18 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
mov ebp [ esp + 0x24 ]
test eax eax
mov eax [ esp + 0x20 ]
push ebp
mov ebx [ esp + 0x2c ]
push eax
push edi
push esi
push ebx
push esi
je r-xdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push ebx
mov esi [ esp + 0x1c ]
push ebp
push eax
push edi
push esi
call sub_471ea0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x10 ] eax
cmp ebx 0x3
jne r-xdata
call sub_471c70
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
mov eax [ esp + 0x10 ]
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ecx eax
and cl 0x3
cmp cl 0x2
jne r-xdata
cmp edi 0x46
je r-xdata
je r-xdata
cmp edi 0x18
ja r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
cmp [ rw-data ] 0x30a
jb r-xdata
cmp edi 0x1943
jb r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp edi 0xf
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
push ebp
push esi
call sub_473940
add esp 0x8
jmp r-xdata
cmp edi 0x1944
jbe r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
cmp ebx 0x3
jne r-xdata
mov eax 0x3ea
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
jmp r-xdata
push 0x0
push esi
call sub_473940
add esp 0x8
jmp r-xdata
push ebx
push 0x1
push esi
call sub_4745e0
add esp 0xc
jmp r-xdata
and eax 0x3
cmp eax 0x2
je r-xdata
cmp eax 0x3
jne r-xdata
sub_474aa0
sub esp 0x20
push ebx
push esi
mov esi [ esp + 0x30 ]
push edi
cmp esi 0x82
jne r-xdata
xor eax eax
mov edi [ esp + 0x30 ]
mov ax [ rw-data ]
push eax
push edi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov edi [ esp + 0x34 ]
push ecx
push edx
push esi
push edi
call sub_471ea0
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x18
ja r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x83
ja r-xdata
je r-xdata
cmp esi 0x1943
jb r-xdata
je r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0xf
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x1944
jbe r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0x46
je r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
mov ebx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
push eax
push ecx
push esi
push edi
push ebx
push edi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
push ebx
push 0x0
push edi
call sub_4745e0
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x3c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e9
add esp 0x20
retn
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push ecx
push eax
push esi
push edi
push edx
push edi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0xc ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
push 0x1
push 0x2
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebx
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x14 ]
push ecx
call [ InflateRect@IAT ]
mov ecx [ esp + 0x28 ]
cmp [ esp + 0x18 ] ecx
jge r-xdata
cmp [ rw-data ] 0x30a
jb r-xdata
jmp r-xdata
push 0x0
push edi
call sub_473940
add esp 0x8
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x18 ]
push edi
inc eax
mov [ esp + 0x14 ] eax
lea eax [ ecx + 0x1 ]
mov [ esp + 0x1c ] eax
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
lea eax [ esp + 0xc ]
push 0x1
push eax
push edi
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x3c ]
push eax
push edi
call sub_473940
add esp 0x8
jmp r-xdata
sub_474d00
mov ecx [ esp + 0x8 ]
cmp ecx 0x1943
jb r-xdata
mov eax [ esp + 0x10 ]
push 0x3
mov edx [ esp + 0x10 ]
push eax
push edx
push ecx
mov ecx [ esp + 0x14 ]
push ecx
call sub_474920
add esp 0x14
retn 0x10
cmp ecx 0x1944
jbe r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x1
mov eax 0x3eb
retn 0x10
sub_474d50
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
push 0xf00021
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov eax [ esi + 0xc ]
sub eax edx
push eax
mov eax [ esi + 0x8 ]
sub eax ecx
push eax
push edx
push ecx
mov ecx [ ebp + 0xc ]
push ecx
call [ PatBlt@IAT ]
mov edi [ ebp + 0x8 ]
push edi
call [ GetWindowTextLengthA@IAT ]
mov ebx eax
lea eax [ eax + 0x5 ]
add eax 0x3
and eax 0xfffffffc
call sub_469f00
mov [ ebp - 0x4 ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ebx 0x2
mov eax [ ebp - 0x4 ]
push ebx
push eax
push edi
call [ GetWindowTextA@IAT ]
test eax eax
je r-xdata
mov bx 0x140
mov edi [ ebp + 0x14 ]
mov eax edi
and al 0xf
cmp al 0xc
je r-xdata
test edi 0x80
je r-xdata
mov ebx edi
and bx 0xf
or bx 0x150
and edi 0x8000000
je r-xdata
or bh 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
movzx eax bx
push eax
push esi
push 0xffffffff
push ecx
push edx
call [ DrawTextA@IAT ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
sub_474e30
sub esp 0x14
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push eax
push esi
call [ GetClientRect@IAT ]
mov eax [ esp + 0x10 ]
and eax 0x1f
cmp eax 0x12
ja r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_474fbc ]
jmp [ ecx * 4 + jump_table_474f94 ]
push 0x0
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x31
push esi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
push 0x2
push eax
push edi
call sub_471f80
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
inc [ esp + 0x1c ]
push 0x0
inc [ esp + 0x24 ]
push eax
push edi
call sub_471f80
lea ecx [ esp + 0x28 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x14 ]
push 0xf
push 0x2
push 0x2
push ecx
push edi
call sub_471f80
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x2
push 0x0
push eax
push edi
call sub_471f80
add esp 0x14
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
push ebx
push edi
call [ SelectObject@IAT ]
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push edi
push esi
call sub_474d50
add esp 0x10
test ebx ebx
je r-xdata
push ebp
push edi
call [ SelectObject@IAT ]
mov ebp eax
push 0x2
push edi
call [ SetBkMode@IAT ]
push esi
push edi
push 0x138
push esi
call [ GetParent@IAT ]
push eax
call ebp
mov ebp eax
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
push ebx
push edi
call [ SelectObject@IAT ]
push ebp
push edi
call [ SelectObject@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
sub_474fd0
sub esp 0x40
push ebx
push esi
push edi
mov edi [ esp + 0x54 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x50 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
push 0x4
mov ebx [ esp + 0x5c ]
push eax
mov esi [ esp + 0x58 ]
push ebx
push edi
push esi
call sub_471ea0
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0xf
ja r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1943
jb r-xdata
je r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_471c70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1944
jbe r-xdata
mov ebx [ esp + 0x58 ]
mov edi ebx
test edi edi
jne r-xdata
cmp edi 0xa
je r-xdata
mov eax [ esp + 0x5c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3ec
add esp 0x40
retn 0x10
push edi
push esi
call sub_474e30
add esp 0x8
test ebx ebx
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call [ BeginPaint@IAT ]
push eax
mov edi eax
push esi
call sub_472130
add esp 0x8
push esi
call [ GetDC@IAT ]
push eax
mov edi eax
push esi
call sub_472130
add esp 0x8
push edi
push esi
call sub_474e30
add esp 0x8
push edi
push esi
call [ ReleaseDC@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
lea eax [ esp + 0xc ]
push eax
push esi
call [ EndPaint@IAT ]
sub_475120
sub esp 0x4
cmp [ esp + 0xc ] 0x1
push esi
jne r-xdata
mov eax 0x1
pop esi
add esp 0x4
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi [ esp + 0xc ]
mov [ esp + 0x4 ] eax
test eax eax
je r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
movzx cx al
shl cx 0x8
movzx dx ah
or cx dx
test eax 0x80000000
mov [ rw-data ] cx
je r-xdata
push esi
call [ esp + 0x8 ]
mov [ rw-data ] 0x20
mov [ rw-data ] 0x10
cmp cx 0x35f
jb r-xdata
push 0x7
mov esi [ GetSystemMetrics@IAT ]
call esi
dec eax
push 0x8
mov [ rw-data ] eax
call esi
dec eax
push 0x4
mov [ rw-data ] eax
call esi
push 0x1e
mov [ rw-data ] eax
call esi
push rw-data
mov [ rw-data ] eax
call [ LeaveCriticalSection@IAT ]
sub_4751f0
mov eax [ esp + 0x8 ]
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push ebp
push 0x2
push eax
push esi
call [ FindResourceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
call [ SizeofResource@IAT ]
mov ebx eax
push edi
push esi
call [ LoadResource@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
push ebx
push 0x40
call [ GlobalAlloc@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
mov edi ebp
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x20 ]
xor ecx ecx
mov cl ah
mov edx eax
mov [ esp + 0x10 ] 0x0
shl ecx 0x8
shr edx 0x10
mov [ esp + 0x10 ] dl
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x28 ]
or ecx edx
mov edx eax
shr edx 0x10
mov [ ebp + 0x28 ] ecx
mov [ esp + 0x10 ] 0x0
xor ecx ecx
mov [ esp + 0x10 ] dl
mov cl ah
xor edx edx
shl ecx 0x8
mov dl al
shl edx 0x10
or ecx [ esp + 0x10 ]
or ecx edx
mov eax [ esp + 0x24 ]
mov edx eax
mov [ ebp + 0x44 ] ecx
shr edx 0x10
xor ecx ecx
mov [ esp + 0x10 ] 0x0
mov cl ah
mov [ esp + 0x10 ] dl
shl ecx 0x8
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x2c ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x48 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x30 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x64 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x34 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x54 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
push 0x0
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
or ecx edx
mov [ ebp + 0x50 ] ecx
call [ GetDC@IAT ]
mov edi eax
push 0x0
push ebp
lea ecx [ ebp + 0x68 ]
push ecx
push 0x4
push ebp
push edi
call [ CreateDIBitmap@IAT ]
mov esi eax
push edi
push 0x0
call [ ReleaseDC@IAT ]
push ebp
call [ GlobalFree@IAT ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
sub_4753f2
mov eax [ rw-data ]
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] eax
jl r-xdata
mov eax esi
pop esi
retn 0x8
push [ esp + 0xc ]
call sub_47c4e1
movsx eax [ esp + 0x8 ]
push [ esp + 0xc ]
push eax
push [ esi ]
call sub_467a10
add esp 0xc
sub_47543b
mov eax sub_49aabb
call sub_469294
push ecx
mov edx [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
test edx edx
jge r-xdata
mov eax [ ecx ]
cmp edx [ eax - 0x8 ]
jl r-xdata
xor edx edx
push esi
mov esi [ rw-data ]
mov [ ebp + 0xc ] esi
mov eax [ eax - 0x8 ]
push 0x1
pop esi
sub eax edx
push 0x0
push eax
lea eax [ ebp + 0xc ]
push edx
push eax
mov [ ebp - 0x4 ] esi
call sub_47c69e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_47c3e9
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
call sub_47c674
mov eax [ ebp + 0x8 ]
pop esi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_4754b7
mov eax sub_49aae7
call sub_469294
push ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
test eax eax
jge r-xdata
mov edx [ ecx ]
cmp eax [ edx - 0x8 ]
jl r-xdata
xor eax eax
mov edx [ rw-data ]
push esi
mov [ ebp + 0xc ] edx
push 0x1
pop esi
push 0x0
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x4 ] esi
call sub_47c69e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_47c3e9
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
call sub_47c674
mov eax [ ebp + 0x8 ]
pop esi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_47552f
sub esp 0x10
and [ esp ] 0x0
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi ecx
mov [ esp + 0x18 ] ebp
cmp [ esi ] 0x0
mov [ esp + 0x14 ] edi
je r-xdata
push [ esp + 0xc ]
mov ecx edi
call sub_47ca58
push [ esp + 0x18 ]
push [ esp + 0x24 ]
push [ edi ]
call sub_469c65
add esp 0xc
mov ecx edi
push 0xffffffff
call sub_47caa7
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
push ebx
push esi
call sub_469cb6
add [ esp + 0x14 ] eax
pop ecx
push esi
call sub_469916
mov esi eax
pop ecx
mov al [ esi ]
cmp al 0x25
je r-xdata
cmp [ esi ] 0x25
jne r-xdata
pop ebx
xor edi edi
test al al
mov [ esp + 0x28 ] edi
je r-xdata
push esi
call sub_4680a5
pop ecx
mov [ esp + 0x28 ] eax
cmp al 0x23
jne r-xdata
xor ebx ebx
cmp [ esi ] 0x2e
jne r-xdata
movsx eax al
push eax
call sub_468376
test eax eax
pop ecx
je r-xdata
cmp al 0x2a
jne r-xdata
add [ esp + 0x10 ] 0x2
jmp r-xdata
and [ esp + 0x14 ] 0x0
push 0x3
push r--data
push esi
call sub_469ccc
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_469916
mov esi eax
pop ecx
cmp [ esi ] 0x2a
jne r-xdata
push esi
call sub_469916
pop ecx
mov esi eax
jmp r-xdata
cmp al 0x2d
je r-xdata
mov eax [ ebp ]
add ebp 0x4
mov [ esp + 0x28 ] eax
jmp r-xdata
push esi
call sub_469916
mov esi eax
pop ecx
mov al [ esi ]
test al al
jne r-xdata
movsx eax [ esi ]
sub eax 0x46
je r-xdata
add esi 0x3
mov [ esp + 0x14 ] 0x40000
jmp r-xdata
push esi
call sub_4680a5
pop ecx
mov ebx eax
mov ebx [ ebp ]
add ebp 0x4
push esi
call sub_469916
pop ecx
mov esi eax
mov al [ esi ]
test al al
je r-xdata
cmp al 0x2b
je r-xdata
cmp [ esp + 0x28 ] edi
jne r-xdata
push esi
call sub_469916
pop ecx
mov esi eax
sub eax 0x6
je r-xdata
movsx eax [ esi ]
or eax [ esp + 0x14 ]
mov ecx 0x10063
cmp eax ecx
jg r-xdata
movsx eax al
push eax
call sub_468376
test eax eax
pop ecx
je r-xdata
cmp al 0x30
je r-xdata
sub eax 0x10073
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
push esi
call sub_469916
pop ecx
mov esi eax
jmp r-xdata
cmp al 0x20
jne r-xdata
mov eax [ ebp ]
add ebp 0x4
test eax eax
jne r-xdata
sub eax 0xffd0
je r-xdata
push 0x2
add ebp 0x4
pop edi
jmp r-xdata
sub eax 0x43
je r-xdata
sub eax 0x1a
je r-xdata
mov al [ esi ]
test al al
je r-xdata
push eax
call [ lstrlenA@IAT ]
push 0x6
pop edi
jmp r-xdata
sub eax 0x10
je r-xdata
test ebx ebx
je r-xdata
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov [ esp + 0x14 ] 0x10000
sub eax 0x4
jne r-xdata
test edi edi
je r-xdata
push 0x1
pop edi
mov eax [ ebp ]
add ebp 0x4
test eax eax
je r-xdata
sub eax 0x10
je r-xdata
cmp edi [ esp + 0x28 ]
jg r-xdata
cmp edi ebx
jl r-xdata
sub eax ecx
je r-xdata
mov [ esp + 0x14 ] 0x20000
jmp r-xdata
movsx eax [ esi ]
cmp eax 0x69
jg r-xdata
push eax
call sub_469743
pop ecx
jmp r-xdata
sub eax 0x10
jne r-xdata
add [ esp + 0x10 ] edi
mov edi [ esp + 0x18 ]
jmp r-xdata
mov edi [ esp + 0x28 ]
jmp r-xdata
mov edi ebx
sub eax ecx
je r-xdata
sub eax 0x6e
je r-xdata
je r-xdata
mov edi eax
cmp edi 0x1
jge r-xdata
push esi
call sub_469916
mov esi eax
pop ecx
cmp [ esi ] 0x0
jne r-xdata
sub eax 0xffd0
je r-xdata
add ebp 0x4
dec eax
je r-xdata
test [ esp + 0x16 ] 0x4
je r-xdata
sub eax 0x47
je r-xdata
sub eax ecx
je r-xdata
dec eax
je r-xdata
add ebp 0x4
add ebp 0x8
jmp r-xdata
add ebp 0x8
mov edi 0x80
jmp r-xdata
sub eax 0x11
je r-xdata
sub eax 0x5
je r-xdata
mov edi eax
jmp r-xdata
push 0x20
pop edi
mov eax [ esp + 0x28 ]
add eax ebx
sub eax 0xc
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
jmp r-xdata
dec eax
je r-xdata
add ebp 0x8
mov edi 0x80
lea eax [ ebx + 0x138 ]
jmp r-xdata
dec eax
je r-xdata
cmp eax edi
jl r-xdata
jmp r-xdata
sub_47584a
mov eax sub_49aafc
call sub_469294
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47e84a
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x10 ]
call sub_47552f
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_475893
mov eax sub_49ab46
call sub_469294
push ecx
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x1c ]
mov esi ecx
mov [ ebp - 0x10 ] esi
push ebx
call sub_478369
mov eax [ rw-data ]
mov [ ebp - 0x4 ] ebx
mov [ esi + 0xac ] eax
lea eax [ esi + 0x5c ]
push 0x4c
push ebx
push eax
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_467a10
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0xa8 ] eax
lea edi [ esi + 0xf0 ]
neg eax
sbb eax eax
lea ecx [ esi + 0xb0 ]
add eax 0x7005
mov [ edi ] bl
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x98 ] eax
mov eax [ ebp + 0x14 ]
or eax 0x800020
mov [ ecx ] bl
or [ esi + 0x90 ] eax
mov [ esi + 0x1f4 ] ebx
mov [ esi + 0x5c ] 0x4c
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] 0x104
mov [ esi + 0x80 ] ecx
mov [ esi + 0x84 ] 0x40
cmp [ rw-data ] ebx
jne r-xdata
or [ esi + 0x92 ] 0x8
call sub_4904f9
mov eax [ eax + 0xc ]
mov [ esi + 0x64 ] eax
call sub_47864e
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] ebx
je r-xdata
push 0x104
push [ ebp + 0x10 ]
push edi
call [ lstrcpynA@IAT ]
cmp [ rw-data ] ebx
je r-xdata
or [ esi + 0x90 ] 0x10
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x18
push [ ebp + 0x18 ]
lea edi [ esi + 0xac ]
mov ecx edi
call sub_47c7b1
push ebx
mov ecx edi
call sub_47ca58
push 0x7c
cmp [ ebp + 0x10 ] ebx
mov [ esi + 0xa0 ] sub_475ff6
je r-xdata
mov eax [ esi + 0xac ]
mov [ esi + 0x68 ] eax
mov [ eax ] bl
push 0x7c
inc eax
jmp r-xdata
push eax
call sub_469760
pop ecx
cmp eax ebx
pop ecx
je r-xdata
sub_4759f5
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
push [ esi + 0x78 ]
call [ lstrlenA@IAT ]
mov ecx [ esi + 0x7c ]
inc eax
sub ecx eax
add eax [ esi + 0x78 ]
push ecx
push 0x0
push eax
call sub_467a10
add esp 0xc
call [ GetFocus@IAT ]
mov ecx esi
mov [ esp + 0xc ] eax
xor edi edi
call sub_4783a2
mov [ esi + 0x60 ] eax
call sub_479238
mov eax [ esi + 0x60 ]
mov ebp [ EnableWindow@IAT ]
test eax eax
je r-xdata
push ebx
call sub_4902c7
test [ esi + 0x92 ] 0x8
mov ebx eax
je r-xdata
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push esi
call sub_4791ec
mov [ ebx + 0x18 ] esi
jmp r-xdata
push 0x1
pop edi
push 0x0
push [ esi + 0x60 ]
call ebp
call GetSaveFileNameA
call GetOpenFileNameA
jmp r-xdata
cmp [ esi + 0xa8 ] 0x0
lea eax [ esi + 0x5c ]
push eax
je r-xdata
push [ esp + 0xc ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push 0x1
push [ esi + 0x60 ]
call ebp
and [ ebx + 0x18 ] 0x0
mov [ esp + 0x14 ] eax
test edi edi
pop ebx
je r-xdata
mov ecx esi
call sub_4783dc
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
test eax eax
jne r-xdata
push [ esp + 0xc ]
call [ SetFocus@IAT ]
pop ecx
pop ecx
retn
push 0x2
pop eax
sub_475ad0
mov eax sub_49ab58
call sub_469294
push ecx
push ecx
and [ ebp - 0x10 ] 0x0
push ebx
test [ ecx + 0x92 ] 0x8
push esi
push edi
mov [ ebp - 0x14 ] ecx
je r-xdata
push [ ecx + 0x78 ]
mov ecx [ ebp + 0x8 ]
call sub_47c6e2
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x10 ] ecx
mov edi [ GetParent@IAT ]
and [ ebp - 0x4 ] 0x0
push eax
call edi
push eax
call sub_478d3a
mov esi 0x104
lea ecx [ ebp - 0x10 ]
push esi
mov ebx eax
call sub_47ca58
push eax
push esi
push 0x464
push [ ebx + 0x1c ]
mov ebx [ SendMessageA@IAT ]
call ebx
test eax eax
jge r-xdata
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47caa7
lea ecx [ ebp - 0x10 ]
call sub_47c5ff
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
push [ eax + 0x1c ]
call edi
push eax
call sub_478d3a
push esi
lea ecx [ ebp - 0x10 ]
mov edi eax
call sub_47ca58
push eax
push esi
push 0x465
push [ edi + 0x1c ]
call ebx
test eax eax
jge r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47caa7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_47c3e9
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_47c5ff
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_475c02
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x14 ]
push ebx
push edi
mov esi ecx
push [ esp + 0x18 ]
call sub_47a26e
test eax eax
jne r-xdata
push 0x1
pop eax
mov eax [ edi + 0x8 ]
cmp eax 0xfffffda1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe8 ]
cmp eax 0xfffffda2
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
jmp r-xdata
cmp eax 0xfffffda3
je r-xdata
mov [ ebx ] eax
jmp r-xdata
mov edi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push 0xe146
push 0x111
push [ esi + 0x1c ]
call edi
test eax eax
jne r-xdata
cmp eax 0xfffffda4
je r-xdata
push ebx
push ebx
push 0x365
push [ esi + 0x1c ]
call edi
jmp r-xdata
mov eax [ esi ]
push [ edi + 0x10 ]
mov ecx esi
call [ eax + 0xd0 ]
cmp eax 0xfffffda5
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe4 ]
jmp r-xdata
cmp eax 0xfffffda6
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe0 ]
jmp r-xdata
cmp eax 0xfffffda7
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xdc ]
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0xc
sub_475ce0
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
push eax
push [ esi + 0x94 ]
call sub_47e8ce
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_475d09
mov eax [ esp + 0xc ]
push esi
test eax eax
mov esi ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx esi
call sub_475ce0
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
push [ esp + 0xc ]
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x10 ]
call [ lstrcpynA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0xc
sub_475dba
mov eax sub_49af94
call sub_469294
push ecx
push esi
push edi
push [ ebp + 0x10 ]
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x0
call sub_478369
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x5c ]
push 0x24
push 0x0
push edi
mov [ esi ] r--data
call sub_467a10
add esp 0xc
mov [ esi + 0x3c ] 0x7007
mov [ edi ] 0x24
call sub_475e95
mov [ esi + 0x6c ] eax
mov eax [ ebp + 0xc ]
or al 0x10
mov [ esi + 0x70 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x78 ] sub_475ff6
test eax eax
mov [ esi + 0x68 ] eax
je r-xdata
call sub_47864e
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
or [ esi + 0x70 ] 0x1
or [ esi + 0x70 ] 0x8
sub_475e66
push esi
push edi
mov esi ecx
call sub_4783a2
mov [ esi + 0x60 ] eax
lea eax [ esi + 0x5c ]
push eax
call ChooseColorA
mov ecx esi
mov edi eax
call sub_4783dc
test edi edi
je r-xdata
push 0x2
pop eax
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_475eb0
mov eax sub_49afa8
call sub_469294
push ecx
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x14 ]
mov esi ecx
mov [ ebp - 0x10 ] esi
push ebx
call sub_478369
lea edi [ esi + 0x5c ]
push 0x3c
push ebx
push edi
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
call sub_467a10
lea eax [ esi + 0x98 ]
push 0x3c
push ebx
push eax
call sub_467a10
lea ebx [ esi + 0xd4 ]
push 0x40
push 0x0
push ebx
call sub_467a10
mov eax [ ebp + 0xc ]
add esp 0x24
or al 0x8
mov [ esi + 0x3c ] 0x7006
mov [ edi ] 0x3c
mov [ esi + 0x88 ] ebx
mov [ esi + 0x70 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x7c ] sub_475ff6
test eax eax
je r-xdata
call sub_47864e
test eax eax
je r-xdata
lea eax [ esi + 0x98 ]
mov [ esi + 0x68 ] eax
or [ esi + 0x70 ] 0x40
push 0x3c
mov [ esi + 0x68 ] eax
push eax
lea eax [ esi + 0x98 ]
push eax
call sub_467a70
add esp 0xc
jmp r-xdata
or [ esi + 0x70 ] 0x4
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ eax + 0x4 ]
or [ esi + 0x70 ] 0x2
mov [ esi + 0x64 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
sub_475fa8
push esi
push edi
mov esi ecx
call sub_4783a2
mov [ esi + 0x60 ] eax
lea eax [ esi + 0x5c ]
push eax
call ChooseFontA
mov ecx esi
mov edi eax
call sub_4783dc
cmp edi 0x1
jne r-xdata
test edi edi
je r-xdata
push 0x3c
push [ esi + 0x68 ]
add esi 0x98
push esi
call sub_467a70
add esp 0xc
push edi
jmp r-xdata
push 0x2
mov eax edi
jmp r-xdata
pop eax
pop edi
pop esi
retn
sub_475ff6
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
jmp r-xdata
push sub_48fcb1
mov ecx rw-data
call sub_492f51
mov esi eax
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov edi [ ebp + 0xc ]
mov ebx 0x110
cmp edi ebx
jne r-xdata
push [ ebp + 0x8 ]
call sub_47bac3
and [ esi + 0x18 ] 0x0
cmp edi [ rw-data ]
mov eax 0x111
je r-xdata
mov esi [ RegisterWindowMessageA@IAT ]
push r--data
call esi
push r--data
mov [ rw-data ] eax
call esi
push r--data
mov [ rw-data ] eax
call esi
push r--data
mov [ rw-data ] eax
call esi
push r--data
mov [ rw-data ] eax
call esi
push r--data
mov [ rw-data ] eax
call esi
push [ ebp + 0x14 ]
mov [ rw-data ] eax
push [ ebp + 0x10 ]
push ebx
push [ ebp + 0x8 ]
call sub_477e7f
jmp r-xdata
push 0x0
push 0xe146
push eax
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
cmp edi eax
jne r-xdata
cmp edi 0xc000
jb r-xdata
cmp [ ebp + 0x10 ] 0x40e
je r-xdata
push [ ebp + 0x8 ]
call sub_478d61
mov esi eax
push r--data
mov ecx esi
call sub_47e4fa
test eax eax
je r-xdata
cmp edi [ rw-data ]
jne r-xdata
test [ esi + 0x92 ] 0x8
jne r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ esi ]
push [ ebp + 0x14 ]
mov ecx esi
call [ eax + 0xd0 ]
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ esi ]
shr ecx 0x10
push ecx
movzx ecx [ ebp + 0x14 ]
push ecx
mov ecx esi
push [ ebp + 0x10 ]
call [ eax + 0xd8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
and [ esi + 0x1f4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ esi + 0x1f4 ] eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd0 ]
jmp r-xdata
sub_4761aa
mov eax sub_49bb8c
call sub_469294
push ecx
push esi
push edi
push [ ebp + 0x10 ]
xor edi edi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_478369
lea eax [ esi + 0x60 ]
push 0x42
push edi
push eax
mov [ ebp - 0x4 ] edi
mov [ esi + 0x5c ] eax
mov [ esi ] r--data
call sub_467a10
mov eax [ esi + 0x5c ]
add esp 0xc
mov [ eax ] 0x42
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x5c ]
or ah 0x30
mov [ ecx + 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ esi + 0x5c ]
cmp [ ebp + 0x8 ] edi
mov eax sub_475ff6
mov [ ecx + 0x2a ] eax
mov ecx [ esi + 0x5c ]
mov [ ecx + 0x2e ] eax
je r-xdata
call sub_47864e
test eax eax
je r-xdata
mov eax [ esi + 0x5c ]
mov [ esi + 0x3c ] 0x7008
or [ eax + 0x15 ] 0x1
mov eax [ esi + 0x5c ]
mov [ esi + 0x3c ] 0x7009
or [ eax + 0x14 ] 0x40
jmp r-xdata
mov eax [ esi + 0x5c ]
or [ eax + 0x15 ] 0x8
mov eax [ esi + 0x5c ]
mov ecx [ ebp - 0xc ]
pop edi
and [ eax + 0x15 ] 0xfd
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_476297
mov eax sub_49bba1
call sub_469294
push ecx
push esi
mov esi ecx
push 0xa4
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push [ esi + 0x5c ]
call sub_476278
jmp r-xdata
and [ eax + 0x1c ] 0x0
mov ecx [ esi + 0x50 ]
mov [ eax + 0x50 ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x3c ] 0x7009
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4762e7
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xd0 ]
mov edi eax
push edi
call sub_4791ec
mov ecx esi
call sub_478ca1
call sub_479238
test edi edi
je r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_476317
push esi
push edi
mov esi ecx
call sub_4783a2
mov ecx [ esi + 0x5c ]
mov [ ecx + 0x4 ] eax
push [ esi + 0x5c ]
call PrintDlgA
mov ecx esi
mov edi eax
call sub_4783dc
test edi edi
je r-xdata
push 0x2
pop eax
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_476364
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x5c ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
call [ GlobalLock@IAT ]
movzx ecx [ eax ]
add ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c6e2
mov ecx [ ebp + 0x8 ]
push rw-data
call sub_47c3e9
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_4763a1
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x5c ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
call [ GlobalLock@IAT ]
movzx ecx [ eax + 0x2 ]
add ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c6e2
mov ecx [ ebp + 0x8 ]
push rw-data
call sub_47c3e9
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_4763df
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x5c ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
call [ GlobalLock@IAT ]
movzx ecx [ eax + 0x4 ]
add ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c6e2
mov ecx [ ebp + 0x8 ]
push rw-data
call sub_47c3e9
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_47642d
cmp [ esp + 0x4 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
jmp r-xdata
push [ esp + 0x10 ]
mov edi [ GlobalLock@IAT ]
call edi
mov esi eax
mov ebx [ esp + 0x14 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
push ebx
call edi
jmp r-xdata
push eax
movzx eax [ esi + 0x4 ]
add eax esi
push eax
movzx eax [ esi + 0x2 ]
add eax esi
push eax
movzx eax [ esi ]
add eax esi
push eax
call [ CreateDCA@IAT ]
mov esi [ GlobalUnlock@IAT ]
mov edi eax
push [ esp + 0x10 ]
call esi
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
mov eax edi
push ebx
call esi
sub_476494
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x1c ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov esi ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffff894
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_46a35f
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
leave
retn 0x1c
sub_4764e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
cmp cx 0x76c
jae r-xdata
movzx edx [ eax + 0xc ]
push [ ebp + 0xc ]
push edx
movzx edx [ eax + 0xa ]
push edx
movzx edx [ eax + 0x8 ]
push edx
movzx edx [ eax + 0x6 ]
movzx eax [ eax + 0x2 ]
push edx
push eax
movzx eax cx
push eax
lea ecx [ ebp + 0x8 ]
call sub_476494
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
and [ esi ] 0x0
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
sub_47652c
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x8 ]
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x8 ]
push eax
call sub_4764e0
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
sub_476578
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push ecx
je r-xdata
call sub_46a65b
pop ecx
call sub_46a65b
test eax eax
pop ecx
je r-xdata
pop ebx
retn 0x4
push esi
push edi
push 0x9
mov esi eax
pop ecx
mov edi ebx
[ edi ] [ esi ]
pop edi
mov eax ebx
pop esi
jmp r-xdata
sub_4765a7
mov eax sub_49b058
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_479569
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4765df
push esi
push edi
push [ esp + 0xc ]
mov esi [ SendMessageA@IAT ]
mov edi ecx
push [ esp + 0x18 ]
push 0x407
push [ edi + 0x1c ]
call esi
push [ esp + 0x10 ]
push [ esp + 0x18 ]
push 0x408
push [ edi + 0x1c ]
call esi
pop edi
pop esi
retn 0xc
sub_476612
push esi
mov esi ecx
push 0x400
call sub_47b7d9
push 0x0
mov eax [ esi ]
push [ esp + 0x18 ]
mov ecx esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push 0x0
push r--data
call [ eax + 0x54 ]
pop esi
retn 0x10
sub_476643
mov eax sub_49b06c
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_479569
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_47667e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47abd8
jmp r-xdata
pop ebp
retn 0x10
sub_4766ac
mov eax sub_49b082
call sub_469294
push esi
call sub_49051f
mov esi eax
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x24 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_48314e
call sub_47c3a3
push 0x48
mov ebx eax
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_47e6b4
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x24 ] eax
call sub_47c3a3
pop ebx
sub_476770
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4766ac
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_477b6a
sub_4767b0
push esi
mov esi ecx
call sub_4904f9
push 0x0
push 0x0
push [ esp + 0x1c ]
mov eax [ eax + 0xc ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push eax
call [ ImageList_LoadImageA@IAT ]
push eax
mov ecx esi
call sub_4767e2
pop esi
retn 0x10
sub_4767e2
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_4766ac
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_477b1a
push 0x1
mov [ eax ] esi
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_476815
mov eax sub_49b0a8
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_478919
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x3c ]
call sub_477c1e
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_47686a
push ebx
push esi
push edi
mov ebx ecx
push 0x1000
call sub_47b7d9
mov edi [ esp + 0x10 ]
xor esi esi
cmp edi esi
jne r-xdata
mov eax [ edi + 0x1c ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x8
cmp edi esi
je r-xdata
mov ecx [ esp + 0x14 ]
push esi
push esi
push eax
mov eax 0x80000000
push eax
push eax
push eax
or ecx eax
push eax
push ecx
push esi
push r--data
push esi
mov ecx ebx
call sub_47927a
cmp eax esi
je r-xdata
mov [ ebx + 0x20 ] esi
mov esi [ edi + 0x1c ]
sub_4768bf
mov eax sub_49b0c7
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_479569
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x3c ]
call sub_477cf8
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_476906
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x58 ]
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_476920
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
push 0xb
pop ecx
lea edi [ ebp - 0x2c ]
[ edi ] [ esi ]
xor edi edi
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebx ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx ebx
push [ ebp + 0x8 ]
push 0x404
call [ eax + 0xa0 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
lea eax [ ebp + 0xc ]
lea esi [ ebx + 0x3c ]
push eax
mov ecx esi
push [ ebp - 0x8 ]
call sub_477dd9
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
push [ ebp - 0x8 ]
call sub_477dfb
push [ ebp - 0x8 ]
mov ecx esi
call sub_477e1d
mov [ eax ] edi
sub_4769c2
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
push edi
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx [ eax + 0x4 ]
push ecx
mov [ ebp - 0x4 ] ecx
push [ eax ]
call [ WindowFromPoint@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
leave
retn 0x8
push esi
call [ GetParent@IAT ]
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push esi
call [ ScreenToClient@IAT ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push esi
call sub_482fbb
mov edi eax
test edi edi
je r-xdata
push 0x2
push edi
call sub_482f46
test eax eax
je r-xdata
mov eax esi
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
mov eax edi
je r-xdata
mov eax edi
jmp r-xdata
sub_476a35
push ebp
mov ebp esp
sub esp 0x2c
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0x14 ]
mov esi ecx
push [ ebp + 0x8 ]
push eax
call sub_476aba
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x404
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
leave
retn 0x10
push 0x10
lea eax [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push eax
call sub_467a70
add esp 0xc
sub_476a83
push ebp
mov ebp esp
sub esp 0x2c
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0xc ]
push eax
call sub_476aba
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x40c
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
leave
retn 0xc
sub_476aba
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x28
pop edi
push edi
push 0x0
push esi
call sub_467a10
mov eax [ esp + 0x1c ]
add esp 0xc
test eax eax
mov [ esi ] edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
push edi
call [ GetParent@IAT ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
pop edi
pop esi
retn 0xc
sub_476b0d
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_4902c7
cmp [ ebp + 0x8 ] 0x0
mov edi [ eax + 0xcc ]
jne r-xdata
mov edi [ ebp + 0xc ]
test [ esi + 0x24 ] edi
jne r-xdata
mov ebx [ ebp + 0xc ]
test [ esi + 0x24 ] ebx
je r-xdata
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x8
call sub_4904f9
mov [ eax + 0x1034 ] sub_476c40
or [ esi + 0x24 ] edi
cmp [ eax + 0xd0 ] esi
jne r-xdata
test edi edi
je r-xdata
push 0x1
call sub_479620
not ebx
and [ esi + 0x24 ] ebx
jmp r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_467a10
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] 0x1
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_476bbe
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push 0x7
mov esi ebx
pop ecx
lea edi [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
[ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
mov esi [ SendMessageA@IAT ]
push eax
push 0x0
push 0x410
push [ edi + 0x1c ]
call esi
mov ecx [ ebx + 0x14 ]
cmp [ ebp - 0x20 ] 0x200
mov [ ebp - 0x8 ] ecx
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] ecx
jb r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp - 0x8 ]
shl eax 0x10
or eax ecx
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x407
push [ edi + 0x1c ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ebp - 0x20 ] 0x209
ja r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ ScreenToClient@IAT ]
sub_476c50
mov eax sub_49b0dd
call sub_469294
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi [ ebx + 0x4 ]
mov edi ecx
cmp esi 0x200
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1c ] esi
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x1
call esi
test ax ax
jl r-xdata
cmp esi 0xa0
je r-xdata
mov esi [ ebp - 0x1c ]
push 0x2
call esi
test ax ax
jl r-xdata
cmp esi 0x202
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebx ]
push 0x4
call esi
test ax ax
jl r-xdata
cmp esi 0x205
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edi
je r-xdata
push [ ebx ]
cmp esi 0x208
jne r-xdata
cmp esi 0x100
jb r-xdata
test [ eax + 0x24 ] 0x401
jne r-xdata
cmp eax edi
je r-xdata
test [ eax + 0x24 ] 0x401
jne r-xdata
test [ edi + 0x24 ] 0x401
je r-xdata
cmp esi 0x104
jb r-xdata
cmp esi 0x108
jbe r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
jmp r-xdata
push sub_48fcb1
mov ecx rw-data
call sub_492f51
mov esi eax
mov ecx edi
mov [ ebp - 0x18 ] esi
mov ebx [ esi + 0xcc ]
call sub_47a393
test ebx ebx
mov [ ebp - 0x14 ] eax
je r-xdata
test eax eax
jne r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
jmp r-xdata
xor eax eax
cmp esi 0x107
ja r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_478d3a
test eax eax
je r-xdata
push 0x58
call sub_47c3b5
pop ecx
mov [ ebp - 0x1c ] eax
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx ebx
call sub_466f90
cmp eax [ ebp - 0x14 ]
je r-xdata
push sub_48fcb1
mov ecx rw-data
call sub_492f51
and [ eax + 0xd0 ] 0x0
or [ eax + 0xd4 ] 0xffffffff
jmp r-xdata
call sub_478d3a
test eax eax
je r-xdata
test eax eax
jne r-xdata
test [ edi + 0x25 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x1
push [ ebp - 0x14 ]
mov ecx ebx
call sub_47686a
test eax eax
jne r-xdata
mov ecx eax
call sub_476815
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
mov eax [ ebx ]
push 0x1
mov ecx ebx
call [ eax + 0x4 ]
xor ebx ebx
mov [ esi + 0xcc ] ebx
push eax
call sub_479620
cmp esi 0x201
je r-xdata
push 0x0
push 0x0
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov edi [ ebp - 0x10 ]
mov [ esi + 0xcc ] ebx
test ebx ebx
je r-xdata
push 0x2c
lea eax [ ebp - 0x54 ]
push 0x0
push eax
call sub_467a10
mov eax [ edi + 0x1c ]
add esp 0xc
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x54 ] 0x28
push eax
push 0x0
push 0x408
mov [ ebp - 0x50 ] 0x1
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp esi 0x203
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x28 ] ecx
push [ edi + 0x1c ]
call [ ScreenToClient@IAT ]
push 0x2c
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_467a10
add esp 0xc
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x80 ] 0x28
push ecx
mov ecx edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call [ eax + 0x64 ]
mov ecx eax
mov [ ebp - 0x1c ] eax
inc ecx
neg ecx
sbb ecx ecx
and ecx edi
cmp [ esi + 0xd4 ] eax
mov [ ebp - 0x14 ] ecx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
push 0x0
push 0x404
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ ebx ]
push 0x1
mov ecx ebx
call [ eax + 0x4 ]
jmp r-xdata
cmp esi 0x204
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0xd0 ] ecx
jne r-xdata
cmp esi 0x206
je r-xdata
push 0x0
push 0x0
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ ebp - 0x7c ]
push 0xb
pop ecx
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x54 ]
and eax 0x3fffffff
[ edi ] [ esi ]
mov ecx [ ebp - 0x10 ]
mov edi 0x400
mov [ ebp - 0x50 ] eax
test [ ecx + 0x24 ] edi
je r-xdata
test [ edi + 0x25 ] 0x4
je r-xdata
cmp esi 0x207
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_476bbe
cmp [ esi + 0xd8 ] 0x28
lea edi [ esi + 0xd8 ]
jb r-xdata
lea eax [ ebp - 0x54 ]
xor esi esi
push eax
push esi
push 0x404
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
test [ ebp - 0x79 ] 0x40
jne r-xdata
or al 0x20
mov [ ebp - 0x50 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ GetCursorPos@IAT ]
movzx eax [ ebp - 0x1c ]
movzx ecx [ ebp - 0x20 ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x412
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
cmp esi 0x209
je r-xdata
mov eax [ ebp - 0x14 ]
push 0xb
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0xd4 ] eax
pop ecx
lea esi [ ebp - 0x80 ]
[ edi ] [ esi ]
push edi
push 0x0
push 0x405
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
push esi
push 0x1
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ ebp - 0x10 ]
test [ eax + 0x24 ] edi
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_47a3d7
test eax eax
je r-xdata
cmp [ ebp - 0x5c ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_476bbe
jmp r-xdata
cmp esi 0xa1
je r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x213
push esi
push esi
push esi
push esi
push esi
push [ ebx + 0x1c ]
call [ SetWindowPos@IAT ]
lea eax [ ebp - 0x54 ]
push eax
push 0x1
push 0x411
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov esi [ ebp - 0x18 ]
cmp esi 0xa3
je r-xdata
push [ ebp - 0x5c ]
call sub_46965a
pop ecx
jmp r-xdata
cmp esi 0xa4
je r-xdata
cmp esi 0xa6
je r-xdata
cmp esi 0xa7
je r-xdata
cmp esi 0xa9
jne r-xdata
sub_4770ef
mov eax sub_49ab24
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
push [ ecx + 0x4 ]
and [ ebp - 0x4 ] 0x0
call sub_47c3de
pop ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_47714f
mov eax sub_49b008
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push [ esi + 0x8 ]
and [ ebp - 0x4 ] 0x0
push [ esi + 0x4 ]
call sub_47718d
push [ esi + 0x4 ]
call sub_47c3de
mov ecx [ ebp - 0xc ]
add esp 0xc
mov [ fs : 0x0 ] ecx
pop esi
leave
retn
sub_47718d
mov eax [ esp + 0x8 ]
mov ecx eax
dec eax
test ecx ecx
je r-xdata
retn
push esi
lea esi [ eax + 0x1 ]
mov ecx [ esp + 0x8 ]
call sub_47c674
add [ esp + 0x8 ] 0x4
dec esi
jne r-xdata
pop esi
sub_4771af
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
cmp eax 0xffffffff
push edi
mov esi ecx
je r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_47718d
push [ esi + 0x4 ]
call sub_47c3de
add esp 0xc
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
mov eax edi
shl eax 0x2
push eax
call sub_47c3b5
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_4772cc
add esp 0xc
mov [ esi + 0xc ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
jge r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0xc ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
push 0x8
cdq
pop ecx
idiv ecx
cmp eax 0x4
jl r-xdata
jle r-xdata
mov edx edi
sub edx eax
lea eax [ ecx + eax * 4 ]
push edx
push eax
call sub_4772cc
jmp r-xdata
mov eax [ ebp + 0xc ]
shl eax 0x2
push eax
call sub_47c3b5
mov ebx eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
push ebx
call sub_467a70
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
lea eax [ ebx + eax * 4 ]
push ecx
push eax
call sub_4772cc
push [ esi + 0x4 ]
call sub_47c3de
mov eax [ ebp + 0xc ]
add esp 0x1c
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
mov [ ebp + 0xc ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
sub eax edi
push eax
lea eax [ ecx + edi * 4 ]
push eax
call sub_47718d
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_4772cc
mov eax [ esp + 0x8 ]
mov ecx eax
dec eax
test ecx ecx
je r-xdata
retn
push esi
lea esi [ eax + 0x1 ]
push 0x4
push rw-data
push [ esp + 0x10 ]
call sub_467a70
add [ esp + 0x14 ] 0x4
add esp 0xc
dec esi
jne r-xdata
pop esi
sub_4772f8
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax [ edi + 0x4 ]
push [ esp + 0x10 ]
lea ecx [ eax + esi * 4 ]
call sub_47c7b1
pop edi
pop esi
retn 0x8
lea eax [ esi + 0x1 ]
push 0xffffffff
push eax
call sub_4771af
sub_477324
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax [ edi + 0x4 ]
push [ esp + 0x10 ]
lea ecx [ eax + esi * 4 ]
call sub_47c761
pop edi
pop esi
retn 0x8
lea eax [ esi + 0x1 ]
push 0xffffffff
push eax
call sub_4771af
sub_477350
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
cmp edi eax
mov [ ebp - 0x4 ] eax
jl r-xdata
push ebx
mov ebx [ ebp + 0xc ]
add eax ebx
push 0xffffffff
push eax
mov ecx esi
call sub_4771af
mov ecx edi
mov eax edi
imul ecx ecx 0x3fffffff
add ecx [ ebp - 0x4 ]
add edi ebx
shl eax 0x2
shl ecx 0x2
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x4 ]
push ecx
mov ecx [ ebp + 0xc ]
add ecx eax
lea eax [ eax + edi * 4 ]
push ecx
push eax
call sub_469930
mov eax [ esi + 0x4 ]
push ebx
add eax [ ebp + 0xc ]
push eax
call sub_4772cc
add esp 0x14
pop ebx
mov eax [ ebp + 0xc ]
push 0xffffffff
add edi eax
push edi
call sub_4771af
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_4773c6
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
mov ebx ecx
push edi
push esi
call sub_477350
mov eax edi
dec edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
shl esi 0x2
inc edi
mov ecx [ ebx + 0x4 ]
push [ esp + 0x14 ]
add ecx esi
add esi 0x4
call sub_47c761
dec edi
jne r-xdata
sub_4773ff
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0xc ]
mov edi ecx
mov eax ebx
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
shl eax 0x2
add ecx eax
sub esi ebx
sub esi [ ebp + 0xc ]
push ecx
mov [ ebp + 0x8 ] eax
call sub_47718d
pop ecx
test esi esi
pop ecx
je r-xdata
mov eax [ ebp + 0xc ]
sub [ edi + 0x8 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov ecx esi
shl ecx 0x2
push ecx
mov ecx [ ebp + 0xc ]
add ebx ecx
lea ecx [ eax + ebx * 4 ]
push ecx
mov ecx [ ebp + 0x8 ]
add eax ecx
push eax
call sub_469930
add esp 0xc
sub_47745b
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x14 ]
mov esi ecx
not eax
test al 0x1
je r-xdata
mov ecx ebx
call sub_483785
push 0xffffffff
push eax
mov ecx esi
call sub_4771af
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
push [ esi + 0x8 ]
mov ecx ebx
call sub_483757
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
push eax
push ebx
call sub_483270
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
push eax
push ebx
call sub_4831a0
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
jmp r-xdata
sub_4774f7
mov eax sub_49b0f0
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
push [ ecx + 0x4 ]
and [ ebp - 0x4 ] 0x0
call sub_47c3de
pop ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_477524
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
cmp eax 0xffffffff
push edi
mov esi ecx
je r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_47c3de
pop ecx
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
mov ebx edi
shl ebx 0x2
push ebx
call sub_47c3b5
push ebx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_467a10
add esp 0x10
mov [ esi + 0xc ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0xc ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
push 0x8
cdq
pop ecx
idiv ecx
cmp eax 0x4
jl r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
mov edx eax
lea eax [ ecx + eax * 4 ]
imul edx edx 0x3fffffff
add edx edi
shl edx 0x2
push edx
push 0x0
push eax
call sub_467a10
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
shl eax 0x2
push eax
call sub_47c3b5
mov ebx eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
push ebx
call sub_467a70
mov eax [ esi + 0x8 ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx edi
lea eax [ ebx + eax * 4 ]
shl ecx 0x2
push ecx
push 0x0
push eax
call sub_467a10
push [ esi + 0x4 ]
call sub_47c3de
mov eax [ ebp + 0xc ]
add esp 0x20
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
mov [ ebp + 0xc ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_47763d
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
sub eax edx
sub eax edi
je r-xdata
sub [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x8
mov ecx [ esi + 0x4 ]
shl eax 0x2
push eax
lea eax [ edx + edi ]
lea eax [ ecx + eax * 4 ]
push eax
lea eax [ ecx + edx * 4 ]
push eax
call sub_469930
add esp 0xc
sub_4776a7
mov eax sub_49b240
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
push [ ecx + 0x4 ]
and [ ebp - 0x4 ] 0x0
call sub_47c3de
pop ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4776d4
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x10 ]
pop edi
mov [ eax + esi * 4 ] ecx
pop esi
retn 0x8
lea eax [ esi + 0x1 ]
push 0xffffffff
push eax
call sub_477524
sub_4776fb
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
mov esi [ ebp + 0x10 ]
mov eax [ ebx + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp edi eax
push 0xffffffff
jl r-xdata
add eax esi
mov ecx ebx
push eax
call sub_477524
mov ecx edi
mov eax [ ebx + 0x4 ]
imul ecx ecx 0x3fffffff
add ecx [ ebp - 0x4 ]
shl ecx 0x2
push ecx
lea ecx [ eax + edi * 4 ]
push ecx
lea ecx [ edi + esi ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_469930
mov ecx [ ebx + 0x4 ]
mov eax esi
shl eax 0x2
push eax
mov eax edi
shl eax 0x2
add ecx eax
push 0x0
push ecx
call sub_467a10
add esp 0x18
lea eax [ edi + esi ]
push eax
call sub_477524
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax edi
lea ecx [ esi + 0x1 ]
shl eax 0x2
mov eax esi
dec esi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov esi [ ebp + 0xc ]
mov [ edx + eax ] esi
add eax 0x4
dec ecx
jne r-xdata
sub_47778d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax [ edi + 0x14 ]
not eax
test al 0x1
je r-xdata
mov ecx edi
call sub_483785
push 0xffffffff
push eax
mov ecx esi
call sub_477524
mov eax [ esi + 0x8 ]
mov ecx edi
shl eax 0x2
push eax
push [ esi + 0x4 ]
call sub_48347a
push [ esi + 0x8 ]
mov ecx edi
call sub_483757
mov eax [ esi + 0x8 ]
mov ecx edi
shl eax 0x2
push eax
push [ esi + 0x4 ]
call sub_483589
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_477821
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_4779a2
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_47786a
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
inc [ esi + 0xc ]
and [ eax + 0x8 ] 0x0
pop esi
retn 0x8
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_477982
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_4778db
push esi
mov esi ecx
push 0x0
push [ esi + 0x8 ]
call sub_47786a
mov ecx [ esp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] eax
mov [ ecx ] eax
jmp r-xdata
mov [ esi + 0x8 ] eax
pop esi
retn 0x4
sub_477904
mov eax [ ecx + 0x4 ]
push esi
mov edx [ eax ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_4778c2
mov eax esi
pop esi
retn
sub_477928
mov eax [ esp + 0x4 ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov [ edx ] esi
mov edx [ eax ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
cmp eax [ ecx + 0x8 ]
jne r-xdata
push eax
call sub_4778c2
pop esi
retn 0x4
sub_47795f
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
cmp ecx [ esp + 0x4 ]
jne r-xdata
test eax eax
je r-xdata
jmp r-xdata
retn 0x8
sub_4779fb
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_4779a2
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_47c3de
and [ esi + 0x4 ] 0x0
pop ecx
sub_477a4f
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_477982
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_477ab5
push esi
mov esi [ esp + 0x8 ]
mov eax esi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov eax [ eax ]
jmp r-xdata
test eax eax
je r-xdata
sub_477ae7
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test edx edx
je r-xdata
sub_477b1a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
push edi
call sub_477ab5
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_477a4f
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx esi
push [ esi + 0x8 ]
call sub_477c61
sub_477b6a
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_477a9c
push 0x1
pop eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
sub_477bac
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
pop edi
mov [ ecx ] eax
pop esi
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
xor edx edx
shr eax 0x4
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edi [ eax ]
test edi edi
jne r-xdata
sub_477c61
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_47c3de
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_47c3b5
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_467a10
add esp 0x10
pop edi
sub_477ca6
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi + 0x4 ] ebp
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
call sub_4779a2
mov [ esi + 0x14 ] ebp
pop esi
pop ebp
retn
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebp
jbe r-xdata
push [ esi + 0x4 ]
call sub_47c3de
pop ecx
mov [ esi + 0x4 ] ebp
pop ebx
push edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
lea ecx [ edi + 0x8 ]
call sub_47c674
mov edi [ edi ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + ebx * 4 ]
pop edi
cmp edi ebp
je r-xdata
sub_477d21
push esi
mov esi ecx
push edi
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edi [ esi + 0x10 ]
push 0x4
push rw-data
mov eax [ edi ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] eax
lea eax [ edi + 0x8 ]
push eax
call sub_467a70
and [ edi + 0xc ] 0x0
add esp 0xc
mov eax edi
pop edi
pop esi
retn
push 0x10
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_477982
mov ecx [ esi + 0x18 ]
add eax 0x4
mov edx ecx
shl edx 0x4
dec ecx
test ecx ecx
lea eax [ eax + edx - 0x10 ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0x10
dec ecx
jne r-xdata
sub_477d83
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
mov esi edi
mov dl [ edi ]
xor edx edx
div [ ecx + 0x8 ]
mov eax [ esp + 0x10 ]
mov [ eax ] edx
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
imul eax eax 0x21
movsx edx dl
add eax edx
mov dl [ esi + 0x1 ]
inc esi
jmp r-xdata
xor eax eax
mov esi [ eax + edx * 4 ]
test dl dl
je r-xdata
mov eax [ esi + 0x8 ]
push edi
push eax
call sub_467da5
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
pop edi
pop esi
retn 0x8
test esi esi
je r-xdata
sub_477dd9
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_477d83
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push 0x1
mov [ ecx ] eax
pop eax
sub_477dfb
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_477d83
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push 0x1
mov [ ecx ] eax
pop eax
sub_477e1d
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
mov edi ecx
call sub_477d83
mov esi eax
test esi esi
jne r-xdata
lea eax [ esi + 0xc ]
pop edi
pop esi
leave
retn 0x4
cmp [ edi + 0x4 ] eax
jne r-xdata
mov ecx edi
call sub_477d21
push [ ebp + 0x8 ]
mov esi eax
mov eax [ ebp - 0x4 ]
lea ecx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
call sub_47c7b1
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + ecx * 4 ] esi
push 0x1
mov ecx edi
push [ edi + 0x8 ]
call sub_477c61
sub_477e7f
cmp [ esp + 0x8 ] 0x110
jne r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_478d61
push eax
push r--data
call sub_47e50c
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xbc ]
jmp r-xdata
retn 0x10
sub_477ebf
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_479601
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx esi
call sub_47a448
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ edi + 0x4 ] 0x100
jne r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
push edi
mov ecx esi
call sub_47b562
mov eax [ edi + 0x8 ]
cmp eax 0x1b
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
cmp eax 0x3
jne r-xdata
push r--data
push [ edi ]
call sub_482f90
test eax eax
je r-xdata
push 0x2
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
sub_477f58
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x10 ]
push edi
push ebx
call sub_47bfd8
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
test bh 0x80
je r-xdata
cmp edi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xf000
jae r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
test eax eax
je r-xdata
call sub_47ccf5
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
je r-xdata
sub_477fdd
push esi
mov esi ecx
call sub_478919
push 0x20
lea eax [ esi + 0x3c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_467a10
add esp 0xc
mov eax esi
pop esi
retn
sub_47801b
mov eax sub_49a704
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_479569
sub_478059
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov eax ebx
push edi
mov edi ecx
shr eax 0x10
test ax ax
mov [ edi + 0x40 ] ebx
jne r-xdata
call sub_4904f9
mov esi [ eax + 0xc ]
push 0x5
push ebx
push esi
call [ FindResourceA@IAT ]
push eax
push esi
call [ LoadResource@IAT ]
push esi
mov ecx edi
push [ esp + 0x18 ]
push eax
call sub_4780a8
pop edi
pop esi
pop ebx
retn 0x8
cmp [ edi + 0x3c ] 0x0
jne r-xdata
movzx eax bx
mov [ edi + 0x3c ] eax
sub_4780cb
mov eax [ esp + 0x8 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4c ] ecx
mov ecx esi
push eax
push [ esp + 0x10 ]
call sub_47813a
pop esi
retn 0x10
call sub_402850
sub_4780f6
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
call sub_4904f9
mov esi [ eax + 0xc ]
push 0x5
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push esi
mov ecx ebx
push [ esp + 0x18 ]
push edi
call sub_47813a
pop edi
pop esi
pop ebx
retn 0x8
push eax
call [ LockResource@IAT ]
mov edi eax
sub_47813a
mov eax sub_49a720
call sub_469294
sub esp 0x34
push ebx
push esi
xor ebx ebx
push edi
cmp [ ebp + 0x10 ] ebx
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] esi
jne r-xdata
call sub_4904f9
mov edi [ eax + 0x1038 ]
push 0x10
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_47b7d9
push 0x3c000
call sub_47b7d9
cmp edi ebx
je r-xdata
call sub_4904f9
mov eax [ eax + 0x8 ]
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx esi
call [ eax + 0xb4 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x8 ]
call sub_47f8bb
add esp 0xc
xor ecx ecx
cmp eax ebx
sete cl
mov eax ecx
cmp eax ebx
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_47f70a
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_47fa44
lea ecx [ ebp - 0x40 ]
call sub_47f7a7
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_47f799
cmp [ ebp - 0x14 ] ebx
je r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
or [ esi + 0x2c ] 0xffffffff
or [ esi + 0x24 ] 0x10
push esi
call sub_4791ec
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalLock@IAT ]
mov [ ebp + 0x8 ] eax
push r--data
push [ ebp - 0x1c ]
call sub_467da5
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
push r--data
push [ ebp - 0x1c ]
call sub_467da5
pop ecx
test eax eax
pop ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
je r-xdata
push ebx
push sub_477e7f
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call [ CreateDialogIndirectParamA@IAT ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] bl
call sub_47c674
jmp r-xdata
mov [ ebp - 0x20 ] ebx
push r--data
push [ ebp - 0x1c ]
call sub_467da5
pop ecx
test eax eax
pop ecx
jne r-xdata
call sub_479238
test eax eax
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xb4 ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
test [ esi + 0x24 ] 0x10
jne r-xdata
xor eax eax
cmp [ ebp - 0x18 ] ebx
setne al
push [ ebp - 0x14 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x14 ]
call [ GlobalFree@IAT ]
push [ ebp - 0x18 ]
call [ DestroyWindow@IAT ]
mov [ ebp - 0x18 ] ebx
sub_478369
push esi
push edi
mov esi ecx
call sub_478919
lea edi [ esi + 0x3c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_467a10
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esp + 0xc ]
movzx ecx ax
mov [ edi ] eax
mov [ esi + 0x40 ] ecx
mov eax esi
pop edi
pop esi
retn 0x8
sub_4783a2
push esi
push edi
mov esi ecx
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push 0x0
mov ecx eax
call sub_483fae
lea ecx [ esi + 0x54 ]
push ecx
push eax
call sub_484154
push esi
mov edi eax
call sub_4791ec
mov eax edi
pop edi
pop esi
retn
mov eax [ eax + 0x1c ]
sub_4783dc
push esi
mov esi ecx
call sub_479238
mov ecx esi
call sub_478db8
push [ esi + 0x54 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ esi + 0x54 ] 0x0
call sub_4904f9
mov eax [ eax + 0x4 ]
pop esi
test eax eax
je r-xdata
push 0x1
push [ esi + 0x54 ]
call [ EnableWindow@IAT ]
retn
push 0x1
mov ecx eax
call sub_483fae
sub_47841e
mov eax sub_49a72c
call sub_469294
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] esi
mov eax [ esi + 0x48 ]
mov edi [ esi + 0x44 ]
mov [ ebp - 0x18 ] eax
call sub_4904f9
cmp [ esi + 0x40 ] 0x0
mov ebx [ eax + 0xc ]
je r-xdata
test edi edi
je r-xdata
call sub_4904f9
mov ebx [ eax + 0xc ]
push 0x5
push [ esi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
mov edi eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push edi
call [ LockResource@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx esi
call sub_4783a2
mov [ ebp - 0x14 ] eax
call sub_479238
xor edi edi
cmp [ ebp - 0x14 ] edi
mov [ ebp - 0x20 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x4 ] edi
call sub_4791ec
push [ ebp - 0x14 ]
call sub_478d3a
push ebx
push eax
push [ ebp - 0x18 ]
mov ecx esi
call sub_47813a
cmp eax edi
je r-xdata
push [ ebp - 0x14 ]
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] edi
je r-xdata
test [ esi + 0x24 ] 0x10
je r-xdata
push edi
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
mov [ ebp - 0x20 ] 0x1
cmp [ ebp - 0x14 ] edi
je r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
cmp [ esi + 0x1c ] edi
je r-xdata
push 0x4
mov ecx esi
pop ebx
call sub_47bbe6
test ah 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
mov ecx esi
call sub_4783dc
mov eax [ esi + 0x2c ]
call [ GetActiveWindow@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_47bd57
jmp r-xdata
push ebx
mov ecx esi
call sub_47b592
push 0x5
pop ebx
push [ ebp - 0x14 ]
call [ SetActiveWindow@IAT ]
sub_4785a1
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
mov edi [ esi ]
call sub_4806f9
push eax
mov ecx esi
call [ edi + 0xc0 ]
mov ecx esi
call sub_478ca1
pop edi
pop esi
retn 0x8
sub_4785c6
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xcc ]
call sub_4904f9
mov ecx [ eax + 0x1038 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_478ca1
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
test [ esi + 0x25 ] 0x1
je r-xdata
mov edx [ esi + 0x4c ]
test edx edx
je r-xdata
push 0x0
push 0x0
push [ esi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_478d3a
test eax eax
je r-xdata
mov edx [ ecx ]
push eax
push [ esi + 0x40 ]
push esi
call [ edx + 0x20 ]
mov edi [ ecx ]
push eax
push edx
push esi
call [ edi + 0x1c ]
jmp r-xdata
mov ecx eax
call sub_47be0f
xor edi edi
push 0xffffffff
mov ecx esi
call sub_47857e
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
sub_47864e
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_4904f9
xor edi edi
cmp [ eax + 0x4 ] edi
jne r-xdata
call sub_402850
cmp eax edi
mov esi 0xe146
je r-xdata
xor eax eax
jmp r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
mov edx [ eax ]
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
mov edx [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x1
pop eax
jmp r-xdata
sub_4786a4
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push [ esi + 0x40 ]
mov ecx esi
call sub_47b33b
push eax
call sub_47b38b
jmp r-xdata
push 0xffffffff
mov ecx esi
call sub_47857e
xor eax eax
pop esi
retn
push 0x0
mov ecx esi
call sub_47b0ce
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0xe146
mov ecx esi
call sub_47bb2c
mov esi eax
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
call sub_47864e
neg eax
sbb eax eax
mov ecx esi
and eax 0x5
push eax
call sub_47bda6
sub_47872a
push esi
push edi
mov edi ecx
cmp [ edi + 0x40 ] 0x0
mov esi [ edi + 0x48 ]
mov eax [ edi + 0x44 ]
je r-xdata
test eax eax
je r-xdata
push ebx
call sub_4904f9
mov ebx [ eax + 0xc ]
push 0x5
push [ edi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
pop ebx
push 0x1
test esi esi
pop eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov esi eax
pop edi
pop esi
retn
cmp [ esi + 0x2 ] 0xffff
mov ecx [ esi ]
jne r-xdata
mov ax [ esi + 0xa ]
mov si [ esi + 0xc ]
mov ecx [ esi + 0xc ]
mov ax [ esi + 0x12 ]
mov si [ esi + 0x14 ]
jmp r-xdata
xor eax eax
test ax ax
jne r-xdata
test cx 0x1801
jne r-xdata
test si si
jne r-xdata
push 0x1
pop eax
jmp r-xdata
sub_4787ba
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
xor eax eax
lea esi [ eax + 0x20000 ]
test esi esi
je r-xdata
pop esi
retn 0x8
sub_478919
push esi
mov esi ecx
call sub_47be8c
push 0x20
lea eax [ esi + 0x1c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_467a10
add esp 0xc
mov eax esi
pop esi
retn
sub_478957
push esi
push edi
mov esi ecx
call sub_47be8c
lea edi [ esi + 0x1c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_467a10
mov eax [ esp + 0x18 ]
add esp 0xc
mov [ edi ] eax
mov eax esi
pop edi
pop esi
retn 0x4
sub_478983
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x10 ]
not ecx
and ecx eax
or ecx [ ebp + 0x14 ]
cmp eax ecx
jne r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowLongA@IAT ]
mov eax [ ebp + 0x18 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
or al 0x17
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x14
sub_478a29
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x13 ] 0x10
push esi
jne r-xdata
pop esi
leave
retn 0xc
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_47bbe6
test eax 0x50000000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push eax
call sub_478d3a
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
test eax eax
je r-xdata
mov ecx eax
call sub_47bdcd
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_47b186
sub_478aa2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_47bbe6
test eax 0x40000000
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_47a36b
mov edi [ ebp + 0x10 ]
mov ebx eax
mov ecx edi
call sub_47a36b
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1c ]
test edi edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
sub_478b03
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_47a36b
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_478d3a
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_478d3a
cmp esi eax
je r-xdata
mov ecx esi
call sub_47bdcd
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_478b79
mov eax sub_49a738
call sub_469294
sub esp 0x34
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
push sub_48fcb1
call sub_492f51
mov ebx eax
push 0x7
pop ecx
lea edi [ ebp - 0x40 ]
lea eax [ ebx + 0x34 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
cmp esi 0x2
mov [ ebx + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x40 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
cmp esi 0x110
jne r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx edi
push [ ebp + 0x14 ]
push esi
call [ eax + 0x98 ]
cmp esi 0x110
mov [ ebp + 0x18 ] eax
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_478a06
mov eax [ ecx ]
push 0x0
call [ eax + 0x5c ]
push 0x7
mov eax [ ebp + 0x18 ]
lea edi [ ebx + 0x34 ]
pop ecx
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_478a29
jmp r-xdata
sub_478c23
call sub_47ccf5
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
add ecx 0x34
push ecx
mov ecx eax
push [ ebp + 0xc ]
call [ edx + 0x6c ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x18 ] eax
call sub_47dfce
mov eax r-xdata
retn
sub_478c6c
push esi
push sub_48fcb1
mov ecx rw-data
call sub_492f51
mov esi eax
call [ GetMessageTime@IAT ]
mov [ esi + 0x44 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x48 ] ecx
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x34 ]
pop esi
retn
sub_478ca1
push esi
mov esi ecx
push sub_48fcb1
mov ecx rw-data
call sub_492f51
push [ eax + 0x40 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa0 ]
pop esi
retn
sub_478cc8
mov eax sub_49a74e
call sub_469294
push esi
call sub_49051f
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_48314e
call sub_47c3a3
push 0x48
mov ebx eax
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x1c
push r--data
call sub_47e6b4
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_47c3a3
pop ebx
sub_478d3a
push esi
push edi
push 0x1
call sub_478cc8
mov esi eax
push [ esp + 0xc ]
mov ecx esi
call sub_47e719
mov edi eax
push esi
mov ecx edi
call sub_47be30
mov eax edi
pop edi
pop esi
retn 0x4
sub_478d7f
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push 0x1
call sub_478cc8
mov edi eax
push ebx
mov [ esi + 0x1c ] ebx
lea ecx [ edi + 0x4 ]
call sub_477b1a
push edi
mov ecx esi
mov [ eax ] esi
call sub_47be30
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_478db8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
and [ esi + 0x38 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_478cc8
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_477b6a
sub_478de6
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push [ ebp + 0x8 ]
call sub_478d61
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_478b79
push 0x1
pop eax
jmp r-xdata
pop ebp
retn 0x10
sub_478e1b
mov eax sub_49a758
call sub_469294
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov [ ebp - 0x10 ] esp
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x1
sub eax 0x6
pop ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_478d3a
push edi
mov esi eax
call sub_478d3a
push esi
push [ ebp + 0x10 ]
push eax
call sub_478aa2
sub eax 0x1a
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_478d3a
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_478b03
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_478d3a
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_478a06
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_478a29
sub_478f3e
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
call sub_47ccf5
mov edx [ eax ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx eax
push [ ebp - 0x20 ]
call [ edx + 0x6c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_47dfce
mov eax r-xdata
retn
sub_478f7a
push ebp
mov ebp esp
push esi
push edi
push sub_48fce5
mov ecx rw-data
call sub_493013
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_478e1b
cmp edi 0x135
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ edi - 0x132 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_47b051
test eax eax
je r-xdata
cmp edi 0x136
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp edi 0x138
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
cmp edi 0x137
je r-xdata
cmp edi 0x134
jne r-xdata
sub_478ff6
push ebp
mov ebp esp
sub esp 0x10
push sub_48fcb1
mov ecx rw-data
call sub_492f51
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ eax + 0x14 ]
push edi
mov edi [ ecx ]
call sub_4904f9
movzx eax [ eax + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x23 ] 0x40
jne r-xdata
leave
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_478d7f
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx eax
shr ecx 0x10
test cx cx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
push [ esi + 0x2c ]
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
call sub_478e15
mov esi eax
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x10 ] cl
lea eax [ ebp - 0x10 ]
push 0x5
push eax
mov ax [ edi + 0x28 ]
push eax
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
and [ esi + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
mov eax sub_478f7a
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x3
push [ esi + 0x2c ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x8 ] 0x0
mov edi eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov eax sub_478e1b
push 0x0
push 0x0
push 0x36f
push ebx
push esi
call sub_478b79
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call sub_478e15
push 0xfffffffc
push ebx
mov [ ebp + 0x8 ] eax
call [ GetWindowLongA@IAT ]
push [ ebp - 0x10 ]
mov esi eax
sub esi [ ebp + 0x8 ]
push ebx
neg esi
sbb esi esi
inc esi
call [ edi + 0x20 ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_4791ec
push esi
push edi
push sub_48fcb1
mov ecx rw-data
call sub_492f51
mov esi eax
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_478ff6
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
call sub_475d4c
sub_479238
push esi
push sub_48fcb1
mov ecx rw-data
call sub_492f51
mov esi eax
call sub_4904f9
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
sub_47927a
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov esi ecx
mov [ ebp - 0x28 ] eax
call sub_4904f9
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
push edi
push esi
call sub_4791ec
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
mov edi eax
call sub_479238
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
xor eax eax
test edi edi
setne al
pop edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop esi
leave
retn 0x2c
sub_479360
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
mov eax [ ebp + 0x10 ]
push edx
or eax 0x40000000
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_47927a
pop edi
pop esi
pop ebp
retn 0x1c
sub_4793ac
mov eax sub_49a76c
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47bea6
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ eax + 0x24 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x24 ] 0x0
cmp esi rw-data
je r-xdata
call sub_479569
sub_479428
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
and [ esi + 0x34 ] 0x0
mov ecx esi
call sub_478ca1
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_479446
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_47ccf5
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov ecx [ esi + 0x34 ]
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x30 ] ebx
cmp [ edi + 0x20 ] esi
jne r-xdata
call sub_4904f9
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x34 ] 0x0
test [ esi + 0x24 ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
call sub_4904f9
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push [ esi + 0x1c ]
call edi
mov ecx esi
mov ebx eax
call sub_478ca1
push 0xfffffffc
push [ esi + 0x1c ]
call edi
cmp eax ebx
jne r-xdata
call sub_4902c7
mov edi [ eax + 0xcc ]
test edi edi
je r-xdata
push ebx
call sub_49688f
call sub_48e95c
test eax eax
je r-xdata
mov ecx esi
call sub_478db8
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_467a10
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] ebx
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_479569
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push ebx
push edi
push 0x0
call sub_478cc8
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_477ae7
mov ecx [ esi + 0x38 ]
mov edi eax
test ecx ecx
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x50 ]
push [ esi + 0x1c ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx esi
call sub_478db8
test edi edi
mov ebx eax
jne r-xdata
sub_4795b6
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_479620
push esi
call sub_4902c7
mov esi eax
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x108 ]
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
sub_479677
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x1c ]
call sub_482fbb
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
movzx eax ax
test esi esi
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x1c ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ah 0x20
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_4796e8
push esi
mov esi ecx
mov ecx [ esi + 0x38 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x88 ]
push [ esi + 0x1c ]
call [ GetWindowTextLengthA@IAT ]
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ esp + 0xc ]
push eax
call sub_47cacf
push eax
push [ esi + 0x1c ]
call [ GetWindowTextA@IAT ]
mov ecx [ esp + 0x8 ]
push 0xffffffff
call sub_47caa7
jmp r-xdata
pop esi
retn 0x4
sub_47975e
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_47ab34
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_47e466
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_478ca1
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_47979b
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
call sub_47ab34
test eax eax
je r-xdata
mov ecx esi
call sub_478ca1
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_4797e5
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_478ca1
lea eax [ ebp + 0xc ]
push eax
call sub_47ab07
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_479810
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_4902c7
mov esi eax
mov eax [ esi + 0x54 ]
mov ebx [ esi + 0x50 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov [ esi + 0x50 ] eax
mov ecx [ edi + 0x4 ]
push eax
push 0x0
push [ ebp + 0x10 ]
mov [ esi + 0x54 ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call [ TrackPopupMenu@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x50 ] ebx
mov [ esi + 0x54 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ eax + 0x1c ]
sub_479864
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
push edi
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_47e451
test eax eax
je r-xdata
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x14 ]
je r-xdata
push [ esp + 0x14 ]
push eax
call sub_479864
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call sub_47e466
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jmp r-xdata
sub_4798c7
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x1c ]
call sub_47a489
test eax eax
je r-xdata
push sub_48fcb1
mov ecx rw-data
call sub_492f51
mov ecx [ edi + 0x1c ]
cmp [ eax + 0x50 ] ecx
jne r-xdata
mov ecx edi
call sub_478ca1
push 0x0
mov ecx eax
call sub_47ab07
test eax eax
jne r-xdata
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x54 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
call sub_47e451
push [ esi + 0x8 ]
push eax
call sub_479864
test eax eax
je r-xdata
sub_47993f
mov eax sub_49a778
call sub_469294
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esp
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
push esi
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
call sub_4904f9
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_493376
mov [ ebp - 0x4 ] ebx
call sub_4904f9
push [ esi + 0x24 ]
mov esi [ lstrcatA@IAT ]
lea edi [ eax + 0x34 ]
push edi
call esi
lea eax [ ebp + 0xa ]
mov [ ebp + 0xa ] 0xa
push eax
push edi
mov [ ebp + 0xb ] bl
call esi
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_4933e6
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_4799e0
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
call sub_4902c7
mov esi eax
add esi 0x58
call sub_4904f9
mov ebx [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push [ ebp + 0x8 ]
push edi
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x1c
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ DefWindowProcA@IAT ]
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] esi
call sub_47993f
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
call sub_480815
push [ ebp + 0x8 ]
push edi
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
push esi
push edi
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
sub_479a94
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push sub_48fcb1
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_492f51
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0xc ]
sub eax 0x132
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x0
push 0x19
mov ecx esi
call [ eax + 0x98 ]
pop esi
leave
retn 0x8
sub_479ada
mov eax sub_49a78c
call sub_469294
push ecx
push ebx
push esi
mov esi ecx
call sub_4904f9
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c0f5
mov eax [ esi ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_47a502
mov ecx esi
call sub_47a36b
push ebx
mov esi eax
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_47a502
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x8c ]
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
test eax eax
pop edi
jne r-xdata
push ebx
push ebx
push 0x1f
push eax
call edi
or [ ebp - 0x4 ] 0xffffffff
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c10a
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push 0xffffffff
push ebx
push 0xf107
call sub_4840fb
sub_479bc2
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_479c02
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x9c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa0 ]
mov [ ebp - 0x4 ] eax
sub_479c46
mov eax sub_49a7b0
call sub_469294
sub esp 0x54
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp ebx 0x111
mov edi ecx
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0x78 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_478d3a
push eax
push [ ebp + 0xc ]
push edi
call sub_478aa2
mov edx [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
call [ edx + 0x7c ]
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ebx eax
mov eax 0x1ff
and ebx eax
and ecx eax
push 0x7
xor ebx ecx
call sub_493376
mov ecx [ ebp + 0x8 ]
lea eax [ ebx + ebx * 2 ]
cmp ecx [ eax * 4 + rw-data ]
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_478b03
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
mov [ ebx ] ecx
mov [ ebx + 0x8 ] eax
je r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
and [ ebx + 0x4 ] 0x0
push 0x7
call sub_4933e6
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push 0x7
mov [ ebp + 0x10 ] ebx
call sub_4933e6
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov edx 0xc000
cmp ecx edx
jae r-xdata
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push edx
push eax
call sub_479bc2
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
push ecx
push [ eax + 0x4 ]
call sub_479bc2
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx + 0x14 ]
cmp [ ecx + 0x8 ] 0x1a
mov eax [ ecx + 0x10 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
jmp r-xdata
push 0x7
mov [ ebx + 0x4 ] eax
call sub_4933e6
mov ebx [ ebp + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x30
ja r-xdata
call [ GetVersion@IAT ]
mov ecx [ ebp + 0x10 ]
cmp al 0x4
sbb eax eax
and al 0xf0
add eax 0x2f
mov ebx [ ebx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ecx ] edx
je r-xdata
jmp [ eax * 4 + jump_table_47a0f4 ]
push 0x7
mov [ ebx + 0x4 ] eax
call sub_4933e6
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x0
add eax 0x18
push 0xc000
push eax
call sub_479bc2
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
push [ ebp + 0xc ]
call sub_47fc89
push eax
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_478d3a
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_478d3a
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_47fbe7
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
call sub_478919
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] eax
call sub_478d61
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_47fbe7
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call ebx
and [ ebp - 0x20 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_478d3a
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
call sub_47e451
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_478d3a
push eax
push esi
call sub_478d3a
push eax
xor eax eax
cmp [ edi + 0x1c ] esi
sete al
push [ ebp + 0xc ]
call sub_47fc89
push [ ebp + 0xc ]
call sub_47e451
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_47e451
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_478d3a
jmp r-xdata
push esi
call sub_478d3a
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_478d3a
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx edx ax
shr eax 0x10
cmp [ ecx + 0x10 ] 0x1d
mov [ ebp + 0x8 ] edx
movsx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
push esi
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
mov ecx edi
call ebx
jmp r-xdata
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
mov ecx edi
push [ ebp + 0xc ]
call ebx
movzx eax si
shr esi 0x10
push esi
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edi
call ebx
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call ebx
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
call sub_4793ac
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_478d3a
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_478d3a
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push edx
jmp r-xdata
push esi
call sub_478d3a
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
test eax eax
jne r-xdata
call sub_47fd1c
jmp r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0x44 ]
lea ecx [ eax + 0x20 ]
call sub_477ae7
test eax eax
je r-xdata
mov [ ebp - 0x28 ] eax
sub_47a1e2
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
xor ebx ebx
mov esi ecx
shr eax 0x10
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_48fcb1
mov ecx rw-data
call sub_492f51
mov eax [ eax + 0xb8 ]
cmp eax [ esi + 0x1c ]
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_47ab34
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_47a1b8
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
jne r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
push ebx
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push edi
call [ eax + 0xc ]
sub_47a26e
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ esi ]
push ebx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_48fcb1
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_492f51
mov eax [ eax + 0xb8 ]
cmp eax [ edi + 0x1c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_47ab34
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push 0x0
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
mov [ ebp - 0xc ] eax
mov eax [ edi ]
push ecx
push [ ebp - 0x4 ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
sub_47a2e8
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov edi [ GetParent@IAT ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
push [ esi + 0x1c ]
jmp r-xdata
pop edi
pop esi
retn
call edi
push eax
call sub_478d3a
mov esi eax
test esi esi
je r-xdata
sub_47a326
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_478d61
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_466f90
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x1c ]
jmp r-xdata
sub_47a36b
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
push esi
call sub_478d3a
pop esi
retn
mov esi eax
push eax
jmp r-xdata
call sub_47a326
test eax eax
je r-xdata
sub_47a393
test ecx ecx
push esi
je r-xdata
xor eax eax
pop esi
retn
mov esi [ ecx + 0x1c ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ GetWindowLongA@IAT ]
push 0xfffffff0
push esi
call edi
mov ebx 0x40000000
push esi
call sub_478d3a
pop edi
pop ebx
pop esi
retn
push esi
call [ GetParent@IAT ]
test eax eax
je r-xdata
push 0xfffffff0
push eax
mov esi eax
call edi
jmp r-xdata
test ebx eax
je r-xdata
sub_47a3d7
push esi
push edi
mov esi ecx
call [ GetForegroundWindow@IAT ]
push eax
call sub_478d3a
mov ecx esi
mov edi eax
call sub_47a36b
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_478d3a
xor ecx ecx
cmp edi eax
sete cl
pop edi
mov eax ecx
pop esi
retn
sub_47a40b
push esi
push edi
mov esi ecx
call sub_47a36b
mov edi eax
call [ GetForegroundWindow@IAT ]
push eax
call sub_478d3a
test eax eax
je r-xdata
push [ edi + 0x1c ]
call [ SetForegroundWindow@IAT ]
mov eax [ eax + 0x1c ]
mov ecx [ esi + 0x1c ]
cmp eax ecx
je r-xdata
pop edi
pop esi
retn
push ecx
push eax
call [ IsChild@IAT ]
test eax eax
jne r-xdata
sub_47a448
push esi
mov esi ecx
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov ecx esi
call sub_47a2e8
mov esi eax
mov eax esi
pop esi
retn
mov ecx esi
mov esi eax
mov ecx eax
jmp r-xdata
call sub_47a2e8
test eax eax
je r-xdata
sub_47a489
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
push esi
call edi
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_47a489
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_47a489
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
call sub_478d61
test eax eax
jne r-xdata
call sub_478d3a
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
sub_47a502
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
pop edi
pop esi
pop ebp
retn 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_478d61
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push eax
call sub_478b79
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_47a502
sub_47a57f
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x10 ]
test eax eax
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ SetScrollPos@IAT ]
pop esi
pop ebp
retn 0xc
sub_47a5af
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ GetScrollPos@IAT ]
pop esi
retn 0x4
sub_47a5d7
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x14 ]
test eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ SetScrollRange@IAT ]
pop esi
pop ebp
retn 0x10
sub_47a60a
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x10 ]
test eax eax
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ GetScrollRange@IAT ]
pop esi
pop ebp
retn 0xc
sub_47a63a
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0x3
jne r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x68 ]
push [ esp + 0x10 ]
test eax eax
je r-xdata
push [ esp + 0x10 ]
push 0x0
call sub_47a63a
push 0x1
pop edi
push edi
push [ esi + 0x1c ]
call [ ShowScrollBar@IAT ]
mov ecx eax
call sub_47bde8
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_47a67d
cmp [ rw-data ] 0x333
jae r-xdata
push esi
mov esi [ ecx + 0x1c ]
push edi
mov edi [ esp + 0xc ]
cmp edi 0x2
je r-xdata
xor eax eax
jmp r-xdata
push [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push eax
push edi
push esi
mov [ eax ] 0x1c
call [ SetScrollInfo@IAT ]
push 0x1
pop eax
pop edi
pop esi
mov eax [ ecx ]
push edi
call [ eax + 0x68 ]
test eax eax
je r-xdata
retn 0xc
mov esi [ eax + 0x1c ]
push 0x2
pop edi
sub_47a6ca
cmp [ rw-data ] 0x333
jae r-xdata
push esi
mov esi [ ecx + 0x1c ]
push edi
mov edi [ esp + 0xc ]
cmp edi 0x2
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push eax
push edi
push esi
mov [ eax ] 0x1c
mov [ eax + 0x4 ] ecx
call [ GetScrollInfo@IAT ]
pop edi
pop esi
mov eax [ ecx ]
push edi
call [ eax + 0x68 ]
test eax eax
je r-xdata
retn 0xc
mov esi [ eax + 0x1c ]
push 0x2
pop edi
sub_47a717
push ebp
mov ebp esp
sub esp 0x24
lea eax [ ebp - 0x4 ]
push esi
push eax
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
push [ ebp + 0x8 ]
call sub_47a60a
lea eax [ ebp - 0x24 ]
push 0x2
push eax
mov ecx esi
push [ ebp + 0x8 ]
call sub_47a6ca
test eax eax
pop esi
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x14 ]
xor edx edx
lea ecx [ eax - 0x1 ]
dec eax
cmp edx ecx
sbb ecx ecx
and ecx eax
sub [ ebp - 0x4 ] ecx
sub_47a75e
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ ScrollWindow@IAT ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x58 ]
mov ebx [ GetWindow@IAT ]
push 0x5
push [ esi + 0x1c ]
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_4803ee
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
push 0x15
push eax
add ecx edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ ebp - 0x10 ]
add ecx edx
push ecx
push eax
push edi
call [ SetWindowPos@IAT ]
push 0x2
push edi
jmp r-xdata
call ebx
mov edi eax
test edi edi
je r-xdata
sub_47a804
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x1c ]
mov ebx ecx
mov ecx [ ebp + 0x20 ]
xor eax eax
cmp esi eax
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebx + 0x1c ]
call [ GetClientRect@IAT ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
push 0x8
call [ BeginDeferWindowPos@IAT ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
push esi
call [ GetDlgCtrlID@IAT ]
push esi
movzx edi ax
call sub_478d61
cmp edi [ ebp + 0x10 ]
jne r-xdata
push [ ebx + 0x1c ]
call [ GetTopWindow@IAT ]
mov esi eax
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp edi [ ebp + 0x8 ]
jb r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0xc ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x18 ]
call [ CopyRect@IAT ]
jmp r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
push [ ebp - 0x24 ]
call [ EndDeferWindowPos@IAT ]
push [ ebp - 0x4 ]
call sub_478d3a
cmp [ ebp + 0x14 ] 0x2
jne r-xdata
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
mov edx [ eax ]
lea ecx [ ebp - 0x20 ]
push ebx
push ecx
mov ecx eax
call [ edx + 0x60 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push [ ebp - 0x4 ]
push eax
call sub_47a93e
mov edx [ ebp + 0x18 ]
mov ecx [ edx ]
add [ ebp - 0x20 ] ecx
mov ecx [ edx + 0x4 ]
add [ ebp - 0x1c ] ecx
mov ecx [ edx + 0x8 ]
sub [ ebp - 0x18 ] ecx
mov ecx [ edx + 0xc ]
sub [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x24 ]
push eax
push ebx
push 0x361
push esi
call [ SendMessageA@IAT ]
sub_47a93e
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push ebx
call [ GetParent@IAT ]
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
mov esi [ ScreenToClient@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
call esi
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push esi
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ esi + 0xc ]
push 0x14
test edi edi
je r-xdata
sub edx eax
push edx
mov edx [ esi + 0x8 ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
push ebx
call [ SetWindowPos@IAT ]
sub edx eax
push edx
mov edx [ esi + 0x8 ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
push ebx
push [ edi ]
call [ DeferWindowPos@IAT ]
mov [ edi ] eax
jmp r-xdata
sub_47a9d8
push esi
mov esi ecx
call sub_47bc00
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_47bbe6
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and ah 0xfd
sub_47aa03
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
call sub_47a36b
mov ecx [ ebp + 0x8 ]
mov esi eax
and ecx 0xfff0
mov eax ecx
sub eax 0xf040
je r-xdata
cmp [ ebp + 0xc ] 0x75
jne r-xdata
sub eax 0x10
je r-xdata
xor eax eax
test esi esi
je r-xdata
sub eax 0x10
je r-xdata
mov ecx esi
call sub_47be0f
jmp r-xdata
cmp ecx 0xf060
je r-xdata
sub eax 0xa0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x8
push ebx
mov ebx [ edi + 0x1c ]
call [ GetFocus@IAT ]
push [ esi + 0x1c ]
mov edi [ SetActiveWindow@IAT ]
mov [ ebp - 0x4 ] eax
call edi
push eax
call sub_478d3a
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x112
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov esi [ IsWindow@IAT ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call esi
test eax eax
pop ebx
je r-xdata
push ebx
call edi
push [ ebp - 0x4 ]
call [ SetFocus@IAT ]
sub_47aac5
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi [ edi ]
xor eax eax
push esi
call sub_478d61
test eax eax
je r-xdata
cmp esi [ esp + 0xc ]
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x90 ]
test eax eax
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x8
sub_47ab07
push esi
mov esi ecx
push sub_48fcb1
mov ecx rw-data
call sub_492f51
push [ esp + 0x8 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x40 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa8 ]
pop esi
retn 0x4
sub_47ab34
mov eax sub_49a7c4
call sub_469294
sub esp 0x3c
push esi
push edi
push 0x0
call sub_478cc8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push edi
mov ecx esi
call sub_477ae7
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx eax
call sub_47ab07
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_477ae7
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x20 ]
call sub_477ae7
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
call sub_478957
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] esi
call sub_47ab07
and [ ebp - 0x2c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_4793ac
mov eax esi
jmp r-xdata
sub_47abd8
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
push esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47ac33
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
cmp esi 0x132
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp esi 0x138
ja r-xdata
push 0x1
pop eax
jmp r-xdata
mov [ ecx ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
sub_47ac33
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
cmp eax 0x132
jb r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
shr eax 0x10
push esi
or eax 0xbd110000
push esi
push eax
push esi
call sub_47bfd8
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
cmp eax 0x138
ja r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_479c46
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
cmp ecx esi
pop eax
je r-xdata
cmp eax 0x2f
jbe r-xdata
mov edx [ ebp + 0xc ]
add eax 0xfffffece
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
xor esi esi
push eax
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_479c46
cmp [ edi ] esi
pop edi
jne r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov edx [ eax + 0x8 ]
xor esi esi
lea eax [ ebp - 0x8 ]
push esi
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_47bfd8
jmp r-xdata
sub_47ad1b
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_47ab34
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_478ca1
sub_47ad6a
push esi
mov esi ecx
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_4904f9
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov ecx esi
call sub_47bbe6
test eax 0x40000000
jne r-xdata
call sub_47ccf5
test eax eax
je r-xdata
mov ecx rw-data
call sub_47fad5
mov ecx esi
call sub_478ca1
pop esi
retn
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x1c ]
call sub_47a502
call sub_47ccf5
cmp [ eax + 0x1c ] esi
jne r-xdata
push sub_48fd16
mov ecx rw-data
call sub_493013
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
call eax
sub_47ade7
push esi
push edi
mov edi ecx
call sub_4904f9
cmp [ eax + 0x14 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
push 0x0
push 0x0
mov ecx edi
call sub_47aee9
pop edi
pop esi
retn 0x8
push sub_48fd16
mov ecx rw-data
call sub_493013
mov esi eax
call sub_47ccf5
test eax eax
je r-xdata
call sub_47ccf5
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_47ae3a
push esi
mov esi ecx
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_47bbe6
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
retn 0x4
call sub_478c6c
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_47a502
push [ esp + 0x8 ]
mov ecx eax
call sub_47eaad
sub_47ae85
push ebx
push esi
push edi
mov ebx ecx
call sub_47bbe6
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_478ca1
call sub_402850
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_47aee9
push esi
mov esi ecx
call sub_402850
cmp eax esi
jne r-xdata
mov ecx esi
call sub_47bbe6
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_47fb19
mov ecx esi
call sub_478ca1
pop esi
retn 0x8
call sub_478c6c
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_47a502
sub_47af32
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x4 ]
call sub_47ab34
test eax eax
je r-xdata
mov ecx esi
call sub_478ca1
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_47af5c
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_478ca1
push 0x0
call sub_47ab07
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_47af7d
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov esi 0x121
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
mov ebx ecx
push eax
mov ecx ebx
call sub_478ca1
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_47afc7
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
call sub_47ab07
test eax eax
je r-xdata
mov ecx esi
call sub_478ca1
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_47afee
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_47ab07
test eax eax
je r-xdata
push sub_48fce5
mov ecx rw-data
call sub_493013
test edi edi
mov esi eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x10 ]
push edi
push [ eax + 0x4 ]
call sub_47b051
test eax eax
jne r-xdata
mov edi [ edi + 0x1c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx ebx
call sub_478ca1
jmp r-xdata
sub_47b051
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xc
push [ ebp + 0x14 ]
call [ GetObjectA@IAT ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0xc ]
call sub_482f46
test eax eax
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetTextColor@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
leave
retn 0x14
sub_47b0ce
mov eax sub_49a7d0
call sub_469294
sub esp 0x24
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_47b170
call sub_4902c7
mov edi eax
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov ecx [ edi + 0xb8 ]
lea eax [ edi + 0xb8 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call [ eax + 0x84 ]
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ edi + 0xb8 ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_47b186
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_47bbe6
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x1 ] 0x40
je r-xdata
mov edi [ eax + 0x1c ]
jmp r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push [ esi + 0x1c ]
call [ GetParent@IAT ]
jmp r-xdata
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call ebx
test [ ebp - 0x1 ] 0x40
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
lea eax [ ebp - 0x38 ]
push 0x2
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
add edi ecx
cmp edi eax
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov ecx eax
lea eax [ ebp - 0x38 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_466e92
push eax
call sub_466efd
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_402850
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
add ebx esi
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x20 ]
add eax ecx
sub edi [ ebp - 0x28 ]
mov ebx [ ebp - 0x1c ]
cdq
sub eax edx
sub ebx [ ebp - 0x24 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x2c ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x34 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax ebx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_466e92
push eax
call sub_466efd
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x1c ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_47bd57
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x1c ]
add esi [ ebp - 0xc ]
sub_47b33b
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x10 ] edi
mov ebx ecx
je r-xdata
push edi
mov ecx ebx
call sub_47b38b
call sub_4904f9
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
cmp eax edi
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
cmp eax edi
jne r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_47b38b
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push 0x364
push [ ebx + 0x1c ]
call sub_47a502
push edi
mov edi [ SendDlgItemMessageA@IAT ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
inc esi
inc esi
mov ax [ esi ]
inc esi
inc esi
mov edx [ esi ]
add esi 0x4
cmp ax 0x1234
mov [ ebp + 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn 0x4
or [ ebp - 0x24 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x20 ] esi
push 0x401
jmp r-xdata
cmp ax 0x401
jne r-xdata
movzx eax cx
push eax
push [ ebx + 0x1c ]
call edi
cmp eax 0xffffffff
jne r-xdata
cmp ax 0x403
jne r-xdata
mov eax 0x180
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp ax 0x401
jne r-xdata
mov eax 0x143
movzx eax ax
push esi
push 0x0
push eax
mov cx [ esi ]
test cx cx
je r-xdata
cmp ax 0x180
je r-xdata
cmp ax 0x143
jne r-xdata
sub_47b45d
mov eax sub_49a7e4
call sub_469294
sub esp 0x68
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esi
call sub_47c175
lea ecx [ ebp - 0x74 ]
call sub_478919
push [ esi + 0x1c ]
xor edi edi
mov [ ebp - 0x4 ] edi
call [ GetTopWindow@IAT ]
mov esi eax
cmp esi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x58 ] edi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push ebx
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push edi
push eax
push 0xffffffff
push [ ebp - 0x34 ]
call sub_47bfd8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
push edi
push ecx
push 0xbd11ffff
push edi
mov ecx eax
call sub_47bfd8
test eax eax
jne r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx edi
je r-xdata
push esi
mov [ ebp - 0x58 ] esi
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x74 ]
push esi
mov [ ebp - 0x24 ] eax
call sub_478d61
cmp eax edi
je r-xdata
pop ebx
push ebx
lea ecx [ ebp - 0x38 ]
push [ ebp + 0x8 ]
call sub_47c33a
push edi
push edi
push 0x87
push [ ebp - 0x58 ]
call [ SendMessageA@IAT ]
test ah 0x20
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x74 ]
call sub_47bbe6
and eax 0xf
cmp eax 0x3
je r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x9
jne r-xdata
sub_47b562
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
cmp eax 0x200
jb r-xdata
cmp eax 0x108
jbe r-xdata
xor eax eax
cmp eax 0x209
ja r-xdata
push edx
call sub_47bbb3
jmp r-xdata
retn 0x4
sub_47b592
sub esp 0x10
push ebx
push ebp
push esi
push edi
push 0x1
xor edi edi
test [ esp + 0x28 ] 0x4
pop ebx
mov esi ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edi
je r-xdata
mov [ esp + 0x10 ] edi
call sub_47bbe6
test eax 0x10000000
mov [ esp + 0x10 ] ebx
je r-xdata
call sub_47ccf5
mov edx [ eax ]
mov ecx eax
call [ edx + 0x5c ]
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
or [ esi + 0x24 ] 0x18
mov [ esp + 0x1c ] eax
call sub_47ccf5
mov ebx [ UpdateWindow@IAT ]
mov ebp eax
add ebp 0x30
push edi
call sub_49688f
or eax 0xffffffff
jmp r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax 0x118
je r-xdata
test [ esp + 0x24 ] 0x1
jne r-xdata
push 0x1
mov ecx esi
call sub_47bda6
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
and [ esi + 0x24 ] 0xffffffe7
mov eax [ esi + 0x2c ]
call sub_47ccf5
mov edx [ eax ]
push ebp
mov ecx eax
call [ edx + 0x64 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_47bda6
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
cmp eax 0x104
jne r-xdata
test [ esp + 0x24 ] 0x2
jne r-xdata
cmp [ esp + 0x1c ] edi
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
push eax
push edi
push 0x36a
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
jmp r-xdata
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esi + 0x1c ]
push edi
push 0x121
push [ esp + 0x28 ]
call [ SendMessageA@IAT ]
sub_47b6f8
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x24 ]
test al 0x10
je r-xdata
retn 0x4
and al 0xef
mov [ ecx + 0x24 ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x1c ]
call [ PostMessageA@IAT ]
sub_47b721
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_4904f9
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_47993f
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_47b762
push ebx
push esi
mov esi r--data
push edi
push esi
call [ GetModuleHandleA@IAT ]
push esi
mov edi eax
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push ebx
xor esi esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edi 0x3fc0
and eax edi
cmp eax [ esp + 0x14 ]
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov eax esi
mov esi [ esp + 0x14 ]
test edi edi
jne r-xdata
call [ InitCommonControls@IAT ]
mov esi edi
jmp r-xdata
call [ InitCommonControls@IAT ]
or si 0x3fc0
sub_47b7d9
push ebp
mov ebp esp
sub esp 0x34
call sub_4904f9
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
xor edi edi
push 0x28
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_467a10
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_4904f9
mov eax [ eax + 0x8 ]
push 0x8
test [ ebp + 0x8 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] 0xb
push eax
mov [ ebp - 0x10 ] r--data
call sub_47993f
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_47993f
test eax eax
je r-xdata
push 0x1
pop esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_47993f
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_47b721
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_47b721
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
lea eax [ ebp - 0xc ]
push 0x3fc0
push eax
mov [ ebp - 0x8 ] 0xff
call sub_47b762
or esi eax
and [ ebp + 0x8 ] 0xc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
lea eax [ ebp - 0xc ]
push 0x40
push eax
mov [ ebp - 0x8 ] 0x10
call sub_47b762
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x80
push eax
mov [ ebp - 0x8 ] 0x2
call sub_47b762
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_47b762
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_47b762
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
mov [ ebp - 0x8 ] 0x1
call sub_47b762
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
mov [ ebp - 0x8 ] 0x40
call sub_47b762
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_47b762
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_47b762
or esi eax
mov eax 0x8000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_47b762
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_47b762
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_47b762
or esi eax
mov ecx [ ebp - 0x4 ]
mov edx 0x3fc0
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_47b762
or esi eax
mov eax esi
pop edi
and eax [ ebp + 0x8 ]
pop esi
pop ebx
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
or al 0x10
or esi 0x10
mov [ ecx + 0x18 ] eax
sub_47bac3
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_478d7f
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov esi eax
call sub_478e15
push eax
push 0xfffffffc
push [ esp + 0x10 ]
call [ SetWindowLongA@IAT ]
cmp [ esi ] 0x0
jne r-xdata
push 0x1
pop eax
mov [ esi ] eax
sub_47bb2c
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x70 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
push eax
call sub_478d3a
jmp r-xdata
retn 0x4
sub_47bb56
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x6c ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
retn 0x8
sub_47bb84
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x84 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ SetDlgItemTextA@IAT ]
jmp r-xdata
retn 0x8
sub_47bbb3
push esi
mov esi ecx
test [ esi + 0x25 ] 0x1
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ IsDialogMessageA@IAT ]
call sub_4904f9
mov eax [ eax + 0x1038 ]
push [ esp + 0x8 ]
mov ecx eax
mov edx [ eax ]
push esi
call [ edx + 0x24 ]
jmp r-xdata
pop esi
retn 0x4
sub_47bc1a
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x78 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call sub_4789d2
jmp r-xdata
pop ebp
retn 0xc
sub_47bc4b
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x7c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call sub_4789ec
jmp r-xdata
pop ebp
retn 0xc
sub_47bca3
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x84 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ GetWindowTextA@IAT ]
jmp r-xdata
retn 0x8
sub_47bced
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x94 ]
push [ esp + 0x4 ]
push 0xfffffff4
push [ ecx + 0x1c ]
call [ SetWindowLongA@IAT ]
jmp r-xdata
retn 0x4
sub_47bd16
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x18 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x98 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ MoveWindow@IAT ]
jmp r-xdata
pop ebp
retn 0x14
sub_47bd57
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x1c ]
call [ SetWindowPos@IAT ]
jmp r-xdata
mov eax [ eax + 0x1c ]
pop ebp
retn 0x18
sub_47be30
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ eax + 0x4 ]
call sub_477ae7
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x8c ]
sub_47bea6
mov eax sub_49a848
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ecx + 0x10 ]
and [ ebp - 0x4 ] 0x0
add ecx 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call [ eax + 0x1c ]
sub_47bed1
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push 0x1
test eax eax
pop ebx
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x28
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub eax 0x29
je r-xdata
je r-xdata
mov eax ebx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0xa
je r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov ebx eax
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0x16
je r-xdata
push [ ebp + 0x18 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub_47bfd8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xfffffffe
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
call sub_4904f9
push [ ebp + 0x14 ]
mov eax [ eax + 0x1038 ]
mov ecx eax
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
push edi
call [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
mov ecx edi
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x111
mov ebx eax
movzx eax ax
shr ebx 0x10
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_479bc2
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov esi eax
mov esi [ edi + 0x4 ]
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_47bed1
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x10
push eax
push [ ebp + 0x10 ]
call sub_468550
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x1
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_47c137
push esi
mov esi ecx
push 0xd
call sub_493376
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
test eax eax
je r-xdata
push 0xd
call sub_4933e6
test esi esi
je r-xdata
mov ecx eax
call sub_490536
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_47c175
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_47c19b
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
push edi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_47bde8
pop edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x3
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
push [ edi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] 0x1
push 0x0
push ecx
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_478d3a
mov ecx eax
call sub_47be0f
mov ecx [ ecx + 0x1c ]
sub_47c22b
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x1c ]
call edi
test ah 0x20
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x1c ]
call edi
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x8
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_47c28d
push esi
push edi
mov esi ecx
xor edi edi
xor ecx ecx
cmp [ esp + 0xc ] edi
mov eax [ esi ]
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_48fd46
cmp [ rw-data ] edi
je r-xdata
sub_47c2e3
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
call sub_483030
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
push [ esp + 0xc ]
and ax 0xf6fb
or eax edi
push [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ ModifyMenuA@IAT ]
pop edi
jmp r-xdata
sub_47c33a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
push 0x1
pop eax
cmp ax 0xffff
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
push ebx
mov [ esi + 0x18 ] ebx
mov edx [ edi ]
push esi
push 0xffffffff
push eax
mov ecx edi
call [ edx + 0xc ]
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
jmp r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ edi ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
push ebx
mov ecx edi
push [ esi + 0x4 ]
mov [ ebp - 0x8 ] ebx
call [ eax + 0xc ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
sub_47c3b5
push esi
push edi
mov edi [ esp + 0xc ]
mov eax esi
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call eax
test eax eax
pop ecx
jne r-xdata
push edi
call sub_469520
mov esi eax
pop ecx
test esi esi
jne r-xdata
sub_47c3e9
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
cmp [ eax - 0xc ] 0x0
jl r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
push [ ecx ]
mov ecx esi
call sub_47c7b1
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_47c4e1
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push edi
push 0x40
pop edi
cmp esi edi
jg r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov edi 0x80
cmp esi edi
jg r-xdata
mov ecx rw-data
pop esi
pop ebx
retn 0x4
mov edi 0x100
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
mov [ eax ] 0x1
and [ eax + esi + 0xc ] 0x0
mov [ eax + 0x4 ] esi
add eax 0xc
mov [ ebx ] eax
pop edi
mov edi 0x200
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
call sub_46733d
mov [ eax + 0x8 ] edi
jmp r-xdata
lea eax [ esi + 0xd ]
push eax
call sub_47c3b5
pop ecx
mov [ eax + 0x8 ] esi
mov ecx rw-data
jmp r-xdata
sub_47c563
mov eax [ ecx + 0x8 ]
cmp eax 0x40
jne r-xdata
cmp eax 0x80
jne r-xdata
push ecx
mov ecx rw-data
cmp eax 0x100
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
cmp eax 0x200
push ecx
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
call sub_4673cc
retn
call sub_47c3de
pop ecx
retn
mov ecx rw-data
jmp r-xdata
sub_47c5ab
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ esi ]
sub ecx 0xc
call sub_47c563
sub_47c61d
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp [ esi - 0xc ] 0x1
jle r-xdata
pop edi
pop esi
retn
call sub_47c5ab
push [ esi - 0x8 ]
mov ecx edi
call sub_47c4e1
mov eax [ esi - 0x8 ]
inc eax
push eax
push esi
push [ edi ]
call sub_467a70
add esp 0xc
sub_47c64b
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
jg r-xdata
mov ecx esi
call sub_47c5ab
push edi
mov ecx esi
call sub_47c4e1
cmp edi [ eax - 0x4 ]
jle r-xdata
pop edi
pop esi
retn 0x4
sub_47c674
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx [ esi ]
sub ecx 0xc
call sub_47c563
sub_47c69e
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
add eax ebx
mov edi ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_47c4e1
mov eax [ edi ]
push ebx
add eax [ ebp + 0x10 ]
push eax
push [ esi ]
call sub_467a70
add esp 0xc
pop esi
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x10
sub_47c6e2
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
test ebx ebx
mov [ esi ] eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
mov eax ebx
shr eax 0x10
test ax ax
jne r-xdata
push ebx
call [ lstrlenA@IAT ]
mov edi eax
test edi edi
je r-xdata
movzx eax bx
push eax
call sub_47e84a
jmp r-xdata
push edi
mov ecx esi
call sub_47c4e1
push edi
push ebx
push [ esi ]
call sub_467a70
add esp 0xc
sub_47c734
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_47c64b
push edi
push [ esp + 0x14 ]
push [ esi ]
call sub_467a70
mov eax [ esi ]
add esp 0xc
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
pop edi
pop esi
retn 0x8
sub_47c761
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx [ esi ]
mov eax [ edi ]
cmp ecx eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
cmp [ ecx - 0xc ] 0x0
jge r-xdata
cmp [ eax - 0xc ] 0x0
jge r-xdata
add ecx 0xfffffff4
cmp ecx [ rw-data ]
jne r-xdata
mov ecx esi
call sub_47c5ab
mov eax [ edi ]
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
push eax
mov ecx esi
push [ eax - 0x8 ]
call sub_47c734
jmp r-xdata
sub_47c7b1
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_47c734
mov eax esi
pop edi
pop esi
retn 0x4
sub_47c7d8
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
xor eax eax
push ebx
call sub_469743
pop ecx
jmp r-xdata
lea edi [ eax + eax ]
mov ecx esi
push edi
call sub_47c64b
inc edi
push edi
push ebx
push [ esi ]
call sub_47cb5c
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_47caa7
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
sub_47c819
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
lea eax [ edi + ebx ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
push eax
call sub_47c4e1
push edi
push [ esp + 0x18 ]
push [ esi ]
call sub_467a70
mov eax [ esi ]
push ebx
push [ esp + 0x2c ]
add eax edi
push eax
call sub_467a70
add esp 0x18
sub_47c857
mov eax sub_49a9bf
call sub_469294
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push 0x1
mov eax [ eax ]
mov ecx [ ecx ]
pop esi
push eax
mov [ ebp - 0x4 ] esi
push [ eax - 0x8 ]
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_47c819
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_47c3e9
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_47c8bd
mov eax sub_49a9eb
call sub_469294
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x10 ] 0x0
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
jne r-xdata
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov ecx [ ecx ]
push eax
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_47c819
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_47c3e9
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_47c931
mov eax sub_49aa17
call sub_469294
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] 0x0
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx ]
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_47c819
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_47c3e9
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_47c9a5
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push [ esp + 0x14 ]
mov ecx esi
push edi
push eax
push [ eax - 0x8 ]
call sub_47c819
push ebx
call sub_47c5dc
mov ecx [ eax - 0x8 ]
lea edx [ ecx + edi ]
cmp edx [ eax - 0x4 ]
jg r-xdata
push edi
add ecx eax
push [ esp + 0x18 ]
push ecx
call sub_467a70
mov eax [ esi ]
add esp 0xc
add [ eax - 0x8 ] edi
mov eax [ esi ]
mov ecx [ eax - 0x8 ]
and [ ecx + eax ] 0x0
jmp r-xdata
sub_47ca04
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_47c9a5
mov eax esi
pop edi
pop esi
retn 0x4
sub_47ca58
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push edi
mov edi [ eax - 0x8 ]
cmp ecx edi
jge r-xdata
cmp ecx [ eax - 0x4 ]
jle r-xdata
push ecx
mov ecx esi
call sub_47c4e1
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0xc ]
push eax
push [ esi ]
call sub_467a70
mov eax [ esi ]
add esp 0xc
push ebx
mov [ eax - 0x8 ] edi
call sub_47c5dc
pop edi
mov ecx edi
mov eax [ esi ]
pop esi
pop ebx
retn 0x4
sub_47caa7
push esi
mov esi ecx
call sub_47c61d
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov [ ecx - 0x8 ] eax
mov ecx [ esi ]
pop esi
and [ ecx + eax ] 0x0
retn 0x4
push [ esi ]
call [ lstrlenA@IAT ]
sub_47cacf
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_47ca58
mov eax [ esi ]
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
mov eax [ esi ]
pop edi
pop esi
retn 0x4
sub_47cafd
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp ecx [ eax - 0x8 ]
jge r-xdata
or eax 0xffffffff
jmp r-xdata
add eax ecx
movzx ecx [ esp + 0x8 ]
push ecx
push eax
call sub_469760
pop ecx
test eax eax
pop ecx
jne r-xdata
pop esi
retn 0x8
sub eax [ esi ]
sub_47cb2a
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
push eax
call sub_4697f7
pop ecx
test eax eax
pop ecx
jne r-xdata
sub eax [ esi ]
or eax 0xffffffff
jmp r-xdata
pop esi
retn 0x4
sub_47cb5c
push ebx
xor ebx ebx
cmp [ esp + 0x10 ] ebx
push esi
mov esi [ esp + 0xc ]
jne r-xdata
push ebx
push ebx
push [ esp + 0x1c ]
push esi
push 0xffffffff
push [ esp + 0x24 ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
jle r-xdata
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
mov [ eax + esi - 0x1 ] bl
xor eax eax
jmp r-xdata
sub_47cb92
cmp [ esp + 0xc ] 0x0
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
push [ esp + 0x10 ]
push esi
push 0xffffffff
push [ esp + 0x18 ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
test esi esi
je r-xdata
pop esi
retn
and [ esi + eax * 2 - 0x2 ] 0x0
xor eax eax
pop esi
retn
sub_47cbc7
mov eax sub_49ab6c
call sub_469294
sub esp 0x48
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x10 ] esp
mov esi [ edi + 0x4 ]
mov [ ebp - 0x14 ] esi
call sub_478919
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_4902c7
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
call sub_4904f9
push sub_490144
lea ecx [ eax + 0x1070 ]
call sub_492f51
mov [ eax + 0x4 ] esi
call sub_47ce2f
call sub_4904f9
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
push [ edi + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ebx [ edi + 0x14 ]
call [ SetEvent@IAT ]
push 0xffffffff
push ebx
call [ WaitForSingleObject@IAT ]
push ebx
call [ CloseHandle@IAT ]
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
mov eax [ esi ]
mov ecx esi
jne r-xdata
push [ esi + 0x4c ]
call eax
pop ecx
jmp r-xdata
mov eax [ eax + 0x1c ]
cmp eax ebx
je r-xdata
call [ eax + 0x54 ]
call [ eax + 0x68 ]
jmp r-xdata
lea ecx [ ebp - 0x50 ]
mov esi eax
call sub_478db8
push 0x1
push esi
call sub_47cdea
cmp [ eax + 0x1c ] ebx
je r-xdata
push [ eax + 0x1c ]
lea ecx [ ebp - 0x50 ]
call sub_478d7f
lea eax [ ebp - 0x50 ]
mov [ esi + 0x1c ] eax
jmp r-xdata
sub_47cd0a
mov eax sub_49ab81
call sub_469294
push ecx
push esi
push 0x68
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor esi esi
cmp ecx esi
mov [ ebp - 0x4 ] esi
je r-xdata
push [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
or al 0x4
push [ ebp + 0x14 ]
mov ecx esi
push eax
call sub_47cef2
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_49006f
mov esi eax
push [ ebp + 0x10 ]
push [ esi + 0x28 ]
call [ SetThreadPriority@IAT ]
test [ ebp + 0x18 ] 0x4
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x78 ]
xor eax eax
jmp r-xdata
mov eax esi
push [ esi + 0x28 ]
call [ ResumeThread@IAT ]
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x18
sub_47cd8b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
call sub_47e52c
mov esi eax
test esi esi
jne r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi + 0x4c ] 0x0
or al 0x4
push [ ebp + 0x10 ]
mov ecx esi
push eax
call sub_47cef2
test eax eax
jne r-xdata
call sub_475d4c
push [ ebp + 0xc ]
push [ esi + 0x28 ]
call [ SetThreadPriority@IAT ]
test [ ebp + 0x14 ] 0x4
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x78 ]
xor eax eax
jmp r-xdata
mov eax esi
push [ esi + 0x28 ]
call [ ResumeThread@IAT ]
pop esi
pop ebp
retn 0x14
sub_47cdea
push esi
push edi
call sub_49051f
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
push 0x0
call sub_47ce8e
push [ esp + 0xc ]
call sub_469ec2
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push 0x0
push 0x1
call eax
and [ edi + 0x4 ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x78 ]
sub_47ce2f
call sub_4904f9
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
push esi
call sub_4902c7
mov esi eax
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_47d2cd
push 0xffffffff
call [ SetWindowsHookExA@IAT ]
push sub_48fd16
mov ecx rw-data
mov [ esi + 0x30 ] eax
call sub_493013
mov esi eax
cmp [ esi + 0x14 ] 0x0
je r-xdata
push sub_490175
mov ecx rw-data
call sub_492f51
pop esi
call sub_4904f9
push [ eax + 0x8 ]
call [ esi + 0x14 ]
sub_47ce8e
push esi
call sub_47e5b1
push 0xffffffff
call sub_47e5ba
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
pop esi
test ecx ecx
je r-xdata
mov ecx rw-data
call sub_492fc8
mov esi eax
test esi esi
je r-xdata
retn 0x4
push 0x0
push [ esp + 0x8 ]
call sub_492ef8
mov ecx [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ esi + 0xcc ]
test ecx ecx
je r-xdata
and [ esi + 0xcc ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_47cef2
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
xor ebx ebx
push 0x1c
lea eax [ ebp - 0x1c ]
push ebx
mov esi ecx
push eax
call sub_467a10
add esp 0xc
call sub_4902c7
mov edi [ CreateEventA@IAT ]
push ebx
push ebx
push 0x1
push ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] esi
call edi
push ebx
push ebx
push 0x1
push ebx
mov [ ebp - 0xc ] eax
call edi
cmp [ ebp - 0xc ] ebx
mov edi [ CloseHandle@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
xor eax eax
push [ ebp - 0x8 ]
call edi
push [ ebp - 0xc ]
call edi
lea ecx [ esi + 0x2c ]
or al 0x4
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
push sub_47cbc7
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_469dbb
add esp 0x18
cmp eax ebx
mov [ esi + 0x28 ] eax
je r-xdata
push eax
call [ ResumeThread@IAT ]
push 0xffffffff
push [ ebp - 0xc ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0xc ]
call edi
test [ ebp + 0x8 ] 0x4
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ esi + 0x28 ]
call [ SuspendThread@IAT ]
push [ ebp - 0x8 ]
call [ SetEvent@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0xffffffff
push [ esi + 0x28 ]
call [ WaitForSingleObject@IAT ]
push [ esi + 0x28 ]
call edi
mov [ esi + 0x28 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_47cfe9
push ecx
push ebx
push ebp
push esi
push edi
push 0x1
xor ebx ebx
mov esi ecx
pop edi
mov [ esp + 0x10 ] ebx
mov eax [ esi ]
mov ecx esi
call [ eax + 0x5c ]
test eax eax
je r-xdata
lea ebp [ esi + 0x30 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi ]
lea ebp [ esi + 0x30 ]
push ebp
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esi ]
inc [ esp + 0x10 ]
push eax
mov ecx esi
call [ edx + 0x60 ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push 0x1
mov [ esp + 0x14 ] ebx
pop edi
cmp edi ebx
jne r-xdata
xor edi edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
sub_47d068
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax + 0x4 ]
cmp esi 0x200
je r-xdata
mov edx [ eax + 0x14 ]
mov edi [ eax + 0x18 ]
cmp [ ecx + 0x5c ] edx
jne r-xdata
cmp esi 0xa0
je r-xdata
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x18 ]
mov [ ecx + 0x5c ] edx
mov [ ecx + 0x60 ] esi
mov eax [ eax + 0x4 ]
mov [ ecx + 0x64 ] eax
cmp [ ecx + 0x60 ] edi
jne r-xdata
cmp esi 0xf
je r-xdata
cmp esi [ ecx + 0x64 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp esi 0x118
jne r-xdata
pop edi
pop esi
retn 0x4
push 0x1
pop eax
sub_47d0c5
push ebx
push ebp
xor ebp ebp
push esi
cmp [ esp + 0x10 ] ebp
push edi
jg r-xdata
call sub_4904f9
add eax 0x1070
push sub_490144
mov ecx eax
call sub_492f51
cmp [ eax + 0x10 ] ebp
jne r-xdata
mov edi [ ecx + 0x1c ]
mov ebx 0x363
cmp edi ebp
je r-xdata
xor eax eax
cmp [ esp + 0x14 ] ebp
pop edi
pop esi
pop ebp
pop ebx
setl al
retn 0x4
call sub_47e5b1
push 0x1
call sub_47e5ba
call sub_4904f9
add eax 0x1070
push sub_490144
mov ecx eax
call sub_492f51
mov esi [ eax + 0x8 ]
mov eax [ edi + 0x1c ]
cmp eax ebp
je r-xdata
cmp [ esi + 0x1c ] ebp
je r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x54 ]
jmp r-xdata
cmp esi edi
je r-xdata
push ebp
push 0x1
pop esi
push esi
push ebx
push [ edi + 0x1c ]
push edi
call sub_478b79
push esi
push esi
push ebp
push esi
push ebx
push [ edi + 0x1c ]
call sub_47a502
cmp esi ebp
je r-xdata
cmp [ esi + 0x88 ] ebp
jne r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push ebp
mov ecx esi
call sub_47bda6
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
push esi
call sub_478b79
push 0x1
push 0x1
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
call sub_47a502
cmp [ esi + 0x88 ] ebp
jl r-xdata
or [ esi + 0x88 ] 0xffffffff
push eax
mov ecx esi
call sub_47bda6
mov eax [ esi + 0x88 ]
cmp eax ebp
jle r-xdata
sub_47d1d0
push ecx
mov eax [ ecx ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ eax + 0x28 ]
mov esi eax
xor ebp ebp
cmp esi ebp
je r-xdata
xor eax eax
mov ebx [ esp + 0x18 ]
mov edi 0xc000
mov eax [ esi + 0x4 ]
push ebp
push ebp
push edi
push ebp
push ebp
push eax
push [ esi + 0x4 ]
call sub_479bc2
cmp eax ebp
jne r-xdata
mov esi [ esi ]
cmp esi ebp
jne r-xdata
mov ecx [ eax + 0x10 ]
mov ecx [ ecx ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
push [ ebx + 0xc ]
mov ecx [ esp + 0x14 ]
push [ ebx + 0x8 ]
call [ eax + 0x14 ]
push 0x1
pop eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
push ebp
push ebp
push edi
add eax 0x18
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
push eax
call sub_479bc2
cmp eax ebp
je r-xdata
sub_47d24b
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
call sub_402850
mov esi eax
test esi esi
je r-xdata
push edi
call sub_47d1d0
test eax eax
jne r-xdata
push edi
push eax
call sub_47aac5
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x4
xor eax eax
push [ edi ]
call sub_478d3a
mov ecx eax
call sub_47a36b
cmp eax esi
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x90 ]
jmp r-xdata
sub_47d2a8
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
retn 0x8
sub_47d2cd
push esi
call sub_4904f9
cmp [ eax + 0x14 ] 0x0
mov esi [ esp + 0x8 ]
jne r-xdata
push sub_48fcb1
mov ecx rw-data
call sub_492f51
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
push [ eax + 0x30 ]
call [ CallNextHookEx@IAT ]
test esi esi
jge r-xdata
call sub_47ccf5
test eax eax
je r-xdata
cmp esi 0x8001
jne r-xdata
push [ esp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push esi
call [ edx + 0x70 ]
jmp r-xdata
pop esi
retn 0xc
sub_47d325
mov eax [ esp + 0x4 ]
push esi
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
cmp [ eax + 0x8 ] 0x70
jne r-xdata
mov eax [ eax + 0xc ]
shr eax 0x10
test ah 0x40
jne r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_47d370
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax ebx
je r-xdata
call sub_402850
cmp [ rw-data ] 0x333
mov edi eax
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
push [ esi ]
call sub_478d3a
cmp eax ebx
je r-xdata
sub eax 0x7fff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] ebx
je r-xdata
push esi
call sub_47d325
test eax eax
je r-xdata
mov ecx eax
call sub_47a448
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
push ebx
push 0xe146
push 0x111
push [ edi + 0x1c ]
jmp r-xdata
mov ecx edi
call sub_47ba94
test eax eax
je r-xdata
cmp eax 0x108
ja r-xdata
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ edi + 0x50 ] ebx
je r-xdata
push sub_48fcb1
mov ecx rw-data
call sub_492f51
mov ebx eax
cmp [ ebx + 0xbc ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_402850
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
push 0x7
lea edi [ ebp - 0x20 ]
pop ecx
mov [ ebx + 0xbc ] 0x1
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + 0x20 ]
call sub_47bdcd
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ esi + 0x4 ]
cmp ecx 0x100
jne r-xdata
and [ ebx + 0xbc ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
test eax eax
je r-xdata
cmp ecx 0x202
jne r-xdata
cmp [ esi + 0x8 ] 0xd
je r-xdata
and [ ebx + 0xbc ] 0x0
push ebx
push 0xe146
push 0x111
push [ eax + 0x1c ]
sub_47d4d5
push esi
mov esi ecx
xor eax eax
push edi
push eax
lea edi [ esi + 0x30 ]
push eax
push eax
push edi
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x34 ] 0x36a
je r-xdata
push 0x1
pop eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x58 ]
test eax eax
jne r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageA@IAT ]
sub_47d56a
mov eax sub_49abef
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ esi + 0x8 ] 0x0
je r-xdata
call sub_47d842
sub_47d5b2
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx ecx
push 0x10
call sub_47c3b5
test eax eax
pop ecx
je r-xdata
xor edi edi
push 0xffffffff
mov ecx eax
call sub_47d54b
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop ebx
leave
retn
test edi edi
je r-xdata
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
push eax
call esi
push eax
push [ ebx + 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
pop esi
jne r-xdata
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_47e035
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_47d627
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0xc ]
and [ esi + 0x8 ] 0x0
or [ esi + 0x4 ] 0xffffffff
lea ebx [ esi + 0xc ]
and edi 0xffff7fff
mov ecx ebx
call sub_47c5ff
push [ ebp + 0x8 ]
lea eax [ ebp - 0x110 ]
push eax
call sub_47dcaf
lea eax [ ebp - 0x110 ]
mov ecx ebx
push eax
call sub_47c7b1
mov eax edi
xor ecx ecx
and eax 0x3
sub eax ecx
je r-xdata
mov ecx 0x80000000
dec eax
je r-xdata
xor eax eax
cmp eax 0x10
je r-xdata
mov ecx 0x40000000
jmp r-xdata
dec eax
jne r-xdata
push 0x3
pop edi
and edi 0x2000
neg edi
sbb edi edi
and edi 0x2
inc edi
inc edi
jmp r-xdata
cmp eax 0x20
je r-xdata
mov eax edi
push 0x1
and eax 0x70
pop ebx
je r-xdata
mov ecx 0xc0000000
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov eax ebx
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
push 0x0
push 0x80
lea edx [ ebp - 0xc ]
push edi
push edx
push eax
push ecx
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x30
je r-xdata
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
mov [ esi + 0xc ] eax
call sub_47e161
push [ ebp + 0x8 ]
lea ecx [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
call sub_47c7b1
and [ ebp - 0x8 ] 0x0
mov edx edi
not edx
shr edx 0x7
and edx ebx
mov [ ebp - 0xc ] 0xc
test edi 0x1000
mov [ ebp - 0x4 ] edx
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
pop eax
jmp r-xdata
push 0x3
sub_47d744
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebp + 0xc ]
push 0x0
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLastError@IAT ]
push eax
call sub_47e035
pop ebp
retn 0x8
sub_47d77e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_47e035
push [ esi + 0xc ]
push 0xffffffff
push 0xd
call sub_47e0f6
sub_47d7c9
push esi
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn 0x8
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_47e035
sub_47d7f8
push esi
push 0x1
push 0x0
push 0x0
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_47e035
sub_47d842
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
lea ecx [ esi + 0xc ]
call sub_47c5ff
test edi edi
pop edi
pop esi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edi eax
neg edi
sbb edi edi
inc edi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_47e035
sub_47d8a3
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ LockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_47e035
sub_47d8cc
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ UnlockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_47e035
sub_47d8f5
push esi
mov esi ecx
push 0x0
mov eax [ esi ]
push [ esp + 0xc ]
call [ eax + 0x28 ]
push [ esi + 0x4 ]
call [ SetEndOfFile@IAT ]
test eax eax
pop esi
jne r-xdata
retn 0x4
push eax
call [ GetLastError@IAT ]
push eax
call sub_47e035
sub_47d921
push ebx
push esi
mov esi ecx
push edi
push 0x1
push 0x0
mov eax [ esi ]
call [ eax + 0x28 ]
mov edi eax
mov eax [ esi ]
push 0x2
push 0x0
mov ecx esi
call [ eax + 0x28 ]
mov ebx eax
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x28 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
sub_47d993
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push r--data
push [ ebp + 0x8 ]
call sub_47d9d5
test eax eax
jl r-xdata
leave
retn 0x10
mov eax [ ebp - 0x4 ]
push esi
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
pop esi
sub_47d9d5
mov eax sub_49ac0c
call sub_469294
push ecx
push esi
mov esi [ ebp + 0x10 ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
and [ esi ] 0x0
push eax
call sub_47da72
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x10 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
push eax
push [ ebp - 0x10 ]
call sub_47dae1
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
call [ LoadLibraryA@IAT ]
test eax eax
je r-xdata
mov esi 0x80040154
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov esi 0x800401f9
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov esi eax
jmp r-xdata
sub_47da72
push ebp
mov ebp esp
sub esp 0x104
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
movzx ecx [ eax + 0xf ]
push ecx
movzx ecx [ eax + 0xe ]
push ecx
movzx ecx [ eax + 0xd ]
push ecx
movzx ecx [ eax + 0xc ]
push ecx
movzx ecx [ eax + 0xb ]
push ecx
movzx ecx [ eax + 0xa ]
push ecx
movzx ecx [ eax + 0x9 ]
push ecx
movzx ecx [ eax + 0x8 ]
push ecx
movzx ecx [ eax + 0x6 ]
push ecx
movzx ecx [ eax + 0x4 ]
push ecx
push [ eax ]
lea eax [ ebp - 0x104 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ecx [ ebp + 0x8 ]
add esp 0x34
lea eax [ ebp - 0x104 ]
push eax
call sub_47c6e2
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_47dae1
push ebp
mov ebp esp
sub esp 0x10
push ebx
lea eax [ ebp - 0x8 ]
push esi
mov esi [ RegOpenKeyA@IAT ]
push eax
xor ebx ebx
push r--data
push 0x80000000
mov [ ebp - 0x8 ] ebx
call esi
test eax eax
jne r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x4 ]
push edi
push eax
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call esi
mov edi [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call edi
pop edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
push r--data
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call edi
mov ecx [ ebp + 0xc ]
mov esi 0x104
push esi
call sub_47ca58
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push r--data
push [ ebp + 0x8 ]
call [ RegQueryValueExA@IAT ]
mov ecx [ ebp + 0xc ]
push 0xffffffff
mov esi eax
call sub_47caa7
push [ ebp + 0x8 ]
xor eax eax
cmp esi ebx
sete al
mov ebx eax
call edi
sub_47db8d
push ebp
mov ebp esp
sub esp 0x16c
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ eax ] bl
push 0x800
lea eax [ ebp - 0x16c ]
push 0x160
push eax
push ebx
push [ ebp + 0xc ]
call [ SHGetFileInfoA@IAT ]
test eax eax
je r-xdata
xor eax eax
test [ ebp - 0x162 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
lea ecx [ ebp - 0xc ]
push eax
push r--data
push ebx
push r--data
call sub_47d993
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
jmp r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
lea esp [ ebp - 0x178 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_469f00
mov edi esp
push esi
push edi
push 0xffffffff
push [ ebp + 0xc ]
mov [ edi ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
push ebx
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push ebx
push ebx
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0x10 ]
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x1
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0x2
push eax
push ecx
mov edx [ ecx ]
call [ edx + 0x4c ]
test eax eax
jl r-xdata
sub_47dcaf
mov eax sub_49ac20
call sub_469294
sub esp 0x14c
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
mov esi 0x104
push edi
push esi
push [ ebp + 0xc ]
call [ GetFullPathNameA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
xor esi esi
push eax
push edi
mov [ ebp - 0x4 ] esi
call sub_47dd7f
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0xc ]
push edi
call [ lstrcpynA@IAT ]
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_47c674
mov eax esi
test [ ebp - 0x10 ] 0x2
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test [ ebp - 0x10 ] 0x4
jne r-xdata
push edi
call [ CharUpperA@IAT ]
push 0x1
pop esi
lea eax [ ebp - 0x158 ]
push eax
push [ ebp + 0xc ]
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x12c ]
push eax
push [ ebp - 0x14 ]
call [ lstrcpyA@IAT ]
sub_47dd7f
mov ecx [ esp + 0x8 ]
push ebx
push esi
mov esi 0x104
push edi
push esi
call sub_47ca58
xor ebx ebx
mov edi eax
push esi
push ebx
push edi
call sub_467a10
add esp 0xc
push esi
push [ esp + 0x14 ]
push edi
call [ lstrcpynA@IAT ]
mov cl [ edi ]
mov eax edi
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
mov cl [ edi ]
mov eax edi
inc eax
inc eax
mov cl [ eax + 0x1 ]
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
jne r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
je r-xdata
push eax
call sub_469916
pop ecx
mov cl [ eax ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0xffffffff
call sub_47caa7
pop edi
pop esi
pop ebx
retn 0x8
mov [ eax + 0x1 ] bl
cmp cl 0x2f
je r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
push eax
call sub_469916
pop ecx
cmp cl 0x2f
je r-xdata
cmp cl bl
je r-xdata
push eax
call sub_469916
pop ecx
mov cl [ eax ]
jmp r-xdata
cmp cl 0x5c
je r-xdata
push eax
call sub_469916
pop ecx
jmp r-xdata
cmp cl bl
je r-xdata
cmp cl 0x2f
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_47de45
push ebp
mov ebp esp
sub esp 0x618
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x1
pop eax
mov esi [ lstrlenA@IAT ]
push edi
call esi
push [ ebp + 0xc ]
mov ebx eax
call esi
cmp ebx eax
jne r-xdata
call [ GetThreadLocale@IAT ]
mov esi [ GetStringTypeExA@IAT ]
mov ebx eax
lea eax [ ebp - 0x208 ]
push eax
push 0xffffffff
push edi
push 0x1
push ebx
call esi
lea eax [ ebp - 0x410 ]
push eax
push 0xffffffff
push edi
push 0x4
push ebx
call esi
lea eax [ ebp - 0x618 ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
push 0x1
push ebx
call esi
cmp [ edi ] 0x0
mov eax edi
je r-xdata
xor esi esi
inc esi
push eax
inc esi
call sub_469916
cmp [ eax ] 0x0
pop ecx
jne r-xdata
mov cx [ ebp + esi - 0x208 ]
cmp cx [ ebp + esi - 0x618 ]
jne r-xdata
test [ ebp + esi - 0x410 ] 0x80
je r-xdata
sub_47df08
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
mov esi edi
jne r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call GetFileTitleA
test ax ax
je r-xdata
lea esi [ ebp - 0x104 ]
mov [ ebp + 0x10 ] 0x104
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_493587
jmp r-xdata
xor eax eax
push esi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_47df5e
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x104
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameA@IAT ]
mov ecx [ ebp + 0xc ]
push esi
push esi
call sub_47ca58
push eax
lea eax [ ebp - 0x104 ]
push eax
call [ GetShortPathNameA@IAT ]
test eax eax
pop esi
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0xffffffff
call sub_47caa7
leave
retn 0x8
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_47c7b1
sub_47dfe0
push ebp
mov ebp esp
sub esp 0x204
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x204 ]
push 0x200
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_4840c3
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4840fb
mov [ ebp + 0xc ] 0xf020
leave
retn 0x8
sub_47e056
mov eax sub_49ac3c
call sub_469294
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1a0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_47c3e9
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_488acb
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_47e84a
sub_47e0f6
mov eax sub_49ac64
call sub_469294
push ecx
push ecx
push esi
push 0x14
call sub_47c3b5
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_47dfb8
mov eax [ rw-data ]
lea ecx [ esi + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0xc ] eax
call sub_47c7b1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_4692b3
pop esi
sub_47e161
mov eax [ esp + 0x4 ]
mov ecx 0x10b
cmp eax ecx
ja r-xdata
sub eax 0x3e3
je r-xdata
je r-xdata
push 0xa
dec eax
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x3e
ja r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x6b
ja r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
mov ecx 0x90
cmp eax ecx
ja r-xdata
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x19
ja r-xdata
push 0x5
jmp r-xdata
push 0x1
jmp r-xdata
mov ecx 0xb6
cmp eax ecx
ja r-xdata
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x47
ja r-xdata
cmp eax 0x27
ja r-xdata
je r-xdata
sub eax 0xb7
je r-xdata
je r-xdata
cmp eax 0x75
ja r-xdata
sub eax 0x50
je r-xdata
je r-xdata
add eax 0xffffffcc
cmp eax 0x8
ja r-xdata
je r-xdata
push 0x9
jmp r-xdata
cmp eax 0x18
ja r-xdata
sub eax 0x8
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x91
je r-xdata
sub eax 0x7b
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x40
je r-xdata
jmp [ eax * 4 + jump_table_47e3bb ]
push 0xd
jmp r-xdata
cmp eax 0x20
ja r-xdata
jmp [ eax * 4 + jump_table_47e357 ]
dec eax
dec eax
je r-xdata
push 0x7
jmp r-xdata
sub eax 0x9
je r-xdata
dec eax
je r-xdata
sub eax 0x6c
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
sub eax 0x21
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0xd
je r-xdata
sub eax 0x7
je r-xdata
dec eax
je r-xdata
push 0xc
jmp r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
push 0xb
jmp r-xdata
sub eax 0x1a
je r-xdata
retn 0x4
dec eax
dec eax
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0x6
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
dec eax
je r-xdata
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
jmp r-xdata
push 0xe
jmp r-xdata
sub_47e3df
mov eax sub_49acc2
call sub_469294
push esi
call sub_49051f
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_48314e
call sub_47c3a3
push 0x48
mov ebx eax
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_47e6b4
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_47c3a3
pop ebx
sub_47e484
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_47e3df
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_477b1a
push 0x1
mov [ eax ] esi
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_47e4b1
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_47e3df
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_477b6a
sub_47e52c
mov eax sub_49ae24
call sub_469294
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
cmp [ ecx + 0xc ] eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub_47e5ba
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_49051f
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
cmp eax esi
je r-xdata
xor eax eax
pop edi
cmp [ ebx + 0x10 ] eax
pop esi
pop ebx
setne al
pop ebp
retn 0x4
dec eax
cmp eax esi
mov [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
call sub_4904f9
mov edi [ eax + 0x4 ]
push sub_48fcb1
mov ecx rw-data
call sub_492f51
test edi edi
mov esi eax
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
call sub_47e7d8
mov ecx [ ebx + 0x1c ]
call sub_47e7d8
mov ecx [ ebx + 0x18 ]
call sub_47e7d8
mov ecx [ ebx + 0x14 ]
call sub_47e7d8
mov ecx [ ebx + 0x24 ]
call sub_47e7d8
call sub_47ccf5
cmp eax esi
je r-xdata
cmp [ edi + 0xb8 ] 0x0
je r-xdata
push eax
call sub_469f2f
cmp eax [ edi + 0xb8 ]
pop ecx
jae r-xdata
mov eax [ eax + 0x54 ]
cmp eax esi
je r-xdata
mov eax [ esi + 0xc ]
and [ ebp + 0x8 ] 0x0
test eax eax
je r-xdata
push esi
push esi
call eax
push [ edi + 0xb8 ]
call sub_469520
test eax eax
pop ecx
mov [ esi + 0xc ] eax
jne r-xdata
push eax
call sub_469f2f
push [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_46965a
pop ecx
pop ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_469520
pop ecx
mov [ esi + 0xc ] eax
sub_47e6b4
mov eax sub_49ae46
call sub_469294
push ecx
push esi
mov esi ecx
push edi
push 0xa
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_4779b8
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov ecx edi
call sub_4779b8
push 0x0
push 0x7
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_477c61
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_47e719
mov eax sub_49ae50
call sub_469294
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov esi ecx
jne r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_477ae7
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
lea ecx [ esi + 0x20 ]
push edi
call sub_477ae7
test eax eax
je r-xdata
push sub_48314e
call sub_47c3a3
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
call sub_47e52c
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x40 ]
mov [ ecx + eax ] edi
add ecx eax
cmp [ esi + 0x44 ] 0x2
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_477b1a
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_47c3a3
mov eax [ esi + 0x40 ]
mov [ eax + ebx ] edi
add eax ebx
cmp [ esi + 0x44 ] 0x2
jne r-xdata
call sub_475d4c
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_47e7d8
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_4779fb
push edi
lea edi [ esi + 0x20 ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
and [ eax + 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_477bac
mov eax [ esi + 0x40 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x44 ] 0x2
jne r-xdata
pop edi
sub_47e84a
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x100
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
call sub_47e8ce
mov edi eax
mov eax esi
sub eax edi
cmp eax 0x2
jbe r-xdata
push ebx
mov edi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_47c7b1
xor eax eax
test edi edi
setg al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add edi esi
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_47ca58
push eax
push [ ebp + 0x8 ]
call sub_47e8ce
mov ebx eax
mov eax edi
sub eax ebx
cmp eax 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffff
call sub_47caa7
xor eax eax
test ebx ebx
setg al
pop ebx
pop edi
pop esi
leave
retn 0x4
sub_47e8ce
push esi
call sub_4904f9
push [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push [ esp + 0x10 ]
push eax
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0xc
and [ esi ] al
sub_47e8f5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
movsx eax [ ebp + 0x14 ]
push eax
push esi
call sub_469760
pop ecx
test eax eax
pop ecx
jne r-xdata
movsx edi [ ebp + 0x14 ]
sub eax esi
push esi
call [ lstrlenA@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_47c5ff
inc esi
mov eax ebx
dec ebx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push esi
push eax
call sub_47cacf
push eax
call sub_467a70
add esp 0xc
push 0x1
pop eax
push edi
push esi
call sub_469760
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
sub_47e973
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx esi
call sub_47cfe9
pop esi
retn
call sub_48e97b
test eax eax
je r-xdata
push 0x0
call sub_49688f
sub_47e995
push esi
push edi
mov edi ecx
call sub_402850
mov esi eax
xor eax eax
push eax
push eax
push 0x36a
mov [ edi + 0x84 ] eax
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0x10 ]
call [ eax + 0x6c ]
pop edi
pop esi
retn 0x8
sub_47e9cc
mov edx [ esp + 0x8 ]
push esi
mov eax [ edx + 0x4 ]
mov esi eax
dec esi
je r-xdata
push edx
push [ esp + 0xc ]
call sub_47d2a8
sub esi 0xe
je r-xdata
push ebx
xor ebx ebx
push edi
cmp eax 0x111
mov edi 0xf108
jne r-xdata
mov esi [ esp + 0x10 ]
push r--data
mov ecx esi
call sub_47e4fa
test eax eax
je r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
push r--data
mov ecx esi
call sub_47e4fa
test eax eax
jne r-xdata
mov eax [ esi ]
push edi
push 0x1030
jmp r-xdata
push 0x1
pop ebx
inc edi
mov eax ebx
pop edi
pop ebx
jmp r-xdata
mov eax [ esi ]
push edi
push 0x10
mov ecx esi
call [ eax + 0x10 ]
pop esi
retn 0x8
sub_47ea43
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jg r-xdata
cmp edi 0x1
jne r-xdata
push edi
call sub_47d0c5
mov ecx [ esi + 0x80 ]
and [ ebp + 0x8 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
cmp edi 0x1
pop edi
pop esi
setl al
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_47d0c5
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ esi + 0x80 ]
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x14 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
sub_47eaad
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x98 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x94 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_483118
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x94 ]
call sub_483118
mov [ esi + 0x94 ] edi
sub_47eb5a
mov eax sub_49b377
call sub_469294
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_47ec8d
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_47ca58
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_493587
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47caa7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_47c3e9
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_47ebdc
mov eax sub_49b3a3
call sub_469294
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_47ec8d
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_47ca58
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_47df08
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47caa7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_47c3e9
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_47ec5e
push ebp
mov ebp esp
sub esp 0x11c
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x11c ]
push eax
call sub_47ec8d
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10a ]
push eax
call sub_47c6e2
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_47ec8d
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x118
push 0x0
mov edi ecx
push esi
call sub_467a10
add esp 0xc
lea eax [ esi + 0x12 ]
push 0x104
push [ edi + 0xc ]
push eax
call [ lstrcpynA@IAT ]
mov eax [ edi + 0x4 ]
or ebx 0xffffffff
cmp eax ebx
je r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ edi + 0x4 ]
call [ GetFileSize@IAT ]
cmp eax ebx
mov [ esi + 0xc ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ edi + 0xc ]
cmp [ edi - 0x8 ] 0x0
jne r-xdata
push edi
call [ GetFileAttributesA@IAT ]
cmp eax ebx
je r-xdata
and [ esi + 0x10 ] 0x0
jmp r-xdata
mov [ esi + 0x10 ] al
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_47652c
mov eax [ eax ]
push ebx
mov [ esi ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_47652c
mov eax [ eax ]
push ebx
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_47652c
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_47ed67
push ebp
mov ebp esp
sub esp 0x140
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
lea edi [ esi + 0x12 ]
push edi
call sub_47dcaf
test eax eax
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call [ FindFirstFileA@IAT ]
or edi 0xffffffff
cmp eax edi
jne r-xdata
and [ edi ] al
jmp r-xdata
push eax
call [ FindClose@IAT ]
mov al [ ebp - 0x140 ]
push edi
and al 0x7f
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] al
mov eax [ ebp - 0x120 ]
mov [ esi + 0xc ] eax
lea eax [ ebp - 0x13c ]
push eax
call sub_47652c
mov eax [ eax ]
push edi
mov [ esi ] eax
lea eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_47652c
mov eax [ eax ]
push edi
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_47652c
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
pop edi
pop esi
leave
retn 0x8
push 0x1
pop eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_47ee19
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
mov ecx edi
call sub_476578
mov eax [ eax + 0x14 ]
push esi
add eax 0x76c
mov ecx edi
mov [ ebp - 0x18 ] ax
call sub_476578
mov eax [ eax + 0x10 ]
push esi
inc eax
mov ecx edi
mov [ ebp - 0x16 ] ax
call sub_476578
mov ax [ eax + 0xc ]
push esi
mov ecx edi
mov [ ebp - 0x12 ] ax
call sub_476578
mov ax [ eax + 0x8 ]
push esi
mov ecx edi
mov [ ebp - 0x10 ] ax
call sub_476578
mov ax [ eax + 0x4 ]
push esi
mov ecx edi
mov [ ebp - 0xe ] ax
call sub_476578
mov ax [ eax ]
mov [ ebp - 0xa ] si
mov [ ebp - 0xc ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov edi [ GetLastError@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
test eax eax
jne r-xdata
push esi
call edi
push eax
call sub_47e035
pop edi
pop esi
leave
retn
push esi
call edi
push eax
call sub_47e035
sub_47eecc
push ebp
mov ebp esp
sub esp 0x24
push ebx
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
call [ GetFileAttributesA@IAT ]
mov ebx [ GetLastError@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
movzx eax [ esi + 0x10 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
push edi
call ebx
push eax
call sub_47e035
cmp [ esi + 0x4 ] edi
lea eax [ esi + 0x4 ]
je r-xdata
test [ ebp - 0x4 ] 0x1
je r-xdata
movzx eax [ esi + 0x10 ]
cmp eax [ ebp - 0x4 ]
pop esi
je r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call sub_47ee19
cmp [ esi + 0x8 ] edi
lea eax [ esi + 0x8 ]
pop ecx
pop ecx
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
test eax eax
jne r-xdata
pop edi
pop ebx
leave
retn 0x8
test [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ esi ] edi
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call sub_47ee19
pop ecx
lea eax [ ebp - 0x14 ]
pop ecx
mov [ ebp - 0x8 ] eax
push edi
call ebx
push eax
call sub_47e035
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
test eax eax
jne r-xdata
push edi
push 0x80
push 0x3
push edi
push 0x1
push 0xc0000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
call sub_47ee19
pop ecx
lea eax [ ebp - 0x1c ]
pop ecx
mov [ ebp - 0xc ] eax
push edi
call ebx
push eax
call sub_47e035
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push edi
call [ SetFileTime@IAT ]
test eax eax
jne r-xdata
push 0x0
call ebx
push eax
call sub_47e035
push edi
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
push eax
call ebx
push eax
call sub_47e035
xor edi edi
push eax
call ebx
push eax
call sub_47e035
sub_47eff9
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call [ lstrlenA@IAT ]
push 0x0
push 0x0
push edi
mov ebx eax
call sub_493587
dec eax
mov esi ebx
sub esi eax
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
lea ecx [ esi + edi ]
mov [ ebp - 0x4 ] ecx
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp [ ebp + 0xc ] eax
jge r-xdata
cmp [ edi ] 0x5c
lea ebx [ edi + 0x2 ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp esi 0x3
jle r-xdata
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
push ecx
jmp r-xdata
mov ecx rw-data
mov eax [ ebp + 0x8 ]
mov esi ebx
sub esi edi
lea eax [ esi + eax + 0x5 ]
cmp [ ebp + 0xc ] eax
jge r-xdata
push ebx
call sub_469916
mov ebx eax
pop ecx
cmp [ ebx ] 0x5c
jne r-xdata
cmp [ ebx ] 0x5c
je r-xdata
push edi
call [ lstrcpyA@IAT ]
jmp r-xdata
push ebx
call [ lstrlenA@IAT ]
lea eax [ eax + esi + 0x4 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
push [ ebp - 0x4 ]
push ebx
call sub_469916
pop ecx
mov ebx eax
jmp r-xdata
and [ esi + edi ] 0x0
mov esi [ lstrcatA@IAT ]
push r--data
push edi
call esi
push ebx
push edi
call esi
push ebx
call sub_469916
mov ebx eax
pop ecx
cmp [ ebx ] 0x5c
jne r-xdata
jmp r-xdata
sub_47f0ca
mov eax sub_49b887
call sub_469294
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
lea ebx [ esi + 0xc ]
mov [ ebx ] eax
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x10 ] eax
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_47c3b5
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
mov [ ebp - 0x4 ] 0x3
je r-xdata
xor eax eax
push sub_47c674
mov [ eax ] edi
push sub_401690
add eax 0x4
push edi
push 0x4
push eax
mov [ ebp + 0x14 ] eax
call sub_467f48
mov eax [ ebp + 0x14 ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] eax
call sub_47c7b1
push [ ebp + 0x10 ]
lea ecx [ esi + 0x10 ]
call sub_47c7b1
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x18 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
sub_47f19e
mov eax sub_49b8b5
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
test ecx ecx
je r-xdata
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0xc ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x3
call sub_43de60
sub_47f1fb
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
mov esi ecx
push eax
call sub_47dcaf
mov eax [ esi + 0x4 ]
xor edi edi
dec eax
test eax eax
jle r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_47c7b1
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x104 ]
push ecx
mov eax [ eax + edi * 4 ]
push eax
call sub_47de45
test eax eax
jne r-xdata
test edi edi
jle r-xdata
mov eax [ esi + 0x4 ]
inc edi
dec eax
cmp edi eax
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
lea eax [ ecx - 0x4 ]
push eax
call sub_47c761
dec edi
jmp r-xdata
sub_47f26c
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
call sub_47c5ff
lea ecx [ eax + edi * 4 ]
call sub_47c5ff
pop edi
pop esi
retn 0x4
lea ecx [ eax + edi * 4 + 0x4 ]
push ecx
lea ecx [ eax + edi * 4 ]
call sub_47c761
inc edi
jmp r-xdata
mov eax [ esi + 0x4 ]
dec eax
cmp edi eax
mov eax [ esi + 0x8 ]
jge r-xdata
sub_47f2a7
push ebp
mov ebp esp
sub esp 0x108
mov eax [ ebp + 0xc ]
push esi
mov esi eax
mov eax [ ecx + 0x8 ]
shl esi 0x2
mov [ ebp - 0x4 ] ecx
mov eax [ eax + esi ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx 0x104
push edi
push ebx
call sub_47ca58
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
push [ eax + esi ]
push edi
call [ lstrcpyA@IAT ]
push 0x0
push 0x0
push edi
call sub_493587
push 0x1
pop esi
push edi
sub esi eax
call [ lstrlenA@IAT ]
add esi eax
mov eax [ ebp + 0x14 ]
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
mov cl [ esi + edi ]
and [ eax + edi ] 0x0
push edi
add eax edi
push [ ebp + 0x10 ]
mov [ ebp + 0xf ] cl
mov [ ebp + 0x14 ] eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov al [ ebp + 0xf ]
mov [ esi + edi ] al
je r-xdata
pop esi
leave
retn 0x14
mov ecx [ ebp + 0x8 ]
push 0xffffffff
call sub_47caa7
push 0x1
pop eax
pop edi
pop ebx
lea ecx [ ebp - 0x108 ]
lea eax [ esi + edi ]
push ebx
push ecx
push eax
mov [ ebp + 0xc ] eax
call sub_47df08
sub ebx esi
lea eax [ ebp - 0x108 ]
push ebx
push eax
push [ ebp + 0xc ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0x18 ]
push edi
call sub_47eff9
lea eax [ ebp - 0x108 ]
push ebx
push eax
push [ ebp + 0x14 ]
call sub_47df08
lea eax [ ebp - 0x108 ]
push ebx
push eax
push edi
call [ lstrcpynA@IAT ]
jmp r-xdata
sub_47f3ad
mov eax sub_49b8d8
call sub_469294
sub esp 0x124
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ edi + 0x1c ]
mov eax [ esi + 0xc ]
lea ebx [ edi + 0x1c ]
mov [ ebp - 0x18 ] eax
cmp [ ecx - 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
xor eax eax
cmp [ ecx - 0x8 ] eax
jne r-xdata
test eax eax
je r-xdata
cmp [ esi + 0xc ] eax
je r-xdata
mov ebx [ ebx ]
cmp [ ebx - 0x8 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
push 0x0
mov [ ebp + 0x8 ] eax
mov eax 0x100
push eax
push eax
mov ecx ebx
call sub_47ca58
push eax
mov eax [ ebp - 0x18 ]
push [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetMenuStringA@IAT ]
push 0xffffffff
mov ecx ebx
call sub_47caa7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
xor ebx ebx
cmp [ edi + 0x4 ] eax
jle r-xdata
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax ]
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc ]
lea eax [ ebp - 0x130 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x130 ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ rw-data ]
mov [ ebp + eax - 0x130 ] 0x5c
and [ ebp + eax - 0x12f ] 0x0
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
xor ebx ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
add eax ebx
push 0x0
push eax
push [ ecx + 0x4 ]
call [ DeleteMenu@IAT ]
inc ebx
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax [ esi + 0xc ]
dec [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ GetMenuItemCount@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x18 ] 0x1
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
jmp r-xdata
push 0x1
push eax
lea eax [ ebp - 0x130 ]
mov ecx edi
push eax
lea eax [ ebp - 0x14 ]
push ebx
push eax
call sub_47f2a7
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ eax - 0x8 ]
add eax eax
push eax
call sub_47ca58
mov ecx [ ebp + 0x8 ]
and [ eax ] 0x0
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47caa7
mov eax [ edi + 0x14 ]
push 0xa
xor edx edx
pop ecx
lea eax [ eax + ebx + 0x1 ]
div ecx
lea eax [ ebp - 0x2c ]
push edx
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x20 ]
push eax
call sub_47c6e2
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_47c857
mov eax [ eax ]
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + 0x1 ]
push eax
mov eax [ esi + 0xc ]
push 0x400
push ecx
mov [ esi + 0x4 ] edx
push [ eax + 0x4 ]
call [ InsertMenuA@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_47c674
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
inc ebx
cmp ebx [ edi + 0x4 ]
jl r-xdata
cmp dl 0x26
jne r-xdata
mov eax [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp + 0xb ] dl
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
mov [ eax ] dl
inc eax
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
jmp r-xdata
mov dl [ ebp + 0xb ]
mov [ eax ] dl
inc eax
inc ecx
mov dl [ ecx ]
test dl dl
je r-xdata
sub_47f5ee
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
mov eax [ eax - 0x8 ]
add eax 0x5
push eax
call sub_47c3b5
pop ecx
mov [ ebp - 0x4 ] eax
call sub_4904f9
mov eax [ eax + 0x4 ]
xor edi edi
push edi
push edi
push [ esi + 0xc ]
mov ecx eax
mov [ ebp - 0x8 ] eax
call sub_48780f
cmp [ esi + 0x4 ] edi
jle r-xdata
push [ ebp - 0x4 ]
call sub_47c3de
pop ecx
pop edi
pop esi
leave
retn
push ebx
mov edi ebx
cmp edi [ esi + 0x4 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
push edi
push [ ebp - 0x4 ]
push [ esi + 0xc ]
call sub_48780f
lea ebx [ edi + 0x1 ]
push ebx
push [ esi + 0x10 ]
push [ ebp - 0x4 ]
call [ wsprintfA@IAT ]
mov eax [ esi + 0x8 ]
add esp 0xc
mov edi [ eax + edi * 4 ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
pop ebx
sub_47f66c
mov eax sub_49b8ec
call sub_469294
sub esp 0xc
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
mov eax [ eax - 0x8 ]
add eax 0x5
push eax
call sub_47c3b5
pop ecx
mov [ ebp - 0x10 ] eax
call sub_4904f9
mov eax [ eax + 0x4 ]
xor edi edi
cmp [ esi + 0x4 ] edi
mov [ ebp - 0x14 ] eax
jle r-xdata
push [ ebp - 0x10 ]
call sub_47c3de
pop ecx
pop edi
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push ebx
mov eax [ esi + 0x10 ]
lea ebx [ edi + 0x1 ]
push ebx
push eax
push [ ebp - 0x10 ]
call [ wsprintfA@IAT ]
mov eax [ esi + 0xc ]
add esp 0xc
mov ecx [ ebp - 0x14 ]
push rw-data
push [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4919bb
and [ ebp - 0x4 ] 0x0
push eax
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
call sub_47c761
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov edi ebx
cmp edi [ esi + 0x4 ]
jl r-xdata
pop ebx
sub_47f70a
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
cmp edi eax
mov esi ecx
jne r-xdata
push edi
call sub_47f803
pop ecx
push eax
push edi
mov ecx esi
call sub_47f739
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
sub_47f739
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
add eax 0x40
push eax
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
mov [ esi ] eax
je r-xdata
pop esi
retn 0x8
push edi
push eax
call [ GlobalLock@IAT ]
push [ esi + 0x4 ]
mov edi eax
push [ esp + 0x10 ]
push edi
call sub_467a70
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
jne r-xdata
mov eax [ edi ]
mov eax [ edi + 0xc ]
jmp r-xdata
push [ esi ]
not eax
shr eax 0x6
and eax 0x1
mov [ esi + 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x1
pop eax
pop edi
sub_47f7ad
mov eax [ esp + 0x4 ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
add eax 0x12
add eax 0x1a
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax edx
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
retn
sub_47f803
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
cmp [ ebx + 0x2 ] 0xffff
push ebx
sete al
mov esi eax
call sub_47f7ad
cmp [ ebx + 0x2 ] 0xffff
pop ecx
jne r-xdata
mov ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
mov ecx esi
push edi
neg ecx
sbb ecx ecx
and ecx 0x2
inc ecx
lea edi [ eax + ecx * 2 ]
push edi
call sub_469743
pop ecx
lea eax [ edi + eax * 2 + 0x2 ]
pop edi
test cl 0x40
je r-xdata
mov cx [ ebx + 0x8 ]
mov cx [ ebx + 0x10 ]
jmp r-xdata
sub eax ebx
pop esi
pop ebx
retn
neg esi
sbb esi esi
and esi 0x6
add esi 0x12
movzx edx cx
test cx cx
jbe r-xdata
add eax 0x2
add eax 0x4
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x2
add eax 0x4
jmp r-xdata
test cx cx
je r-xdata
movzx ecx [ eax ]
dec edx
lea eax [ eax + ecx + 0x2 ]
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x3
and al 0xfc
add eax esi
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
test cx cx
je r-xdata
sub_47f8bb
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x2 ] 0xffff
jne r-xdata
mov eax [ esi ]
mov eax [ esi + 0xc ]
jmp r-xdata
push esi
call sub_47f7ad
mov edx [ esp + 0x14 ]
pop ecx
mov cx [ eax ]
push 0x0
mov [ edx ] cx
xor ecx ecx
cmp [ esi + 0x2 ] 0xffff
push 0x0
push 0x20
push 0x20
setne cl
dec ecx
and ecx 0x2
inc ecx
lea esi [ eax + ecx * 2 ]
mov ecx [ esp + 0x1c ]
call sub_47cacf
push eax
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_47caa7
push 0x1
pop eax
pop esi
retn
xor eax eax
pop esi
retn
test al 0x40
jne r-xdata
sub_47f92a
push ebp
mov ebp esp
sub esp 0x50
push edi
xor edi edi
cmp [ ecx + 0x4 ] edi
mov [ ebp - 0x8 ] ecx
jne r-xdata
push ebx
push esi
push [ ecx ]
call [ GlobalLock@IAT ]
mov ebx eax
xor ecx ecx
mov ax [ ebx + 0x2 ]
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ ebx + 0xc ]
jmp r-xdata
pop edi
leave
retn 0x8
or [ ebx ] 0x40
or [ ebx + 0xc ] 0x40
jmp r-xdata
mov esi [ ebp - 0x4 ]
and eax 0x40
neg esi
sbb esi esi
mov [ ebp - 0xc ] eax
and esi 0x2
inc esi
shl esi 0x1
cmp [ ebp - 0x4 ] edi
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edi + 0x3 ]
and al 0xfc
lea edi [ edi + edx + 0x3 ]
mov [ ebp - 0xc ] eax
and edi 0xfffffffc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ edi + esi ]
push eax
call sub_469743
pop ecx
lea ecx [ esi + eax * 2 + 0x2 ]
lea eax [ ebp - 0x50 ]
push 0x20
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ esi + eax * 2 ]
push ebx
mov [ ebp + 0x8 ] eax
call sub_47f7ad
pop ecx
mov edi eax
xor ecx ecx
mov [ ebp - 0x10 ] edi
cmp [ ebp - 0xc ] ecx
je r-xdata
mov dx [ ebx + 0x8 ]
mov dx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp + 0xc ]
sub eax esi
push eax
mov [ ecx ] dx
lea eax [ ebp - 0x50 ]
add ecx esi
push eax
push ecx
call sub_469930
mov esi [ ebp - 0x8 ]
sub edi [ ebp - 0xc ]
add esp 0xc
push [ esi ]
add [ esi + 0x4 ] edi
call [ GlobalUnlock@IAT ]
and [ esi + 0x8 ] 0x0
push 0x1
pop eax
pop esi
pop ebx
test dx dx
jbe r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
sub ebx eax
add ebx [ ecx + 0x4 ]
push ebx
push eax
push edi
call sub_469930
add esp 0xc
sub_47fa44
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ GetStockObject@IAT ]
push edi
push 0xa
mov [ ebp - 0x4 ] ecx
pop ebx
mov edi r--data
push 0x11
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push 0xd
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
lea edi [ ebp - 0x24 ]
call [ GetDC@IAT ]
mov esi eax
mov eax [ ebp - 0x40 ]
test eax eax
jge r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edi
call sub_47f92a
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ ebp + 0x8 ] ebx
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push eax
push 0x48
push [ ebp - 0x40 ]
call [ MulDiv@IAT ]
push esi
push 0x0
mov ebx eax
call [ ReleaseDC@IAT ]
neg eax
mov [ ebp - 0x40 ] eax
sub_47fad5
push esi
push edi
mov edi [ GetSysColor@IAT ]
mov esi ecx
push 0xf
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
mov [ esi + 0x20 ] eax
pop edi
pop esi
retn
sub_47fb19
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
mov esi ecx
push 0xb
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
cmp [ esi + 0x68 ] 0x0
mov [ esi + 0xc ] eax
je r-xdata
call sub_4931f3
call sub_4931c3
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_47fb71
push ebx
push esi
push edi
or ebx 0xffffffff
call sub_47ccf5
mov esi eax
call sub_4904f9
push [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_493407
test eax eax
je r-xdata
call sub_496927
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x10
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ebx eax
sub_47fc17
mov eax sub_49a85e
call sub_469294
push esi
call sub_49051f
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x1c ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_48314e
call sub_47c3a3
push 0x48
mov ebx eax
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push r--data
call sub_47e6b4
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_47c3a3
pop ebx
sub_47fc9e
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_47fc17
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_477b1a
mov [ eax ] esi
mov eax [ esi ]
push [ esi + 0x4 ]
mov ecx esi
call [ eax + 0xc ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_47fcd5
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_47fc17
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_477b6a
sub_47fd1c
mov eax sub_49a870
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_47fcd5
push eax
call [ DeleteDC@IAT ]
sub_47fd70
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_47fda1
push esi
mov esi ecx
push edi
mov edi [ RestoreDC@IAT ]
mov ecx [ esi + 0x4 ]
push 0x1
cmp ecx [ esi + 0x8 ]
pop eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_47fdf6
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x10 ]
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_4806f9
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_47fe32
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_4806f9
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_47fe78
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_47fea7
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_47fed5
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetPolyFillMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_47ff03
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetROP2@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_47ff31
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetStretchBltMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_47ff5f
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_47ff8e
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_47ffbc
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_480008
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_480054
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4800a0
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4800f8
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_480144
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_480190
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4801f8
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectClipRgn@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_480238
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx [ ExcludeClipRect@IAT ]
push edi
mov edi ecx
xor eax eax
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push ecx
call ebx
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push edi
call ebx
sub_48027a
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx [ IntersectClipRect@IAT ]
push edi
mov edi ecx
xor eax eax
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push ecx
call ebx
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push edi
call ebx
sub_4802bc
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ MoveToEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_480308
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esi + 0x4 ]
call [ LineTo@IAT ]
pop esi
retn 0x8
cmp [ esi + 0x4 ] eax
je r-xdata
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call [ MoveToEx@IAT ]
sub_48033d
push ebx
push esi
mov esi ecx
or ebx 0xffffffff
push edi
mov edi [ SetTextAlign@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0x10 ]
push eax
call edi
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x4
push [ esp + 0x10 ]
push esi
call edi
mov ebx eax
sub_480372
push esi
mov esi ecx
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x78
or esi 0xffffffff
call [ SetLastError@IAT ]
push [ esi + 0x4 ]
call eax
mov esi eax
jmp r-xdata
mov eax esi
pop esi
retn
sub_4803a8
push esi
push edi
mov esi ecx
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
xor edi edi
call [ GetProcAddress@IAT ]
cmp eax edi
je r-xdata
cmp [ esp + 0xc ] edi
je r-xdata
push [ esp + 0xc ]
push [ esi + 0x4 ]
call eax
mov edi eax
jmp r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push 0x78
or edi 0xffffffff
call [ SetLastError@IAT ]
sub_4803ee
push ebx
push ebp
mov ebp [ ScreenToClient@IAT ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
push edi
push [ esi + 0x1c ]
call ebp
lea ebx [ edi + 0x8 ]
push ebx
push [ esi + 0x1c ]
call ebp
mov ecx esi
call sub_47bc00
test eax __dos_header
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ edi ]
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
sub_48042a
push ebx
push ebp
mov ebp [ ClientToScreen@IAT ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
push edi
push [ esi + 0x1c ]
call ebp
lea ebx [ edi + 0x8 ]
push ebx
push [ esi + 0x1c ]
call ebp
mov ecx esi
call sub_47bc00
test eax __dos_header
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ edi ]
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
sub_480466
mov eax sub_49a884
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_47fbe7
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetDC@IAT ]
push eax
mov ecx esi
call sub_47fc9e
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_480815
sub_4804d8
mov eax sub_49a898
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_47fcd5
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47fd1c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48051a
mov eax sub_49a8ac
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_47fbe7
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetWindowDC@IAT ]
push eax
mov ecx esi
call sub_47fc9e
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_480815
sub_48058c
mov eax sub_49a8c0
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_47fcd5
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47fd1c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4805ce
mov eax sub_49a8d4
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_47fbe7
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
mov eax [ eax + 0x1c ]
push ecx
push eax
mov [ esi + 0x10 ] eax
call [ BeginPaint@IAT ]
push eax
mov ecx esi
call sub_47fc9e
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_480815
sub_480640
mov eax sub_49a8e8
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x10 ]
call [ EndPaint@IAT ]
mov ecx esi
call sub_47fcd5
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47fd1c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_480687
mov eax sub_49a8fe
call sub_469294
push esi
call sub_49051f
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_48314e
call sub_47c3a3
push 0x48
mov ebx eax
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_47e6b4
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_47c3a3
pop ebx
sub_48070e
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_480687
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_477b1a
push 0x1
mov [ eax ] esi
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_48073b
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_480687
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_477b6a
sub_48077b
mov eax sub_49a910
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ esi + 0x4 ] 0x0
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreatePen@IAT ]
push eax
mov ecx esi
call sub_48070e
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
call sub_480815
sub_4807cb
mov eax sub_49a924
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ esi + 0x4 ] 0x0
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call [ CreateSolidBrush@IAT ]
push eax
mov ecx esi
call sub_48070e
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_480815
sub_480815
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_4692b3
mov eax [ ecx + 0x1c ]
push 0x0
push 0x0
push 0x10
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
sub_480841
mov eax sub_49b30f
call sub_469294
push ecx
push esi
push edi
push [ ebp + 0x14 ]
mov esi ecx
mov [ ebp - 0x10 ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4837b5
xor edi edi
push 0xa
lea ecx [ esi + 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_4777e2
mov [ esi ] r--data
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x88 ] edi
cmp [ rw-data ] edi
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov ecx esi
call sub_4808c6
sub_4808c6
push esi
mov esi ecx
call sub_4838b2
cmp [ esi + 0x3c ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x64 ] 0x0
jne r-xdata
push edi
call sub_4904f9
mov edi [ eax + 0xc ]
movzx eax [ esi + 0x3c ]
push eax
push edi
call [ LoadMenuA@IAT ]
mov [ esi + 0x64 ] eax
movzx eax [ esi + 0x3c ]
push eax
push edi
call [ LoadAcceleratorsA@IAT ]
mov [ esi + 0x68 ] eax
pop edi
sub_480904
mov eax sub_49b324
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x64 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ esi + 0x6c ]
call sub_477841
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_48395a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push eax
call [ DestroyMenu@IAT ]
sub_48097d
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4839d5
push 0x0
add esi 0x6c
push [ esp + 0xc ]
mov ecx esi
call sub_47795f
push eax
mov ecx esi
call sub_477928
pop esi
retn 0x4
sub_4809a5
mov eax sub_49b338
call sub_469294
push ecx
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
call [ eax + 0x6c ]
mov esi eax
test esi esi
jne r-xdata
mov ebx [ esi + 0x48 ]
and [ esi + 0x48 ] 0x0
mov eax [ edi ]
push 0x0
push esi
mov ecx edi
call [ eax + 0x70 ]
mov [ esi + 0x48 ] ebx
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
push 0xffffffff
push eax
push 0xf104
call sub_4840fb
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push 0xffffffff
push ebx
push 0xf104
call sub_4840fb
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c0f5
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0x74 ]
test eax eax
jne r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x84 ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov eax [ esi ]
push 0x1
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x54 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c10a
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c10a
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
jne r-xdata
mov [ esi + 0x4c ] 0x1
inc [ edi + 0x88 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
jmp r-xdata
push [ ebp + 0xc ]
mov eax [ edi ]
mov ecx edi
push esi
push [ ebp - 0x10 ]
call [ eax + 0x74 ]
mov eax esi
sub_480ab9
mov eax sub_49b34c
call sub_469294
sub esp 0xc
mov eax [ rw-data ]
push esi
mov esi ecx
mov [ ebp - 0x10 ] eax
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
push 0x1
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
push 0xf003
lea ecx [ ebp - 0x10 ]
call sub_47e84a
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x88 ]
inc eax
push eax
lea eax [ ebp - 0x18 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
push eax
call sub_47ca04
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp - 0x10 ]
mov eax [ ecx ]
call [ eax + 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_480b4a
mov eax sub_49b3ce
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_47be8c
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x1c ] eax
mov eax [ rw-data ]
mov [ esi + 0x20 ] eax
push 0xa
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_4777e2
and [ esi + 0x24 ] 0x0
and [ esi + 0x44 ] 0x0
mov ecx [ ebp - 0xc ]
and [ esi + 0x4c ] 0x0
mov [ esi + 0x48 ] 0x1
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_480ba4
mov eax sub_49b401
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x3
call sub_480c0f
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_477841
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1c ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47bea6
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push esi
call [ eax + 0x60 ]
sub_480c0f
push esi
mov esi ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
pop esi
retn
push edi
lea edi [ esi + 0x28 ]
mov ecx edi
call sub_477904
and [ eax + 0x3c ] 0x0
cmp [ esi + 0x34 ] 0x0
jne r-xdata
pop edi
sub_480c67
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0x60 ]
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x8 ] ebx
call [ eax + 0x60 ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov edi eax
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
push 0x1
pop ebx
mov ecx esi
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov edi eax
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov ecx edi
call sub_47a2e8
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov edi eax
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov ecx edi
call sub_47a2e8
cmp eax ebx
je r-xdata
or [ eax + 0x40 ] 0xffffffff
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx edi
call sub_47a2e8
test eax eax
je r-xdata
cmp [ eax + 0x40 ] 0xffffffff
jne r-xdata
cmp [ eax + 0x40 ] ebx
jne r-xdata
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x40 ] ecx
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0xe0 ]
inc ebx
and [ eax + 0x40 ] 0x0
sub_480d54
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x90 ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov ecx eax
call sub_47a2e8
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x40 ] 0x0
jg r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
leave
retn 0x4
sub_480da0
push ebp
mov ebp esp
sub esp 0x204
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
mov esi ecx
push eax
call sub_47dcaf
lea edi [ esi + 0x20 ]
lea eax [ ebp - 0x104 ]
push eax
mov ecx edi
call sub_47c7b1
and [ esi + 0x4c ] 0x0
lea eax [ ebp - 0x204 ]
push 0x100
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_47df08
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x204 ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
pop edi
pop esi
leave
retn 0x8
mov edi [ edi ]
call sub_4904f9
mov eax [ eax + 0x4 ]
push edi
mov ecx eax
mov edx [ eax ]
call [ edx + 0x80 ]
sub_480e49
push esi
mov esi ecx
push [ esi + 0x20 ]
call [ GetFileAttributesA@IAT ]
test al 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ esi ]
push 0x1
push eax
mov ecx esi
call [ edx + 0x98 ]
mov eax [ esi ]
push 0x1
push 0x0
mov ecx esi
call [ eax + 0x98 ]
jmp r-xdata
push 0x1
pop eax
pop esi
retn
pop esi
retn
test eax eax
jne r-xdata
sub_480e84
mov eax sub_49b424
call sub_469294
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_47c6e2
mov eax [ ebp - 0x14 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ eax - 0x8 ] ebx
jne r-xdata
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c0f5
mov eax [ esi ]
push [ ebp - 0x14 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0x78 ]
test eax eax
jne r-xdata
mov edi [ esi + 0x24 ]
lea eax [ esi + 0x20 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_47c761
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
call sub_4904f9
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
neg ecx
sbb ecx ecx
push edi
and ecx 0xfffffffd
push ebx
add ecx 0xf004
push 0x804
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx eax
call sub_487a35
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] bl
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c10a
push 0x1
pop esi
mov eax [ esi ]
push 0x1
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x54 ]
mov [ ebp - 0x4 ] bl
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c10a
jmp r-xdata
push [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
call sub_47d975
jmp r-xdata
xor esi esi
jmp r-xdata
lea eax [ esi + 0x1c ]
lea ecx [ ebp - 0x14 ]
push eax
call sub_47c761
push r--data
lea ecx [ ebp - 0x14 ]
call sub_47cb2a
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
lea ecx [ ebp - 0x18 ]
push 0x4
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x64 ]
test eax eax
je r-xdata
push eax
lea ecx [ ebp - 0x14 ]
call sub_47caa7
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
mov eax [ ebp - 0x18 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x14 ]
push eax
call sub_47ca40
sub_480fa7
xor ebx ebx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] bl
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c10a
jmp r-xdata
xor esi esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_481005
mov eax sub_49b440
call sub_469294
push ecx
push ecx
push edi
mov edi ecx
mov eax [ edi ]
call [ eax + 0x58 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push ebx
push esi
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x20 ]
lea esi [ edi + 0x20 ]
xor ebx ebx
cmp [ eax - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push esi
lea ecx [ ebp - 0x10 ]
call sub_47c761
cmp [ rw-data ] ebx
je r-xdata
lea eax [ edi + 0x1c ]
lea ecx [ ebp - 0x10 ]
push eax
call sub_47c761
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x10 ]
mov esi 0xf103
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
push esi
push eax
call sub_488acb
push esi
push 0x3
push [ ebp - 0x14 ]
call sub_4840c3
dec eax
dec eax
je r-xdata
mov esi [ esi ]
mov eax 0x104
push eax
push eax
lea ecx [ ebp - 0x10 ]
call sub_47ca58
push eax
push esi
call sub_47df08
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47caa7
push 0xf003
lea ecx [ ebp - 0x10 ]
call sub_47e84a
jmp r-xdata
xor esi esi
sub eax 0x4
jne r-xdata
push 0x1
pop esi
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x9c ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax esi
pop esi
pop ebx
sub_481107
mov eax sub_49b454
call sub_469294
sub esp 0x108
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov [ ebp - 0x10 ] ebx
mov [ ebp + 0x14 ] eax
mov esi [ ebp + 0xc ]
xor edi edi
cmp esi edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax - 0x8 ] edi
jne r-xdata
push r--data
mov ecx esi
call sub_47e4fa
test eax eax
jne r-xdata
push [ ebp - 0x10 ]
push 0x30
push [ ebp + 0x14 ]
call sub_4840c3
cmp [ rw-data ] edi
push 0x104
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
push r--data
mov ecx esi
call sub_47e4fa
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x114 ]
push eax
call [ lstrcpynA@IAT ]
lea eax [ ebp - 0x114 ]
push eax
push [ ebp + 0x8 ]
call sub_47df08
jmp r-xdata
push r--data
mov ecx esi
call sub_47e4fa
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
cmp esi 0x3
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp + 0x14 ]
push ebx
push eax
call sub_488acb
mov eax [ esi + 0x10 ]
lea ecx [ esi + 0x10 ]
cmp [ eax - 0x8 ] edi
jne r-xdata
mov ebx 0xf120
jmp r-xdata
cmp esi 0x4
jle r-xdata
push 0xff
lea ecx [ ebp + 0x14 ]
call sub_47ca58
mov edx [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push 0x100
push eax
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_47c7b1
cmp esi 0x7
jg r-xdata
push 0xffffffff
lea ecx [ ebp + 0x14 ]
call sub_47caa7
mov esi [ esi + 0x8 ]
cmp esi 0x2
jl r-xdata
cmp esi 0x3
jle r-xdata
mov ebx 0xf121
cmp esi 0x5
je r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] edi
setne bl
add ebx 0xf123
jmp r-xdata
cmp esi 0xd
jne r-xdata
mov ebx 0xf122
jmp r-xdata
sub_481273
mov eax sub_49b47f
call sub_469294
sub esp 0x10c
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
push 0x1
lea eax [ ebp + 0xc ]
pop esi
push eax
lea eax [ ebp - 0x118 ]
push eax
push 0x104
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
call [ GetFullPathNameA@IAT ]
mov eax [ ebp + 0xc ]
push 0x105
lea ecx [ ebp - 0x10 ]
mov [ eax ] bl
call sub_47ca58
push eax
push ebx
lea eax [ ebp - 0x118 ]
push r--data
push eax
call [ GetTempFileNameA@IAT ]
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47caa7
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_47c3e9
mov [ ebp - 0x14 ] esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push [ ebp - 0x10 ]
call sub_47d975
sub_481319
mov eax sub_49b49c
call sub_469294
sub esp 0x144
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x10 ]
mov ecx esi
call sub_47c5ff
test [ ebp + 0xd ] 0x10
je r-xdata
mov eax [ esi ]
xor ebx ebx
cmp [ eax - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x150 ]
push eax
push [ ebp + 0x8 ]
call sub_47ed67
test eax eax
je r-xdata
mov ecx esi
call sub_47c5ff
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47d627
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
push eax
call sub_47d627
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
call sub_47dd7f
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x10 ]
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea ecx [ edi + 0xc ]
call sub_47c7b1
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push [ edi + 0x4 ]
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x144 ]
add eax eax
cmp ebx eax
jbe r-xdata
mov ebx [ ebp - 0x24 ]
imul ebx [ ebp - 0x20 ]
imul ebx [ ebp - 0x1c ]
lea eax [ ebp + 0xc ]
mov edi [ GetFileSecurityA@IAT ]
push eax
push ebx
push ebx
push 0x4
push [ ebp + 0x8 ]
mov [ ebp + 0xc ] ebx
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x150 ]
push eax
call sub_47ee19
pop ecx
lea eax [ ebp - 0x38 ]
pop ecx
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push [ edi + 0x4 ]
call [ SetFileTime@IAT ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
push 0x1
lea eax [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push eax
call sub_481273
add esp 0xc
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_47c761
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0xc ]
call sub_47c3b5
mov ebx eax
pop ecx
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push ebx
push 0x4
push [ ebp + 0x8 ]
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push ebx
call sub_47c3de
pop ecx
push ebx
push 0x4
push [ esi ]
call [ SetFileSecurityA@IAT ]
sub_4814d9
mov eax sub_49b4c0
call sub_469294
sub esp 0x20
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
lea eax [ esi + 0xc ]
push eax
call sub_47c3e9
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_47d842
mov eax [ esi + 0x10 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x38 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
xor edi edi
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] ebx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
push [ ebp - 0x18 ]
call sub_47d975
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
mov [ ebp - 0x2c ] eax
je r-xdata
push [ ebp - 0x18 ]
mov esi [ esi + 0x10 ]
push esi
call sub_47d953
jmp r-xdata
push [ ebp - 0x14 ]
call sub_47d975
mov eax [ esi + 0x10 ]
push ebx
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_481273
add esp 0xc
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_47c761
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
mov eax [ ebp - 0x14 ]
mov edi [ lstrlenA@IAT ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
push eax
call edi
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_469f00
mov eax esp
push esi
push eax
push 0xffffffff
push [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov [ eax ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x24 ]
mov esi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] ebx
jmp r-xdata
push eax
call edi
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_469f00
mov eax esp
push esi
push eax
push 0xffffffff
push [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov [ eax ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x24 ]
mov esi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
push eax
call edi
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_469f00
mov edi esp
push esi
push edi
push 0xffffffff
push [ ebp - 0x10 ]
mov [ edi ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov esi [ ebp - 0x1c ]
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
push [ ebp - 0x14 ]
call sub_47d975
call [ GetLastError@IAT ]
mov edi eax
cmp edi 0x498
je r-xdata
push ebx
push ebx
push 0x3
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push edi
call [ ebp - 0x2c ]
cmp eax ebx
jne r-xdata
cmp edi ebx
jne r-xdata
cmp edi 0x499
jne r-xdata
sub_4816b7
mov eax sub_49b4d5
call sub_469294
push ecx
push esi
push 0x14
call sub_47c3b5
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_47d515
mov eax [ rw-data ]
mov [ esi + 0x10 ] eax
mov [ esi ] r--data
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
test esi esi
je r-xdata
push [ ebp + 0x10 ]
mov eax [ esi ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x20 ]
test eax eax
jne r-xdata
xor esi esi
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_481745
mov eax sub_49b4e8
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47d56a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48177a
cmp [ esp + 0x8 ] 0x0
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
mov eax [ esi ]
je r-xdata
call [ eax + 0x4c ]
call [ eax + 0x44 ]
jmp r-xdata
pop esi
retn 0x8
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
test esi esi
je r-xdata
sub_4817a3
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x58 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x6c ]
lea ecx [ esi + 0x20 ]
call sub_47c5ff
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x5c ]
push 0x1
pop eax
pop esi
retn
sub_4817c8
mov eax sub_49b534
call sub_469294
sub esp 0x68
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] esi
mov eax [ esi ]
call [ eax + 0x58 ]
lea ecx [ ebp - 0x30 ]
call sub_47dfb8
mov eax [ rw-data ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x24 ] 0xffffffff
mov edi r--data
push ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x28 ] ebx
call sub_47c7b1
mov eax [ esi ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x20
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0x84 ]
mov [ ebp - 0x14 ] eax
cmp eax ebx
mov eax [ esi ]
jne r-xdata
mov ecx esi
call [ eax + 0x6c ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x5c ]
push ebx
push 0x1000
push 0x3
lea ecx [ ebp - 0x74 ]
push [ ebp - 0x14 ]
call sub_483308
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x4 ] 0x5
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c0f5
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ecx ]
call [ eax + 0x30 ]
cmp eax ebx
je r-xdata
push 0xf101
lea ecx [ ebp - 0x30 ]
push ebx
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x80 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea ecx [ ebp - 0x74 ]
call sub_48346c
mov eax [ esi ]
push ebx
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x88 ]
mov [ ebp - 0x4 ] 0x5
call sub_4904f9
mov ecx [ eax + 0x4 ]
call sub_47c10a
mov eax [ esi ]
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call [ eax + 0x5c ]
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_4833e4
mov [ ebp - 0x30 ] edi
push 0x1
mov [ ebp - 0x4 ] 0xb
pop ebx
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x74 ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_481901
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] esp
push 0x1
mov ecx esi
mov eax [ esi ]
push [ ebp - 0x14 ]
call [ eax + 0x88 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x6c ]
mov eax [ esi ]
push 0xf101
push 0x0
mov ecx esi
push [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
push [ ebp + 0x8 ]
call [ eax + 0x80 ]
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x7
call sub_47dfce
mov eax r-xdata
retn
sub_481992
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x48 ]
and [ esi + 0x48 ] 0x0
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi ]
mov ecx esi
mov [ esi + 0x48 ] ebx
call [ eax + 0x6c ]
cmp [ esi + 0x48 ] 0x0
je r-xdata
push edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x8 ]
call sub_47a2e8
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x94 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x58 ]
cmp [ esi + 0x34 ] 0x0
jne r-xdata
pop edi
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_4819ea
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
lea ecx [ esi + 0x28 ]
call sub_4778db
mov [ edi + 0x3c ] esi
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
retn 0x4
sub_481a0a
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
push 0x0
lea edi [ esi + 0x28 ]
push ebx
mov ecx edi
call sub_47795f
push eax
mov ecx edi
call sub_477928
and [ ebx + 0x3c ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
pop ebx
retn 0x4
sub_481a51
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop esi
leave
retn 0xc
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xec ]
sub_481a92
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47bfd8
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
xor eax eax
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xc ]
test eax eax
je r-xdata
sub_481ad5
push ebp
mov ebp esp
sub esp 0x314
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
cmp [ eax ] 0x22
mov esi [ ecx + 0x8 ]
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov edi 0x104
push edi
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpynA@IAT ]
lea eax [ ebp - 0x210 ]
push 0x22
push eax
call sub_46887f
pop ecx
test eax eax
pop ecx
je r-xdata
inc eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
call sub_47dcaf
lea eax [ ebp - 0x314 ]
push edi
push eax
lea eax [ ebp - 0x10c ]
push eax
call sub_402850
push eax
call sub_47db8d
test eax eax
je r-xdata
and [ eax ] 0x0
test esi esi
je r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax esi
mov esi [ esi ]
lea ecx [ ebp - 0x4 ]
mov edi [ eax + 0x8 ]
push ecx
lea ecx [ ebp - 0x10c ]
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x68 ]
cmp eax ebx
jle r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x60 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
cmp eax 0x5
jne r-xdata
mov ebx eax
mov [ ebp - 0x8 ] edi
mov eax [ ecx ]
lea edx [ ebp - 0x10c ]
push 0x1
push edx
call [ eax + 0x80 ]
push 0xffffffff
push ecx
push 0xf101
call sub_4840fb
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x64 ]
mov ecx eax
call sub_47a2e8
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
call sub_4904f9
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x1c ]
cmp esi ecx
je r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xcc ]
mov eax [ ecx ]
push 0xffffffff
call [ eax + 0xcc ]
sub_481c16
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ecx + 0x8 ]
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn
push edi
test esi esi
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx edi
call [ eax + 0x58 ]
test eax eax
je r-xdata
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc ebx
sub_481c6c
mov eax sub_49b814
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
call sub_4902c7
cmp [ eax + 0xc0 ] esi
jne r-xdata
mov ecx [ esi + 0x3c ]
test ecx ecx
je r-xdata
call sub_4902c7
and [ eax + 0xc0 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_481a0a
sub_481cbf
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x8
call sub_47b7d9
mov [ esi + 0x28 ] r--data
push 0x1
pop eax
pop esi
retn 0x4
mov eax [ esi + 0x20 ]
test eax 0x800000
je r-xdata
or [ esi + 0x2d ] 0x2
and eax 0xff7fffff
mov [ esi + 0x20 ] eax
sub_481cfe
push esi
mov esi ecx
call sub_478ca1
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax eax
jmp r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop esi
retn 0x4
push esi
mov ecx eax
call sub_4819ea
sub_481d2e
push esi
push edi
mov edi ecx
call sub_47a2e8
mov esi eax
test esi esi
je r-xdata
mov ecx edi
call sub_479428
pop edi
pop esi
retn
mov ecx esi
call sub_48c57e
cmp eax edi
jne r-xdata
push 0x1
push 0x0
mov ecx esi
call sub_48c585
sub_481d69
push esi
xor esi esi
cmp [ esp + 0xc ] esi
push edi
mov edi ecx
je r-xdata
push esi
mov ecx edi
push [ esp + 0x10 ]
call sub_47a9d8
call sub_47bc00
push eax
push esi
push esi
mov esi [ esp + 0x18 ]
push esi
call [ AdjustWindowRectEx@IAT ]
mov ecx edi
call sub_47bbe6
test eax 0x200000
mov ecx 0x800000
je r-xdata
test eax 0x100000
je r-xdata
mov edx [ rw-data ]
test ecx eax
je r-xdata
pop edi
pop esi
retn 0x8
mov edx [ rw-data ]
test ecx eax
je r-xdata
add [ esi + 0x8 ] edx
dec edx
add [ esi + 0xc ] edx
jmp r-xdata
dec edx
sub_481dd1
mov eax sub_49b828
call sub_469294
push ecx
push ecx
push edi
mov edi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47bfd8
test eax eax
je r-xdata
cmp [ edi + 0x3c ] 0x0
je r-xdata
push 0x1
pop eax
jmp r-xdata
xor eax eax
push ebx
push esi
call sub_4902c7
mov esi eax
mov [ ebp - 0x10 ] esi
mov ebx [ esi + 0xc0 ]
mov [ esi + 0xc0 ] edi
mov [ ebp - 0x14 ] ebx
push [ ebp + 0x14 ]
mov ecx [ edi + 0x3c ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xc ]
mov [ esi + 0xc0 ] ebx
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
sub_481e4e
mov eax sub_49b83c
call sub_469294
sub esp 0x54
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x60 ]
call sub_4805ce
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
push 0x0
push ecx
mov ecx esi
call [ eax + 0xdc ]
mov eax [ esi ]
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx esi
call [ eax + 0xf0 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call sub_480640
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_481ef2
push ebp
push esi
mov esi ecx
call sub_478ca1
mov ebp eax
cmp ebp 0x3
je r-xdata
mov eax ebp
cmp ebp 0x4
je r-xdata
push ebx
mov ecx esi
call sub_47a2e8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebp
pop ebx
jmp r-xdata
push edi
mov ecx ebx
call sub_48c57e
mov edi eax
call [ GetFocus@IAT ]
cmp edi esi
pop edi
jne r-xdata
pop esi
pop ebp
retn 0xc
push 0x1
push esi
mov ecx ebx
call sub_48c585
mov ecx [ esi + 0x1c ]
cmp ecx eax
je r-xdata
push eax
push ecx
call [ IsChild@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
push esi
push esi
push 0x1
mov ecx esi
call [ eax + 0xe4 ]
jmp r-xdata
sub_481f7b
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
push [ eax + 0x1c ]
mov edi [ GetParent@IAT ]
lea esi [ eax + 0x1c ]
call edi
push eax
call sub_478d3a
mov ebx eax
push r--data
mov ecx ebx
call sub_47e4fa
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov eax ebx
push [ esi ]
call edi
push eax
call sub_478d3a
test eax eax
je r-xdata
push [ eax + 0x1c ]
lea esi [ eax + 0x1c ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
sub_481fd9
push esi
push edi
mov esi ecx
call sub_47bbe6
mov edx [ esp + 0xc ]
mov ecx 0x100000
neg edx
sbb edx edx
and edx ecx
add edx ecx
test edx eax
jne r-xdata
xor eax eax
push 0x1
push esi
call sub_481f7b
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax 0xe900
jb r-xdata
cmp eax 0xe9ff
ja r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
add eax 0xffff1700
shr eax 0x4
add eax 0xea10
and eax 0xf
add eax 0xea00
jmp r-xdata
pop edi
pop esi
retn 0x4
push eax
mov ecx edi
call sub_47bb2c
jmp r-xdata
sub_48204e
push 0x0
push ecx
call sub_481f7b
test eax eax
je r-xdata
xor eax eax
cmp [ eax + 0x80 ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
push eax
mov edx [ ecx ]
call [ edx ]
retn 0x4
sub_482092
push esi
push 0x0
push ecx
call sub_481f7b
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ eax ]
xor ecx ecx
cmp [ esi + 0x4 ] 0xe151
sete cl
push ecx
mov ecx eax
call [ edx + 0xe8 ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
pop esi
retn 0x4
sub_4820d0
push 0x0
push ecx
call sub_481f7b
test eax eax
je r-xdata
retn 0x4
mov edx [ eax ]
xor ecx ecx
cmp [ esp + 0x4 ] 0xe151
sete cl
push ecx
mov ecx eax
call [ edx + 0xec ]
push 0x1
pop eax
sub_4820fa
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
retn 0x8
mov ecx [ eax ]
push 0x1
mov edx [ ecx + 0x5c ]
pop ecx
cmp [ edx + 0x1e ] 0xffff
jne r-xdata
mov [ eax + 0x10 ] ecx
cmp [ eax + 0x14 ] ecx
je r-xdata
xor ecx ecx
sub_482128
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
push esi
mov ecx [ ebx + 0x70 ]
push edi
test ecx ecx
je r-xdata
call sub_402850
push [ ebx + 0x88 ]
lea edi [ ebx + 0x88 ]
mov esi eax
push 0x0
mov ecx esi
mov eax [ esi ]
call [ eax + 0xd0 ]
mov eax [ edi ]
push 0x1
mov ecx esi
push [ eax + 0xc ]
call sub_48c585
mov edi [ ebp - 0x4 ]
mov ecx edi
call sub_47a2e8
cmp esi eax
je r-xdata
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
call [ eax + 0x100 ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
push 0x0
push 0xe001
push 0x362
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ edi ]
push edi
push edi
push 0x1
mov ecx edi
call [ eax + 0xe4 ]
sub_4821d1
push ebp
mov ebp esp
sub esp 0x8c
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] si
mov [ rw-data ] 0x1
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
push rw-data
call [ RegisterWindowMessageA@IAT ]
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
cmp [ rw-data ] esi
mov [ rw-data ] 0x3
jne r-xdata
push rw-data
push rw-data
call [ FindWindowA@IAT ]
cmp eax esi
je r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
cmp [ rw-data ] esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push esi
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
cmp ecx esi
je r-xdata
push esi
push rw-data
push esi
push 0x68
call [ SystemParametersInfoA@IAT ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x80
push eax
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push esi
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push ecx
push eax
call [ SendMessageA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
push 0xa
lea eax [ ebp - 0x8c ]
push esi
push eax
call sub_469509
add esp 0xc
mov [ rw-data ] eax
pop esi
leave
retn
sub_48230e
push esi
push edi
mov esi ecx
call sub_481c5c
lea edi [ esi + 0x40 ]
push 0x2c
push 0x0
push edi
mov [ esi ] r--data
call sub_467a10
and [ edi ] 0x0
add esp 0xc
mov eax esi
pop edi
pop esi
retn
sub_48235c
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ esi + 0x40 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ edi ]
push 0x8
mov ecx edi
call [ eax + 0x34 ]
mov ecx [ esi + 0x48 ]
mov eax [ esi + 0x44 ]
mov edx [ edi ]
push ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call [ edx + 0x48 ]
mov ecx [ esi + 0x50 ]
mov eax [ esi + 0x4c ]
mov edx [ edi ]
push ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call [ edx + 0x40 ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x34 ]
jmp r-xdata
mov eax [ edi ]
push ebx
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx edi
call [ eax + 0x38 ]
push [ ebp + 0xc ]
mov ecx esi
push edi
call sub_4820fa
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_4825f8
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
neg ecx
neg eax
cmp [ esi + 0x64 ] 0x0
mov [ ebp - 0x8 ] ecx
mov ebx eax
je r-xdata
xor ebx ebx
cmp [ edi + 0xc ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x4c ]
sub eax [ ebp - 0x18 ]
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ esi + 0x50 ]
sub eax [ ebp - 0x14 ]
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0x10 ]
sub eax ecx
sub eax [ ebp - 0x18 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
sub eax ecx
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
sub_48243b
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
xor edi edi
or [ esi + 0x40 ] 0xffffffff
cmp [ esi + 0x1c ] edi
mov [ esi + 0x44 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x48 ] eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
cmp [ esi + 0x1c ] edi
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] ecx
je r-xdata
call sub_47bbe6
test eax 0x300000
je r-xdata
pop edi
pop esi
leave
retn 0x8
mov ecx esi
call sub_48291b
push 0x1
push edi
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push 0x1
push edi
push edi
mov ecx esi
call sub_47a57f
push 0x1
push edi
push 0x1
mov ecx esi
call sub_47a57f
push edi
push 0x3
mov ecx esi
call sub_47a63a
sub_4824c6
mov eax sub_49b850
call sub_469294
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
push 0x0
lea ecx [ ebp - 0x24 ]
mov eax [ esi + 0x40 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x44 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x48 ] eax
call sub_48051a
push [ esi + 0x40 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_47ff8e
mov ecx [ esi + 0x44 ]
mov edi [ LPtoDP@IAT ]
lea eax [ esi + 0x4c ]
push 0x1
push eax
push [ ebp - 0x1c ]
mov [ eax ] ecx
mov ecx [ esi + 0x48 ]
mov [ eax + 0x4 ] ecx
call edi
mov eax [ ebp + 0x14 ]
lea ebx [ esi + 0x54 ]
push 0x1
push ebx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x1c ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
call edi
mov eax [ ebp + 0x18 ]
push 0x1
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
lea eax [ esi + 0x5c ]
push eax
push [ ebp - 0x1c ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
call edi
mov eax [ esi + 0x50 ]
test eax eax
jge r-xdata
mov eax [ esi + 0x58 ]
test eax eax
jge r-xdata
neg eax
mov [ esi + 0x50 ] eax
mov eax [ esi + 0x60 ]
test eax eax
jge r-xdata
neg eax
mov [ esi + 0x58 ] eax
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_48058c
cmp [ ebx ] 0x0
push 0xa
pop ecx
jne r-xdata
neg eax
mov [ esi + 0x60 ] eax
cmp [ esi + 0x58 ] 0x0
jne r-xdata
mov eax [ esi + 0x4c ]
mov edi ecx
cdq
idiv edi
mov [ ebx ] eax
xor edi edi
cmp [ esi + 0x5c ] edi
jne r-xdata
mov eax [ esi + 0x50 ]
mov edi ecx
cdq
idiv edi
mov [ esi + 0x58 ] eax
cmp [ esi + 0x60 ] edi
jne r-xdata
mov eax [ ebx ]
mov ebx ecx
cdq
idiv ebx
mov [ esi + 0x5c ] eax
cmp [ esi + 0x1c ] edi
je r-xdata
mov eax [ esi + 0x58 ]
cdq
idiv ecx
mov [ esi + 0x60 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
mov ecx esi
call sub_48291b
mov eax [ ebp - 0x10 ]
cmp eax [ esi + 0x40 ]
je r-xdata
push 0x1
push edi
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
sub_4825f8
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
push 0x1
call sub_47a5af
push 0x0
mov ecx esi
mov edi eax
call sub_47a5af
cmp [ esi + 0x64 ] 0x0
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] edi
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ esi + 0x4c ]
mov edx eax
sub edx [ ebp - 0x10 ]
cmp ecx edx
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ esi + 0x50 ]
mov ecx eax
sub ecx [ ebp - 0xc ]
cmp esi ecx
jge r-xdata
sub eax ecx
push 0xfffffffe
sub eax [ ebp - 0x10 ]
pop ecx
cdq
idiv ecx
mov ebx eax
sub eax esi
push 0xfffffffe
sub eax [ ebp - 0xc ]
pop ecx
cdq
idiv ecx
mov edi eax
sub_482671
push ebx
push esi
push edi
mov ebx ecx
push 0x0
call sub_47a5af
push 0x1
mov ecx ebx
push [ esp + 0x14 ]
mov esi eax
push 0x0
call sub_47a57f
push 0x1
mov ecx ebx
call sub_47a5af
push 0x1
mov ecx ebx
push [ esp + 0x18 ]
mov edi eax
push 0x1
call sub_47a57f
sub edi [ esp + 0x14 ]
sub esi [ esp + 0x10 ]
push 0x0
push 0x0
push edi
push esi
mov ecx ebx
call sub_47a75e
pop edi
pop esi
pop ebx
retn 0x8
sub_4826c3
push esi
mov esi ecx
call sub_478ca1
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov ecx esi
call sub_48291b
push [ esi + 0x48 ]
mov ecx esi
push [ esi + 0x44 ]
call sub_48243b
jmp r-xdata
pop esi
retn 0xc
sub_4826eb
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov ebx ecx
push eax
push [ ebx + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x8 ]
mov edi [ ebp + 0x8 ]
sub eax [ ebp - 0x10 ]
mov esi [ ebp + 0xc ]
mov ecx ebx
cdq
sub eax edx
sar eax 0x1
sub edi eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
cdq
sub eax edx
sar eax 0x1
sub esi eax
call sub_47bbe6
test eax 0x100000
mov [ ebp + 0xc ] eax
je r-xdata
xor edi edi
test edi edi
jl r-xdata
xor esi esi
test esi esi
jl r-xdata
push 0x0
mov ecx ebx
call sub_47a717
cmp edi eax
jle r-xdata
push 0x1
mov ecx ebx
call sub_47a717
cmp esi eax
jle r-xdata
test [ ebp + 0xe ] 0x20
je r-xdata
mov edi eax
jmp r-xdata
push 0x1
push edi
push 0x0
mov ecx ebx
call sub_47a57f
push 0x1
push esi
push 0x1
mov ecx ebx
call sub_47a57f
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi eax
jmp r-xdata
sub_482787
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
call sub_47bbe6
mov ebp eax
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x68 ]
test eax eax
mov ebx 0x800000
jne r-xdata
mov eax [ edi ]
push 0x0
mov ecx edi
call [ eax + 0x68 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test ebx ebp
mov [ esi ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ rw-data ]
test ebx ebp
mov [ esi + 0x4 ] eax
je r-xdata
dec [ esi ]
dec [ esi + 0x4 ]
sub_4827e1
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov ebx ecx
push eax
push [ ebx + 0x1c ]
call [ GetClientRect@IAT ]
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx ebx
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
call sub_47bbe6
mov edi [ ebp + 0xc ]
mov ecx ebx
push edi
mov [ ebp + 0x8 ] eax
call sub_482787
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
test [ ebp + 0xa ] 0x20
je r-xdata
mov eax [ esi ]
cmp eax [ edi ]
jle r-xdata
test [ ebp + 0xa ] 0x10
je r-xdata
add [ esi ] eax
xor eax eax
mov eax [ esi + 0x4 ]
cmp eax [ edi + 0x4 ]
jle r-xdata
add [ esi + 0x4 ] eax
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_482856
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push edi
mov edi ecx
push eax
call sub_482787
mov eax [ edi + 0x4c ]
mov ecx [ edi + 0x50 ]
sub eax [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
mov [ esi ] eax
lea eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] ecx
push eax
mov ecx edi
call sub_4825f8
mov ecx eax
mov eax [ ebp + 0x18 ]
xor edi edi
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
cmp [ esi ] edi
setg cl
cmp ecx edi
mov [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
mov [ eax ] edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
push ebx
xor ebx ebx
cmp ecx edi
setg bl
cmp ebx edi
mov [ ebp + 0x18 ] ebx
jne r-xdata
add [ esi + 0x4 ] edx
cmp [ ebp + 0x1c ] edi
je r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ebx [ ebp - 0x8 ]
add [ esi ] ebx
mov ecx [ esi ]
pop ebx
cmp ecx edi
jle r-xdata
cmp [ esi ] edi
jle r-xdata
mov esi [ esi + 0x4 ]
cmp esi edi
jle r-xdata
cmp [ eax ] ecx
jl r-xdata
add ecx edx
mov [ ebp + 0x14 ] 0x1
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x18
cmp [ eax + 0x4 ] esi
jl r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] esi
sub_48291b
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x68 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop ebx
push [ esi + 0x1c ]
mov [ esi + 0x68 ] ebx
mov [ ebp - 0x4 ] ebx
call [ GetParent@IAT ]
push eax
call sub_478d3a
cmp eax edi
je r-xdata
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4827e1
test eax eax
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push edi
push 0x368
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x4c ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
cmp [ ebp - 0x44 ] edi
jle r-xdata
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
mov [ ebp - 0x4 ] edi
call sub_482787
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x30 ]
sub ecx [ ebp - 0x3c ]
sub eax [ ebp - 0x38 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
mov eax [ ebp - 0x18 ]
sub [ ebp - 0x8 ] eax
mov [ esi + 0x68 ] edi
cmp [ ebp - 0x40 ] edi
jle r-xdata
push [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
push edx
lea edx [ ebp - 0x2c ]
push edx
lea edx [ ebp - 0x14 ]
push edx
push eax
push ecx
mov ecx esi
call sub_482856
cmp [ ebp - 0x14 ] edi
je r-xdata
push [ ebp - 0x20 ]
mov ecx esi
push [ ebp - 0x24 ]
call sub_482671
push [ ebp - 0x14 ]
mov ecx esi
mov [ ebp - 0x64 ] 0x3
mov [ ebp - 0x60 ] edi
push edi
call sub_47a63a
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
sub [ ebp - 0xc ] eax
push edi
push 0x3
mov ecx esi
call sub_47a63a
jmp r-xdata
push [ ebp - 0x10 ]
mov ecx esi
push ebx
call sub_47a63a
cmp [ ebp - 0x10 ] edi
je r-xdata
mov eax [ ebp - 0xc ]
push ebx
mov [ ebp - 0x58 ] eax
mov eax [ esi + 0x4c ]
dec eax
mov ecx esi
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_47a67d
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push ebx
mov [ ebp - 0x58 ] eax
mov eax [ esi + 0x50 ]
dec eax
mov ecx esi
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x68 ]
push eax
push ebx
call sub_47a67d
test eax eax
jne r-xdata
push ebx
mov ecx esi
push [ ebp - 0x2c ]
push edi
push edi
call sub_47a5d7
push ebx
mov ecx esi
push [ ebp - 0x28 ]
push edi
push ebx
call sub_47a5d7
sub_482a90
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x1
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edi
jne r-xdata
call sub_47bc00
and ah 0xfd
mov ecx edi
push eax
push 0x0
call sub_47bbe6
push eax
push [ ebp + 0x8 ]
call [ AdjustWindowRectEx@IAT ]
call sub_47bc00
mov esi [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
push esi
call [ AdjustWindowRectEx@IAT ]
cmp [ edi + 0x40 ] 0xffffffff
je r-xdata
pop edi
pop esi
leave
retn 0x8
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
sub eax [ esi ]
sub ecx [ esi + 0x4 ]
push ebx
mov ebx [ edi + 0x4c ]
mov edi [ edi + 0x50 ]
sub ebx eax
lea eax [ ebp - 0x8 ]
sub edi ecx
mov ecx [ ebp - 0x4 ]
push eax
call sub_482787
test edi edi
jle r-xdata
test ebx ebx
pop ebx
jle r-xdata
mov eax [ ebp - 0x8 ]
add [ esi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
add [ esi + 0xc ] eax
jmp r-xdata
sub_482b17
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x68 ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
push 0x0
call sub_47ab07
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
movzx ecx [ ebp + 0x8 ]
mov eax [ esi ]
push 0x1
push [ ebp + 0xc ]
or ch 0xff
push ecx
mov ecx esi
call [ eax + 0xbc ]
sub_482b5b
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x68 ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
push 0x0
call sub_47ab07
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
xor ecx ecx
mov eax [ esi ]
mov ch [ ebp + 0x8 ]
push 0x1
push [ ebp + 0xc ]
movzx ecx cx
or cl 0xff
push ecx
mov ecx esi
call [ eax + 0xbc ]
sub_482ba3
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0xc
push esi
mov esi ecx
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
push esi
call sub_481f7b
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_482bd7
sub_482bd7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
call sub_47bbe6
push 0x1
mov ebx eax
mov eax [ esi ]
pop edi
push edi
mov ecx esi
call [ eax + 0x68 ]
test eax eax
je r-xdata
test ebx 0x200000
jne r-xdata
mov ecx eax
call sub_47bdcd
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] edi
and [ ebp - 0x4 ] 0x0
jmp r-xdata
test ebx 0x100000
jne r-xdata
mov ecx eax
call sub_47bdcd
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x68 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] edi
and [ ebp - 0x8 ] 0x0
jmp r-xdata
call sub_4821d1
cmp [ ebp - 0x4 ] 0x0
mov ebx eax
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
xor edi edi
cmp [ ebp - 0x4 ] edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movsx eax [ ebp + 0xc ]
push 0x78
push ebx
neg eax
push eax
call [ MulDiv@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
movsx eax [ ebp + 0xc ]
push 0x78
push ebx
neg eax
push eax
call [ MulDiv@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov ecx [ esi + 0x58 ]
jle r-xdata
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp + 0xc ] 0x0
mov ecx [ esi + 0x54 ]
jle r-xdata
cmp ebx 0xffffffff
je r-xdata
mov edx [ esi ]
xor eax eax
push 0x1
push ecx
push eax
jmp r-xdata
neg ecx
mov ecx [ esi + 0x60 ]
imul ecx eax
mov eax [ esi + 0x58 ]
cmp ecx eax
jl r-xdata
mov edx [ esi ]
xor eax eax
push 0x1
push eax
push ecx
neg ecx
mov ecx [ esi + 0x5c ]
imul ecx eax
mov eax [ esi + 0x54 ]
cmp ecx eax
jl r-xdata
mov ecx esi
call [ edx + 0xc0 ]
mov edi eax
test edi edi
je r-xdata
mov ecx eax
jmp r-xdata
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
mov ecx eax
jmp r-xdata
sub_482d02
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
call sub_47a5af
mov esi eax
movzx eax [ ebp + 0x8 ]
sub eax 0x0
mov [ ebp - 0x4 ] esi
je r-xdata
sub esi [ edi + 0x5c ]
dec eax
je r-xdata
sub eax [ edi + 0x60 ]
dec ecx
je r-xdata
add esi [ edi + 0x5c ]
jmp r-xdata
dec eax
je r-xdata
mov eax esi
pop edi
pop esi
leave
retn 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add eax [ edi + 0x60 ]
jmp r-xdata
dec ecx
je r-xdata
push 0x1
mov ecx edi
call sub_47a5af
xor ecx ecx
mov edx eax
mov cl [ ebp + 0x9 ]
movzx ecx cl
sub ecx 0x0
je r-xdata
sub esi [ edi + 0x54 ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x1c ]
call [ UpdateWindow@IAT ]
push [ ebp + 0x10 ]
sub esi [ ebp - 0x4 ]
sub eax edx
mov edx [ edi ]
push eax
push esi
mov ecx edi
call [ edx + 0xc0 ]
mov esi eax
test esi esi
je r-xdata
sub eax [ edi + 0x58 ]
jmp r-xdata
dec ecx
je r-xdata
add esi [ edi + 0x54 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
add eax [ edi + 0x58 ]
jmp r-xdata
dec ecx
dec ecx
je r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
dec ecx
je r-xdata
xor esi esi
jmp r-xdata
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
dec ecx
jne r-xdata
mov esi 0x7fffffff
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
sub_482dd2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
call sub_47bbe6
mov ebx eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x68 ]
xor edi edi
cmp eax edi
je r-xdata
test ebx 0x200000
jne r-xdata
mov ecx eax
call sub_47bdcd
test eax eax
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x68 ]
cmp eax edi
je r-xdata
mov [ ebp + 0xc ] edi
jmp r-xdata
test ebx 0x100000
jne r-xdata
mov ecx eax
call sub_47bdcd
test eax eax
je r-xdata
push edi
mov ecx esi
call sub_47a5af
mov ebx eax
push edi
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_47a717
add ebx [ ebp + 0x8 ]
jns r-xdata
mov [ ebp + 0x8 ] edi
jmp r-xdata
cmp ebx eax
jle r-xdata
xor ebx ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_47a5af
mov edi eax
push 0x1
mov ecx esi
mov [ ebp - 0x8 ] edi
call sub_47a717
add edi [ ebp + 0xc ]
jns r-xdata
mov ebx eax
cmp edi eax
jle r-xdata
xor edi edi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov edi eax
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp edi [ ebp - 0x8 ]
jne r-xdata
push 0x1
pop eax
push eax
push eax
mov eax [ ebp - 0x8 ]
mov ecx esi
sub eax edi
push eax
mov eax [ ebp - 0x4 ]
sub eax ebx
push eax
call sub_47a75e
cmp ebx [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ ebp - 0x8 ]
je r-xdata
push 0x1
push ebx
push 0x0
mov ecx esi
call sub_47a57f
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push edi
push 0x1
mov ecx esi
call sub_47a57f
sub_482ece
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0x8 ]
call sub_47e8ce
test eax eax
je r-xdata
leave
retn 0x8
push esi
push edi
lea eax [ ebp - 0x100 ]
push 0xa
push eax
call sub_469760
mov edi [ ebp + 0xc ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x100 ]
push 0x20
add edi 0x1c
push eax
push edi
call [ lstrcpynA@IAT ]
push 0x1
pop eax
pop edi
pop esi
lea eax [ esi + 0x1 ]
push eax
call sub_4680a5
pop ecx
mov [ edi ] eax
push 0x48
push [ rw-data ]
push eax
call [ MulDiv@IAT ]
mov [ edi ] eax
and [ esi ] 0x0
sub_482f46
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
and eax 0xf
cmp eax [ ebp + 0xc ]
je r-xdata
leave
retn 0x8
lea eax [ ebp - 0xc ]
push 0xa
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
sub_482f90
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x20 ]
push 0x20
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
leave
retn 0x8
sub_482fbb
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp + 0xc ]
push edi
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
xor eax eax
push esi
call [ GetDlgCtrlID@IAT ]
cmp ax 0xffff
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_483030
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
mov eax 0x100
cmp esi eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_4830a1
push ebx
push esi
push edi
call [ GetFocus@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
push 0x3
push esi
call sub_482f46
mov ebx [ GetParent@IAT ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
push esi
call ebx
mov esi eax
cmp esi edi
je r-xdata
push 0x0
push 0x0
push 0x14f
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
push 0x2
push esi
call sub_482f46
test eax eax
je r-xdata
push edi
call ebx
mov edi eax
call [ GetDesktopWindow@IAT ]
cmp edi eax
je r-xdata
sub_483118
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push edi
call [ GlobalFlags@IAT ]
and eax 0xff
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
push esi
lea esi [ eax + 0x1 ]
push edi
call [ GlobalUnlock@IAT ]
dec esi
jne r-xdata
pop esi
sub_48314e
push esi
call sub_4902c7
mov esi eax
test esi esi
je r-xdata
call sub_475d4c
xor eax eax
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_469f2f
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_46a1fb
pop ecx
pop ecx
push [ esi + 0xc ]
call sub_46965a
and [ esi + 0xc ] 0x0
pop ecx
jmp r-xdata
push 0x1
pop eax
pop esi
retn
sub_4831a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax 0xff
mov ecx [ esi ]
mov edx [ ecx - 0x8 ]
cmp edx eax
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp edx 0xfffe
push eax
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov al dl
push eax
call sub_4673f8
jmp r-xdata
call sub_4673f8
mov ecx [ ebp + 0x8 ]
push 0xffff
call sub_46741b
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
push [ eax - 0x8 ]
call sub_467442
call sub_4673f8
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
mov ax [ eax - 0x8 ]
push eax
call sub_46741b
jmp r-xdata
mov esi [ esi ]
mov ecx [ ebp + 0x8 ]
push [ esi - 0x8 ]
push esi
call sub_483589
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x8
sub_483219
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
call sub_467468
cmp [ ebp - 0x1 ] 0xff
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_467497
cmp [ ebp - 0x4 ] 0xfffe
jne r-xdata
movzx eax [ ebp - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0xffff
jne r-xdata
or eax 0xffffffff
jmp r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_4674ca
mov eax [ ebp - 0x8 ]
jmp r-xdata
sub_483270
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x8 ]
call sub_483219
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
lea esi [ ebx + 0x1 ]
imul esi [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x1
pop ebx
push [ ebp + 0x8 ]
call sub_483219
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
lea eax [ esi + ebx ]
push eax
mov ecx edi
call sub_47cacf
mov ecx [ ebp + 0x8 ]
push esi
push [ edi ]
call sub_48347a
cmp eax esi
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x0
call sub_47cacf
jmp r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x3
call sub_483cc1
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
push eax
and [ eax + ecx * 2 ] 0x0
mov ecx [ rw-data ]
mov [ edi ] ecx
mov ecx edi
lea esi [ eax - 0xc ]
call sub_47c7d8
mov ecx esi
call sub_47c563
sub_483308
mov eax sub_49ba6b
call sub_469294
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ ebx ]
push edi
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x10 ] esi
push ecx
mov ecx ebx
call [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
or [ esi + 0xc ] 0xffffffff
push 0x1
mov [ esi + 0x14 ] ecx
pop eax
xor edi edi
not ecx
test al cl
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] eax
je r-xdata
mov [ esi + 0x3c ] 0x40
mov [ esi + 0x3c ] 0x10
jmp r-xdata
mov [ esi + 0x1c ] ecx
mov [ esi + 0x1c ] eax
mov [ esi + 0x2c ] edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x2c ] ecx
mov ecx [ ebp + 0x10 ]
mov eax 0x80
mov [ esi + 0x40 ] 0x89
cmp ecx eax
mov [ esi + 0x8 ] edi
jge r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ ebp + 0x10 ]
add ecx eax
test [ esi + 0x14 ] 0x1
mov [ esi + 0x28 ] ecx
je r-xdata
mov eax [ ebx ]
push edi
push edi
push edi
push 0x3
mov ecx ebx
call [ eax + 0x50 ]
cmp eax edi
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax [ esi + 0x1c ]
cmp [ esi + 0x2c ] edi
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x24 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax ecx
mov [ ebp + 0x10 ] edi
push [ esi + 0x1c ]
call sub_47c3b5
pop ecx
mov [ esi + 0x2c ] eax
mov [ esi + 0x18 ] edi
jmp r-xdata
sub_4833e4
mov eax sub_49ba83
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx esi
call sub_48342a
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
test [ esi + 0x14 ] 0x2
jne r-xdata
call sub_48346c
sub_48342a
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
mov [ esi + 0x20 ] edi
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx edi
je r-xdata
push [ esi + 0x2c ]
call sub_47c3de
pop ecx
mov [ esi + 0x2c ] edi
mov [ esi + 0x24 ] edi
mov ecx [ esi + 0x34 ]
mov [ esi + 0x38 ] edi
cmp ecx edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ esi + 0x34 ] edi
pop edi
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_48347a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x24 ]
push edi
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
xor eax eax
jmp r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_467a70
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0xc ]
pop edi
sub eax ebx
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
cmp ebx eax
ja r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_467a70
add [ esi + 0x24 ] edi
add esp 0xc
sub ebx edi
mov edi ebx
mov eax [ esi + 0x2c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x2c ]
mov [ esi + 0x24 ] eax
lea ecx [ eax + edi ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
cmp edi ebx
jb r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp - 0x8 ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_483589
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x24 ]
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_467a70
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
mov ecx esi
call sub_483619
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov edi ebx
mov eax [ ecx ]
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x24 ]
call sub_467a70
add esp 0xc
add [ esi + 0x24 ] ebx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
sub_483619
push esi
mov esi ecx
push edi
test [ esi + 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov edx [ esi + 0x2c ]
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebx
lea edi [ esi + 0x2c ]
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0x24 ] eax
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub eax edx
push 0x1
push eax
mov edi [ ecx ]
call [ edi + 0x28 ]
mov ecx [ esi + 0x20 ]
lea edx [ esi + 0x28 ]
push edx
push edi
push [ esi + 0x1c ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x20 ]
push ebp
push ebx
sub eax edx
mov ebp [ ecx ]
push ebx
push eax
push 0x2
call [ ebp + 0x50 ]
pop ebp
mov eax [ edi ]
pop ebx
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x20 ]
sub eax edx
push eax
push edx
mov ebx [ ecx ]
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
pop esi
retn
sub_483695
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
mov eax [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x24 ]
mov edi [ esi + 0x28 ]
lea ebx [ esi + 0x28 ]
sub edi ecx
add eax edi
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x2c ]
cmp ecx eax
jbe r-xdata
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x2c ]
push ebx
push edi
push [ esi + 0x1c ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x20 ]
push 0x1
neg edi
mov eax [ ecx ]
push edi
call [ eax + 0x28 ]
mov eax [ esi + 0x28 ]
pop edi
sub eax [ esi + 0x24 ]
pop esi
pop ebx
cmp eax [ ebp - 0x8 ]
jae r-xdata
test edi edi
jle r-xdata
leave
retn 0x4
push 0x0
push 0x3
call sub_483cc1
mov ebx [ esi + 0x1c ]
mov [ ebp - 0x4 ] edi
sub ebx edi
add edi eax
push edi
push ecx
push eax
call sub_469930
mov eax [ esi + 0x2c ]
add esp 0xc
mov [ esi + 0x24 ] eax
lea ecx [ eax + edi ]
mov [ ebx ] ecx
mov eax [ esi + 0x2c ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x24 ] eax
add eax ecx
mov [ esi + 0x28 ] eax
jmp r-xdata
test ebx ebx
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov ecx [ esi + 0x20 ]
push ebx
push edi
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp - 0x4 ] eax
add edi eax
sub ebx eax
test eax eax
jbe r-xdata
sub_483757
push esi
push edi
mov edi [ esp + 0xc ]
mov eax 0xffff
cmp edi eax
mov esi ecx
jae r-xdata
push eax
mov ecx esi
call sub_46741b
push edi
mov ecx esi
call sub_467442
push edi
call sub_46741b
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_483785
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x2 ]
push esi
mov esi ecx
push eax
call sub_467497
cmp [ ebp - 0x2 ] 0xffff
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_4674ca
mov eax [ ebp - 0x8 ]
movzx eax [ ebp - 0x2 ]
jmp r-xdata
pop esi
leave
retn
sub_4837b5
mov eax sub_49bbd1
call sub_469294
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_47be8c
mov eax [ rw-data ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x60 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x40 ] edi
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x50 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x54 ] eax
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
cmp [ rw-data ] edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx esi
mov [ esi + 0x1c ] 0x1
call sub_4838b2
mov [ esi + 0x1c ] edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push 0x1c
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp ecx edi
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx [ rw-data ]
push esi
call sub_4778db
jmp r-xdata
push 0x20
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp ecx edi
mov [ ebp - 0x4 ] 0x3
je r-xdata
xor eax eax
push 0xa
call sub_4777e2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
xor eax eax
call sub_492385
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x1
mov [ rw-data ] eax
sub_4838b2
push ebx
push ebp
push esi
mov esi ecx
xor ebp ebp
push edi
mov eax [ esi + 0x60 ]
lea ecx [ esi + 0x60 ]
cmp [ eax - 0x8 ] ebp
jne r-xdata
cmp [ esi + 0x44 ] ebp
mov edi [ LoadMenuA@IAT ]
mov ebx [ LoadAcceleratorsA@IAT ]
je r-xdata
push [ esi + 0x3c ]
call sub_47e84a
cmp [ esi + 0x40 ] ebp
je r-xdata
cmp [ esi + 0x2c ] ebp
jne r-xdata
cmp [ esi + 0x48 ] ebp
je r-xdata
cmp [ esi + 0x34 ] ebp
jne r-xdata
call sub_4904f9
mov ebp [ eax + 0xc ]
movzx eax [ esi + 0x44 ]
push eax
push ebp
call edi
mov [ esi + 0x2c ] eax
movzx eax [ esi + 0x44 ]
push eax
push ebp
call ebx
mov [ esi + 0x30 ] eax
xor ebp ebp
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ esi + 0x24 ] ebp
jne r-xdata
call sub_4904f9
mov ebp [ eax + 0xc ]
movzx eax [ esi + 0x40 ]
push eax
push ebp
call edi
mov [ esi + 0x34 ] eax
movzx eax [ esi + 0x40 ]
push eax
push ebp
call ebx
mov [ esi + 0x38 ] eax
xor ebp ebp
call sub_4904f9
mov ebp [ eax + 0xc ]
movzx eax [ esi + 0x48 ]
push eax
push ebp
call edi
mov [ esi + 0x24 ] eax
movzx eax [ esi + 0x48 ]
push eax
push ebp
call ebx
mov [ esi + 0x28 ] eax
sub_48395a
mov eax sub_49bbe4
call sub_469294
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
mov edi [ DestroyMenu@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call edi
lea ecx [ esi + 0x60 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47bea6
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push eax
call edi
sub_4839e0
mov eax sub_49bbf8
call sub_469294
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
and [ ebx ] 0x0
push edi
mov eax [ esi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
push 0x4
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
push [ ebp + 0x8 ]
mov edi eax
mov eax [ edi + 0x20 ]
push eax
call sub_47de45
test eax eax
jne r-xdata
push 0x3
mov eax [ ebp + 0xc ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push 0x5
mov [ ebx ] edi
pop eax
jmp r-xdata
cmp [ ebp - 0x10 ] eax
jne r-xdata
push 0x2e
push [ ebp + 0x8 ]
call sub_46887f
pop ecx
test eax eax
pop ecx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push 0x4
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
pop esi
lea ecx [ ebp + 0xc ]
call sub_47c674
mov eax esi
sub_483a95
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
call sub_47e52c
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x5c ]
mov eax edi
sub_483abc
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push 0x14
lea eax [ ebp - 0x14 ]
push 0x0
mov esi ecx
push eax
call sub_467a10
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x50 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x54 ]
add esp 0xc
mov [ ebp - 0x14 ] eax
test ecx ecx
mov [ ebp - 0xc ] esi
jne r-xdata
call sub_47e52c
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x14 ]
push ecx
push 0x0
push 0xcf8000
mov ecx edi
push [ esi + 0x3c ]
call [ eax + 0xb8 ]
neg eax
sbb eax eax
and eax edi
pop edi
pop esi
leave
retn 0x8
sub_483b39
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
push 0x1
pop eax
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
leave
retn
sub_483b75
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop esi
leave
retn 0x4
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x7c ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_483ba5
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop esi
leave
retn
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xac ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_483bd6
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x20 ]
push r--data
call sub_47e50c
cmp [ ebp + 0xc ] 0xfffffffc
pop ecx
pop ecx
jne r-xdata
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47bfd8
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push 0xfffffffc
push [ ebp + 0x8 ]
call [ edx + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_483c21
mov eax sub_49bc14
call sub_469294
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1b0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0xc ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_47c3e9
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_488acb
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_47e84a
sub_483cc1
mov eax sub_49bc3c
call sub_469294
push ecx
push ecx
push esi
push 0x10
call sub_47c3b5
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_47dfb8
mov eax [ rw-data ]
lea ecx [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
call sub_47c7b1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_4692b3
pop esi
sub_483d3d
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_47bb56
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
call sub_475d65
sub_483d6c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx edi
call sub_483d26
cmp [ edi ] 0x0
mov esi eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ eax ]
push esi
call sub_483030
push esi
call [ GetWindowTextLengthA@IAT ]
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
call sub_47cacf
push eax
push esi
call [ GetWindowTextA@IAT ]
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_47caa7
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_483dbe
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx esi
push [ esp + 0x10 ]
call sub_483d3d
xor edi edi
cmp [ esi ] edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
cmp edx edi
jl r-xdata
push edi
push edi
push 0xf0
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov [ ecx ] edi
cmp edx 0x2
jle r-xdata
pop edi
pop esi
retn 0xc
push edi
push [ ecx ]
push 0xf1
push eax
call [ SendMessageA@IAT ]
sub_483e10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
push [ esp + 0x18 ]
mov ecx edi
call sub_483d3d
xor ebp ebp
mov esi eax
cmp [ edi ] ebp
je r-xdata
mov edi [ SendMessageA@IAT ]
xor ebx ebx
mov eax [ esp + 0x1c ]
or [ eax ] 0xffffffff
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
cmp esi ebp
je r-xdata
mov eax [ esp + 0x14 ]
push ebp
cmp [ eax ] ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x20000
je r-xdata
mov ecx [ esp + 0x20 ]
xor eax eax
cmp ebx [ ecx ]
sete al
push eax
push 0xf1
push esi
call edi
push ebp
push 0xf0
push esi
call edi
test eax eax
je r-xdata
push ebp
push ebp
push 0x87
push esi
call edi
test al 0x40
je r-xdata
inc ebx
mov eax [ esp + 0x1c ]
mov [ eax ] ebx
jmp r-xdata
sub_483ea1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_483d3d
cmp [ esi ] 0x0
mov edi eax
je r-xdata
mov esi [ ebp + 0x10 ]
push [ esi ]
push 0xffffffff
push 0x14d
push edi
call [ SendMessageA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push edi
call [ GetWindowTextLengthA@IAT ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ esi ]
push edi
call sub_483030
mov ecx [ ebp + 0x10 ]
push 0x100
push 0xff
call sub_47ca58
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
call sub_47cacf
jmp r-xdata
push eax
push edi
call [ GetWindowTextA@IAT ]
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_47caa7
jmp r-xdata
sub_483f20
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
mov ecx esi
call sub_483d3d
xor ecx ecx
cmp [ esi ] ecx
pop esi
push ecx
je r-xdata
mov ecx [ esp + 0x10 ]
push [ ecx ]
push 0x14e
push eax
call [ SendMessageA@IAT ]
push ecx
push 0x147
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
retn 0xc
sub_483f62
push esi
push edi
mov edi [ esp + 0x14 ]
cmp [ edi + 0x1c ] 0x0
jne r-xdata
pop edi
pop esi
retn 0xc
mov esi [ esp + 0xc ]
push [ esp + 0x10 ]
mov ecx esi
call sub_483d3d
push eax
mov ecx edi
call sub_47bac3
test eax eax
jne r-xdata
push [ edi + 0x1c ]
mov esi [ esi + 0x4 ]
call [ GetParent@IAT ]
cmp [ esi + 0x1c ] eax
je r-xdata
call sub_475d65
jmp r-xdata
push esi
mov ecx edi
call sub_47be6d
sub_483fae
push esi
call sub_402850
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x64 ]
sub_483fdc
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
push ebx
mov [ ebp - 0x10 ] edi
call sub_483fae
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_484154
xor esi esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x376
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
lea esi [ edi + 0x9c ]
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test bl 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax ebx
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea eax [ ebp - 0x114 ]
push 0x104
push eax
push 0x0
lea edi [ ebp - 0x114 ]
call [ GetModuleFileNameA@IAT ]
mov edi [ edi + 0x78 ]
jmp r-xdata
or ebx 0x30
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
push ebx
push edi
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ MessageBoxA@IAT ]
test esi esi
mov edi eax
je r-xdata
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
call sub_483fae
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
sub_4840c3
push ebp
mov ebp esp
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
xor ecx ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_483fdc
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x8c ]
jmp r-xdata
pop ebp
retn 0xc
sub_4840fb
mov eax sub_49ab10
call sub_469294
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47e84a
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
push esi
push eax
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_4840c3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
sub_484154
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ebp ebp
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_4841f0
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
jmp r-xdata
mov esi [ eax + 0x1c ]
call sub_402850
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor esi esi
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_484220
mov eax sub_49b01c
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
call sub_4849e8
mov ecx [ esi + 0x6c ]
test ecx ecx
je r-xdata
push edi
mov edi [ esi + 0x74 ]
and [ esi + 0x74 ] 0x0
test edi edi
je r-xdata
push esi
call sub_48bfed
mov eax [ esi + 0x5c ]
pop edi
test eax eax
je r-xdata
mov ecx edi
call sub_488b88
push edi
call sub_47c3de
pop ecx
call sub_4902c7
cmp [ eax + 0x108 ] esi
lea ecx [ eax + 0x108 ]
jne r-xdata
push eax
call sub_46965a
pop ecx
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
and [ ecx ] 0x0
or [ eax + 0x104 ] 0xffffffff
sub_4842b7
push ebp
mov ebp esp
xor eax eax
mov ecx 0x7fff
cmp [ ebp + 0xc ] eax
je r-xdata
xor edx edx
cmp [ ebp + 0x10 ] eax
je r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] eax
je r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0xc
cmp [ ebp + 0xc ] eax
je r-xdata
sub_4842e9
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
push esi
mov edx [ ecx ]
mov esi eax
and esi 0x2
and eax 0x1
push esi
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ edx + 0xb8 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
pop esi
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_48431f
push esi
push edi
mov edi [ KillTimer@IAT ]
mov esi ecx
push 0xe000
push [ esi + 0x1c ]
call edi
push 0xe001
push [ esi + 0x1c ]
call edi
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esi + 0x1c ]
call [ SetTimer@IAT ]
pop edi
pop esi
retn 0x8
sub_484355
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
pop esi
pop ebx
leave
retn 0x4
push edi
call sub_4902c7
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x8 ] edi
call [ GetCursorPos@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ ScreenToClient@IAT ]
mov eax [ esi ]
push 0x0
push [ ebp - 0xc ]
mov ecx esi
push [ ebp - 0x10 ]
call [ eax + 0x64 ]
test eax eax
mov [ ebp - 0x4 ] eax
jl r-xdata
or [ edi + 0x104 ] 0xffffffff
mov ecx esi
call sub_47a36b
mov ecx esi
mov ebx eax
call sub_47a3d7
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x104 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ ClientToScreen@IAT ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ WindowFromPoint@IAT ]
mov edi eax
test edi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx ebx
call sub_47bdcd
test eax eax
jne r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
push 0xe001
push [ esi + 0x1c ]
call ebx
mov eax [ ebp - 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov eax [ esi + 0x1c ]
cmp edi eax
je r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
mov eax [ edi + 0xcc ]
test eax eax
jne r-xdata
push eax
push [ esi + 0x1c ]
call ebx
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov eax 0xe000
pop edi
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
push edi
push eax
call [ IsChild@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ebx [ KillTimer@IAT ]
jl r-xdata
test eax eax
jne r-xdata
call [ GetCapture@IAT ]
push eax
call sub_478d3a
cmp eax esi
je r-xdata
mov eax [ esi ]
push [ ebp - 0x4 ]
mov ecx esi
call [ eax + 0xdc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xcc ]
test eax eax
je r-xdata
mov edx [ eax + 0x1c ]
xor edx edx
jmp r-xdata
cmp eax edi
je r-xdata
mov eax [ eax + 0x1c ]
mov ecx eax
call sub_47a36b
cmp eax ebx
jne r-xdata
cmp edx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_4844c5
push esi
push edi
mov esi ecx
call sub_466f90
mov edi eax
call sub_4902c7
mov ecx [ esp + 0xc ]
cmp ecx 0xffffffff
jne r-xdata
test [ esi + 0x60 ] 0x8
je r-xdata
and [ eax + 0x108 ] 0x0
test [ esi + 0x60 ] 0x8
je r-xdata
push 0x0
push ecx
push 0x362
mov [ eax + 0x108 ] esi
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
or [ esi + 0x60 ] 0x8
push 0xc8
push 0xe001
mov ecx esi
call sub_48431f
cmp [ eax + 0x104 ] ecx
jne r-xdata
push 0xe000
push [ esi + 0x1c ]
call [ KillTimer@IAT ]
jmp r-xdata
push 0x0
push 0xe001
push 0x375
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
and [ esi + 0x60 ] 0xfffffff7
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
pop edi
pop esi
retn 0x4
sub_48455c
push ebp
mov ebp esp
sub esp 0x44
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_479601
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov edi [ edi + 0x4 ]
push ebx
mov ecx esi
call sub_466f90
test [ esi + 0x64 ] 0x20
mov [ ebp - 0x10 ] eax
mov ebx 0x201
jne r-xdata
pop edi
pop esi
leave
retn 0x4
cmp edi 0x200
jb r-xdata
cmp edi ebx
je r-xdata
cmp edi 0xa0
jb r-xdata
cmp edi 0x209
jbe r-xdata
cmp edi 0x202
jne r-xdata
mov ecx esi
call sub_47a448
test eax eax
pop ebx
je r-xdata
cmp edi 0xa9
ja r-xdata
call sub_4902c7
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] ecx
push [ esi + 0x1c ]
call [ ScreenToClient@IAT ]
push 0x2c
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_467a10
add esp 0xc
mov eax [ esi ]
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] 0x28
push ecx
mov ecx esi
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call [ eax + 0x64 ]
cmp [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
cmp edi ebx
jne r-xdata
push [ ebp - 0x20 ]
call sub_46965a
pop ecx
push [ ebp + 0x8 ]
mov ecx esi
call sub_47b562
mov edi [ ebp - 0x10 ]
push [ ebp + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0x90 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
cmp edi ebx
je r-xdata
test [ ebp - 0x3d ] 0x80
je r-xdata
mov ecx edi
call sub_47a2e8
test eax eax
mov [ ebp - 0x10 ] eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jge r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x104 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
push 0xe001
push [ esi + 0x1c ]
call [ KillTimer@IAT ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp edi 0x202
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x104 ] eax
test [ esi + 0x60 ] 0x8
jne r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
push 0xc8
push 0xe001
mov eax [ esi ]
push [ ebp - 0x4 ]
mov ecx esi
call [ eax + 0xdc ]
jmp r-xdata
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ ecx + 0x104 ]
je r-xdata
push 0x12c
push 0xe000
jmp r-xdata
mov ecx esi
call sub_48431f
jmp r-xdata
sub_484755
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2b
mov ebx ecx
jb r-xdata
push [ ebp + 0x10 ]
mov ecx ebx
push [ ebp + 0xc ]
push edi
call sub_479c02
cmp edi 0x2f
jbe r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ ebx ]
lea ecx [ ebp + 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
mov ecx ebx
push edi
call [ eax + 0x9c ]
test eax eax
jne r-xdata
cmp edi 0x39
je r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx ebx
call sub_466f90
push esi
push [ ebp + 0xc ]
push edi
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
cmp edi 0x4e
mov [ ebp + 0x10 ] eax
jne r-xdata
cmp edi 0x4e
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x8 ]
mov eax 0xfffffdf8
cmp ecx eax
mov edx 0xfffffdee
je r-xdata
cmp edi 0x111
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp ecx edx
jne r-xdata
push esi
mov ecx ebx
push [ ebp + 0xc ]
push 0x4e
call sub_479c02
mov [ ebp + 0x10 ] eax
cmp [ eax ] 0x0
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_48481b
push esi
push edi
mov esi ecx
push 0x0
push ecx
push ecx
mov edi [ esi ]
mov ecx esp
push [ esp + 0x1c ]
call sub_41e0c0
mov ecx esi
call [ edi + 0x64 ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
lea ecx [ eax + 0x50000 ]
neg eax
sbb eax eax
and eax ecx
add eax 0x10000
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_48485e
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
push 0x0
push 0x46
push [ edi + 0x1c ]
call [ DefWindowProcA@IAT ]
test [ esi + 0x18 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x14 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
mov esi [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
sub esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
sub ebx [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
cmp ecx esi
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] eax
je r-xdata
cmp eax ebx
je r-xdata
test [ edi + 0x65 ] 0x4
je r-xdata
test [ edi + 0x65 ] 0x8
je r-xdata
push eax
push ecx
sub ecx [ rw-data ]
push 0x0
lea eax [ ebp - 0x14 ]
push ecx
push eax
call [ SetRect@IAT ]
lea eax [ ebp - 0x14 ]
push 0x1
push eax
push [ edi + 0x1c ]
call [ InvalidateRect@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push esi
sub esi [ rw-data ]
push 0x0
push esi
push eax
call [ SetRect@IAT ]
lea eax [ ebp - 0x14 ]
push 0x1
push eax
push [ edi + 0x1c ]
call [ InvalidateRect@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov esi [ SetRect@IAT ]
push eax
sub eax [ rw-data ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call esi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
push [ edi + 0x1c ]
call [ InvalidateRect@IAT ]
push ebx
sub ebx [ rw-data ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push ebx
push 0x0
push eax
call esi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
push [ edi + 0x1c ]
call [ InvalidateRect@IAT ]
sub_48495f
push esi
mov esi ecx
call sub_478ca1
cmp eax 0xffffffff
jne r-xdata
test [ esi + 0x64 ] 0x10
je r-xdata
or eax eax
jmp r-xdata
push edi
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
mov edi eax
mov ecx edi
mov eax [ edi ]
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_476bb0
pop esi
retn 0x4
xor eax eax
pop edi
push esi
lea ecx [ edi + 0x6c ]
mov [ esi + 0x6c ] edi
call sub_4778db
sub_4849b2
push esi
mov esi ecx
call sub_4902c7
cmp [ eax + 0x108 ] esi
jne r-xdata
mov ecx [ esi + 0x6c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
mov ecx esi
call sub_479428
pop esi
retn
push esi
call sub_48bfed
and [ esi + 0x6c ] 0x0
sub_4849e8
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx esi
call sub_479569
pop esi
retn
call sub_48d484
test eax eax
je r-xdata
mov ecx esi
call sub_48d473
mov edx [ eax ]
mov ecx eax
call [ edx + 0x58 ]
pop esi
retn
sub_484a13
push esi
mov esi ecx
call sub_48d484
test eax eax
mov ecx esi
jne r-xdata
call sub_47a40b
push 0x3
pop eax
call sub_478ca1
jmp r-xdata
pop esi
retn 0xc
sub_484a34
mov eax sub_49b030
call sub_469294
sub esp 0x54
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x60 ]
call sub_4805ce
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc8 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call sub_480640
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx esi
call [ eax + 0xd8 ]
sub_484a86
mov eax sub_49b044
call sub_469294
sub esp 0x34
push esi
mov esi ecx
push edi
push esi
lea ecx [ ebp - 0x40 ]
call sub_48051a
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
call sub_4803ee
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
mov edi [ OffsetRect@IAT ]
neg eax
neg ecx
push eax
lea eax [ ebp - 0x2c ]
push ecx
push eax
call edi
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x40 ]
push eax
call sub_480238
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
neg eax
neg ecx
push eax
lea eax [ ebp - 0x1c ]
push ecx
push eax
call edi
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_484f03
lea eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x40 ]
push eax
call sub_48027a
push 0x0
push [ ebp - 0x3c ]
push 0x14
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_4850b1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_48058c
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_484b53
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
lea eax [ ebp + 0xc ]
mov ecx esi
push eax
call sub_47ab07
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ rw-data ]
mov eax [ ebp + 0x8 ]
push [ rw-data ]
push [ ebp + 0x10 ]
push esi
push [ eax + 0x4 ]
call sub_47b051
test eax eax
jne r-xdata
mov esi [ esi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ rw-data ]
mov ecx edi
call sub_478ca1
jmp r-xdata
sub_484bab
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov ecx esi
call sub_478ca1
mov eax [ esi ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x64 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
push [ esi + 0x1c ]
call [ ClientToScreen@IAT ]
mov ecx [ esi + 0x74 ]
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
call [ eax ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_484bf1
push esi
mov esi ecx
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov ecx esi
call sub_478ca1
mov eax [ esi ]
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call [ eax + 0x64 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x74 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
jmp r-xdata
pop esi
retn 0xc
sub_484c23
push ebx
push esi
push edi
mov esi ecx
call sub_47bbe6
mov ecx [ esi + 0x60 ]
mov edi 0x10000000
and eax edi
xor ebx ebx
xor edx edx
test cl 0x1
je r-xdata
test cl 0x2
je r-xdata
cmp eax ebx
je r-xdata
and ecx 0xfffffffc
cmp edx ebx
mov [ esi + 0x60 ] ecx
je r-xdata
cmp eax ebx
jne r-xdata
mov edx 0x80
jmp r-xdata
mov ecx esi
call sub_47bbe6
test edi eax
je r-xdata
or edx 0x17
mov ecx esi
push edx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_47bd57
push 0x40
pop edx
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov ecx [ esi + 0x70 ]
cmp ecx ebx
je r-xdata
mov ecx esi
call sub_466f90
mov edi eax
cmp edi ebx
je r-xdata
call sub_47bbe6
test edi eax
je r-xdata
mov ecx esi
call sub_47a2e8
mov edi eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0xc0 ]
cmp edi ebx
je r-xdata
sub_484cd5
push ebx
push esi
push edi
mov esi ecx
call sub_47bbe6
mov edi eax
mov eax [ esi + 0x64 ]
mov edx 0x10000000
and eax 0xff00
and edi edx
or edi eax
mov eax [ esi + 0x60 ]
test al 0x3
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
test al 0x1
je r-xdata
test edx edi
jne r-xdata
test edx edi
je r-xdata
and al 0xfc
mov [ esi + 0x60 ] eax
push 0x40
pop ecx
mov ecx 0x80
jmp r-xdata
or ecx 0x17
and al 0xfc
push ecx
push edx
push edx
push edx
push edx
push edx
push [ esi + 0x1c ]
mov [ esi + 0x60 ] eax
push [ ebx ]
call [ DeferWindowPos@IAT ]
mov [ ebx ] eax
jmp r-xdata
mov ebx [ esp + 0x10 ]
xor edi edx
xor edx edx
cmp [ ebx ] edx
je r-xdata
sub_484d45
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ecx ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
push esi
call [ eax + 0xcc ]
test eax 0x10000000
mov [ ebp + 0xc ] eax
je r-xdata
xor eax eax
pop esi
leave
retn 0x8
test ah 0xf0
je r-xdata
push ebx
lea eax [ esi + 0x4 ]
push edi
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ CopyRect@IAT ]
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
sub edi [ ebp - 0x1c ]
sub ebx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ esi + 0x1c ] edx
mov eax [ ecx + 0x64 ]
setne dl
test al 0x4
je r-xdata
test [ ebp + 0xd ] 0xa0
je r-xdata
test al 0x1
je r-xdata
or edx 0x10
or edx 0xa
jmp r-xdata
or edx 0x6
jmp r-xdata
cmp ecx ebx
jl r-xdata
mov eax edi
mov eax [ ecx ]
push edx
lea edx [ ebp - 0xc ]
push 0xffffffff
push edx
call [ eax + 0xbc ]
mov ecx eax
mov eax [ ecx ]
cmp eax edi
mov ecx [ ecx + 0x4 ]
jl r-xdata
mov edi [ ebp + 0xc ]
test edi 0xa000
je r-xdata
mov ecx ebx
test edi 0x5000
je r-xdata
mov edx [ esi + 0x14 ]
add [ esi + 0x18 ] ecx
cmp edx eax
jg r-xdata
mov edx [ ebp - 0x1c ]
pop edi
add eax edx
pop ebx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
add eax ecx
cmp [ esi ] 0x0
mov [ ebp - 0x10 ] eax
je r-xdata
mov edx [ esi + 0x18 ]
add [ esi + 0x14 ] eax
cmp edx ecx
jg r-xdata
test edi 0x2000
mov [ esi + 0x14 ] edx
je r-xdata
mov edx eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x1c ]
push esi
call sub_47a93e
test edi 0x1000
mov [ esi + 0x18 ] edx
je r-xdata
mov edx ecx
test edi 0x8000
je r-xdata
add [ esi + 0x8 ] ecx
jmp r-xdata
test edi 0x4000
je r-xdata
add [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
sub edx ecx
sub [ esi + 0x10 ] ecx
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
sub [ esi + 0xc ] eax
mov [ ebp - 0x1c ] edx
sub_484e7a
push esi
mov esi ecx
and [ esi + 0x60 ] 0xfffffffc
cmp [ esp + 0x8 ] 0x0
je r-xdata
call sub_47bbe6
test eax 0x10000000
je r-xdata
call sub_47bbe6
test eax 0x10000000
jne r-xdata
pop esi
retn 0x4
or [ esi + 0x60 ] 0x1
or [ esi + 0x60 ] 0x2
jmp r-xdata
sub_484eae
mov eax [ ecx + 0x60 ]
test al 0x1
jne r-xdata
xor eax eax
retn
test al 0x2
jne r-xdata
push 0x1
pop eax
retn
call sub_47bbe6
test eax 0x10000000
jne r-xdata
sub_484ecc
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
mov esi ecx
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
push [ ebp + 0x8 ]
call sub_484f03
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
push [ ebp + 0x8 ]
call sub_4850b1
pop esi
leave
retn 0x4
sub_484f03
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ecx + 0x64 ]
push ebx
test ch 0xf
mov [ ebp - 0x14 ] ecx
je r-xdata
pop ebx
leave
retn 0x8
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ebx
lea edi [ ebp - 0x34 ]
cmp [ rw-data ] 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ebx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jne r-xdata
mov [ ebp - 0x10 ] ecx
mov [ ebp + 0xc ] eax
and [ ebp - 0x10 ] 0x80
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x4 ] 0x200
je r-xdata
dec [ ebp - 0x2c ]
dec [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
and [ ebp - 0x8 ] 0x800
je r-xdata
add [ ebp - 0x20 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
and [ ebp - 0xc ] 0x100
je r-xdata
sub edi eax
xor eax eax
cmp [ ebp - 0x4 ] eax
je r-xdata
push [ ebp + 0xc ]
mov eax edi
sub eax [ ebp - 0x20 ]
mov ecx esi
push eax
push 0x1
push [ ebp - 0x20 ]
push 0x0
call sub_489d06
mov eax [ ebp - 0x14 ]
and eax 0x400
mov [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push 0x1
push [ ebx + 0x8 ]
push eax
push eax
call sub_489d06
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov eax edi
sub eax [ ebp - 0x20 ]
mov ecx esi
push eax
push 0xffffffff
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
call sub_489d06
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push 0xffffffff
push [ ebx + 0x8 ]
push [ ebp - 0x28 ]
push 0x0
call sub_489d06
xor eax eax
pop edi
cmp [ ebp - 0xc ] eax
pop esi
je r-xdata
mov eax [ rw-data ]
cmp [ ebp - 0xc ] 0x0
mov [ ebp + 0xc ] eax
je r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ rw-data ]
add [ ebx ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push eax
mov eax edi
sub eax [ ebp - 0x20 ]
mov ecx esi
push eax
push 0x1
push [ ebp - 0x20 ]
push 0x1
call sub_489d06
cmp [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ rw-data ]
add [ ebx + 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push 0x1
push [ ebx + 0x8 ]
push 0x1
push 0x0
call sub_489d06
cmp [ ebp - 0x8 ] eax
je r-xdata
mov ecx [ rw-data ]
sub [ ebx + 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp + 0xc ]
sub edi [ ebp - 0x20 ]
mov ecx esi
push edi
push 0xffffffff
push [ ebp - 0x20 ]
push [ ebx + 0x8 ]
call sub_489d06
mov eax [ rw-data ]
sub [ ebx + 0xc ] eax
push [ ebp + 0xc ]
mov ecx esi
push 0xffffffff
push [ ebx + 0x8 ]
push [ ebx + 0xc ]
push 0x0
call sub_489d06
sub_4850b1
mov eax [ ecx + 0x64 ]
push esi
mov edx eax
push edi
and edx r--data
cmp edx __dos_header
jne r-xdata
pop edi
pop esi
retn 0x8
mov edx [ ecx + 0x48 ]
test ah 0xa0
mov eax [ esp + 0x10 ]
je r-xdata
mov edi [ eax + 0x8 ]
mov esi [ eax ]
sub edi [ ecx + 0x4c ]
push [ rw-data ]
mov eax [ eax + 0x4 ]
push [ rw-data ]
sub edi esi
sub edi edx
inc eax
push 0x3
inc eax
push edi
add esi edx
push eax
push esi
mov edi [ eax + 0xc ]
mov esi [ eax + 0x4 ]
sub edi [ ecx + 0x4c ]
push [ rw-data ]
mov eax [ eax ]
push [ rw-data ]
sub edi esi
sub edi edx
add esi edx
inc eax
push edi
push 0x3
inc eax
push esi
push eax
jmp r-xdata
mov ecx [ esp + 0x24 ]
call sub_489d7d
sub_48512a
mov edx [ ecx + 0x64 ]
mov eax [ esp + 0x4 ]
test dh 0x1
push esi
je r-xdata
test dh 0x2
je r-xdata
mov esi [ rw-data ]
add [ eax ] esi
test dh 0x4
je r-xdata
mov esi [ rw-data ]
add [ eax + 0x4 ] esi
test dh 0x8
pop esi
je r-xdata
mov esi [ rw-data ]
sub [ eax + 0x8 ] esi
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov edx [ rw-data ]
sub [ eax + 0xc ] edx
mov edx [ ecx + 0x48 ]
add [ eax ] edx
mov edx [ ecx + 0x40 ]
add [ eax + 0x4 ] edx
mov edx [ ecx + 0x4c ]
sub [ eax + 0x8 ] edx
mov edx [ ecx + 0x44 ]
sub [ eax + 0xc ] edx
mov ecx [ ecx + 0x64 ]
and ecx r--data
cmp ecx __dos_header
jne r-xdata
mov edx [ ecx + 0x40 ]
add [ eax ] edx
mov edx [ ecx + 0x48 ]
add [ eax + 0x4 ] edx
mov edx [ ecx + 0x44 ]
sub [ eax + 0x8 ] edx
mov edx [ ecx + 0x4c ]
sub [ eax + 0xc ] edx
mov ecx [ ecx + 0x64 ]
and ecx r--data
cmp ecx __dos_header
jne r-xdata
retn 0x8
add [ eax + 0x4 ] 0x7
add [ eax ] 0x7
jmp r-xdata
sub_4851cd
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LoadResource@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push eax
call [ LockResource@IAT ]
mov ebx eax
test ebx ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edi [ ebx ]
add edi 0x40
push edi
call sub_469520
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
push ebx
push esi
call sub_467a70
mov edi esi
add esp 0xc
add edi [ esi ]
mov [ ebp + 0xc ] 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add edx 0x8
inc ecx
cmp edx r--data
jl r-xdata
push [ ecx * 8 + r--data ]
lea ebx [ ecx * 8 + r--data ]
mov [ ebp - 0x4 ] ebx
call [ GetSysColor@IAT ]
push [ ebx ]
xor edx edx
mov dl ah
mov ebx edx
call [ GetSysColor@IAT ]
mov bh al
mov eax [ ebp - 0x4 ]
shl ebx 0x8
push [ eax ]
call [ GetSysColor@IAT ]
shr eax 0x10
movzx eax al
or ebx eax
mov [ edi ] ebx
cmp [ ecx * 8 + r--data ] 0x12
je r-xdata
cmp eax [ edx ]
je r-xdata
jmp r-xdata
mov eax [ edi ]
xor ecx ecx
mov edx r--data
mov edi [ esi + 0x4 ]
mov ebx [ esi + 0x8 ]
push 0x0
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] ebx
call [ GetDC@IAT ]
push ebx
push edi
push eax
mov [ ebp + 0x10 ] eax
call [ CreateCompatibleBitmap@IAT ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
add edi 0x4
dec [ ebp + 0xc ]
jne r-xdata
mov [ edi ] 0xffffff
jmp r-xdata
push [ ebp + 0x10 ]
push 0x0
call [ ReleaseDC@IAT ]
push esi
call sub_46965a
mov eax [ ebp - 0x4 ]
pop ecx
push [ ebp + 0x10 ]
call [ CreateCompatibleDC@IAT ]
push [ ebp - 0x4 ]
mov ebx [ SelectObject@IAT ]
mov edi eax
push edi
call ebx
mov cl [ esi + 0xe ]
mov [ ebp - 0xc ] eax
xor eax eax
push 0xcc0020
push eax
push esi
push 0x1
pop edx
shl edx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + edx * 4 + 0x28 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push eax
push edi
call [ StretchDIBits@IAT ]
push [ ebp - 0xc ]
push edi
call ebx
push edi
call [ DeleteDC@IAT ]
sub_485358
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x24 ]
mov eax [ esi ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
push 0x417
call [ eax + 0xa0 ]
mov edi [ ebp + 0xc ]
and [ ebp - 0x1a ] 0x0
and [ ebp - 0x19 ] 0x0
lea eax [ ebp - 0x24 ]
xor [ edi + 0x8 ] 0x4
and [ edi + 0xa ] 0x0
and [ edi + 0xb ] 0x0
push 0x14
push eax
push edi
call sub_468550
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx esi
call sub_47bbe6
push 0x0
push 0x0
push 0x10000000
mov ecx esi
mov ebx eax
call sub_47bc1a
mov eax [ esi ]
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
push 0x416
call [ eax + 0xa0 ]
mov eax [ esi ]
push edi
push [ ebp + 0x8 ]
mov ecx esi
push 0x415
call [ eax + 0xa0 ]
and ebx 0x10000000
push 0x0
push ebx
push 0x0
mov ecx esi
call sub_47bc1a
mov al [ edi + 0x9 ]
push 0x1
mov cl al
pop ebx
xor cl [ ebp - 0x1b ]
test bl cl
jne r-xdata
push ebx
push 0x0
test bl al
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
push [ ebp + 0x8 ]
push 0x41d
call [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ edi ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push ebx
push eax
jmp r-xdata
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
sub_485460
push esi
mov esi ecx
cmp [ esi + 0x84 ] 0x0
je r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0xc ]
push 0x41d
call [ eax + 0xa0 ]
test eax eax
pop esi
jne r-xdata
call sub_48549a
retn 0x8
push [ esp + 0x8 ]
call [ SetRectEmpty@IAT ]
sub_48549a
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ecx + 0x64 ]
and [ ecx + 0x84 ] 0x0
mov eax edx
and eax 0xa000
neg eax
sbb eax eax
neg eax
test dl 0x1
je r-xdata
test eax eax
mov eax [ ecx ]
je r-xdata
test dl 0x4
je r-xdata
push 0x50
push 0x0
lea edx [ ebp - 0x8 ]
push 0x4a
push 0x0
lea edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ecx ]
push 0x46
push 0x0
lea edx [ ebp - 0x8 ]
jmp r-xdata
push edx
call [ eax + 0xbc ]
leave
retn
sub_4854ea
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_485339
movzx eax [ ebp - 0xc ]
movzx ecx [ ebp - 0xb ]
shl eax 0x10
or eax ecx
leave
retn 0x4
sub_48550d
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x8 ]
call sub_485339
mov eax [ ebp + 0xc ]
cmp [ ebp - 0xb ] al
jne r-xdata
mov [ ebp - 0xb ] al
mov ecx esi
shr eax 0x10
mov [ ebp - 0xc ] al
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_485358
mov [ esi + 0x84 ] 0x1
mov ecx eax
shr ecx 0x10
cmp [ ebp - 0xc ] cl
je r-xdata
pop esi
leave
retn 0x8
sub_48555a
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
xor ebx ebx
push ebx
push ebx
mov eax [ esi ]
push 0x455
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call [ eax + 0xa0 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
pop esi
pop ebx
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ecx + 0x9 ]
test [ edi - 0x1 ] 0x8
jne r-xdata
cmp [ rw-data ] 0x40047
je r-xdata
add edi 0x14
dec [ ebp - 0x4 ]
jne r-xdata
mov al [ edi ]
mov ecx [ esi + 0x90 ]
mov [ ebp + 0x13 ] al
and [ ebp + 0x13 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push 0x3
add eax eax
pop ecx
cdq
idiv ecx
mov [ ebp + 0xc ] eax
mov eax [ edi - 0x9 ]
mov ecx esi
mov [ ebp + 0xc ] eax
call sub_47bbe6
test ah 0x8
jne r-xdata
pop edi
test al 0x8
je r-xdata
test [ edi - 0x1 ] 0x20
je r-xdata
mov eax [ ebp - 0x18 ]
add eax ecx
cmp eax [ ebp - 0x10 ]
jle r-xdata
test [ ebp - 0x8 ] 0x1
je r-xdata
mov eax [ edi - 0x9 ]
mov edx [ ebp - 0x18 ]
add eax edx
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ esi + 0x94 ]
mov edx [ ebp + 0xc ]
add eax ebx
add eax edx
jmp r-xdata
mov eax [ esi + 0x94 ]
add eax ebx
mov [ ebp - 0x10 ] eax
add ecx [ rw-data ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp eax [ ebp - 0xc ]
jle r-xdata
mov [ ebp - 0xc ] eax
add [ ebp - 0x18 ] ecx
mov eax [ edi - 0x9 ]
add [ ebp - 0x18 ] eax
jmp r-xdata
and [ ebp - 0x18 ] 0x0
add ebx [ esi + 0x94 ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
test [ edi - 0x1 ] 0x20
je r-xdata
add ebx [ ebp + 0xc ]
sub_48567c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
xor ebx ebx
cmp [ ebp + 0xc ] esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] esi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop esi
inc eax
pop ebx
leave
retn 0xc
push edi
mov edi [ ebp + 0x8 ]
inc esi
cmp esi [ ebp + 0xc ]
jl r-xdata
test [ edx + 0x9 ] 0x1
je r-xdata
lea eax [ esi + esi * 4 ]
lea edx [ edi + eax * 4 ]
and [ edx + 0x8 ] 0xdf
lea eax [ edx + 0x8 ]
test [ eax ] 0x8
jne r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x90 ]
mov edx [ edx ]
jmp r-xdata
mov ebx ecx
test esi esi
mov edx esi
jl r-xdata
lea ecx [ edx + ebx ]
cmp ecx [ ebp + 0x10 ]
jle r-xdata
lea eax [ esi - 0x1 ]
test eax eax
jl r-xdata
mov bl [ eax ]
test bl 0x20
jne r-xdata
lea edx [ eax + eax * 4 ]
lea edx [ edi + edx * 4 + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
test bl 0x8
jne r-xdata
dec edx
sub eax 0x14
test edx edx
jge r-xdata
cmp [ eax - 0x4 ] 0x0
jne r-xdata
dec eax
sub edx 0x14
test eax eax
jge r-xdata
test [ edx + 0x1 ] 0x1
je r-xdata
test bl 0x8
je r-xdata
mov bl [ edx ]
test bl 0x20
jne r-xdata
jmp r-xdata
mov esi eax
xor ebx ebx
lea eax [ eax + eax * 4 ]
cmp [ edx - 0x4 ] 0x0
je r-xdata
mov esi edx
xor ebx ebx
lea eax [ edx + edx * 4 ]
jmp r-xdata
or [ edi + eax * 4 + 0x8 ] 0x20
inc [ ebp - 0x4 ]
lea eax [ edi + eax * 4 + 0x8 ]
jmp r-xdata
sub_485756
push ebp
mov ebp esp
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
push esi
push edi
mov edi ecx
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ecx edi
push [ ebp + 0x8 ]
call sub_48567c
push ebx
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
mov ecx edi
push eax
call sub_48555a
mov esi [ eax ]
push 0x7fff
push ebx
mov ecx edi
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_48567c
push ebx
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
mov ecx edi
push eax
call sub_48555a
mov ebx [ eax ]
mov eax [ ebp + 0x10 ]
push eax
mov [ ebp + 0x14 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_48567c
push ebx
mov ecx edi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_48567c
cmp eax [ ebp - 0x4 ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ esi + ebx ]
mov ecx edi
cdq
sub eax edx
sar eax 0x1
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_48567c
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
mov ecx edi
push [ ebp + 0x8 ]
push eax
call sub_48555a
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ ebp + 0x10 ] ecx
jge r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
push eax
call sub_48555a
mov ecx eax
mov eax [ ecx ]
push eax
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jle r-xdata
jle r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
cmp esi ecx
jne r-xdata
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_48567c
mov eax [ ebp + 0x14 ]
mov ecx edi
add eax ebx
cdq
sub eax edx
mov esi eax
sar esi 0x1
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_48567c
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov ebx [ eax ]
jmp r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
cmp ebx esi
je r-xdata
mov [ ebp + 0x14 ] esi
jmp r-xdata
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp esi ebx
jge r-xdata
push ebx
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_48567c
mov ebx esi
cmp ebx [ ebp + 0x14 ]
jl r-xdata
jmp r-xdata
sub_4858b3
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
mov eax [ ebx ]
push edi
push edi
push 0x418
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] edi
call [ eax + 0xa0 ]
mov esi eax
cmp esi edi
mov [ ebp - 0x18 ] esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call [ SetRectEmpty@IAT ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x40 ]
and esi 0x2
mov ecx ebx
push esi
push eax
call sub_48512a
mov eax [ ebp - 0x3c ]
push esi
sub eax [ ebp - 0x34 ]
mov ecx ebx
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x38 ]
add [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
and eax 0x1
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_4842b7
mov ecx eax
pop edi
pop esi
pop ebx
mov eax [ ecx ]
cmp [ ebp - 0x30 ] eax
mov ecx [ ecx + 0x4 ]
jg r-xdata
lea eax [ esi + esi * 4 ]
shl eax 0x2
push eax
call sub_47c3b5
test esi esi
pop ecx
mov [ ebp - 0x4 ] eax
jle r-xdata
cmp [ ebp - 0x2c ] ecx
jg r-xdata
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x30 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
mov [ ebp - 0x2c ] ecx
push [ ebp - 0x8 ]
mov ecx ebx
push edi
call sub_485339
add [ ebp - 0x8 ] 0x14
inc edi
cmp edi esi
jl r-xdata
xor edi edi
cmp esi edi
jle r-xdata
mov eax [ ebx + 0x64 ]
test al 0x2
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push [ ebp - 0x4 ]
mov ecx ebx
push eax
call sub_48555a
mov ecx [ eax ]
test [ ebp + 0xc ] 0x40
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
je r-xdata
mov ecx eax
and ecx 0x4
mov [ ebp - 0x1c ] ecx
je r-xdata
push [ ebp - 0x4 ]
call sub_47c3de
pop ecx
mov eax [ ebx + 0x84 ]
and [ ebx + 0x84 ] 0x0
test esi esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp + 0xc ]
push edi
and al 0x2
neg al
sbb eax eax
and eax 0x7fff
push eax
test [ ebp + 0xc ] 0x4
jne r-xdata
mov eax [ ebx + 0x64 ]
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx esi
add eax 0x4
mov [ ebp - 0x14 ] eax
push edi
push [ ebx + 0x54 ]
jmp r-xdata
test [ ebp + 0xc ] 0x8
je r-xdata
and [ ebp + 0x10 ] 0x0
test esi esi
jle r-xdata
test al 0x4
je r-xdata
add eax 0x14
dec ecx
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
push esi
mov ecx ebx
push [ ebp - 0x4 ]
call sub_485756
test [ ebp + 0xc ] 0x10
je r-xdata
push edi
push 0x7fff
jmp r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x54 ] eax
test [ eax + 0x5 ] 0x1
je r-xdata
test edi edi
jle r-xdata
inc edi
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
push edi
push edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x84 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edi
lea esi [ eax + 0x8 ]
mov [ ebp + 0x10 ] esi
push [ ebp - 0xc ]
mov ecx ebx
push [ ebp + 0x10 ]
call sub_485358
inc [ ebp + 0x10 ]
add [ ebp - 0xc ] 0x14
cmp [ ebp + 0x10 ] esi
jl r-xdata
lea eax [ edi + edi * 2 ]
shl eax 0x3
push eax
call sub_47c3b5
test eax eax
pop ecx
je r-xdata
test al 0x1
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call [ SetRectEmpty@IAT ]
mov eax [ ebp + 0xc ]
mov ecx ebx
and eax 0x2
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_48512a
mov eax [ ebp + 0xc ]
and eax 0x20
je r-xdata
add esi 0x18
dec [ ebp - 0x14 ]
mov [ ebp + 0x10 ] esi
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ ebp - 0x3c ]
mov eax [ esi ]
mov esi [ ebp - 0x40 ]
sub edi ecx
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp + 0x10 ]
sub esi eax
mov eax [ ebx ]
push [ ecx - 0x8 ]
mov ecx ebx
call [ eax + 0xe0 ]
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x18 ]
add esi eax
mov eax [ ebp - 0x3c ]
add edi eax
xor eax eax
push 0x15
push eax
push eax
push edi
push esi
push eax
call sub_47bd57
mov esi [ ebp + 0x10 ]
xor eax eax
dec edi
mov [ ebp + 0x10 ] edi
jmp r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x28 ]
mov ecx [ ebp - 0x1c ]
sub ecx [ ebp - 0x24 ]
jmp r-xdata
push [ esi - 0x4 ]
mov ecx ebx
call sub_47bb2c
test eax eax
mov [ ebp - 0x18 ] eax
je r-xdata
push [ ebp - 0x10 ]
call sub_47c3de
pop ecx
inc [ ebp + 0x10 ]
add eax 0x14
cmp [ ebp + 0x10 ] esi
mov [ ebp - 0x14 ] eax
jl r-xdata
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x10 ] 0x0
mov [ ebp - 0x10 ] eax
lea edi [ eax + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] eax
push eax
mov eax [ ebp + 0x10 ]
add ecx eax
push ecx
jmp r-xdata
test [ eax + 0x5 ] 0x1
je r-xdata
mov edi [ ebp - 0xc ]
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x40 ]
mov [ edi - 0x8 ] ecx
mov eax [ eax ]
mov [ edi - 0x4 ] eax
mov eax [ ebx ]
push edx
push ecx
mov ecx ebx
call [ eax + 0xe0 ]
lea eax [ ebp - 0x40 ]
mov ecx ebx
push eax
call sub_48042a
lea esi [ ebp - 0x40 ]
inc [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x8 ] 0x18
mov eax [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x18 ]
mov edi [ ebp - 0x8 ]
sub_485bdd
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp + 0xc ] eax
push 0xffffffff
setne al
neg edx
sbb edx edx
and edx 0x2
or eax edx
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4858b3
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_485c15
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4858b3
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
test al 0x44
jne r-xdata
mov edx eax
and edx 0x8
jne r-xdata
push esi
mov esi [ ecx ]
and eax 0x1
push edx
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ esi + 0xb8 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
pop esi
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test al 0x10
je r-xdata
leave
retn 0xc
sub_485c76
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
push ebx
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_479677
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi ]
xor edi edi
push edi
push edi
push 0x418
mov ecx esi
call [ eax + 0xa0 ]
test eax eax
mov [ ebp + 0x10 ] eax
jle r-xdata
or eax 0xffffffff
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push 0x41d
mov ecx esi
call [ eax + 0xa0 ]
test eax eax
je r-xdata
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
push [ ebp + 0xc ]
inc [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x24 ]
push ecx
push edi
push 0x417
mov ecx esi
call [ eax + 0xa0 ]
test eax eax
je r-xdata
test [ ebp - 0x1b ] 0x1
je r-xdata
push edi
mov ecx esi
call sub_485447
test ebx ebx
je r-xdata
test eax eax
jne r-xdata
cmp [ ebx ] 0x28
jb r-xdata
mov ecx [ esi + 0x1c ]
lea edi [ ebx + 0x10 ]
lea esi [ ebp - 0x10 ]
or [ ebx + 0x24 ] 0xffffffff
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] eax
movsd [ edi ] [ esi ]
sub_485d59
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
mov esi ecx
push eax
call [ SetRectEmpty@IAT ]
mov eax [ esi + 0x64 ]
mov ecx esi
and eax 0xa000
neg eax
sbb eax eax
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_48512a
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
pop esi
add [ eax ] ecx
mov ecx [ ebp - 0xc ]
add [ eax + 0x4 ] ecx
cmp [ rw-data ] 0x40047
mov ecx [ eax + 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
add [ eax + 0xc ] ecx
leave
retn 0x8
add ecx 0xfffffffe
mov [ eax + 0x4 ] ecx
sub_485dba
push esi
mov esi ecx
xor eax eax
cmp [ esi + 0x1c ] eax
je r-xdata
mov [ esi + 0x84 ] 0x1
pop esi
retn 0x8
mov ecx [ esp + 0x8 ]
xor ecx [ esp + 0xc ]
test ch 0xf
je r-xdata
push 0x33
push eax
push eax
push eax
push eax
push eax
mov ecx esi
call sub_47bd57
sub_485ded
push ebx
push esi
mov esi ecx
push edi
mov edi [ esp + 0x10 ]
mov ebx [ esi + 0x64 ]
push edi
mov eax ebx
and ah 0xf0
mov [ esi + 0x64 ] eax
call sub_48485e
test bl 0x4
mov [ esi + 0x64 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
test [ edi + 0x18 ] 0x1
jne r-xdata
push 0x1
push 0x0
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
sub_485e68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor edi edi
xor ebx ebx
cmp [ rw-data ] 0x40047
mov esi ecx
jl r-xdata
mov ecx esi
call sub_478ca1
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_47bbe6
push edi
push 0x8800
push edi
mov ecx esi
mov ebx eax
call sub_47bc1a
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ edx ] ecx
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
push ebx
push 0xfffffff0
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
sub_485ed4
push ebx
push ebp
push esi
push edi
xor edi edi
xor ebx ebx
cmp [ rw-data ] 0x40047
mov esi ecx
jl r-xdata
mov ecx esi
call sub_478ca1
test edi edi
mov ebp eax
je r-xdata
call sub_47bbe6
push edi
push 0x8800
push edi
mov ecx esi
mov ebx eax
call sub_47bc1a
mov edi eax
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
push ebx
push 0xfffffff0
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
sub_485f23
push esi
mov esi ecx
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + 0x80 ] 0x0
je r-xdata
push 0x0
push [ esi + 0x78 ]
push eax
call sub_4851cd
test eax eax
je r-xdata
push eax
mov ecx esi
call sub_491194
sub_485f4f
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push [ esi + 0x8 ]
mov ecx edi
mov [ esi + 0x18 ] 0x1
call sub_4854ea
and eax 0xfffbffff
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
mov ecx edi
push [ esi + 0x8 ]
call sub_48550d
pop edi
pop esi
retn 0x4
and eax 0xfffdffff
or eax 0x40000
sub_485f8d
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push [ esi + 0x8 ]
mov ecx edi
call sub_4854ea
and eax 0xffeeffff
cmp [ esp + 0xc ] 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x2
jne r-xdata
or eax 0x10000
jmp r-xdata
or al 0x2
mov ecx edi
push eax
push [ esi + 0x8 ]
call sub_48550d
pop edi
pop esi
retn 0x4
or eax 0x100000
sub_485fd2
push ebp
mov ebp esp
sub esp 0x3c
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x3c ]
call sub_47c175
mov eax [ esi ]
xor edi edi
push edi
push edi
push 0x418
mov ecx esi
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x28 ] esi
call [ eax + 0xa0 ]
cmp eax edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_47b45d
pop edi
pop esi
leave
retn 0x8
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
push [ ebp - 0x34 ]
call sub_485339
mov eax [ ebp - 0x10 ]
test [ ebp - 0xb ] 0x1
mov [ ebp - 0x38 ] eax
jne r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
lea eax [ ebp - 0x3c ]
push edi
push eax
push 0xbd11ffff
push edi
mov ecx esi
call sub_47bfd8
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push edi
push eax
push 0xffffffff
push [ ebp - 0x38 ]
mov ecx esi
call sub_47bfd8
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x3c ]
push [ ebp + 0x8 ]
call sub_47c33a
sub_48607c
mov edx [ ecx + 0x58 ]
push esi
test edx edx
jle r-xdata
or eax 0xffffffff
mov ecx [ ecx + 0x5c ]
xor eax eax
test edx edx
jle r-xdata
mov esi [ ecx ]
cmp esi [ esp + 0x8 ]
je r-xdata
pop esi
retn 0x4
inc eax
add ecx 0x14
cmp eax edx
jl r-xdata
sub_4860b5
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x5c ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebx + ebx * 4 ]
mov [ ebp - 0x4 ] ecx
lea esi [ edx + eax * 4 ]
mov eax [ edx + eax * 4 + 0x8 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
xor eax edi
test eax 0x8000000
je r-xdata
mov ecx [ ebp - 0x4 ]
or [ esi + 0xc ] 0x1
push 0x1
mov [ esi + 0x8 ] edi
push [ esi + 0x10 ]
push ebx
call sub_486107
push 0x0
push 0x1
mov [ esi + 0x8 ] edi
call sub_4916b9
sub_486107
mov eax sub_49b138
call sub_469294
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
lea eax [ eax + eax * 4 ]
push edi
mov ecx [ ebx + 0x5c ]
mov [ ebp - 0x10 ] esp
test [ ecx + eax * 4 + 0xc ] 0x1
lea esi [ ecx + eax * 4 ]
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
lea edi [ esi + 0x10 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov eax [ esi + 0x10 ]
jne r-xdata
mov ecx edi
call sub_47c5ff
push [ ebp + 0xc ]
mov ecx edi
call sub_47c7b1
jmp r-xdata
push [ ebp + 0xc ]
push eax
call sub_467da5
pop ecx
pop ecx
test eax eax
cmp [ eax - 0x8 ] 0x0
jmp r-xdata
and [ esi + 0xc ] 0xfffffffe
test [ esi + 0xb ] 0x4
je r-xdata
push 0x1
pop eax
or [ esi + 0xc ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
je r-xdata
mov edi [ edi ]
xor edi edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
movzx ecx [ esi + 0x8 ]
or ecx [ ebp + 0x8 ]
mov eax [ ebx ]
push edi
push ecx
push 0x401
mov ecx ebx
call [ eax + 0xa0 ]
sub_4861c4
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
lea ecx [ ebp - 0x34 ]
push ebx
call sub_480466
push ebx
push ebx
push 0x31
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
mov esi [ SelectObject@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x2c ]
call [ GetTextMetricsA@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
push eax
push [ ebp - 0x30 ]
call esi
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x34 ]
call sub_4804d8
lea eax [ ebp - 0x20 ]
push eax
call [ SetRectEmpty@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
mov ecx edi
push eax
call sub_491649
mov eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push 0x407
mov ecx edi
call [ eax + 0xa0 ]
mov esi [ ebp - 0x14 ]
push 0x6
sub esi [ ebp - 0x1c ]
mov ebx 0x7fff
call [ GetSystemMetrics@IAT ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x6c ]
mov edi [ edi + 0x78 ]
shl eax 0x1
sub eax esi
sub eax [ ebp - 0x60 ]
lea ecx [ eax + ecx - 0x1 ]
cmp ecx edi
jge r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x30 ]
call esi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0xc
mov ecx edi
sub_4862a1
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
mov esi ecx
push eax
call [ SetRectEmpty@IAT ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
mov ecx esi
call sub_48512a
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
pop esi
add [ eax ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
add [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
add [ eax + 0xc ] ecx
leave
retn 0x8
sub_4862e3
xor eax eax
cmp [ ecx + 0x1c ] eax
je r-xdata
retn 0x8
mov edx [ esp + 0x4 ]
xor edx [ esp + 0x8 ]
test dh 0xf
je r-xdata
push 0x33
push eax
push eax
push eax
push eax
push eax
call sub_47bd57
sub_486306
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xe0 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47abd8
jmp r-xdata
pop ebp
retn 0x10
sub_486360
push esi
mov esi ecx
push 0x0
call sub_48607c
test eax eax
jge r-xdata
push 0x1
mov ecx esi
push [ esp + 0x10 ]
push eax
call sub_486107
neg eax
sbb eax eax
neg eax
dec eax
or eax 0xffffffff
jmp r-xdata
pop esi
retn 0x8
sub_48638c
push ebx
mov ebx [ esp + 0x8 ]
push esi
xor esi esi
push edi
cmp ebx esi
mov edi ecx
jne r-xdata
push esi
mov ecx edi
call sub_48607c
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x14 ]
and [ esi + eax ] 0x0
lea eax [ esi + 0x1 ]
mov ecx [ edi + 0x5c ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov eax [ eax + 0x10 ]
mov esi [ eax - 0x8 ]
cmp esi ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push esi
push eax
push [ esp + 0x1c ]
call sub_467a70
add esp 0xc
lea esi [ ebx - 0x1 ]
sub_4863e0
push esi
push edi
xor edi edi
mov esi ecx
push edi
call sub_48607c
cmp eax edi
jl r-xdata
mov eax edi
pop edi
pop esi
retn 0x8
mov ecx [ esi + 0x5c ]
lea eax [ eax + eax * 4 ]
mov eax [ ecx + eax * 4 + 0x10 ]
mov edi [ eax - 0x8 ]
sub_486417
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push [ esi + 0x8 ]
mov ecx edi
mov [ esi + 0x18 ] 0x1
call sub_4860a4
and eax 0xfbffffff
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
mov ecx edi
push [ esi + 0x8 ]
call sub_4860b5
pop edi
pop esi
retn 0x4
or eax 0x4000000
sub_486450
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push [ esi + 0x8 ]
mov ecx edi
call sub_4860a4
and ah 0xfd
cmp [ esp + 0xc ] 0x0
je r-xdata
push eax
mov ecx edi
push [ esi + 0x8 ]
call sub_4860b5
pop edi
pop esi
retn 0x4
or ah 0x2
sub_486492
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi ecx
lea ecx [ ebp - 0x28 ]
call sub_47c175
mov ecx [ esi + 0x58 ]
xor eax eax
test ecx ecx
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x20 ] eax
jbe r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_47b45d
pop esi
leave
retn 0x8
mov ecx [ esi + 0x5c ]
lea eax [ eax + eax * 4 ]
push 0x0
mov eax [ ecx + eax * 4 ]
lea ecx [ ebp - 0x28 ]
push ecx
push 0xffffffff
push eax
mov ecx esi
mov [ ebp - 0x24 ] eax
call sub_47bfd8
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
inc eax
cmp eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
jb r-xdata
push eax
lea ecx [ ebp - 0x28 ]
push [ ebp + 0x8 ]
call sub_47c33a
sub_48650c
mov eax sub_49b16b
call sub_469294
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_490b0e
lea edi [ esi + 0x7c ]
xor ebx ebx
mov ecx edi
mov [ ebp - 0x4 ] ebx
call sub_4770bc
mov eax [ ebp + 0x8 ]
push ebx
mov [ esi ] r--data
mov [ esi + 0x78 ] eax
mov [ esi + 0x3c ] 0x1
push [ edi + 0x8 ]
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_4776d4
lea eax [ esi + 0x94 ]
mov [ esi + 0x90 ] ebx
push eax
call [ SetRectEmpty@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x40 ] ebx
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4865a3
mov eax sub_49b18b
call sub_469294
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x84 ] edi
jle r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x7c ]
call sub_4770ef
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_484220
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov ecx esi
call sub_487276
test eax eax
je r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jl r-xdata
cmp [ eax + 0x70 ] esi
jne r-xdata
and [ eax + 0x70 ] 0x0
sub_48660f
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
and eax r-xdata
push 0x2
mov [ esi + 0x64 ] eax
call sub_47b7d9
lea eax [ ebp - 0x10 ]
push eax
call [ SetRectEmpty@IAT ]
push 0x0
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x0
push r--data
call sub_479360
pop esi
leave
retn 0xc
sub_48665a
push ebx
push esi
mov esi ecx
push edi
xor ebx ebx
xor edi edi
cmp [ esi + 0x84 ] ebx
jle r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
push edi
mov ecx esi
call sub_487276
test eax eax
je r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jl r-xdata
inc ebx
sub_486687
push ebx
push esi
push edi
mov esi ecx
xor edi edi
xor ebx ebx
cmp [ esi + 0x84 ] edi
jle r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
push edi
mov ecx esi
call sub_487276
test eax eax
je r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jl r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc8 ]
test eax eax
je r-xdata
inc ebx
sub_4866c2
push ebp
mov ebp esp
sub esp 0x12c
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push edi
push eax
push [ esi + 0x1c ]
mov ebx ecx
call [ GetWindowRect@IAT ]
cmp [ esi + 0x70 ] ebx
jne r-xdata
xor edi edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
and [ ebx + 0x64 ] 0xfffffff9
mov eax [ esi + 0x64 ]
mov ecx [ ebx + 0x64 ]
and eax 0x6
or eax ecx
test al 0x40
mov [ ebx + 0x64 ] eax
jne r-xdata
test [ esi + 0x68 ] 0x40
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x28 ]
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x64 ]
mov eax [ ebx + 0x64 ]
xor eax ecx
and eax 0xf000
xor eax ecx
or ah 0xf
cmp [ ebx + 0x78 ] edi
je r-xdata
lea eax [ ebp - 0x12c ]
push 0x104
push eax
mov ecx esi
call sub_47bca3
lea eax [ ebp - 0x12c ]
push eax
push [ ebx + 0x1c ]
call sub_483030
or [ ebx + 0x64 ] 0x40
jmp r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
cmp [ ebx + 0x78 ] edi
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push eax
mov ecx esi
call sub_490bec
cmp [ esi + 0x70 ] ebx
mov [ ebp - 0x18 ] edi
je r-xdata
lea edi [ ebx + 0x7c ]
push esi
mov ecx edi
push [ edi + 0x8 ]
call sub_4776d4
push 0x0
mov ecx edi
push [ edi + 0x8 ]
call sub_4776d4
mov eax [ rw-data ]
xor edi edi
push 0x115
push edi
neg eax
push edi
push eax
mov eax [ rw-data ]
mov ecx esi
neg eax
push eax
push edi
call sub_47bd57
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call [ CopyRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx ebx
push eax
call sub_4803ee
mov eax [ ebp - 0x8 ]
lea esi [ ebp - 0x10 ]
sub eax [ ebp - 0x10 ]
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
sar ecx 0x1
add ecx [ ebp - 0x10 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0xc ]
push eax
push ecx
sub esp 0x10
mov ecx ebx
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_487292
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push 0x114
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push 0x0
call sub_47bd57
mov esi [ ebp + 0x8 ]
xor edi edi
jmp r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_47bd57
mov [ ebp - 0x18 ] 0x1
mov ecx [ esi + 0x70 ]
cmp ecx ebx
jne r-xdata
cmp ebx edi
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
cmp eax ebx
je r-xdata
cmp ecx edi
je r-xdata
push edi
push [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x1c ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x18 ] edi
mov [ esi + 0x70 ] ebx
je r-xdata
cmp [ ebx + 0x78 ] edi
je r-xdata
push esi
call sub_486b35
push eax
push [ esi + 0x1c ]
call [ SetParent@IAT ]
push eax
call sub_478d3a
push esi
mov ecx ebx
call sub_486ad4
mov ecx ebx
call sub_48d473
or [ eax + 0xb8 ] 0xc
push 0x57
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_47bd57
xor eax eax
cmp [ ecx + 0x78 ] edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push eax
push 0xffffffff
sub_4868ed
push ebp
mov ebp esp
sub esp 0x124
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push edi
push eax
push [ esi + 0x1c ]
mov ebx ecx
call [ GetWindowRect@IAT ]
cmp [ esi + 0x70 ] ebx
jne r-xdata
cmp [ ebx + 0x78 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebx + 0x64 ] 0xfffffff9
mov eax [ esi + 0x64 ]
mov ecx [ ebx + 0x64 ]
and eax 0x6
or eax ecx
test al 0x40
mov [ ebx + 0x64 ] eax
jne r-xdata
test [ esi + 0x68 ] 0x40
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x64 ]
mov eax [ ebx + 0x64 ]
xor eax ecx
and eax 0xf000
xor eax ecx
or ah 0xf
cmp [ ebx + 0x78 ] 0x0
je r-xdata
lea eax [ ebp - 0x124 ]
push 0x104
push eax
mov ecx esi
call sub_47bca3
lea eax [ ebp - 0x124 ]
push eax
push [ ebx + 0x1c ]
call sub_483030
or [ ebx + 0x64 ] 0x40
and al 0xfe
or al 0x1
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x80 ]
mov [ eax + edi * 4 ] esi
push eax
mov ecx esi
call sub_490bec
push 0xffffffff
push [ esi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
push eax
mov ecx ebx
call sub_487207
mov edi eax
test edi edi
jle r-xdata
cmp edi 0x1
jge r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call [ CopyRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx ebx
push eax
call sub_4803ee
cmp edi 0x1
jge r-xdata
mov ecx [ rw-data ]
xor eax eax
push 0x115
push eax
neg ecx
push eax
push ecx
mov ecx [ rw-data ]
neg ecx
push ecx
push eax
lea edi [ ebx + 0x7c ]
push esi
mov ecx edi
push [ edi + 0x8 ]
call sub_4776d4
push 0x0
mov ecx edi
push [ edi + 0x8 ]
call sub_4776d4
mov eax [ ebp - 0x4 ]
push 0x114
sub eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ ebp - 0x10 ]
sub eax [ ebp - 0x10 ]
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
sar ecx 0x1
add ecx [ ebp - 0x10 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0xc ]
push eax
push ecx
sub esp 0x10
mov ecx ebx
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_487292
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
test ebx ebx
jne r-xdata
mov ecx esi
call sub_47bd57
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
cmp eax ebx
je r-xdata
mov ecx ebx
mov [ esi + 0x70 ] ebx
call sub_48d473
or [ eax + 0xb8 ] 0xc
push 0x0
push 0xffffffff
push esi
call sub_486b35
mov eax [ ebx + 0x1c ]
xor eax eax
jmp r-xdata
push eax
push [ esi + 0x1c ]
call [ SetParent@IAT ]
push eax
call sub_478d3a
sub_486ad4
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
mov ecx eax
push edi
shr ecx 0x10
test cx cx
je r-xdata
push 0xffffffff
push eax
mov ecx esi
call sub_487207
mov edi eax
test edi edi
jle r-xdata
push [ eax + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
pop edi
pop esi
pop ebx
retn 0x4
lea ebx [ esi + 0x7c ]
push 0x1
push edi
mov ecx ebx
call sub_47763d
mov eax [ esi + 0x80 ]
cmp [ eax + edi * 4 - 0x4 ] 0x0
lea eax [ eax + edi * 4 ]
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
push edi
mov ecx ebx
call sub_47763d
sub_486b35
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_487207
cmp [ ebp + 0x10 ] 0x1
mov ebx eax
jne r-xdata
lea edi [ esi + 0x7c ]
push 0x1
push ebx
mov ecx edi
call sub_47763d
mov eax [ esi + 0x80 ]
cmp [ eax + ebx * 4 - 0x4 ] 0x0
lea eax [ eax + ebx * 4 ]
jne r-xdata
mov edi [ esi + 0x80 ]
shl eax 0x2
add edi eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ edi ] eax
mov eax [ esi + 0x80 ]
push ebx
mov ecx esi
push [ eax + ebx * 4 ]
call sub_487207
test eax eax
jle r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
lea edi [ esi + 0x7c ]
push 0x1
push ebx
mov ecx edi
call sub_47763d
mov eax [ esi + 0x80 ]
cmp [ eax + ebx * 4 - 0x4 ] 0x0
lea eax [ eax + ebx * 4 ]
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_486ad4
push 0x1
push ebx
mov ecx edi
call sub_47763d
xor eax eax
mov ecx esi
call sub_48d473
cmp [ esi + 0x78 ] 0x0
mov edi eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
or [ edi + 0xb8 ] 0xc
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe0 ]
test eax eax
jne r-xdata
push 0x1
push ebx
mov ecx edi
call sub_47763d
jmp r-xdata
mov ecx esi
call sub_48665a
test eax eax
jne r-xdata
push 0x0
mov ecx edi
call sub_47bda6
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x58 ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_486c43
push ebp
mov ebp esp
sub esp 0x8c
push esi
push edi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x3c ]
mov edi ecx
push [ ebp + 0xc ]
mov [ ebp - 0x40 ] edi
push eax
call sub_4842b7
mov ecx [ eax ]
lea esi [ edi + 0x94 ]
push esi
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
call [ IsRectEmpty@IAT ]
test eax eax
jne r-xdata
mov ecx edi
call sub_47a2e8
lea ecx [ ebp - 0x54 ]
push ecx
push [ eax + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x48 ]
sub eax [ ebp - 0x54 ]
sub ecx [ ebp - 0x50 ]
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
sub eax [ esi ]
sub ecx [ esi + 0x4 ]
jmp r-xdata
push [ edi + 0x84 ]
call [ BeginDeferWindowPos@IAT ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] esi
jmp r-xdata
xor esi esi
mov [ ebp - 0x2c ] eax
cmp [ edi + 0x90 ] esi
mov [ ebp - 0x28 ] ecx
je r-xdata
cmp [ edi + 0x90 ] esi
pop ebx
jne r-xdata
push [ ebp - 0xc ]
mov ecx edi
call sub_487276
mov ecx [ ebp - 0xc ]
mov esi eax
mov eax [ edi + 0x80 ]
mov [ ebp - 0x44 ] esi
test esi esi
mov eax [ eax + ecx * 4 ]
je r-xdata
mov eax [ rw-data ]
push ebx
mov ebx [ rw-data ]
mov [ ebp - 0x24 ] esi
neg eax
neg ebx
cmp [ edi + 0x84 ] esi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0xc ] esi
jle r-xdata
lea eax [ ebp - 0x64 ]
push eax
call [ SetRectEmpty@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x64 ]
mov ecx edi
push eax
call sub_48512a
cmp [ ebp + 0xc ] esi
je r-xdata
cmp [ ebp - 0x84 ] esi
je r-xdata
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc8 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
push [ ebp - 0x84 ]
call [ EndDeferWindowPos@IAT ]
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ edi + 0x84 ]
jl r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x64 ]
test al 0x4
je r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp - 0x64 ]
sub eax [ ebp - 0x5c ]
add [ ebp - 0x8 ] eax
xor esi esi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov ecx esi
call [ eax + 0xcc ]
jmp r-xdata
and eax 0xa000
neg eax
sbb eax eax
and al 0xfa
add eax 0x10
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
cmp [ ebp + 0x10 ] esi
je r-xdata
sub eax [ rw-data ]
mov ecx [ ebp - 0x34 ]
add ecx eax
cmp [ ebp - 0x8 ] ecx
mov [ ebp - 0x34 ] ecx
jg r-xdata
sub eax [ rw-data ]
add ebx eax
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x8 ] eax
jg r-xdata
mov eax [ ebp - 0x50 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ ebp - 0x54 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
push 0x6
pop eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
mov eax [ ebp - 0x60 ]
sub eax [ ebp - 0x58 ]
add [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] ebx
jg r-xdata
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] ebx
jg r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
cmp [ edi + 0x78 ] ecx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
cmp [ edi + 0x78 ] ecx
jne r-xdata
mov edx [ esi ]
push eax
lea eax [ ebp - 0x8c ]
push 0xffffffff
push eax
mov ecx esi
call [ edx + 0xbc ]
mov ecx [ eax ]
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x3c ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add ecx edx
add eax ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x14 ] ecx
push [ esi + 0x1c ]
mov [ ebp - 0x18 ] ebx
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x54 ]
mov ecx edi
push eax
call sub_4803ee
xor ecx ecx
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov ebx [ rw-data ]
neg ebx
mov [ ebp - 0x4 ] ebx
mov eax [ rw-data ]
neg eax
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] ecx
je r-xdata
cmp [ edi + 0x78 ] ecx
jne r-xdata
sub eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push ecx
push eax
call [ OffsetRect@IAT ]
xor ecx ecx
cmp [ ebp - 0x20 ] ecx
je r-xdata
cmp [ edi + 0x78 ] ecx
jne r-xdata
sub eax [ ebp - 0x1c ]
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ OffsetRect@IAT ]
xor ecx ecx
and [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x28 ]
sub eax [ rw-data ]
cmp [ ebp - 0x18 ] eax
jl r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x18 ]
add edx eax
lea eax [ ebp - 0x1c ]
neg edx
push edx
push ecx
push eax
mov [ ebp - 0x20 ] ecx
call [ OffsetRect@IAT ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp - 0x28 ]
sub eax [ rw-data ]
sub edx eax
cmp edx ebx
mov eax edx
jg r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ rw-data ]
cmp [ ebp - 0x1c ] eax
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x20 ] ecx
push ecx
mov ecx [ ebp - 0x1c ]
add eax ecx
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ OffsetRect@IAT ]
jmp r-xdata
sub eax [ rw-data ]
sub eax [ ebp - 0x1c ]
mov edx eax
mov eax [ ebp - 0x2c ]
sub eax edx
cmp eax [ ebp - 0x34 ]
jg r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax ecx
jle r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0x3c ]
sub ebx [ rw-data ]
add ebx [ ebp - 0x38 ]
cmp [ ebp - 0x24 ] eax
jg r-xdata
cmp [ edi + 0x90 ] eax
jne r-xdata
sub eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push ecx
push eax
call [ OffsetRect@IAT ]
xor ecx ecx
mov eax ebx
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax ecx
jle r-xdata
sub eax [ ebp - 0x1c ]
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ OffsetRect@IAT ]
xor ecx ecx
mov eax [ ebp - 0x34 ]
mov edx [ edi + 0x80 ]
cmp [ edx + eax * 4 - 0x4 ] ecx
je r-xdata
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x84 ]
push [ esi + 0x1c ]
push eax
call sub_47a93e
test [ esi + 0x64 ] 0x1
jne r-xdata
mov eax [ ebp - 0x3c ]
sub eax [ rw-data ]
add eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x38 ]
cmp [ ebp - 0x24 ] eax
jg r-xdata
cmp [ edi + 0x90 ] eax
jne r-xdata
mov edx [ edi + 0x80 ]
cmp [ edx + eax * 4 - 0x4 ] ecx
jne r-xdata
push 0x1
pop esi
push esi
push ecx
push eax
lea ecx [ edi + 0x7c ]
call sub_4776fb
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov edi [ esi + 0x74 ]
lea esi [ ebp - 0x1c ]
add edi 0x94
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x44 ]
mov edi [ ebp - 0x40 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x84 ]
push [ esi + 0x1c ]
push eax
call sub_47a93e
test [ esi + 0x64 ] 0x1
jne r-xdata
mov edi [ esi + 0x74 ]
lea esi [ ebp - 0x1c ]
add edi 0x94
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x44 ]
mov edi [ ebp - 0x40 ]
sub_4870d6
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x90 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x94 ]
mov esi eax
xor ecx ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ esi ] ecx
sete cl
mov [ ebx + 0x90 ] ecx
lea ecx [ esi + 0x4 ]
push ecx
push eax
call [ CopyRect@IAT ]
push esi
mov ecx ebx
push [ ebp + 0x8 ]
call sub_484d45
mov edi [ ebp - 0x8 ]
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ ebx + 0x90 ] ecx
pop esi
pop ebx
leave
retn 0x8
sub_48713c
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
mov esi ecx
push eax
call [ SetRectEmpty@IAT ]
mov eax [ esi + 0x64 ]
mov ecx esi
and eax 0xa000
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_48512a
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
pop esi
add [ eax ] ecx
mov ecx [ ebp - 0xc ]
add [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
add [ eax + 0xc ] ecx
leave
retn 0x8
sub_487187
mov eax sub_49b1a0
call sub_469294
sub esp 0x54
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x60 ]
call sub_4805ce
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc8 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call sub_480640
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe0 ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx esi
call [ eax + 0xd8 ]
sub_4871e7
push esi
mov esi ecx
push edi
mov edi [ esi + 0x64 ]
push [ esp + 0xc ]
mov eax edi
and ah 0xf0
mov [ esi + 0x64 ] eax
call sub_48485e
mov [ esi + 0x64 ] edi
pop edi
pop esi
retn 0x4
sub_487207
mov edx [ ecx + 0x84 ]
xor eax eax
test edx edx
push esi
jle r-xdata
or eax 0xffffffff
cmp eax [ esp + 0xc ]
je r-xdata
inc eax
cmp eax edx
jl r-xdata
mov esi [ ecx + 0x80 ]
mov esi [ esi + eax * 4 ]
cmp esi [ esp + 0x8 ]
je r-xdata
pop esi
retn 0x8
sub_487235
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x84 ] ebx
jle r-xdata
pop esi
pop ebx
retn 0x4
push edi
inc ebx
cmp ebx [ esi + 0x84 ]
jl r-xdata
mov ecx edi
call sub_48d473
push 0x1
mov ecx eax
push [ esp + 0x14 ]
push edi
call sub_48c60a
push ebx
mov ecx esi
call sub_487276
mov edi eax
test edi edi
je r-xdata
pop edi
sub_487292
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi ecx
xor eax eax
push edi
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x64 ]
mov [ ebp - 0x8 ] eax
and ebx 0xa000
cmp [ esi + 0x84 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
jle r-xdata
mov ecx [ ebp - 0xc ]
add esi 0x7c
push 0x1
push eax
lea edi [ ecx + 0x1 ]
mov ecx esi
push edi
call sub_4776fb
push 0x1
mov ecx esi
push [ ebp + 0x8 ]
push edi
push [ ebp - 0x4 ]
mov ecx esi
call sub_487276
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
sub eax [ rw-data ]
mov [ ebp - 0x8 ] ecx
add [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
cmp ebx ecx
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc8 ]
test eax eax
je r-xdata
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x20 ]
mov ecx esi
push eax
call sub_4803ee
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax ecx
sub eax [ ebp - 0x20 ]
dec eax
mov eax edx
sub eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
push 0x1
push [ ebp + 0x8 ]
lea ecx [ esi + 0x7c ]
lea edi [ eax + 0x1 ]
push edi
jmp r-xdata
mov eax [ ebp - 0xc ]
push 0x1
inc eax
push ecx
push eax
lea ecx [ esi + 0x7c ]
call sub_4776fb
xor eax eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
call sub_4776fb
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x1c
mov ecx [ ebp - 0x1c ]
xor eax eax
cmp [ ebp + 0x10 ] ecx
mov ecx [ ebp - 0x20 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
jmp r-xdata
sub ecx [ ebp - 0x20 ]
dec ecx
mov [ ebp - 0x8 ] ecx
sub edx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x84 ]
jl r-xdata
jmp r-xdata
setg al
test eax eax
je r-xdata
sub_4873d1
mov eax sub_49b1b6
call sub_469294
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0x74 ] 0x0
mov [ esi + 0x68 ] eax
jne r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
push 0xb0
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov [ esi + 0x20 ] eax
xor eax eax
push esi
call sub_488b23
jmp r-xdata
mov [ esi + 0x74 ] eax
sub_487451
mov eax sub_49b1c8
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_48e9b5
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xcc ]
call sub_48650c
mov ecx [ ebp - 0xc ]
and [ esi + 0x108 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4874b0
mov eax sub_49b1dc
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xcc ]
call sub_4865a3
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_48eb87
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4874e8
mov eax sub_49b1f0
call sub_469294
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
mov eax 0x80c83b00
test bl 0x4
mov [ ebp - 0x10 ] edi
mov [ edi + 0xb0 ] 0x1
je r-xdata
xor esi esi
mov ecx edi
push esi
push [ ebp + 0x8 ]
push rw-data
push eax
push rw-data
push esi
push esi
call sub_48ebd1
test eax eax
jne r-xdata
mov eax 0x80c83300
mov esi ebx
push 0x0
and esi 0x5000
push [ edi + 0x1c ]
neg esi
sbb esi esi
and ebx 0x40
and si 0xf000
add esi 0x2000
or esi ebx
call [ GetSystemMenu@IAT ]
push eax
call sub_47e451
mov edi [ DeleteMenu@IAT ]
mov ebx eax
push 0x0
push 0xf000
push [ ebx + 0x4 ]
call edi
push 0x0
push 0xf020
push [ ebx + 0x4 ]
call edi
push 0x0
push 0xf030
push [ ebx + 0x4 ]
call edi
push 0x0
push 0xf120
push [ ebx + 0x4 ]
call edi
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
and [ ebp - 0x4 ] 0x0
push 0xf011
lea ecx [ ebp + 0xc ]
call sub_47e84a
test eax eax
je r-xdata
mov [ edi + 0xb0 ] esi
jmp r-xdata
or esi 0x50000000
push 0xe81f
push esi
mov esi [ ebp - 0x10 ]
push [ ebp + 0x8 ]
lea ecx [ esi + 0xcc ]
call sub_48660f
test eax eax
jne r-xdata
push 0x0
push 0xf060
push [ ebx + 0x4 ]
call edi
push [ ebp + 0xc ]
push 0xf060
push 0x0
push [ ebx + 0x4 ]
call [ AppendMenuA@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test esi esi
jne r-xdata
xor edi edi
jmp r-xdata
mov eax [ esi + 0x1c ]
xor eax eax
jmp r-xdata
and [ esi + 0xb0 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_47c674
mov eax edi
push eax
push [ esi + 0xe8 ]
call [ SetParent@IAT ]
push eax
call sub_478d3a
push 0x1
pop edi
sub_48764d
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi ecx
cmp [ esi + 0xb0 ] 0x0
jne r-xdata
pop esi
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_48d1b5
lea eax [ ebp - 0x104 ]
push 0x104
push eax
lea ecx [ esi + 0xcc ]
call sub_47bca3
lea eax [ ebp - 0x104 ]
push eax
push [ esi + 0x1c ]
call sub_483030
sub_4876a3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx 0x2
push edi
mov esi ecx
jne r-xdata
cmp ebx 0xa
jb r-xdata
call sub_47a40b
test [ esi + 0x130 ] 0x40
jne r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push ebx
call sub_48f103
cmp ebx 0x11
ja r-xdata
push 0x1
xor eax eax
pop edi
mov ecx esi
call sub_47a40b
push 0x1
xor eax eax
pop edi
mov eax [ eax + 0x74 ]
push [ ebp + 0x10 ]
mov ecx eax
mov edx [ eax ]
push [ ebp + 0xc ]
call [ edx ]
jmp r-xdata
mov eax edi
lea ecx [ esi + 0xcc ]
push eax
inc edi
call sub_487276
test eax eax
je r-xdata
push [ ebp + 0x10 ]
mov ecx [ eax + 0x74 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
jmp r-xdata
mov eax edi
lea ecx [ esi + 0xcc ]
push eax
inc edi
call sub_487276
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp edi [ esi + 0x150 ]
jge r-xdata
cmp edi [ esi + 0x150 ]
jge r-xdata
sub_487749
cmp [ esp + 0x4 ] 0x2
push esi
mov esi ecx
jne r-xdata
mov ecx esi
call sub_478ca1
call sub_47a40b
test [ esi + 0x130 ] 0x40
jne r-xdata
push edi
push 0x1
pop edi
xor eax eax
mov eax [ eax + 0x74 ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
jmp r-xdata
mov eax edi
lea ecx [ esi + 0xcc ]
push eax
inc edi
call sub_487276
test eax eax
je r-xdata
pop esi
retn 0xc
cmp edi [ esi + 0x150 ]
jge r-xdata
sub_48779a
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x7c ] 0x0
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x10 ]
push [ esi + 0x90 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
push [ ebp + 0x8 ]
call sub_491909
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn 0xc
push edi
lea eax [ ebp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
jmp r-xdata
sub_48780f
push ebp
mov ebp esp
cmp [ ecx + 0x7c ] 0x0
push esi
push edi
je r-xdata
push [ ecx + 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
call sub_491875
mov esi eax
test esi esi
jne r-xdata
call sub_491909
mov esi eax
test esi esi
je r-xdata
call sub_491909
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push esi
call [ RegDeleteKeyA@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
inc eax
push eax
push [ ebp + 0x10 ]
push 0x1
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
push esi
call [ RegDeleteValueA@IAT ]
jmp r-xdata
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_4878af
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x7c ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
lea eax [ ebx + ebx + 0x1 ]
push eax
call sub_47c3b5
pop ecx
mov edi eax
xor ecx ecx
test ebx ebx
jbe r-xdata
push [ ebp + 0x8 ]
call sub_491909
mov esi eax
test esi esi
je r-xdata
and [ edi + ecx * 2 ] 0x0
mov ecx [ ebp - 0x4 ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_48780f
push edi
mov esi eax
call sub_47c3de
pop ecx
mov eax esi
pop ebx
mov esi edi
pop edi
pop esi
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x3
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax ecx
mov dl [ eax ]
and dl 0xf
add dl 0x41
mov [ esi ] dl
mov al [ eax ]
shr al 0x4
add al 0x41
inc ecx
mov [ esi + 0x1 ] al
inc esi
inc esi
cmp ecx ebx
jb r-xdata
sub_487950
push ecx
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ GetCapture@IAT ]
mov esi [ SendMessageA@IAT ]
mov edi eax
xor ebp ebp
mov ebx 0x365
cmp edi ebp
je r-xdata
call [ GetFocus@IAT ]
push ebp
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_47a36b
cmp eax ebp
jne r-xdata
push ebp
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
call sub_47a326
mov edi eax
cmp edi ebp
jne r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
push edi
call sub_47a326
jmp r-xdata
mov eax [ esp + 0x14 ]
push 0xe147
push 0x111
push [ eax + 0x1c ]
call esi
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
push eax
call [ GetLastActivePopup@IAT ]
mov edi eax
cmp edi ebp
je r-xdata
push edi
call sub_47a326
jmp r-xdata
mov edi eax
push ebp
cmp edi ebp
je r-xdata
sub_4879f2
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov ecx esi
call sub_487950
cmp eax 0x3f107
je r-xdata
pop esi
retn
call sub_4904f9
mov eax [ eax + 0x4 ]
push 0x1
push [ esi + 0x4c ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x98 ]
pop esi
retn
sub_487a56
push esi
push edi
mov esi ecx
xor edi edi
push edi
mov ecx [ esi + 0x1c ]
call sub_47bda6
mov eax [ esi + 0x1c ]
push edi
push [ eax + 0x1c ]
call [ ShowOwnedPopups@IAT ]
mov ecx [ esi + 0x1c ]
push 0x13
push edi
push edi
push edi
push edi
push rw-data
call sub_47bd57
pop edi
pop esi
retn
sub_487a88
push esi
push edi
mov esi ecx
push 0x2
call sub_493376
mov edi [ esp + 0xc ]
add [ esi + 0xa0 ] edi
mov eax [ esi + 0xa0 ]
test eax eax
jle r-xdata
push [ esi + 0xa4 ]
and [ esi + 0xa0 ] 0x0
call [ SetCursor@IAT ]
push [ rw-data ]
call [ SetCursor@IAT ]
test edi edi
jle r-xdata
push 0x2
call sub_4933e6
pop edi
pop esi
retn 0x4
cmp [ esi + 0xa0 ] 0x1
jne r-xdata
mov [ esi + 0xa4 ] eax
jmp r-xdata
sub_487b74
mov eax [ esp + 0x4 ]
push esi
lea esi [ ecx + 0xa8 ]
push edi
lea edi [ eax - 0xe110 ]
mov edx [ ecx ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov eax [ eax + edi * 4 ]
push eax
call [ edx + 0x7c ]
test eax eax
jne r-xdata
push 0x1
pop eax
pop edi
pop esi
retn 0x4
mov ecx [ esi ]
push edi
mov eax [ ecx ]
call [ eax ]
sub_487ba7
mov eax sub_49b5f4
call sub_469294
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov [ ebp - 0x10 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
push 0x4
push ecx
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x64 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x14 ]
push 0x3
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
cmp edi ebx
je r-xdata
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_47ca40
push ebx
mov ecx edi
call sub_47ca2b
push 0x2a
mov ecx edi
call sub_47ca2b
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
call sub_47ca40
push ebx
mov ecx edi
call sub_47ca2b
inc [ esi + 0x14 ]
pop edi
mov eax [ ebp - 0x10 ]
mov ecx edi
inc eax
push eax
call sub_47c7b1
mov eax [ edi ]
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x14 ]
inc eax
mov [ esi + 0x18 ] eax
sub_487c84
mov eax sub_49b608
call sub_469294
sub esp 0xc
push ebx
push esi
push edi
mov ebx ecx
push 0x64
mov [ ebp - 0x14 ] ebx
call sub_47bb2c
mov esi [ SendMessageA@IAT ]
push 0x0
mov edi eax
push 0x0
push 0x184
push [ edi + 0x1c ]
call esi
mov eax [ ebx + 0x5c ]
mov ebx [ eax + 0x4 ]
push 0x0
push 0x0
push 0x18b
push [ edi + 0x1c ]
call esi
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax ebx
mov ebx [ ebx ]
mov ecx [ eax + 0x8 ]
mov eax [ rw-data ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push 0x2
push edx
call [ eax + 0x64 ]
test eax eax
je r-xdata
cmp eax 0x1
push ecx
push ecx
jne r-xdata
mov ecx [ ebp - 0x14 ]
push 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push 0x186
push [ edi + 0x1c ]
call esi
push 0x199
push [ edi + 0x1c ]
call esi
mov ecx [ ebp - 0x14 ]
push 0x1
mov [ ecx + 0x60 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_4786a4
test ebx ebx
je r-xdata
push eax
push 0x0
push 0x180
push [ edi + 0x1c ]
call esi
cmp eax 0xffffffff
je r-xdata
call sub_47857e
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push 0xffffffff
call sub_47857e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
xor eax eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push 0x19a
push [ edi + 0x1c ]
call esi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_487d92
push ebx
push esi
push edi
mov esi ecx
push 0x64
call sub_47bb2c
mov ebx [ SendMessageA@IAT ]
push 0x0
mov edi eax
push 0x0
push 0x188
push [ edi + 0x1c ]
call ebx
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
push 0x199
push [ edi + 0x1c ]
call ebx
mov [ esi + 0x60 ] eax
and [ esi + 0x60 ] 0x0
jmp r-xdata
mov ecx esi
call sub_478709
pop edi
pop esi
pop ebx
retn
sub_487dda
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
push esi
lea ecx [ edi + 0x4 ]
call sub_4778db
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
and [ rw-data ] 0x0
jmp r-xdata
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop edi
pop esi
retn 0x4
test ecx ecx
je r-xdata
mov edx [ edi ]
mov eax esi
mov esi [ esi ]
mov ecx edi
push [ eax + 0x8 ]
call [ edx + 0xc ]
test esi esi
jne r-xdata
and [ rw-data ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov ecx [ rw-data ]
sub_487e53
push esi
mov esi [ ecx + 0x8 ]
push 0x1
pop eax
pop esi
retn
mov eax esi
mov esi [ esi ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x78 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
pop esi
retn
sub_487e72
push esi
mov esi [ ecx + 0x8 ]
pop esi
retn 0x4
push [ esp + 0x8 ]
mov eax esi
mov esi [ esi ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x7c ]
jmp r-xdata
test esi esi
je r-xdata
sub_487e90
mov eax sub_49b64a
call sub_469294
sub esp 0x204
push ebx
xor ebx ebx
push esi
push ebx
push ebx
push 0x6
push ebx
push ebx
push [ ebp + 0x14 ]
mov esi ecx
lea ecx [ ebp - 0x210 ]
call sub_475893
mov eax [ rw-data ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_47e84a
mov eax [ ebp + 0x10 ]
or [ ebp - 0x180 ] eax
mov eax [ rw-data ]
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x18 ] ebx
mov [ ebp - 0x4 ] 0x3
je r-xdata
mov esi [ esi + 0x8 ]
push 0x1
pop ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1b4 ]
push [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
call sub_487ba7
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
push 0xf002
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x4
call sub_47e84a
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x14 ]
push eax
call sub_47ca40
push ebx
lea ecx [ ebp + 0x14 ]
call sub_47ca2b
push r--data
lea ecx [ ebp + 0x14 ]
call sub_47ca04
push ebx
lea ecx [ ebp + 0x14 ]
call sub_47ca2b
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
inc [ ebp - 0x1a0 ]
mov [ ebp - 0x1a8 ] eax
mov eax [ ebp - 0x14 ]
push 0x104
mov [ ebp - 0x184 ] eax
call sub_47ca58
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x198 ] eax
call sub_4759f5
mov ecx [ ebp + 0x8 ]
push 0xffffffff
mov esi eax
call sub_47caa7
xor eax eax
cmp esi 0x1
sete al
lea ecx [ ebp - 0x18 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_47c674
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_47c674
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
lea ecx [ ebp - 0x164 ]
mov [ ebp - 0x4 ] 0x5
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x210 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
neg ecx
mov eax esi
lea edx [ ebp - 0x10 ]
sbb ecx ecx
mov esi [ esi ]
mov eax [ eax + 0x8 ]
and ecx edx
push ecx
push eax
lea eax [ ebp - 0x1b4 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
call sub_487ba7
xor ecx ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_488032
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ecx + 0x8 ]
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn
push edi
test esi esi
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx edi
call [ eax + 0x58 ]
inc ebx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
sub_488074
mov eax sub_49b6d4
call sub_469294
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
call sub_47c6e2
xor esi esi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] esi
call sub_491ddc
push 0x4
lea eax [ ebp - 0x18 ]
pop edi
lea ecx [ ebp + 0x8 ]
push 0x7
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] edi
call sub_4754b7
mov eax [ eax ]
push r--data
push eax
call sub_467da5
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x18 ]
inc bl
call sub_47c674
test bl bl
je r-xdata
lea eax [ ebp - 0x18 ]
push 0x8
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
mov eax [ eax ]
push r--data
push eax
call sub_467da5
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x18 ]
inc bl
call sub_47c674
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x1
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffff9
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_47c761
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
push 0xa
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
mov eax [ eax ]
push r--data
push eax
call sub_467da5
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x18 ]
inc bl
call sub_47c674
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x2
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffff8
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
call sub_47c761
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
jmp r-xdata
call sub_47c674
push 0x22
lea ecx [ ebp + 0x8 ]
call sub_47caef
mov esi eax
cmp esi 0xffffffff
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x40 ]
call sub_491e37
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x3
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffff6
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
call sub_47c761
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x18 ]
push esi
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
call sub_47c761
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax esi
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x6
call sub_47c761
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
and [ ebp - 0x18 ] 0x0
push 0x1
pop ebx
mov [ ebp - 0x10 ] ebx
call sub_4904f9
mov eax [ eax + 0x4 ]
cmp [ eax + 0xac ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
mov eax [ eax + 0xac ]
mov [ ebp - 0x18 ] eax
call sub_4904f9
mov esi [ eax + 0x4 ]
call sub_4904f9
mov eax [ eax + 0x4 ]
mov ecx [ esi + 0xac ]
mov [ eax + 0x74 ] ecx
call sub_4904f9
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x40 ]
mov [ eax + 0xac ] ecx
jmp r-xdata
cmp [ ebp - 0x30 ] 0x3
jne r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x1c ]
call sub_4904f9
mov eax [ eax + 0x4 ]
mov ebx [ eax + 0x74 ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_488032
mov esi eax
call sub_4904f9
mov eax [ eax + 0x4 ]
push [ ebp - 0x2c ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x7c ]
mov ebx eax
call sub_4904f9
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x40 ]
mov [ eax + 0xac ] ecx
call sub_4904f9
mov eax [ eax + 0x4 ]
xor edi edi
push edi
push 0xe108
mov eax [ eax + 0x1c ]
push 0x111
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
call sub_4904f9
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0xac ] edi
call sub_488032
cmp eax esi
jle r-xdata
lea eax [ ebp - 0x1c ]
push 0x3
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
mov eax [ eax ]
mov esi r--data
push esi
push eax
call sub_467da5
pop ecx
pop ecx
test eax eax
lea ecx [ ebp - 0x1c ]
setne bl
call sub_47c674
test bl bl
jne r-xdata
push [ esi + 0x1c ]
call [ IsIconic@IAT ]
neg eax
sbb eax eax
and eax edi
add eax 0x5
mov ebx eax
cmp ebx 0x1
jne r-xdata
call sub_48e97b
test eax eax
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x7c ]
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x7
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
push 0x22
lea ecx [ ebp + 0x8 ]
call sub_47caef
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
push [ ebp - 0x2c ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x7c ]
call sub_48e97b
test eax eax
jne r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push ebx
mov ecx esi
call sub_47bda6
cmp ebx 0x6
je r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x10 ]
mov [ eax + 0xac ] ecx
call sub_4904f9
mov eax [ eax + 0x4 ]
push edi
push edi
push 0x10
mov eax [ eax + 0x1c ]
push [ eax + 0x1c ]
call [ PostMessageA@IAT ]
lea eax [ ebp - 0x1c ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x8
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax ebx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x9
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
lea eax [ ebp - 0x1c ]
push 0x3
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
mov eax [ eax ]
push esi
push eax
call sub_467da5
pop ecx
pop ecx
test eax eax
lea ecx [ ebp - 0x1c ]
setne bl
call sub_47c674
test bl bl
jne r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
or [ eax + 0x74 ] 0xffffffff
jmp r-xdata
push 0x1
call sub_48e96c
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xa
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
push 0x22
lea ecx [ ebp + 0x8 ]
call sub_47caef
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
lea eax [ ebp - 0x1c ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0xb
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax ebx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xc
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
lea eax [ ebp - 0x1c ]
push 0x3
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
mov eax [ eax ]
push esi
push eax
call sub_467da5
pop ecx
pop ecx
test eax eax
lea ecx [ ebp - 0x1c ]
setne bl
call sub_47c674
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xd
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
push 0x22
lea ecx [ ebp + 0x8 ]
call sub_47caef
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x1c ]
push esi
push eax
lea ecx [ ebp + 0x8 ]
call sub_4754b7
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xe
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax esi
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_47543b
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xf
call sub_47c761
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
sub_488658
mov eax sub_49b6e8
call sub_469294
sub esp 0x64
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp eax 0x1
mov ebx [ ecx + 0x8 ]
jle r-xdata
push 0xffffffff
push eax
push 0xf104
call sub_4840fb
jmp r-xdata
mov eax [ ebx ]
push 0x1
push 0x0
mov ecx ebx
call [ eax + 0x80 ]
push 0x0
push 0x7801
lea ecx [ ebp - 0x70 ]
call sub_478369
and [ ebp - 0x10 ] 0x0
mov edi r--data
add esi 0x4
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x70 ]
call sub_47841e
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x70 ] edi
call sub_47801b
jmp r-xdata
mov ebx [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x70 ] edi
call sub_47801b
sub_488724
mov eax sub_49b6fc
call sub_469294
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
push 0x1004
lea edx [ ebp - 0x10 ]
push 0xf000
push edx
call [ eax + 0x2c ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4904f9
mov eax [ eax + 0x4 ]
push [ ebp - 0x10 ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4887bc
mov eax sub_49b9ec
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4849e8
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_484220
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4887f4
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
mov esi ecx
and eax r-xdata
xor ebx ebx
mov [ esi + 0x64 ] eax
push 0x30
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_467a10
mov eax [ ebp + 0x14 ]
or edi 0x40000000
add esp 0xc
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x38 ] eax
call sub_4904f9
mov eax [ eax + 0x8 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax [ eax + 0x1c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x34 ] ebx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push 0x10
mov [ esi + 0x84 ] edi
call sub_47b7d9
push 0x3c000
call sub_47b7d9
push [ ebp + 0x8 ]
mov ecx esi
push edi
call sub_4780f6
cmp eax ebx
mov [ esi + 0x84 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
mov ecx esi
call sub_47bced
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
push ebx
push 0x4000000
mov [ esi + 0x78 ] eax
mov [ esi + 0x7c ] ecx
push ebx
mov ecx esi
call sub_47bc1a
push edi
mov ecx esi
call sub_47b33b
test eax eax
jne r-xdata
push 0x54
push ebx
push ebx
push ebx
push ebx
push ebx
mov ecx esi
call sub_47bd57
push 0x1
pop eax
sub_4888ed
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0x78 ]
mov [ eax ] edx
mov ecx [ ecx + 0x7c ]
mov [ eax + 0x4 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov eax 0x7fff
je r-xdata
mov edx eax
mov edx [ ecx + 0x7c ]
jmp r-xdata
mov ecx [ ecx + 0x78 ]
mov ecx eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
sub_488947
push esi
mov esi ecx
call sub_478ca1
call sub_4904f9
mov eax [ eax + 0x1038 ]
test eax eax
je r-xdata
push 0x1
pop eax
mov ecx [ esi + 0x80 ]
test ecx ecx
je r-xdata
mov edx [ eax ]
push ecx
push [ esi + 0x84 ]
mov ecx eax
push esi
call [ edx + 0x20 ]
test eax eax
je r-xdata
pop esi
retn 0x8
sub_488992
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0xc ]
call sub_47e8ce
test eax eax
je r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
lea eax [ ebp - 0x100 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4889cc
sub_4889cc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi esi
cmp [ esi ] bl
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx ebx
call sub_47ca58
mov edi eax
mov cl [ edi ]
cmp cl 0x25
jne r-xdata
sub edi [ ebx ]
mov ecx ebx
push edi
call sub_47caa7
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov cl [ esi ]
cmp cl 0x25
jne r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x30
jl r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x30
jl r-xdata
inc edi
inc ebx
inc edi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
jmp r-xdata
mov [ edi ] cl
inc edi
inc esi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp [ esi ] 0x0
je r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp al 0x39
jle r-xdata
inc ebx
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
mov [ edi ] 0x3f
inc edi
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push eax
call [ lstrlenA@IAT ]
add ebx eax
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
push eax
push edi
call [ lstrcpyA@IAT ]
push edi
call [ lstrlenA@IAT ]
add edi eax
jmp r-xdata
inc edi
inc edi
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc esi
inc esi
cmp eax [ ebp + 0x14 ]
jl r-xdata
sub_488ae2
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov ecx [ edx ]
cmp eax ecx
jge r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jg r-xdata
sub eax ecx
jmp r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
push esi
mov esi [ edx + 0x4 ]
cmp ecx esi
jge r-xdata
mov esi [ edx + 0xc ]
cmp ecx esi
jg r-xdata
sub ecx esi
jmp r-xdata
xor ecx ecx
push ecx
push eax
push edx
call [ OffsetRect@IAT ]
pop esi
retn 0xc
sub_488b23
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x68 ] ecx
mov edx [ ecx + 0x6c ]
mov [ eax + 0x6c ] edx
xor edx edx
mov [ eax + 0x90 ] edx
mov [ eax + 0x94 ] edx
mov [ eax + 0x98 ] edx
mov ecx [ ecx + 0x64 ]
test cl 0x4
je r-xdata
test ch 0xa0
je r-xdata
and ecx 0x2004
jmp r-xdata
and ecx 0x40
or ch 0x10
and ecx 0x40
or ch 0x20
jmp r-xdata
mov [ eax + 0xa4 ] ecx
mov [ eax + 0xa8 ] 0x80000000
mov [ eax + 0x84 ] edx
retn 0x4
sub_488ba3
push ebp
mov ebp esp
sub esp 0x38
push ebx
mov ebx ecx
push esi
push edi
mov [ ebx + 0x88 ] 0x1
call sub_489482
mov ecx [ ebx + 0x84 ]
lea esi [ ebx + 0x84 ]
call sub_480372
test al 0x1
je r-xdata
mov eax [ ebx + 0x68 ]
mov ecx [ eax + 0x64 ]
test cl 0x4
je r-xdata
mov ecx [ esi ]
push 0x0
call sub_4803a8
test cl 0x2
je r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x8 ] eax
mov eax [ ecx ]
push 0xa
lea edx [ ebp - 0x10 ]
push 0x0
push edx
call [ eax + 0xbc ]
mov esi [ eax ]
mov ecx [ ebx + 0x68 ]
push 0x10
lea edx [ ebp - 0x10 ]
mov edi [ eax + 0x4 ]
mov eax [ ecx ]
push 0x0
push edx
call [ eax + 0xbc ]
mov ecx [ eax ]
push 0x6
mov [ ebp - 0x8 ] ecx
mov ecx [ ebx + 0x68 ]
mov eax [ eax + 0x4 ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ecx ]
push 0x0
push edx
call [ eax + 0xbc ]
mov edx [ eax ]
mov ecx [ ebp - 0x34 ]
add edi ecx
mov [ ebp - 0x24 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
add esi eax
lea edi [ ebx + 0x28 ]
mov [ ebp - 0x20 ] esi
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
add edx eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x8 ]
lea edi [ ebx + 0x38 ]
add esi eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x4 ]
add esi ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0xc ]
lea edi [ ebx + 0x48 ]
add esi ecx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] esi
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x24 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
lea edi [ ebx + 0x58 ]
lea esi [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov esi [ ebx + 0x78 ]
mov eax [ ebp + 0x8 ]
and esi 0xa000
mov ecx [ ebx + 0x68 ]
mov edx esi
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
neg edx
sbb edx edx
mov [ ebx + 0x8 ] eax
mov eax [ ecx ]
and edx 0x6
add edx 0xa
push edx
lea edx [ ebp - 0x10 ]
push 0xffffffff
push edx
call [ eax + 0xbc ]
mov ecx [ eax ]
test esi esi
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
je r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x8 ] eax
mov eax [ ecx ]
push 0xa
lea edx [ ebp - 0x10 ]
push 0xffffffff
push edx
call [ eax + 0xbc ]
mov esi [ eax ]
mov ecx [ ebx + 0x68 ]
push 0x10
lea edx [ ebp - 0x10 ]
mov edi [ eax + 0x4 ]
mov eax [ ecx ]
push 0xffffffff
push edx
call [ eax + 0xbc ]
mov edx [ eax ]
mov ecx [ ebp - 0x34 ]
add edi ecx
mov [ ebp - 0x24 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
add esi eax
lea edi [ ebx + 0x28 ]
mov [ ebp - 0x20 ] esi
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
add edx eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebx + 0x48 ]
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
add eax ecx
lea edi [ ebx + 0x38 ]
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebx + 0x58 ]
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi 0xc40000
push 0x0
push esi
lea eax [ ebx + 0x48 ]
jmp r-xdata
lea edi [ ebx + 0x38 ]
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x28 ]
lea edi [ ebx + 0x28 ]
sub eax esi
add ecx esi
cdq
sub eax edx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x4 ]
mov edx eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] esi
sar edx 0x1
sub eax edx
lea esi [ ebp - 0x18 ]
add ecx eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] ecx
lea edi [ ebx + 0x28 ]
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x24 ]
lea edi [ ebx + 0x38 ]
sub eax esi
mov [ ebp - 0x14 ] esi
cdq
sub eax edx
mov edx eax
mov eax [ ebp + 0x8 ]
sar edx 0x1
sub eax edx
mov [ ebp - 0x18 ] eax
add ecx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
add eax esi
lea esi [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
push eax
call sub_48f9ae
push 0x0
lea edi [ ebx + 0x58 ]
push esi
push edi
call sub_48f9ae
mov eax [ rw-data ]
mov esi [ InflateRect@IAT ]
neg eax
push eax
mov eax [ rw-data ]
neg eax
push eax
lea eax [ ebx + 0x48 ]
push eax
call esi
mov eax [ rw-data ]
neg eax
push eax
mov eax [ rw-data ]
neg eax
push eax
push edi
call esi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebx + 0x28 ]
push esi
push eax
call sub_488ae2
push edi
lea eax [ ebx + 0x38 ]
push esi
push eax
call sub_488ae2
push edi
lea eax [ ebx + 0x48 ]
push esi
push eax
call sub_488ae2
push edi
lea eax [ ebx + 0x58 ]
push esi
push eax
call sub_488ae2
mov ecx ebx
call sub_4896f4
push edi
push esi
mov ecx ebx
mov [ ebx + 0x74 ] eax
call sub_488ef6
mov ecx ebx
call sub_489853
pop edi
pop esi
pop ebx
leave
retn 0x8
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebx + 0x48 ]
lea esi [ ebx + 0x28 ]
mov edi eax
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebx + 0x58 ]
lea esi [ ebx + 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi 0xc40000
push esi
sub_488ef6
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ OffsetRect@IAT ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ebx eax
mov eax [ ebp + 0xc ]
sub eax ecx
mov [ ebp - 0x4 ] eax
push eax
lea eax [ esi + 0x28 ]
push ebx
push eax
call edi
push [ ebp - 0x4 ]
lea eax [ esi + 0x48 ]
push ebx
push eax
call edi
push [ ebp - 0x4 ]
lea eax [ esi + 0x38 ]
push ebx
push eax
call edi
push [ ebp - 0x4 ]
lea eax [ esi + 0x58 ]
push ebx
push eax
call edi
mov eax [ ebp + 0x8 ]
cmp [ esi + 0x80 ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
je r-xdata
mov ecx esi
call sub_4896f4
xor eax eax
jmp r-xdata
push 0x0
mov ecx esi
mov [ esi + 0x74 ] eax
call sub_48958c
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_488f72
cmp [ esp + 0x4 ] 0x11
push esi
mov esi ecx
jne r-xdata
cmp [ esp + 0x8 ] 0x10
jne r-xdata
push [ esp + 0xc ]
lea eax [ esi + 0x80 ]
push eax
call sub_4896a2
pop esi
retn 0x8
push [ esp + 0xc ]
lea eax [ esi + 0x7c ]
mov ecx esi
push eax
call sub_4896a2
sub_488fa6
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx ecx
call sub_489543
mov eax [ ebx + 0x74 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x78 ]
test al 0x4
jne r-xdata
push esi
push edi
push eax
mov ecx ebx
call sub_48980b
test [ ebx + 0x75 ] 0x50
mov [ ebp - 0x4 ] eax
lea esi [ ebx + 0x38 ]
jne r-xdata
mov eax [ ebx + 0x70 ]
mov ecx [ ebx + 0x48 ]
and eax 0x40
mov [ ebx + 0xa8 ] ecx
mov ecx [ ebx + 0x4c ]
or ah 0x20
push eax
push ecx
push [ ebx + 0x48 ]
mov [ ebx + 0xa4 ] eax
mov [ ebx + 0xac ] ecx
test ah 0xa0
je r-xdata
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ eax + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax 0xe81b
jb r-xdata
lea esi [ ebx + 0x28 ]
test ah 0x50
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
mov ecx [ ebx + 0x6c ]
push eax
push [ ebp - 0x4 ]
push [ ebx + 0x68 ]
call sub_48e6dd
mov ebx [ ebx + 0x6c ]
push 0x1
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0xc8 ]
pop edi
pop esi
jmp r-xdata
cmp eax 0xe81e
ja r-xdata
mov eax [ ebx + 0x70 ]
mov ecx [ ebx + 0x58 ]
and eax 0x40
mov [ ebx + 0xa8 ] ecx
mov ecx [ ebx + 0x5c ]
or ah 0x10
push eax
push ecx
push [ ebx + 0x58 ]
mov [ ebx + 0xa4 ] eax
mov [ ebx + 0xac ] ecx
jmp r-xdata
cmp [ ebx + 0x7c ] 0x0
jne r-xdata
pop ebx
leave
retn
mov [ ebx + 0x90 ] eax
lea eax [ ebx + 0x94 ]
lea esi [ ebp - 0x14 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_4803ee
push [ ebx + 0x68 ]
mov ecx [ ebx + 0x6c ]
call sub_48e7b7
sub_4890b1
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov ebx ecx
xor esi esi
push edi
mov [ ebx + 0x88 ] esi
call sub_489482
mov ecx [ ebx + 0x84 ]
lea edi [ ebx + 0x84 ]
call sub_480372
test al 0x1
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x68 ]
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8c ] eax
mov eax [ ecx ]
push 0x6
lea edx [ ebp - 0x10 ]
push esi
push edx
call [ eax + 0xbc ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] ecx
mov ecx edx
add ecx eax
lea edi [ ebx + 0x28 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x24 ]
add esi ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] esi
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ecx
add edx eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
lea edi [ ebx + 0x38 ]
add esi ecx
mov [ ebp - 0x18 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp - 0xc ] esi
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] ecx
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebx + 0x48 ]
lea esi [ ebp - 0x18 ]
mov edi eax
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xc40000
push eax
movsd [ edi ] [ esi ]
call sub_48f9ae
mov eax [ rw-data ]
lea esi [ ebx + 0x48 ]
neg eax
push eax
mov eax [ rw-data ]
neg eax
push eax
push esi
call [ InflateRect@IAT ]
mov edx [ ebx + 0x40 ]
mov edi [ ebx + 0x44 ]
sub edx [ ebx + 0x38 ]
sub edi [ ebx + 0x3c ]
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
sub eax [ esi ]
sub ecx [ esi + 0x4 ]
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
sub eax edx
sub ecx edi
lea edi [ ebx + 0x58 ]
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
and [ ebx + 0x74 ] 0x0
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call sub_4891fe
mov ecx ebx
call sub_489853
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ edi ]
push esi
call sub_4803a8
sub_4891fe
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
push 0x2
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
sub eax ecx
mov ecx [ ebp + 0xc ]
sub ecx edx
mov edx [ ebx + 0x8c ]
cmp edx 0xa
pop esi
je r-xdata
add [ ebx + 0x28 ] eax
jmp r-xdata
cmp edx 0xb
je r-xdata
mov eax [ ebx + 0x30 ]
sub eax [ ebx + 0x28 ]
cmp edx 0xa
jne r-xdata
push 0x22
cmp edx 0xc
pop esi
jne r-xdata
mov ecx [ ebx + 0x68 ]
push edi
push esi
push eax
mov edx [ ecx ]
lea eax [ ebp - 0x10 ]
push eax
call [ edx + 0xbc ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
call [ GetDesktopWindow@IAT ]
lea ecx [ ebp - 0x38 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
lea esi [ ebx + 0x48 ]
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x8c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp eax 0xa
pop edi
je r-xdata
xor eax eax
add [ ebx + 0x30 ] eax
add [ ebx + 0x34 ] ecx
add [ ebx + 0x2c ] ecx
jmp r-xdata
mov eax [ ebx + 0x58 ]
sub eax [ ebx + 0x60 ]
sub eax [ ebp - 0x8 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebx + 0x5c ]
sub eax [ ebx + 0x64 ]
sub eax [ ebp - 0x4 ]
add eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
cmp eax 0xc
je r-xdata
test eax eax
jge r-xdata
mov eax [ ebx + 0x34 ]
sub eax [ ebx + 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x0
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx ebx
mov [ ebx + 0x8 ] eax
call sub_48958c
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebx + 0x40 ]
sub eax [ ebp - 0x8 ]
mov [ ebx + 0x38 ] eax
mov eax [ ebx + 0x44 ]
sub eax [ ebp - 0x4 ]
mov [ ebx + 0x3c ] eax
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x60 ]
sub eax [ ebx + 0x58 ]
add eax [ ebp - 0x28 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x64 ]
sub eax [ ebx + 0x5c ]
add eax [ ebp - 0x24 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
add eax [ ebp - 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebx + 0x3c ]
add eax [ ebp - 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x50 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x54 ] eax
jmp r-xdata
sub_489366
push ecx
push ecx
push esi
mov esi ecx
call sub_489543
mov edx [ esi + 0x40 ]
mov ecx [ esi + 0x68 ]
sub edx [ esi + 0x38 ]
push 0x42
mov eax [ ecx ]
push edx
lea edx [ esp + 0xc ]
push edx
call [ eax + 0xbc ]
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0x6c ]
and eax 0x40
or ax 0x2004
push eax
push [ esi + 0x4c ]
push [ esi + 0x48 ]
push [ esi + 0x68 ]
call sub_48e7b7
pop esi
pop ecx
pop ecx
retn
sub_4893a9
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
mov ecx [ ebx + 0x68 ]
call sub_48d484
test eax eax
je r-xdata
mov eax [ ebx + 0xa8 ]
mov ecx [ ebx + 0xac ]
test eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
jl r-xdata
mov eax [ ebx + 0x68 ]
test [ eax + 0x69 ] 0xf0
je r-xdata
mov eax [ ebx + 0x94 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x98 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x68 ]
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
lea ecx [ ebp - 0x8 ]
push ecx
push [ eax + 0x1c ]
call [ ClientToScreen@IAT ]
test ecx ecx
jge r-xdata
pop ebx
leave
retn
push esi
push edi
lea esi [ ebx + 0x94 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x90 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor esi esi
test eax eax
je r-xdata
push [ ebx + 0xa4 ]
mov ecx [ ebx + 0x6c ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebx + 0x68 ]
call sub_48e7b7
mov ecx [ ebx + 0x6c ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebx + 0x68 ]
call sub_48e732
mov ecx [ ebx + 0x6c ]
push 0x1
mov eax [ ecx ]
call [ eax + 0xc8 ]
pop edi
pop esi
jmp r-xdata
mov ecx [ ebx + 0x6c ]
push eax
call sub_48cbca
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_48042a
sub_489482
sub esp 0x1c
lea eax [ esp ]
push ebx
push ebp
push esi
xor ebx ebx
push edi
push ebx
mov edi [ PeekMessageA@IAT ]
push 0xf
pop ebp
mov esi ecx
push ebp
push ebp
push ebx
push eax
mov eax [ esi + 0x68 ]
mov ecx [ eax + 0x68 ]
mov [ esi + 0x70 ] ecx
mov eax [ eax + 0x64 ]
and eax 0xf000
mov [ esi + 0x78 ] eax
lea eax [ esi + 0xc ]
push eax
call [ SetRectEmpty@IAT ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] ebx
call [ GetDesktopWindow@IAT ]
push eax
call sub_478d3a
mov edi eax
push [ edi + 0x1c ]
call [ LockWindowUpdate@IAT ]
test eax eax
je r-xdata
push ebp
push ebp
lea eax [ esp + 0x18 ]
push ebx
push eax
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
push 0x3
push 0x403
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
lea eax [ esp + 0x10 ]
push eax
call [ DispatchMessageA@IAT ]
push ebx
push ebp
push ebp
lea eax [ esp + 0x1c ]
push ebx
push eax
jmp r-xdata
push ebx
push [ edi + 0x1c ]
call [ GetDCEx@IAT ]
push eax
call sub_47fc89
mov [ esi + 0x84 ] eax
call edi
test eax eax
je r-xdata
sub_489543
push esi
push edi
mov esi ecx
push 0x1
call sub_48958c
call [ ReleaseCapture@IAT ]
call [ GetDesktopWindow@IAT ]
push eax
call sub_478d3a
push 0x0
mov edi eax
call [ LockWindowUpdate@IAT ]
mov eax [ esi + 0x84 ]
add esi 0x84
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ eax + 0x4 ]
push [ edi + 0x1c ]
call [ ReleaseDC@IAT ]
and [ esi ] 0x0
sub_48958c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push 0x1
pop eax
mov ebx ecx
push 0x0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
call [ GetStockObject@IAT ]
push eax
call sub_4806f9
mov esi eax
mov [ ebp - 0xc ] esi
call sub_48998f
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x74 ]
mov [ ebp - 0x8 ] esi
mov esi 0xa000
test esi eax
je r-xdata
test ah 0x50
je r-xdata
lea esi [ ebx + 0x28 ]
mov edi [ GetSystemMetrics@IAT ]
push 0x20
call edi
dec eax
push 0x21
mov [ ebp - 0x14 ] eax
call edi
dec eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x78 ]
test esi eax
je r-xdata
lea esi [ ebx + 0x38 ]
jmp r-xdata
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
test ah 0x50
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
lea esi [ ebx + 0x58 ]
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea esi [ ebx + 0x48 ]
jmp r-xdata
cmp [ ebx + 0x24 ] esi
mov eax [ ebp - 0x4 ]
jne r-xdata
test [ ebx + 0x75 ] 0xf0
je r-xdata
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
push eax
lea edi [ ebx + 0xc ]
push [ ebp - 0x8 ]
mov ecx [ ebx + 0x84 ]
lea eax [ ebp - 0x24 ]
push [ ebx + 0x20 ]
push [ ebx + 0x1c ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push eax
call sub_489a02
lea esi [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebx + 0x20 ] eax
xor eax eax
cmp [ ebp - 0x8 ] ecx
movsd [ edi ] [ esi ]
sete al
pop edi
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
leave
retn 0x4
mov eax [ ebp - 0xc ]
push 0xffffffff
lea eax [ ebp - 0x24 ]
push 0xffffffff
push eax
call [ InflateRect@IAT ]
sub_4896a2
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
cmp [ ecx ] eax
je r-xdata
pop esi
retn 0x8
mov [ ecx ] eax
mov eax [ esi + 0x70 ]
test ah 0xa0
je r-xdata
xor eax eax
test ah 0x50
je r-xdata
mov ecx esi
call sub_4896f4
xor eax eax
jmp r-xdata
cmp [ esi + 0x7c ] 0x0
je r-xdata
push 0x0
mov ecx esi
mov [ esi + 0x74 ] eax
call sub_48958c
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x80 ] 0x0
mov [ esi + 0x7c ] eax
je r-xdata
sub_4896f4
push ecx
push ebx
push ebp
mov ebx ecx
push esi
push edi
mov edi 0xa000
mov esi [ ebx + 0x78 ]
xor eax eax
and esi edi
cmp [ ebx + 0x7c ] eax
je r-xdata
cmp esi eax
mov ebp 0xffffafff
je r-xdata
xor ecx ecx
cmp esi eax
sete cl
mov esi ecx
mov ecx [ ebx + 0x70 ]
test ch 0x50
je r-xdata
mov ecx [ ebx + 0x70 ]
test edi ecx
je r-xdata
cmp [ ebx + 0x7c ] 0x0
jne r-xdata
and ch 0x5f
push eax
push ecx
lea esi [ ebx + 0x38 ]
and ecx ebp
push eax
push ecx
lea esi [ ebx + 0x28 ]
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
test eax eax
jne r-xdata
sub esp 0x10
mov ecx [ ebx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_48e8b4
mov ecx [ ebx + 0x70 ]
test ch 0xa0
je r-xdata
mov ecx [ ebx + 0x70 ]
test ch 0x50
je r-xdata
and ecx ebp
push eax
push ecx
lea esi [ ebx + 0x38 ]
sub esp 0x10
mov ecx [ ebx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_48e8b4
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x70 ]
and eax ebp
push 0x0
push eax
lea esi [ ebx + 0x28 ]
sub esp 0x10
mov ecx [ ebx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_48e8b4
mov ecx eax
sub eax [ esp + 0x10 ]
neg eax
sbb eax eax
not eax
and eax ecx
jne r-xdata
mov ebp 0xffff5fff
push 0x0
and ecx ebp
lea esi [ ebx + 0x28 ]
push ecx
mov ecx [ ebx + 0x6c ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_48e8b4
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x70 ]
and eax ebp
push 0x0
push eax
lea esi [ ebx + 0x38 ]
sub esp 0x10
mov ecx [ ebx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_48e8b4
mov ecx eax
sub eax [ esp + 0x10 ]
neg eax
sbb eax eax
not eax
and eax ecx
sub_48980b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test ah 0xa0
push edi
je r-xdata
test ah 0x50
je r-xdata
lea edx [ ebp + 0x8 ]
and ah 0xaf
push edx
push eax
lea esi [ ecx + 0x28 ]
jmp r-xdata
xor eax eax
lea edx [ ebp + 0x8 ]
and ah 0x5f
push edx
push eax
lea esi [ ecx + 0x38 ]
sub esp 0x10
mov ecx [ ecx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_48e8b4
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_489853
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ GetCapture@IAT ]
mov esi ecx
call edi
test eax eax
jne r-xdata
xor eax eax
mov eax [ esi + 0x68 ]
push [ eax + 0x1c ]
call [ SetCapture@IAT ]
push eax
call sub_478d3a
call edi
push eax
call sub_478d3a
cmp eax [ esi + 0x68 ]
jne r-xdata
mov ecx esi
call sub_489543
xor ebx ebx
push [ ebp - 0x14 ]
call sub_49688f
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x100
je r-xdata
cmp [ esi + 0x88 ] ebx
je r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x14 ] 0x1b
je r-xdata
push 0x1
mov ecx esi
push [ ebp - 0x14 ]
call sub_488f72
cmp [ esi + 0x88 ] ebx
je r-xdata
sub eax 0xff
je r-xdata
call edi
push eax
call sub_478d3a
cmp eax [ esi + 0x68 ]
je r-xdata
push ebx
mov ecx esi
push [ ebp - 0x14 ]
call sub_488f72
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ esi + 0x88 ] ebx
mov edx [ ebp - 0x4 ]
push ecx
push ecx
mov eax esp
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx esi
je r-xdata
dec eax
dec eax
je r-xdata
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push ebx
push eax
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
call sub_4891fe
jmp r-xdata
call sub_488ef6
jmp r-xdata
cmp [ esi + 0x88 ] ebx
mov ecx esi
je r-xdata
dec eax
dec eax
je r-xdata
call sub_489366
call sub_488fa6
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop eax
jmp r-xdata
sub_48998f
push ebp
mov ebp esp
sub esp 0x10
push edi
push 0x8
call sub_493376
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_4933e6
push [ rw-data ]
call sub_4806f9
pop edi
leave
retn
xor edx edx
lea eax [ ebp - 0x10 ]
mov ecx edx
mov edi 0x5555
and ecx 0x1
shl edi cl
inc edx
mov [ eax ] di
inc eax
inc eax
cmp edx 0x8
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x1
push 0x8
push 0x8
call [ CreateBitmap@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ CreatePatternBrush@IAT ]
push edi
mov [ rw-data ] eax
call [ DeleteObject@IAT ]
sub_489a02
mov eax sub_49a994
call sub_469294
sub esp 0x38
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x2c ]
call sub_401280
mov esi r--data
mov [ ebp - 0x2c ] esi
xor ebx ebx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] ebx
call sub_401280
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_401280
mov [ ebp - 0x14 ] esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call [ CreateRectRgnIndirect@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_48070e
push [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
push eax
call [ CopyRect@IAT ]
mov eax [ ebp + 0x10 ]
neg eax
push eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ InflateRect@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ IntersectRect@IAT ]
lea eax [ ebp - 0x44 ]
push eax
call [ CreateRectRgnIndirect@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_48070e
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_48070e
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x28 ]
call [ CombineRgn@IAT ]
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp [ ebp + 0x24 ] ebx
jne r-xdata
call sub_48998f
mov [ ebp + 0x20 ] eax
lea ecx [ ebp - 0x24 ]
call sub_401280
mov [ ebp - 0x24 ] esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x3
call sub_401280
mov [ ebp - 0x34 ] esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x4
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x20 ]
mov [ ebp + 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_48070e
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push [ ebp - 0x18 ]
call [ SetRectRgn@IAT ]
lea eax [ ebp - 0x44 ]
push esi
push eax
call [ CopyRect@IAT ]
mov eax [ ebp + 0x1c ]
neg eax
push eax
mov eax [ ebp + 0x18 ]
neg eax
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ InflateRect@IAT ]
lea eax [ ebp - 0x44 ]
push esi
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ IntersectRect@IAT ]
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ ebp - 0x10 ]
call [ SetRectRgn@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x20 ]
call [ CombineRgn@IAT ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
cmp [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x34 ]
jne r-xdata
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_48070e
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x28 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x20 ]
push ecx
push [ ebp - 0x30 ]
call [ CombineRgn@IAT ]
push eax
mov ecx edi
call sub_4801f8
mov eax [ edi ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push [ ebp + 0x20 ]
mov ecx edi
call sub_47fe32
mov ecx [ ebp - 0x3c ]
mov esi eax
mov eax [ ebp - 0x38 ]
sub ecx [ ebp - 0x44 ]
sub eax [ ebp - 0x40 ]
push 0x5a0049
push eax
push ecx
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ edi + 0x4 ]
call [ PatBlt@IAT ]
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call sub_4801f8
mov eax [ edi ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push [ ebp + 0x24 ]
mov ecx edi
call sub_47fe32
mov ecx [ ebp - 0x3c ]
mov esi eax
mov eax [ ebp - 0x38 ]
sub ecx [ ebp - 0x44 ]
sub eax [ ebp - 0x40 ]
push 0x5a0049
push eax
push ecx
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ edi + 0x4 ]
call [ PatBlt@IAT ]
push esi
mov ecx edi
call sub_47fe32
push ebx
mov ecx edi
call sub_4801f8
mov esi r--data
mov [ ebp - 0x34 ] esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x5
call sub_480765
mov [ ebp - 0x24 ] esi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x6
call sub_480765
mov [ ebp - 0x14 ] esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x7
call sub_480765
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
call sub_480765
mov [ ebp - 0x2c ] esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x9
call sub_480765
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x20
push esi
mov ecx edi
call sub_47fe32
sub_489d06
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
push [ ebp + 0x18 ]
push [ esi + 0x4 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
add eax edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
add ecx eax
xor eax eax
mov [ ebp - 0x4 ] ecx
push eax
push eax
lea ecx [ ebp - 0x10 ]
push eax
push ecx
push 0x2
push eax
push eax
push [ esi + 0x4 ]
call [ ExtTextOutA@IAT ]
pop esi
leave
retn 0x14
sub_489d52
mov eax [ esp + 0x4 ]
push esi
push edi
push [ esp + 0x14 ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov edi [ eax + 0xc ]
push [ esp + 0x14 ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
push edx
push esi
call sub_489d7d
pop edi
pop esi
retn 0xc
sub_489d7d
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x18 ]
lea eax [ esi - 0x1 ]
push 0x1
push eax
push ebx
push [ ebp + 0x8 ]
call sub_489d06
mov edi [ ebp + 0x14 ]
push [ ebp + 0x18 ]
mov ecx [ ebp - 0x4 ]
lea eax [ edi - 0x1 ]
push eax
push 0x1
push ebx
push [ ebp + 0x8 ]
call sub_489d06
push [ ebp + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax esi
push edi
push 0xffffffff
push ebx
push eax
call sub_489d06
push [ ebp + 0x1c ]
mov ecx [ ebp - 0x4 ]
add ebx edi
push 0xffffffff
push esi
push ebx
push [ ebp + 0x8 ]
call sub_489d06
pop edi
pop esi
pop ebx
leave
retn 0x18
sub_489de7
push ebp
mov ebp esp
sub esp 0x50
mov eax [ ebp + 0xc ]
push ebx
test eax eax
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx eax
mov ebx [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
call [ CreateFontIndirectA@IAT ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_48070e
pop edi
pop ebx
leave
retn 0x8
push ebx
push edi
call [ ReleaseDC@IAT ]
push esi
mov esi [ ebp + 0x8 ]
push 0xf
lea edi [ ebp - 0x50 ]
pop ecx
push 0x5a
push ebx
[ edi ] [ esi ]
call [ GetDeviceCaps@IAT ]
imul eax [ ebp - 0x50 ]
cdq
mov ecx 0x2d0
mov esi [ DPtoLP@IAT ]
idiv ecx
push 0x1
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push eax
push ebx
call esi
lea eax [ ebp - 0xc ]
push 0x1
xor edi edi
push eax
push ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
call esi
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x8 ]
push eax
call sub_46836b
neg eax
cmp [ ebp + 0xc ] edi
pop ecx
mov [ ebp - 0x50 ] eax
pop esi
jne r-xdata
sub_489e85
push ebp
mov ebp esp
push 0x0
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
call [ eax + 0x54 ]
pop ebp
retn 0x14
sub_489ea7
mov eax sub_49aa2c
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_479569
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_489edf
mov eax sub_49aa40
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_479569
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_489f17
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47abd8
jmp r-xdata
pop ebp
retn 0x10
sub_489f66
mov eax sub_49aa54
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_479569
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_489fab
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
dec eax
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xbc ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc4 ]
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
shr edx 0x10
push edx
movzx edx [ ebp + 0xc ]
push edx
call [ eax + 0xc8 ]
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
shr edx 0x10
push edx
movzx edx [ ebp + 0xc ]
push edx
call [ eax + 0xcc ]
sub eax 0xa
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc0 ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47abd8
jmp r-xdata
pop ebp
retn 0x10
sub_48a044
push esi
push edi
push 0x0
mov esi [ SendMessageA@IAT ]
push [ esp + 0x10 ]
mov edi ecx
push 0x18a
push [ edi + 0x1c ]
call esi
mov ecx [ esp + 0x10 ]
push eax
call sub_47cacf
push eax
push [ esp + 0x10 ]
push 0x189
push [ edi + 0x1c ]
call esi
mov ecx [ esp + 0x10 ]
push 0xffffffff
call sub_47caa7
pop edi
pop esi
retn 0x8
sub_48a087
movzx eax [ esp + 0x8 ]
movzx edx [ esp + 0x4 ]
shl eax 0x10
or eax edx
push eax
push 0x0
push 0x1a9
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
mov edx [ esp + 0xc ]
mov ecx eax
shr ecx 0x10
neg cx
sbb ecx ecx
neg ecx
mov [ edx ] ecx
movzx eax ax
retn 0xc
sub_48a0bf
mov eax sub_49aa68
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_479569
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48a0fa
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
dec eax
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xbc ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc4 ]
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc0 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47abd8
jmp r-xdata
pop ebp
retn 0x10
sub_48a161
push esi
push edi
push 0x0
mov esi [ SendMessageA@IAT ]
push [ esp + 0x10 ]
mov edi ecx
push 0x149
push [ edi + 0x1c ]
call esi
mov ecx [ esp + 0x10 ]
push eax
call sub_47cacf
push eax
push [ esp + 0x10 ]
push 0x148
push [ edi + 0x1c ]
call esi
mov ecx [ esp + 0x10 ]
push 0xffffffff
call sub_47caa7
pop edi
pop esi
retn 0x8
sub_48a1c5
mov eax sub_49aa7c
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_479569
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48a21e
mov eax sub_49aa90
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_479569
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48a291
push ebx
push esi
push edi
mov edi ecx
push 0x0
call sub_48a6e8
mov ebx [ esp + 0x10 ]
mov esi 0x111
test eax eax
je r-xdata
push [ esp + 0x14 ]
mov ecx edi
push ebx
call sub_48b66c
test eax eax
jne r-xdata
push [ esp + 0x14 ]
push ebx
push esi
push [ eax + 0x1c ]
push eax
call sub_478b79
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ esp + 0x14 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
mov eax ebx
and ax 0xf000
cmp ax 0xf000
jne r-xdata
mov eax [ edi ]
push 0x0
push ebx
push esi
mov ecx edi
call [ eax + 0xa0 ]
sub_48a2fa
mov eax sub_49ace8
call sub_469294
push ecx
push ecx
push ebx
push esi
push edi
mov ebx ecx
push 0x0
call sub_48a6e8
mov edi eax
test edi edi
je r-xdata
push [ ebp + 0x14 ]
mov ecx ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_48c00e
call sub_4902c7
mov esi eax
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0xc4 ]
mov [ esi + 0xc4 ] ebx
mov [ ebp - 0x14 ] eax
push [ ebp + 0x14 ]
mov eax [ edi ]
and [ ebp - 0x4 ] 0x0
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
mov [ esi + 0xc4 ] eax
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
sub_48a38b
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push 0x0
mov ecx edi
call sub_48a6e8
test eax eax
je r-xdata
call sub_47ba94
test eax eax
je r-xdata
push esi
mov ecx edi
push [ esp + 0x10 ]
call sub_48b5fe
test eax eax
jne r-xdata
push esi
push [ esp + 0x10 ]
push 0x365
push [ eax + 0x1c ]
push eax
call sub_478b79
test eax eax
jne r-xdata
mov esi [ edi + 0x90 ]
add esi 0x10000
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
call sub_4904f9
cmp [ eax + 0x4 ] 0x0
je r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
push 0x1
push esi
mov ecx eax
mov edx [ eax ]
call [ edx + 0x98 ]
sub_48a410
push esi
mov esi ecx
xor eax eax
cmp [ esi + 0x44 ] eax
jne r-xdata
mov edx [ esi ]
push eax
push [ esp + 0xc ]
mov ecx esi
call [ edx + 0xf4 ]
pop esi
retn 0x8
push edi
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
push eax
call sub_47e451
mov edi eax
push [ edi + 0x4 ]
call [ GetMenuItemCount@IAT ]
add eax 0xfffffffe
push eax
push [ edi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_47e451
pop edi
sub_48a45c
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
mov esi ecx
mov ebx 0x56800001
mov [ ebp - 0x4 ] edi
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax edi
jne r-xdata
mov ebx 0x56000001
mov [ ebp - 0x4 ] 0x200
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] edi
jmp r-xdata
call sub_4904f9
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push 0xe900
push [ esi + 0x1c ]
push edi
push edi
push edi
push edi
push ebx
push edi
push r--data
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
cmp eax edi
mov [ esi + 0xbc ] eax
pop edi
pop esi
pop ebx
jne r-xdata
push 0x28
or ebx ecx
push edi
push eax
mov ecx esi
call sub_47bc1a
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0xff00
mov ecx [ eax + 0x20 ]
mov eax 0x300000
and ecx eax
je r-xdata
push eax
call [ BringWindowToTop@IAT ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
leave
retn 0x8
sub_48a520
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
mov eax [ esi + 0x4 ]
cmp eax 0x201
je r-xdata
push [ esi ]
call sub_4830a1
cmp eax 0xa1
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ edi + 0x68 ]
test ecx ecx
je r-xdata
push esi
mov ecx edi
call sub_479601
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push 0x0
mov ecx edi
call sub_48a6e8
test eax eax
je r-xdata
mov eax [ ecx ]
push esi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ebx 0x100
cmp eax ebx
jb r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x90 ]
test eax eax
jne r-xdata
xor eax eax
cmp eax 0x108
ja r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov ecx edi
call sub_48c57e
test eax eax
jne r-xdata
push esi
push eax
push [ edi + 0x1c ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
push esi
push [ edi + 0xbc ]
call [ TranslateMDISysAccel@IAT ]
test eax eax
je r-xdata
cmp eax 0x104
jne r-xdata
sub_48a5f8
push esi
push edi
mov edi ecx
test [ edi + 0xb8 ] 0x1
lea esi [ edi + 0xb8 ]
je r-xdata
mov ecx edi
call sub_48d143
pop edi
pop esi
retn
push [ edi + 0x1c ]
call [ DrawMenuBar@IAT ]
and [ esi ] 0xfffffffe
sub_48a653
push esi
mov esi ecx
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_48bcdd
test eax eax
je r-xdata
pop esi
retn 0x10
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
push 0x1
mov [ esi + 0x44 ] eax
pop eax
sub_48a682
push esi
push edi
mov esi ecx
call sub_48bf9a
cmp [ esi + 0x44 ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi + 0x1c ]
mov edi [ esi + 0x44 ]
call [ GetMenu@IAT ]
cmp eax edi
je r-xdata
push 0x0
push edi
push 0x230
push [ esi + 0xbc ]
call [ SendMessageA@IAT ]
sub_48a6e8
mov eax [ ecx + 0xbc ]
test eax eax
jne r-xdata
push esi
push edi
mov edi [ esp + 0xc ]
push edi
push 0x0
push 0x229
push eax
call [ SendMessageA@IAT ]
push eax
call sub_478d3a
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
cmp [ esi + 0xc0 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
mov ecx esi
call sub_47bbe6
test eax 0x10000000
jne r-xdata
retn 0x4
xor esi esi
test edi edi
je r-xdata
and [ edi ] esi
sub_48a7a2
push ecx
push ebp
mov ebp ecx
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push ebx
push esi
push edi
mov ecx ebp
call sub_48ae56
mov edi eax
push 0xfffffff0
mov esi [ edi + 0x1c ]
push esi
call [ GetWindowLongA@IAT ]
mov ebx [ SetWindowLongA@IAT ]
and ah 0x7f
push eax
push 0xfffffff0
push esi
call ebx
mov ecx ebp
mov [ esp + 0x10 ] eax
call sub_4671ff
push esi
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
pop edi
pop esi
pop ebx
push [ esp + 0x10 ]
push 0xfffffff0
push esi
call ebx
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0xe0 ]
pop ebp
pop ecx
retn
sub_48a80b
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax [ edi + 0x4 ]
cmp eax 0x201
je r-xdata
push [ edi ]
call sub_4830a1
cmp eax 0xa1
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp eax 0x100
jb r-xdata
push edi
mov ecx esi
call sub_479601
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
xor eax eax
cmp eax 0x108
ja r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe8 ]
test eax eax
je r-xdata
push edi
push eax
mov ecx esi
call sub_48ae56
push [ eax + 0x1c ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
je r-xdata
sub_48a884
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
mov edi ecx
jne r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
sub ebx ecx
sub eax edx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x44 ] eax
mov eax [ esi + 0x1c ]
and [ ebp - 0x4c ] 0x0
mov [ ebp - 0x48 ] eax
call sub_4904f9
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
call sub_47ccf5
mov esi [ eax + 0x1c ]
mov eax [ ebp - 0x2c ]
push edi
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x34 ]
and eax 0xeeffffff
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x4 ] eax
call sub_4791ec
mov ebx [ SendMessageA@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
push [ esi + 0xbc ]
call ebx
mov [ ebp + 0x18 ] eax
call sub_479238
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xa4 ]
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
test [ ebp - 0x31 ] 0x10
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x18
push 0x1
pop eax
push [ ebp + 0x18 ]
call [ BringWindowToTop@IAT ]
test [ ebp - 0x31 ] 0x20
je r-xdata
test [ ebp - 0x31 ] 0x1
je r-xdata
push 0x2
jmp r-xdata
push 0x1
push 0x3
jmp r-xdata
mov ecx edi
call sub_47bda6
push 0x0
push [ edi + 0x1c ]
push 0x222
push [ esi + 0xbc ]
call ebx
push 0x0
push 0x0
push 0x234
push [ esi + 0xbc ]
call ebx
sub_48a9e7
mov eax sub_49ad04
call sub_469294
or [ ebp + 0xf ] 0x40
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test ebx ebx
mov [ esi + 0x8c ] edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x14 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
push edi
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_47e84a
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push ebx
mov edx [ esi ]
push [ ebp + 0x10 ]
mov ecx esi
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
mov [ ebp + 0xc ] edx
call sub_48bc5a
push eax
mov eax [ ebp + 0xc ]
mov ecx esi
call [ eax + 0xf4 ]
test eax eax
jne r-xdata
push 0xa
push 0x0
push [ ebp + 0x14 ]
lea eax [ ebp + 0x8 ]
push eax
call sub_47e8f5
mov ecx [ eax + 0x64 ]
mov [ esi + 0xbc ] ecx
mov eax [ eax + 0x68 ]
mov [ esi + 0x48 ] eax
push 0x1
pop esi
xor esi esi
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x8 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
sub_48aab1
push esi
mov esi ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_48d31c
mov ecx esi
call sub_48ae56
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0xe0 ]
pop esi
retn 0xc
sub_48aadc
push ecx
push ebx
push ebp
xor ebx ebx
mov ebp ecx
cmp [ rw-data ] ebx
push esi
push edi
mov [ esp + 0x10 ] ebp
je r-xdata
xor eax eax
call sub_48ae56
mov esi eax
push ebx
mov ecx esi
call sub_48a6e8
mov edi eax
cmp edi ebx
je r-xdata
push 0xffffffec
push [ esi + 0xbc ]
call [ GetWindowLongA@IAT ]
cmp edi ebx
mov ebp eax
je r-xdata
cmp edi ebp
jne r-xdata
mov edi ebp
or edi 0x200
mov ecx [ esp + 0x10 ]
call sub_47bc00
test ah 0x2
jne r-xdata
push 0x81
push ebx
push ebx
push [ esi + 0xbc ]
call [ RedrawWindow@IAT ]
push edi
push 0xffffffec
push [ esi + 0xbc ]
call [ SetWindowLongA@IAT ]
push 0x137
push ebx
push ebx
push ebx
push ebx
push ebx
push [ esi + 0xbc ]
call [ SetWindowPos@IAT ]
cmp [ esp + 0x18 ] ebx
je r-xdata
mov ecx [ esp + 0x10 ]
call sub_47bbe6
test eax 0x1000000
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ esp + 0x18 ]
push [ esi + 0xbc ]
call [ GetClientRect@IAT ]
mov edi ebp
and edi 0xfffffdff
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
cmp ebp edi
je r-xdata
sub_48abb7
push ebp
mov ebp esp
sub esp 0x10
cmp [ rw-data ] 0x0
push esi
push edi
mov edi ecx
je r-xdata
mov ecx edi
call sub_478ca1
pop edi
pop esi
leave
retn 0x4
mov esi [ ebp + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_48aadc
test eax eax
je r-xdata
mov ecx edi
call sub_47bbe6
test eax 0x1000000
je r-xdata
mov ecx edi
call sub_47bc00
push eax
push 0x0
mov ecx edi
call sub_47bbe6
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ AdjustWindowRectEx@IAT ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x8 ] eax
sub edx eax
mov eax [ ebp - 0x4 ]
sub eax ecx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] eax
sub_48ac4e
push esi
push edi
mov esi ecx
call sub_478ca1
mov edi eax
cmp edi 0x3
je r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
cmp edi 0x4
je r-xdata
mov ecx esi
call sub_48ae56
push 0x0
mov ecx eax
call sub_48a6e8
cmp eax esi
je r-xdata
mov ecx esi
call sub_467226
sub_48ac85
push esi
mov esi ecx
call sub_478c6c
mov eax [ eax ]
cmp eax [ esi + 0x1c ]
je r-xdata
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_48cc6c
xor eax eax
jmp r-xdata
pop esi
retn 0xc
sub_48acaf
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_47bbe6
mov ebx eax
mov ecx esi
shr ebx 0x1c
and ebx 0x1
call sub_48ae56
mov edi [ esp + 0x14 ]
mov ebp eax
cmp edi 0xffffffff
jne r-xdata
push edi
mov ecx esi
call sub_48d3f4
mov ecx esi
call sub_48ae56
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x234
push [ eax + 0xbc ]
call edi
mov ecx esi
call sub_47bbe6
shr eax 0x1c
and eax 0x1
cmp eax ebx
je r-xdata
lea eax [ esp + 0x14 ]
mov ecx ebp
push eax
call sub_48a6e8
mov ecx esi
call sub_47bbe6
cmp [ esp + 0x14 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
xor ecx ecx
cmp eax ecx
jne r-xdata
push 0x3
test eax 0x1000000
jne r-xdata
cmp [ esi + 0xc0 ] ecx
je r-xdata
push ecx
mov ebx 0x229
push ecx
push ebx
push [ ebp + 0xbc ]
call edi
cmp eax [ esi + 0x1c ]
jne r-xdata
test eax 0x20000000
je r-xdata
push ecx
push esi
push 0x1
mov ecx esi
call sub_48af11
push 0x0
push 0x0
push 0x224
push [ ebp + 0xbc ]
call edi
push 0x0
push 0x0
push ebx
push [ ebp + 0xbc ]
call edi
cmp eax [ esi + 0x1c ]
jne r-xdata
push 0x2
jmp r-xdata
push esi
push 0x0
push 0x0
mov ecx esi
call sub_48af11
mov [ esi + 0xc0 ] 0x1
jmp r-xdata
pop edi
sub_48adaa
cmp [ esp + 0x4 ] 0x0
push ebx
push ebp
push esi
push edi
je r-xdata
xor eax eax
push [ esp + 0x14 ]
call [ GetMenuItemCount@IAT ]
mov ebp eax
push ebp
push [ esp + 0x18 ]
call [ GetSubMenu@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax ebp
dec ebp
test eax eax
je r-xdata
push esi
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
push edi
push esi
call [ GetMenuItemID@IAT ]
cmp eax 0xe130
jb r-xdata
inc edi
cmp edi ebx
jl r-xdata
cmp eax 0xe13f
jbe r-xdata
jmp r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_48ae12
push esi
mov esi ecx
push 0x0
call sub_48a6e8
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push eax
push 0x1
call [ edx + 0xf8 ]
jmp r-xdata
push 0x0
push eax
push 0x230
push [ esi + 0xbc ]
call [ SendMessageA@IAT ]
mov eax [ esi + 0x44 ]
pop esi
retn 0x4
sub_48ae7c
push ebp
mov ebp esp
sub esp 0x204
push esi
mov esi ecx
call sub_48ae56
mov edx [ eax ]
push [ ebp + 0x8 ]
mov ecx eax
call [ edx + 0xe0 ]
mov ecx esi
call sub_47bbe6
test ah 0x80
je r-xdata
pop esi
leave
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test eax eax
jne r-xdata
push [ eax + 0x1c ]
push [ esi + 0xac ]
jmp r-xdata
lea eax [ ebp - 0x204 ]
push eax
push [ esi + 0x1c ]
call sub_483030
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
sub_48af11
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push 0x0
and [ esi + 0xc0 ] 0x0
call sub_48aadc
mov ecx esi
call sub_48c57e
mov ebx [ ebp + 0x8 ]
mov edi eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x68 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor eax eax
cmp ebx eax
jne r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ edi ]
push edi
push edi
push ebx
mov ecx edi
call [ eax + 0xe4 ]
push 0x1
pop eax
cmp [ ebp + 0xc ] eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test edi edi
je r-xdata
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0xe0 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi ]
push 0x0
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0xf8 ]
mov ecx esi
call sub_48ae56
push [ eax + 0x1c ]
call [ DrawMenuBar@IAT ]
call [ GetActiveWindow@IAT ]
push eax
call sub_478d3a
mov ecx esi
mov ebx eax
call sub_48ae56
cmp eax ebx
jne r-xdata
mov eax [ edi ]
push edi
push edi
push 0x1
mov ecx edi
call [ eax + 0xe4 ]
sub_48afde
push ebx
push esi
push edi
mov edi ecx
call sub_48ae56
mov esi [ esp + 0x18 ]
mov ebx eax
test esi esi
jne r-xdata
xor eax eax
cmp [ esp + 0x10 ] eax
je r-xdata
cmp [ esp + 0x10 ] esi
je r-xdata
cmp esi eax
je r-xdata
mov eax [ ebx ]
push esi
mov ecx ebx
call [ eax + 0xf8 ]
push eax
push esi
jmp r-xdata
mov esi [ edi + 0xbc ]
xor eax eax
cmp esi eax
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xbc ]
test eax eax
je r-xdata
push eax
push eax
push 0x234
cmp [ esp + 0x14 ] eax
jne r-xdata
push 0x230
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa4 ]
mov esi eax
test esi esi
jne r-xdata
push eax
push [ ebx + 0x44 ]
push [ ebx + 0xbc ]
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebx
retn 0xc
sub_48b067
push esi
mov esi ecx
call sub_478ca1
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
mov ecx esi
push edi
call [ eax + 0x5c ]
push [ edi + 0x2c ]
push 0xffffffec
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x1
pop eax
pop edi
sub_48b0a8
mov eax sub_49ad20
call sub_469294
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_47bbe6
test ah 0x80
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov ecx [ edi + 0x68 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov eax [ edi ]
mov ecx edi
xor esi esi
call [ eax + 0xbc ]
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x68 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
cmp esi ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push ebx
mov ecx edi
call sub_48a6e8
mov esi eax
cmp esi ebx
je r-xdata
push ebx
mov ecx edi
call sub_48ce17
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_47c674
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_4671e1
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c761
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
mov ecx esi
call sub_47bbe6
test eax 0x1000000
jne r-xdata
mov ebx eax
cmp [ ebp - 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx edi
push [ eax + 0x1c ]
call sub_48ce17
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
je r-xdata
sub_48b192
push esi
push edi
mov edi [ esp + 0xc ]
push 0x0
mov esi [ edi ]
call sub_48a6e8
neg eax
sbb eax eax
mov ecx edi
neg eax
push eax
call [ esi ]
pop edi
pop esi
retn 0x4
sub_48b1b1
mov eax [ esp + 0x4 ]
xor edx edx
sub eax 0xe131
je r-xdata
mov eax 0x228
dec eax
je r-xdata
mov eax 0x227
jmp r-xdata
dec eax
je r-xdata
push 0x0
push edx
push eax
push [ ecx + 0xbc ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
push 0x1
pop edx
dec eax
je r-xdata
mov eax 0x226
jmp r-xdata
xor eax eax
jmp r-xdata
retn 0x4
sub_48b1f7
push ebx
push esi
push edi
push 0x0
call sub_48a6e8
mov ebx eax
test ebx ebx
je r-xdata
push 0xffffffff
push 0x0
push 0xf109
call sub_4840fb
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xbc ]
mov edi eax
test edi edi
je r-xdata
mov esi [ edi + 0x24 ]
push ebx
push edi
mov ecx esi
mov eax [ esi ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi ]
push 0x1
push edi
push eax
mov ecx esi
call [ edx + 0x74 ]
jmp r-xdata
sub_48b26e
push esi
mov esi [ GetVersion@IAT ]
push edi
call esi
mov edi 0x80000000
test edi eax
je r-xdata
call esi
test edi eax
jne r-xdata
call esi
cmp ax 0x4
je r-xdata
and [ rw-data ] 0x0
call esi
cmp ax 0x3
jne r-xdata
push rw-data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
retn
sub_48b2b9
mov eax sub_49ad75
call sub_469294
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_478919
xor edi edi
push 0xa
lea ecx [ esi + 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_4777e2
mov eax [ rw-data ]
mov [ esi + 0xac ] eax
or [ esi + 0x40 ] 0xffffffff
lea eax [ esi + 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x9c ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xb8 ] edi
call [ SetRectEmpty@IAT ]
or [ esi + 0x88 ] 0xffffffff
mov ecx esi
mov [ esi + 0x50 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb4 ] edi
call sub_48b417
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48b397
mov eax sub_49ada1
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_48b43b
call sub_4902c7
cmp [ eax + 0xc4 ] esi
jne r-xdata
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
call sub_4902c7
and [ eax + 0xc4 ] 0x0
lea ecx [ esi + 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x6c ]
call sub_477841
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push eax
call sub_47c3de
pop ecx
sub_48b45f
push esi
mov esi ecx
call sub_4904f9
push [ esp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call [ LoadAcceleratorsA@IAT ]
xor ecx ecx
mov [ esi + 0x48 ] eax
test eax eax
setne cl
mov eax ecx
pop esi
retn 0x4
sub_48b485
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x48 ]
call [ eax + 0xbc ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa8 ]
test eax eax
je r-xdata
mov esi eax
sub_48b4a9
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax [ edi + 0x4 ]
cmp eax 0x201
je r-xdata
push [ edi ]
call sub_4830a1
cmp eax 0xa1
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
push edi
mov ecx esi
call sub_479601
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ edi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
xor eax eax
cmp eax 0x108
ja r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe8 ]
test eax eax
je r-xdata
push edi
push eax
push [ esi + 0x1c ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
je r-xdata
sub_48b548
push esi
mov esi ecx
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_478ca1
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_48b569
sub esp 0x1c
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi + 0x50 ] ebp
je r-xdata
pop esi
pop ebp
add esp 0x1c
retn
push ebx
push edi
mov edi 0x367
push 0x3
push edi
push edi
push [ esi + 0x1c ]
lea eax [ esp + 0x20 ]
push eax
call [ PeekMessageA@IAT ]
mov ebx [ PostMessageA@IAT ]
test eax eax
jne r-xdata
call [ GetCapture@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push ebp
push ebp
push edi
push [ esi + 0x1c ]
call ebx
mov ecx esi
call sub_47a448
push ebp
push ebp
mov [ esi + 0x50 ] ebp
push 0x36a
mov [ eax + 0x50 ] ebp
push [ esi + 0x1c ]
call ebx
pop edi
pop ebx
call [ ReleaseCapture@IAT ]
sub_48b5d4
push esi
mov esi ecx
call sub_47a448
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx esi
call sub_478ca1
push [ rw-data ]
call [ SetCursor@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0xc
sub_48b5fe
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
test esi esi
jne r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_47ba94
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
mov esi [ edi + 0x8c ]
add esi 0x20000
mov esi [ edi + 0x90 ]
add esi 0x10000
jmp r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
test esi esi
je r-xdata
sub_48b66c
push ebx
push esi
push edi
mov esi ecx
movzx edi [ esp + 0x10 ]
call sub_47a448
xor ecx ecx
cmp [ eax + 0x50 ] ecx
je r-xdata
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_47a1e2
cmp [ esp + 0x14 ] ecx
jne r-xdata
cmp edi 0xe146
je r-xdata
mov ebx 0xe147
cmp edi ebx
je r-xdata
cmp edi 0xe145
je r-xdata
add edi 0x10000
push edi
mov edi [ SendMessageA@IAT ]
push ecx
push 0x365
push [ esi + 0x1c ]
call edi
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push eax
push ebx
push 0x111
push [ esi + 0x1c ]
call edi
pop edi
pop esi
pop ebx
retn 0x8
sub_48b6e3
mov eax [ esp + 0x8 ]
push 0x1
pop eax
jmp r-xdata
push eax
call sub_47a326
test eax eax
je r-xdata
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esp + 0x4 ] eax
je r-xdata
sub_48b703
push ecx
push ebx
mov ebx ecx
push ebp
push esi
inc [ ebx + 0xa0 ]
cmp [ ebx + 0xa0 ] 0x1
lea eax [ ebx + 0xa0 ]
push edi
ja r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
call sub_47a36b
push 0x5
mov [ esp + 0x14 ] eax
xor ebp ebp
call [ GetDesktopWindow@IAT ]
mov edi [ GetWindow@IAT ]
push eax
call edi
mov esi eax
test esi esi
je r-xdata
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push 0x2
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_478d61
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push [ eax + 0x1c ]
call sub_48b6e3
test eax eax
je r-xdata
lea eax [ ebp * 4 + 0x4 ]
push eax
call sub_47c3b5
pop ecx
mov [ ebx + 0xa4 ] eax
push 0x5
xor ebp ebp
call [ GetDesktopWindow@IAT ]
push eax
push 0x0
push 0x0
push 0x36c
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0xa4 ]
and [ eax + ebp * 4 ] 0x0
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
inc ebp
push 0x2
push esi
jmp r-xdata
push esi
call sub_478d61
test eax eax
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push [ eax + 0x1c ]
call sub_48b6e3
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x36c
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push esi
call [ EnableWindow@IAT ]
mov eax [ ebx + 0xa4 ]
mov [ eax + ebp * 4 ] esi
inc ebp
sub_48b81f
push esi
mov esi ecx
mov ecx [ esi + 0xa0 ]
lea eax [ esi + 0xa0 ]
test ecx ecx
je r-xdata
pop esi
retn
dec ecx
test ecx ecx
mov [ eax ] ecx
ja r-xdata
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push [ esi + 0xa4 ]
call sub_47c3de
and [ esi + 0xa4 ] 0x0
pop ecx
push edi
xor edi edi
mov eax [ esi + 0xa4 ]
add edi 0x4
cmp [ edi + eax ] 0x0
jne r-xdata
mov eax [ esi + 0xa4 ]
push 0x1
push [ eax + edi ]
call [ EnableWindow@IAT ]
push [ edi + eax ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
pop edi
sub_48b88e
push ecx
push ebp
push esi
mov [ esp + 0x8 ] ecx
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebp [ GetWindow@IAT ]
push eax
call ebp
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
pop ecx
retn 0x4
push ebx
mov ebx [ ShowWindow@IAT ]
push edi
push 0x2
push esi
call ebp
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x1c ]
cmp eax esi
je r-xdata
push esi
call sub_478d61
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
push esi
push eax
call sub_48b6e3
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
cmp [ esp + 0x18 ] 0x0
jne r-xdata
test eax 0x18000000
jne r-xdata
and eax 0x18000000
cmp eax 0x10000000
jne r-xdata
test [ edi + 0x24 ] 0x2
je r-xdata
push 0x0
push esi
call ebx
or [ edi + 0x24 ] 0x2
jmp r-xdata
push 0x4
push esi
call ebx
and [ edi + 0x24 ] 0xfffffffd
sub_48b926
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
mov esi ecx
cmp edi ebx
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
test eax eax
jne r-xdata
test [ esi + 0x24 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp edi ebx
jne r-xdata
push ebx
call sub_47bde8
push ebx
call [ SetFocus@IAT ]
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ebx [ SendMessageA@IAT ]
test al 0x80
push ebp
je r-xdata
cmp [ esi + 0xa0 ] ebx
jne r-xdata
test [ esi + 0x24 ] 0x20
pop ebp
je r-xdata
and al 0x7f
mov ecx esi
mov [ esi + 0x24 ] eax
mov eax [ esi ]
call [ eax + 0x8c ]
mov ebp [ esi + 0x1c ]
call [ GetActiveWindow@IAT ]
cmp eax ebp
jne r-xdata
neg edi
sbb edi edi
mov ecx esi
and edi 0xfffffff0
add edi 0x20
push edi
call sub_48b9dc
mov eax [ esi ]
or [ esi + 0x24 ] 0x80
mov ecx esi
call [ eax + 0x88 ]
jmp r-xdata
push 0x0
push 0x1
push 0x86
push [ esi + 0x1c ]
call ebx
push 0x0
push 0x1
push 0x6
push ebp
call ebx
sub_48b9dc
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_47bbe6
test eax 0x40000000
je r-xdata
mov ecx esi
call sub_47a448
mov edi eax
mov edi esi
jmp r-xdata
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebx [ GetWindow@IAT ]
push eax
mov ecx edi
call sub_47bdcd
mov ecx [ esp + 0x14 ]
not ecx
test cl 0x8
je r-xdata
test [ esp + 0x14 ] 0xc
mov ebp [ SendMessageA@IAT ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
push esi
push [ edi + 0x1c ]
call sub_48b6e3
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x86
push [ edi + 0x1c ]
call ebp
test eax eax
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0x0
push [ esp + 0x18 ]
push 0x36d
push esi
call ebp
cmp edi esi
je r-xdata
call ebx
mov esi eax
test esi esi
je r-xdata
or [ esi + 0x25 ] 0x2
push 0x0
push 0x1
push 0x86
push [ edi + 0x1c ]
call ebp
and [ esi + 0x25 ] 0xfd
jmp r-xdata
sub_48ba86
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test ah 0x80
je r-xdata
push 0x8
call sub_47b7d9
mov [ esi + 0x28 ] r--data
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
pop eax
pop esi
retn 0x4
or [ esi + 0x2d ] 0x2
or ah 0x40
mov [ esi + 0x20 ] eax
sub_48baca
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
xor ebx ebx
cmp [ ebp + 0x1c ] edi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
lea ecx [ esi + 0xac ]
call sub_47c7b1
mov eax [ ebp + 0x18 ]
cmp eax edi
je r-xdata
call sub_4904f9
push [ ebp + 0x1c ]
mov eax [ eax + 0xc ]
push eax
call [ LoadMenuA@IAT ]
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ebx
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi ecx
sub eax edx
push edi
push eax
push ecx
push edx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x20 ]
call sub_47927a
test eax eax
jne r-xdata
mov edi [ eax + 0x1c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
jmp r-xdata
push 0x1
pop eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call [ DestroyMenu@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x20
sub_48bb62
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
push esi
mov ecx [ ebx ]
push edi
call sub_47e52c
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax [ edi ]
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
push ecx
push 0x50800000
push esi
push esi
mov ecx edi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ rw-data ] esi
je r-xdata
mov eax edi
mov ecx edi
call sub_47bc00
mov ecx 0x200
test ecx eax
je r-xdata
push 0x20
push esi
push ecx
mov ecx [ ebp - 0x4 ]
call sub_47bc4b
sub_48bbda
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0x0
je r-xdata
push 0xe900
push eax
call sub_48bb62
test eax eax
je r-xdata
retn 0x8
sub_48bc0b
push esi
mov esi ecx
call sub_478ca1
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0xc ]
call [ eax + 0xdc ]
test eax eax
jne r-xdata
pop esi
retn 0x8
push 0x0
push 0xe001
push 0x362
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
xor eax eax
sub_48bc5a
push ebp
mov ebp esp
sub esp 0x58
push esi
push edi
mov esi ecx
call sub_4904f9
movzx ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push ecx
push eax
call [ LoadIconA@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
push 0x30
lea eax [ ebp - 0x58 ]
push 0x0
push eax
call sub_467a10
mov eax [ ebp + 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x38 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
cmp [ ebp - 0x30 ] 0x0
je r-xdata
call sub_4904f9
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp - 0x30 ]
push eax
call [ GetClassInfoA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x28 ]
call sub_4799e0
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_48bcdd
mov eax sub_49adb4
call sub_469294
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x8c ] edi
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor ebx ebx
push edi
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
call sub_47e84a
test eax eax
je r-xdata
push 0x8
call sub_47b7d9
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_48bc5a
push [ ebp + 0x14 ]
mov ecx [ esi + 0xac ]
movzx edi di
push ebx
push edi
push [ ebp + 0x10 ]
push rw-data
push [ ebp + 0xc ]
push ecx
push eax
mov ecx esi
call sub_48baca
test eax eax
je r-xdata
push 0xa
push ebx
push [ ebp + 0x8 ]
lea eax [ esi + 0xac ]
push eax
call sub_47e8f5
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
push edi
mov ecx esi
mov [ esi + 0x44 ] eax
call sub_48b45f
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push 0x1
pop ebx
push 0x1
push 0x1
push ebx
push ebx
push 0x364
push [ esi + 0x1c ]
call sub_47a502
sub_48bda7
mov eax [ esp + 0x4 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push eax
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
pop esi
retn 0x4
mov eax [ esi ]
call [ eax + 0xbc ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa4 ]
test eax eax
jne r-xdata
sub_48bddd
push ebx
push esi
push edi
mov esi ecx
xor edi edi
call sub_48c57e
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esp + 0x14 ] ebx
je r-xdata
push 0x1
push 0xe900
push [ esi + 0x1c ]
call sub_47a489
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
push 0x1
push 0x1
push ebx
push ebx
push 0x364
push [ esi + 0x1c ]
call sub_47a502
cmp edi ebx
je r-xdata
push r--data
mov ecx ebx
call sub_47e4fa
test eax eax
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xe0 ]
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ ecx ]
call [ eax + 0xa0 ]
or ebx 0xffffffff
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
push esi
push ebx
mov ecx edi
call [ eax + 0xe8 ]
push 0x0
push ebx
mov ecx esi
mov edi ebx
call sub_48c585
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xcc ]
test edi edi
je r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov eax [ edi ]
push edi
push edi
push 0x1
mov ecx edi
call [ eax + 0xe4 ]
mov ebx [ eax + 0x74 ]
or [ eax + 0x74 ] 0xffffffff
sub_48bea3
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x9c ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xbc ]
mov esi eax
test esi esi
je r-xdata
push ebx
call eax
test eax eax
je r-xdata
call sub_4904f9
mov edi [ eax + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
test esi esi
je r-xdata
cmp [ edi + 0x1c ] ebx
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
cmp [ esi + 0x48 ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx edi
call sub_487a56
push 0x0
mov ecx edi
call sub_487b22
call sub_48e95c
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x7c ]
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov ecx eax
call sub_47a2e8
cmp eax ebx
jne r-xdata
call sub_4904f9
cmp [ eax + 0x14 ] 0x0
jne r-xdata
push eax
call sub_48e96c
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x94 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push 0x0
call sub_49688f
jmp r-xdata
sub_48bf9a
push esi
push edi
mov esi ecx
call sub_48cb3f
cmp [ esi + 0x44 ] 0x0
je r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
mov edi [ esi + 0x44 ]
call [ GetMenu@IAT ]
cmp eax edi
je r-xdata
mov ecx esi
call sub_479428
pop edi
pop esi
retn
cmp [ eax + 0x1c ] esi
jne r-xdata
push edi
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
push 0x0
push 0x2
push 0x0
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
sub_48bfed
push esi
push 0x0
push [ esp + 0xc ]
lea esi [ ecx + 0x6c ]
mov ecx esi
call sub_47795f
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
mov ecx esi
call sub_477928
sub_48c00e
mov eax sub_49adc8
call sub_469294
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_4902c7
mov esi eax
mov [ ebp - 0x10 ] esi
mov ebx [ esi + 0xc4 ]
mov [ esi + 0xc4 ] edi
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_48c57e
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_47bfd8
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0xc4 ] ebx
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
xor eax eax
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
sub_48c0b6
push esi
call sub_48c57e
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0xc
call sub_478c6c
push [ eax + 0xc ]
push [ eax + 0x8 ]
push 0x114
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_48c0df
push esi
call sub_48c57e
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0xc
call sub_478c6c
push [ eax + 0xc ]
push [ eax + 0x8 ]
push 0x115
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_48c108
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
mov esi ecx
push edi
call sub_47ad48
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
call sub_47ccf5
cmp [ eax + 0x1c ] esi
jne r-xdata
test di di
je r-xdata
push 0x0
push 0x0
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx esi
call sub_48c57e
test eax eax
jne r-xdata
xor eax eax
shr edi 0x10
test di di
jne r-xdata
mov edx [ eax ]
push eax
push eax
push 0x0
mov ecx eax
call [ edx + 0xe4 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc0 ]
mov ecx eax
call sub_48c57e
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ ecx ]
push eax
call [ edx + 0x58 ]
sub_48c196
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
call sub_478ca1
mov ecx ebx
call sub_47bbe6
test eax 0x40000000
je r-xdata
mov ecx ebx
call sub_47a448
mov esi eax
mov esi ebx
jmp r-xdata
cmp esi edi
je r-xdata
mov edi ebx
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
push 0x1
pop eax
mov ecx edi
call sub_47a448
cmp esi eax
jne r-xdata
neg eax
sbb eax eax
mov ecx ebx
and al 0xfc
add eax 0x8
push eax
call sub_48b9dc
mov ecx ebx
call sub_48c57e
mov esi eax
test esi esi
jne r-xdata
or ecx 0x20
mov [ esi + 0x24 ] ecx
xor eax eax
jmp r-xdata
push 0x0
push 0x40
push 0x36d
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xc0 ]
mov ecx eax
call sub_48c57e
mov esi eax
test esi esi
je r-xdata
and [ esi + 0x24 ] 0xffffffdf
mov ecx [ esi + 0x24 ]
test eax eax
pop edi
je r-xdata
mov eax [ esi ]
push ebx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0xe8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
push esi
push esi
push 0x1
mov ecx esi
call [ eax + 0xe4 ]
sub_48c26a
push esi
mov esi ecx
push edi
test [ esi + 0x24 ] 0x20
je r-xdata
mov edi [ esp + 0xc ]
push 0x1
pop edi
jmp r-xdata
mov eax [ esi ]
push 0x0
push edi
push 0x86
mov ecx esi
call [ eax + 0xa0 ]
pop edi
pop esi
retn 0x4
xor edi edi
mov ecx esi
call sub_47bdcd
test eax eax
jne r-xdata
sub_48c2a1
push esi
push edi
mov edi ecx
call sub_47a448
mov ecx [ esp + 0xc ]
and ecx 0xfff0
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_478ca1
mov eax 0xf040
cmp ecx eax
ja r-xdata
mov eax ecx
sub eax 0xf050
je r-xdata
je r-xdata
add ecx 0xffff1000
mov esi [ SendMessageA@IAT ]
shr ecx 0x4
add ecx 0x1ef00
push ecx
push 0x0
push 0x365
push [ edi + 0x1c ]
call esi
test eax eax
jne r-xdata
sub eax 0x10
je r-xdata
mov eax ecx
sub eax 0xf000
je r-xdata
pop edi
pop esi
retn 0x8
push eax
push 0xe147
push 0x111
push [ edi + 0x1c ]
call esi
jmp r-xdata
sub eax 0xc0
sub eax 0x10
je r-xdata
sub eax 0x10
jne r-xdata
sub eax 0x10
jmp r-xdata
je r-xdata
sub_48c336
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
push [ ecx + 0x1c ]
call [ SetActiveWindow@IAT ]
push eax
call sub_478d3a
mov esi [ DragQueryFileA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x4 ] eax
call sub_4904f9
cmp [ ebp - 0x4 ] ebx
mov edi [ eax + 0x4 ]
jbe r-xdata
push [ ebp + 0x8 ]
call [ DragFinish@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x108 ]
push 0x104
push eax
push ebx
push [ ebp + 0x8 ]
call esi
mov eax [ edi ]
lea ecx [ ebp - 0x108 ]
push ecx
mov ecx edi
call [ eax + 0x7c ]
inc ebx
cmp ebx [ ebp - 0x4 ]
jb r-xdata
sub_48c3a8
push esi
mov esi ecx
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
cmp [ eax + 0x1c ] esi
jne r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
pop esi
retn
sub_48c3cd
cmp [ esp + 0x4 ] 0x0
push esi
push edi
mov edi ecx
je r-xdata
pop edi
pop esi
retn 0x4
call sub_4904f9
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x1
call sub_48e96c
push 0x1
mov ecx esi
call sub_487b22
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
sub_48c405
push ebp
mov ebp esp
sub esp 0x108
push esi
mov [ ebp - 0x4 ] ecx
call sub_4904f9
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop esi
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x10
test cx cx
je r-xdata
mov ax [ esi + 0xb0 ]
cmp [ ebp + 0xc ] ax
jne r-xdata
cmp cx [ esi + 0xb2 ]
jne r-xdata
push ebx
push edi
mov edi [ GlobalGetAtomNameA@IAT ]
lea ecx [ ebp - 0x108 ]
push 0x103
push ecx
push eax
call edi
mov ebx [ GlobalAddAtomA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call ebx
lea eax [ ebp - 0x108 ]
push 0x103
push eax
mov ax [ esi + 0xb2 ]
push eax
call edi
lea eax [ ebp - 0x108 ]
push eax
call ebx
movzx eax [ esi + 0xb2 ]
movzx ecx [ esi + 0xb0 ]
shl eax 0x10
or eax ecx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x1c ]
push 0x3e4
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
pop edi
pop ebx
sub_48c4c8
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
lea eax [ ebp - 0x8 ]
push eax
mov edi 0x3e8
push [ ebp + 0xc ]
mov ebx ecx
push edi
call UnpackDDElParam
push [ ebp - 0x4 ]
call [ GlobalLock@IAT ]
push 0x208
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpynA@IAT ]
push [ ebp - 0x4 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x4 ]
mov esi 0x3e4
push 0x8000
push esi
push edi
push [ ebp + 0xc ]
call ReuseDDElParam
push eax
push [ ebx + 0x1c ]
push esi
push [ ebp + 0x8 ]
call [ PostMessageA@IAT ]
mov ecx ebx
call sub_47bdcd
pop edi
pop esi
test eax eax
pop ebx
je r-xdata
xor eax eax
leave
retn 0x8
call sub_4904f9
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx eax
mov edx [ eax ]
call [ edx + 0x94 ]
sub_48c585
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x98 ]
cmp ebx edi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
and [ esi + 0x98 ] 0x0
test edi edi
je r-xdata
cmp [ esi + 0x98 ] 0x0
jne r-xdata
mov eax [ edi ]
push edi
push ebx
push 0x0
mov ecx edi
call [ eax + 0xe4 ]
test ebx ebx
mov [ esi + 0x98 ] ebx
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
push edi
push ebx
push 0x1
mov ecx ebx
call [ eax + 0xe4 ]
sub_48c60a
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_48d473
xor ebx ebx
mov esi eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx edi
neg eax
sbb eax eax
and al 0xc0
add eax 0x80
or al 0x17
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_47bd57
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xc4 ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xc4 ]
or [ esi + 0xb8 ] 0xc
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc8 ]
mov ecx edi
call sub_48d484
test eax eax
jne r-xdata
mov ecx edi
call sub_48d484
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ edi + 0x70 ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setne al
mov eax [ ecx ]
call [ eax + 0xe0 ]
jmp r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
or [ esi + 0x88 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
lea eax [ esi + 0x88 ]
je r-xdata
or [ esi + 0x88 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
lea eax [ esi + 0x88 ]
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc8 ]
push ebx
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
push 0x8
mov [ eax ] 0x8
jmp r-xdata
mov ecx esi
call sub_47bda6
jmp r-xdata
sub_48c723
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x4 ] ebx
push [ ebx + 0x1c ]
call sub_4830a1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebx + 0x68 ]
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_47c175
mov [ ebp - 0x20 ] esi
call sub_4902c7
mov eax [ eax + 0x54 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x0
push [ ebp + 0xc ]
push esi
call [ eax + 0x74 ]
test eax eax
jne r-xdata
push [ ebx + 0x1c ]
mov edi [ GetMenu@IAT ]
call edi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0xc ] eax
test eax eax
jbe r-xdata
mov ecx ebx
call sub_47a36b
test eax eax
je r-xdata
mov edi [ GetMenuItemID@IAT ]
push [ eax + 0x1c ]
call edi
mov edi eax
test edi edi
je r-xdata
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0xc ]
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
push edi
call [ GetMenuItemCount@IAT ]
xor ebx ebx
mov [ ebp + 0x10 ] eax
test eax eax
jle r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call edi
test eax eax
mov [ ebp - 0x28 ] eax
je r-xdata
and [ ebp - 0x1c ] 0x0
cmp [ ebx + 0x3c ] 0x0
je r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_47e451
test eax eax
mov [ ebp - 0x1c ] eax
je r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
push edi
call [ GetSubMenu@IAT ]
cmp eax [ esi + 0x4 ]
je r-xdata
xor eax eax
cmp eax 0xf000
jae r-xdata
push 0x0
push [ eax + 0x4 ]
call edi
test eax eax
mov [ ebp - 0x28 ] eax
je r-xdata
push edi
call sub_47e451
mov [ ebp - 0x8 ] eax
inc ebx
cmp ebx [ ebp + 0x10 ]
jl r-xdata
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
add [ ebp - 0x24 ] eax
push 0x1
pop eax
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call edi
cmp eax [ ebp - 0x28 ]
jne r-xdata
push eax
push 0x0
jmp r-xdata
inc [ ebp - 0x24 ]
jmp r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_47c33a
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
cmp ebx [ ebp - 0xc ]
jae r-xdata
cmp [ ebp - 0x24 ] ebx
jae r-xdata
sub_48c8a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
call sub_47a448
mov ecx [ esi + 0x68 ]
mov edi [ ebp + 0x8 ]
test ecx ecx
mov ebx eax
je r-xdata
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x7c ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
and [ esi + 0x24 ] 0xffffffbf
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
and [ esi + 0x90 ] 0x0
test [ ebp + 0xc ] 0x810
jne r-xdata
mov [ esi + 0x90 ] 0xe002
mov [ esi + 0x90 ] 0xe001
jmp r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
test eax eax
je r-xdata
cmp edi 0xf000
jb r-xdata
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
push [ eax + 0x1c ]
call [ UpdateWindow@IAT ]
jmp r-xdata
push 0x0
push [ esi + 0x90 ]
push 0x362
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
cmp edi 0xff00
jb r-xdata
cmp edi 0xf1f0
jae r-xdata
mov [ esi + 0x90 ] edi
jmp r-xdata
mov [ esi + 0x90 ] 0xef1f
jmp r-xdata
add edi 0xffff1000
shr edi 0x4
add edi 0xef00
or [ ebx + 0x24 ] 0x40
sub_48c9b5
mov ecx [ esp + 0x8 ]
push esi
push 0xff
call sub_47ca58
mov esi eax
push 0x100
push esi
push [ esp + 0x10 ]
call sub_47e8ce
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_47caa7
pop esi
retn 0x8
push 0xa
push esi
call sub_469760
pop ecx
test eax eax
pop ecx
je r-xdata
and [ eax ] 0x0
sub_48ca1c
mov eax sub_49addc
call sub_469294
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x94 ]
and [ esi + 0x24 ] 0xffffffbf
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call [ eax + 0xd4 ]
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
push eax
mov ecx ebx
call sub_47bc7c
mov ecx ebx
call sub_47a2e8
test eax eax
je r-xdata
cmp edi 0xef06
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
jmp r-xdata
mov [ eax + 0x94 ] edi
mov [ eax + 0x90 ] edi
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
mov ecx esi
call [ eax + 0xc4 ]
mov eax [ ebp - 0x10 ]
cmp [ esi + 0x9c ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov [ esi + 0x94 ] edi
mov [ esi + 0x90 ] edi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov edi 0xf005
sub_48caf7
push esi
mov esi ecx
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_47af7d
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
push eax
mov ecx esi
call sub_48cb28
sub_48cb3f
mov eax sub_49adf0
call sub_469294
sub esp 0x1c
push esi
mov esi ecx
push 0xa
lea ecx [ ebp - 0x28 ]
call sub_4777e2
mov esi [ esi + 0x70 ]
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov esi [ ebp - 0x24 ]
push edi
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_477841
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax esi
mov esi [ esi ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x78 ] 0x0
je r-xdata
test esi esi
jne r-xdata
push edi
lea ecx [ ebp - 0x28 ]
call sub_4778db
mov eax [ ecx ]
call [ eax + 0x58 ]
jmp r-xdata
call sub_47a2e8
mov edx [ eax ]
mov ecx eax
call [ edx + 0x58 ]
jmp r-xdata
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
pop edi
test esi esi
je r-xdata
sub_48cbca
cmp [ esp + 0x4 ] 0x0
push esi
push edi
je r-xdata
xor eax eax
mov esi [ ecx + 0x70 ]
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
push [ edi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax [ esp + 0xc ]
jne r-xdata
test esi esi
je r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_48cbfe
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_48cbca
test eax eax
je r-xdata
mov [ esi + 0x1c ] 0x1
push edi
mov edi [ esi ]
mov ecx eax
call sub_47bbe6
shr eax 0x1c
and eax 0x1
mov ecx esi
push eax
call [ edi + 0x4 ]
pop edi
jmp r-xdata
pop esi
retn 0x4
sub_48cc33
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_48cbca
mov esi eax
test esi esi
je r-xdata
xor eax eax
push 0x0
mov ecx esi
call sub_47bbe6
not eax
shr eax 0x1c
and eax 0x1
mov ecx edi
push eax
push esi
call sub_48c60a
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_48cc6c
mov eax sub_49ae04
call sub_469294
sub esp 0x104
mov eax [ rw-data ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0xc ]
mov edi 0xfffffdf8
xor ebx ebx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
cmp eax edi
mov [ ebp - 0x4 ] ebx
jne r-xdata
cmp eax 0xfffffdee
jne r-xdata
test [ esi + 0x64 ] 0x1
jne r-xdata
cmp ecx ebx
je r-xdata
test [ esi + 0xb4 ] 0x1
je r-xdata
push ecx
call [ GetDlgCtrlID@IAT ]
movzx ecx ax
cmp [ esi + 0x8 ] edi
push 0x50
push [ ebp - 0x10 ]
lea eax [ esi + 0x10 ]
push eax
jne r-xdata
lea eax [ ebp - 0x110 ]
push 0x100
push eax
push ecx
call sub_47e8ce
test eax eax
je r-xdata
call sub_47cb92
add esp 0xc
call [ lstrcpynA@IAT ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xa
lea eax [ ebp - 0x110 ]
push 0x1
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_47e8f5
mov eax [ ebp + 0x10 ]
push 0x213
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] ebx
push [ esi ]
call [ SetWindowPos@IAT ]
push 0x1
pop ebx
sub_48cd43
push ebx
push esi
mov esi [ esp + 0xc ]
push 0x1
pop ebx
mov eax [ esi + 0x4 ]
sub eax 0xe701
je r-xdata
push 0x14
pop eax
dec eax
je r-xdata
mov eax 0x90
jmp r-xdata
dec eax
je r-xdata
push edi
mov edi [ esi ]
push eax
call [ GetKeyState@IAT ]
movsx eax ax
and eax ebx
mov ecx esi
push eax
call [ edi ]
pop edi
mov eax 0x91
jmp r-xdata
sub eax 0x3
je r-xdata
cmp [ rw-data ] 0x0
push 0x15
pop eax
jne r-xdata
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov ebx 0x8000
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_48cda4
push esi
mov esi ecx
call sub_402850
cmp eax esi
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ eax + 0x1c ] 0x1
mov ecx [ esp + 0x8 ]
xor edx edx
cmp [ esi + 0x50 ] edx
mov eax [ ecx ]
setne dl
push edx
call [ eax + 0x4 ]
jmp r-xdata
pop esi
retn 0x4
sub_48cdd3
push esi
mov esi ecx
call sub_47bbe6
test ah 0x80
je r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x68 ]
test eax eax
jne r-xdata
push 0x0
test eax eax
je r-xdata
push [ eax + 0x1c ]
jmp r-xdata
mov ecx esi
call sub_48ce17
sub_48ce17
push ebp
mov ebp esp
sub esp 0x204
push esi
push edi
mov esi ecx
call sub_47bbe6
test ah 0x40
je r-xdata
push [ esi + 0xac ]
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebp - 0x204 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov edi [ lstrcatA@IAT ]
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
push [ esi + 0x1c ]
call sub_483030
pop edi
pop esi
leave
retn 0x4
mov edi [ lstrcatA@IAT ]
lea eax [ ebp - 0x204 ]
push r--data
push eax
call edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push eax
call edi
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
push [ esi + 0xac ]
lea eax [ ebp - 0x204 ]
push eax
call edi
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x204 ]
push r--data
push eax
call edi
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
sub_48cf14
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xc0 ]
xor ebx ebx
mov [ esp + 0x18 ] eax
cmp [ esp + 0x20 ] ebx
je r-xdata
mov ebp [ esi + 0x70 ]
mov edi [ esp + 0x24 ]
cmp ebp ebx
mov [ esp + 0x10 ] ebx
je r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx ebx
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ esp + 0x20 ] ebx
mov [ edi + 0x8 ] eax
je r-xdata
mov eax ebp
mov ebp [ ebp ]
mov ebx [ eax + 0x8 ]
push [ ebx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax 0xe800
mov [ esp + 0x14 ] eax
jb r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x5c ]
mov ebp [ GetDlgItem@IAT ]
push 0xea21
push [ esi + 0x1c ]
mov [ esi + 0x9c ] ebx
call ebp
test eax eax
mov [ esp + 0x20 ] eax
mov ebx 0xe900
je r-xdata
mov eax [ edi + 0x10 ]
push ebx
mov ecx esi
mov [ esi + 0x9c ] eax
call sub_48b88e
push [ edi ]
mov ebp [ GetDlgItem@IAT ]
push [ esi + 0x1c ]
call ebp
push ebx
push eax
mov [ esp + 0x28 ] eax
call [ ShowWindow@IAT ]
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
cmp eax ebx
mov [ edi + 0x4 ] eax
je r-xdata
test ebp ebp
jne r-xdata
cmp eax 0xe81f
ja r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
push ebx
push [ esi + 0x1c ]
call ebp
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
push 0x7915
mov [ edi + 0x14 ] eax
mov ecx esi
mov [ esi + 0x48 ] ebx
call sub_48b45f
mov ebx 0xe900
cmp [ edi ] ebx
je r-xdata
push 0x1
push ebx
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push ebx
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
and [ esi + 0xb8 ] 0xfffffffe
xor ebx ebx
push 0x1
lea ecx [ eax - 0xe800 ]
pop eax
shl eax cl
mov ecx ebx
mov [ esp + 0x24 ] eax
mov eax [ ebx ]
call [ eax + 0xc8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x68 ]
test ecx ecx
je r-xdata
push 0x1
push 0x0
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push [ edi + 0x4 ]
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
push ebx
push 0xfffffff4
push [ esp + 0x28 ]
call [ SetWindowLongA@IAT ]
push 0xea21
push 0xfffffff4
push eax
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x20 ]
push ebx
push [ esi + 0x1c ]
call ebp
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xd0 ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
or [ esp + 0x10 ] eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x5c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
push 0xea21
push 0xfffffff4
push eax
call [ SetWindowLongA@IAT ]
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
push 0x1
and eax [ esp + 0x28 ]
mov ecx esi
push eax
push ebx
call sub_48c60a
cmp [ esp + 0x14 ] 0xe81f
je r-xdata
push 0x5
push [ esp + 0x24 ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x14 ]
push 0x1
mov ecx esi
mov [ esi + 0x48 ] eax
call sub_48b88e
push eax
push [ esi + 0x1c ]
call ebp
mov [ esp + 0x20 ] eax
sub_48d143
push esi
mov esi ecx
test [ esi + 0xb8 ] 0x1
je r-xdata
test [ esi + 0xb8 ] 0x2
je r-xdata
mov eax [ esi ]
push [ esi + 0xa8 ]
call [ eax + 0xe4 ]
mov eax [ esi + 0xb8 ]
test al 0x8
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xe0 ]
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
mov edx [ esi ]
and eax 0x4
push eax
mov ecx esi
call [ edx + 0xc8 ]
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
and [ esi + 0xb8 ] 0x0
pop esi
retn
push eax
mov ecx esi
call sub_48cb28
sub_48d1b5
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0xb0 ] edi
jne r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0xb8 ]
lea ecx [ esi + 0xb8 ]
push ebx
push 0x1
pop ebx
test al 0x4
mov [ esi + 0xb0 ] ebx
je r-xdata
and al 0xf3
cmp [ ebp + 0x8 ] edi
mov [ ecx ] eax
je r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx esi
call sub_47bbe6
test ah 0x20
je r-xdata
mov ecx [ esi + 0x68 ]
cmp ecx edi
je r-xdata
push ebx
lea eax [ esi + 0x58 ]
push edi
push eax
push 0x2
push 0xe900
push 0xffff
push edi
mov ecx esi
call sub_47a804
mov eax 0x7fff
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov ebx 0xffff
push 0xe900
push ebx
push edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
call sub_47a804
lea eax [ ebp - 0x10 ]
push 0x1
push eax
lea eax [ esi + 0x58 ]
push eax
push 0x2
push 0xe900
push ebx
push edi
mov ecx esi
call sub_47a804
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push edi
push ecx
mov ecx esi
call [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
push 0x16
sub eax [ ebp - 0xc ]
mov ecx esi
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
push eax
push edi
push edi
push edi
call sub_47bd57
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0xb0 ] edi
pop ebx
sub_48d2a2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
dec eax
je r-xdata
xor edx edx
push 0x1
push edx
push [ ebp + 0xc ]
push 0x1
push 0xe900
push 0xffff
push edx
call sub_47a804
dec eax
je r-xdata
push 0x1
pop eax
dec eax
jne r-xdata
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
push [ ebp + 0xc ]
lea esi [ ecx + 0x58 ]
push esi
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
cmp [ ecx + 0x58 ] edx
lea eax [ ecx + 0x58 ]
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
push esi
call [ CopyRect@IAT ]
jmp r-xdata
push eax
call [ SetRectEmpty@IAT ]
jmp r-xdata
cmp [ eax + 0x8 ] edx
jne r-xdata
pop esi
pop ebp
retn 0x8
cmp [ eax + 0x4 ] edx
jne r-xdata
cmp [ eax + 0xc ] edx
je r-xdata
sub_48d351
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ GetKeyState@IAT ]
push edi
mov edi ecx
push 0x11
call esi
test ax ax
jge r-xdata
xor ebx ebx
push 0x8
pop ebx
jmp r-xdata
xor eax eax
push 0x4
pop eax
jmp r-xdata
push 0x10
call esi
test ax ax
jge r-xdata
mov edi [ ebp + 0x8 ]
movzx eax bx
shl edi 0x10
or edi eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
movzx ecx bx
shl eax 0x10
or eax ecx
push eax
push 0x20a
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
mov ebx eax
jmp r-xdata
or ebx eax
call [ GetFocus@IAT ]
mov esi eax
call [ GetDesktopWindow@IAT ]
test esi esi
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn 0x8
test esi esi
je r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
push [ ebp + 0xc ]
push edi
push 0x20a
push esi
call [ SendMessageA@IAT ]
push esi
mov ebx eax
call [ GetParent@IAT ]
test ebx ebx
mov esi eax
jne r-xdata
sub_48d3f4
push esi
mov esi [ esp + 0x8 ]
push edi
cmp esi 0xffffffff
mov edi ecx
jne r-xdata
push esi
mov ecx edi
call sub_48d444
cmp esi 0xffffffff
je r-xdata
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
push esi
mov ecx edi
call sub_47bda6
push esi
mov ecx edi
call sub_48d444
push [ edi + 0x1c ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push 0x1
jmp r-xdata
push 0x9
pop esi
sub_48d444
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x4
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x4
je r-xdata
push [ ecx + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call [ BringWindowToTop@IAT ]
sub_48d484
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov eax [ esi + 0x78 ]
pop esi
retn
xor eax eax
pop esi
retn
cmp [ eax + 0x78 ] 0x0
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_48d4ae
mov eax sub_49ae7c
call sub_469294
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
dec eax
mov [ ebp - 0x10 ] esp
je r-xdata
call sub_479238
dec eax
jne r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x1c ]
push eax
call sub_4791ec
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
sub_48d504
mov eax sub_49ae9e
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_477fdd
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x84 ] eax
movzx eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
push eax
call sub_48d56f
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_48d56f
push ebx
push esi
push edi
push 0x28
mov esi ecx
pop ebx
push ebx
push 0x0
lea edi [ esi + 0x5c ]
push edi
call sub_467a10
mov [ edi ] ebx
mov ebx [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x60 ] 0x80
test ebx ebx
je r-xdata
cmp [ esp + 0x14 ] 0x0
mov [ esi + 0x68 ] ebx
mov [ esi + 0x74 ] sub_477e7f
mov [ esi + 0x78 ] esi
mov [ esi + 0x7c ] sub_48d4ae
je r-xdata
call sub_4904f9
mov eax [ eax + 0xc ]
mov [ esi + 0x64 ] eax
call sub_47864e
test eax eax
je r-xdata
push [ esp + 0x14 ]
lea edi [ esi + 0x84 ]
mov ecx edi
call sub_47e84a
mov eax [ edi ]
or [ esi + 0x60 ] 0x8
mov [ esi + 0x70 ] eax
mov eax ebx
shr eax 0x10
test ax ax
jne r-xdata
or [ esi + 0x60 ] 0x20
mov eax [ esi + 0x68 ]
mov [ esi + 0x88 ] 0x1
mov [ esi + 0x40 ] eax
pop edi
pop esi
pop ebx
retn 0x8
movzx eax bx
mov [ esi + 0x3c ] eax
sub_48d60a
mov eax sub_49aebe
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_48d662
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x84 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47801b
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push eax
call [ GlobalFree@IAT ]
sub_48d662
push esi
mov esi ecx
call sub_4904f9
mov eax [ eax + 0x1038 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0x14 ]
push [ esi + 0x58 ]
call sub_46965a
and [ esi + 0x58 ] 0x0
pop ecx
sub_48d692
mov eax sub_49aee0
call sub_469294
sub esp 0x18
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_493604
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0xe ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_47f8bb
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push esi
lea ecx [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call sub_47f70a
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x10 ]
call sub_47f92a
lea ecx [ ebp - 0x24 ]
call sub_47f7a7
lea ecx [ ebp - 0x24 ]
mov esi eax
mov [ ebp - 0x4 ] 0x1
call sub_47f799
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov eax esi
pop esi
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_467da5
pop ecx
test eax eax
pop ecx
jne r-xdata
mov ax [ ebp + 0xe ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_47c674
sub_48d776
push esi
mov esi ecx
call sub_48d662
push 0x8
call sub_469520
pop ecx
mov [ esi + 0x58 ] eax
call sub_4904f9
mov eax [ eax + 0x1038 ]
push [ esp + 0x8 ]
mov ecx eax
mov edx [ eax ]
push [ esi + 0x58 ]
call [ edx + 0x10 ]
pop esi
retn 0x4
sub_48d7a6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test [ esi + 0x4 ] 0x1
je r-xdata
push 0x5
push [ esi + 0xc ]
push [ esi + 0x8 ]
call [ FindResourceA@IAT ]
push eax
push [ esi + 0x8 ]
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
mov ebx eax
mov ebx [ esi + 0xc ]
jmp r-xdata
push [ ebp + 0xc ]
push ebx
call sub_48d692
mov [ ebp + 0x8 ] eax
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
push ebx
mov ecx edi
call sub_48d776
mov ebx eax
call sub_4904f9
cmp [ eax + 0x1038 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push eax
call [ GlobalFree@IAT ]
and [ edi + 0x44 ] 0x0
or [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ebx eax
mov [ edi + 0x44 ] eax
sub_48d899
push ebx
mov ebx [ esp + 0x8 ]
push esi
cmp ebx 0xffffffff
push edi
je r-xdata
mov eax ebx
test ebx ebx
je r-xdata
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
mov edi eax
push edi
push r--data
call sub_47e50c
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push edi
push r--data
call sub_47e50c
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ esi + 0x5c ]
mov eax [ eax + 0xa8 ]
jmp r-xdata
mov esi [ esi + 0x68 ]
mov ecx [ esi + 0x6c ]
xor edx edx
test ecx ecx
jle r-xdata
mov eax [ eax + 0xc ]
jmp r-xdata
add eax [ eax ]
inc edx
add esi 0x4
cmp edx ecx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov edi [ esi ]
cmp [ edi + 0x68 ] ebx
je r-xdata
sub_48d935
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov esi ecx
push edi
push [ ebp + 0x8 ]
call sub_47a26e
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ esi + 0x1c ]
mov ebx [ GetParent@IAT ]
cmp [ edi ] eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi [ edi + 0x8 ]
lea eax [ edi + 0xd1 ]
cmp eax 0x9
ja r-xdata
push eax
call ebx
cmp [ edi ] eax
jne r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_48da82 ]
push [ esi + 0x1c ]
call ebx
push eax
call sub_478d3a
push eax
push r--data
call sub_47e50c
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xdc ]
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd0 ]
neg eax
sbb eax eax
and al 0xfe
inc eax
inc eax
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe0 ]
jmp r-xdata
push 0x3024
mov ecx esi
call sub_48d913
test eax eax
je r-xdata
push 0x3023
mov ecx esi
call sub_48d913
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xec ]
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd8 ]
neg eax
sbb eax eax
neg eax
dec eax
jmp r-xdata
test [ eax + 0x24 ] 0x10
jne r-xdata
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe4 ]
jmp r-xdata
cmp [ eax + 0x84 ] 0x0
jne r-xdata
push eax
mov ecx esi
call sub_48d899
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
sub_48dab8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
lea eax [ ebp + 0xc ]
mov ecx esi
push eax
call sub_47ab07
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
push [ ebp + 0x10 ]
mov ecx edi
push esi
push [ ebp + 0x8 ]
call sub_4787a6
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ rw-data ]
mov eax [ ebp + 0x8 ]
push [ rw-data ]
push [ ebp + 0x10 ]
push esi
push [ eax + 0x4 ]
call sub_47b051
test eax eax
jne r-xdata
mov esi [ esi + 0x1c ]
mov eax [ rw-data ]
mov ecx edi
call sub_478ca1
jmp r-xdata
sub_48db2f
push esi
mov esi ecx
push esi
push r--data
call sub_47e50c
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ esi + 0x3c ]
pop esi
retn
add eax 0x88
pop esi
retn
sub_48db4f
push ecx
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_48db2f
test [ eax + 0x4 ] 0x2020
je r-xdata
mov ecx esi
call sub_478ca1
push [ esp + 0x18 ]
mov edi [ GetDlgItem@IAT ]
push [ esi + 0x1c ]
call edi
mov ebp [ GetWindowLongA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
and [ esp + 0x18 ] 0x0
mov ebx r--data
push 0xfffffff0
push ebx
call ebp
test eax 0x10000000
je r-xdata
inc [ esp + 0x18 ]
add ebx 0x4
cmp ebx r--data
jl r-xdata
push [ esp + 0x10 ]
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
push ebx
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
push [ ebx ]
push [ esi + 0x1c ]
call edi
push 0xfffffff0
push eax
mov [ esp + 0x18 ] eax
call ebp
test eax 0x10000000
je r-xdata
call [ GetFocus@IAT ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x1c ]
mov ecx [ esp + 0x1c ]
mov eax [ esi ]
push [ ecx * 4 + r--data ]
mov ecx esi
push 0x401
call [ eax + 0xa0 ]
jmp r-xdata
push [ esp + 0x10 ]
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
sub_48dc1d
mov eax sub_49af0a
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_478919
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x64 ]
call sub_4770bc
mov eax [ rw-data ]
mov [ esi + 0x78 ] eax
push 0x0
push 0x0
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_48dd3f
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48dc87
mov eax sub_49af32
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_478919
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x64 ]
call sub_4770bc
mov eax [ rw-data ]
lea ecx [ esi + 0x78 ]
mov [ ecx ] eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_47e84a
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
call sub_48dd3f
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_48dce3
mov eax sub_49af5a
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_478919
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x64 ]
call sub_4770bc
mov eax [ rw-data ]
lea ecx [ esi + 0x78 ]
mov [ ecx ] eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_47c7b1
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
call sub_48dd3f
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_48dd3f
push esi
mov esi ecx
push edi
push 0x28
lea edi [ esi + 0x3c ]
push 0x0
push edi
call sub_467a10
mov eax [ esi + 0x78 ]
and [ esi + 0x84 ] 0x0
mov [ esi + 0x50 ] eax
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ edi ] 0x28
mov [ esi + 0x40 ] 0x8
mov [ esi + 0x58 ] eax
mov [ esi + 0x80 ] 0x1
call sub_47864e
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
pop edi
mov [ esi + 0x7c ] eax
pop esi
retn 0x8
or [ esi + 0x41 ] 0x2
sub_48dd97
push edi
mov edi ecx
mov eax [ edi + 0x1c ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
push [ esp + 0x10 ]
push 0x46f
push eax
call [ SendMessageA@IAT ]
push esi
call sub_48db2f
push [ esp + 0xc ]
add edi 0x78
mov ecx edi
mov esi eax
call sub_47c7b1
mov eax [ edi ]
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x4 ]
and al 0xfe
or eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
pop esi
jmp r-xdata
pop edi
retn 0x8
sub_48dde3
mov eax sub_49af82
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x2
call sub_47c3de
pop ecx
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x78 ]
call sub_47c674
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x64 ]
call sub_4770ef
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4793ac
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48de3a
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
push esi
call sub_479601
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x4 ] 0x100
jne r-xdata
pop edi
pop esi
retn 0x4
push esi
mov ecx edi
call sub_47b562
push 0x11
call [ GetAsyncKeyState@IAT ]
test ax ax
jge r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x9
je r-xdata
push esi
push 0x0
push 0x475
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp eax 0x21
je r-xdata
cmp eax 0x22
jne r-xdata
sub_48de9b
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x10 ]
push edi
push ebx
call sub_47bfd8
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
test bh 0x80
je r-xdata
cmp edi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xf000
jae r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
test eax eax
je r-xdata
call sub_47ccf5
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
je r-xdata
sub_48df20
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov ecx esi
call sub_48e176
mov ecx [ esi + 0x68 ]
pop esi
mov eax [ ecx + eax * 4 ]
retn
push 0x0
push 0x0
push 0x476
push eax
call [ SendMessageA@IAT ]
push eax
call sub_478d3a
pop esi
retn
sub_48df51
push esi
mov esi ecx
call sub_47b6f1
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x476
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
retn
pop esi
retn
sub_48df73
sub esp 0xc
push ebp
push esi
mov esi ecx
push 0x10
call sub_47b7d9
push 0x3c000
call sub_47b7d9
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
call sub_4904f9
mov eax [ eax + 0x4 ]
xor ebp ebp
cmp eax ebp
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ esi + 0x7c ]
cmp eax ebp
jne r-xdata
push ebp
mov ecx eax
call sub_483fae
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
call [ GetCapture@IAT ]
cmp eax ebp
je r-xdata
push ebx
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push ebx
lea ecx [ esp + 0x10 ]
push edi
push ecx
push eax
call sub_484154
mov ecx esi
mov ebx eax
call sub_48db2f
mov edi eax
cmp ebx ebp
mov [ esp + 0x10 ] ebp
mov [ edi + 0x8 ] ebx
je r-xdata
or [ esi + 0x24 ] 0x10
push esi
mov [ esi + 0x2c ] ebp
call sub_4791ec
or [ edi + 0x5 ] 0x4
or [ esi + 0x24 ] 0x10
push edi
call [ PropertySheetA@IAT ]
and [ edi + 0x5 ] 0xfb
mov ebp eax
call sub_479238
xor edi edi
cmp ebp edi
je r-xdata
push ebp
push ebp
push 0x1f
push eax
call [ SendMessageA@IAT ]
push ebp
push ebx
call [ EnableWindow@IAT ]
mov [ esp + 0x10 ] 0x1
and [ esi + 0x24 ] 0xffffffef
cmp ebp 0xffffffff
jne r-xdata
cmp [ esi + 0x1c ] edi
je r-xdata
push 0x4
mov ecx esi
pop ebp
call sub_47bbe6
test ah 0x1
je r-xdata
mov eax [ esi ]
mov ebp [ esi + 0x2c ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_47bd57
push ebp
mov ecx esi
call sub_47b592
mov ebp eax
push 0x5
pop ebp
cmp ebx edi
je r-xdata
push 0x1
push ebx
call [ EnableWindow@IAT ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
mov ecx [ esp + 0x18 ]
cmp ecx edi
je r-xdata
call [ GetActiveWindow@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
cmp [ esp + 0x14 ] edi
pop edi
pop ebx
je r-xdata
push 0x1
call sub_483fae
push ebx
call [ SetActiveWindow@IAT ]
mov eax ebp
pop esi
pop ebp
add esp 0xc
retn
push 0x1
push [ esp + 0x10 ]
call [ EnableWindow@IAT ]
sub_48e0dd
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi + 0x5c ]
call sub_47c3de
xor ebx ebx
mov [ esi + 0x5c ] ebx
mov eax [ esi + 0x6c ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call sub_47c3b5
mov edi [ esi + 0x40 ]
pop ecx
mov [ esi + 0x5c ] eax
and edi 0x2020
cmp [ esi + 0x6c ] ebx
pop ecx
jle r-xdata
mov eax [ esi + 0x6c ]
pop edi
mov [ esi + 0x54 ] eax
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x68 ]
push 0x28
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x8 ] eax
add eax 0x5c
push eax
push [ ebp - 0x4 ]
call sub_467a70
mov ecx [ ebp - 0x8 ]
add esp 0xc
push edi
push [ ebp - 0x4 ]
call sub_48d7a6
add [ ebp - 0x4 ] 0x28
inc ebx
cmp ebx [ esi + 0x6c ]
jl r-xdata
sub_48e19d
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
push ebx
push [ esi + 0x6c ]
lea ecx [ esi + 0x64 ]
call sub_4776d4
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x6c ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call sub_47c3b5
mov edi eax
mov eax [ esi + 0x6c ]
lea eax [ eax + eax * 4 ]
lea eax [ eax * 8 - 0x28 ]
push eax
push [ esi + 0x5c ]
push edi
call sub_467a70
push [ esi + 0x5c ]
call sub_47c3de
mov [ esi + 0x5c ] edi
mov eax [ esi + 0x6c ]
push 0x28
lea eax [ eax + eax * 4 ]
lea edi [ edi + eax * 8 - 0x28 ]
lea eax [ ebx + 0x5c ]
push eax
push edi
call sub_467a70
add esp 0x20
mov ecx esi
call sub_48db2f
mov eax [ eax + 0x4 ]
mov ecx ebx
and eax 0x2020
neg eax
sbb eax eax
neg eax
push eax
push edi
call sub_48d7a6
push edi
call [ CreatePropertySheetPageA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push 0x0
push 0x467
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
call sub_475d4c
push edi
call [ DestroyPropertySheetPage@IAT ]
call sub_475d4c
sub_48e25f
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_47b6f8
cmp [ esi + 0x84 ] 0x0
je r-xdata
push 0x0
push 0x5
push 0x471
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
jmp r-xdata
pop esi
retn 0x4
sub_48e2ad
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] 0x2
and eax 0xfff0
cmp eax 0xf060
jne r-xdata
call sub_478ca1
xor eax eax
cmp [ ecx + 0x84 ] eax
je r-xdata
push eax
push eax
push 0x10
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
retn 0x8
sub_48e2e5
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x80 ] ebx
jne r-xdata
push edi
mov ecx esi
call sub_48db2f
test [ eax + 0x4 ] 0x2020
mov edi [ GetWindowRect@IAT ]
jne r-xdata
push 0x3020
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_478ca1
cmp [ esi + 0x84 ] ebx
mov [ ebp - 0x8 ] eax
je r-xdata
push 0x3020
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] eax
push ecx
push eax
call edi
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
call sub_4803ee
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] ebx
push eax
mov [ ebp - 0x28 ] ebx
push [ esi + 0x1c ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] 0x20
call [ MapDialogRect@IAT ]
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x20 ] eax
jge r-xdata
push ebx
push ebx
push 0x200
push eax
call sub_4789d2
mov ecx esi
call sub_47bbe6
test eax 0x40000000
pop edi
jne r-xdata
mov ecx esi
call sub_48db2f
test [ eax + 0x4 ] 0x2020
jne r-xdata
sub eax [ ebp - 0x18 ]
push 0x16
push [ ebp - 0x20 ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
push ebx
push [ ebp - 0x8 ]
call [ SetWindowPos@IAT ]
mov [ ebp - 0x4 ] rw-data
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
push ebx
mov ecx esi
call sub_47b186
lea eax [ ebp - 0x2c ]
push eax
push [ esi + 0x1c ]
call edi
push 0x1
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call edi
mov eax [ ebp - 0x18 ]
push 0x16
sub eax [ ebp - 0x28 ]
mov ecx esi
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
push eax
push ebx
push ebx
push ebx
call sub_47bd57
mov edi rw-data
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] rw-data
jl r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call edi
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
call sub_4803ee
mov eax [ ebp - 0x18 ]
push 0x15
sub eax [ ebp - 0xc ]
push ebx
push ebx
push eax
push [ ebp - 0x1c ]
push ebx
push [ ebp - 0x8 ]
call [ SetWindowPos@IAT ]
add edi 0x4
cmp edi rw-data
jl r-xdata
push ebx
push eax
call [ ShowWindow@IAT ]
push ebx
push [ ebp - 0xc ]
call [ EnableWindow@IAT ]
mov eax [ ebp - 0x4 ]
push [ eax ]
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x1c ]
call edi
mov eax [ ebp - 0x10 ]
push 0x16
sub eax [ ebp - 0x18 ]
mov ecx esi
sub eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
push ebx
call sub_47bd57
push [ edi ]
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
sub_48e4e7
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x4 ] ecx
call sub_47a1e2
test eax eax
je r-xdata
push edi
test ebx ebx
movzx edi si
je r-xdata
push 0x1
pop eax
jmp r-xdata
xor eax eax
pop edi
shr esi 0x10
test si si
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
push 0x0
push 0x0
push 0x87
push ebx
call [ SendMessageA@IAT ]
test ax 0x2010
je r-xdata
push 0xfffffff0
push ebx
call [ GetWindowLongA@IAT ]
and eax 0xf
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] edi
cmp eax 0x1
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0xb
jne r-xdata
sub_48e576
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
lea eax [ ebp + 0xc ]
mov ecx esi
push eax
call sub_47ab07
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
push [ ebp + 0x10 ]
mov ecx edi
push esi
push [ ebp + 0x8 ]
call sub_47afc7
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ rw-data ]
mov eax [ ebp + 0x8 ]
push [ rw-data ]
push [ ebp + 0x10 ]
push esi
push [ eax + 0x4 ]
call sub_47b051
test eax eax
jne r-xdata
mov esi [ esi + 0x1c ]
mov eax [ rw-data ]
mov ecx edi
call sub_478ca1
jmp r-xdata
sub_48e5e7
push esi
push edi
mov edi ecx
mov ecx [ edi + 0xb4 ]
call sub_47e52c
mov esi eax
test esi esi
jne r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0xf4 ]
test eax eax
jne r-xdata
call sub_475d4c
mov eax esi
pop edi
pop esi
retn 0x4
call sub_480815
sub_48e620
mov eax sub_49b14d
call sub_469294
push ecx
push esi
push edi
mov edi ecx
mov esi r--data
mov [ edi + 0xb4 ] r--data
add esi 0x8
cmp esi r--data
jl r-xdata
push [ esi - 0x4 ]
mov ecx edi
call sub_48cbca
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax [ esi ]
test ah 0xf0
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push 0xa4
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x0
call sub_48650c
jmp r-xdata
call sub_480815
mov ecx [ esi ]
push [ esi - 0x4 ]
or [ ebp - 0x4 ] 0xffffffff
or ecx 0x56000000
push ecx
push edi
mov ecx eax
call sub_48660f
test eax eax
jne r-xdata
sub_48e6b5
xor eax eax
push esi
cmp [ esp + 0xc ] eax
mov esi ecx
je r-xdata
push [ esp + 0x10 ]
mov ecx esi
push eax
push [ esp + 0x10 ]
call sub_48e6dd
pop esi
retn 0xc
push [ esp + 0xc ]
call sub_48cbca
sub_48e6dd
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push ebx
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
push [ ebp + 0x10 ]
push edi
call sub_4866c2
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edx [ edi + 0x64 ]
xor esi esi
mov eax r--data
push [ esi * 8 + r--data ]
mov ecx [ ebp - 0x4 ]
call sub_48cbca
mov ecx eax
add eax 0x8
inc esi
cmp eax r--data
jl r-xdata
mov ebx [ eax ]
xor ebx edx
test bh 0xf0
je r-xdata
jmp r-xdata
sub_48e732
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
push edi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4868ed
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
and [ ebp + 0xc ] ecx
mov esi r--data
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
xor eax [ ecx + 0x64 ]
test ah 0xf0
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0xffffffff
push [ eax + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
push eax
mov ecx edi
call sub_487207
test eax eax
jg r-xdata
add esi 0x8
cmp esi r--data
jl r-xdata
push [ esi ]
mov ecx ebx
call sub_48cbca
mov [ ebp + 0xc ] eax
test edi edi
mov ecx edi
jne r-xdata
push [ esi ]
mov ecx ebx
call sub_48cbca
mov edi eax
test edi edi
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
sub_48e7b7
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ecx
cmp [ edi + 0x6c ] ebx
je r-xdata
test [ edi + 0x64 ] 0x4
je r-xdata
mov esi [ edi + 0x70 ]
cmp esi ebx
je r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
call sub_48e5e7
push 0x15
push ebx
push ebx
mov esi eax
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push ebx
call sub_47bd57
cmp [ esi + 0x20 ] ebx
jne r-xdata
or [ ebp + 0x14 ] 0x4
test [ ebp + 0x15 ] 0x50
je r-xdata
cmp [ esi + 0x78 ] ebx
je r-xdata
push 0xe81f
mov ecx esi
call sub_47bb2c
push ebx
push edi
mov ecx eax
call sub_4866c2
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
push 0xfffffff0
push [ edi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
mov eax [ edi + 0x1c ]
mov [ esi + 0x20 ] eax
mov eax [ ebp + 0x14 ]
and ah 0x2f
or ah 0x20
mov [ ebp + 0x14 ] eax
mov ecx esi
call sub_48665a
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push 0x8
mov ecx esi
call sub_47bda6
mov eax [ esi + 0x64 ]
and eax [ ebp + 0x14 ]
test ah 0xf0
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
push 0x15
push ebx
push ebx
mov esi eax
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push ebx
call sub_47bd57
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
jmp r-xdata
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
sub_48e8b4
push ebp
mov ebp esp
sub esp 0x10
and [ ebp + 0x18 ] 0xf040
push ebx
mov ebx [ ebp + 0x1c ]
push esi
test ebx ebx
push edi
je r-xdata
mov edi [ ecx + 0x70 ]
and [ ebx ] 0x0
xor eax eax
mov eax edi
mov edi [ edi ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov eax [ esi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
and eax [ ebp + 0x18 ]
test ah 0xf0
je r-xdata
cmp [ esi + 0x78 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
jne r-xdata
test al 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
jne r-xdata
inc [ ebp - 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
inc [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0x64 ]
and eax [ ebp + 0x18 ]
jmp r-xdata
mov [ ebx ] esi
pop edi
pop esi
pop ebx
leave
retn 0x18
sub_48e9b5
mov eax sub_49baba
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_48b2b9
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0xc8 ] eax
and [ esi + 0xc4 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_48ea1b
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48ea1b
mov eax sub_49bacc
call sub_469294
sub esp 0xa4
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push 0xa
call sub_493376
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_4904f9
mov eax [ eax + 0xc ]
push 0x7912
push eax
call [ LoadBitmapA@IAT ]
lea ecx [ ebp - 0x78 ]
mov [ rw-data ] eax
push ecx
push 0x18
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push esi
push edi
push ebx
lea ecx [ ebp - 0x24 ]
call sub_480466
mov eax [ rw-data ]
mov esi [ SelectObject@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push 0x3c
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_467a10
add esp 0xc
mov [ ebp - 0x49 ] 0x1
mov [ ebp - 0x50 ] 0x190
push 0x1
pop eax
sub eax [ rw-data ]
push 0x2a
mov [ ebp - 0x60 ] eax
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x74 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x70 ]
mov [ rw-data ] eax
xor edi edi
push eax
push [ ebp - 0x20 ]
call esi
mov edi eax
jmp r-xdata
push r--data
push r--data
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
pop edi
pop esi
je r-xdata
push edi
push [ ebp - 0x20 ]
call esi
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp - 0x1c ]
call [ GetTextMetricsA@IAT ]
cmp edi ebx
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
call [ CreateFontIndirectA@IAT ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
mov [ ebp - 0x45 ] 0x20
lea eax [ ebp - 0x44 ]
push eax
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x60 ]
push eax
push 0xf233
call sub_482ece
test eax eax
jne r-xdata
push rw-data
call sub_483088
mov eax [ ebp - 0xb0 ]
sub eax [ ebp - 0xa4 ]
cmp eax [ rw-data ]
jle r-xdata
push 0xa
call sub_4933e6
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_4804d8
sub_48eb87
mov eax sub_49baee
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_479569
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc8 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_48b397
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_48ebd1
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
push [ ebp + 0x10 ]
lea ecx [ ebx + 0xc8 ]
call sub_47c7b1
mov eax [ ebp + 0xc ]
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x1c ]
cmp ecx edi
je r-xdata
push edi
push edi
push 0x7f00
push edi
call [ LoadCursorA@IAT ]
push eax
push 0x8
call sub_4799e0
mov ecx [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x20 ]
mov edx [ ecx + 0x4 ]
mov esi [ ecx ]
push edi
mov edi [ ecx + 0xc ]
mov ecx [ ecx + 0x8 ]
sub edi edx
sub ecx esi
push edi
push ecx
push edx
push esi
mov ecx ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_47927a
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov edi [ ecx + 0x1c ]
sub_48ec44
push ebp
mov ebp ecx
call sub_478ca1
test eax eax
je r-xdata
pop ebp
retn 0x4
mov ecx ebp
call sub_47bbe6
test ah 0x1
je r-xdata
push 0x1
pop eax
push ebx
push esi
push edi
mov ecx ebp
call sub_47a36b
mov edi eax
call [ GetForegroundWindow@IAT ]
push eax
call sub_478d3a
mov ebx [ SendMessageA@IAT ]
mov esi eax
cmp edi esi
je r-xdata
push 0x1
pop eax
push [ edi + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_478d3a
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x40
push 0x36d
push [ esi + 0x1c ]
call ebx
test eax eax
jne r-xdata
neg eax
sbb eax eax
push 0x0
and al 0xfc
add eax 0x8
push eax
push 0x36d
push [ ebp + 0x1c ]
call ebx
pop edi
pop esi
pop ebx
sub_48eccc
cmp [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
je r-xdata
push esi
call sub_48ba86
and [ esi + 0x2d ] 0xfd
push 0x1
pop eax
pop esi
retn 0x4
mov eax [ esi + 0x20 ]
test ah 0x6
je r-xdata
test [ esi + 0x22 ] 0xc0
je r-xdata
or eax 0x40000
mov [ esi + 0x20 ] eax
or [ esi + 0x2c ] 0x80
sub_48ed05
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi ecx
call sub_478ca1
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
sub ecx [ ebp - 0x18 ]
pop esi
sub ecx [ ebp - 0x10 ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ eax + 0x1c ] ecx
leave
retn 0x4
sub_48ed4d
push esi
mov esi ecx
call sub_47bbe6
test ah 0x1
jne r-xdata
test [ esi + 0x25 ] 0x2
je r-xdata
xor edx edx
cmp [ rw-data ] edx
je r-xdata
push 0x1
pop eax
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
lea eax [ esi + 0xc4 ]
cmp [ eax ] ecx
je r-xdata
mov ecx esi
call sub_478ca1
jmp r-xdata
pop esi
retn 0x4
push edx
push edx
push 0x85
mov [ eax ] ecx
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_48ed9e
cmp [ rw-data ] 0x0
push esi
je r-xdata
push edi
call sub_47bbe6
mov edi eax
test edi 0x40600
je r-xdata
call sub_478ca1
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x6
call esi
neg eax
push eax
push 0x5
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
neg eax
push eax
push 0x20
jmp r-xdata
pop esi
retn 0x8
mov eax [ rw-data ]
add [ esi + 0x4 ] eax
call esi
mov esi [ esp + 0x14 ]
neg eax
push eax
push esi
call [ InflateRect@IAT ]
test edi 0xc00000
pop edi
je r-xdata
sub_48ee04
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0xc ] edi
call sub_47bbe6
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
mov ebx eax
push 0x20
mov [ ebp - 0x8 ] ebx
call esi
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
je r-xdata
push [ ebp + 0xc ]
mov edi [ PtInRect@IAT ]
lea eax [ ebp - 0x28 ]
push [ ebp + 0x8 ]
push eax
call edi
test eax eax
jne r-xdata
mov ecx edi
call sub_478ca1
cmp [ rw-data ] 0x0
push 0x2
mov esi eax
pop edi
je r-xdata
push 0x6
call esi
mov ebx eax
push 0x5
mov [ ebp - 0x10 ] ebx
call esi
mov esi eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x64 ] eax
lea eax [ ebp - 0x6c ]
push eax
push 0x0
call sub_48ed9e
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call [ CopyRect@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x38 ]
push [ ebp + 0x8 ]
push eax
call edi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp esi 0xa
jb r-xdata
test [ ebp - 0x3 ] 0x10
je r-xdata
test [ ebp - 0x4 ] 0x40600
je r-xdata
push 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp esi 0x4
jne r-xdata
cmp esi 0x11
jbe r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ rw-data ]
push [ ebp + 0xc ]
add ebx eax
lea eax [ ebp - 0x28 ]
push [ ebp + 0x8 ]
add ebx [ ebp - 0x24 ]
push eax
mov [ ebp - 0x1c ] ebx
call edi
test eax eax
je r-xdata
lea eax [ esi + esi * 2 ]
mov esi [ ebp - 0x8 ]
mov ecx eax
mov eax [ rw-data ]
sub eax ecx
lea ecx [ ebx + ebx ]
add eax [ ebp - 0x18 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ ebp - 0x24 ]
add ecx [ rw-data ]
add edx esi
cmp [ ebp + 0xc ] edx
jge r-xdata
pop eax
mov eax esi
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
push edi
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov esi edi
push 0xfffffffe
mov eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
lea eax [ eax + ecx - 0x2 ]
cmp [ ebp + 0x8 ] eax
jge r-xdata
mov edx [ ebp - 0x1c ]
mov ebx edx
sub ebx esi
cmp [ ebp + 0xc ] ebx
jl r-xdata
test [ ebp - 0x3 ] 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
neg ebx
neg eax
push ebx
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ InflateRect@IAT ]
test [ ebp - 0x3 ] 0x2
je r-xdata
mov eax edi
jmp r-xdata
push 0x2
jmp r-xdata
test [ ebp - 0x2 ] 0x8
je r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
add esi eax
cmp [ ebp + 0x8 ] esi
jge r-xdata
test [ ebp - 0x3 ] 0x2
je r-xdata
mov ecx [ ebp - 0x28 ]
add ecx eax
cmp [ ebp + 0x8 ] ecx
jg r-xdata
push 0xc
jmp r-xdata
mov eax esi
sub eax 0x4
je r-xdata
push 0x3
jmp r-xdata
mov esi [ ebp - 0x20 ]
sub esi eax
cmp [ ebp + 0x8 ] esi
jl r-xdata
test [ ebp - 0x3 ] 0x2
je r-xdata
mov ecx [ ebp - 0x28 ]
add ecx eax
cmp [ ebp + 0x8 ] ecx
jg r-xdata
push 0xf
jmp r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx eax
xor eax eax
cmp [ ebp + 0x8 ] ecx
setl al
dec eax
and eax 0x2
add eax 0xc
jmp r-xdata
push 0xd
jmp r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebp - 0x1c ]
setle al
dec eax
and eax 0x4
sub eax 0x9
je r-xdata
mov ecx [ ebp - 0x8 ]
neg ecx
neg eax
push ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ InflateRect@IAT ]
mov ebx [ ebp - 0x10 ]
test [ ebp - 0x3 ] 0x2
je r-xdata
mov eax [ ebp - 0x24 ]
add eax ecx
cmp [ ebp + 0xc ] eax
jle r-xdata
push 0xa
jmp r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx eax
xor eax eax
cmp [ ebp + 0x8 ] ecx
setl al
dec eax
and eax 0x2
add eax 0xf
jmp r-xdata
push 0x10
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebp - 0x24 ]
setge al
dec eax
and eax edi
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x24 ]
add eax ecx
cmp [ ebp + 0xc ] eax
jg r-xdata
push 0xb
jmp r-xdata
sub edx ecx
xor eax eax
cmp [ ebp + 0xc ] edx
setl al
dec eax
and eax 0x6
add eax 0xa
jmp r-xdata
add eax 0xa
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebp - 0x24 ]
setl al
jmp r-xdata
sub eax edi
je r-xdata
sub edx ecx
xor eax eax
cmp [ ebp + 0xc ] edx
setl al
dec eax
and eax 0x6
add eax 0xb
push 0xe
add eax 0xb
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebp - 0x1c ]
setle al
dec eax
and eax 0x5
dec eax
je r-xdata
sub_48f103
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
mov ecx esi
call sub_478ca1
cmp [ esp + 0x8 ] 0x3
jne r-xdata
push 0x1
pop eax
push [ esi + 0x1c ]
mov [ esi + 0xbc ] eax
mov [ esi + 0xc0 ] eax
call [ SetCapture@IAT ]
push eax
call sub_478d3a
mov ecx esi
call sub_48f22f
jmp r-xdata
pop esi
retn 0xc
sub_48f148
push esi
mov esi ecx
push edi
cmp [ esi + 0xbc ] 0x0
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x1c ]
call [ ClientToScreen@IAT ]
call [ GetCapture@IAT ]
push eax
call sub_478d3a
cmp eax esi
je r-xdata
call sub_478ca1
jmp r-xdata
push [ esp + 0x14 ]
mov edi [ esi + 0xc0 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_48ee04
sub eax 0x3
neg eax
sbb eax eax
inc eax
cmp eax edi
je r-xdata
and [ esi + 0xbc ] 0x0
push 0x0
push 0x0
push 0x85
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
pop edi
pop esi
retn 0xc
xor eax eax
mov ecx esi
test edi edi
sete al
mov [ esi + 0xc0 ] eax
call sub_48f22f
sub_48f1cf
push esi
mov esi ecx
push edi
cmp [ esi + 0xbc ] 0x0
lea edi [ esi + 0xbc ]
jne r-xdata
call [ ReleaseCapture@IAT ]
and [ edi ] 0x0
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x1c ]
call [ ClientToScreen@IAT ]
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_48ee04
cmp eax 0x3
jne r-xdata
call sub_478ca1
jmp r-xdata
pop edi
pop esi
retn 0xc
mov ecx esi
call sub_48f22f
push 0x0
push 0x0
push 0x10
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_48f22f
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
mov [ ebp - 0x8 ] ecx
push 0x6
call esi
push 0x5
mov [ ebp - 0x4 ] eax
call esi
push 0x21
mov edi eax
call esi
push 0x20
mov ebx eax
call esi
mov esi eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x18 ] edi
sub eax edi
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
call sub_47bbe6
test eax 0x40600
je r-xdata
mov edi [ ebp - 0x8 ]
push [ edi + 0x1c ]
call [ GetWindowDC@IAT ]
push eax
call sub_47fc89
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ InvertRect@IAT ]
push [ esi + 0x4 ]
push [ edi + 0x1c ]
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub ebx [ ebp - 0x4 ]
sub esi edi
lea eax [ ebp - 0x18 ]
push ebx
push esi
push eax
call [ OffsetRect@IAT ]
sub_48f2c7
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ CopyRect@IAT ]
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call ebx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
add eax ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ FillRect@IAT ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
call esi
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
sub eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
call esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
add [ ebp - 0x10 ] eax
sub [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
call esi
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
sub eax ebx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ eax + 0x4 ]
sub_48f384
mov eax sub_49bb58
call sub_469294
sub esp 0xac
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
mov esi ecx
mov [ ebp - 0x50 ] esi
je r-xdata
push esi
lea ecx [ ebp - 0x44 ]
call sub_48051a
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_47bbe6
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x28 ]
neg eax
neg ecx
push eax
lea eax [ ebp - 0x28 ]
push ecx
push eax
call [ OffsetRect@IAT ]
mov [ ebp - 0x48 ] edi
mov edi r--data
mov [ ebp - 0x4c ] edi
mov ebx [ GetSysColor@IAT ]
push 0x6
mov [ ebp - 0x4 ] 0x1
call ebx
mov esi [ CreateSolidBrush@IAT ]
push eax
call esi
push eax
lea ecx [ ebp - 0x4c ]
call sub_48070e
and [ ebp - 0x5c ] 0x0
mov [ ebp - 0x60 ] edi
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ eax + 0xc4 ]
neg eax
sbb eax eax
add eax 0xb
push eax
call ebx
push eax
call esi
push eax
lea ecx [ ebp - 0x60 ]
call sub_48070e
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x58 ] edi
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
mov eax [ eax + 0xc4 ]
neg eax
sbb eax eax
add eax 0x3
push eax
call ebx
push eax
call esi
push eax
lea ecx [ ebp - 0x58 ]
call sub_48070e
mov esi [ GetSystemMetrics@IAT ]
push 0x6
call esi
push 0x5
mov [ ebp - 0x10 ] eax
call esi
push 0x21
mov [ ebp - 0x14 ] eax
call esi
push 0x20
mov edi eax
call esi
test [ ebp - 0x30 ] 0x40600
mov esi eax
je r-xdata
call sub_478ca1
jmp r-xdata
test [ ebp - 0x2e ] 0xc0
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_48f2c7
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
neg eax
neg ecx
push eax
lea eax [ ebp - 0x28 ]
push ecx
push eax
call [ InflateRect@IAT ]
lea eax [ ebp - 0x60 ]
push eax
mov eax edi
sub eax [ ebp - 0x10 ]
push eax
mov eax esi
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_48f2c7
mov eax [ ebp - 0x10 ]
lea ecx [ eax + eax ]
mov eax edi
mov [ ebp - 0x74 ] ecx
sub eax ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
lea eax [ ecx + ecx ]
mov edx eax
mov eax esi
sub eax edx
test [ ebp - 0x2f ] 0x2
mov [ ebp - 0x2c ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_48f2c7
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x10 ]
add eax esi
add eax [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
lea eax [ ebp - 0x4c ]
push eax
push esi
push [ ebp - 0x14 ]
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_48f2c7
mov ecx [ ebp - 0x14 ]
mov eax esi
neg eax
neg ecx
push eax
lea eax [ ebp - 0x70 ]
push ecx
push eax
call [ InflateRect@IAT ]
lea eax [ ebp - 0x58 ]
neg eax
sbb eax eax
and eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push [ ebp - 0x40 ]
call [ FillRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
push esi
push [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_48f2c7
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
sub edi [ ebp - 0x74 ]
push 0x0
push 0x1
push eax
add edi [ rw-data ]
mov eax [ ebp - 0x24 ]
lea ecx [ ecx + ecx * 2 ]
add eax edi
sub esi ecx
add esi [ rw-data ]
push eax
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x44 ]
call sub_489d06
mov eax [ ebp - 0x1c ]
push 0x0
push 0x1
sub eax edi
push [ ebp - 0x2c ]
lea ecx [ ebp - 0x44 ]
push eax
push [ ebp - 0x28 ]
call sub_489d06
mov eax [ ebp - 0x24 ]
push 0x0
push 0x1
add eax edi
push [ ebp - 0x2c ]
lea ecx [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x2c ]
push eax
call sub_489d06
mov eax [ ebp - 0x1c ]
push 0x0
push 0x1
sub eax edi
push [ ebp - 0x2c ]
lea ecx [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x2c ]
push eax
call sub_489d06
mov edi [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
push 0x0
push edi
push 0x1
add eax esi
push [ ebp - 0x24 ]
lea ecx [ ebp - 0x44 ]
push eax
call sub_489d06
mov eax [ ebp - 0x20 ]
push 0x0
push edi
push 0x1
push [ ebp - 0x24 ]
sub eax esi
lea ecx [ ebp - 0x44 ]
push eax
call sub_489d06
mov eax [ ebp - 0x1c ]
push 0x0
push edi
sub eax edi
push 0x1
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x44 ]
add eax esi
push eax
call sub_489d06
mov eax [ ebp - 0x1c ]
push 0x0
push edi
sub eax edi
push 0x1
push eax
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x44 ]
sub eax esi
push eax
call sub_489d06
mov eax [ ebp - 0x2c ]
mov ecx edi
jmp r-xdata
test [ ebp - 0x2e ] 0x8
je r-xdata
push eax
push [ ebp - 0x40 ]
call [ SelectObject@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_4796e8
mov esi [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
and esi 0x80000
lea edx [ ebp - 0x78 ]
mov ecx [ eax - 0x8 ]
push edx
neg esi
sbb esi esi
push ecx
and esi [ rw-data ]
push eax
push [ ebp - 0x3c ]
add esi [ ebp - 0x70 ]
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x68 ]
sub eax [ ebp - 0x70 ]
cmp [ ebp - 0x78 ] eax
jg r-xdata
neg ecx
neg eax
push ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ InflateRect@IAT ]
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea ecx [ ebp - 0x80 ]
call sub_47fbe7
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x5
neg eax
sbb eax eax
and eax [ ebp - 0x40 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_47fc9e
test eax eax
jne r-xdata
lea eax [ ebp - 0xb8 ]
push eax
push [ ebp - 0x3c ]
call [ GetTextMetricsA@IAT ]
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xac ]
push 0x1
push 0x0
lea edi [ ecx + eax ]
lea eax [ ebp - 0x70 ]
add edi [ ebp - 0xb4 ]
push eax
call [ InflateRect@IAT ]
mov eax [ ebp - 0x64 ]
sub eax edi
sub eax [ ebp - 0x6c ]
inc eax
cdq
sub eax edx
mov edi eax
mov eax [ ebp - 0x50 ]
sar edi 0x1
mov eax [ eax + 0xc4 ]
neg eax
sbb eax eax
and al 0xf6
add eax 0x13
push eax
call ebx
push eax
lea ecx [ ebp - 0x44 ]
call sub_47ff5f
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_47fea7
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x6c ]
push 0x0
add edx edi
mov ecx [ eax - 0x8 ]
push ecx
push eax
lea eax [ ebp - 0x70 ]
push eax
push 0x4
push edx
push esi
push [ ebp - 0x40 ]
call [ ExtTextOutA@IAT ]
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x6
lea ecx [ ebp - 0x44 ]
call sub_48033d
mov eax [ ebp - 0x68 ]
sub eax esi
cdq
sub eax edx
sar eax 0x1
add esi eax
mov esi r--data
mov [ ebp - 0x58 ] esi
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x9
call sub_480765
mov [ ebp - 0x60 ] esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0xa
call sub_480765
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x4 ] 0xb
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_47fd1c
mov esi r--data
mov [ ebp - 0x58 ] esi
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x6
call sub_480765
mov [ ebp - 0x60 ] esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x7
call sub_480765
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x3
call sub_47c674
push [ ebp - 0x18 ]
push [ ebp - 0x40 ]
call [ SelectObject@IAT ]
xor esi esi
push eax
push [ ebp - 0x7c ]
call [ SelectObject@IAT ]
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_480765
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x44 ]
call sub_48058c
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_47fd1c
push esi
push [ ebp - 0x7c ]
call [ SelectObject@IAT ]
mov ecx [ rw-data ]
lea eax [ ebp - 0x80 ]
mov edx [ rw-data ]
push 0xcc0020
neg eax
sbb eax eax
push 0x0
and eax [ ebp - 0x7c ]
push 0x0
push eax
push ecx
push edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x40 ]
call [ BitBlt@IAT ]
test esi esi
je r-xdata
sub_48f8de
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
call sub_47bbe6
mov ebx eax
test ebx 0x80000000
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_48c2a1
mov eax [ ebp + 0x8 ]
and eax 0xfff0
cmp eax 0xf060
jne r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_47aa03
test eax eax
jne r-xdata
mov edi [ GetKeyState@IAT ]
push 0x73
call edi
test ax ax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x12
call edi
test ax ax
jge r-xdata
test bh 0x1
je r-xdata
sub_48f946
cmp [ rw-data ] 0x0
push esi
je r-xdata
push edi
call sub_47bbe6
mov edi eax
test edi 0x40600
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_47a9d8
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x6
call esi
push eax
push 0x5
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
push eax
push 0x20
jmp r-xdata
pop esi
retn 0x8
mov eax [ rw-data ]
sub [ esi + 0x4 ] eax
call esi
mov esi [ esp + 0x10 ]
push eax
push esi
call [ InflateRect@IAT ]
test edi 0xc00000
pop edi
je r-xdata
sub_48f9ae
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
je r-xdata
test [ ebp + 0xc ] 0x40600
je r-xdata
push 0x188
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ AdjustWindowRectEx@IAT ]
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x6
call esi
push eax
push 0x5
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
push eax
push 0x20
jmp r-xdata
pop esi
pop ebp
retn 0xc
call sub_48ea1b
mov eax [ rw-data ]
sub [ esi + 0x4 ] eax
call esi
mov esi [ ebp + 0x8 ]
push eax
push esi
call [ InflateRect@IAT ]
test [ ebp + 0xe ] 0xc0
je r-xdata
sub_48fa1a
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
mov edi [ esp + 0xc ]
lea esi [ ecx + 0xc8 ]
push edi
push [ esi ]
push [ esp + 0x18 ]
call [ lstrcpynA@IAT ]
mov eax [ esi ]
mov eax [ eax - 0x8 ]
cmp edi eax
jle r-xdata
call sub_478ca1
jmp r-xdata
mov eax edi
pop edi
pop esi
mov edi eax
retn 0x8
sub_48fa71
mov eax sub_49bb64
call sub_469294
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
mov [ ebp - 0x10 ] esp
mov esi ecx
je r-xdata
cmp [ ebp + 0xc ] edi
mov [ ebp - 0x4 ] edi
jne r-xdata
call sub_478ca1
jmp r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
push eax
lea ecx [ esi + 0xc8 ]
call sub_47cacf
push [ ebp + 0xc ]
push eax
call [ lstrcpyA@IAT ]
lea ecx [ esi + 0xc8 ]
call sub_47c5ff
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
push edi
push edi
push 0x85
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
sub_48faf8
push ecx
push ebx
push ebp
push esi
xor ebp ebp
push edi
mov esi ecx
mov [ esp + 0x10 ] ebp
call sub_47bbe6
mov ebx [ esp + 0x18 ]
mov edi 0x100
test edi eax
je r-xdata
test bl 0x3
je r-xdata
test bl 0x40
je r-xdata
test bl 0x30
je r-xdata
mov eax ebx
mov ecx esi
and al 0x1
neg al
sbb eax eax
and al 0xc0
add eax 0x80
or al 0x17
push eax
push ebp
push ebp
push ebp
push ebp
push ebp
call sub_47bd57
mov [ esp + 0x10 ] 0x1
test bl 0xc
je r-xdata
mov eax ebx
mov ecx esi
shr eax 0x4
and eax 0x1
push eax
call sub_47bde8
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
mov ecx esi
call sub_47bbe6
test edi eax
je r-xdata
push ebp
push ebp
push edi
mov ecx esi
call sub_47bc1a
shr ebx 0x2
and ebx 0x1
push ebp
push ebx
push 0x86
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push ebp
push edi
push ebp
mov ecx esi
call sub_47bc1a
sub_48fba2
push esi
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
push 0x0
mov esi eax
push 0x0
push 0x36b
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0x8
mov eax esi
sub_48fbce
mov eax sub_49a7f9
call sub_469294
push ecx
push 0x3c
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_478919
sub_48fc06
mov eax sub_49a80e
call sub_469294
push ecx
push esi
mov ecx rw-data
call sub_46733d
mov esi eax
mov [ ebp - 0x10 ] esi
xor eax eax
cmp esi eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx esi
call sub_478919
mov [ esi ] r--data
mov eax esi
sub_48fcb1
mov eax sub_49a821
call sub_469294
push ecx
push 0x118
call sub_492b1f
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_490221
sub_48fce5
mov eax sub_49a835
call sub_469294
push ecx
push 0x10
call sub_492b1f
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_491c1b
sub_48fd46
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
movsx ecx ax
cmp ebx 0x20
mov [ ebp - 0xc ] ecx
jle r-xdata
lea eax [ ebx - 0x4 ]
lea esi [ ebx + 0xf ]
cdq
sub eax edx
sar esi 0x4
mov edi eax
mov eax esi
sar edi 0x1
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x90 ]
push 0xff
push eax
call sub_467a10
mov eax [ ebp - 0xc ]
add esp 0xc
add eax 0xfffffffa
mov [ ebp - 0x4 ] r--data
sar eax 0x1
imul eax esi
add esi esi
mov [ ebp - 0x8 ] 0x5
lea edx [ ebp + eax * 2 - 0x90 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx edi
movzx ax [ eax ]
shl eax cl
inc [ ebp - 0x4 ]
xor ecx ecx
not eax
mov cl ah
mov [ edx + 0x1 ] al
mov [ edx ] cl
add edx esi
dec [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x1
push [ ebp - 0xc ]
push ebx
call [ CreateBitmap@IAT ]
pop edi
pop esi
test eax eax
mov [ rw-data ] eax
pop ebx
jne r-xdata
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_48ff03
push esi
mov ecx rw-data
call sub_46733d
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_47fbe7
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_49006f
mov eax sub_49ab94
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_47be8c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x50 ] eax
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi ] r--data
mov [ esi + 0x4c ] eax
call sub_49010c
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_4900cf
mov eax sub_49aba8
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_47be8c
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
call sub_49010c
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_49010c
push esi
mov esi ecx
push edi
xor edi edi
lea eax [ esi + 0x5c ]
mov [ esi + 0x1c ] edi
push eax
mov [ esi + 0x20 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x64 ] edi
call [ GetCursorPos@IAT ]
mov [ esi + 0x58 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x24 ] 0x1
pop edi
pop esi
retn
sub_490144
mov eax sub_49abd1
call sub_469294
push ecx
push 0x3c
call sub_492b1f
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4903f0
sub_490253
mov eax sub_49ac78
call sub_469294
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0xcc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_46965a
pop ecx
sub_4902f8
mov eax ecx
xor edx edx
lea ecx [ eax + 0x103c ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
or [ eax + 0x104c ] 0xffffffff
lea ecx [ eax + 0x1048 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov cl [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x1c
mov [ eax + 0x20 ] 0x14
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x1040 ] 0x18
retn 0x4
sub_490376
mov eax sub_49ac9a
call sub_469294
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x1044 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x106c ]
lea edi [ esi + 0x106c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1070 ]
call sub_492ff5
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
lea edx [ esi + 0x1048 ]
push edx
call [ eax + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_49042a
mov eax sub_49acac
call sub_469294
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
call sub_477904
push eax
call sub_47c3de
pop ecx
mov ecx [ esi + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
sub_490536
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_49056b
push esi
push 0x1074
call sub_492b1f
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x1
mov ecx esi
call sub_4902f8
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_49067e
mov eax sub_49ad35
call sub_469294
push ecx
push 0xc0
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_48a25c
sub_4906b9
mov eax sub_49ad49
call sub_469294
push ecx
push 0xc4
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_48a74e
sub_4906f4
mov eax sub_49ae19
call sub_469294
push ecx
push 0xbc
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_48b2b9
sub_490784
mov eax sub_49afbd
call sub_469294
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push 0x1
mov eax [ edi + 0x10 ]
xor ebx ebx
pop ecx
cmp eax ebx
mov [ ebp - 0x10 ] ecx
je r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
push ebx
push ebx
push ebx
mov edx [ eax ]
push 0xe100
mov ecx eax
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp eax ecx
je r-xdata
cmp [ esi + 0x1c ] ebx
mov ecx esi
call sub_487a25
mov edi [ edi + 0x14 ]
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x7c ]
test eax eax
jmp r-xdata
jle r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax 0x3
jle r-xdata
mov eax [ esi ]
mov [ esi + 0x74 ] ebx
push [ edi + 0x14 ]
mov ecx esi
call [ eax + 0x7c ]
mov eax [ esi + 0x1c ]
lea ebx [ esi + 0xac ]
mov [ ebx ] edi
xor edi edi
push edi
push 0xe108
push 0x111
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
mov [ ebx ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp eax 0x4
je r-xdata
mov eax [ esi + 0x74 ]
mov [ esi + 0x74 ] ebx
mov [ esi + 0xac ] eax
jmp r-xdata
cmp eax 0x5
jne r-xdata
mov ecx esi
call sub_490ad6
mov ecx esi
call sub_4908c5
cmp [ edi + 0x8 ] ebx
jne r-xdata
cmp [ esi + 0xac ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax ebx
push 0xffffffff
push ebx
je r-xdata
push 0x24
call sub_47c3b5
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push 0xf10c
push 0xf10b
jmp r-xdata
xor eax eax
mov ecx eax
call sub_491ddc
jmp r-xdata
call sub_4840fb
mov [ esi + 0xac ] eax
mov [ eax + 0x10 ] 0x5
jmp r-xdata
sub_4908c5
mov eax sub_49afe0
call sub_469294
sub esp 0x120
push ebx
push edi
xor ebx ebx
mov edi ecx
mov [ ebp - 0x14 ] ebx
call sub_4841fc
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
cmp [ edi + 0x7c ] ebx
je r-xdata
lea eax [ ebp - 0x1c ]
mov ecx edi
push eax
call sub_48420e
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push esi
push r--data
lea ecx [ ebp - 0x10 ]
call sub_47c6e2
push [ edi + 0x7c ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_47ca04
lea eax [ ebp - 0x10 ]
push r--data
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_47c8bd
push [ edi + 0x90 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_47c8bd
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x3
call sub_47c674
lea eax [ ebp - 0x18 ]
mov esi 0x80000001
push eax
push esi
mov ecx edi
call sub_4909f4
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push esi
call [ RegOpenKeyA@IAT ]
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov edx [ eax ]
push ebx
push ebx
push 0xfffffffc
push ebx
mov ecx eax
call [ edx + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x12c ]
push eax
push [ ebp - 0x18 ]
push esi
call [ RegQueryValueA@IAT ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
pop esi
lea eax [ ebp - 0x12c ]
push 0x104
push eax
push ebx
push [ ebp - 0x14 ]
call [ RegEnumKeyA@IAT ]
cmp eax 0x103
jne r-xdata
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
push esi
call sub_4909f4
sub_490a04
mov eax sub_49aff4
call sub_469294
sub esp 0x10c
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
push esi
push ecx
mov eax [ eax ]
push eax
push [ ebp + 0x8 ]
call [ RegOpenKeyA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push ebx
mov ebx 0xff
push edi
mov edi [ RegEnumKeyA@IAT ]
lea eax [ ebp - 0x118 ]
push ebx
push eax
push esi
push [ ebp - 0x14 ]
pop edi
cmp esi 0x103
pop ebx
je r-xdata
lea eax [ ebp - 0x118 ]
lea ecx [ ebp - 0x18 ]
push eax
call sub_47c6e2
and [ ebp - 0x4 ] esi
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
call sub_490a04
mov esi eax
lea ecx [ ebp - 0x18 ]
test esi esi
setne [ ebp - 0xd ]
or [ ebp - 0x4 ] 0xffffffff
call sub_47c674
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
push [ ebp + 0x8 ]
call [ RegDeleteKeyA@IAT ]
mov esi eax
cmp esi 0x3f2
jne r-xdata
lea eax [ ebp - 0x118 ]
push ebx
push eax
push 0x0
push [ ebp - 0x14 ]
jmp r-xdata
call edi
mov esi eax
test esi esi
jne r-xdata
sub_490b0e
push esi
mov esi ecx
call sub_478919
push 0x6
xor eax eax
pop ecx
mov [ esi + 0x58 ] eax
push 0x1
mov [ esi + 0x44 ] ecx
mov [ esi + 0x40 ] ecx
pop ecx
mov [ esi + 0x5c ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x6c ] eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x74 ] eax
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x50 ] 0x2
mov [ esi + 0x4c ] ecx
mov [ esi + 0x48 ] ecx
mov [ esi + 0x54 ] 0x7fff
mov eax esi
pop esi
retn
sub_490b79
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_479340
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
or [ edi + 0x23 ] 0x4
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
pop eax
mov eax [ esi + 0x64 ]
test al 0x80
jne r-xdata
mov ecx eax
and ecx 0xff00
cmp ecx 0x1400
je r-xdata
mov ecx 0xa00
cmp ecx 0x2800
je r-xdata
mov ecx 0x200
jmp r-xdata
cmp ecx 0x4100
je r-xdata
and ah 0xf0
or eax ecx
or al 0x80
mov [ esi + 0x64 ] eax
cmp ecx 0x8200
jne r-xdata
mov ecx 0x800
jmp r-xdata
sub_490bec
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax edi
and eax 0x10
push eax
call sub_476bb0
mov eax [ esi + 0x64 ]
cmp eax edi
je r-xdata
pop edi
pop esi
retn 0x4
mov edx [ esi ]
push edi
push eax
mov ecx esi
mov [ esi + 0x64 ] edi
call [ edx + 0xd4 ]
sub_490c1d
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
xor edi edi
mov esi ecx
test ebx ebx
jle r-xdata
push [ esi + 0x5c ]
call sub_46965a
pop ecx
mov [ esi + 0x5c ] edi
push 0x1
mov [ esi + 0x58 ] ebx
pop eax
push [ esp + 0x14 ]
push ebx
call sub_46a01d
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
sub_490c7f
push esi
mov ecx rw-data
call sub_46733d
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_47671e
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_490d1c
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
leave
retn
push ebx
push esi
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ebx eax
mov esi 0x40000
test ebx ebx
je r-xdata
mov [ rw-data ] esi
mov eax esi
pop esi
pop ebx
push 0x14
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_467a10
add esp 0xc
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x14
push eax
call ebx
test eax eax
jl r-xdata
movzx esi [ ebp - 0x10 ]
movzx eax [ ebp - 0xc ]
shl esi 0x10
or esi eax
sub_490d8a
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
retn
push ebx
push ebp
push esi
push edi
xor edi edi
push edi
call [ GetDC@IAT ]
push r--data
push edi
push edi
push edi
push edi
push 0x2
push edi
push edi
push edi
push 0x190
push edi
push edi
push edi
push 0x48
mov ebx eax
call [ GetSystemMetrics@IAT ]
push eax
call [ CreateFontA@IAT ]
mov ebp [ SelectObject@IAT ]
mov esi eax
cmp esi edi
je r-xdata
push rw-data
push 0x36
push 0x36
push ebx
call [ GetCharWidthA@IAT ]
cmp esi edi
je r-xdata
push esi
push ebx
call ebp
mov esi eax
push ebx
push edi
call [ ReleaseDC@IAT ]
mov eax [ rw-data ]
pop edi
pop esi
pop ebp
pop ebx
push esi
push ebx
call ebp
push esi
call [ DeleteObject@IAT ]
sub_490e0b
push esi
mov esi ecx
call sub_490b0e
xor eax eax
push 0x3
mov [ esi + 0x98 ] eax
mov [ esi + 0x78 ] eax
mov [ esi + 0x7c ] eax
mov [ esi + 0x80 ] eax
pop eax
mov [ esi ] r--data
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x84 ] 0x1
mov [ esi + 0x88 ] 0x10
mov [ esi + 0x8c ] 0xf
mov [ esi + 0x90 ] 0x17
mov [ esi + 0x94 ] 0x16
mov eax esi
pop esi
retn
sub_490e88
mov eax sub_49b104
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x80 ]
push eax
call sub_483088
mov ecx [ esi + 0x98 ]
test ecx ecx
je r-xdata
and [ esi + 0x58 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_484220
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_490edc
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ecx + 0x40 ]
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x48 ]
push edi
mov [ ebp - 0xc ] eax
push [ ebp + 0x10 ]
mov eax [ ecx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4c ]
sub esp 0x10
lea esi [ ebp - 0x10 ]
mov edi esp
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
call sub_490f1e
pop edi
pop esi
leave
retn 0xc
sub_490f1e
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x20 ]
mov edi ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_490b5a
mov esi [ ebp + 0x10 ]
mov eax esi
and eax r-xdata
cmp [ ebp + 0x24 ] 0xe800
mov [ edi + 0x64 ] eax
jne r-xdata
push 0x1000
call sub_47b7d9
call sub_490d1c
call sub_490d8a
lea eax [ ebp + 0x14 ]
push eax
call [ SetRectEmpty@IAT ]
push 0x0
and esi 0xffbf004e
push [ ebp + 0x24 ]
or esi [ ebp + 0xc ]
lea eax [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x8 ]
or esi 0x4e
push eax
push esi
push 0x0
push r--data
call sub_479360
test eax eax
je r-xdata
or al 0x8
mov [ edi + 0x64 ] eax
pop edi
pop esi
pop ebp
retn 0x20
push [ edi + 0x8c ]
mov ecx edi
push [ edi + 0x88 ]
push [ edi + 0x94 ]
push [ edi + 0x90 ]
call sub_491001
push 0x1
pop eax
sub_490fc2
push esi
mov esi ecx
call sub_478ca1
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi ]
push 0x0
push 0x14
push 0x41e
mov ecx esi
call [ eax + 0xa0 ]
push 0x1
pop eax
mov edx [ esi ]
push 0x0
push eax
push 0x425
mov ecx esi
call [ edx + 0xa0 ]
sub_491001
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x1c ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x94 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x88 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8c ] eax
movzx eax [ ebp + 0x14 ]
movzx ecx [ ebp + 0x10 ]
shl eax 0x10
or eax ecx
push edi
mov edi [ SendMessageA@IAT ]
push eax
push 0x0
push 0x420
push [ esi + 0x1c ]
call edi
movzx eax [ ebp + 0xc ]
movzx ecx [ ebp + 0x8 ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x41f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x0
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
pop edi
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_491088
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov [ ebp - 0x8 ] ecx
call sub_4904f9
mov esi [ eax + 0xc ]
push 0xf1
push [ ebp + 0x8 ]
push esi
call [ FindResourceA@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x4
push eax
call [ LockResource@IAT ]
mov esi eax
test esi esi
jne r-xdata
movzx eax [ esi + 0x6 ]
push ebx
push edi
shl eax 0x2
push eax
call sub_47c3b5
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x6 ] 0x0
pop ecx
mov ebx eax
jbe r-xdata
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x8 ]
push eax
push ebx
call sub_491238
push ebx
mov edi eax
call sub_47c3de
test edi edi
pop ecx
je r-xdata
mov ecx ebx
lea eax [ esi + 0x8 ]
mov eax edi
pop edi
pop ebx
movzx ecx [ esi + 0x4 ]
movzx eax [ esi + 0x2 ]
lea esi [ ecx + 0x7 ]
push ecx
mov ecx [ ebp - 0x8 ]
lea edx [ eax + 0x7 ]
push eax
push esi
push edx
call sub_491001
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_49114c
mov edi eax
movzx edx [ eax ]
inc [ ebp - 0x4 ]
mov [ ecx ] edx
movzx edx [ esi + 0x6 ]
inc eax
add ecx 0x4
inc eax
cmp [ ebp - 0x4 ] edx
jl r-xdata
sub_49114c
push ebx
push esi
push edi
mov edi ecx
call sub_4904f9
mov esi [ eax + 0xc ]
push 0x2
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push ebx
push esi
call sub_4851cd
push eax
mov ecx edi
call sub_491194
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push 0x1
mov [ edi + 0x7c ] esi
mov [ edi + 0x78 ] ebx
pop eax
sub_491194
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
lea eax [ ebp - 0x34 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x18
mov esi ecx
push edi
call [ GetObjectA@IAT ]
mov eax [ esi + 0x80 ]
lea ebx [ esi + 0x80 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x30 ]
cdq
idiv [ esi + 0x88 ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] ecx
push edx
mov [ ebp - 0x14 ] ecx
push ecx
push 0x42e
mov ecx esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] eax
mov eax [ esi ]
call [ eax + 0xa0 ]
mov esi eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push eax
mov eax [ ebp - 0x30 ]
cdq
idiv [ esi + 0x88 ]
mov ecx [ esi ]
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
mov ecx esi
push eax
mov eax [ ebp + 0x8 ]
push 0x413
call [ eax + 0xa0 ]
mov esi eax
neg esi
sbb esi esi
inc esi
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn 0x4
push ebx
call sub_483088
mov [ ebx ] edi
test esi esi
je r-xdata
sub_491238
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
push ebx
mov eax [ esi ]
push ebx
push 0x418
call [ eax + 0xa0 ]
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push 0x14
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_467a10
mov edi [ ebp + 0x8 ]
or [ ebp - 0x8 ] 0xffffffff
add esp 0xc
cmp edi ebx
je r-xdata
lea edi [ eax + 0x1 ]
xor edi edi
cmp [ ebp + 0xc ] ebx
mov [ ebp - 0x10 ] 0x4
jle r-xdata
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jle r-xdata
mov eax [ esi ]
push ebx
push ebx
push 0x416
mov ecx esi
call [ eax + 0xa0 ]
dec edi
jne r-xdata
mov eax [ esi ]
push ebx
push ebx
push 0x418
mov ecx esi
call [ eax + 0xa0 ]
push 0x1
mov [ esi + 0x58 ] eax
pop eax
mov [ esi + 0x84 ] eax
mov eax [ esi ]
lea ecx [ ebp - 0x18 ]
push ecx
push 0x1
push 0x414
mov ecx esi
call [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ edi ]
add edi 0x4
cmp eax ebx
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0x14 ] eax
jne r-xdata
xor eax eax
jmp r-xdata
inc edi
cmp edi [ ebp + 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
inc [ ebp + 0x8 ]
mov [ ebp - 0xf ] bl
mov [ ebp - 0x18 ] eax
mov ecx esi
mov [ ebp - 0xf ] 0x1
call sub_47bbe6
test ah 0x8
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jl r-xdata
mov [ ebp - 0x18 ] 0x6
jmp r-xdata
cmp [ rw-data ] 0x40047
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x18 ]
push ecx
push 0x1
push 0x414
mov ecx esi
call [ eax + 0xa0 ]
test eax eax
je r-xdata
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
sub_491363
push esi
mov esi ecx
call sub_490b0e
push 0x2
xor ecx ecx
pop eax
mov [ esi ] r--data
mov [ esi + 0x48 ] eax
cmp [ rw-data ] ecx
je r-xdata
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x4c ] 0x1
mov [ esi + 0x40 ] ecx
mov [ esi + 0x44 ] ecx
mov [ esi + 0x4c ] ecx
jmp r-xdata
mov [ esi + 0x78 ] ecx
mov eax esi
pop esi
retn
sub_4913bc
mov eax sub_49b118
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor eax eax
push eax
push eax
mov [ ebp - 0x4 ] eax
call sub_4915e5
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_484220
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_49140d
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
push esi
mov esi ecx
push edi
mov ecx eax
and eax 0xffbf004e
and ecx r-xdata
or al 0x4e
mov [ esi + 0x64 ] ecx
mov ecx [ ebp + 0x8 ]
mov edi eax
call sub_47bbe6
test eax 0x40000
je r-xdata
push 0x1000
call sub_47b7d9
lea eax [ ebp - 0x10 ]
push eax
call [ SetRectEmpty@IAT ]
push 0x0
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
or eax edi
push eax
push 0x0
push r--data
call sub_479360
pop edi
pop esi
leave
retn 0x10
or edi 0x100
sub_4914ac
mov eax sub_49b12c
call sub_469294
sub esp 0x2c
push edi
push 0x14
push [ ebp + 0xc ]
mov edi ecx
mov [ ebp - 0x1c ] edi
call sub_4915e5
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0x18 ] 0x1
je r-xdata
push 0x1
push 0x1
mov ecx edi
call sub_4916b9
mov eax [ ebp - 0x18 ]
pop ebx
push esi
push ebx
push ebx
push 0x31
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
push ebx
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_480466
cmp esi ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
mov edi [ edi + 0x5c ]
mov [ ebp - 0x10 ] ebx
jle r-xdata
push esi
push [ ebp - 0x34 ]
call [ SelectObject@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] ebx
pop esi
je r-xdata
lea esi [ edi + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_4804d8
mov edi [ ebp - 0x1c ]
push [ ebp - 0x14 ]
push [ ebp - 0x34 ]
call [ SelectObject@IAT ]
push ebx
call [ GetSystemMetrics@IAT ]
push 0x4
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x10 ] ebx
mov [ esi - 0xc ] eax
jne r-xdata
push eax
mov ecx esi
call sub_47e84a
test eax eax
je r-xdata
add edi 0x14
add esi 0x14
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
jl r-xdata
or [ esi - 0x8 ] 0x8000100
mov [ ebp - 0x18 ] ebx
mov eax [ esi ]
lea edx [ ebp - 0x24 ]
push edx
mov ecx [ eax - 0x8 ]
push ecx
push eax
push [ ebp - 0x30 ]
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
mov [ esi - 0xc ] eax
mov eax [ esi ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_486107
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov eax [ eax ]
or [ esi - 0x4 ] 0x1
cmp eax ebx
mov [ edi ] eax
je r-xdata
jmp r-xdata
jmp r-xdata
sub_4915e5
push ebx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x58 ] edi
mov eax [ esi + 0x5c ]
jle r-xdata
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_490c1d
test eax eax
je r-xdata
lea ebx [ eax + 0x10 ]
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi + 0x5c ]
xor edi edi
cmp [ esi + 0x58 ] edi
jle r-xdata
mov ecx ebx
call sub_47c674
add ebx 0x14
inc edi
cmp edi [ esi + 0x58 ]
jl r-xdata
push 0x1
pop eax
lea ebx [ eax + 0x10 ]
push 0x4
push rw-data
push ebx
call sub_467a70
add esp 0xc
add ebx 0x14
inc edi
cmp edi [ esi + 0x58 ]
jl r-xdata
sub_491649
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push [ ebp + 0xc ]
push ebx
call sub_48512a
mov ecx esi
call sub_47bbe6
test ah 0x1
je r-xdata
pop esi
pop ebx
leave
retn 0x8
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call [ IsZoomed@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0xc ]
push edi
push ecx
push 0x0
push 0x407
mov ecx esi
call [ eax + 0xa0 ]
mov edi [ GetSystemMetrics@IAT ]
push 0x5
call edi
mov esi [ ebx + 0x8 ]
push 0x2
shl eax 0x1
sub esi eax
sub esi [ ebp - 0xc ]
call edi
sub esi eax
pop edi
mov [ ebx + 0x8 ] esi
sub_4916b9
push ebp
mov ebp esp
sub esp 0x28
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push esi
push edi
mov esi ecx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ OffsetRect@IAT ]
lea eax [ ebp - 0x28 ]
push 0x1
push eax
mov ecx esi
call sub_491649
mov eax [ esi ]
lea ecx [ ebp - 0x18 ]
push ecx
push ebx
push 0x407
mov ecx esi
call [ eax + 0xa0 ]
mov edi [ ebp - 0x20 ]
mov eax [ esi + 0x5c ]
sub edi [ ebp - 0x28 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ esi + 0x58 ]
add edi [ ebp - 0x10 ]
test ebx ebx
jle r-xdata
lea esp [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ esi + 0x58 ] ebx
mov eax [ esi + 0x5c ]
jle r-xdata
mov eax ebx
shl eax 0x2
add eax 0x3
and al 0xfc
call sub_469f00
and [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x18 ]
mov eax esp
test ebx ebx
mov [ ebp - 0xc ] eax
jle r-xdata
add eax 0x4
mov ecx ebx
lea edi [ eax + 0x10 ]
push [ ebp - 0xc ]
mov eax [ esi ]
mov ecx esi
push [ esi + 0x58 ]
push 0x404
call [ eax + 0xa0 ]
xor ebx ebx
mov ebx [ esi + 0x5c ]
mov [ ebp - 0x4 ] eax
add ebx 0x8
push 0xfffffffa
pop edx
sub edx [ eax ]
add eax 0x14
sub edx [ ebp - 0x10 ]
add edi edx
dec ecx
jne r-xdata
inc [ ebp + 0x8 ]
add edi 0x14
inc ebx
cmp ebx [ esi + 0x58 ]
jl r-xdata
push 0x1
mov ecx esi
push [ edi ]
push ebx
call sub_486107
mov eax [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0x4
add ebx 0x14
mov [ eax ] ecx
add ecx [ ebp - 0x10 ]
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x58 ]
jl r-xdata
test edi edi
jle r-xdata
test [ eax + 0x7 ] 0x8
je r-xdata
test [ edi - 0x4 ] 0x1
je r-xdata
mov eax [ ebx - 0x4 ]
test [ ebx + 0x3 ] 0x8
lea ecx [ ecx + eax + 0x6 ]
je r-xdata
mov eax edi
cdq
idiv [ ebp + 0x8 ]
add ecx eax
dec [ ebp + 0x8 ]
sub edi eax
sub_4917ff
mov eax sub_49b205
call sub_469294
push ecx
push 0x170
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_487451
sub_49183a
push esi
mov esi ecx
push edi
push [ esi + 0x7c ]
call sub_46965a
push [ esp + 0x10 ]
call sub_46a15a
push [ esi + 0x90 ]
lea edi [ esi + 0x90 ]
mov [ esi + 0x7c ] eax
call sub_46965a
push [ esi + 0x78 ]
call sub_46a15a
add esp 0x10
mov [ edi ] eax
pop edi
pop esi
retn 0x4
sub_491875
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
mov esi 0x2001f
xor edi edi
push eax
push esi
push edi
mov ebx ecx
push r--data
push 0x80000001
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] edi
mov esi [ RegCloseKey@IAT ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebx + 0x7c ]
mov ebx [ RegCreateKeyExA@IAT ]
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push edi
push esi
push edi
push edi
push edi
push [ eax + 0x90 ]
push [ ebp - 0x8 ]
call ebx
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call esi
sub_491909
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_491875
mov edi eax
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2001f
push esi
push esi
push esi
push [ ebp + 0x8 ]
push edi
call [ RegCreateKeyExA@IAT ]
push edi
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_49194f
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ecx + 0x7c ] 0x0
push esi
je r-xdata
push [ ecx + 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetPrivateProfileIntA@IAT ]
push [ ebp + 0x8 ]
call sub_491909
mov esi eax
test esi esi
jne r-xdata
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x4
push esi
call [ RegQueryValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
test edi edi
pop edi
jne r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn 0xc
sub_4919bb
mov eax sub_49b218
call sub_469294
mov eax 0x100c
call sub_469f00
push edi
xor edi edi
cmp [ ecx + 0x7c ] edi
mov [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
push [ ebp + 0xc ]
call sub_491909
cmp eax edi
mov [ ebp - 0x10 ] eax
jne r-xdata
push [ ecx + 0x90 ]
lea eax [ ebp - 0x1018 ]
push 0x1000
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetPrivateProfileStringA@IAT ]
lea eax [ ebp - 0x1018 ]
push eax
mov [ ebp + 0x14 ] rw-data
mov ecx [ rw-data ]
push ebx
push esi
mov [ ebp + 0xc ] ecx
lea ecx [ ebp - 0x18 ]
mov esi [ RegQueryValueExA@IAT ]
push ecx
lea ecx [ ebp - 0x14 ]
push edi
push ecx
push edi
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push eax
call esi
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp + 0x14 ]
jmp r-xdata
push [ ebp - 0x10 ]
call [ RegCloseKey@IAT ]
pop esi
cmp ebx edi
pop ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0xc ]
push eax
push [ ebp - 0x18 ]
call sub_47ca58
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp + 0x10 ]
push [ ebp - 0x10 ]
call esi
push 0xffffffff
lea ecx [ ebp + 0xc ]
mov ebx eax
call sub_47caa7
mov ecx [ ebp + 0x8 ]
call sub_47c6e2
push [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
call sub_47c6e2
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_47c3e9
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_47c674
jmp r-xdata
sub_491acc
mov eax sub_49b22c
call sub_469294
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
mov [ esi ] edi
mov [ ebx ] edi
cmp [ ecx + 0x7c ] edi
je r-xdata
push edi
lea eax [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4919bb
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov eax [ eax - 0x8 ]
cmp eax edi
mov [ ebp + 0x8 ] eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_491909
cmp eax edi
mov [ ebp + 0x14 ] eax
jne r-xdata
cdq
sub eax edx
sar eax 0x1
push eax
mov [ ebx ] eax
call sub_47c3b5
cmp [ ebp + 0x8 ] 0x0
pop ecx
mov [ esi ] eax
jle r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_47c674
jmp r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp - 0x10 ]
push edi
push ecx
push edi
mov edi [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
push eax
call edi
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_47c674
mov eax [ ebp + 0xc ]
add eax edi
mov cl [ eax + 0x1 ]
mov al [ eax ]
shl cl 0x4
add cl al
mov eax edi
cdq
sub eax edx
mov edx [ esi ]
sub cl 0x51
sar eax 0x1
inc edi
inc edi
mov [ eax + edx ] cl
cmp edi [ ebp + 0x8 ]
jl r-xdata
push [ ebp + 0x14 ]
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push eax
call sub_47c3b5
pop ecx
mov [ esi ] eax
lea ecx [ ebp + 0x10 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
call edi
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
push 0x1
pop eax
push [ esi ]
call sub_47c3de
pop ecx
mov [ esi ] ebx
jmp r-xdata
sub_491c3f
mov eax sub_49b2a8
call sub_469294
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_4900cf
xor edi edi
mov [ esi ] r--data
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ esi + 0x78 ] edi
push [ ebp + 0x8 ]
call sub_46a15a
pop ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
call sub_4904f9
mov ebx eax
push sub_490144
lea ecx [ ebx + 0x1070 ]
call sub_492f51
mov [ eax + 0x4 ] esi
call [ GetCurrentThread@IAT ]
mov [ esi + 0x28 ] eax
call [ GetCurrentThreadId@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x2c ] eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x68 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0xb2 ] di
mov [ esi + 0xb0 ] di
mov [ esi + 0x70 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0xb8 ] 0x200
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_491d45
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x80 ] 0x0
lea eax [ ecx + 0x80 ]
jne r-xdata
and [ rw-data ] 0x0
mov eax [ ecx ]
push 0x0
call [ eax + 0xc ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ eax ] edx
push 0x1
pop eax
retn
sub_491d89
push 0x1
pop eax
cmp [ rw-data ] eax
jle r-xdata
retn 0x4
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x1
inc ecx
pop edx
cmp al 0x2f
jne r-xdata
mov ecx [ rw-data ]
lea esi [ eax + 0x1 ]
xor edx edx
xor ebx ebx
mov ecx [ ecx + eax * 4 ]
cmp esi [ rw-data ]
mov al [ ecx ]
sete bl
cmp al 0x2d
je r-xdata
pop edi
pop esi
pop ebx
mov eax [ edi ]
push ebx
push edx
push ecx
mov ecx edi
call [ eax + 0xc ]
mov eax esi
cmp eax [ rw-data ]
jl r-xdata
sub_491ddc
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0x14 ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x1c ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x20 ] ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x1
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_491e37
mov eax sub_49b2dd
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x3
call sub_47c674
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x2
call sub_47c674
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x14 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_491e8e
cmp [ esp + 0x8 ] 0x0
push esi
push [ esp + 0x8 ]
mov esi ecx
je r-xdata
call sub_491f75
call sub_491eb7
jmp r-xdata
push [ esp + 0x10 ]
mov ecx esi
call sub_491fc5
pop esi
retn 0xc
sub_491eb7
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ lstrcmpA@IAT ]
push esi
push edi
push r--data
mov esi ecx
push ebx
call ebp
test eax eax
jne r-xdata
push r--data
push ebx
call ebp
test eax eax
jne r-xdata
mov [ esi + 0x10 ] 0x3
jmp r-xdata
mov edi [ lstrcmpiA@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov [ esi + 0x10 ] 0x5
push r--data
push ebx
call edi
test eax eax
je r-xdata
push r--data
push ebx
call ebp
test eax eax
jne r-xdata
push r--data
push ebx
call edi
test eax eax
jne r-xdata
push eax
call sub_48e96c
mov [ esi + 0x10 ] 0x4
jmp r-xdata
push r--data
push ebx
call edi
test eax eax
jne r-xdata
push eax
call sub_48e96c
mov [ esi + 0x8 ] 0x1
jmp r-xdata
push eax
call sub_48e96c
mov [ esi + 0xc ] 0x1
and [ esi + 0x4 ] 0x0
jmp r-xdata
sub_491f75
mov eax ecx
push edi
mov edx [ eax + 0x14 ]
lea ecx [ eax + 0x14 ]
cmp [ edx - 0x8 ] 0x0
je r-xdata
push [ esp + 0x8 ]
call sub_47c7b1
mov edx [ eax + 0x10 ]
cmp edx 0x3
jne r-xdata
pop edi
retn 0x4
mov edi [ eax + 0x18 ]
lea ecx [ eax + 0x18 ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
cmp edx edx
jne r-xdata
mov edi [ eax + 0x1c ]
lea ecx [ eax + 0x1c ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
cmp edx edx
jne r-xdata
lea ecx [ eax + 0x20 ]
mov eax [ eax + 0x20 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
sub_491fc5
xor eax eax
cmp [ esp + 0x4 ] eax
je r-xdata
retn 0x4
cmp [ ecx + 0x10 ] eax
push 0x1
pop edx
jne r-xdata
cmp [ ecx + 0x8 ] eax
jne r-xdata
push esi
mov esi [ ecx + 0x14 ]
cmp [ esi - 0x8 ] eax
pop esi
je r-xdata
mov [ ecx + 0x4 ] eax
cmp [ ecx + 0xc ] eax
jne r-xdata
mov [ ecx + 0x10 ] edx
mov eax edx
sub_491ff4
mov eax sub_49b2f0
call sub_469294
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x80 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0xa8 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
call sub_4904f9
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov eax [ esi + 0x94 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x98 ]
cmp eax ebx
je r-xdata
push eax
call sub_483118
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb0 ]
push edi
mov edi [ GlobalDeleteAtom@IAT ]
cmp ax bx
je r-xdata
push eax
call sub_483118
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb2 ]
cmp ax bx
je r-xdata
push eax
call edi
mov ecx [ esi + 0xac ]
pop edi
cmp ecx ebx
je r-xdata
push eax
call edi
call sub_4904f9
mov ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x78 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] ebx
push [ esi + 0x78 ]
call sub_46965a
push [ esi + 0x7c ]
call sub_46965a
push [ esi + 0x88 ]
call sub_46965a
push [ esi + 0x8c ]
call sub_46965a
push [ esi + 0x90 ]
call sub_46965a
or [ ebp - 0x4 ] 0xffffffff
add esp 0x14
mov ecx esi
mov [ esi + 0x28 ] ebx
call sub_496813
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov [ eax + 0x4 ] ebx
sub_49212a
push esi
mov esi ecx
mov ecx [ esi + 0xa8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
pop esi
retn
push eax
push r--data
push r--data
mov ecx esi
call sub_48779a
sub_49215a
push esi
mov esi ecx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
call sub_4904f9
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x5
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
mov ecx esi
call sub_49212a
mov eax [ esi + 0x38 ]
pop esi
retn
call eax
sub_4921bd
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
je r-xdata
push sub_48fd16
mov ecx rw-data
call sub_493013
mov esi eax
cmp [ esi + 0x4 ] edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov [ esi + 0xc ] sub_472220
mov [ esi + 0x10 ] sub_472290
mov [ esi + 0x14 ] sub_472350
mov [ esi + 0x18 ] sub_4724d0
mov [ esi + 0x1c ] sub_472970
mov [ esi + 0x20 ] sub_472870
mov [ esi + 0x24 ] sub_472c50
mov [ esi + 0x28 ] sub_472570
mov [ esi + 0x2c ] sub_4726b0
call sub_4904f9
push [ eax + 0x8 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_4904f9
push [ eax + 0x8 ]
call [ esi + 0x14 ]
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
sub_49226e
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_46a15a
pop ecx
mov esi eax
push esi
call [ lstrlenA@IAT ]
add eax esi
je r-xdata
push esi
call sub_46965a
pop ecx
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi 0x80000000
lea eax [ ebp - 0x108 ]
xor ebx ebx
push 0x105
push eax
push ebx
push [ ebp + 0x8 ]
call [ RegEnumKeyA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call [ RegCloseKey@IAT ]
test ebx ebx
jne r-xdata
push 0x1
pop ebx
push esi
push edi
call [ RegDeleteKeyA@IAT ]
push 0x5c
push esi
call sub_46887f
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ eax ] 0x0
push eax
push esi
call sub_46a185
pop ecx
lea eax [ ebp + 0x8 ]
pop ecx
push eax
push esi
push edi
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
sub_492304
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push 0x80000000
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
push 0x80000000
call [ RegSetValueA@IAT ]
neg eax
sbb eax eax
inc eax
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
inc eax
push eax
push [ ebp + 0xc ]
push 0x1
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
test esi esi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
sub_492385
mov eax sub_49b548
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x4 ]
call sub_4777e2
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4923d5
mov eax sub_49b57c
call sub_469294
sub esp 0x18
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
mov [ ebp - 0x20 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_4904f9
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call sub_47df5e
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov edi r--data
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
call sub_47c674
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_47c674
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
mov eax ebx
mov ebx [ ebx ]
mov esi [ eax + 0x8 ]
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ esi ]
lea ecx [ ebp - 0x14 ]
push 0x5
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call [ eax + 0x64 ]
test eax eax
je r-xdata
pop edi
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push 0x6
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
jne r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call sub_475837
add esp 0xc
push [ ebp - 0x10 ]
call sub_49226e
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push 0x0
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
push eax
call sub_47c761
push r--data
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_475837
add esp 0x10
push [ ebp - 0x10 ]
call sub_49226e
push r--data
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_475837
add esp 0x10
push [ ebp - 0x10 ]
call sub_49226e
push r--data
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_475837
add esp 0x10
push [ ebp - 0x10 ]
call sub_49226e
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
mov ecx 0x208
push eax
mov [ ebp - 0x24 ] ecx
push ecx
lea ecx [ ebp - 0x10 ]
call sub_47ca58
push eax
push esi
push 0x80000000
call [ RegQueryValueA@IAT ]
push 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_47caa7
test esi esi
jne r-xdata
push edi
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_475837
add esp 0x10
push [ ebp - 0x10 ]
call sub_49226e
push edi
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_475837
add esp 0x10
push [ ebp - 0x10 ]
call sub_49226e
push edi
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_475837
add esp 0x10
push [ ebp - 0x10 ]
call sub_49226e
mov eax [ esi ]
lea ecx [ ebp - 0x18 ]
push 0x4
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov eax [ ebp - 0x18 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call sub_475837
add esp 0xc
push [ ebp - 0x10 ]
call sub_49226e
push [ ebp - 0x18 ]
call sub_49226e
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] esi
je r-xdata
push [ ebp - 0x14 ]
push eax
call sub_467da5
pop ecx
test eax eax
pop ecx
jne r-xdata
sub_49263c
mov eax sub_49b5d8
call sub_469294
sub esp 0x34
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
mov [ ebp - 0x30 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_4904f9
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
push ecx
push eax
call sub_47df5e
mov eax [ esi + 0x8 ]
mov [ ebp - 0x38 ] 0x1
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_47c674
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push edi
jmp r-xdata
mov ecx [ eax ]
mov edi [ eax + 0x8 ]
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x3c ] ecx
push eax
lea ecx [ ebp - 0x1c ]
call sub_47c3e9
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_47c3e9
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_47c3e9
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_47c3e9
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ edi ]
lea ecx [ ebp - 0x10 ]
push 0x5
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x9
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x6
call sub_4904f9
push [ ebp - 0x38 ]
mov eax [ eax + 0x8 ]
push [ ebp - 0x30 ]
push eax
call [ ExtractIconA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x8
call sub_47c674
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x7
call sub_47c674
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
call sub_47c674
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_47c674
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x3
call sub_47c674
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_47c674
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
inc [ ebp - 0x38 ]
cmp [ ebp - 0x3c ] ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
push ebx
lea eax [ ebp - 0x34 ]
push r--data
push eax
call sub_475837
add esp 0xc
push [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
push r--data
push eax
call sub_475837
add esp 0xc
push esi
call [ DestroyIcon@IAT ]
jmp r-xdata
mov eax [ ebp - 0x3c ]
pop edi
mov eax [ edi ]
lea ecx [ ebp - 0x20 ]
push 0x6
push ecx
mov ecx edi
call [ eax + 0x64 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
push eax
call sub_47ca40
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x5
call sub_47c674
push ebx
push [ ebp - 0x20 ]
push [ ebp - 0x10 ]
call sub_492304
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x20 ]
push eax
call sub_47c761
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x14 ]
push ebx
push ecx
mov ecx edi
call [ eax + 0x64 ]
test eax eax
je r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_475837
add esp 0xc
push ebx
push [ ebp - 0x2c ]
push [ ebp - 0x14 ]
call sub_492304
test eax eax
je r-xdata
mov esi r--data
lea eax [ ebp - 0x14 ]
push esi
push [ ebp - 0x10 ]
push r--data
push eax
call sub_475837
add esp 0x10
push ebx
push r--data
push [ ebp - 0x14 ]
call sub_492304
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_47ca04
cmp [ ebp + 0x8 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
push esi
lea eax [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push r--data
push eax
call sub_475837
add esp 0x10
push ebx
push r--data
push [ ebp - 0x14 ]
call sub_492304
test eax eax
je r-xdata
mov esi r--data
lea eax [ ebp - 0x14 ]
push esi
push [ ebp - 0x10 ]
push r--data
push eax
call sub_475837
add esp 0x10
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
call sub_492304
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_47ca04
push r--data
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push r--data
push eax
call sub_475837
add esp 0x10
push ebx
push r--data
push [ ebp - 0x14 ]
call sub_492304
test eax eax
je r-xdata
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x18 ]
push 0x4
push ecx
mov ecx edi
call [ eax + 0x64 ]
mov eax [ ebp - 0x18 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push r--data
push eax
call sub_475837
add esp 0x10
push ebx
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
call sub_492304
test eax eax
je r-xdata
mov esi r--data
lea ecx [ ebp - 0x1c ]
push esi
call sub_47ca04
push esi
lea ecx [ ebp - 0x28 ]
call sub_47ca04
push esi
call sub_47ca04
mov esi eax
lea eax [ ebp - 0x40 ]
mov ecx 0x208
push eax
mov [ ebp - 0x40 ] ecx
push ecx
lea ecx [ ebp - 0x14 ]
call sub_47ca58
push eax
push esi
push 0x80000000
call [ RegQueryValueA@IAT ]
push 0xffffffff
lea ecx [ ebp - 0x14 ]
mov esi eax
call sub_47caa7
cmp esi ebx
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push r--data
push eax
call sub_475837
add esp 0x10
push ebx
push [ ebp - 0x24 ]
push [ ebp - 0x14 ]
call sub_492304
test eax eax
je r-xdata
push ebx
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
call sub_492304
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push [ ebp - 0x10 ]
push eax
call sub_467da5
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_475837
add esp 0xc
push r--data
push r--data
push [ ebp - 0x14 ]
call sub_492304
sub_492a7f
mov eax sub_49b801
call sub_469294
push ecx
push 0x118
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_493af9
sub_492ad9
mov edx [ ecx ]
test edx edx
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp edx esi
jne r-xdata
xor eax eax
jmp r-xdata
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + esi ]
mov [ ecx ] eax
jmp r-xdata
retn 0x4
pop esi
mov ecx [ ecx + 0x4 ]
push edi
push 0x1
pop eax
test edx edx
pop edi
je r-xdata
mov edx edi
test edx edx
jne r-xdata
mov eax [ ecx + esi ]
mov [ ecx + edx ] eax
mov edi [ ecx + edx ]
cmp edi esi
je r-xdata
sub_492b51
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_475d4c
sub_492b93
push esi
mov esi ecx
push edi
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call [ TlsFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edi [ eax + 0x4 ]
push 0x0
push eax
mov ecx esi
call sub_492e5f
test edi edi
mov eax edi
jne r-xdata
add esi 0x1c
push esi
call [ DeleteCriticalSection@IAT ]
pop edi
pop esi
retn
push eax
call [ GlobalHandle@IAT ]
mov edi eax
push edi
call [ GlobalUnlock@IAT ]
push edi
call [ GlobalFree@IAT ]
sub_492bea
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
lea eax [ esi + 0x1c ]
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebp
jge r-xdata
push 0x1
pop edi
cmp ebp edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebp 0x20
test eax eax
push ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
mov eax ebp
push 0x2002
shl eax 0x3
push eax
push ebx
call [ GlobalReAlloc@IAT ]
mov eax ebp
shl eax 0x3
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebp
jl r-xdata
inc edi
add eax 0x8
cmp edi ebp
jl r-xdata
mov eax [ esi + 0x10 ]
or [ eax + edi * 8 ] 0x1
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push [ esp + 0x10 ]
call ebx
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx eax
imul ecx ecx 0x1fffffff
add ecx ebp
lea eax [ ebx + eax * 8 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_467a10
add esp 0xc
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebp
pop ebx
push [ esi + 0x10 ]
call [ GlobalHandle@IAT ]
push eax
call ebx
push [ esp + 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_475d4c
mov ebx [ GlobalLock@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
sub_492cfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x14 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
push [ ebp - 0x4 ]
and [ eax + ebx * 8 ] 0xfffffffe
lea eax [ eax + ebx * 8 ]
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_492d59
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x10
call sub_492b1f
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + edx * 4 ] ecx
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
shl ecx 0x2
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov eax [ esi + 0xc ]
shl eax 0x2
push eax
push 0x0
call [ LocalAlloc@IAT ]
jmp r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
lea ebx [ edi + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] edi
call [ EnterCriticalSection@IAT ]
push edi
lea ecx [ esi + 0x14 ]
call sub_492ac6
lea eax [ esi + 0x1c ]
push eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax [ ebx ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx [ esi + 0xc ]
shl ecx 0x2
push ecx
mov ecx [ edi + 0xc ]
push 0x0
lea eax [ ecx + eax * 4 ]
push eax
call sub_467a10
mov eax [ esi + 0xc ]
add esp 0xc
mov [ ebx ] eax
push edi
push [ esi ]
call [ TlsSetValue@IAT ]
call sub_475d4c
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
sub_492e5f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
mov ebx ecx
pop edi
cmp [ esi + 0x8 ] edi
mov [ ebp - 0x4 ] edi
jle r-xdata
lea edi [ ebx + 0x1c ]
push edi
call [ EnterCriticalSection@IAT ]
push esi
lea ecx [ ebx + 0x14 ]
call sub_492ad9
push edi
call [ LeaveCriticalSection@IAT ]
push [ esi + 0xc ]
call [ LocalFree@IAT ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push [ ebx ]
call [ TlsSetValue@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x10 ]
cmp [ ecx + edi * 8 + 0x4 ] eax
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_492ef8
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
retn 0x8
push edi
push [ esp + 0xc ]
mov ecx esi
push eax
call sub_492e5f
jmp r-xdata
push [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov ecx esi
push eax
call sub_492e5f
test edi edi
mov eax edi
jne r-xdata
pop edi
sub_492f51
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
cmp esi [ eax + 0x8 ]
jge r-xdata
call sub_492bea
mov [ edi ] eax
mov ecx rw-data
mov eax ecx
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
call [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
push esi
push [ edi ]
call sub_492d59
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
xor ecx ecx
call sub_492b51
mov ecx eax
jmp r-xdata
test esi esi
jne r-xdata
mov [ rw-data ] ecx
sub_492fc8
push esi
mov esi [ ecx ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax + esi * 4 ]
pop esi
retn
sub_492ff5
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_492cfc
sub_493013
mov eax sub_49b9f8
call sub_469294
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esp
cmp [ esi ] edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x10
call sub_493376
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_4933e6
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_49305e
push 0x10
call sub_4933e6
xor edi edi
push edi
push edi
call sub_4692b3
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4930db
mov eax sub_49ba20
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push 0x0
call eax
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call [ FreeLibrary@IAT ]
sub_49311c
mov eax sub_49ba34
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
call eax
sub_49318a
mov ecx rw-data
jmp r-xdata
jmp r-xdata
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4931c3
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
pop esi
sub_493215
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
xor ecx ecx
push 0x1
mov cl ah
movzx edx al
movzx ecx cl
shl edx 0x8
add ecx edx
mov [ esi + 0x54 ] ecx
mov ecx eax
shr ecx 0x1f
cmp al 0x4
mov [ esi + 0x58 ] ecx
sbb eax eax
pop ecx
inc eax
xor ebx ebx
sub ecx eax
cmp eax ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] ebx
je r-xdata
mov ecx esi
call sub_47fb19
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_47fad5
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
xor eax eax
cmp [ esi + 0x5c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
pop edi
setne al
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebx
retn
push ebx
call [ GetProcessVersion@IAT ]
cmp eax 0x40000
sbb eax eax
inc eax
mov [ esi + 0x68 ] eax
sub_4932b0
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
push 0x1
pop eax
cmp eax [ ebp - 0x14 ]
sbb eax eax
neg eax
leave
retn
sub_4932e3
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
push 0x1
pop esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
cmp al 0x4
jae r-xdata
and [ rw-data ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
test eax 0x80000000
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_493328
cmp [ rw-data ] 0x0
je r-xdata
retn
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
mov edi [ DeleteCriticalSection@IAT ]
push rw-data
call edi
mov esi rw-data
mov ebx rw-data
add ebx 0x18
add esi 0x4
cmp ebx rw-data
jl r-xdata
push ebx
call edi
dec [ esi ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
sub_493376
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_4932e3
pop ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi * 4 + rw-data ] ebx
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
jne r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call ebx
pop edi
pop esi
push ebp
mov ebp rw-data
push ebp
call ebx
cmp [ esi ] 0x0
jne r-xdata
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_493407
push esi
mov esi [ SetErrorMode@IAT ]
push 0x0
call esi
or ax 0x8001
push eax
call esi
call sub_4904f9
mov esi [ esp + 0x8 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
call sub_4904f9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_4904f9
cmp [ eax + 0x14 ] 0x0
pop esi
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ eax + 0x68 ] esi
mov [ eax + 0x6c ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x70 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0x74 ] ecx
mov ecx eax
call sub_49346a
push 0x1
pop eax
retn 0x10
call sub_47ce2f
sub_49346a
push ebp
mov ebp esp
sub esp 0x30c
push ebx
push esi
push edi
mov esi ecx
call sub_4904f9
mov edi eax
mov eax [ esi + 0x68 ]
mov ebx 0x104
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x68 ]
mov [ edi + 0xc ] eax
lea eax [ ebp - 0x20c ]
push ebx
push eax
push [ esi + 0x68 ]
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x20c ]
push 0x2e
push eax
call sub_46887f
and [ eax ] 0x0
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x108 ]
push ebx
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_493587
xor ebx ebx
cmp [ esi + 0x88 ] ebx
jne r-xdata
cmp [ esi + 0x78 ] ebx
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_46a15a
pop ecx
mov [ esi + 0x88 ] eax
mov eax [ esi + 0x78 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x8c ] ebx
lea edi [ esi + 0x8c ]
jne r-xdata
lea eax [ ebp - 0x30c ]
push 0x100
push eax
push 0xe000
call sub_47e8ce
test eax eax
je r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call sub_46a15a
mov [ edi ] eax
and [ ebx ] 0x0
pop ecx
push [ esi + 0x88 ]
lea eax [ ebp - 0x30c ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x108 ]
push r--data
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call sub_46a15a
pop ecx
mov [ esi + 0x90 ] eax
call sub_46a15a
pop ecx
mov [ esi + 0x78 ] eax
sub_493587
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi esi
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov al [ esi ]
cmp al 0x5c
je r-xdata
push [ esp + 0x14 ]
push edi
push [ esp + 0x18 ]
call [ lstrcpynA@IAT ]
xor eax eax
push edi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
push esi
call sub_469916
pop ecx
mov edi eax
cmp al 0x2f
je r-xdata
pop edi
pop esi
retn 0xc
cmp [ esi ] 0x0
je r-xdata
cmp al 0x3a
jne r-xdata
push esi
call sub_469916
pop ecx
mov esi eax
jmp r-xdata
sub_493604
push ebp
mov ebp esp
push ebx
push esi
push edi
push sub_4936b4
mov ecx rw-data
call sub_493013
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push [ esi + 0x4 ]
mov ecx edi
call sub_47c7b1
mov si [ esi + 0x8 ]
xor eax eax
mov [ ebx ] si
cmp si 0xffff
pop edi
pop esi
setne al
pop ebx
pop ebp
retn 0xc
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ edi ]
mov eax [ eax - 0x8 ]
inc eax
push eax
push 0x40
call [ GlobalAlloc@IAT ]
mov [ esi + 0x4 ] eax
push [ edi ]
push eax
call [ lstrcpyA@IAT ]
mov ax [ ebx ]
mov [ esi + 0x8 ] ax
mov ecx [ ebp + 0x10 ]
push 0x5
neg ecx
sbb ecx ecx
and ecx 0xe
add ecx 0x3ee
movzx ecx cx
push ecx
push eax
call [ FindResourceA@IAT ]
push eax
push [ ebp + 0xc ]
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push ebx
push edi
push eax
call sub_47f8bb
add esp 0xc
sub_493703
mov eax sub_49bb79
call sub_469294
push ecx
push 0xcc
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_48e9b5
sub_493750
push esi
mov esi ecx
xor eax eax
cmp [ esi + 0x98 ] eax
sete al
push eax
call sub_49379f
mov ecx [ esi + 0x98 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x8 ]
push edi
lea edi [ esi + 0x94 ]
mov [ eax + 0xc ] ecx
mov ecx [ edi ]
mov [ eax + 0x8 ] ecx
push [ esi + 0x98 ]
mov esi [ GlobalUnlock@IAT ]
call esi
push [ edi ]
call esi
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
retn 0x4
sub_49379f
mov eax sub_49b26a
call sub_469294
sub esp 0x154
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push esi
push edi
mov edi ecx
jne r-xdata
push ebx
push 0x14000c
push 0x1
lea ecx [ ebp - 0x160 ]
call sub_4761aa
lea ecx [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x2
call sub_47641d
mov eax [ edi + 0x94 ]
cmp eax ebx
je r-xdata
mov eax [ edi + 0x98 ]
cmp eax ebx
je r-xdata
mov eax [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
cmp eax ebx
je r-xdata
push eax
call sub_483118
push eax
call [ GlobalLock@IAT ]
mov esi eax
test [ esi + 0x6 ] 0x1
je r-xdata
mov eax [ ebp - 0x104 ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ eax + 0x8 ]
mov [ edi + 0x94 ] ecx
mov eax [ eax + 0xc ]
mov [ esi ] eax
lea ecx [ ebp - 0x160 ]
push eax
call sub_483118
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push ebx
push 0x14000c
push 0x1
lea ecx [ ebp - 0xbc ]
call sub_4761aa
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] ebx
call sub_47641d
mov eax [ ebp - 0x60 ]
cmp [ eax + 0xc ] ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0xbc ]
push eax
call sub_476364
push [ eax ]
mov ebx [ lstrcmpA@IAT ]
movzx eax [ esi ]
add eax esi
mov [ ebp - 0x4 ] 0x1
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ edi + 0x94 ]
lea esi [ edi + 0x94 ]
cmp eax ebx
je r-xdata
mov bl 0x1
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xbc ]
push eax
call sub_4763a1
push [ eax ]
movzx eax [ esi + 0x2 ]
add eax esi
push eax
call ebx
test eax eax
lea ecx [ ebp - 0x14 ]
setne [ ebp + 0xb ]
call sub_47c674
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push [ edi + 0x98 ]
call sub_483118
mov [ esi ] ebx
mov [ edi + 0x98 ] ebx
jmp r-xdata
push eax
call sub_483118
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x94 ]
lea esi [ edi + 0x94 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0xbc ]
push eax
call sub_4763df
push [ eax ]
movzx eax [ esi + 0x4 ]
add eax esi
push eax
call ebx
test eax eax
lea ecx [ ebp - 0x18 ]
setne bl
call sub_47c674
test bl bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xbc ]
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
push eax
call sub_483118
push [ edi + 0x98 ]
call sub_483118
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0xc ]
mov [ edi + 0x98 ] eax
jmp r-xdata
push eax
call sub_483118
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_47c674
test bl bl
je r-xdata
call sub_47801b
push eax
call sub_483118
sub_4939ad
push ebx
push ebp
push esi
xor ebp ebp
push edi
mov edi ecx
push ebp
call sub_49379f
mov esi [ esp + 0x14 ]
mov ecx [ edi + 0x94 ]
mov eax [ esi + 0x5c ]
mov [ eax + 0x8 ] ecx
mov eax [ esi + 0x5c ]
mov ecx [ edi + 0x98 ]
mov [ eax + 0xc ] ecx
mov eax [ esi + 0x5c ]
mov eax [ eax + 0x8 ]
mov [ edi + 0x94 ] eax
mov eax [ esi + 0x5c ]
mov eax [ eax + 0xc ]
mov [ edi + 0x98 ] eax
cmp ebx 0x2
je r-xdata
call CommDlgExtendedError
cmp eax 0x1009
je r-xdata
mov eax [ esi + 0x5c ]
mov eax [ eax + 0xc ]
cmp eax ebp
je r-xdata
cmp eax 0x100a
jbe r-xdata
mov eax [ esi + 0x5c ]
mov eax [ eax + 0x8 ]
cmp eax ebp
je r-xdata
push eax
call sub_483118
mov eax [ esi + 0x5c ]
mov [ eax + 0xc ] ebp
mov [ edi + 0x98 ] ebp
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
cmp eax 0x100c
ja r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb8 ]
mov ebx eax
cmp ebx 0x1
je r-xdata
push eax
call sub_483118
mov eax [ esi + 0x5c ]
mov [ eax + 0x8 ] ebp
mov [ edi + 0x94 ] ebp
jmp r-xdata
sub_493a62
mov eax sub_49b27f
call sub_469294
sub esp 0xa4
push esi
mov esi ecx
push 0x0
push 0x14000c
push 0x1
lea ecx [ ebp - 0xb0 ]
call sub_4761aa
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xb0 ]
push eax
mov ecx esi
call sub_4939ad
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xb0 ]
call sub_47801b
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_493af9
mov eax sub_49b73b
call sub_469294
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x18 ] esi
call sub_48230e
xor edi edi
lea ecx [ esi + 0x78 ]
mov [ ebp - 0x4 ] edi
call sub_47fbe7
lea ebx [ esi + 0x94 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] 0x2
mov ecx [ ebp - 0x10 ]
call sub_493bb8
add [ ebp - 0x10 ] 0x28
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
mov [ esi + 0x70 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x114 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x100 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0x64 ] eax
mov [ esi + 0x40 ] eax
mov [ esi ] r--data
mov [ esi + 0x90 ] ebx
mov [ esi + 0xf0 ] 0x2
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_493bbb
mov eax sub_49b75b
call sub_469294
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x78 ]
mov [ ebp - 0x4 ] 0x1
call sub_47fcd5
mov edi [ esi + 0x114 ]
test edi edi
je r-xdata
push [ esi + 0x88 ]
call sub_47c3de
pop ecx
mov ecx [ esi + 0x74 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_495775
push edi
call sub_47c3de
pop ecx
cmp [ esi + 0x100 ] 0x0
lea edi [ esi + 0x100 ]
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x78 ]
call sub_47fd1c
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_482351
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
push [ edi ]
call [ DestroyCursor@IAT ]
sub_493c64
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_481cfe
cmp eax 0xffffffff
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0xc ]
mov [ esi + 0x6c ] ecx
or eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_493c88
mov eax sub_49b77b
call sub_469294
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
push 0x3c
mov [ esi + 0x70 ] eax
call sub_47c3b5
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_4956ed
jmp r-xdata
xor eax eax
mov ecx eax
call sub_49592f
jmp r-xdata
mov [ esi + 0x114 ] eax
mov eax [ eax ]
or [ ebp - 0x4 ] 0xffffffff
push 0x1
mov [ eax + 0x3c ] 0x7009
mov eax [ esi + 0x114 ]
pop edi
mov eax [ eax ]
push 0x40
mov eax [ eax + 0x5c ]
or [ eax + 0x14 ] 0x40
mov eax [ esi + 0x114 ]
mov eax [ eax ]
mov eax [ eax + 0x5c ]
and [ eax + 0x15 ] 0xfe
mov eax [ esi + 0x114 ]
mov [ eax + 0x8 ] edi
call sub_47c3b5
pop ecx
mov [ ebp + 0x8 ] eax
test eax eax
mov [ ebp - 0x4 ] edi
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax [ esi + 0x114 ]
push ebx
lea ebx [ esi + 0x78 ]
mov eax [ eax ]
mov ecx ebx
mov eax [ eax + 0x5c ]
push [ eax + 0x10 ]
call sub_47fc9e
mov edx [ esi + 0x114 ]
mov ecx [ esi + 0x74 ]
mov edx [ edx ]
mov eax [ ecx ]
mov edx [ edx + 0x5c ]
push [ edx + 0x10 ]
call [ eax + 0xc ]
mov eax [ esi + 0x74 ]
mov ecx ebx
mov [ eax + 0xc ] edi
mov eax [ ebx ]
mov [ esi + 0x84 ] edi
call [ eax + 0x1c ]
push [ esi + 0x1c ]
call [ GetDC@IAT ]
mov ecx [ esi + 0x74 ]
push eax
mov [ ebp + 0x8 ] eax
mov edx [ ecx ]
call [ edx + 0x10 ]
mov ecx [ esi + 0x70 ]
push [ esi + 0x114 ]
mov eax [ ecx ]
push [ esi + 0x74 ]
call [ eax + 0xf8 ]
mov ecx [ esi + 0x74 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ ReleaseDC@IAT ]
mov eax [ ebx ]
push 0xffffffff
mov ecx ebx
call [ eax + 0x20 ]
lea ebx [ esi + 0x80 ]
push 0x58
push [ ebx ]
call [ GetDeviceCaps@IAT ]
push 0x5a
mov [ esi + 0x104 ] eax
push [ ebx ]
call [ GetDeviceCaps@IAT ]
mov [ esi + 0x108 ] eax
mov eax [ esi + 0x114 ]
xor ebx ebx
mov eax [ eax + 0x18 ]
cmp eax ebx
mov [ esi + 0xf8 ] eax
jne r-xdata
mov ecx [ esi + 0x70 ]
push [ esi + 0x114 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x74 ] eax
mov eax [ ecx ]
call [ eax + 0xf4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xf0 ]
cmp eax ecx
jbe r-xdata
mov [ esi + 0xf8 ] edi
jmp r-xdata
mov eax [ esi + 0xf8 ]
mov ecx edi
mov [ esi + 0xe8 ] eax
mov eax r--data
push eax
push eax
push edi
push ecx
push edi
mov ecx esi
call sub_4824c6
mov eax [ esi + 0x114 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x5c ]
mov dx [ ecx + 0x1e ]
cmp dx 0x8000
jae r-xdata
mov [ esi + 0xf8 ] ecx
push ebx
push edi
push [ esi + 0x1c ]
call [ ShowScrollBar@IAT ]
movzx ecx [ ecx + 0x1c ]
movzx edx dx
sub edx ecx
cmp edx 0x7fff
ja r-xdata
mov [ ebp - 0x24 ] 0x3
mov ecx [ eax ]
push ebx
mov ecx [ ecx + 0x5c ]
movzx ecx [ ecx + 0x1c ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax ]
mov ecx esi
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1e ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x28 ]
push eax
push edi
mov [ ebp - 0x18 ] edi
call sub_47a67d
test eax eax
jne r-xdata
mov eax [ esi + 0x114 ]
push edi
mov ecx esi
push [ eax + 0x14 ]
call sub_494b72
mov eax edi
pop ebx
push ebx
mov ecx esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push edi
call sub_47a5d7
jmp r-xdata
sub_493ecb
push ebx
push esi
push edi
xor edi edi
cmp [ ecx + 0xec ] edi
jne r-xdata
mov esi [ esp + 0x14 ]
push 0xa
mov eax esi
pop ebx
cdq
idiv ebx
mov edi [ esp + 0x18 ]
mov [ ecx + 0x54 ] esi
push edi
push esi
push [ esp + 0x18 ]
mov [ ecx + 0x58 ] edi
mov [ ecx + 0x5c ] eax
mov eax edi
cdq
idiv ebx
mov [ ecx + 0x60 ] eax
call sub_4826c3
lea eax [ ecx + 0xf0 ]
xor edx edx
cmp [ eax ] edi
jbe r-xdata
call sub_478ca1
jmp r-xdata
xor esi esi
pop edi
pop esi
pop ebx
retn 0xc
mov ebx [ ecx + 0x90 ]
inc edx
mov [ esi + ebx + 0x18 ] edi
add esi 0x28
cmp edx [ eax ]
jb r-xdata
sub_493f31
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
retn 0xc
call [ GetFocus@IAT ]
push eax
call sub_478d3a
test eax eax
je r-xdata
mov ecx [ esi + 0x8c ]
push 0xe304
call sub_47bb2c
mov ecx eax
call sub_47be0f
mov ecx [ esi + 0x8c ]
test ecx ecx
je r-xdata
push [ eax + 0x1c ]
push [ ecx + 0x1c ]
call [ IsChild@IAT ]
test eax eax
jne r-xdata
sub_493f80
push esi
mov esi ecx
mov ecx [ esi + 0x8c ]
push edi
lea edi [ esi + 0x8c ]
mov eax [ ecx ]
call [ eax + 0x58 ]
mov eax [ esi + 0x114 ]
mov ecx [ esi + 0xf4 ]
xor edx edx
push esi
mov [ edi ] edx
mov [ eax + 0x14 ] ecx
mov ecx [ esi + 0x6c ]
xor eax eax
push edx
push eax
push [ esi + 0x114 ]
mov edi [ ecx ]
push [ esi + 0x74 ]
call [ edi + 0x104 ]
pop edi
pop esi
retn
sub_493fc4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
push edi
push esi
push [ ebp + 0x14 ]
call [ MulDiv@IAT ]
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x14
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x14 ]
sub_493ff3
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
call sub_4940a9
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x90 ]
mov ecx [ eax ]
lea edi [ edi + edi * 4 ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
lea ecx [ esi + 0x78 ]
shl edi 0x3
mov [ ebp - 0x4 ] eax
mov eax [ ecx ]
lea edx [ edx + edi + 0x10 ]
push edx
push 0x0
push 0x0
push 0xc
call [ eax + 0x70 ]
mov eax [ esi + 0x90 ]
push [ esi + 0x104 ]
push [ rw-data ]
lea ebx [ eax + edi + 0x10 ]
push [ ebx ]
call [ MulDiv@IAT ]
mov [ ebx ] eax
push [ esi + 0x108 ]
push [ rw-data ]
push [ ebx + 0x4 ]
call [ MulDiv@IAT ]
mov [ ebx + 0x4 ] eax
push [ ebx + 0x4 ]
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push [ ebx ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
mov ecx esi
call [ eax + 0x108 ]
mov ecx [ esi + 0x90 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
mov [ ecx + edi + 0x20 ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + edi + 0x24 ] eax
mov ecx esi
call sub_49412d
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4940a9
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x8 ]
mov esi ecx
push eax
call sub_4827e1
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ esi + 0x114 ]
mov eax [ eax ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1e ]
cmp cx 0xffff
je r-xdata
sub ecx 0x10
lea eax [ ecx - 0x18 ]
cdq
sub eax edx
sar eax 0x1
mov ecx eax
jmp r-xdata
movzx eax [ eax + 0x1c ]
movzx ecx cx
sub ecx eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
sub edx 0x10
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn 0x4
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
jmp r-xdata
lea eax [ ecx - 0x8 ]
cdq
sub eax edx
sar eax 0x1
cmp [ esi + 0xf8 ] 0x2
mov [ esi + 0xfc ] eax
pop esi
jne r-xdata
sub_49412d
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
lea edi [ edi + edi * 4 ]
mov eax [ ebx + 0x90 ]
shl edi 0x3
lea esi [ edi + eax ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4940a9
mov ecx [ eax ]
xor edx edx
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov ecx [ esi + 0x24 ]
cmp [ esi + 0x20 ] ecx
mov eax [ ebx + 0xec ]
setl dl
sub eax 0x0
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x24 ]
mov [ esi + 0x1c ] eax
dec eax
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
sub ecx [ esi + 0x4 ]
sub eax [ esi ]
lea edx [ ebp - 0x8 ]
push r--data
add ecx 0x10
add eax 0x10
push edx
push ecx
push eax
push 0x1
mov ecx ebx
call sub_4824c6
mov ecx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
sub ecx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
sub edi [ esi ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
dec eax
push eax
mov eax [ ebp - 0x8 ]
sub eax edi
mov edi [ OffsetRect@IAT ]
cdq
sub eax edx
sar eax 0x1
dec eax
push eax
push esi
call edi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
test edx edx
mov [ esi + 0x1c ] ecx
mov eax [ esi + 0x20 ]
je r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x0
push [ ebx + 0xfc ]
push esi
call edi
jmp r-xdata
lea eax [ eax + eax * 2 ]
sub eax ecx
jmp r-xdata
add eax ecx
push [ esi + 0x1c ]
push [ esi + 0x18 ]
push [ esi + 0x10 ]
call [ MulDiv@IAT ]
push [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
push [ esi + 0x18 ]
push [ esi + 0x14 ]
call [ MulDiv@IAT ]
add edi [ ebx + 0x90 ]
add eax 0xb
push eax
mov eax [ ebp - 0x10 ]
add eax 0xb
mov esi edi
push eax
push 0x8
push 0x8
push esi
call [ SetRect@IAT ]
cmp [ ebx + 0xec ] 0x0
jne r-xdata
test edx edx
je r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0x1c ] ecx
mov eax [ esi + 0x20 ]
shl eax 0x1
sub eax [ esi + 0x24 ]
jmp r-xdata
push 0x1
pop eax
mov [ esi + 0x1c ] eax
jmp r-xdata
mov [ esi + 0x18 ] eax
jmp r-xdata
sub_49426f
cmp [ ecx + 0xec ] 0x0
jne r-xdata
mov eax [ ecx + 0x90 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_4820fa
jmp r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_48235c
sub_4942a3
mov eax sub_49b798
call sub_469294
sub esp 0x18
push esi
push edi
push 0xc
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4807cb
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_47fe32
lea ecx [ ebp - 0x24 ]
mov edi eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
sub eax [ ebp - 0x20 ]
sub ecx [ ebp - 0x24 ]
push 0xf00021
push eax
push ecx
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call [ PatBlt@IAT ]
push edi
mov ecx esi
call sub_47fe32
mov [ ebp - 0x14 ] r--data
push 0x1
lea ecx [ ebp - 0x14 ]
pop esi
mov [ ebp - 0x4 ] esi
call sub_480765
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_494333
mov eax sub_49b7c4
call sub_469294
sub esp 0x68
push ebx
push esi
mov ebx ecx
xor esi esi
cmp [ ebx + 0x70 ] esi
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebx + 0x7c ] esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push [ edi + 0x8 ]
call [ GetViewportOrgEx@IAT ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x4 ] esi
mov esi [ GetSysColor@IAT ]
push 0x6
call esi
push eax
push 0x2
push 0x0
call [ CreatePen@IAT ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_48070e
and [ ebp - 0x30 ] 0x0
mov [ ebp - 0x34 ] r--data
push 0x10
mov [ ebp - 0x4 ] 0x1
call esi
push eax
xor esi esi
push 0x3
push esi
call [ CreatePen@IAT ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_48070e
mov eax [ ebx + 0x114 ]
mov [ ebp - 0x10 ] esi
mov [ eax + 0x10 ] 0x1
cmp [ ebx + 0xf8 ] esi
jbe r-xdata
lea ecx [ ebp - 0x3c ]
call sub_480765
lea ecx [ ebp - 0x34 ]
call sub_480765
mov esi r--data
mov [ ebp - 0x34 ] esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x2
call sub_480765
mov [ ebp - 0x3c ] esi
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x3
call sub_480765
pop edi
mov [ ebp - 0x14 ] esi
jmp r-xdata
mov eax [ ebx + 0x78 ]
lea ecx [ ebx + 0x78 ]
call [ eax + 0x1c ]
test edi edi
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x74 ]
mov esi [ GetDeviceCaps@IAT ]
push 0xa
push [ eax + 0x8 ]
call esi
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x74 ]
push 0x8
push [ eax + 0x8 ]
call esi
push [ ebp - 0x1c ]
mov ecx [ ebx + 0x114 ]
add ecx 0x24
push eax
push 0x0
push 0x0
push ecx
call [ SetRect@IAT ]
mov eax [ ebx + 0x114 ]
mov ecx [ ebx + 0x74 ]
add eax 0x24
push 0x2
push eax
push [ ecx + 0x8 ]
call [ DPtoLP@IAT ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x1c ]
mov eax [ ebx + 0x90 ]
mov ecx [ ebp - 0x14 ]
cmp [ ecx + eax + 0x18 ] 0x0
lea esi [ ecx + eax ]
mov [ ebp - 0x1c ] esi
jne r-xdata
mov ecx [ ebx + 0x70 ]
push eax
push [ ebx + 0x74 ]
mov edx [ ecx ]
call [ edx + 0xdc ]
mov ecx [ ebx + 0x74 ]
push eax
mov edx [ ecx ]
call [ edx + 0x10 ]
mov eax [ ebx + 0xf4 ]
mov ecx [ ebx + 0x114 ]
add eax [ ebp - 0x10 ]
mov [ ecx + 0x14 ] eax
mov eax [ ebx + 0x114 ]
mov edx [ ebx + 0xf4 ]
mov ecx [ eax ]
add edx [ ebp - 0x10 ]
mov ecx [ ecx + 0x5c ]
movzx ecx [ ecx + 0x1e ]
cmp edx ecx
ja r-xdata
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x34 ]
push [ ebp - 0x28 ]
mov eax [ edi ]
lea ecx [ ebp - 0x4c ]
push [ ebp - 0x2c ]
push ecx
mov ecx edi
call [ eax + 0x38 ]
push 0x0
lea eax [ ebp - 0x54 ]
push 0x0
push eax
mov ecx edi
call sub_4800f8
mov eax [ edi ]
push 0x5
mov ecx edi
call [ eax + 0x24 ]
lea eax [ ebp - 0x3c ]
mov ecx edi
push eax
call sub_47fe32
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push [ edi + 0x4 ]
call [ Rectangle@IAT ]
lea eax [ ebp - 0x34 ]
mov ecx edi
push eax
call sub_47fe32
mov eax [ esi + 0x4 ]
mov ecx edi
add eax 0x3
push eax
mov eax [ esi + 0x8 ]
inc eax
push eax
lea eax [ ebp - 0x5c ]
push eax
call sub_4802bc
mov eax [ esi + 0xc ]
mov ecx edi
inc eax
push eax
mov eax [ esi + 0x8 ]
inc eax
push eax
call sub_480308
mov eax [ esi + 0xc ]
mov ecx edi
inc eax
push eax
mov eax [ esi ]
add eax 0x3
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_4802bc
mov eax [ esi + 0xc ]
mov ecx edi
inc eax
push eax
mov eax [ esi + 0x8 ]
inc eax
push eax
call sub_480308
lea edi [ ebp - 0x74 ]
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ ebp - 0x74 ]
inc [ ebp - 0x70 ]
sub [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
call [ GetStockObject@IAT ]
mov esi [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
push [ esi + 0x4 ]
call [ FillRect@IAT ]
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x20 ]
mov eax [ ebx + 0x114 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebx ]
push [ ebp - 0x10 ]
mov ecx ebx
call [ eax + 0x10c ]
cmp [ ebx + 0xec ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ eax ]
mov ecx [ ebx + 0xf4 ]
mov edi [ ebp - 0x10 ]
mov eax [ eax + 0x5c ]
lea edx [ ecx + edi ]
movzx eax [ eax + 0x1e ]
cmp edx eax
ja r-xdata
lea eax [ ebp - 0x44 ]
mov ecx ebx
push eax
call sub_4825f8
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
neg ecx
neg eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] ecx
mov eax [ ebx + 0xf4 ]
cmp eax 0x1
jbe r-xdata
mov ecx [ ebx + 0x74 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ebx + 0x78 ]
push [ ebp - 0x18 ]
lea ecx [ ebx + 0x78 ]
call [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax [ ebx ]
inc edi
push edi
push ecx
mov ecx ebx
call [ eax + 0x110 ]
mov esi [ ebp - 0x1c ]
mov ecx [ ebx + 0x74 ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_495a41
mov ecx [ ebx + 0x74 ]
lea edx [ ebp - 0x24 ]
push edx
push 0x0
mov eax [ ecx ]
push 0x0
push 0xd
call [ eax + 0x70 ]
mov ecx [ ebx + 0x74 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_4967ba
mov eax [ esi ]
mov esi [ esi + 0x4 ]
add [ ebp - 0x24 ] eax
add [ ebp - 0x20 ] esi
mov eax [ ebp - 0x2c ]
inc [ ebp - 0x24 ]
add [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
inc [ ebp - 0x20 ]
add [ ebp - 0x20 ] eax
push [ ebp - 0x20 ]
mov ecx [ ebx + 0x74 ]
push [ ebp - 0x24 ]
call sub_496722
mov ecx [ ebx + 0x74 ]
call sub_496738
mov ecx [ ebx + 0x70 ]
push [ ebx + 0x114 ]
mov eax [ ecx ]
push [ ebx + 0x74 ]
call [ eax + 0xfc ]
mov ecx [ ebx + 0x74 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ebx + 0x78 ]
push [ ebp - 0x18 ]
lea ecx [ ebx + 0x78 ]
call [ eax + 0x20 ]
add [ ebp - 0x14 ] 0x28
cmp edi [ ebx + 0xf8 ]
mov [ ebp - 0x10 ] edi
jb r-xdata
dec eax
push 0x1
push eax
mov ecx ebx
call sub_494b72
mov edi [ ebp + 0x8 ]
jmp r-xdata
sub_494733
push ebp
mov ebp esp
cmp [ ecx + 0xec ] 0x0
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_482b5b
jmp r-xdata
mov eax [ ecx + 0xf4 ]
push 0x1
dec eax
dec eax
je r-xdata
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0xf4 ]
push 0x1
inc eax
jmp r-xdata
dec eax
je r-xdata
push eax
mov eax [ ecx + 0x114 ]
push 0x1
push 0xa
mov eax [ eax ]
pop esi
mov edx [ eax + 0x5c ]
movzx eax [ edx + 0x1e ]
movzx edx [ edx + 0x1c ]
sub eax edx
xor edx edx
add eax 0x9
div esi
mov edx [ ecx + 0xf4 ]
sub edx eax
push edx
jmp r-xdata
dec eax
je r-xdata
call sub_494b72
mov eax [ ecx + 0x114 ]
push 0x1
push 0xa
mov eax [ eax ]
pop esi
mov edx [ eax + 0x5c ]
movzx eax [ edx + 0x1e ]
movzx edx [ edx + 0x1c ]
sub eax edx
xor edx edx
add eax 0x9
div esi
add eax [ ecx + 0xf4 ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
push [ ebp + 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ecx + 0x114 ]
push 0x1
mov eax [ eax ]
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1c ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ecx + 0x114 ]
push 0x1
mov eax [ eax ]
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1e ]
jmp r-xdata
sub_49481e
push esi
push edi
mov edi ecx
push 0x3
pop eax
sub eax [ edi + 0xf8 ]
lea esi [ edi + 0xf8 ]
mov [ esi ] eax
call sub_4904f9
mov eax [ eax + 0x4 ]
mov ecx [ esi ]
push 0x1
mov [ eax + 0xb4 ] ecx
mov eax [ esi ]
push [ edi + 0xf4 ]
mov ecx edi
mov [ edi + 0xe8 ] eax
call sub_494b72
pop edi
pop esi
retn
sub_4948a0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0xec ] 0x0
push edi
je r-xdata
mov edi [ ebp + 0xc ]
and [ edi ] 0x0
cmp [ ebx + 0xf8 ] 0x0
jbe r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_4825f8
mov ecx eax
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
add [ esi ] eax
add [ esi + 0x4 ] ecx
xor eax eax
mov eax [ edi ]
push [ esi + 0x4 ]
mov ecx [ ebx + 0x90 ]
push [ esi ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 8 ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov edx [ ebx + 0x90 ]
lea ecx [ eax + eax * 4 ]
mov eax [ edx + ecx * 8 ]
mov ecx [ edx + ecx * 8 + 0x4 ]
sub [ esi ] eax
sub [ esi + 0x4 ] ecx
mov eax [ edi ]
mov ecx [ ebx + 0x90 ]
mov edx [ esi ]
lea eax [ eax + eax * 4 ]
push [ ecx + eax * 8 + 0x18 ]
lea eax [ ecx + eax * 8 ]
push [ eax + 0x1c ]
push edx
call [ MulDiv@IAT ]
mov [ esi ] eax
mov edi [ edi ]
mov ecx [ ebx + 0x90 ]
lea eax [ edi + edi * 4 ]
push [ ecx + eax * 8 + 0x18 ]
lea eax [ ecx + eax * 8 ]
push [ eax + 0x1c ]
push [ esi + 0x4 ]
call [ MulDiv@IAT ]
push 0x1
mov [ esi + 0x4 ] eax
pop eax
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
cmp eax [ ebx + 0xf8 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_49496a
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push esi
push eax
lea eax [ ebp + 0xc ]
mov esi ecx
push eax
call sub_4948a0
test eax eax
je r-xdata
pop esi
leave
retn 0xc
mov eax [ esi + 0xec ]
cmp eax 0x2
jne r-xdata
inc eax
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push eax
call sub_4949a8
sub_4949cc
mov eax [ ecx + 0xec ]
cmp eax 0x2
je r-xdata
retn
push esi
xor esi esi
xor edx edx
push esi
push edx
inc eax
push esi
push eax
call sub_4949a8
pop esi
sub_4949e8
mov eax [ ecx + 0xec ]
push esi
xor esi esi
cmp eax esi
je r-xdata
pop esi
retn
xor edx edx
push esi
push edx
dec eax
push esi
push eax
call sub_4949a8
sub_494a03
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0xec ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x90 ]
mov [ esi + 0xf8 ] 0x1
push ebx
lea edi [ ecx + ecx * 4 ]
shl edi 0x3
mov edx [ eax + edi + 0x20 ]
mov [ eax + 0x20 ] edx
mov edx [ eax + edi + 0x24 ]
mov [ eax + 0x24 ] edx
mov eax [ esi + 0x90 ]
mov edx [ eax + edi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ eax + edi + 0x14 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0xf4 ]
add eax ecx
mov ecx esi
push eax
call sub_494b72
push ebx
mov ecx esi
call sub_49412d
mov eax [ esi + 0x90 ]
mov ebx [ MulDiv@IAT ]
push [ edi + eax + 0x1c ]
lea edi [ edi + eax + 0x18 ]
push [ edi ]
push [ ebp + 0xc ]
call ebx
push [ edi + 0x4 ]
mov [ ebp + 0xc ] eax
push [ edi ]
push [ ebp + 0x10 ]
call ebx
mov edx [ esi + 0x90 ]
mov ecx [ edx ]
add [ ebp + 0xc ] ecx
mov ecx esi
mov edx [ edx + 0x4 ]
add eax edx
push eax
push [ ebp + 0xc ]
call sub_4826eb
mov eax [ esi + 0xe8 ]
mov edi [ ShowScrollBar@IAT ]
push ebx
push ebx
push [ esi + 0x1c ]
mov [ esi + 0xf8 ] eax
call edi
mov eax [ esi + 0x114 ]
mov eax [ eax ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1e ]
cmp cx 0x8000
jae r-xdata
mov [ ebp + 0x8 ] ebx
movzx eax [ eax + 0x1c ]
movzx ecx cx
sub ecx eax
mov [ ebp + 0x8 ] 0x1
cmp ecx 0x7fff
jbe r-xdata
push 0x1
mov ecx esi
push [ esi + 0xf4 ]
call sub_494b72
jmp r-xdata
mov eax [ esi + 0x114 ]
mov [ ebp - 0x18 ] 0x3
push 0x1
mov ecx [ eax ]
pop edi
push ebx
mov ecx [ ecx + 0x5c ]
movzx ecx [ ecx + 0x1c ]
mov [ ebp - 0x14 ] ecx
mov eax [ eax ]
mov ecx esi
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1e ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push edi
mov [ ebp - 0xc ] edi
call sub_47a67d
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push 0x1
push [ esi + 0x1c ]
call edi
cmp [ ebp + 0x8 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push ebx
mov ecx esi
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push edi
call sub_47a5d7
sub_494b72
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov eax [ esi + 0x114 ]
mov [ esi + 0xf4 ] edx
mov ecx [ eax ]
mov ecx [ ecx + 0x5c ]
movzx ecx [ ecx + 0x1e ]
cmp edx ecx
jbe r-xdata
mov eax [ eax ]
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1c ]
cmp [ esi + 0xf4 ] eax
jae r-xdata
mov [ esi + 0xf4 ] ecx
xor edi edi
cmp [ esi + 0xec ] edi
jne r-xdata
mov [ esi + 0xf4 ] eax
cmp [ esp + 0x10 ] edi
je r-xdata
push 0x1
mov ecx esi
push [ esi + 0xf4 ]
push 0x1
call sub_47a57f
push 0x1
push edi
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
pop edi
pop esi
retn 0x8
lea eax [ esi + 0xf0 ]
xor ecx ecx
cmp [ eax ] edi
jbe r-xdata
push ebx
xor edx edx
mov ebx [ esi + 0x90 ]
inc ecx
mov [ ebx + edx + 0x18 ] edi
add edx 0x28
cmp ecx [ eax ]
jb r-xdata
pop ebx
sub_494c04
mov eax sub_49b7d8
call sub_469294
sub esp 0x54
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
lea eax [ ebx + edi - 0x1 ]
mov [ ebp + 0xc ] eax
call sub_47ccf5
mov eax [ eax + 0x1c ]
mov [ ebp - 0x10 ] eax
xor eax eax
cmp edi 0x1
setne al
mov edi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x114 ]
and [ ebp - 0x4 ] 0x0
push 0xa
push edi
mov eax [ eax + 0x1c ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_47e8f5
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test edi edi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x60 ]
push ebx
push [ ebp + 0x8 ]
push eax
call [ wsprintfA@IAT ]
add esp 0x10
push ebx
lea eax [ ebp - 0x60 ]
push [ ebp + 0x8 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x10 ]
push 0x0
push 0x362
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
sub_494cbd
mov eax sub_49b7ec
call sub_469294
push ecx
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov eax [ esi + 0xe8 ]
mov eax [ esi + 0xf8 ]
jmp r-xdata
xor eax eax
push 0x1
pop eax
cmp [ esi + 0xf0 ] eax
je r-xdata
dec eax
lea ecx [ ebp - 0x10 ]
neg eax
sbb eax eax
add eax 0xf042
push eax
call sub_47e84a
mov edi [ ebp + 0x8 ]
push [ ebp - 0x10 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0xc ]
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov ecx [ esi + 0x114 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0x5c ]
cmp [ ecx + 0x1e ] ax
ja r-xdata
mov edx [ edi ]
push eax
mov ecx edi
call [ edx ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ esi + 0xf8 ] eax
ja r-xdata
sub_494d61
mov eax ecx
push esi
push edi
mov ecx [ esp + 0xc ]
mov esi [ eax + 0xf8 ]
mov edi [ eax + 0xf4 ]
mov eax [ eax + 0x114 ]
mov edx [ ecx ]
lea esi [ esi + edi - 0x1 ]
mov eax [ eax ]
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1e ]
cmp esi eax
sbb eax eax
neg eax
push eax
call [ edx ]
pop edi
pop esi
retn 0x4
sub_494d98
mov eax ecx
push esi
mov ecx [ esp + 0x8 ]
mov esi [ eax + 0x114 ]
mov edx [ ecx ]
mov esi [ esi ]
mov esi [ esi + 0x5c ]
movzx esi [ esi + 0x1c ]
cmp esi [ eax + 0xf4 ]
sbb eax eax
neg eax
push eax
call [ edx ]
pop esi
retn 0x4
sub_494df8
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x1
push esi
mov esi ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x1c ]
call [ ScreenToClient@IAT ]
cmp [ esi + 0xec ] 0x2
je r-xdata
call sub_478ca1
jmp r-xdata
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
lea eax [ ebp + 0xc ]
mov ecx esi
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4948a0
test eax eax
je r-xdata
pop esi
leave
retn 0xc
add esi 0x100
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
jmp r-xdata
call sub_4904f9
mov eax [ eax + 0xc ]
push 0x7902
push eax
call [ LoadCursorA@IAT ]
mov [ esi ] eax
call [ SetCursor@IAT ]
xor eax eax
sub_494e80
sub esp 0x1c
mov ecx rw-data
push esi
push edi
push sub_48fce5
call sub_493013
mov esi eax
xor edi edi
xor eax eax
cmp [ esi + 0xc ] edi
sete al
push edi
push edi
push edi
lea eax [ esp + 0x14 ]
push edi
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
call sub_47ccf5
mov edx [ eax ]
mov ecx eax
call [ edx + 0x5c ]
test eax eax
jne r-xdata
cmp [ esi + 0xc ] edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
add esp 0x1c
retn 0x8
sub_494ed2
push esi
mov esi ecx
call sub_4904f9
push [ eax + 0x10 ]
mov ecx esi
call sub_47bc7c
push 0x0
mov ecx esi
call sub_47b186
mov ecx esi
call sub_4786a4
pop esi
retn
sub_494f18
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1c ]
cmp cx [ eax + 0x1e ]
jbe r-xdata
call sub_4904f9
mov edi [ eax + 0x4 ]
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov [ eax + 0x1e ] cx
mov eax [ esi ]
mov eax [ eax + 0x5c ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1c ]
mov [ eax + 0x18 ] cx
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1e ]
mov [ eax + 0x1a ] cx
push eax
mov ecx edi
call sub_493750
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov eax [ edi + 0xb4 ]
push 0xf044
lea ecx [ esi + 0x1c ]
mov [ esi + 0x18 ] eax
call sub_47e84a
push 0x1
pop eax
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x5c ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1c ]
mov [ eax + 0x18 ] cx
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1e ]
mov [ eax + 0x1a ] cx
push [ esi ]
mov ecx edi
call sub_4939ad
cmp eax 0x1
je r-xdata
test [ esi + 0x38 ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
call sub_476345
test eax eax
je r-xdata
push [ esi ]
mov ecx edi
call sub_4939ad
cmp eax 0x1
jne r-xdata
test [ esi + 0x38 ] 0x1
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x5c ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
jmp r-xdata
sub_495004
mov eax sub_49b98c
call sub_469294
sub esp 0x32c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x24 ] edi
call sub_4956ed
xor ebx ebx
mov [ ebp - 0x4 ] ebx
call sub_478c6c
cmp [ eax + 0x8 ] 0xe108
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
mov ecx edi
call [ eax + 0xf4 ]
test eax eax
je r-xdata
call sub_4904f9
mov eax [ eax + 0x4 ]
mov eax [ eax + 0xac ]
cmp eax ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x80 ]
call sub_495775
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ rw-data ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x5c ]
test [ eax + 0x14 ] 0x20
je r-xdata
mov [ ebp - 0x74 ] 0x1
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] 0xa
cmp eax ebx
je r-xdata
cmp [ ebp - 0x7c ] ebx
jne r-xdata
mov ecx [ eax + 0x20 ]
mov edx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
push ebx
push ecx
push edx
push eax
call [ CreateDCA@IAT ]
mov ecx [ ebp - 0x80 ]
mov ecx [ ecx + 0x5c ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x5c ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
call sub_47a2e8
mov ecx eax
call sub_4796e8
add eax 0x1c
lea ecx [ ebp - 0x14 ]
push eax
call sub_47c761
jmp r-xdata
push 0xf045
lea ecx [ ebp - 0x1c ]
call sub_47c6e2
push 0xf046
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_47c6e2
push 0xf047
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x3
call sub_47c6e2
push 0xf048
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x4
call sub_47c6e2
push ebx
lea ecx [ ebp - 0x338 ]
push [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x5
push 0x6
push [ ebp - 0x40 ]
push [ ebp - 0x1c ]
push ebx
call sub_475893
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x338 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x2ac ] eax
call sub_4759f5
cmp eax 0x1
je r-xdata
push 0xffffffff
push ebx
push 0xf106
call sub_4840fb
jmp r-xdata
push 0x14
lea eax [ ebp - 0x94 ]
pop esi
push esi
push ebx
push eax
call sub_467a10
mov eax [ ebp - 0x14 ]
add esp 0xc
mov [ ebp - 0x90 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x94 ] esi
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0xb
cmp [ eax - 0x8 ] ebx
jne r-xdata
push 0x1f
lea ecx [ ebp - 0x14 ]
call sub_47caa7
mov eax [ ebp - 0x14 ]
mov eax [ eax - 0x8 ]
cmp eax 0x1f
jle r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x338 ]
push eax
call sub_475ad0
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x8
call sub_47c761
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
call sub_47c674
lea ecx [ ebp - 0x28c ]
mov [ ebp - 0x4 ] 0x9
call sub_47c674
lea ecx [ ebp - 0x338 ]
mov [ ebp - 0x4 ] 0x5
call sub_47801b
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x4
call sub_47c674
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x3
call sub_47c674
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_47c674
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_47c674
lea ecx [ ebp - 0x28c ]
mov [ ebp - 0x4 ] 0x7
call sub_47c674
lea ecx [ ebp - 0x338 ]
mov [ ebp - 0x4 ] 0x5
call sub_47801b
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x4
call sub_47c674
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x3
call sub_47c674
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ebp - 0x8c ] eax
mov esi eax
mov eax 0x104
lea ecx [ ebp - 0x38 ]
push eax
push eax
call sub_47ca58
push eax
push esi
call sub_47df08
mov esi 0xf049
mov ecx [ ebp - 0x80 ]
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x8c ] ebx
call sub_4763df
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0xc
call sub_47c761
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xb
call sub_47c674
mov esi 0xf040
jmp r-xdata
call sub_47c674
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] bl
call sub_47c674
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xf8 ]
cmp [ ebp - 0x7c ] ebx
jne r-xdata
mov eax [ ebp - 0x80 ]
lea ecx [ ebp - 0x34 ]
mov eax [ eax + 0x5c ]
push [ eax + 0x10 ]
call sub_47fc9e
mov [ ebp - 0x28 ] 0x1
lea ecx [ ebp - 0x34 ]
call sub_47fbe7
cmp [ ebp - 0x7c ] ebx
mov [ ebp - 0x4 ] 0xd
jne r-xdata
push ebx
call sub_402850
mov ecx eax
call sub_47bde8
push edi
lea ecx [ ebp - 0xf0 ]
call sub_495673
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
push [ ebp - 0x14 ]
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xf
push 0xc9
call sub_47bb84
mov ecx [ ebp - 0x80 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4763a1
push [ eax ]
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x10
push 0xca
call sub_47bb84
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xf
call sub_47c674
push [ ebp - 0x38 ]
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_488acb
push [ ebp - 0x20 ]
lea ecx [ ebp - 0xf0 ]
push 0xcb
call sub_47bb84
push 0x5
lea ecx [ ebp - 0xf0 ]
call sub_47bda6
push [ ebp - 0xd4 ]
call [ UpdateWindow@IAT ]
cmp [ ebp - 0x7c ] ebx
jne r-xdata
push sub_494e80
push [ ebp - 0x30 ]
call [ SetAbortProc@IAT ]
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x5c ]
movzx edx [ eax + 0x1a ]
movzx ecx [ eax + 0x1c ]
movzx esi [ eax + 0x18 ]
cmp edx ecx
mov [ ebp - 0x10 ] edx
jae r-xdata
lea eax [ ebp - 0x94 ]
push eax
push [ ebp - 0x30 ]
call [ StartDocA@IAT ]
cmp eax 0xffffffff
jne r-xdata
movzx eax [ eax + 0x1e ]
cmp [ ebp - 0x10 ] eax
jbe r-xdata
mov [ ebp - 0x10 ] ecx
push 0x1
call sub_402850
mov ecx eax
call sub_47bde8
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x100 ]
lea ecx [ ebp - 0xf0 ]
call sub_479569
lea ecx [ ebp - 0x34 ]
call sub_47fcd5
push 0xffffffff
push ebx
push 0xf106
call sub_4840fb
jmp r-xdata
cmp esi ecx
jae r-xdata
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xe
call sub_47c674
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xd
mov [ ebp - 0xf0 ] r--data
call sub_47801b
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0xb
call sub_47fd1c
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0xa
call sub_47c674
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
cmp esi eax
jbe r-xdata
mov esi ecx
cmp [ ebp - 0x10 ] esi
mov ecx 0xffff
sbb eax eax
and al 0xfe
inc eax
cmp [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
mov esi eax
add [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp esi [ ebp - 0x10 ]
mov [ ebp - 0x6c ] esi
je r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xdc ]
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xfc ]
jmp r-xdata
push 0xf043
lea ecx [ ebp - 0x20 ]
call sub_47e84a
cmp [ ebp - 0x7c ] ebx
mov [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x30 ]
call [ EndDoc@IAT ]
jmp r-xdata
mov esi [ GetDeviceCaps@IAT ]
cmp [ ebp - 0x7c ] ebx
jne r-xdata
push 0x1
call sub_402850
mov ecx eax
call sub_47bde8
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x100 ]
lea ecx [ ebp - 0xf0 ]
call sub_479569
lea ecx [ ebp - 0x34 ]
call sub_47fcd5
push [ ebp - 0x6c ]
lea eax [ ebp - 0x140 ]
push [ ebp - 0x20 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x140 ]
lea ecx [ ebp - 0xf0 ]
push eax
push 0xcc
call sub_47bb84
push 0xa
push [ ebp - 0x2c ]
call esi
push 0x8
mov edi eax
push [ ebp - 0x2c ]
call esi
push edi
push eax
push ebx
lea eax [ ebp - 0x5c ]
push ebx
push eax
call [ SetRect@IAT ]
lea eax [ ebp - 0x5c ]
push 0x2
push eax
push [ ebp - 0x2c ]
call [ DPtoLP@IAT ]
push [ ebp - 0x30 ]
call [ StartPage@IAT ]
cmp eax ebx
jl r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov edi [ ebp - 0x24 ]
mov [ ebp - 0x1c ] 0x1
cmp [ rw-data ] ebx
mov edi [ ebp - 0x24 ]
je r-xdata
push [ ebp - 0x30 ]
call [ AbortDoc@IAT ]
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xfc ]
push [ ebp - 0x30 ]
call [ EndPage@IAT ]
cmp eax ebx
jl r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xdc ]
push ebx
push [ ebp - 0x30 ]
call sub_494e80
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x24 ]
add [ ebp - 0x6c ] eax
mov eax [ ebp - 0x6c ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xdc ]
cmp [ ebp - 0x70 ] ebx
je r-xdata
jmp r-xdata
sub_495673
mov eax sub_49b9a0
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_477fdd
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
mov [ esi ] r--data
push 0x7802
call sub_478059
push sub_48fce5
mov ecx rw-data
call sub_493013
and [ eax + 0xc ] 0x0
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4956ed
mov eax sub_49b9c0
call sub_469294
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi + 0x1c ] eax
xor edi edi
push 0xa4
mov [ ebp - 0x4 ] edi
call sub_47c3b5
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
push 0x1
cmp ecx edi
pop ebx
mov [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
push edi
push 0x40004
push edi
call sub_4761aa
jmp r-xdata
mov [ esi ] eax
mov eax [ eax + 0x5c ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x1c ] bx
mov eax [ esi ]
mov eax [ eax + 0x5c ]
or [ eax + 0x1e ] 0xffff
mov [ esi + 0x20 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_495775
mov eax sub_49b9d7
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x1c ]
call sub_47c674
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
push eax
call [ DeleteDC@IAT ]
mov eax [ esi ]
mov eax [ eax + 0x5c ]
and [ eax + 0x10 ] 0x0
sub_4957d0
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
imul [ ebp + 0x10 ]
push esi
push edi
mov edi eax
mov eax [ ebp + 0x14 ]
mov ecx edx
imul [ ebp + 0x18 ]
test ecx ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi edx
jg r-xdata
mov eax edi
mov edx ecx
jl r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
push 0x1
pop ecx
call sub_46a870
inc edi
jmp r-xdata
mov eax edi
mov edx ecx
neg eax
adc edx 0x0
neg edx
jmp r-xdata
test edi edi
jae r-xdata
and [ ebp + 0xc ] 0x0
cdq
neg eax
mov ecx eax
or ecx edx
je r-xdata
xor edi edi
add edi [ ebp + 0xc ]
test esi esi
jg r-xdata
push 0x1
pop ecx
call sub_46a870
inc [ ebp + 0xc ]
jmp r-xdata
mov eax edi
dec edi
cmp eax 0x1f
jle r-xdata
jl r-xdata
mov ecx eax
or ecx edx
je r-xdata
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cdq
push [ ebp - 0x8 ]
push edx
push eax
call sub_468a80
mov ecx ebx
mov [ ebp - 0x8 ] eax
or ecx esi
mov edi edx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
push 0x1
pop ecx
call sub_46a870
push 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
pop ecx
mov eax ebx
mov edx esi
call sub_46a870
mov ebx eax
mov eax edi
dec edi
cmp eax 0x1f
mov esi edx
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg ebx
adc esi 0x0
neg esi
neg eax
adc ecx 0x0
mov [ ebp - 0x8 ] eax
neg ecx
mov [ ebp - 0x4 ] ecx
test ebx ebx
jae r-xdata
push 0x0
push 0x2
push esi
push ebx
call sub_46a7c0
add eax [ ebp - 0x8 ]
push esi
push ebx
adc edx edi
push edx
push eax
call sub_46a7c0
test edi edi
jg r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
push 0x1
pop ecx
call sub_46a870
push 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
pop ecx
mov eax ebx
mov edx esi
call sub_46a870
mov ebx eax
mov eax edi
dec edi
cmp eax 0x1f
mov esi edx
jle r-xdata
mov eax 0x7fffffff
jmp r-xdata
jl r-xdata
sar [ ebp + 0x8 ] 0x1
push 0x1
mov eax ebx
pop ecx
call sub_46a870
mov ebx eax
mov esi edx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax 0x80000000
jmp r-xdata
test eax eax
jae r-xdata
sub_49592f
push esi
mov esi ecx
call sub_47fbe7
push 0x1
and [ esi + 0x2c ] 0x0
and [ esi + 0x28 ] 0x0
pop eax
push 0x8
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
pop eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x20 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_495977
push esi
mov esi ecx
push [ esp + 0x8 ]
call [ SaveDC@IAT ]
push [ esp + 0x8 ]
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_47fd5c
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop esi
retn 0x4
push 0x0
mov ecx esi
call sub_4965b3
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx esi
call sub_495c48
push eax
push [ esi + 0x4 ]
call [ SelectObject@IAT ]
jmp r-xdata
mov ecx esi
call sub_495afe
sub_4959de
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_47fd52
push 0x1
mov ecx esi
call sub_4965b3
mov ecx esi
call sub_495c48
mov ecx esi
call sub_495afe
pop esi
retn 0x4
sub_495a05
mov eax sub_49bc64
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x28 ]
push eax
call sub_483088
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47fd1c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_495a41
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x14 ] eax
je r-xdata
pop esi
retn 0x8
push 0x1
call sub_4965b3
mov ecx esi
call sub_495c48
sub_495a6a
push ebx
mov ebx [ SaveDC@IAT ]
push ebp
push esi
mov esi ecx
push [ esi + 0x8 ]
call ebx
cmp [ esi + 0x4 ] 0x0
mov ebp eax
je r-xdata
mov [ esi + 0x1c ] 0x7fff
push edi
push 0xd
call [ GetStockObject@IAT ]
mov edi [ SelectObject@IAT ]
push eax
push [ esi + 0x4 ]
call edi
push [ esi + 0x4 ]
call ebx
push [ esi + 0x28 ]
sub eax ebp
mov [ esi + 0x1c ] eax
push [ esi + 0x4 ]
call edi
pop edi
jmp r-xdata
mov eax ebp
pop esi
pop ebp
pop ebx
retn
sub_495ab9
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ RestoreDC@IAT ]
mov esi ecx
push ebp
push [ esi + 0x8 ]
call edi
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x1c ]
cmp eax 0x7fff
je r-xdata
cmp ebp 0xffffffff
je r-xdata
push ebp
push [ esi + 0x4 ]
call edi
mov ecx esi
mov ebx eax
call sub_495c48
add ebp eax
sub_495afe
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
push ebx
mov ebx [ GetStockObject@IAT ]
push ebp
push edi
push 0x7
call ebx
mov edi [ SelectObject@IAT ]
push eax
push [ esi + 0x8 ]
call edi
mov ebp eax
push ebp
push [ esi + 0x8 ]
call edi
push ebp
push [ esi + 0x4 ]
call edi
push 0x4
call ebx
push eax
push [ esi + 0x8 ]
call edi
mov ebx eax
push ebx
push [ esi + 0x8 ]
call edi
push ebx
push [ esi + 0x4 ]
call edi
push [ esi + 0x8 ]
call [ GetROP2@IAT ]
push eax
mov ecx esi
call sub_47ff03
push [ esi + 0x8 ]
call [ GetBkMode@IAT ]
push eax
mov ecx esi
call sub_47fea7
push [ esi + 0x8 ]
call [ GetTextAlign@IAT ]
push eax
mov ecx esi
call sub_48033d
push [ esi + 0x8 ]
call [ GetPolyFillMode@IAT ]
push eax
mov ecx esi
call sub_47fed5
push [ esi + 0x8 ]
call [ GetStretchBltMode@IAT ]
push eax
mov ecx esi
call sub_47ff31
push [ esi + 0x8 ]
call [ GetTextColor@IAT ]
mov edi [ GetNearestColor@IAT ]
push eax
push [ esi + 0x8 ]
call edi
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x30 ]
push [ esi + 0x8 ]
call [ GetBkColor@IAT ]
push eax
push [ esi + 0x8 ]
call edi
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x2c ]
pop edi
pop ebp
pop ebx
sub_495bd8
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
call [ GetStockObject@IAT ]
cmp ebx 0xa
mov edi eax
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ SelectObject@IAT ]
test eax eax
je r-xdata
cmp ebx 0xe
jle r-xdata
push edi
push [ esi + 0x8 ]
call ebx
push eax
call sub_4806f9
push edi
push eax
call ebx
push edi
push [ esi + 0x8 ]
call [ SelectObject@IAT ]
push eax
call sub_4806f9
cmp [ esi + 0x2c ] edi
mov ebx eax
jne r-xdata
cmp ebx 0xf
jle r-xdata
mov ecx esi
mov [ esi + 0x2c ] edi
call sub_495c48
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp ebx 0x11
jg r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_495c48
push ebp
mov ebp esp
sub esp 0x90
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ esi ]
push 0xe
call [ eax + 0x24 ]
jmp r-xdata
push ebx
lea ecx [ ebp - 0x58 ]
push edi
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
lea eax [ ebp - 0x3c ]
push eax
push 0x20
push [ esi + 0x8 ]
call [ GetTextFaceA@IAT ]
mov edi [ GetTextMetricsA@IAT ]
lea eax [ ebp - 0x90 ]
push eax
push [ esi + 0x8 ]
call edi
mov eax [ ebp - 0x90 ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x84 ]
sub ecx eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x58 ] eax
jmp r-xdata
sub eax [ ebp - 0x84 ]
neg eax
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ebx [ CreateFontIndirectA@IAT ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x48 ] eax
mov al [ ebp - 0x60 ]
mov [ ebp - 0x44 ] al
mov al [ ebp - 0x5f ]
mov [ ebp - 0x43 ] al
mov al [ ebp - 0x5e ]
mov [ ebp - 0x42 ] al
mov al [ ebp - 0x5c ]
mov [ ebp - 0x41 ] al
mov al [ ebp - 0x5d ]
mov [ ebp - 0x3d ] al
lea eax [ ebp - 0x58 ]
push eax
call ebx
push eax
mov [ ebp - 0x18 ] eax
push [ esi + 0x4 ]
call [ SelectObject@IAT ]
lea eax [ ebp - 0x90 ]
push eax
push [ esi + 0x4 ]
call edi
mov edi [ ebp - 0x58 ]
mov eax [ ebp - 0x90 ]
neg edi
test eax eax
jge r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
neg eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x4 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x4 ]
call [ GetViewportExtEx@IAT ]
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push edi
mov edi [ MulDiv@IAT ]
call edi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call edi
cmp [ ebp - 0x1c ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
neg eax
mov [ ebp - 0x10 ] eax
mov edi [ ebp - 0x18 ]
mov al [ ebp - 0x3d ]
and [ ebp - 0x3c ] 0x0
and al 0xf0
cmp al 0x50
setne al
dec eax
and eax 0x50
mov [ ebp - 0x3d ] al
lea eax [ ebp - 0x58 ]
push eax
call ebx
mov edi eax
push edi
push [ esi + 0x4 ]
call [ SelectObject@IAT ]
push [ ebp - 0x18 ]
call [ DeleteObject@IAT ]
jmp r-xdata
add esi 0x28
push esi
call sub_483088
mov [ esi ] edi
pop edi
pop ebx
sub_495dcd
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push ebx
push [ edi + 0x4 ]
push [ esi + 0x8 ]
call [ SelectObject@IAT ]
push eax
call sub_4806f9
mov ebx eax
mov eax [ edi + 0x4 ]
cmp [ esi + 0x2c ] eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
pop ebx
mov ecx esi
mov [ esi + 0x2c ] eax
call sub_495c48
pop edi
pop esi
retn 0x4
sub_495e0c
push esi
mov esi ecx
push edi
mov edi [ SetBkColor@IAT ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
push [ esp + 0xc ]
push [ esi + 0x8 ]
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push [ esi + 0x8 ]
call [ GetNearestColor@IAT ]
push eax
push [ esi + 0x4 ]
call edi
sub_495e3d
push esi
mov esi ecx
push edi
mov edi [ SetTextColor@IAT ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
push [ esp + 0xc ]
push [ esi + 0x8 ]
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push [ esi + 0x8 ]
call [ GetNearestColor@IAT ]
push eax
push [ esi + 0x4 ]
call edi
sub_495e6e
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
push [ esi + 0x8 ]
call [ SetMapMode@IAT ]
push 0x1
mov ecx esi
mov edi eax
call sub_4965b3
mov eax edi
pop edi
pop esi
retn 0x4
sub_495e91
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ SetViewportOrgEx@IAT ]
mov ecx esi
call sub_4966b8
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_495ec6
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ OffsetViewportOrgEx@IAT ]
mov ecx esi
call sub_4966b8
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_495efb
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ SetViewportExtEx@IAT ]
push 0x1
mov ecx esi
call sub_4965b3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_495f32
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ ScaleViewportExtEx@IAT ]
push 0x1
mov ecx esi
call sub_4965b3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
sub_495f6f
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ SetWindowExtEx@IAT ]
push 0x1
mov ecx esi
call sub_4965b3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_495fa6
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ ScaleWindowExtEx@IAT ]
push 0x1
mov ecx esi
call sub_4965b3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
sub_495fe3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
sub eax [ ebp + 0x14 ]
cmp [ ebp + 0xc ] edx
jbe r-xdata
cdq
idiv [ ebp + 0x18 ]
inc eax
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
jmp r-xdata
inc edx
add ecx 0x4
cmp edx [ ebp + 0xc ]
jb r-xdata
add eax [ ebp + 0x14 ]
pop ebp
retn 0x14
cmp [ ecx ] eax
jg r-xdata
sub_496017
push ebp
mov ebp esp
sub esp 0xac
push esi
mov esi [ GetTextMetricsA@IAT ]
push edi
lea eax [ ebp - 0x74 ]
mov edi ecx
push eax
push [ edi + 0x8 ]
call esi
lea eax [ ebp - 0xac ]
push eax
push [ edi + 0x4 ]
call esi
lea eax [ ebp - 0x2c ]
push eax
push 0x1
push r--data
push [ edi + 0x8 ]
call [ GetTextExtentPoint32A@IAT ]
push [ edi + 0x8 ]
call [ GetTextAlign@IAT ]
mov [ ebp - 0x24 ] eax
and eax 0x1
mov [ ebp - 0x20 ] eax
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x34 ]
push eax
push [ edi + 0x4 ]
call [ GetCurrentPositionEx@IAT ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x34 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] edx
cmp [ eax ] edx
jbe r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov eax [ ecx ]
mov esi [ ebp + 0x2c ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov [ ebp - 0x18 ] ebx
cmp [ ebp + 0x18 ] edx
mov [ ebp - 0x1c ] eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x24 ]
sub eax [ ecx ]
and edx 0x6
pop ebx
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
and [ eax ] 0x0
test edx edx
jne r-xdata
jmp r-xdata
push edx
push edx
push 0x1
push r--data
push [ edi + 0x8 ]
call [ GetTabbedTextExtentA@IAT ]
mov ecx [ ebp + 0xc ]
xor edx edx
movzx eax ax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp edx 0x6
jne r-xdata
mov eax [ ebp - 0x8 ]
mov al [ ebx ]
xor ecx ecx
cmp al [ ebp - 0x45 ]
sete cl
cmp ecx edx
mov [ ebp - 0x14 ] ecx
jne r-xdata
cmp edx 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x18 ]
add eax ebx
push eax
push [ ebp - 0x18 ]
push [ edi + 0x8 ]
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x54 ]
add eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] edx
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
add [ ecx ] eax
jmp r-xdata
sub esi [ ebp + 0x2c ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x2c ]
pop edi
sar esi 0x2
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x2c
push 0x0
push [ ebp - 0x30 ]
push [ ecx ]
push [ edi + 0x4 ]
call [ MoveToEx@IAT ]
cmp esi [ ebp + 0x2c ]
mov ecx eax
jne r-xdata
push [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
call sub_495fe3
movzx eax al
test [ eax + rw-data ] 0x4
je r-xdata
cmp al 0x9
je r-xdata
sub ecx [ ebp + 0x10 ]
add [ esi - 0x4 ] ecx
sub ecx [ ebp + 0x10 ]
add [ ebp - 0x8 ] ecx
jmp r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push eax
push eax
push [ edi + 0x4 ]
call [ GetCharWidthA@IAT ]
movzx eax [ ebx ]
push esi
push eax
push eax
push [ edi + 0x8 ]
call [ GetCharWidthA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x98 ]
mov [ esi ] eax
jmp r-xdata
xor edx edx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x1c ] eax
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x60 ]
mov [ esi ] eax
mov eax [ ebp - 0x54 ]
sub edx [ ebp - 0x8c ]
sub [ esi ] eax
mov eax [ esi ]
add [ ebp + 0x10 ] eax
cmp esi [ ebp + 0x2c ]
mov [ ebp - 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x28 ]
mov al [ ebx ]
inc [ ebp + 0x28 ]
mov [ ecx ] al
movzx eax [ ebx ]
test [ eax + rw-data ] 0x4
je r-xdata
mov ecx eax
sub eax edx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
add [ esi - 0x4 ] eax
mov [ esi ] ecx
add esi 0x4
jmp r-xdata
mov ecx [ ebp + 0x28 ]
mov al [ ebx + 0x1 ]
inc [ ebp + 0x28 ]
mov [ ecx ] al
mov eax [ esi ]
add [ ebp + 0x10 ] eax
add esi 0x4
inc [ ebp - 0x4 ]
mov [ esi ] eax
push ebx
call sub_469916
inc [ ebp - 0x4 ]
pop ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
mov eax [ ebp + 0x14 ]
cmp ecx [ eax ]
jb r-xdata
sub_4962a2
mov eax sub_49bc70
call sub_469294
sub esp 0x20
mov eax [ ebp + 0x20 ]
push ebx
push esi
xor esi esi
push edi
xor ebx ebx
cmp eax esi
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] esi
jne r-xdata
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call [ ExtTextOutA@IAT ]
cmp [ ebp - 0x18 ] esi
mov [ ebp + 0x18 ] eax
je r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
push [ ebp - 0x14 ]
call sub_47c3de
push ebx
call sub_47c3de
mov eax [ ebp + 0x18 ]
pop ecx
pop ecx
cmp eax esi
je r-xdata
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] esi
shl eax 0x2
push eax
call sub_47c3b5
pop ecx
mov [ ebp - 0x14 ] eax
push [ ebp + 0x1c ]
call sub_47c3b5
mov ebx eax
pop ecx
lea eax [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push eax
lea eax [ ebp + 0x1c ]
push [ ebp - 0x14 ]
mov ecx edi
push ebx
push esi
push esi
push esi
push esi
push eax
push [ ebp + 0x18 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_496017
mov eax [ ebp - 0x14 ]
mov [ ebp + 0x18 ] ebx
push 0x1
pop eax
jmp r-xdata
push [ edi + 0x8 ]
call [ GetTextAlign@IAT ]
test al 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x1c
lea eax [ ebp - 0x20 ]
push eax
push [ edi + 0x4 ]
call [ GetCurrentPositionEx@IAT ]
mov eax [ ebp - 0x20 ]
push [ ebp - 0x1c ]
sub eax [ ebp - 0x18 ]
mov ecx edi
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_4802bc
sub_4963ad
mov eax sub_49bc7c
call sub_469294
sub esp 0x28
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x18 ]
xor ecx ecx
cmp edi ecx
mov [ ebp - 0x10 ] esp
jg r-xdata
mov eax edi
mov [ ebp + 0x18 ] ecx
shl eax 0x2
push eax
mov [ ebp - 0x4 ] ecx
call sub_47c3b5
pop ecx
mov [ ebp + 0x18 ] eax
push edi
call sub_47c3b5
pop ecx
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x20 ]
or [ ebp - 0x4 ] 0xffffffff
push ecx
mov ecx esi
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] edi
push eax
lea eax [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_496017
push [ ebp + 0x18 ]
mov edi [ eax ]
mov ecx esi
push [ ebp - 0x14 ]
mov ebx [ eax + 0x4 ]
mov eax [ esi ]
push [ ebp - 0x18 ]
push 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x60 ]
push [ ebp + 0x18 ]
mov [ ebp + 0x24 ] eax
call sub_47c3de
push [ ebp - 0x18 ]
call sub_47c3de
cmp [ ebp + 0x24 ] 0x0
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
jmp r-xdata
push [ esi + 0x8 ]
call [ GetTextAlign@IAT ]
test al 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x20
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x4 ]
call [ GetCurrentPositionEx@IAT ]
mov eax [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov ecx esi
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4802bc
sub_4964c7
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0x14 ]
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ DrawTextA@IAT ]
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x4 ]
call [ GetCurrentPositionEx@IAT ]
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call [ MoveToEx@IAT ]
mov eax edi
pop edi
pop esi
leave
retn 0x10
sub_496525
mov eax [ esp + 0x4 ]
cmp eax 0x23
jg r-xdata
cmp eax 0x100
jl r-xdata
cmp eax 0x22
jge r-xdata
xor eax eax
cmp eax 0x103
jle r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
push [ ecx + 0x8 ]
call [ Escape@IAT ]
jmp r-xdata
cmp eax 0x12
jg r-xdata
cmp eax 0x2ff
jle r-xdata
retn 0x10
cmp eax 0x14
jl r-xdata
cmp eax 0x10
jge r-xdata
cmp eax 0x304
jle r-xdata
cmp eax 0x18
jle r-xdata
cmp eax 0x3
jl r-xdata
cmp eax 0x1007
je r-xdata
cmp eax 0x19
jle r-xdata
cmp eax 0x8
jle r-xdata
cmp eax 0x1008
jle r-xdata
cmp eax 0x20
cmp eax 0xb
jle r-xdata
cmp eax 0x100a
jg r-xdata
cmp eax 0xe
jmp r-xdata
jle r-xdata
sub_4965b3
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push ebx
lea ebx [ esi + 0x38 ]
push edi
push ebx
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
mov eax 0xffffc000
cmp [ edi ] eax
jle r-xdata
pop esi
retn 0x4
push 0x8
push eax
call [ SetMapMode@IAT ]
push 0x0
push [ esi + 0x34 ]
push [ esi + 0x30 ]
push [ esi + 0x4 ]
call [ SetWindowExtEx@IAT ]
push 0x0
push [ esi + 0x3c ]
push [ esi + 0x38 ]
push [ esi + 0x4 ]
call [ SetViewportExtEx@IAT ]
mov ecx esi
call sub_4966b8
cmp [ esi + 0x34 ] eax
jle r-xdata
mov ecx [ edi ]
cmp ecx 0x4000
jge r-xdata
mov edi [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call edi
push eax
push [ esi + 0x14 ]
push [ rw-data ]
push [ esi + 0x10 ]
push [ ebx ]
call sub_4957d0
push 0x5a
mov [ ebx ] eax
push [ esi + 0x8 ]
call edi
push eax
push [ esi + 0x14 ]
push [ rw-data ]
push [ esi + 0x10 ]
push [ esi + 0x3c ]
call sub_4957d0
pop edi
mov [ esi + 0x3c ] eax
pop ebx
mov ecx [ esi + 0x34 ]
cmp ecx 0x4000
jge r-xdata
mov edx [ ebx ]
cmp edx eax
jle r-xdata
mov edx [ esi + 0x3c ]
cmp edx eax
jle r-xdata
cmp edx 0x4000
jge r-xdata
cmp edx 0x4000
jge r-xdata
add ecx ecx
add edx edx
cmp ecx eax
mov [ edi ] ecx
mov [ ebx ] edx
jg r-xdata
add ecx ecx
add edx edx
cmp ecx eax
mov [ esi + 0x34 ] ecx
mov [ esi + 0x3c ] edx
jg r-xdata
sub_4966b8
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop esi
leave
retn
cmp [ esi + 0x4 ] 0x0
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetViewportOrgEx@IAT ]
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_4967ba
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x20 ]
add [ ebp - 0x4 ] ecx
add [ ebp - 0x8 ] eax
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0x4 ]
call [ SetViewportOrgEx@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x8 ]
call [ GetWindowOrgEx@IAT ]
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ esi + 0x4 ]
call [ SetWindowOrgEx@IAT ]
sub_496738
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ GetDeviceCaps@IAT ]
mov esi ecx
push 0xa
push [ esi + 0x8 ]
call edi
push 0x8
mov ebx eax
push [ esi + 0x8 ]
call edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_4967ba
push 0x1
push [ esi + 0x4 ]
call [ SetMapMode@IAT ]
xor edi edi
push edi
push edi
push edi
push [ esi + 0x4 ]
call [ SetWindowOrgEx@IAT ]
push edi
push [ esi + 0x24 ]
push [ esi + 0x20 ]
push [ esi + 0x4 ]
call [ SetViewportOrgEx@IAT ]
mov eax [ ebp - 0x4 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
add eax 0x2
push eax
push 0xffffffff
push 0xffffffff
push [ esi + 0x4 ]
call [ IntersectClipRect@IAT ]
push edi
mov ecx esi
call sub_4965b3
pop edi
pop esi
pop ebx
leave
retn
sub_4967ba
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x8 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
push [ esi + 0x30 ]
mov edi [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push [ esi + 0x38 ]
push [ ebp - 0x10 ]
push [ edi ]
call sub_4957d0
mov [ edi ] eax
push [ esi + 0x34 ]
push [ ebp - 0x4 ]
push [ esi + 0x3c ]
push [ ebp - 0xc ]
push [ edi + 0x4 ]
call sub_4957d0
mov [ edi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_496813
mov eax sub_49abbc
call sub_469294
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x28 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_49051f
cmp [ eax + 0x4 ] esi
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_47bea6
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
and [ eax + 0x4 ] 0x0
sub_496862
mov eax sub_49b294
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x4
push ecx
call sub_483088
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4968b2
mov eax sub_49b71b
call sub_469294
push ecx
push ebx
mov ebx ecx
push esi
mov [ ebp - 0x10 ] ebx
mov [ ebx ] r--data
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebx + 0x4 ]
call sub_477841
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push edi
test esi esi
jne r-xdata
push ecx
lea ecx [ ebx + 0x4 ]
call sub_477928
test edi edi
je r-xdata
mov eax esi
mov ecx esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
cmp [ edi + 0x1c ] 0x0
je r-xdata
pop edi
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_496927
push ebx
push ebp
push esi
push edi
call sub_4904f9
push 0x1
mov ebp eax
call sub_493376
add ebp 0x34
xor ebx ebx
mov esi ebp
push 0x1
mov [ ebp ] bl
call sub_4933e6
call sub_4904f9
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
push 0xa
push esi
call sub_469760
pop ecx
mov edi eax
pop ecx
mov [ edi ] bl
call sub_4904f9
push [ eax + 0x8 ]
push esi
call [ UnregisterClassA@IAT ]
lea esi [ edi + 0x1 ]
jmp r-xdata
call sub_4902c7
mov esi eax
mov ecx [ esi + 0xcc ]
lea edi [ esi + 0xcc ]
cmp ecx ebx
je r-xdata
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
call sub_4904f9
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb8 ]
test eax eax
je r-xdata
push ebx
push 0x1
call eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
cmp eax ebx
je r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x30 ] ebx
push eax
call edi
mov [ esi + 0x2c ] ebx
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_4d127d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_4d1e90
add esp 0x4
call sub_4d2050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_4d2080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_4d2080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_4d1e90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_4d1e90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_4d1e90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_4d1e90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4d1fc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_4d127d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_4d1e90
add esp 0x4
call sub_4d2050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_4d2080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_4d2080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_4d1e90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_4d1e90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_4d1e90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_4d1e90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4d1fc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_4d1e90
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_4d1fc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_4d2050
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4d2080
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_40114e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_401230
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_401240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_47c3de
add esp 0x4
pop ebp
retn 0x4
sub_401260
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401280
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_401380
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_4012e0
mov esp ebp
pop ebp
retn
sub_4013a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_4013b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ EnableWindow@IAT ]
mov esp ebp
pop ebp
retn
sub_4013d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ EnableWindow@IAT ]
mov esp ebp
pop ebp
retn
sub_4014d8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4015ea
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478722
mov esp ebp
pop ebp
retn
sub_4016d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax 0xc
mov esp ebp
pop ebp
retn
sub_401ad2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_401df1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
mov ecx [ ebp - 0x4 ]
call sub_401d44
mov esp ebp
pop ebp
retn
sub_40257f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_40259e
mov esp ebp
pop ebp
retn 0x4
sub_402830
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_467da5
add esp 0x8
pop ebp
retn
sub_402b67
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov esp ebp
pop ebp
retn 0x4
sub_402b80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_402c82
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0x58 ]
mov esp ebp
pop ebp
retn
sub_403630
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401340
mov esp ebp
pop ebp
retn
sub_403920
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_404546
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4054e0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa4 ] 0x1
mov esp ebp
pop ebp
retn
sub_405070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401280
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4050c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_4012e0
mov esp ebp
pop ebp
retn
sub_405400
push ebp
mov ebp esp
call sub_4904f9
mov eax [ eax + 0xc ]
pop ebp
retn
sub_405430
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ UpdateWindow@IAT ]
mov esp ebp
pop ebp
retn
sub_4054a0
push ebp
mov ebp esp
call [ GetCapture@IAT ]
push eax
call sub_478d3a
pop ebp
retn
sub_4054e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478ca1
mov esp ebp
pop ebp
retn
sub_405520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call [ LoadCursorA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_4055a7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4055b7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4055f3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_405c60
mov esp ebp
pop ebp
retn
sub_405c60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_48b397
mov esp ebp
pop ebp
retn
sub_405d80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ DrawMenuBar@IAT ]
mov esp ebp
pop ebp
retn
sub_405dc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x20
mov esp ebp
pop ebp
retn
sub_405e74
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov esp ebp
pop ebp
retn 0x4
sub_405e8d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40620f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40621f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov esp ebp
pop ebp
retn
sub_406250
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov esp ebp
pop ebp
retn
sub_40659d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4054e0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x1
mov esp ebp
pop ebp
retn
sub_406620
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ CopyRect@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_4066f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478919
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406740
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4028f0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40675f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_48a0bf
mov esp ebp
pop ebp
retn
sub_40677b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40698c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_406b19
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_479428
mov ecx [ ebp - 0x4 ]
call sub_406b34
mov esp ebp
pop ebp
retn
sub_406b8f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406b34
mov ecx [ ebp - 0x4 ]
call sub_402ad0
mov esp ebp
pop ebp
retn
sub_406d49
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_407105
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_407b4a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_407b70
mov esp ebp
pop ebp
retn
sub_407b5d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_407b70
mov esp ebp
pop ebp
retn
sub_407d30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x40
call sub_4770bc
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_407d50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x40
call sub_4770ef
mov esp ebp
pop ebp
retn
sub_407d70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402b00
mov esp ebp
pop ebp
retn
sub_407d90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402b00
mov esp ebp
pop ebp
retn
sub_407f80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov esp ebp
pop ebp
retn
sub_408180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4093d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478919
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_409420
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_409510
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_409527
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_40963d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov esp ebp
pop ebp
retn 0x4
sub_409656
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_409666
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_409686
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_409835
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov esp ebp
pop ebp
retn
sub_409846
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
mov esp ebp
pop ebp
retn
sub_409857
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0xc4 ]
mov esp ebp
pop ebp
retn
sub_409a4f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_409eff
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
mov esp ebp
pop ebp
retn
sub_40a130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x83c
mov esp ebp
pop ebp
retn
sub_40a150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401690
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a190
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov esp ebp
pop ebp
retn
sub_40a3dd
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_484220
mov esp ebp
pop ebp
retn
sub_40a3f9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40b580
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ LockWindowUpdate@IAT ]
mov esp ebp
pop ebp
retn
sub_40b5a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
call [ LockWindowUpdate@IAT ]
mov esp ebp
pop ebp
retn
sub_40b5f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478ca1
mov esp ebp
pop ebp
retn 0x4
sub_40b714
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40b8e9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xd4 ]
mov esp ebp
pop ebp
retn
sub_40ba6f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40bc50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xdc ]
mov esp ebp
pop ebp
retn
sub_40bf0b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40c450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xd4
call sub_46338b
mov esp ebp
pop ebp
retn
sub_40d2f9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x22c
call sub_4169bc
mov esp ebp
pop ebp
retn 0x4
sub_40d3e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_47801b
mov esp ebp
pop ebp
retn
sub_40d430
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4806f9
pop ebp
retn 0x4
sub_40d440
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ IsWindowVisible@IAT ]
mov esp ebp
pop ebp
retn
sub_40d460
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478ca1
mov esp ebp
pop ebp
retn 0x8
sub_40d4e9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40d78e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40dd33
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40de9b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_40deba
mov esp ebp
pop ebp
retn 0x4
sub_40e0d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4016f0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40e0ef
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_48a1c5
mov esp ebp
pop ebp
retn
sub_40e10b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40e11b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x4
mov esp ebp
pop ebp
retn
sub_40e2f9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40e651
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40e940
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478919
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ea9d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40eaad
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_40eacd
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_40f147
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40f157
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xba
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x4
sub_40f354
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40f7c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40f74b
mov esp ebp
pop ebp
retn
sub_40fd8e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40fdc4
mov ecx [ ebp - 0x4 ]
call sub_478709
mov esp ebp
pop ebp
retn
sub_40fda9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40fdc4
mov ecx [ ebp - 0x4 ]
call sub_478722
mov esp ebp
pop ebp
retn
sub_410159
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4104fa
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_410702
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_4105bc
mov esp ebp
pop ebp
retn
sub_41071f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_4106c1
mov esp ebp
pop ebp
retn
sub_410a37
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_410a54
mov esp ebp
pop ebp
retn
sub_410d6c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_410f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_411057
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_411190
push ebp
mov ebp esp
call sub_4904f9
mov eax [ eax + 0x8 ]
pop ebp
retn
sub_41233f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_414496
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn 0x8
sub_415236
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_4169bc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x238 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_416b40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
sub eax 0x1
mov esp ebp
pop ebp
retn
sub_416bc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_47714f
mov esp ebp
pop ebp
retn
sub_416be0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_47711c
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_416c00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_402780
mov esp ebp
pop ebp
retn 0x4
sub_416c40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
mov esp ebp
pop ebp
retn 0x4
sub_416c90
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
call sub_4027c0
push eax
mov ecx [ ebp + 0x8 ]
call sub_402810
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x8
sub_416ee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478919
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_416fa3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_48a1c5
mov esp ebp
pop ebp
retn
sub_416fbf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4171a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov esp ebp
pop ebp
retn
sub_4172a7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov esp ebp
pop ebp
retn
sub_4172b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x40 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_417489
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4178e2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov esp ebp
pop ebp
retn
sub_4178f3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov esp ebp
pop ebp
retn
sub_417904
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov esp ebp
pop ebp
retn
sub_417948
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov esp ebp
pop ebp
retn
sub_417980
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov esp ebp
pop ebp
retn
sub_417a0d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esp ebp
pop ebp
retn
sub_417a4f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
mov esp ebp
pop ebp
retn
sub_4180d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_468490
add esp 0x8
pop ebp
retn
sub_418251
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_418770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_418f32
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_418f42
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x9a
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x4
sub_4196e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_47801b
mov esp ebp
pop ebp
retn
sub_419700
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_419717
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_41995d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_419a65
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_41acf1
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x6c ]
call sub_47d842
mov [ ebp - 0x4 ] 0x6
lea ecx [ ebp - 0x384 ]
call sub_403680
mov eax r-xdata
retn
sub_41ad80
mov [ ebp - 0x4 ] 0xa
lea ecx [ ebp - 0x6c ]
call sub_47d842
mov [ ebp - 0x4 ] 0x9
lea ecx [ ebp - 0x398 ]
call sub_403680
mov eax r-xdata
retn
sub_41ae07
mov [ ebp - 0x4 ] 0xd
lea ecx [ ebp - 0x6c ]
call sub_47d842
mov [ ebp - 0x4 ] 0xc
lea ecx [ ebp - 0x3ac ]
call sub_403680
mov eax r-xdata
retn
sub_41aec2
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0x6c ]
call sub_47d842
mov [ ebp - 0x4 ] 0xf
lea ecx [ ebp - 0x3c4 ]
call sub_403680
mov eax r-xdata
retn
sub_41af9d
mov [ ebp - 0x4 ] 0x13
lea ecx [ ebp - 0x6c ]
call sub_47d842
mov [ ebp - 0x4 ] 0x12
lea ecx [ ebp - 0x3d8 ]
call sub_403680
mov eax r-xdata
retn
sub_41b1d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + edx * 4 ]
mov esp ebp
pop ebp
retn 0x4
sub_41d90c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_41b237
mov esp ebp
pop ebp
retn
sub_41d980
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov esp ebp
pop ebp
retn
sub_41da00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x18 ] 0x0
sete cl
mov eax ecx
mov esp ebp
pop ebp
retn
sub_41db80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_41e0f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_41e100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_41e888
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_48a633
mov esp ebp
pop ebp
retn 0x4
sub_421252
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_4241e6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x390
call sub_40c450
mov esp ebp
pop ebp
retn 0x8
sub_424ec8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xb98 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_424f30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xb90 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_424f4b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xb9c ] ecx
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_425000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xb6c ] ecx
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_42510b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_428c40
xor eax eax
mov esp ebp
pop ebp
retn 0x8
sub_426722
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_426735
mov esp ebp
pop ebp
retn
sub_4267f7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42680a
mov esp ebp
pop ebp
retn
sub_426916
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4268c1
mov esp ebp
pop ebp
retn
sub_426929
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_428343
mov esp ebp
pop ebp
retn 0x4
sub_426942
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_426955
mov esp ebp
pop ebp
retn
sub_427090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_427194
mov esp ebp
pop ebp
retn
sub_4270d1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x1
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_427194
mov esp ebp
pop ebp
retn
sub_427112
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
push 0x1
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_427194
mov esp ebp
pop ebp
retn
sub_427153
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
push 0x1
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_427194
mov esp ebp
pop ebp
retn
sub_42826c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn 0x10
sub_428317
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4268c1
mov esp ebp
pop ebp
retn
sub_42832a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_428343
mov esp ebp
pop ebp
retn 0x4
sub_428830
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_48b397
mov esp ebp
pop ebp
retn
sub_428880
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402810
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x8
sub_428b90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_4771af
mov esp ebp
pop ebp
retn
sub_428be0
push ebp
mov ebp esp
call [ GetFocus@IAT ]
push eax
call sub_478d3a
pop ebp
retn
sub_428c00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ SetForegroundWindow@IAT ]
mov esp ebp
pop ebp
retn
sub_428c20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478ca1
mov esp ebp
pop ebp
retn 0xc
sub_428c90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov esp ebp
pop ebp
retn
sub_428cb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
call sub_491088
mov esp ebp
pop ebp
retn 0x4
sub_428edb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4292cb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xec ]
mov esp ebp
pop ebp
retn
sub_4296a6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4297d0
mov ecx [ ebp - 0x4 ]
add ecx 0x14
call sub_41b160
mov esp ebp
pop ebp
retn
sub_429770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47763d
mov esp ebp
pop ebp
retn 0x4
sub_4297b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_429850
mov esp ebp
pop ebp
retn 0x4
sub_4297d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_429810
mov esp ebp
pop ebp
retn
sub_429810
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_477524
mov esp ebp
pop ebp
retn
sub_429880
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ecx + edx * 4 ] eax
mov esp ebp
pop ebp
retn 0x8
sub_4298c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4299a9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_429f56
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42a0f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42a10b
mov esp ebp
pop ebp
retn
sub_42a61b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0xc4 ]
mov esp ebp
pop ebp
retn
sub_42aa10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42aa27
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_42ac29
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42ae2c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42c683
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42c7d0
mov esp ebp
pop ebp
retn
sub_42c8d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410070
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42c8ef
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_489f66
mov esp ebp
pop ebp
retn
sub_42c90b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42ca72
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42cb03
mov esp ebp
pop ebp
retn
sub_42ca85
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42cbd6
mov esp ebp
pop ebp
retn
sub_42ce30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ OpenClipboard@IAT ]
mov esp ebp
pop ebp
retn
sub_42cfac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42d1d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42d383
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42da9a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42dae7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_42db06
mov esp ebp
pop ebp
retn 0x4
sub_42dc32
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_42de70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call [ LoadIconA@IAT ]
mov esp ebp
pop ebp
retn 0x4
sub_42decd
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov esp ebp
pop ebp
retn 0x4
sub_42dee6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42e123
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42e1e4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_42e1ff
mov ecx [ ebp - 0x4 ]
call sub_42e2ea
mov esp ebp
pop ebp
retn
sub_42e4c5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
mov ecx [ ebp - 0x4 ]
call sub_42e4ef
mov esp ebp
pop ebp
retn
sub_42e4da
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
mov ecx [ ebp - 0x4 ]
call sub_42e594
mov esp ebp
pop ebp
retn
sub_42e639
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_42e6bd
mov esp ebp
pop ebp
retn
sub_42edfe
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov esp ebp
pop ebp
retn 0x4
sub_42ee17
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42ef7e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x64 ]
mov [ ecx ] 0x0
mov esp ebp
pop ebp
retn
sub_42f007
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42f152
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42f297
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42f3a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_479428
mov esp ebp
pop ebp
retn
sub_42f3e3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_42f7d0
mov esp ebp
pop ebp
retn 0x4
sub_42f41f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_42f740
mov esp ebp
pop ebp
retn 0x4
sub_42f43b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x3c
call sub_42f6e0
mov esp ebp
pop ebp
retn
sub_42f690
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_478919
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42f957
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_42fc6a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_42fc94
mov esp ebp
pop ebp
retn
sub_42fc7f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_42fc94
mov esp ebp
pop ebp
retn
sub_430002
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
mov ecx [ ebp - 0x4 ]
call sub_430017
mov esp ebp
pop ebp
retn
sub_4302aa
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_43039a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_4303c4
mov esp ebp
pop ebp
retn
sub_4303af
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_4303c4
mov esp ebp
pop ebp
retn
sub_4307ec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4307fc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xc8
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x4
sub_430e03
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_489ea7
mov esp ebp
pop ebp
retn
sub_430e1f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4311eb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4312e2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_431bdc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_431d40
mov esp ebp
pop ebp
retn
sub_431bef
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_431d40
mov esp ebp
pop ebp
retn
sub_431c25
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4315c4
mov ecx [ ebp - 0x4 ]
call sub_48d869
mov esp ebp
pop ebp
retn
sub_431e50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_431ebc
push ebp
mov ebp esp
call sub_431ecb
call sub_431eda
pop ebp
retn
sub_431ecb
push ebp
mov ebp esp
mov ecx rw-data
call sub_431e60
pop ebp
retn
sub_431eda
push ebp
mov ebp esp
push sub_431eec
call sub_46871e
add esp 0x4
pop ebp
retn
sub_431eec
push ebp
mov ebp esp
mov ecx rw-data
call sub_432d90
pop ebp
retn
sub_432d1b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xa8 ]
call sub_43dac4
mov esp ebp
pop ebp
retn
sub_432d34
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0xa8 ]
call sub_43dc1f
mov esp ebp
pop ebp
retn 0x4
sub_432e20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xaac ]
mov esp ebp
pop ebp
retn
sub_432e70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xab0 ]
mov esp ebp
pop ebp
retn
sub_432e90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_432f37
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_432f47
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_433ed1
mov [ ebp - 0x170 ] 0x0
lea ecx [ ebp - 0x168 ]
call sub_403680
mov eax r-xdata
retn
sub_434319
mov [ ebp - 0x1c0 ] 0x0
lea ecx [ ebp - 0x18c ]
call sub_403680
mov eax r-xdata
retn
sub_43441b
mov [ ebp - 0x1c4 ] 0x0
lea ecx [ ebp - 0x1a0 ]
call sub_403680
mov eax r-xdata
retn
sub_4344f5
mov [ ebp - 0x1c8 ] 0x0
lea ecx [ ebp - 0x1b4 ]
call sub_403680
mov eax r-xdata
retn
sub_4348eb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_481005
mov esp ebp
pop ebp
retn
sub_437070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_437090
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4370b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
xor eax eax
cmp ecx [ ebp + 0x8 ]
sete al
mov esp ebp
pop ebp
retn 0x4
sub_4370d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4370f0
mov esp ebp
pop ebp
retn 0x4
sub_4370f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx * 4 ]
mov esp ebp
pop ebp
retn 0x4
sub_437110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x44 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_437130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_437140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_492385
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_43715f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_4968b2
mov esp ebp
pop ebp
retn
sub_437670
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_46887f
add esp 0x8
pop ebp
retn
sub_437690
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
sub_437797
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_439443
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x240 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_43c7ef
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x1
push 0xd
mov ecx [ ebp - 0x4 ]
call sub_43c655
mov esp ebp
pop ebp
retn
sub_43ce00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_47714f
mov esp ebp
pop ebp
retn
sub_43ce20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x190
call sub_41b1b0
mov esp ebp
pop ebp
retn
sub_43ce40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401280
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_43ce90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_4012e0
mov esp ebp
pop ebp
retn
sub_43cff7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_43d033
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_493bbb
mov esp ebp
pop ebp
retn
sub_43d04f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_43d05f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x118 ] 0x1
mov ecx [ ebp - 0x4 ]
call sub_49487d
mov esp ebp
pop ebp
retn
sub_43de14
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + edx * 4 ]
mov esp ebp
pop ebp
retn 0x4
sub_43df00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ GetMenuItemCount@IAT ]
mov esp ebp
pop ebp
retn
sub_43e007
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_43e017
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_446d98
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_449d1c
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
call sub_402850
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_42680a
mov esp ebp
pop ebp
retn
sub_449ea1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449eba
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449ed3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449eec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x3
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449f05
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x4
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449f1e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x5
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449f37
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x6
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x7
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449f69
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x8
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_449f82
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x9
mov ecx [ ebp - 0x4 ]
call sub_449f9b
mov esp ebp
pop ebp
retn
sub_44a012
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_44a051
mov esp ebp
pop ebp
retn
sub_44a027
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_44a051
mov esp ebp
pop ebp
retn
sub_44a03c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_44a051
mov esp ebp
pop ebp
retn
sub_44ac76
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_44ad1e
mov esp ebp
pop ebp
retn
sub_44ac8b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_44ad1e
mov esp ebp
pop ebp
retn
sub_44aca0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_44ae0d
mov esp ebp
pop ebp
retn
sub_44acb5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_44ae0d
mov esp ebp
pop ebp
retn
sub_44acca
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_44aff7
mov esp ebp
pop ebp
retn
sub_44acdf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_44aff7
mov esp ebp
pop ebp
retn
sub_44acf4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_44b0dc
mov esp ebp
pop ebp
retn
sub_44ad09
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_44b0dc
mov esp ebp
pop ebp
retn
sub_44cc68
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
call sub_402850
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_426955
mov esp ebp
pop ebp
retn
sub_44cc85
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_44ccc4
mov esp ebp
pop ebp
retn
sub_44cc9a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_44ccc4
mov esp ebp
pop ebp
retn
sub_44ccaf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_44ccc4
mov esp ebp
pop ebp
retn
sub_44d3de
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
call sub_402850
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_426735
mov esp ebp
pop ebp
retn
sub_44d62a
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
call sub_402850
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_4268c1
mov esp ebp
pop ebp
retn
sub_44db81
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x16c ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_45f550
mov esp ebp
pop ebp
retn 0x4
sub_44dba3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405c80
mov ecx eax
call sub_436d39
mov esp ebp
pop ebp
retn
sub_4526c3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn 0x4
sub_45b733
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_446e52
mov esp ebp
pop ebp
retn
sub_45b746
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44dc4e
mov esp ebp
pop ebp
retn
sub_45b759
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44dec9
mov esp ebp
pop ebp
retn
sub_45b76c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44e282
mov esp ebp
pop ebp
retn
sub_45b77f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44e641
mov esp ebp
pop ebp
retn
sub_45b792
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_450092
mov esp ebp
pop ebp
retn
sub_45b7a5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_450304
mov esp ebp
pop ebp
retn
sub_45b7b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44eb35
mov esp ebp
pop ebp
retn
sub_45b7cb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44ed9d
mov esp ebp
pop ebp
retn
sub_45b7de
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44f0cf
mov esp ebp
pop ebp
retn
sub_45b7f1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44f4b0
mov esp ebp
pop ebp
retn
sub_45b804
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44f9d7
mov esp ebp
pop ebp
retn
sub_45b817
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44fb4d
mov esp ebp
pop ebp
retn
sub_45b82a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44fd31
mov esp ebp
pop ebp
retn
sub_45b83d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44feaa
mov esp ebp
pop ebp
retn
sub_45b850
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4505bc
mov esp ebp
pop ebp
retn
sub_45b863
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4505da
mov esp ebp
pop ebp
retn
sub_45b876
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d8a8
mov esp ebp
pop ebp
retn
sub_45b889
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44db0b
mov esp ebp
pop ebp
retn
sub_45b8c3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_449912
mov esp ebp
pop ebp
retn
sub_45b91f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44985f
mov esp ebp
pop ebp
retn
sub_45b956
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_449a02
mov esp ebp
pop ebp
retn
sub_45b9bf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_447530
mov esp ebp
pop ebp
retn
sub_45b9d2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44758c
mov esp ebp
pop ebp
retn
sub_45b9e5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4477d7
mov esp ebp
pop ebp
retn
sub_45b9f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_447b44
mov esp ebp
pop ebp
retn
sub_45ba0b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_447ed4
mov esp ebp
pop ebp
retn
sub_45ba1e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4488d9
mov esp ebp
pop ebp
retn
sub_45ba31
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4489f1
mov esp ebp
pop ebp
retn
sub_45ba44
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44839a
mov esp ebp
pop ebp
retn
sub_45ba57
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4485d3
mov esp ebp
pop ebp
retn
sub_45ba6a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_448bf2
mov esp ebp
pop ebp
retn
sub_45ba7d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44906a
mov esp ebp
pop ebp
retn
sub_45ba90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_448b29
mov esp ebp
pop ebp
retn
sub_45baa3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44956b
mov esp ebp
pop ebp
retn
sub_45bab6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4505f8
mov esp ebp
pop ebp
retn
sub_45bb15
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_45064e
mov esp ebp
pop ebp
retn
sub_45bb74
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44db5b
mov ecx [ ebp - 0x4 ]
call sub_45f550
mov esp ebp
pop ebp
retn
sub_45bbd5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44dba3
mov esp ebp
pop ebp
retn
sub_45bbe8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45bc01
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44dbf5
mov esp ebp
pop ebp
retn
sub_45bc14
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx ]
mov esp ebp
pop ebp
retn 0x4
sub_45bc2d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_446621
mov esp ebp
pop ebp
retn
sub_45bc40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4467a4
mov esp ebp
pop ebp
retn
sub_45bc53
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44669c
mov esp ebp
pop ebp
retn
sub_45bcaf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4467ef
mov esp ebp
pop ebp
retn
sub_45bd0b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_446986
mov esp ebp
pop ebp
retn
sub_45bd42
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_446c4a
mov esp ebp
pop ebp
retn
sub_45bdf7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d62a
mov esp ebp
pop ebp
retn
sub_45be2d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44ac76
mov esp ebp
pop ebp
retn
sub_45be40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44ac8b
mov esp ebp
pop ebp
retn
sub_45be53
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44aca0
mov esp ebp
pop ebp
retn
sub_45be66
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44acb5
mov esp ebp
pop ebp
retn
sub_45be79
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44acca
mov esp ebp
pop ebp
retn
sub_45be8c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44acdf
mov esp ebp
pop ebp
retn
sub_45be9f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44acf4
mov esp ebp
pop ebp
retn
sub_45beb2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44ad09
mov esp ebp
pop ebp
retn
sub_45bec5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44b2b8
mov esp ebp
pop ebp
retn
sub_45bed8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44b486
mov esp ebp
pop ebp
retn
sub_45beeb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44bdfe
mov esp ebp
pop ebp
retn
sub_45bf1e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44c6b0
mov esp ebp
pop ebp
retn
sub_45bf5b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d6a9
mov esp ebp
pop ebp
retn
sub_45bf98
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44cc68
mov esp ebp
pop ebp
retn
sub_45bfab
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_449cfc
mov esp ebp
pop ebp
retn
sub_45bfe8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_449d1c
mov esp ebp
pop ebp
retn
sub_45bffb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_449d39
mov esp ebp
pop ebp
retn
sub_45c05e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44cc85
mov esp ebp
pop ebp
retn
sub_45c071
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44cc9a
mov esp ebp
pop ebp
retn
sub_45c084
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44ccaf
mov esp ebp
pop ebp
retn
sub_45c19f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44cd68
mov esp ebp
pop ebp
retn
sub_45c1b2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44cf53
mov esp ebp
pop ebp
retn
sub_45c1c5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d13e
mov esp ebp
pop ebp
retn
sub_45c1d8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d18a
mov esp ebp
pop ebp
retn
sub_45c1eb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d3de
mov esp ebp
pop ebp
retn
sub_45c1fe
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d441
mov esp ebp
pop ebp
retn
sub_45c211
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d522
mov esp ebp
pop ebp
retn
sub_45c224
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d549
mov esp ebp
pop ebp
retn
sub_45c284
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_45b1e8
mov esp ebp
pop ebp
retn
sub_45c2d2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_45b1e8
mov esp ebp
pop ebp
retn
sub_45c323
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x2
mov ecx [ ebp - 0x4 ]
call sub_45b1e8
mov esp ebp
pop ebp
retn
sub_45c374
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x3
mov ecx [ ebp - 0x4 ]
call sub_45b1e8
mov esp ebp
pop ebp
retn
sub_45c3c5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x4
mov ecx [ ebp - 0x4 ]
call sub_45b1e8
mov esp ebp
pop ebp
retn
sub_45c416
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x5
mov ecx [ ebp - 0x4 ]
call sub_45b1e8
mov esp ebp
pop ebp
retn
sub_45c467
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_45b31f
mov esp ebp
pop ebp
retn
sub_45c4b5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_45b31f
mov esp ebp
pop ebp
retn
sub_45c506
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_446fc8
mov esp ebp
pop ebp
retn
sub_45c519
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_447187
mov esp ebp
pop ebp
retn
sub_45c52c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_44d647
mov esp ebp
pop ebp
retn
sub_45d20f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x2fc ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_45dc7f
mov [ ebp - 0x4 ] 0xe
push 0xffffffff
push 0x0
push 0x3f2
call sub_4840fb
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x4 ] 0xd
lea ecx [ ebp - 0xe0 ]
call sub_403680
mov eax r-xdata
retn
sub_45df78
mov [ ebp - 0x34 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_403680
mov eax r-xdata
retn
sub_45ed40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x338
mov esp ebp
pop ebp
retn
sub_45ee40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn
sub_45ee60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x744 ]
mov esp ebp
pop ebp
retn
sub_45eed0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ GetBkColor@IAT ]
mov esp ebp
pop ebp
retn
sub_45eef0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ GetTextColor@IAT ]
mov esp ebp
pop ebp
retn
sub_45efe0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x740 ]
mov esp ebp
pop ebp
retn
sub_45f030
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x334 ]
mov esp ebp
pop ebp
retn
sub_45f170
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x73c ]
mov esp ebp
pop ebp
retn
sub_45f270
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov esp ebp
pop ebp
retn
sub_45f290
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x328 ]
mov esp ebp
pop ebp
retn
sub_45f2d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov esp ebp
pop ebp
retn
sub_45f2f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call [ DestroyCaret@IAT ]
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x64
call sub_45f080
mov esp ebp
pop ebp
retn
sub_45f390
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ IsIconic@IAT ]
mov esp ebp
pop ebp
retn
sub_45f3b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ IsZoomed@IAT ]
mov esp ebp
pop ebp
retn
sub_45f3d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_45f3e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
push ecx
call [ ResumeThread@IAT ]
mov esp ebp
pop ebp
retn
sub_45f400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x5c ]
mov ax [ ebp + 0x8 ]
mov [ edx + 0x1c ] ax
mov esp ebp
pop ebp
retn 0x4
sub_45f420
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x5c ]
mov ax [ ebp + 0x8 ]
mov [ edx + 0x1e ] ax
mov esp ebp
pop ebp
retn 0x4
sub_45f440
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x5c ]
xor eax eax
mov ax [ edx + 0x1e ]
mov esp ebp
pop ebp
retn
sub_45f460
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x748
mov esp ebp
pop ebp
retn
sub_45f480
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xd4 ]
mov esp ebp
pop ebp
retn
sub_45f4a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xd8 ]
mov esp ebp
pop ebp
retn
sub_45f530
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov esp ebp
pop ebp
retn
sub_45f5f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetCaretPos@IAT ]
pop ebp
retn 0x8
sub_45f610
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
push ecx
call [ ShowCaret@IAT ]
mov esp ebp
pop ebp
retn
sub_45f7b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov esp ebp
pop ebp
retn
sub_45f860
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x11c ]
mov esp ebp
pop ebp
retn
sub_45f910
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x118 ]
mov esp ebp
pop ebp
retn
sub_45fa10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_45fb90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410070
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_45fbaf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_489f66
mov esp ebp
pop ebp
retn
sub_45fbcb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_45fc41
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x13
mov esp ebp
pop ebp
retn 0x4
sub_45fea0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_45feb7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_460660
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47c7b1
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_460803
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_460a84
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_460aa3
mov esp ebp
pop ebp
retn 0x4
sub_460f1e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0xc4 ]
mov esp ebp
pop ebp
retn
sub_461084
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_461150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x98
call sub_402970
mov esp ebp
pop ebp
retn
sub_461169
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x98
call sub_4029a0
mov esp ebp
pop ebp
retn 0x4
sub_4614a1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_4614ac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_46151a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov esp ebp
pop ebp
retn 0x4
sub_461533
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_461543
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0xc3
mov ecx [ ebp - 0x4 ]
call sub_402cd0
mov esp ebp
pop ebp
retn 0x4
sub_461d5a
mov [ ebp - 0x114 ] 0x0
lea ecx [ ebp - 0x68 ]
call sub_403680
mov eax r-xdata
retn
sub_463370
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_46327b
mov ecx [ ebp - 0x4 ]
call sub_461c5e
mov esp ebp
pop ebp
retn
sub_46338b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x4
mov esp ebp
pop ebp
retn
sub_4635b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_402810
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x8
sub_463603
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_489ea7
mov esp ebp
pop ebp
retn
sub_46361f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_463823
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_46405a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_463b1c
mov ecx [ ebp - 0x4 ]
call sub_478722
mov esp ebp
pop ebp
retn
sub_464100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_47c674
mov esp ebp
pop ebp
retn
sub_464120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_46412e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_46423f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_489f66
mov esp ebp
pop ebp
retn
sub_46425b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_4642e7
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x13
mov esp ebp
pop ebp
retn 0x4
sub_4645eb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_464752
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_464c85
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_464bd4
mov esp ebp
pop ebp
retn
sub_465499
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_465680
mov esp ebp
pop ebp
retn
sub_4654ac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_465610
mov esp ebp
pop ebp
retn
sub_4654e2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_464d28
mov ecx [ ebp - 0x4 ]
call sub_48d869
mov esp ebp
pop ebp
retn
sub_4655f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_401690
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_465750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx 0x8
call sub_47c674
mov esp ebp
pop ebp
retn
sub_465839
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_465a76
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_465fa0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call [ CreatePopupMenu@IAT ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_47e484
mov esp ebp
pop ebp
retn
sub_466052
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_4013a0
mov esp ebp
pop ebp
retn 0x4
sub_46606b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_46607b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4786a4
mov ecx [ ebp - 0x4 ]
call sub_46609b
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_466357
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0xc4 ]
mov esp ebp
pop ebp
retn
sub_466850
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_46689c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_47b0ce
mov ecx [ ebp - 0x4 ]
call sub_4668bb
mov esp ebp
pop ebp
retn 0x4
ImmReleaseContext
jmp [ ImmReleaseContext@IAT ]
ImmSetCompositionFontA
jmp [ ImmSetCompositionFontA@IAT ]
ImmGetContext
jmp [ ImmGetContext@IAT ]
ImmSetCompositionWindow
jmp [ ImmSetCompositionWindow@IAT ]
sub_466d54
mov eax [ ecx ]
jmp [ eax + 0xc4 ]
sub_466f90
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push eax
call sub_478d3a
retn
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
sub_466fa7
call sub_4904f9
mov ecx [ eax + 0x4 ]
jmp sub_47c10a
sub_466fb4
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_47dfc2
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_466fde
push esi
mov esi ecx
call sub_466ffa
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_466ffa
mov [ ecx ] r--data
retn
sub_467001
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_47dfc2
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_46702b
push esi
mov esi ecx
call sub_467047
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_467047
mov [ ecx ] r--data
retn
sub_46704e
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_467062
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_4670cf
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_46711b
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_467137
push [ esp + 0x4 ]
add ecx 0xc
call sub_47c7b1
retn 0x4
sub_467146
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_47dfc2
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_467170
push esi
mov esi ecx
call sub_46718c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_46718c
mov [ ecx ] r--data
retn
sub_467193
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_47dfc2
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_4671bd
push esi
mov esi ecx
call sub_4671d9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4671d9
mov [ ecx ] r--data
retn
sub_4671e0
retn
sub_4671e1
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
add ecx 0xac
push ecx
mov ecx [ ebp + 0x8 ]
call sub_47c3e9
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_46724d
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax + 0xc4 ] ecx
retn
sub_467259
push esi
mov esi ecx
call sub_467275
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4672bd
call sub_478ca1
retn 0x4
sub_4672c5
mov eax [ ecx ]
jmp [ eax + 0xe0 ]
sub_4672cd
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax + 0xc0 ] ecx
retn
sub_467301
push esi
mov esi ecx
call sub_467315
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
pop esi
retn
sub_4674fc
push esi
mov esi ecx
call sub_467518
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_467518
mov eax sub_49bc50
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0xc
call sub_47c674
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_467578
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_46757f
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4677a7
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_46784c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4678d6
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_46784c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_467902
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_467ebc
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_467ed4
sub_467f10
push [ ebp - 0x14 ]
call sub_467f32
pop ecx
retn
sub_467f32
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_46b25a
xor eax eax
retn
sub_467fb2
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_467ed4
sub_467fca
call sub_467fe2
call sub_46b564
mov [ rw-data ] eax
call sub_46b514
fnclex
retn
sub_467fe1
retn
sub_467fe2
mov eax sub_46b93d
mov [ rw-data ] sub_46b5e7
mov [ rw-data ] eax
mov [ rw-data ] sub_46b64d
mov [ rw-data ] sub_46b58d
mov [ rw-data ] sub_46b635
mov [ rw-data ] eax
retn
sub_46836b
mov eax [ esp + 0x4 ]
test eax eax
jge r-xdata
retn
neg eax
sub_46852f
push esi
mov esi ecx
call sub_468506
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_46871e
push [ esp + 0x4 ]
call sub_4686a0
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_46875f
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_468865
push rw-data
push rw-data
call sub_468865
add esp 0x10
retn
call eax
sub_46878c
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_4687ae
add esp 0xc
retn
sub_46879d
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_4687ae
add esp 0xc
retn
sub_468853
push 0xd
call sub_46b33a
pop ecx
retn
sub_46885c
push 0xd
call sub_46b39b
pop ecx
retn
sub_468e8c
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_468ab4
pop ecx
mov [ rw-data ] 0x1
sub_46926d
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_46d6cf
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_46d696
sub_469294
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_4692ed
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_469304
add esp 0x10
retn
sub_469509
push 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_469304
add esp 0x10
retn
sub_4695c5
push 0x9
call sub_46b39b
pop ecx
retn
sub_469624
push 0x9
call sub_46b39b
pop ecx
retn
sub_4696c4
push 0x9
call sub_46b39b
pop ecx
retn
sub_46971c
push 0x9
call sub_46b39b
pop ecx
retn
sub_469cb6
mov eax [ esp + 0x4 ]
push 0x0
movzx eax [ eax ]
test [ eax + rw-data ] 0x4
pop eax
setne al
inc eax
retn
sub_469f99
push 0x9
call sub_46b39b
pop ecx
retn
sub_46a014
push 0x9
call sub_46b39b
pop ecx
retn
sub_46a0b6
push 0x9
call sub_46b39b
pop ecx
retn
sub_46a13f
push 0x9
call sub_46b39b
pop ecx
retn
sub_46a1f2
push 0x19
call sub_469248
pop ecx
retn
sub_46a28d
push 0x9
call sub_46b39b
pop ecx
retn
sub_46a322
push 0x9
call sub_46b39b
pop ecx
retn
sub_46a35f
push 0x1
push [ esp + 0x8 ]
call sub_46a36d
pop ecx
pop ecx
retn
sub_46ac4d
push [ ebp - 0x14 ]
call sub_467f32
pop ecx
retn
sub_46ada4
push [ ebp - 0x14 ]
call sub_46ae1a
pop ecx
retn
sub_46affc
push 0x1
pop eax
retn
sub_46b000
mov esp [ ebp - 0x18 ]
jmp sub_46b25a
sub_46b05e
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_46b067
mov esp [ ebp - 0x18 ]
jmp sub_46b25a
sub_46b140
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_46b2a2
push 0x1
pop eax
retn
sub_46b2f8
push 0x1
pop eax
retn
sub_46b311
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_46b4f9
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_46786e
add esp 0x8
pop ebp
retn 0x4
sub_46b514
push 0x30000
push 0x10000
call sub_46f376
pop ecx
pop ecx
retn
sub_46b635
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_46c31f
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_46c32c
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_46c33c
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_46c555
push 0x1
pop eax
retn
sub_46c7af
push 0x9
call sub_46b39b
pop ecx
retn
sub_46c8fd
push 0x9
call sub_46b39b
pop ecx
xor edi edi
retn
sub_46cb18
push 0x1
pop eax
retn
sub_46cbcc
push 0x1
pop eax
retn
sub_46d868
push sub_46d822
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_46d879
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_46efcd
push esi
push 0xb
call sub_46b33a
push [ esp + 0xc ]
call sub_46efee
push 0xb
mov esi eax
call sub_46b39b
add esp 0xc
mov eax esi
pop esi
retn
sub_46f2da
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_46f2f6
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_46f312
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_46f376
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_46f341
pop ecx
pop ecx
retn
sub_46f947
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_46f7db
add esp 0xc
retn
sub_46f95d
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_46f7db
add esp 0xc
retn
sub_46fa44
push 0x2
call sub_469248
pop ecx
retn
sub_46fe2a
call sub_470ff8
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_470eed
sub_4707f9
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_47080a
add esp 0xc
retn
sub_470ecb
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_470ff8
push 0x1
call sub_471001
pop ecx
retn
sub_4717b8
push 0x1
pop eax
retn
sub_471827
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
ReuseDDElParam
jmp [ ReuseDDElParam@IAT ]
UnpackDDElParam
jmp [ UnpackDDElParam@IAT ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
GetFileTitleA
jmp [ GetFileTitleA@IAT ]
ChooseColorA
jmp [ ChooseColorA@IAT ]
ChooseFontA
jmp [ ChooseFontA@IAT ]
CommDlgExtendedError
jmp [ CommDlgExtendedError@IAT ]
PrintDlgA
jmp [ PrintDlgA@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_471c50
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
xor ecx ecx
mov cx [ rw-data ]
push ecx
push eax
call [ GetPropA@IAT ]
retn
xor eax eax
retn
sub_472350
mov eax [ esp + 0x4 ]
push 0x0
push eax
call sub_472360
retn 0x4
sub_472570
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0xffff
push eax
call sub_473850
add esp 0x10
retn 0x4
xor eax eax
retn 0x4
sub_472970
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call sub_472fc0
add esp 0x4
mov esi eax
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax esi
pop esi
retn
sub_473670
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax [ esp + 0x8 ]
and eax 0xffffffdf
cmp ax 0x9
ja r-xdata
xor eax eax
retn
xor eax eax
retn
mov eax 0x1
retn
sub_474a70
mov eax [ esp + 0x10 ]
push 0x2
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_474920
add esp 0x14
retn 0x10
sub_474cd0
mov eax [ esp + 0x10 ]
push 0x1
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_474aa0
add esp 0x14
retn 0x10
sub_474fc6
or [ ecx ] ecx
pop es
or [ ecx ] ecx
or [ eax ] ecx
or [ eax ] cl
int3
sub_475387
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_47fb71
retn 0x10
sub_47539f
call sub_4904f9
mov ecx [ esp + 0x4 ]
test ecx ecx
mov [ eax + 0x14 ] cl
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call sub_468ab4
pop ecx
sub_4753bd
push 0x1
push 0x0
call sub_493093
call sub_493328
jmp sub_4930ad
j_sub_4753d5
jmp sub_4753d5
sub_4753d5
push 0x600
push 0x0
call sub_47539f
push sub_4753bd
call sub_46871e
pop ecx
mov [ rw-data ] al
retn
sub_475426
lea eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
push 0x1
call sub_47c734
mov eax esi
pop esi
retn 0x4
sub_4759d9
push esi
mov esi ecx
call sub_402730
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_475be0
xor eax eax
retn 0x4
sub_475be5
retn 0xc
sub_475be8
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
push 0x0
mov ecx eax
call sub_47b186
retn
sub_475c01
retn
sub_475d65
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_4692b3
sub_475d7e
push edi
mov edx ecx
push 0x10
mov eax 0xffffff
lea edi [ edx + 0x4 ]
pop ecx
mov [ edx ] r--data
[ edi ]
mov eax edx
pop edi
retn
sub_475d98
push esi
mov esi ecx
call sub_475db3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
sub_475db3
retn
sub_475db4
mov eax r--data
retn
sub_475e4a
push esi
mov esi ecx
call sub_407d70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_475e92
xor eax eax
retn
sub_475e95
push sub_490768
mov ecx rw-data
call sub_493013
add eax 0x4
retn
sub_475ea8
call sub_478ca1
retn 0xc
sub_475f8c
push esi
mov esi ecx
call sub_407d90
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_475ff0
mov eax r--data
retn
sub_476180
push esi
mov esi ecx
push 0x1
call sub_47b0ce
test eax eax
je r-xdata
pop esi
retn
mov ecx esi
call sub_478ca1
j_sub_478ca1
jmp sub_478ca1
sub_47619c
call sub_478ca1
retn 0x4
sub_4761a4
mov eax r--data
retn
sub_47625c
push esi
mov esi ecx
call j_sub_47801b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_476278
push esi
push 0x0
mov esi ecx
push 0x0
call sub_478369
mov eax [ esp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x5c ] eax
mov eax esi
pop esi
retn 0x4
sub_476345
push esi
mov esi ecx
mov eax [ esi + 0x5c ]
push [ eax + 0x8 ]
push [ eax + 0xc ]
call sub_47642d
mov ecx [ esi + 0x5c ]
mov [ ecx + 0x10 ] eax
mov eax [ esi + 0x5c ]
pop esi
mov eax [ eax + 0x10 ]
retn
sub_47667b
retn 0x4
sub_47671e
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_47672b
push esi
mov esi ecx
call sub_476747
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_476747
mov eax sub_49b094
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_47679a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_47679a
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_476770
push eax
call [ ImageList_Destroy@IAT ]
retn
xor eax eax
retn
sub_47680f
mov eax r--data
retn
sub_47684e
push esi
mov esi ecx
call sub_4768bf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_476994
push 0x0
push 0x0
push 0x401
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
xor eax eax
retn 0x8
sub_4769ab
push 0x0
push [ esp + 0x8 ]
push 0x401
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x4
sub_476bb0
push 0x1
push [ esp + 0x8 ]
call sub_476b0d
retn 0x4
sub_476c40
push [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_476c50
retn 0x8
sub_4770bc
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_4770d3
push esi
mov esi ecx
call sub_4770ef
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_47711c
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_477133
push esi
mov esi ecx
call sub_47714f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4774c4
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_4774db
push esi
mov esi ecx
call sub_4774f7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_477674
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_47768b
push esi
mov esi ecx
call sub_4776a7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4777e2
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
retn 0x4
sub_477805
push esi
mov esi ecx
call sub_477841
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_477841
mov eax sub_49ba54
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_477821
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4778c2
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_477821
sub_477982
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_47c3b5
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_4779a2
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_47c3de
pop ecx
test esi esi
mov ecx esi
jne r-xdata
pop esi
sub_4779df
push esi
mov esi ecx
call sub_477a26
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_477a26
mov eax sub_49ba0c
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4779fb
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_477a9c
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_4779fb
sub_477c1e
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x11
mov [ eax + 0x18 ] ecx
retn 0x4
sub_477c45
push esi
mov esi ecx
call sub_477cf8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_477cf8
mov eax sub_49ba98
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_477ca6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_477eb9
mov eax r--data
retn
sub_477fff
push esi
mov esi ecx
call sub_47801b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4780a8
push esi
mov esi ecx
push [ esp + 0x8 ]
call [ LockResource@IAT ]
push [ esp + 0x10 ]
mov ecx esi
push 0x0
push [ esp + 0x14 ]
push eax
call sub_4780cb
pop esi
retn 0xc
sub_4782c2
mov ecx [ ebp - 0x2c ]
call sub_47dfce
mov eax [ ebp - 0x24 ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_47835c
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x58 ] eax
pop eax
retn 0x4
sub_478517
mov ecx [ ebp - 0x24 ]
call sub_47dfce
mov eax [ ebp - 0x1c ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_4785c5
retn
sub_478709
push esi
mov esi ecx
push 0x1
call sub_47b0ce
test eax eax
je r-xdata
pop esi
retn
push 0x1
mov ecx esi
call sub_47857e
sub_478722
push 0x2
call sub_47857e
retn
sub_4787a6
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_47afee
retn 0xc
sub_4787f8
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
j_sub_478810
jmp sub_478810
sub_478810
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_478821
call sub_47882b
jmp sub_478838
sub_47882b
push 0x0
mov ecx rw-data
call sub_478957
retn
sub_478838
push sub_478844
call sub_46871e
pop ecx
retn
sub_478844
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_4793ac
sub_47885f
call sub_478869
jmp sub_478876
sub_478869
push 0x1
mov ecx rw-data
call sub_478957
retn
sub_478876
push sub_478882
call sub_46871e
pop ecx
retn
sub_478882
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_4793ac
sub_47889d
call sub_4788a7
jmp sub_4788b4
sub_4788a7
push 0xffffffff
mov ecx rw-data
call sub_478957
retn
sub_4788b4
push sub_4788c0
call sub_46871e
pop ecx
retn
sub_4788c0
test [ rw-data ] 0x4
jne r-xdata
retn
or [ rw-data ] 0x4
mov ecx rw-data
jmp sub_4793ac
sub_4788db
call sub_4788e5
jmp sub_4788f2
sub_4788e5
push 0xfffffffe
mov ecx rw-data
call sub_478957
retn
sub_4788f2
push sub_4788fe
call sub_46871e
pop ecx
retn
sub_4788fe
test [ rw-data ] 0x8
jne r-xdata
retn
or [ rw-data ] 0x8
mov ecx rw-data
jmp sub_4793ac
sub_47893b
push esi
mov esi ecx
call sub_4793ac
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4789d2
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xfffffff0
push [ esp + 0x14 ]
call sub_478983
retn 0x10
sub_4789ec
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xffffffec
push [ esp + 0x14 ]
call sub_478983
retn 0x10
sub_478a06
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_47bbe6
mov ecx [ esp + 0x10 ]
pop esi
mov [ ecx ] eax
retn 0xc
sub_479340
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x1
call sub_47b7d9
mov [ esi + 0x28 ] r--data
sub_479558
cmp [ ecx + 0x1c ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0xa4 ]
jmp [ eax + 0x58 ]
sub_4795fd
lea eax [ ecx + 0x28 ]
retn
sub_479601
push esi
mov esi ecx
call sub_4904f9
mov eax [ eax + 0x1034 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_479730
mov eax [ esp + 0x4 ]
push eax
mov [ eax ] 0x2c
push [ ecx + 0x1c ]
call [ GetWindowPlacement@IAT ]
retn 0x4
sub_479747
mov eax [ esp + 0x4 ]
push eax
mov [ eax ] 0x2c
push [ ecx + 0x1c ]
call [ SetWindowPlacement@IAT ]
retn 0x4
sub_4797c5
mov eax [ esp + 0x8 ]
push esi
push 0x0
mov esi ecx
push [ eax + 0xc ]
call sub_47ab34
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_478ca1
sub_479bbc
mov eax r--data
retn
sub_47a1b8
push esi
mov esi ecx
call sub_47c175
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_47a1d1
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x28 ] eax
retn 0x4
sub_47ad48
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_4902c7
test [ eax + 0xdf ] 0x40
jne r-xdata
push 0x1
call sub_479620
sub_47b0c6
mov eax 0xffff
retn 0x8
sub_47b12c
mov eax r-xdata
retn
sub_47b132
mov esi [ ebp - 0x1c ]
push 0xf108
push 0x30
mov ecx esi
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx esi
call sub_47dfce
mov eax r-xdata
retn
sub_47b170
mov eax ecx
mov ecx [ esp + 0x8 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x8
sub_47b6f1
mov eax [ ecx + 0x24 ]
and eax 0x10
retn
sub_47b71c
xor eax eax
retn 0x4
sub_47ba90
push 0x1
pop eax
retn
sub_47ba94
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp eax 0xe002
je r-xdata
cmp eax 0xe001
je r-xdata
push 0x1
pop eax
retn
sub_47bab3
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ DragAcceptFiles@IAT ]
retn 0x4
sub_47bb06
push [ esp + 0x4 ]
mov ecx rw-data
call sub_4673cc
retn
sub_47bb15
push [ esp + 0xc ]
mov ecx [ ecx + 0x34 ]
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
call [ eax + 0x54 ]
retn 0xc
sub_47bc7c
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x80 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ SetWindowTextA@IAT ]
jmp r-xdata
retn 0x4
sub_47bcd2
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x90 ]
push [ ecx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
retn
sub_47be0f
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xac ]
push [ ecx + 0x1c ]
call [ SetFocus@IAT ]
push eax
call sub_478d3a
retn
sub_47be6d
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0x8c ]
sub_47be8c
mov eax ecx
push 0x1
pop ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
retn
sub_47c0e7
push 0x1
pop eax
retn 0x4
sub_47c0ed
mov eax 0x80029c4a
retn 0x8
sub_47c0f5
call sub_4904f9
mov eax [ eax + 0x4 ]
push 0x1
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_47c11f
mov eax r--data
retn
sub_47c125
mov eax r--data
retn
sub_47c12b
mov eax r--data
retn
sub_47c131
mov eax r--data
retn
sub_47c169
mov eax r--data
retn
sub_47c16f
mov eax r--data
retn
sub_47c39b
call sub_475d4c
xor eax eax
retn
sub_47c41c
call sub_47c426
jmp sub_47c435
sub_47c426
push 0x40
push 0x50
mov ecx rw-data
call sub_4672d9
retn
sub_47c435
push sub_47c441
call sub_46871e
pop ecx
retn
sub_47c441
mov ecx rw-data
jmp sub_467301
sub_47c44b
call sub_47c455
jmp sub_47c467
sub_47c455
push 0x40
push 0x90
mov ecx rw-data
call sub_4672d9
retn
sub_47c467
push sub_47c473
call sub_46871e
pop ecx
retn
sub_47c473
mov ecx rw-data
jmp sub_467301
sub_47c47d
call sub_47c487
jmp sub_47c499
sub_47c487
push 0x40
push 0x110
mov ecx rw-data
call sub_4672d9
retn
sub_47c499
push sub_47c4a5
call sub_46871e
pop ecx
retn
sub_47c4a5
mov ecx rw-data
jmp sub_467301
sub_47c4af
call sub_47c4b9
jmp sub_47c4cb
sub_47c4b9
push 0x40
push 0x210
mov ecx rw-data
call sub_4672d9
retn
sub_47c4cb
push sub_47c4d7
call sub_46871e
pop ecx
retn
sub_47c4d7
mov ecx rw-data
jmp sub_467301
sub_47c5dc
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
pop esi
retn 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx esi
call sub_47c563
sub_47cb4a
push esi
mov esi ecx
call sub_47c61d
push [ esi ]
call sub_46988c
pop ecx
pop esi
retn
sub_47cc4e
lea ecx [ ebp - 0x50 ]
call sub_478db8
mov eax [ ebp + 0x8 ]
push [ eax + 0x10 ]
mov [ eax + 0x18 ] 0x1
call [ SetEvent@IAT ]
push 0x0
push 0xffffffff
call sub_47cdea
sub_47ccf5
call sub_49051f
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
retn
call sub_4904f9
mov eax [ eax + 0x4 ]
sub_47cfd4
cmp [ ecx + 0x24 ] 0x0
je r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_47cfe6
xor eax eax
retn
sub_47d0c1
mov eax [ ecx + 0x38 ]
retn
sub_47d4ba
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
call [ GetActiveWindow@IAT ]
push eax
call sub_478d3a
sub_47d515
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
or [ eax + 0x4 ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_47d52f
push esi
mov esi ecx
call sub_47d56a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_47d54b
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x4 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn 0x4
sub_47d821
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
push eax
call [ GetLastError@IAT ]
push eax
call sub_47e035
sub_47d883
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esi + 0xc ]
call sub_47c5ff
pop esi
retn
push eax
call [ CloseHandle@IAT ]
or [ esi + 0x4 ] 0xffffffff
sub_47d94e
xor eax eax
retn 0x10
sub_47d953
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ MoveFileA@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_47e035
sub_47dfb8
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_47dfc2
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_47dfce
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_47e466
push 0x0
call sub_47e3df
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_477ae7
sub_47e4db
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_47e4b1
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_47e4f1
retn 0x4
sub_47e4f4
mov eax r--data
retn
sub_47e564
mov ecx [ ebp - 0x18 ]
call sub_47dfce
mov eax r-xdata
retn
sub_47e572
push esi
call sub_4904f9
push 0x0
mov esi eax
call sub_493376
lea ecx [ esi + 0x1c ]
push [ esp + 0x8 ]
call sub_492ac6
push 0x0
call sub_4933e6
pop esi
retn 0x4
sub_47e598
test ecx ecx
je r-xdata
xor eax eax
cmp ecx [ esp + 0x4 ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ecx + 0x10 ]
jmp sub_47e598
retn 0x4
sub_47e5b1
call sub_49051f
inc [ eax + 0x10 ]
retn
sub_47e83d
call sub_49051f
mov ecx [ eax + 0x1c ]
jmp sub_47e7d8
sub_47e96d
mov eax r--data
retn
sub_47f182
push esi
mov esi ecx
call sub_47f19e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_47f799
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call [ GlobalFree@IAT ]
sub_47f7a7
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_47fbe7
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_47fbfb
push esi
mov esi ecx
call sub_47fd1c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_47fc89
push 0x1
call sub_47fc17
mov ecx eax
push [ esp + 0x4 ]
call sub_47e719
retn 0x4
sub_47fd06
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_47fcd5
push eax
call [ DeleteDC@IAT ]
retn
xor eax eax
retn
sub_47fd52
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_47fd5c
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_47fd66
and [ ecx + 0x8 ] 0x0
retn
sub_47fd6b
and [ ecx + 0x4 ] 0x0
retn
sub_47fddf
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ SelectObject@IAT ]
push eax
call sub_4806f9
retn 0x8
sub_4801e8
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_4804bc
push esi
mov esi ecx
call sub_4804d8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_480570
push esi
mov esi ecx
call sub_48058c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_480624
push esi
mov esi ecx
call sub_480640
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4808aa
push esi
mov esi ecx
call sub_480904
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_48094d
mov eax [ ecx + 0x70 ]
retn
sub_480951
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x8 ]
retn 0x4
sub_480961
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4839cb
push [ esp + 0x8 ]
lea ecx [ esi + 0x6c ]
call sub_4778db
pop esi
retn 0x4
sub_480c0a
mov eax [ ecx ]
jmp [ eax + 0x7c ]
sub_480c30
push esi
mov esi ecx
push [ esp + 0x8 ]
lea ecx [ esi + 0x1c ]
call sub_47c7b1
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa0 ]
pop esi
retn 0x4
sub_480c4d
retn
sub_480c4e
cmp [ ecx + 0x34 ] 0x0
jne r-xdata
mov eax [ ecx ]
jmp [ eax + 0xa0 ]
cmp [ ecx + 0x48 ] 0x0
je r-xdata
mov eax [ ecx ]
jmp [ eax + 0x7c ]
sub_480d9d
retn 0x4
sub_480e1c
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x90 ]
test eax eax
je r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x7c ]
sub_480e34
mov eax [ ecx ]
jmp [ eax + 0x9c ]
sub_480f99
mov ecx [ ebp + 0xc ]
call sub_47dfce
mov eax sub_480fa7
retn
sub_481104
xor eax eax
retn
sub_4814c0
push esi
mov esi ecx
call sub_47d883
mov eax [ esi + 0x10 ]
pop esi
cmp [ eax - 0x8 ] 0x0
je r-xdata
retn
push eax
call sub_47d975
sub_481729
push esi
mov esi ecx
call sub_481745
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_48194d
mov ecx [ ebp - 0x18 ]
call sub_47dfce
mov eax r-xdata
retn
sub_481a39
mov eax [ ecx + 0x2c ]
retn
sub_481a3d
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
retn 0x4
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x8 ]
sub_481c5c
push esi
mov esi ecx
call sub_478919
and [ esi + 0x3c ] 0x0
mov eax esi
pop esi
retn
sub_481d5d
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_481ea2
mov edx [ ecx ]
xor eax eax
push eax
push eax
push eax
call [ edx + 0xec ]
retn
sub_481eb0
push 0x1
push 0x0
push [ ecx + 0x1c ]
call [ InvalidateRect@IAT ]
retn 0xc
sub_481ec0
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0xf0 ]
retn 0x8
sub_481ecf
xor eax eax
retn 0x4
sub_481ed4
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
retn 0xc
call sub_47a3d7
test eax eax
je r-xdata
mov ecx esi
call sub_47be0f
sub_481f63
xor eax eax
retn 0xc
sub_481f68
mov eax 0x80000000
retn 0xc
sub_481f70
xor eax eax
retn 0x10
sub_481f75
or eax 0xffffffff
retn 0x14
sub_482076
push 0x0
push ecx
call sub_481f7b
test eax eax
je r-xdata
retn 0x4
mov edx [ eax ]
mov ecx eax
call [ edx + 0xf0 ]
push 0x1
pop eax
sub_48211f
push 0x1
pop eax
retn 0x4
sub_482125
retn 0x8
sub_4821cb
mov eax r--data
retn
sub_482335
push esi
mov esi ecx
call sub_482351
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_482351
mov [ ecx ] r--data
jmp sub_481c6c
sub_483088
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_48346c
push esi
mov esi ecx
call sub_483619
and [ esi + 0x20 ] 0x0
pop esi
retn
sub_4839b5
mov ecx [ ecx + 0x60 ]
push 0xa
push [ esp + 0xc ]
push ecx
push [ esp + 0x10 ]
call sub_47e8f5
retn 0x8
sub_4839cb
mov eax [ esp + 0x4 ]
mov [ eax + 0x24 ] ecx
retn 0x4
sub_4839d5
mov eax [ esp + 0x4 ]
and [ eax + 0x24 ] 0x0
retn 0x4
sub_483b25
push [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_48bddd
retn 0xc
sub_483d26
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_483d3d
mov [ esi + 0xc ] 0x1
pop esi
retn 0x4
sub_4841f0
call sub_4902c7
mov eax [ eax + 0xc4 ]
retn
sub_4841fc
mov ecx [ ecx + 0x80 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax + 0x10 ]
xor eax eax
retn
sub_48420e
mov ecx [ ecx + 0x80 ]
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
retn 0x4
sub_4842a5
cmp [ ecx + 0x3c ] 0x0
je r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_48431c
xor eax eax
retn
sub_484ccb
push 0x0
push 0x1
call sub_484c23
retn
sub_485339
mov eax [ ecx ]
push esi
mov esi [ esp + 0xc ]
push esi
push [ esp + 0xc ]
push 0x417
call [ eax + 0xa0 ]
xor [ esi + 0x8 ] 0x4
pop esi
retn 0x8
sub_485447
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_485339
mov eax [ ebp - 0x10 ]
leave
retn 0x4
sub_485d45
mov eax r--data
retn
sub_485d4b
call sub_478ca1
retn 0x4
sub_485d53
push 0x1
pop eax
retn 0x8
sub_485e28
push esi
mov esi ecx
cmp [ esi + 0x84 ] 0x0
je r-xdata
mov ecx esi
call sub_478ca1
pop esi
retn
call sub_48549a
sub_485e42
push [ esp + 0x8 ]
lea eax [ ecx + 0x90 ]
push eax
call sub_485e68
retn 0x8
sub_485e55
push [ esp + 0x8 ]
lea eax [ ecx + 0x88 ]
push eax
call sub_485e68
retn 0x8
sub_485fcf
retn 0x4
sub_4860a4
mov eax [ esp + 0x4 ]
mov ecx [ ecx + 0x5c ]
lea eax [ eax + eax * 4 ]
mov eax [ ecx + eax * 4 + 0x8 ]
retn 0x4
sub_4861ab
mov eax r-xdata
retn
sub_486287
mov eax r--data
retn
sub_48628d
call sub_478ca1
sub eax 0x11
neg eax
sbb eax eax
and al 0xf0
add eax 0x11
retn 0x8
sub_486334
push esi
push 0x1
mov esi ecx
push 0x0
call sub_4916b9
mov ecx esi
call sub_478ca1
pop esi
retn
sub_486349
push esi
mov esi ecx
call sub_478ca1
push 0x0
push 0x1
mov ecx esi
call sub_4916b9
pop esi
retn 0xc
sub_486404
push esi
mov esi ecx
call sub_478ca1
mov ecx [ esp + 0x8 ]
mov [ esi + 0x78 ] ecx
pop esi
retn 0x8
sub_48647e
push 0x1
push [ esp + 0x8 ]
push [ ecx + 0x8 ]
mov ecx [ ecx + 0x14 ]
call sub_486107
retn 0x4
sub_486506
mov eax r--data
retn
sub_486587
push esi
mov esi ecx
call sub_4865a3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_486656
push 0x1
pop eax
retn
j_sub_484a86
jmp sub_484a86
sub_4873ce
retn 0x8
sub_487430
mov eax r--data
retn
sub_487436
cmp [ esp + 0x8 ] 0xa
jb r-xdata
call sub_478ca1
cmp [ esp + 0x8 ] 0x11
ja r-xdata
push 0x3
pop eax
jmp r-xdata
retn 0xc
sub_487494
push esi
mov esi ecx
call sub_4874b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_487695
push 0x0
add ecx 0xcc
call sub_487235
retn
sub_487a25
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
jmp [ eax + 0x34 ]
sub_487a35
push ebp
mov ebp esp
push [ ebp + 0x18 ]
mov ecx [ ecx + 0x80 ]
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0x14
sub_487ae7
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
push 0x1
pop eax
retn
mov eax [ ecx ]
jmp [ eax + 0x20 ]
sub_487b10
mov ecx [ ecx + 0x80 ]
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
retn 0x4
sub_487b22
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
retn 0x4
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x24 ]
sub_487b38
mov ecx [ ecx + 0xa8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
retn 0x4
sub_487b5a
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x30 ]
jmp r-xdata
retn 0x4
sub_487c7e
mov eax r--data
retn
sub_487e3f
mov eax [ ecx + 0x8 ]
retn
sub_487e43
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x8 ]
retn 0x4
sub_4886fd
mov [ ecx ] r--data
jmp sub_47801b
sub_488708
push esi
mov esi ecx
call sub_4886fd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_488780
push esi
mov esi ecx
call sub_490b0e
and [ esi + 0x84 ] 0x0
and [ esi + 0x80 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4887a0
push esi
mov esi ecx
call sub_4887bc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_488931
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_47b45d
retn 0x8
sub_488941
mov eax r--data
retn
sub_488982
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x80 ] eax
pop eax
retn 0x4
sub_488acb
lea eax [ esp + 0xc ]
push 0x1
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_488992
retn 0xc
sub_488b88
mov eax [ ecx + 0x68 ]
mov [ ecx ] r--data
mov ecx [ eax + 0x70 ]
test ecx ecx
je r-xdata
retn
push 0x0
push 0xffffffff
push eax
call sub_486b35
sub_48996e
push rw-data
call sub_483088
retn
j_sub_48997e
jmp sub_48997e
sub_48997e
push sub_48996e
call sub_46871e
pop ecx
mov [ rw-data ] al
retn
sub_489f45
push 0x0
mov eax [ ecx ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0x0
push r--data
call [ eax + 0x54 ]
retn 0x10
sub_489f9e
xor eax eax
retn 0x4
sub_489fa3
call sub_478ca1
retn 0x8
sub_48a0f7
retn 0x4
sub_48a1a4
push 0x0
mov eax [ ecx ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0x0
push r--data
call [ eax + 0x54 ]
retn 0x10
sub_48a1fd
push 0x0
mov eax [ ecx ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0x0
push r--data
call [ eax + 0x54 ]
retn 0x10
sub_48a256
mov eax r--data
retn
sub_48a25c
push esi
mov esi ecx
call sub_48b2b9
and [ esi + 0xbc ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_48a275
push esi
mov esi ecx
call sub_428830
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_48a502
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ ecx + 0xbc ]
push [ ecx + 0x1c ]
call [ DefFrameProcA@IAT ]
retn 0xc
sub_48a5de
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
call [ eax + 0xe4 ]
or [ esi + 0xb8 ] 0x1
pop esi
retn 0x4
sub_48a621
push esi
mov esi ecx
push 0x0
call sub_48a6e8
test eax eax
jne r-xdata
pop esi
retn
mov eax esi
sub_48a633
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x4
call sub_47b7d9
mov [ esi + 0x28 ] r--data
sub_48a6b8
cmp [ esp + 0x4 ] 0x1
je r-xdata
retn 0xc
mov eax [ ecx ]
push 0x1
call [ eax + 0xc8 ]
sub_48a6cc
cmp [ ecx + 0x9c ] 0x0
je r-xdata
call sub_478ca1
cmp [ esp + 0x4 ] 0x2d
jne r-xdata
xor eax eax
jmp r-xdata
retn 0xc
sub_48a748
mov eax r--data
retn
sub_48a74e
push esi
mov esi ecx
call sub_48b2b9
and [ esi + 0xbc ] 0x0
and [ esi + 0xc0 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_48a76e
push esi
mov esi ecx
call sub_405c60
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_48a78a
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ ecx + 0x1c ]
call [ DefMDIChildProcA@IAT ]
retn 0xc
sub_48a878
push [ esp + 0x4 ]
call sub_48ba86
retn 0x4
sub_48ac33
push esi
mov esi ecx
push 0x0
call sub_48aadc
mov ecx esi
call sub_48bf9a
pop esi
retn
sub_48ac46
call sub_478ca1
retn 0x4
sub_48ae6d
call sub_48ae56
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xd4 ]
sub_48b096
mov eax [ esp + 0x4 ]
mov edx [ eax ]
push [ edx + 0x20 ]
push eax
call sub_48bc0b
retn 0x4
sub_48b246
jmp r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax 0x80000000
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
j_sub_48b26e
jmp sub_48b26e
sub_48b2b3
mov eax r--data
retn
sub_48b37b
push esi
mov esi ecx
call sub_48b397
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_48b417
push esi
mov esi ecx
call sub_4904f9
add eax 0x1070
push sub_490144
mov ecx eax
call sub_492f51
push esi
lea ecx [ eax + 0x8 ]
call sub_492ac6
pop esi
retn
sub_48b43b
push esi
mov esi ecx
call sub_4904f9
add eax 0x1070
push sub_490144
mov ecx eax
call sub_492f51
push esi
lea ecx [ eax + 0x8 ]
call sub_492ad9
pop esi
retn
sub_48b520
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_48b52c
push esi
mov esi ecx
call sub_478ca1
mov ecx [ esi + 0x68 ]
pop esi
test ecx ecx
je r-xdata
retn 0x4
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x6c ]
sub_48b656
mov eax [ ecx + 0x8c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
sub_48bbfc
mov eax [ esp + 0x4 ]
push [ eax ]
push eax
call sub_48bc0b
retn 0x4
sub_48c563
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
push 0x3e1
push [ esp + 0x10 ]
call [ PostMessageA@IAT ]
xor eax eax
retn 0x8
sub_48c57e
mov eax [ ecx + 0x98 ]
retn
sub_48c5df
mov eax [ ecx + 0x98 ]
test eax eax
je r-xdata
call sub_478ca1
mov ecx eax
call sub_47be0f
jmp r-xdata
retn 0x4
sub_48c5fa
call sub_48c57e
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x3c ]
retn
sub_48c705
push esi
mov esi ecx
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_478ca1
pop esi
retn 0x4
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x78 ]
sub_48c9f9
test [ ecx + 0x24 ] 0x40
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
retn 0x8
sub_48cae1
lea eax [ ecx + 0x4c ]
retn 0x8
sub_48cae7
push 0x1
push 0xe801
push [ ecx + 0x1c ]
call sub_47a489
retn
sub_48cb28
push 0x0
push [ esp + 0x8 ]
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x4
sub_48d12f
mov eax [ esp + 0x4 ]
or [ ecx + 0xb8 ] 0x1
mov [ ecx + 0xa8 ] eax
retn 0x4
sub_48d1b2
mov eax ecx
retn
sub_48d31c
push esi
mov esi ecx
call sub_478ca1
cmp [ esp + 0x8 ] 0x1
je r-xdata
pop esi
retn 0xc
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
sub_48d33b
cmp [ ecx + 0x98 ] 0x0
je r-xdata
call sub_478ca1
push 0x1
pop eax
jmp r-xdata
retn 0x4
sub_48d473
push esi
mov esi ecx
call sub_47a2e8
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x6c ]
sub_48d4de
mov eax r-xdata
retn
sub_48d4fe
mov eax r--data
retn
sub_48d553
push esi
mov esi ecx
call sub_48d60a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_48d82d
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_478d3a
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x46c
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x8
sub_48d855
mov eax [ ecx ]
call [ eax + 0xc4 ]
push 0x1
pop eax
retn
sub_48d861
mov eax [ ecx ]
jmp [ eax + 0xc8 ]
sub_48d869
retn
sub_48d86a
lea eax [ ecx + 0x88 ]
xor edx edx
cmp [ eax ] edx
je r-xdata
push edx
call sub_47b0ce
mov [ eax ] edx
jmp r-xdata
push 0x1
pop eax
retn
sub_48d884
push 0x1
call sub_47b0ce
neg eax
sbb eax eax
neg eax
retn
sub_48d892
push 0x1
pop eax
retn
sub_48d896
xor eax eax
retn
sub_48daaa
push [ esp + 0x4 ]
call sub_479601
xor eax eax
retn 0x4
sub_48db29
mov eax r--data
retn
sub_48dc6b
push esi
mov esi ecx
call sub_48dde3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_48e154
cmp [ ecx + 0x1c ] 0x0
jne r-xdata
call sub_42d920
push 0x0
push 0x0
push 0x1304
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
mov eax [ ecx + 0x6c ]
retn
sub_48e176
cmp [ ecx + 0x1c ] 0x0
jne r-xdata
call sub_42d920
push 0x0
push 0x0
push 0x130b
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
call sub_48db2f
mov eax [ eax + 0x1c ]
retn
sub_48e293
cmp [ ecx + 0x84 ] 0x0
mov [ ecx + 0x2c ] 0x2
je r-xdata
jmp sub_478ca1
mov eax [ ecx ]
jmp [ eax + 0x58 ]
sub_48e4c0
push esi
push 0x0
push 0x0
mov esi ecx
push 0x400
call sub_47bc4b
mov ecx esi
call sub_478ca1
pop esi
retn 0x4
sub_48e4dc
mov eax [ ecx ]
call [ eax + 0xc0 ]
retn 0x8
sub_48e558
call sub_48df20
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x365
push [ eax + 0x1c ]
push eax
call sub_478b79
retn 0x8
sub_48e95c
call sub_4904f9
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_48e97b
call sub_4904f9
mov eax [ eax + 0x30 ]
retn
sub_48e984
push rw-data
call sub_483088
push rw-data
call sub_483088
retn
j_sub_48e99e
jmp sub_48e99e
sub_48e99e
push sub_48e984
call sub_46871e
pop ecx
mov [ rw-data ] eax
retn
sub_48e9af
mov eax r--data
retn
sub_48e9ff
push esi
mov esi ecx
call sub_48eb87
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_48fa55
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ecx + 0xc8 ]
mov eax [ eax - 0x8 ]
call sub_478ca1
jmp r-xdata
retn 0x8
sub_48fadf
mov eax sub_48fae5
retn
sub_48fae5
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_48fbc8
mov eax r--data
retn
sub_48fc00
mov eax r--data
retn
sub_48fc46
push esi
mov esi ecx
call j_sub_4793ac
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4673cc
j_sub_4793ac
jmp sub_4793ac
sub_48fc6b
mov eax r--data
retn
sub_48fc71
call sub_48fc7b
jmp sub_48fc8a
sub_48fc7b
push 0x40
push 0x3c
mov ecx rw-data
call sub_4672d9
retn
sub_48fc8a
push sub_48fc96
call sub_46871e
pop ecx
retn
sub_48fc96
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_467301
sub_48fd16
push 0x30
call sub_492b1f
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_48fd2b
push esi
mov esi ecx
call sub_4930db
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
sub_48fe26
mov eax r--data
retn
sub_48fe2c
call sub_48fe36
jmp sub_48fe48
sub_48fe36
push 0xf022
push 0x0
mov ecx rw-data
call sub_466fb4
retn
sub_48fe48
push sub_48fe54
call sub_46871e
pop ecx
retn
sub_48fe54
mov ecx rw-data
jmp sub_466ffa
sub_48fe5e
mov eax r--data
retn
sub_48fe64
call sub_48fe6e
jmp sub_48fe80
sub_48fe6e
push 0xf024
push 0x0
mov ecx rw-data
call sub_467001
retn
sub_48fe80
push sub_48fe8c
call sub_46871e
pop ecx
retn
sub_48fe8c
mov ecx rw-data
jmp sub_467047
sub_48fe96
push 0x10
call sub_47c3b5
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_47fbe7
retn
sub_48fead
mov eax r--data
retn
sub_48feb3
mov eax r--data
retn
sub_48feb9
mov eax r--data
retn
sub_48febf
mov eax r--data
retn
sub_48fec5
push 0x8
call sub_47c3b5
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_48fedf
mov eax r--data
retn
sub_48fee5
mov eax r--data
retn
sub_48feeb
mov eax r--data
retn
sub_48fef1
mov eax r--data
retn
sub_48fef7
mov eax r--data
retn
sub_48fefd
mov eax r--data
retn
sub_48ff29
push esi
mov esi ecx
call j_sub_47fd1c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4673cc
j_sub_47fd1c
jmp sub_47fd1c
sub_48ff4e
mov eax r--data
retn
sub_48ff54
mov ecx rw-data
call sub_46733d
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_48ff70
push esi
mov esi ecx
call sub_48ff90
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4673cc
sub_48ff90
mov eax sub_49a938
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_480765
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_48ffb9
mov eax r--data
retn
sub_48ffbf
call sub_48ffc9
jmp sub_48ffd8
sub_48ffc9
push 0x40
push 0x10
mov ecx rw-data
call sub_4672d9
retn
sub_48ffd8
push sub_48ffe4
call sub_46871e
pop ecx
retn
sub_48ffe4
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_467301
sub_48ffff
call sub_490009
jmp sub_490018
sub_490009
push 0x40
push 0x8
mov ecx rw-data
call sub_4672d9
retn
sub_490018
push sub_490024
call sub_46871e
pop ecx
retn
sub_490024
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_467301
sub_49003f
mov eax r--data
retn
sub_490045
mov eax r--data
retn
sub_49004b
mov eax r--data
retn
sub_490051
mov eax r--data
retn
sub_490057
mov eax r--data
retn
sub_49005d
mov eax r--data
retn
sub_490063
mov eax r--data
retn
sub_490069
mov eax r--data
retn
sub_4900b3
push esi
mov esi ecx
call sub_496813
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_49013e
mov eax r--data
retn
sub_490175
push 0x4
call sub_492b1f
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_49018a
push esi
mov esi ecx
call sub_49311c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
sub_4901a5
mov eax r--data
retn
sub_4901ab
mov eax r--data
retn
sub_4901b1
call sub_4901bb
jmp sub_4901cd
sub_4901bb
push 0xf023
push 0x0
mov ecx rw-data
call sub_467146
retn
sub_4901cd
push sub_4901d9
call sub_46871e
pop ecx
retn
sub_4901d9
mov ecx rw-data
jmp sub_46718c
sub_4901e3
mov eax r--data
retn
sub_4901e9
call sub_4901f3
jmp sub_490205
sub_4901f3
push 0xf021
push 0x0
mov ecx rw-data
call sub_467193
retn
sub_490205
push sub_490211
call sub_46871e
pop ecx
retn
sub_490211
mov ecx rw-data
jmp sub_4671d9
sub_49021b
mov eax r--data
retn
sub_490221
mov eax ecx
or [ eax + 0xd4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov [ eax ] r--data
retn
sub_490238
push esi
mov esi ecx
call sub_490253
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
sub_4902c7
push sub_48fcb1
mov ecx rw-data
call sub_492f51
retn
sub_4902d7
call sub_4902e1
jmp sub_4902e2
sub_4902e1
retn
sub_4902e2
push sub_4902ee
call sub_46871e
pop ecx
retn
sub_4902ee
mov ecx rw-data
jmp j_sub_492ff5
sub_49035b
push esi
mov esi ecx
call sub_490376
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
j_sub_492ff5
jmp sub_492ff5
sub_4903f0
mov eax ecx
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
mov [ eax ] r--data
mov [ eax + 0xc ] 0x54
mov [ eax + 0x28 ] sub_47c39b
retn
sub_49040f
push esi
mov esi ecx
call sub_49042a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
sub_4904d8
call sub_4904e2
jmp sub_4904e3
sub_4904e2
retn
sub_4904e3
push r-xdata
call sub_46871e
pop ecx
retn
sub_49051f
call sub_4904f9
add eax 0x1070
push sub_490144
mov ecx eax
call sub_492f51
retn
sub_490593
push esi
mov esi ecx
call j_sub_490376
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
j_sub_490376
jmp sub_490376
sub_4905b3
push 0x8
call sub_47c3b5
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_4905cd
mov eax r--data
retn
sub_4905d3
mov ecx rw-data
call sub_46733d
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_4905ef
push esi
mov esi ecx
call sub_49060f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4673cc
sub_49060f
mov eax sub_49acd4
call sub_469294
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_47e4db
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_490638
mov eax r--data
retn
sub_49063e
call sub_490648
jmp sub_490657
sub_490648
push 0x40
push 0x8
mov ecx rw-data
call sub_4672d9
retn
sub_490657
push sub_490663
call sub_46871e
pop ecx
retn
sub_490663
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_467301
sub_4906b3
mov eax r--data
retn
sub_4906ee
mov eax r--data
retn
sub_490729
mov eax r--data
retn
sub_49072f
mov eax r--data
retn
sub_490735
mov eax r--data
retn
sub_49073b
mov eax r--data
retn
sub_490741
mov eax r--data
retn
sub_490747
call sub_490751
jmp sub_490752
sub_490751
retn
sub_490752
push r-xdata
call sub_46871e
pop ecx
retn
sub_490768
push 0x44
call sub_492b1f
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_475d7e
retn
sub_49077e
mov eax r--data
retn
sub_4909f4
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_490a04
retn 0x8
sub_490ad6
mov ecx [ ecx + 0x80 ]
jmp sub_4923d5
sub_490ae1
push 0x14
call sub_47c3b5
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_47711c
retn
sub_490af8
mov eax rw-data
retn
j_sub_490b03
jmp sub_490b03
sub_490b03
push rw-data
call sub_47e572
retn
sub_490b5a
mov eax [ esp + 0x4 ]
mov [ ecx + 0x40 ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0x48 ] eax
mov eax [ esp + 0xc ]
mov [ ecx + 0x44 ] eax
mov eax [ esp + 0x10 ]
mov [ ecx + 0x4c ] eax
retn 0x10
sub_490c1a
retn 0x8
sub_490c56
mov eax r--data
retn
sub_490c5c
mov eax r--data
retn
sub_490c62
push 0x8
call sub_47c3b5
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_47671e
retn
sub_490c79
mov eax r--data
retn
sub_490ca5
push esi
mov esi ecx
call j_sub_476747
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4673cc
j_sub_476747
jmp sub_476747
sub_490cca
mov eax r--data
retn
sub_490cd0
call sub_490cda
jmp sub_490ce9
sub_490cda
push 0x40
push 0x8
mov ecx rw-data
call sub_4672d9
retn
sub_490ce9
push sub_490cf5
call sub_46871e
pop ecx
retn
sub_490cf5
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_467301
sub_490d10
mov eax r--data
retn
sub_490d16
mov eax r--data
retn
sub_490e6c
push esi
mov esi ecx
call sub_490e88
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_49135d
mov eax r--data
retn
sub_4913a0
push esi
mov esi ecx
call sub_4913bc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4913f7
push [ esp + 0xc ]
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
call sub_49140d
retn 0xc
sub_49147d
cmp [ rw-data ] 0x0
je r-xdata
push [ esp + 0x4 ]
call sub_490b79
retn 0x4
mov eax [ ecx + 0x64 ]
mov edx eax
and edx 0xff00
cmp edx 0x8200
jne r-xdata
and ax 0xf07f
mov [ ecx + 0x64 ] eax
sub_4917f3
mov eax r--data
retn
sub_4917f9
mov eax r--data
retn
sub_491834
mov eax r--data
retn
sub_491bee
push 0x14
call sub_47c3b5
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_477674
retn
sub_491c05
mov eax rw-data
retn
j_sub_491c10
jmp sub_491c10
sub_491c10
push rw-data
call sub_47e572
retn
sub_491c1b
mov eax ecx
mov [ eax ] r--data
retn
sub_491c24
push esi
mov esi ecx
call sub_496862
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
sub_491d29
push esi
mov esi ecx
call sub_491ff4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_491d85
push 0x1
pop eax
retn
sub_491e1b
push esi
mov esi ecx
call sub_491e37
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_492190
mov eax r--data
retn
sub_492196
call sub_4921a0
jmp sub_4921a1
sub_4921a0
retn
sub_4921a1
push r-xdata
call sub_46871e
pop ecx
retn
sub_4921b7
mov eax r--data
retn
sub_4923b9
push esi
mov esi ecx
call sub_4968b2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_492a79
mov eax r--data
retn
sub_492ab4
mov eax r--data
retn
sub_492aba
mov eax r--data
retn
sub_492ac0
mov eax r--data
retn
sub_492ac6
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx ]
mov [ edx + eax ] esi
mov [ ecx ] eax
pop esi
retn 0x4
sub_492b1f
push esi
push [ esp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn 0x4
call sub_475d4c
sub_492b3d
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
sub_492e43
push esi
mov esi ecx
call sub_492e5e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
sub_492e5e
retn
sub_493093
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_492ef8
sub_4930ad
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec [ rw-data ]
jne r-xdata
retn
call sub_492b93
and [ rw-data ] 0x0
sub_4930d5
mov eax r--data
retn
sub_493152
call sub_49315c
jmp sub_49315d
sub_49315c
retn
sub_49315d
push sub_493169
call sub_46871e
pop ecx
retn
sub_493169
mov ecx rw-data
jmp j_sub_492ff5
sub_493173
call sub_49317d
jmp sub_49317e
sub_49317d
retn
sub_49317e
push sub_49318a
call sub_46871e
pop ecx
retn
sub_493199
call sub_4931a3
jmp sub_4931ad
sub_4931a3
mov ecx rw-data
jmp sub_493215
sub_4931ad
push sub_4931b9
call sub_46871e
pop ecx
retn
sub_4931b9
mov ecx rw-data
jmp sub_49691d
sub_4931f3
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ rw-data ] eax
call esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
pop esi
retn
sub_4932d3
jmp r-xdata
call sub_4932b0
mov [ rw-data ] eax
retn
sub_4933e6
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_4935dd
mov eax r--data
retn
sub_4935e3
call sub_4935ed
jmp sub_4935ee
sub_4935ed
retn
sub_4935ee
push r-xdata
call sub_46871e
pop ecx
retn
sub_4936b4
push 0xc
call sub_492b1f
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_4936d2
push esi
mov esi ecx
call sub_4936ed
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_492b3d
sub_4936ed
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call [ GlobalFree@IAT ]
retn
sub_4936fd
mov eax r--data
retn
sub_493738
mov eax r--data
retn
sub_49373e
mov eax r--data
retn
sub_493744
mov eax r--data
retn
sub_49374a
mov eax r--data
retn
j_sub_47801b
jmp sub_47801b
sub_493ab7
mov eax ecx
xor ecx ecx
mov [ eax ] 0xe900
mov [ eax + 0x8 ] 0x2
mov [ eax + 0x10 ] sub_493ad9
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
retn
sub_493ad9
mov ecx [ esp + 0x4 ]
push 0xe900
call sub_47bb2c
mov ecx eax
call sub_493f80
xor eax eax
retn 0x4
sub_493af3
mov eax r--data
retn
sub_493b9c
push esi
mov esi ecx
call sub_493bbb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_493bb8
mov eax ecx
retn
sub_494716
cmp [ ecx + 0xec ] 0x0
je r-xdata
retn 0xc
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_482b17
sub_49485d
mov eax [ ecx + 0xf4 ]
push 0x1
inc eax
push eax
call sub_494b72
retn
sub_49486d
mov eax [ ecx + 0xf4 ]
push 0x1
dec eax
push eax
call sub_494b72
retn
sub_49487d
call sub_493f80
call sub_47ccf5
mov eax [ eax + 0x1c ]
push 0x0
push 0xe107
push 0x111
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
sub_4949a8
mov edx [ esp + 0x4 ]
lea eax [ ecx + 0xec ]
cmp [ eax ] edx
je r-xdata
retn 0x10
push [ esp + 0x10 ]
mov [ eax ] edx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_494a03
sub_494dc1
mov eax ecx
push ebx
mov ecx [ esp + 0x8 ]
xor ebx ebx
cmp [ eax + 0xec ] 0x2
mov edx [ ecx ]
setne bl
push ebx
call [ edx ]
pop ebx
retn 0x4
sub_494ddd
push ebx
mov eax ecx
mov ecx [ esp + 0x8 ]
xor ebx ebx
cmp [ eax + 0xec ] ebx
mov edx [ ecx ]
setne bl
push ebx
call [ edx ]
pop ebx
retn 0x4
sub_494ef6
push esi
mov esi ecx
push sub_48fce5
mov ecx rw-data
call sub_493013
mov ecx esi
mov [ eax + 0xc ] 0x1
call sub_478722
pop esi
retn
sub_4956c6
mov [ ecx ] r--data
jmp sub_47801b
sub_4956d1
push esi
mov esi ecx
call sub_4956c6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_49595b
push esi
mov esi ecx
call sub_495a05
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_47c3de
pop ecx
sub_4959c6
push esi
mov esi ecx
push [ esi + 0x18 ]
push [ esi + 0x4 ]
call [ RestoreDC@IAT ]
mov ecx esi
call sub_47fd6b
pop esi
retn
sub_496285
xor eax eax
mov edx [ ecx ]
push eax
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
push eax
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ edx + 0x60 ]
retn 0x10
sub_49639a
push [ ebp - 0x14 ]
call sub_47c3de
pop ecx
mov eax r-xdata
retn
sub_49649a
push [ ebp + 0x18 ]
call sub_47c3de
mov eax [ ebp + 0x8 ]
pop ecx
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov eax sub_4964b3
retn
sub_4964b3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x20
sub_49650d
push [ esp + 0x10 ]
mov eax [ ecx ]
push [ esp + 0x10 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call [ eax + 0x5c ]
retn 0x20
sub_496722
mov eax [ esp + 0x4 ]
mov [ ecx + 0x20 ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0x24 ] eax
call sub_4966b8
retn 0x8
sub_49688f
call sub_47ccf5
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ PostQuitMessage@IAT ]
retn 0x4
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_49691d
add ecx 0x50
push ecx
call sub_483088
retn
sub_4969e0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_4969e9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_417408
retn
sub_4969f5
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_430e03
retn
sub_496a04
mov eax r--data
jmp sub_4675d5
sub_496a0e
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_496a17
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_417408
retn
sub_496a23
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_430e03
retn
sub_496a32
mov ecx [ ebp - 0x10 ]
add ecx 0x164
call sub_401380
retn
sub_496a41
mov eax r--data
jmp sub_4675d5
sub_496a50
mov ecx [ ebp - 0x10 ]
call sub_401340
retn
sub_496a59
mov eax r--data
jmp sub_4675d5
sub_496a70
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_496a79
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a1c5
retn
sub_496a85
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_47c674
retn
sub_496a94
mov eax r--data
jmp sub_4675d5
sub_496aa0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_496aa9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a1c5
retn
sub_496ab5
mov eax r--data
jmp sub_4675d5
sub_496ac0
mov ecx [ ebp - 0x114 ]
call sub_47801b
retn
sub_496acc
mov ecx [ ebp - 0x114 ]
add ecx 0x5c
call sub_48a0bf
retn
sub_496adb
mov ecx [ ebp - 0x114 ]
add ecx 0x98
call sub_48a1c5
retn
sub_496aed
mov ecx [ ebp - 0x114 ]
add ecx 0xd4
call sub_48a0bf
retn
sub_496aff
mov ecx [ ebp - 0x114 ]
add ecx 0x110
call sub_48a0bf
retn
sub_496b11
mov ecx [ ebp - 0x114 ]
add ecx 0x150
call sub_47c674
retn
sub_496b23
mov ecx [ ebp - 0x114 ]
add ecx 0x154
call sub_47c674
retn
sub_496b35
mov ecx [ ebp - 0x114 ]
add ecx 0x15c
call sub_47c674
retn
sub_496b47
mov eax r--data
jmp sub_4675d5
sub_496b51
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_496b5a
mov eax r--data
jmp sub_4675d5
sub_496b64
lea ecx [ ebp - 0x208 ]
call sub_4026e0
retn
sub_496b70
lea ecx [ ebp - 0x20c ]
call sub_47c674
retn
sub_496b7c
mov eax r--data
jmp sub_4675d5
sub_496b90
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_496b99
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a0bf
retn
sub_496ba5
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_48a1c5
retn
sub_496bb4
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_48a0bf
retn
sub_496bc3
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_48a0bf
retn
sub_496bd2
mov ecx [ ebp - 0x10 ]
add ecx 0x150
call sub_47c674
retn
sub_496be1
mov ecx [ ebp - 0x10 ]
add ecx 0x154
call sub_47c674
retn
sub_496bf0
mov eax r--data
jmp sub_4675d5
sub_496c00
mov ecx [ ebp - 0x10 ]
call sub_402730
retn
sub_496c09
mov eax r--data
jmp sub_4675d5
sub_496c20
mov ecx [ ebp - 0x10 ]
call sub_402b00
retn
sub_496c29
mov eax r--data
jmp sub_4675d5
sub_496c40
lea ecx [ ebp - 0x84 ]
call sub_47c674
retn
sub_496c4c
lea ecx [ ebp - 0x80 ]
call sub_47d56a
retn
sub_496c55
lea ecx [ ebp - 0x34 ]
call sub_403680
retn
sub_496c5e
lea ecx [ ebp - 0x64 ]
call sub_40daba
retn
sub_496c67
lea ecx [ ebp - 0x48 ]
call sub_41b22c
retn
sub_496c70
lea ecx [ ebp - 0x70 ]
call sub_47c674
retn
sub_496c79
mov eax r--data
jmp sub_4675d5
sub_496c90
mov eax [ ebp - 0x1c ]
push eax
call sub_47c3de
pop ecx
retn
sub_496c9b
mov eax r--data
jmp sub_4675d5
sub_496cb0
mov ecx [ ebp - 0x10 ]
call sub_403630
retn
sub_496cb9
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_47c674
retn
sub_496cc5
mov eax r--data
jmp sub_4675d5
sub_496cd0
mov ecx [ ebp - 0x10 ]
call sub_403630
retn
sub_496cd9
mov eax r--data
jmp sub_4675d5
sub_496cf0
mov ecx [ ebp - 0x10 ]
call sub_4793ac
retn
sub_496cf9
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_47fd1c
retn
sub_496d05
mov ecx [ ebp - 0x10 ]
add ecx 0x58
call sub_4050c0
retn
sub_496d11
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_4050c0
retn
sub_496d1d
mov eax r--data
jmp sub_4675d5
sub_496d27
mov ecx [ ebp - 0x14 ]
call sub_4793ac
retn
sub_496d30
mov ecx [ ebp - 0x14 ]
add ecx 0x44
call sub_47fd1c
retn
sub_496d3c
mov ecx [ ebp - 0x14 ]
add ecx 0x58
call sub_4050c0
retn
sub_496d48
mov ecx [ ebp - 0x14 ]
add ecx 0x60
call sub_4050c0
retn
sub_496d54
mov eax r--data
jmp sub_4675d5
sub_496d5e
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_496d67
mov eax r--data
jmp sub_4675d5
sub_496d71
lea ecx [ ebp - 0x7c ]
call sub_480640
retn
sub_496d7a
lea ecx [ ebp - 0x18 ]
call sub_405020
retn
sub_496d83
mov eax r--data
jmp sub_4675d5
sub_496d8d
lea ecx [ ebp - 0x54 ]
call sub_4804d8
retn
sub_496d96
mov eax r--data
jmp sub_4675d5
sub_496da0
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_496da9
mov eax r--data
jmp sub_4675d5
sub_496db3
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_496dbc
mov eax r--data
jmp sub_4675d5
sub_496dc6
lea ecx [ ebp - 0x18 ]
call sub_405340
retn
sub_496dcf
mov eax r--data
jmp sub_4675d5
sub_496dd9
lea ecx [ ebp - 0x20 ]
call sub_47fd1c
retn
sub_496de2
mov eax r--data
jmp sub_4675d5
sub_496dec
lea ecx [ ebp - 0x38 ]
call sub_41b22c
retn
sub_496df5
lea ecx [ ebp - 0x48 ]
call sub_405020
retn
sub_496dfe
mov eax r--data
jmp sub_4675d5
sub_496e10
mov ecx [ ebp - 0x10 ]
call sub_401340
retn
sub_496e19
mov eax r--data
jmp sub_4675d5
sub_496e30
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_496e3a
mov eax r--data
jmp sub_4675d5
sub_496e44
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_496e4d
mov eax r--data
jmp sub_4675d5
sub_496e57
lea ecx [ ebp - 0x94 ]
call sub_401380
retn
sub_496e63
lea ecx [ ebp - 0xa8 ]
call sub_47fd1c
retn
sub_496e6f
mov eax r--data
jmp sub_4675d5
sub_496e79
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_496e82
mov eax r--data
jmp sub_4675d5
sub_496e90
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_496e99
mov eax r--data
jmp sub_4675d5
sub_496eb0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_496eb9
mov eax r--data
jmp sub_4675d5
sub_496ed0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_496ed9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_496ee5
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_416fa3
retn
sub_496ef4
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_47c674
retn
sub_496f03
mov eax r--data
jmp sub_4675d5
sub_496f10
lea ecx [ ebp - 0x2c ]
call sub_405020
retn
sub_496f19
mov eax r--data
jmp sub_4675d5
sub_496f30
lea ecx [ ebp - 0x28 ]
call sub_405020
retn
sub_496f39
lea ecx [ ebp - 0x30 ]
call sub_47c674
retn
sub_496f42
mov eax r--data
jmp sub_4675d5
sub_496f50
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_496f5a
mov eax r--data
jmp sub_4675d5
sub_496f64
mov ecx [ ebp - 0x20 ]
call sub_48d60a
retn
sub_496f6d
mov ecx [ ebp - 0x20 ]
add ecx 0x8c
call sub_48a0bf
retn
sub_496f7c
mov ecx [ ebp - 0x20 ]
add ecx 0xc8
call sub_4061f3
retn
sub_496f8b
mov ecx [ ebp - 0x20 ]
add ecx 0x114
call sub_4061f3
retn
sub_496f9a
mov ecx [ ebp - 0x20 ]
add ecx 0x160
call sub_45fbaf
retn
sub_496fa9
mov ecx [ ebp - 0x20 ]
add ecx 0x19c
call sub_4080bd
retn
sub_496fb8
mov ecx [ ebp - 0x20 ]
add ecx 0x6ec
call sub_407d50
retn
sub_496fc7
mov eax r--data
jmp sub_4675d5
sub_496fd1
mov ecx [ ebp - 0x1c ]
call sub_48d60a
retn
sub_496fda
mov ecx [ ebp - 0x1c ]
add ecx 0x8c
call sub_48a0bf
retn
sub_496fe9
mov ecx [ ebp - 0x1c ]
add ecx 0xc8
call sub_4061f3
retn
sub_496ff8
mov ecx [ ebp - 0x1c ]
add ecx 0x114
call sub_4061f3
retn
sub_497007
mov ecx [ ebp - 0x1c ]
add ecx 0x160
call sub_45fbaf
retn
sub_497016
mov ecx [ ebp - 0x1c ]
add ecx 0x19c
call sub_4080bd
retn
sub_497025
mov ecx [ ebp - 0x1c ]
add ecx 0x6ec
call sub_407d50
retn
sub_497034
mov eax r--data
jmp sub_4675d5
sub_49703e
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_497047
mov eax r--data
jmp sub_4675d5
sub_497051
lea ecx [ ebp - 0x8c ]
call sub_407d70
retn
sub_49705d
mov eax r--data
jmp sub_4675d5
sub_497067
lea ecx [ ebp - 0x8c ]
call sub_407d70
retn
sub_497073
mov eax r--data
jmp sub_4675d5
sub_49707d
lea ecx [ ebp - 0x160 ]
call sub_407d90
retn
sub_497089
mov eax r--data
jmp sub_4675d5
sub_497093
lea ecx [ ebp - 0x150 ]
call sub_407db0
retn
sub_49709f
lea ecx [ ebp - 0x9c ]
call sub_407d70
retn
sub_4970ab
lea ecx [ ebp - 0xa4 ]
call sub_47c674
retn
sub_4970b7
mov eax r--data
jmp sub_4675d5
sub_4970c1
lea ecx [ ebp - 0x94 ]
call sub_407d70
retn
sub_4970cd
mov eax r--data
jmp sub_4675d5
sub_4970e0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_4970e9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_4970f5
mov eax r--data
jmp sub_4675d5
sub_497100
mov ecx [ ebp - 0x10 ]
call sub_489ea7
retn
sub_497109
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_401380
retn
sub_497115
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_405020
retn
sub_497121
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_405020
retn
sub_49712d
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_405020
retn
sub_497139
mov ecx [ ebp - 0x10 ]
add ecx 0x45c
call sub_407d50
retn
sub_497148
mov eax r--data
jmp sub_4675d5
sub_497152
mov ecx [ ebp - 0x10 ]
call sub_489ea7
retn
sub_49715b
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_401380
retn
sub_497167
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_405020
retn
sub_497173
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_405020
retn
sub_49717f
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_405020
retn
sub_49718b
mov ecx [ ebp - 0x10 ]
add ecx 0x45c
call sub_407d50
retn
sub_49719a
mov eax r--data
jmp sub_4675d5
sub_4971a4
lea ecx [ ebp - 0x98 ]
call sub_4804d8
retn
sub_4971b0
mov eax r--data
jmp sub_4675d5
sub_4971ba
lea ecx [ ebp - 0x74 ]
call sub_480640
retn
sub_4971c3
lea ecx [ ebp - 0xa4 ]
call sub_47c674
retn
sub_4971cf
lea ecx [ ebp - 0xcc ]
call sub_47c674
retn
sub_4971db
mov eax r--data
jmp sub_4675d5
sub_4971f0
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_4971f9
mov eax r--data
jmp sub_4675d5
sub_497210
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497219
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_412232
retn
sub_497225
mov eax r--data
jmp sub_4675d5
sub_49722f
push sub_40a170
push 0x3
push 0x10
lea eax [ ebp - 0x5c ]
push eax
call sub_467e54
retn
sub_497242
lea ecx [ ebp - 0x80 ]
call sub_47c674
retn
sub_49724b
lea ecx [ ebp - 0x70 ]
call sub_47714f
retn
sub_497254
mov eax r--data
jmp sub_4675d5
sub_497260
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497269
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_412232
retn
sub_497275
mov eax r--data
jmp sub_4675d5
sub_497280
mov ecx [ ebp - 0x30 ]
call sub_484220
retn
sub_497289
mov eax r--data
jmp sub_4675d5
sub_497293
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49729c
mov eax r--data
jmp sub_4675d5
sub_4972b0
mov ecx [ ebp - 0x18 ]
call sub_40a3dd
retn
sub_4972b9
mov eax r--data
jmp sub_4675d5
sub_4972c3
mov eax [ ebp - 0x18 ]
push eax
call sub_401240
retn
sub_4972cd
mov eax r--data
jmp sub_4675d5
sub_4972e0
mov ecx [ ebp - 0x10 ]
call sub_40a3dd
retn
sub_4972e9
mov eax r--data
jmp sub_4675d5
sub_4972f3
mov ecx [ ebp - 0x18 ]
call sub_40a3dd
retn
sub_4972fc
mov ecx [ ebp - 0x18 ]
add ecx 0xd4
call sub_401380
retn
sub_49730b
mov eax r--data
jmp sub_4675d5
sub_497315
mov eax [ ebp - 0x54 ]
push eax
call sub_401240
retn
sub_49731f
mov eax r--data
jmp sub_4675d5
sub_497330
mov ecx [ ebp - 0x10 ]
call sub_40a3dd
retn
sub_497339
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_46174e
retn
sub_497348
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_40d370
retn
sub_497357
mov ecx [ ebp - 0x10 ]
add ecx 0x1d0
call sub_40d3e0
retn
sub_497366
mov eax r--data
jmp sub_4675d5
sub_497370
mov ecx [ ebp - 0x14 ]
call sub_40a3dd
retn
sub_497379
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
call sub_46174e
retn
sub_497388
mov ecx [ ebp - 0x14 ]
add ecx 0xec
call sub_40d370
retn
sub_497397
mov ecx [ ebp - 0x14 ]
add ecx 0x1d0
call sub_40d3e0
retn
sub_4973a6
mov ecx [ ebp - 0x14 ]
add ecx 0x22c
call sub_437746
retn
sub_4973b5
mov eax r--data
jmp sub_4675d5
sub_4973bf
push sub_40a170
push 0x3
push 0x10
lea eax [ ebp - 0x40 ]
push eax
call sub_467e54
retn
sub_4973d2
mov eax r--data
jmp sub_4675d5
sub_4973dc
lea ecx [ ebp - 0x38 ]
call sub_47c674
retn
sub_4973e5
mov eax r--data
jmp sub_4675d5
sub_4973ef
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4973f8
mov eax r--data
jmp sub_4675d5
sub_497410
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497419
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489ea7
retn
sub_497425
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_48a0bf
retn
sub_497434
mov eax r--data
jmp sub_4675d5
sub_497440
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_49744a
mov eax r--data
jmp sub_4675d5
sub_497454
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49745d
mov ecx [ ebp - 0x10 ]
add ecx 0x90
call sub_47c674
retn
sub_49746c
mov eax r--data
jmp sub_4675d5
sub_497476
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49747f
mov eax r--data
jmp sub_4675d5
sub_497489
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_497492
mov eax r--data
jmp sub_4675d5
sub_4974a0
mov ecx [ ebp - 0x10 ]
call sub_40da09
retn
sub_4974a9
mov eax r--data
jmp sub_4675d5
sub_4974b3
mov ecx [ ebp - 0x10 ]
call sub_40da09
retn
sub_4974bc
mov eax r--data
jmp sub_4675d5
sub_4974d0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_4974d9
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_47c674
retn
sub_4974e5
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_4060a0
retn
sub_4974f1
mov eax r--data
jmp sub_4675d5
sub_4974fb
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_497504
mov eax r--data
jmp sub_4675d5
sub_497510
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497519
mov ecx [ ebp - 0x10 ]
add ecx 0x60
call sub_47c674
retn
sub_497525
mov eax r--data
jmp sub_4675d5
sub_497530
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_49753a
mov eax r--data
jmp sub_4675d5
sub_497544
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49754d
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_4765a7
retn
sub_49755c
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_47c674
retn
sub_49756b
mov eax r--data
jmp sub_4675d5
sub_497575
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49757e
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_4765a7
retn
sub_49758d
mov eax r--data
jmp sub_4675d5
sub_497597
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4975a0
mov eax r--data
jmp sub_4675d5
sub_4975aa
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_4975b3
mov eax r--data
jmp sub_4675d5
sub_4975c0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_4975c9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_47c674
retn
sub_4975d5
mov eax r--data
jmp sub_4675d5
sub_4975df
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_4975e8
mov eax r--data
jmp sub_4675d5
sub_4975f2
lea ecx [ ebp - 0x630 ]
call sub_402730
retn
sub_4975fe
lea ecx [ ebp - 0x338 ]
call sub_47c674
retn
sub_49760a
lea ecx [ ebp - 0x634 ]
call sub_47c674
retn
sub_497616
mov eax r--data
jmp sub_4675d5
sub_497620
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_497629
mov eax r--data
jmp sub_4675d5
sub_497640
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497649
mov eax r--data
jmp sub_4675d5
sub_497660
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497669
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a1c5
retn
sub_497675
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_48a1c5
retn
sub_497684
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_47c674
retn
sub_497693
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
call sub_47c674
retn
sub_4976a2
mov eax r--data
jmp sub_4675d5
sub_4976b0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_4976b9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a1c5
retn
sub_4976c5
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_48a1c5
retn
sub_4976d4
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_47c674
retn
sub_4976e3
mov eax r--data
jmp sub_4675d5
sub_4976f0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_4976f9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489f66
retn
sub_497705
mov eax r--data
jmp sub_4675d5
sub_49770f
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497718
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489f66
retn
sub_497724
mov eax r--data
jmp sub_4675d5
sub_49772e
mov eax [ ebp - 0x24 ]
push eax
call sub_47c3de
pop ecx
retn
sub_497739
mov eax r--data
jmp sub_4675d5
sub_497743
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49774c
mov eax r--data
jmp sub_4675d5
sub_497756
mov eax [ ebp - 0x24 ]
push eax
call sub_47c3de
pop ecx
retn
sub_497761
mov eax r--data
jmp sub_4675d5
sub_49776b
lea ecx [ ebp - 0x9ac ]
call sub_42d32c
retn
sub_497777
lea ecx [ ebp - 0xbc ]
call sub_40d661
retn
sub_497783
lea ecx [ ebp - 0x830 ]
call sub_406f57
retn
sub_49778f
lea ecx [ ebp - 0x834 ]
call sub_47c674
retn
sub_49779b
mov eax r--data
jmp sub_4675d5
sub_4977b0
mov ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4977b9
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_47c674
retn
sub_4977c5
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_407d50
retn
sub_4977d1
mov eax r--data
jmp sub_4675d5
sub_4977e0
mov ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4977e9
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_47c674
retn
sub_4977f5
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_407d50
retn
sub_497801
mov eax r--data
jmp sub_4675d5
sub_497810
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_49781a
mov eax r--data
jmp sub_4675d5
sub_497824
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49782d
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a1c5
retn
sub_49783c
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_48a1c5
retn
sub_49784b
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_47c674
retn
sub_49785a
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_47c674
retn
sub_497869
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
call sub_47c674
retn
sub_497878
mov eax r--data
jmp sub_4675d5
sub_497882
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49788b
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a1c5
retn
sub_49789a
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_48a1c5
retn
sub_4978a9
mov ecx [ ebp - 0x10 ]
add ecx 0x10c
call sub_47c674
retn
sub_4978b8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_47c674
retn
sub_4978c7
mov eax r--data
jmp sub_4675d5
sub_4978d1
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_4978da
mov eax r--data
jmp sub_4675d5
sub_4978e4
lea ecx [ ebp - 0x208 ]
call sub_4026e0
retn
sub_4978f0
lea ecx [ ebp - 0x20c ]
call sub_47c674
retn
sub_4978fc
mov eax r--data
jmp sub_4675d5
sub_497906
lea ecx [ ebp - 0x208 ]
call sub_4026e0
retn
sub_497912
lea ecx [ ebp - 0x20c ]
call sub_47c674
retn
sub_49791e
mov eax r--data
jmp sub_4675d5
sub_497930
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497939
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_497945
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
retn
sub_497954
mov eax r--data
jmp sub_4675d5
sub_49795e
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_497967
mov eax r--data
jmp sub_4675d5
sub_497980
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497989
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_497995
mov eax r--data
jmp sub_4675d5
sub_4979a0
mov ecx [ ebp - 0x10 ]
call sub_402730
retn
sub_4979a9
mov ecx [ ebp - 0x10 ]
add ecx 0x1f8
call sub_47c674
retn
sub_4979b8
mov eax r--data
jmp sub_4675d5
sub_4979c2
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4979cb
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_4979d4
mov eax [ ebp - 0x18 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
call sub_47c674
sub_4979eb
mov eax r--data
jmp sub_4675d5
sub_497a00
lea ecx [ ebp - 0x50 ]
call sub_47c674
retn
sub_497a09
mov eax [ ebp - 0x54 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
call sub_47c674
sub_497a20
mov eax r--data
jmp sub_4675d5
sub_497a2a
lea ecx [ ebp - 0x50 ]
call sub_47c674
retn
sub_497a33
mov eax [ ebp - 0x54 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
call sub_47c674
sub_497a4a
mov eax r--data
jmp sub_4675d5
sub_497a60
mov ecx [ ebp - 0x10 ]
call sub_4793ac
retn
sub_497a69
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_42f243
retn
sub_497a75
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_48a21e
retn
sub_497a84
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_48a21e
retn
sub_497a93
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_40e0ef
retn
sub_497aa2
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
call sub_4770ef
retn
sub_497ab1
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_4770ef
retn
sub_497ac0
mov ecx [ ebp - 0x10 ]
add ecx 0x1b0
call sub_401380
retn
sub_497acf
mov eax r--data
jmp sub_4675d5
sub_497ad9
mov ecx [ ebp - 0x14 ]
call sub_4793ac
retn
sub_497ae2
mov ecx [ ebp - 0x14 ]
add ecx 0x3c
call sub_42f243
retn
sub_497aee
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
call sub_48a21e
retn
sub_497afd
mov ecx [ ebp - 0x14 ]
add ecx 0x104
call sub_48a21e
retn
sub_497b0c
mov ecx [ ebp - 0x14 ]
add ecx 0x140
call sub_40e0ef
retn
sub_497b1b
mov ecx [ ebp - 0x14 ]
add ecx 0x17c
call sub_4770ef
retn
sub_497b2a
mov ecx [ ebp - 0x14 ]
add ecx 0x190
call sub_4770ef
retn
sub_497b39
mov ecx [ ebp - 0x14 ]
add ecx 0x1b0
call sub_401380
retn
sub_497b48
mov eax r--data
jmp sub_4675d5
sub_497b52
mov eax [ ebp - 0x90 ]
push eax
call sub_47c3de
pop ecx
retn
sub_497b60
mov eax r--data
jmp sub_4675d5
sub_497b6a
lea ecx [ ebp - 0xc0 ]
call sub_480640
retn
sub_497b76
lea ecx [ ebp - 0xcc ]
call sub_416d00
retn
sub_497b82
lea ecx [ ebp - 0x14 ]
call sub_405020
retn
sub_497b8b
lea ecx [ ebp - 0x100 ]
call sub_416d00
retn
sub_497b97
lea ecx [ ebp - 0x11c ]
call sub_47c674
retn
sub_497ba3
lea ecx [ ebp - 0x190 ]
call sub_47c674
retn
sub_497baf
lea ecx [ ebp - 0x1a4 ]
call sub_47c674
retn
sub_497bbb
lea ecx [ ebp - 0x168 ]
call sub_405020
retn
sub_497bc7
mov eax r--data
jmp sub_4675d5
sub_497bd1
mov eax [ ebp - 0x24 ]
push eax
call sub_47c3de
pop ecx
retn
sub_497bdc
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_497be5
mov eax r--data
jmp sub_4675d5
sub_497bef
mov eax [ ebp - 0x20 ]
push eax
call sub_47c3de
pop ecx
retn
sub_497bfa
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_497c03
mov eax r--data
jmp sub_4675d5
sub_497c0d
lea ecx [ ebp - 0x34 ]
call sub_4804d8
retn
sub_497c16
mov eax r--data
jmp sub_4675d5
sub_497c20
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_497c29
mov eax r--data
jmp sub_4675d5
sub_497c33
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_497c3c
mov eax [ ebp - 0x18 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
call sub_47c674
sub_497c53
mov eax r--data
jmp sub_4675d5
sub_497c5d
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_497c66
mov eax r--data
jmp sub_4675d5
sub_497c70
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_497c79
mov eax r--data
jmp sub_4675d5
sub_497c83
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_497c8c
mov eax r--data
jmp sub_4675d5
sub_497ca0
mov ecx [ ebp - 0x10 ]
call sub_489ea7
retn
sub_497ca9
mov ecx [ ebp - 0x10 ]
add ecx 0x58
call sub_47c674
retn
sub_497cb5
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_401380
retn
sub_497cc1
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_4768bf
retn
sub_497ccd
mov eax r--data
jmp sub_4675d5
sub_497cd7
mov ecx [ ebp - 0x10 ]
call sub_489ea7
retn
sub_497ce0
mov ecx [ ebp - 0x10 ]
add ecx 0x58
call sub_47c674
retn
sub_497cec
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_401380
retn
sub_497cf8
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_4768bf
retn
sub_497d04
mov eax r--data
jmp sub_4675d5
sub_497d0e
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_497d17
mov eax r--data
jmp sub_4675d5
sub_497d21
lea ecx [ ebp + 0x8 ]
call sub_47c674
retn
sub_497d2a
mov eax r--data
jmp sub_4675d5
sub_497d34
lea ecx [ ebp - 0x30 ]
call sub_47c674
retn
sub_497d3d
mov eax r--data
jmp sub_4675d5
sub_497d47
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_497d50
mov eax r--data
jmp sub_4675d5
sub_497d5a
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_497d63
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_497d6c
mov eax r--data
jmp sub_4675d5
sub_497d80
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497d89
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_497d95
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
retn
sub_497da4
mov eax r--data
jmp sub_4675d5
sub_497dae
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_497db7
mov eax r--data
jmp sub_4675d5
sub_497dc1
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_497dca
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_497dd3
mov eax r--data
jmp sub_4675d5
sub_497de0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_497de9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_497df5
mov eax r--data
jmp sub_4675d5
sub_497e00
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_497e09
mov eax r--data
jmp sub_4675d5
sub_497e13
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_497e1c
lea ecx [ ebp - 0x10 ]
call sub_409527
retn
sub_497e25
mov eax r--data
jmp sub_4675d5
sub_497e2f
lea ecx [ ebp - 0x10 ]
call sub_409527
retn
sub_497e38
mov eax r--data
jmp sub_4675d5
sub_497e50
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_497e5a
mov eax r--data
jmp sub_4675d5
sub_497e64
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_497e6d
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
call sub_4196e0
retn
sub_497e7c
mov eax r--data
jmp sub_4675d5
sub_497e86
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_497e8f
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_497e98
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_497ea1
mov eax r--data
jmp sub_4675d5
sub_497eab
lea ecx [ ebp - 0x10 ]
call sub_419717
retn
sub_497eb4
mov eax r--data
jmp sub_4675d5
sub_497ebe
lea ecx [ ebp - 0x378 ]
call sub_402730
retn
sub_497eca
lea ecx [ ebp - 0x7c ]
call sub_47c674
retn
sub_497ed3
lea ecx [ ebp - 0x78 ]
call sub_47c674
retn
sub_497edc
lea ecx [ ebp - 0x74 ]
call sub_47d56a
retn
sub_497ee5
lea ecx [ ebp - 0x30 ]
call sub_403680
retn
sub_497eee
lea ecx [ ebp - 0x38c ]
call sub_403680
retn
sub_497efa
lea ecx [ ebp - 0x64 ]
call sub_47c674
retn
sub_497f03
lea ecx [ ebp - 0x3a0 ]
call sub_403680
retn
sub_497f0f
mov eax r--data
jmp sub_4675d5
sub_497f19
lea ecx [ ebp - 0x20 ]
call sub_42aa27
retn
sub_497f22
mov eax r--data
jmp sub_4675d5
sub_497f2c
lea ecx [ ebp - 0x20 ]
call sub_42aa27
retn
sub_497f35
mov eax r--data
jmp sub_4675d5
sub_497f3f
lea ecx [ ebp - 0x370 ]
call sub_402730
retn
sub_497f4b
lea ecx [ ebp - 0x74 ]
call sub_47c674
retn
sub_497f54
lea ecx [ ebp - 0x70 ]
call sub_47c674
retn
sub_497f5d
lea ecx [ ebp - 0x6c ]
call sub_47d56a
retn
sub_497f66
lea ecx [ ebp - 0x24 ]
call sub_403680
retn
sub_497f6f
lea ecx [ ebp - 0x384 ]
call sub_403680
retn
sub_497f7b
lea ecx [ ebp - 0x398 ]
call sub_403680
retn
sub_497f87
lea ecx [ ebp - 0x3ac ]
call sub_403680
retn
sub_497f93
lea ecx [ ebp - 0x3c4 ]
call sub_403680
retn
sub_497f9f
lea ecx [ ebp - 0x3d8 ]
call sub_403680
retn
sub_497fab
mov eax r--data
jmp sub_4675d5
sub_497fc0
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_497fc9
mov eax r--data
jmp sub_4675d5
sub_497fe0
mov eax [ ebp - 0x1c ]
push eax
call sub_47c3de
pop ecx
retn
sub_497feb
mov eax r--data
jmp sub_4675d5
sub_498000
mov eax [ ebp - 0x1c ]
push eax
call sub_47c3de
pop ecx
retn
sub_49800b
mov eax r--data
jmp sub_4675d5
sub_498020
mov ecx [ ebp - 0x50 ]
call sub_428830
retn
sub_498029
mov ecx [ ebp - 0x50 ]
add ecx 0xc0
call sub_4913bc
retn
sub_498038
mov ecx [ ebp - 0x50 ]
add ecx 0x13c
call sub_490e88
retn
sub_498047
mov ecx [ ebp - 0x50 ]
add ecx 0x1d8
call sub_40b9c7
retn
sub_498056
mov ecx [ ebp - 0x50 ]
add ecx 0x2b8
call sub_40b68c
retn
sub_498065
mov ecx [ ebp - 0x50 ]
add ecx 0x390
call sub_40be54
retn
sub_498074
mov ecx [ ebp - 0x50 ]
add ecx 0x83c
call sub_401380
retn
sub_498083
push sub_47c674
push 0x2
push 0x4
mov eax [ ebp - 0x50 ]
add eax 0x844
push eax
call sub_467e54
retn
sub_49809b
mov ecx [ ebp - 0x50 ]
add ecx 0xb40
call sub_47c674
retn
sub_4980aa
mov ecx [ ebp - 0x50 ]
add ecx 0xb44
call sub_47c674
retn
sub_4980b9
mov ecx [ ebp - 0x50 ]
add ecx 0xba0
call sub_4770ef
retn
sub_4980c8
mov ecx [ ebp - 0x50 ]
add ecx 0xbb4
call sub_4770ef
retn
sub_4980d7
mov ecx [ ebp - 0x50 ]
add ecx 0xbc8
call sub_4770ef
retn
sub_4980e6
mov ecx [ ebp - 0x50 ]
add ecx 0xbdc
call sub_47714f
retn
sub_4980f5
push sub_4774f7
push 0xf
push 0x14
mov eax [ ebp - 0x50 ]
add eax 0xbf0
push eax
call sub_467e54
retn
sub_49810d
mov eax r--data
jmp sub_4675d5
sub_498117
mov ecx [ ebp - 0x58 ]
call sub_428830
retn
sub_498120
mov ecx [ ebp - 0x58 ]
add ecx 0xc0
call sub_4913bc
retn
sub_49812f
mov ecx [ ebp - 0x58 ]
add ecx 0x13c
call sub_490e88
retn
sub_49813e
mov ecx [ ebp - 0x58 ]
add ecx 0x1d8
call sub_40b9c7
retn
sub_49814d
mov ecx [ ebp - 0x58 ]
add ecx 0x2b8
call sub_40b68c
retn
sub_49815c
mov ecx [ ebp - 0x58 ]
add ecx 0x390
call sub_40be54
retn
sub_49816b
mov ecx [ ebp - 0x58 ]
add ecx 0x83c
call sub_401380
retn
sub_49817a
push sub_47c674
push 0x2
push 0x4
mov eax [ ebp - 0x58 ]
add eax 0x844
push eax
call sub_467e54
retn
sub_498192
mov ecx [ ebp - 0x58 ]
add ecx 0xb40
call sub_47c674
retn
sub_4981a1
mov ecx [ ebp - 0x58 ]
add ecx 0xb44
call sub_47c674
retn
sub_4981b0
mov ecx [ ebp - 0x58 ]
add ecx 0xba0
call sub_4770ef
retn
sub_4981bf
mov ecx [ ebp - 0x58 ]
add ecx 0xbb4
call sub_4770ef
retn
sub_4981ce
mov ecx [ ebp - 0x58 ]
add ecx 0xbc8
call sub_4770ef
retn
sub_4981dd
mov ecx [ ebp - 0x58 ]
add ecx 0xbdc
call sub_47714f
retn
sub_4981ec
push sub_4774f7
push 0xf
push 0x14
mov eax [ ebp - 0x58 ]
add eax 0xbf0
push eax
call sub_467e54
retn
sub_498204
mov eax r--data
jmp sub_4675d5
sub_49820e
lea ecx [ ebp - 0x20 ]
call sub_46412e
retn
sub_498217
mov eax r--data
jmp sub_4675d5
sub_498221
lea ecx [ ebp - 0x64 ]
call sub_47c674
retn
sub_49822a
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_498233
lea ecx [ ebp - 0x98 ]
call sub_47c674
retn
sub_49823f
lea ecx [ ebp - 0xac ]
call sub_47c674
retn
sub_49824b
lea ecx [ ebp - 0xb0 ]
call sub_47c674
retn
sub_498257
lea ecx [ ebp - 0xd0 ]
call sub_47c674
retn
sub_498263
lea ecx [ ebp - 0xd4 ]
call sub_47c674
retn
sub_49826f
lea ecx [ ebp - 0x94 ]
call sub_42aa27
retn
sub_49827b
lea ecx [ ebp - 0xec ]
call sub_47c674
retn
sub_498287
mov eax [ ebp - 0xf4 ]
push eax
call sub_47c3de
pop ecx
retn
sub_498295
lea ecx [ ebp - 0xf8 ]
call sub_47c674
retn
sub_4982a1
lea ecx [ ebp - 0xfc ]
call sub_47c674
retn
sub_4982ad
lea ecx [ ebp - 0x100 ]
call sub_47c674
retn
sub_4982b9
mov eax [ ebp - 0x10c ]
push eax
call sub_47c3de
pop ecx
retn
sub_4982c7
mov eax r--data
jmp sub_4675d5
sub_4982d1
lea ecx [ ebp - 0x70 ]
call sub_47c674
retn
sub_4982da
lea ecx [ ebp - 0x6c ]
call sub_47c674
retn
sub_4982e3
lea ecx [ ebp - 0x98 ]
call sub_47c674
retn
sub_4982ef
lea ecx [ ebp - 0x7c ]
call sub_47c674
retn
sub_4982f8
lea ecx [ ebp - 0x180 ]
call sub_47c674
retn
sub_498304
mov eax r--data
jmp sub_4675d5
sub_49830e
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498317
mov eax r--data
jmp sub_4675d5
sub_498321
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49832a
mov eax r--data
jmp sub_4675d5
sub_498334
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49833d
mov eax r--data
jmp sub_4675d5
sub_498347
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498350
mov eax r--data
jmp sub_4675d5
sub_49835a
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498363
mov eax r--data
jmp sub_4675d5
sub_49836d
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_498376
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49837f
mov eax r--data
jmp sub_4675d5
sub_498389
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498392
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_49839b
mov eax r--data
jmp sub_4675d5
sub_4983a5
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4983ae
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_4983b7
mov eax r--data
jmp sub_4675d5
sub_4983c1
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4983ca
mov eax r--data
jmp sub_4675d5
sub_4983d4
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4983dd
mov eax r--data
jmp sub_4675d5
sub_4983e7
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_4983f0
mov eax r--data
jmp sub_4675d5
sub_4983fa
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498403
mov eax r--data
jmp sub_4675d5
sub_49840d
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498416
mov eax r--data
jmp sub_4675d5
sub_498420
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498429
mov eax r--data
jmp sub_4675d5
sub_498433
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49843c
mov eax r--data
jmp sub_4675d5
sub_498446
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49844f
mov eax r--data
jmp sub_4675d5
sub_498459
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498462
mov eax r--data
jmp sub_4675d5
sub_49846c
lea ecx [ ebp - 0x10 ]
call sub_419717
retn
sub_498475
mov eax r--data
jmp sub_4675d5
sub_49847f
lea ecx [ ebp - 0x10 ]
call sub_46412e
retn
sub_498488
mov eax r--data
jmp sub_4675d5
sub_498492
lea ecx [ ebp - 0x14 ]
call sub_46412e
retn
sub_49849b
mov eax r--data
jmp sub_4675d5
sub_4984a5
push sub_4774f7
push 0xf
push 0x14
lea eax [ ebp - 0xaa8 ]
push eax
call sub_467e54
retn
sub_4984bb
lea ecx [ ebp - 0xd04 ]
call sub_48dde3
retn
sub_4984c7
lea ecx [ ebp - 0x5f4 ]
call sub_40e4cb
retn
sub_4984d3
lea ecx [ ebp - 0xc7c ]
call sub_465978
retn
sub_4984df
lea ecx [ ebp - 0xbd4 ]
call sub_410355
retn
sub_4984eb
lea ecx [ ebp - 0x2e4 ]
call sub_428950
retn
sub_4984f7
lea ecx [ ebp - 0x4f8 ]
call sub_41b110
retn
sub_498503
lea ecx [ ebp - 0x780 ]
call sub_42acf8
retn
sub_49850f
lea ecx [ ebp - 0x97c ]
call sub_428a20
retn
sub_49851b
lea ecx [ ebp - 0x12c ]
call sub_428ac0
retn
sub_498527
mov eax r--data
jmp sub_4675d5
sub_498531
lea ecx [ ebp - 0x70 ]
call sub_40ef60
retn
sub_49853a
lea ecx [ ebp - 0x74 ]
call sub_47c674
retn
sub_498543
mov eax r--data
jmp sub_4675d5
sub_49854d
lea ecx [ ebp - 0x74 ]
call sub_428b40
retn
sub_498556
mov eax r--data
jmp sub_4675d5
sub_498560
lea ecx [ ebp - 0x25c ]
call sub_402620
retn
sub_49856c
lea ecx [ ebp - 0x42c ]
call sub_45feb7
retn
sub_498578
lea ecx [ ebp - 0x428 ]
call sub_47714f
retn
sub_498584
mov eax [ ebp - 0x434 ]
push eax
call sub_401240
retn
sub_498591
mov eax r--data
jmp sub_4675d5
sub_49859b
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_4985a4
mov eax r--data
jmp sub_4675d5
sub_4985ae
lea ecx [ ebp - 0x14 ]
call sub_41877e
retn
sub_4985b7
lea ecx [ ebp - 0x20 ]
call sub_40942e
retn
sub_4985c0
mov eax r--data
jmp sub_4675d5
sub_4985ca
lea ecx [ ebp - 0x30 ]
call sub_40942e
retn
sub_4985d3
mov eax r--data
jmp sub_4675d5
sub_4985dd
lea ecx [ ebp - 0xc8 ]
call sub_40f2c0
retn
sub_4985e9
mov eax r--data
jmp sub_4675d5
sub_4985f3
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_4985fc
mov eax r--data
jmp sub_4675d5
sub_498606
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49860f
mov eax r--data
jmp sub_4675d5
sub_498619
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_498622
mov eax r--data
jmp sub_4675d5
sub_49862c
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_498635
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_49863e
lea ecx [ ebp - 0x30 ]
call sub_47c674
retn
sub_498647
mov eax r--data
jmp sub_4675d5
sub_498651
lea ecx [ ebp - 0x118 ]
call sub_47c674
retn
sub_49865d
lea ecx [ ebp - 0x114 ]
call sub_47c674
retn
sub_498669
mov eax r--data
jmp sub_4675d5
sub_498673
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_49867c
mov eax r--data
jmp sub_4675d5
sub_498690
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_498699
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a1c5
retn
sub_4986a8
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_48a1c5
retn
sub_4986b7
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_48a1c5
retn
sub_4986c6
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_48a1c5
retn
sub_4986d5
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_47c674
retn
sub_4986e4
mov ecx [ ebp - 0x10 ]
add ecx 0x194
call sub_47c674
retn
sub_4986f3
mov ecx [ ebp - 0x10 ]
add ecx 0x198
call sub_47c674
retn
sub_498702
mov eax r--data
jmp sub_4675d5
sub_498710
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_498719
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a0bf
retn
sub_498728
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_46423f
retn
sub_498737
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_46423f
retn
sub_498746
mov ecx [ ebp - 0x10 ]
add ecx 0x154
call sub_476747
retn
sub_498755
mov eax r--data
jmp sub_4675d5
sub_498760
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_498769
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_489f66
retn
sub_498778
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_489f66
retn
sub_498787
mov eax r--data
jmp sub_4675d5
sub_4987a0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_4987a9
mov eax r--data
jmp sub_4675d5
sub_4987c0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_4987c9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_40675f
retn
sub_4987d5
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_416fa3
retn
sub_4987e4
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
call sub_47c674
retn
sub_4987f3
mov eax r--data
jmp sub_4675d5
sub_4987fd
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_498806
mov eax r--data
jmp sub_4675d5
sub_498810
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498819
mov eax r--data
jmp sub_4675d5
sub_498823
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49882c
mov eax r--data
jmp sub_4675d5
sub_498840
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498849
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_40675f
retn
sub_498855
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_416fa3
retn
sub_498864
mov eax r--data
jmp sub_4675d5
sub_498870
mov ecx [ ebp - 0x10 ]
call sub_4776a7
retn
sub_498879
mov eax r--data
jmp sub_4675d5
sub_498883
mov ecx [ ebp - 0x10 ]
call sub_4776a7
retn
sub_49888c
mov ecx [ ebp - 0x10 ]
add ecx 0x14
call sub_4774f7
retn
sub_498898
mov eax r--data
jmp sub_4675d5
sub_4988b0
mov ecx [ ebp - 0x10 ]
call sub_489f66
retn
sub_4988b9
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_4774f7
retn
sub_4988c5
mov eax r--data
jmp sub_4675d5
sub_4988cf
mov ecx [ ebp - 0x10 ]
call sub_489f66
retn
sub_4988d8
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_4774f7
retn
sub_4988e4
mov eax r--data
jmp sub_4675d5
sub_4988ee
lea ecx [ ebp - 0x1c ]
call sub_405020
retn
sub_4988f7
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_498900
mov eax r--data
jmp sub_4675d5
sub_498910
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498919
mov eax r--data
jmp sub_4675d5
sub_498923
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_49892c
mov eax r--data
jmp sub_4675d5
sub_498936
lea ecx [ ebp - 0x114 ]
call sub_429310
retn
sub_498942
lea ecx [ ebp - 0x128 ]
call sub_47c674
retn
sub_49894e
mov eax r--data
jmp sub_4675d5
sub_498958
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_498961
mov eax r--data
jmp sub_4675d5
sub_49896b
lea ecx [ ebp - 0x124 ]
call sub_429310
retn
sub_498977
lea ecx [ ebp - 0x134 ]
call sub_47c674
retn
sub_498983
mov eax r--data
jmp sub_4675d5
sub_498990
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498999
mov eax r--data
jmp sub_4675d5
sub_4989b0
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_4989ba
mov eax r--data
jmp sub_4675d5
sub_4989c4
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_4989cd
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_489f66
retn
sub_4989dc
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_489f66
retn
sub_4989eb
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_48a0bf
retn
sub_4989fa
mov eax r--data
jmp sub_4675d5
sub_498a04
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_498a0d
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_489f66
retn
sub_498a1c
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_489f66
retn
sub_498a2b
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_48a0bf
retn
sub_498a3a
mov eax r--data
jmp sub_4675d5
sub_498a44
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_498a4d
mov eax r--data
jmp sub_4675d5
sub_498a57
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_498a60
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_498a69
mov eax r--data
jmp sub_4675d5
sub_498a73
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_498a7c
mov eax r--data
jmp sub_4675d5
sub_498a86
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_498a8f
lea ecx [ ebp - 0x10 ]
call sub_409527
retn
sub_498a98
mov eax r--data
jmp sub_4675d5
sub_498aa2
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_498aab
mov eax r--data
jmp sub_4675d5
sub_498ab5
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_498abe
mov eax r--data
jmp sub_4675d5
sub_498ac8
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_498ad1
mov eax r--data
jmp sub_4675d5
sub_498adb
lea ecx [ ebp - 0xc8 ]
call sub_401630
retn
sub_498ae7
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_498af0
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_498af9
mov eax r--data
jmp sub_4675d5
sub_498b03
lea ecx [ ebp - 0x2c ]
call sub_409527
retn
sub_498b0c
lea ecx [ ebp - 0x3c ]
call sub_47c674
retn
sub_498b15
mov eax r--data
jmp sub_4675d5
sub_498b1f
lea ecx [ ebp - 0xc0 ]
call sub_401630
retn
sub_498b2b
lea ecx [ ebp - 0xcc ]
call sub_47c674
retn
sub_498b37
lea ecx [ ebp - 0xc8 ]
call sub_47c674
retn
sub_498b43
mov eax r--data
jmp sub_4675d5
sub_498b50
lea ecx [ ebp - 0x18 ]
call sub_405340
retn
sub_498b59
mov eax r--data
jmp sub_4675d5
sub_498b63
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_498b6c
mov eax r--data
jmp sub_4675d5
sub_498b80
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498b89
mov eax r--data
jmp sub_4675d5
sub_498ba0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498ba9
mov eax r--data
jmp sub_4675d5
sub_498bc0
mov ecx [ ebp - 0x10 ]
call sub_48dde3
retn
sub_498bc9
mov eax r--data
jmp sub_4675d5
sub_498bd3
mov ecx [ ebp - 0x10 ]
call sub_48dde3
retn
sub_498bdc
mov eax r--data
jmp sub_4675d5
sub_498be6
mov ecx [ ebp - 0x10 ]
call sub_48dde3
retn
sub_498bef
mov eax r--data
jmp sub_4675d5
sub_498bf9
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_498c02
mov eax r--data
jmp sub_4675d5
sub_498c10
lea ecx [ ebp + 0x8 ]
call sub_47c674
retn
sub_498c19
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498c22
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489ea7
retn
sub_498c2e
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
retn
sub_498c3d
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
call sub_47c674
retn
sub_498c4c
mov eax r--data
jmp sub_4675d5
sub_498c56
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498c5f
mov eax r--data
jmp sub_4675d5
sub_498c69
lea ecx [ ebp - 0x154 ]
call sub_47c674
retn
sub_498c75
mov eax r--data
jmp sub_4675d5
sub_498c80
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498c89
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489ea7
retn
sub_498c95
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
retn
sub_498ca4
mov eax r--data
jmp sub_4675d5
sub_498cb0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498cb9
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_47c674
retn
sub_498cc5
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_47c674
retn
sub_498cd1
mov eax r--data
jmp sub_4675d5
sub_498cdb
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_498ce4
mov eax r--data
jmp sub_4675d5
sub_498cf0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498cf9
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_47c674
retn
sub_498d05
mov eax r--data
jmp sub_4675d5
sub_498d10
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_498d19
mov eax r--data
jmp sub_4675d5
sub_498d30
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_498d3a
mov eax r--data
jmp sub_4675d5
sub_498d44
mov ecx [ ebp - 0x10 ]
call sub_496813
retn
sub_498d4d
mov eax r--data
jmp sub_4675d5
sub_498d57
mov ecx [ ebp - 0x10 ]
call sub_496813
retn
sub_498d60
mov eax r--data
jmp sub_4675d5
sub_498d70
mov ecx [ ebp - 0x10 ]
call sub_4793ac
retn
sub_498d79
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
call sub_476643
retn
sub_498d85
mov eax r--data
jmp sub_4675d5
sub_498d8f
mov ecx [ ebp - 0x10 ]
call sub_4793ac
retn
sub_498d98
mov eax r--data
jmp sub_4675d5
sub_498db0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498db9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a0bf
retn
sub_498dc5
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_47c674
retn
sub_498dd4
mov eax r--data
jmp sub_4675d5
sub_498dde
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_498de7
mov eax r--data
jmp sub_4675d5
sub_498e00
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498e09
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_48a0bf
retn
sub_498e15
mov eax r--data
jmp sub_4675d5
sub_498e20
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498e29
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_498e35
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
retn
sub_498e44
mov eax r--data
jmp sub_4675d5
sub_498e50
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498e59
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_498e65
mov eax r--data
jmp sub_4675d5
sub_498e70
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_498e79
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_498e85
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_416fa3
retn
sub_498e94
mov ecx [ ebp - 0x10 ]
add ecx 0xec
call sub_47c674
retn
sub_498ea3
mov ecx [ ebp - 0x10 ]
add ecx 0xf0
call sub_47c674
retn
sub_498eb2
mov eax r--data
jmp sub_4675d5
sub_498ebc
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_498ec5
mov eax r--data
jmp sub_4675d5
sub_498ed0
lea ecx [ ebp - 0x84 ]
call sub_480640
retn
sub_498edc
lea ecx [ ebp - 0x14 ]
call sub_405020
retn
sub_498ee5
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_498eee
mov eax r--data
jmp sub_4675d5
sub_498f00
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_498f0a
mov eax r--data
jmp sub_4675d5
sub_498f14
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_498f1d
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_489f66
retn
sub_498f2c
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_489f66
retn
sub_498f3b
mov eax r--data
jmp sub_4675d5
sub_498f50
mov ecx [ ebp - 0x10 ]
call sub_491ff4
retn
sub_498f59
mov eax r--data
jmp sub_4675d5
sub_498f63
lea ecx [ ebp - 0x84 ]
call sub_47c674
retn
sub_498f6f
lea ecx [ ebp - 0xb0 ]
call sub_491e37
retn
sub_498f7b
mov eax [ ebp - 0xd4 ]
push eax
call sub_401240
retn
sub_498f88
mov eax [ ebp - 0xdc ]
push eax
call sub_401240
retn
sub_498f95
lea ecx [ ebp - 0x54 ]
call sub_47c674
retn
sub_498f9e
lea ecx [ ebp - 0x88 ]
call sub_47c674
retn
sub_498faa
lea ecx [ ebp - 0x50 ]
call sub_491e37
retn
sub_498fb3
lea ecx [ ebp - 0x24 ]
call sub_47714f
retn
sub_498fbc
lea ecx [ ebp - 0xb8 ]
call sub_47c674
retn
sub_498fc8
lea ecx [ ebp - 0xc8 ]
call sub_47c674
retn
sub_498fd4
lea ecx [ ebp - 0xc0 ]
call sub_47c674
retn
sub_498fe0
mov eax r--data
jmp sub_4675d5
sub_498fea
lea ecx [ ebp - 0x178 ]
call sub_40107f
retn
sub_498ff6
mov eax r--data
jmp sub_4675d5
sub_499000
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499009
mov eax r--data
jmp sub_4675d5
sub_499013
lea ecx [ ebp - 0x134 ]
call sub_47d56a
retn
sub_49901f
mov eax r--data
jmp sub_4675d5
sub_499029
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_499032
mov eax r--data
jmp sub_4675d5
sub_49903c
lea ecx [ ebp - 0x34 ]
call sub_47714f
retn
sub_499045
lea ecx [ ebp - 0x3c ]
call sub_47c674
retn
sub_49904e
mov eax r--data
jmp sub_4675d5
sub_499058
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_499062
mov eax r--data
jmp sub_4675d5
sub_49906c
mov eax [ ebp - 0x14 ]
push eax
call sub_47c3de
pop ecx
retn
sub_499077
mov eax r--data
jmp sub_4675d5
sub_499090
mov ecx [ ebp - 0x10 ]
call sub_491ff4
retn
sub_499099
mov eax r--data
jmp sub_4675d5
sub_4990b0
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_4990ba
mov eax r--data
jmp sub_4675d5
sub_4990c4
mov ecx [ ebp - 0x10 ]
call sub_480ba4
retn
sub_4990cd
mov ecx [ ebp - 0x10 ]
add ecx 0x50
call sub_47d56a
retn
sub_4990d9
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_40daba
retn
sub_4990e5
mov ecx [ ebp - 0x10 ]
add ecx 0x88
call sub_4770ef
retn
sub_4990f4
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_4770ef
retn
sub_499103
mov ecx [ ebp - 0x10 ]
add ecx 0x748
call sub_4293d7
retn
sub_499112
mov eax r--data
jmp sub_4675d5
sub_49911c
mov ecx [ ebp - 0x10 ]
call sub_480ba4
retn
sub_499125
mov ecx [ ebp - 0x10 ]
add ecx 0x50
call sub_47d56a
retn
sub_499131
mov ecx [ ebp - 0x10 ]
add ecx 0x68
call sub_40daba
retn
sub_49913d
mov ecx [ ebp - 0x10 ]
add ecx 0x88
call sub_4770ef
retn
sub_49914c
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
call sub_4770ef
retn
sub_49915b
mov eax r--data
jmp sub_4675d5
sub_499165
lea ecx [ ebp - 0x15c ]
call sub_47c674
retn
sub_499171
lea ecx [ ebp - 0x158 ]
call sub_47c674
retn
sub_49917d
lea ecx [ ebp - 0x14c ]
call sub_403680
retn
sub_499189
lea ecx [ ebp - 0x130 ]
call sub_47c674
retn
sub_499195
mov eax r--data
jmp sub_4675d5
sub_49919f
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_4991a8
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_4991b1
mov eax r--data
jmp sub_4675d5
sub_4991bb
lea ecx [ ebp - 0x150 ]
call sub_47c674
retn
sub_4991c7
lea ecx [ ebp - 0x30 ]
call sub_403680
retn
sub_4991d0
mov eax r--data
jmp sub_4675d5
sub_4991da
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_4991e3
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_4991ec
lea ecx [ ebp - 0x168 ]
call sub_47c674
retn
sub_4991f8
lea ecx [ ebp - 0x178 ]
call sub_47d56a
retn
sub_499204
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49920d
mov eax r--data
jmp sub_4675d5
sub_499217
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_499220
mov eax r--data
jmp sub_4675d5
sub_49922a
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499233
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49923c
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_499245
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_49924e
mov eax r--data
jmp sub_4675d5
sub_499258
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499261
mov eax r--data
jmp sub_4675d5
sub_49926b
lea ecx [ ebp - 0x20 ]
call sub_41b22c
retn
sub_499274
mov eax r--data
jmp sub_4675d5
sub_49927e
lea ecx [ ebp - 0x20 ]
call sub_41b22c
retn
sub_499287
mov eax r--data
jmp sub_4675d5
sub_499291
lea ecx [ ebp - 0x20 ]
call sub_41b22c
retn
sub_49929a
mov eax r--data
jmp sub_4675d5
sub_4992a4
lea ecx [ ebp - 0x20 ]
call sub_41b22c
retn
sub_4992ad
mov eax r--data
jmp sub_4675d5
sub_4992b7
lea ecx [ ebp - 0x28 ]
call sub_41b22c
retn
sub_4992c0
mov eax r--data
jmp sub_4675d5
sub_4992ca
lea ecx [ ebp - 0x28 ]
call sub_41b22c
retn
sub_4992d3
mov eax r--data
jmp sub_4675d5
sub_4992dd
lea ecx [ ebp - 0x20 ]
call sub_41b22c
retn
sub_4992e6
mov eax r--data
jmp sub_4675d5
sub_4992f0
lea ecx [ ebp - 0x28 ]
call sub_41b22c
retn
sub_4992f9
mov eax r--data
jmp sub_4675d5
sub_499303
lea ecx [ ebp - 0x28 ]
call sub_41b22c
retn
sub_49930c
mov eax r--data
jmp sub_4675d5
sub_499316
lea ecx [ ebp - 0x28 ]
call sub_41b22c
retn
sub_49931f
mov eax r--data
jmp sub_4675d5
sub_499329
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499332
mov eax r--data
jmp sub_4675d5
sub_49933c
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499345
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_49934e
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_499357
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_499360
mov eax r--data
jmp sub_4675d5
sub_49936a
lea ecx [ ebp - 0x14c ]
call sub_47c674
retn
sub_499376
lea ecx [ ebp - 0x144 ]
call sub_403680
retn
sub_499382
mov eax r--data
jmp sub_4675d5
sub_49938c
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499395
mov eax r--data
jmp sub_4675d5
sub_49939f
lea ecx [ ebp - 0x308 ]
call sub_47c674
retn
sub_4993ab
mov eax r--data
jmp sub_4675d5
sub_4993b5
lea ecx [ ebp - 0x1c ]
call sub_41b22c
retn
sub_4993be
mov eax r--data
jmp sub_4675d5
sub_4993d0
lea ecx [ ebp - 0x208 ]
call sub_402730
retn
sub_4993dc
lea ecx [ ebp - 0x518 ]
call sub_47c674
retn
sub_4993e8
lea ecx [ ebp - 0x514 ]
call sub_47c674
retn
sub_4993f4
lea ecx [ ebp - 0x508 ]
call sub_47c674
retn
sub_499400
lea ecx [ ebp - 0x510 ]
call sub_47c674
retn
sub_49940c
mov eax r--data
jmp sub_4675d5
sub_499420
mov ecx [ ebp - 0x10 ]
call sub_412232
retn
sub_499429
mov eax r--data
jmp sub_4675d5
sub_499433
lea ecx [ ebp - 0xcc ]
call sub_480640
retn
sub_49943f
lea ecx [ ebp - 0xd8 ]
call sub_416d00
retn
sub_49944b
lea ecx [ ebp - 0x74 ]
call sub_416d00
retn
sub_499454
lea ecx [ ebp - 0x100 ]
call sub_416d00
retn
sub_499460
lea ecx [ ebp - 0xf8 ]
call sub_405020
retn
sub_49946c
lea ecx [ ebp - 0x14 ]
call sub_405020
retn
sub_499475
lea ecx [ ebp - 0x11c ]
call sub_416d00
retn
sub_499481
lea ecx [ ebp - 0x13c ]
call sub_47c674
retn
sub_49948d
lea ecx [ ebp - 0x150 ]
call sub_405020
retn
sub_499499
lea ecx [ ebp - 0x218 ]
call sub_47c674
retn
sub_4994a5
lea ecx [ ebp - 0x164 ]
call sub_43ce90
retn
sub_4994b1
lea ecx [ ebp - 0x25c ]
call sub_47c674
retn
sub_4994bd
lea ecx [ ebp - 0x1a0 ]
call sub_43ce90
retn
sub_4994c9
lea ecx [ ebp - 0x1f0 ]
call sub_405020
retn
sub_4994d5
mov eax r--data
jmp sub_4675d5
sub_4994df
lea ecx [ ebp - 0x50 ]
call sub_47714f
retn
sub_4994e8
mov eax r--data
jmp sub_4675d5
sub_4994f2
lea ecx [ ebp - 0x50 ]
call sub_47714f
retn
sub_4994fb
mov eax r--data
jmp sub_4675d5
sub_499505
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_49950e
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499517
lea ecx [ ebp - 0x20 ]
call sub_45feb7
retn
sub_499520
mov eax r--data
jmp sub_4675d5
sub_49952a
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_499533
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_49953c
mov eax r--data
jmp sub_4675d5
sub_499546
mov eax [ ebp - 0x24 ]
push eax
call sub_47c3de
pop ecx
retn
sub_499551
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_49955a
mov eax r--data
jmp sub_4675d5
sub_499564
mov eax [ ebp - 0x20 ]
push eax
call sub_47c3de
pop ecx
retn
sub_49956f
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_499578
mov eax r--data
jmp sub_4675d5
sub_499582
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_49958b
mov eax [ ebp - 0x18 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
call sub_47c674
sub_4995a2
mov eax r--data
jmp sub_4675d5
sub_4995ac
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_4995b5
mov eax r--data
jmp sub_4675d5
sub_4995bf
lea ecx [ ebp - 0x20 ]
call sub_405340
retn
sub_4995c8
lea ecx [ ebp - 0x2c ]
call sub_47c674
retn
sub_4995d1
mov eax r--data
jmp sub_4675d5
sub_4995db
lea ecx [ ebp - 0x68 ]
call sub_47c674
retn
sub_4995e4
lea ecx [ ebp - 0x28 ]
call sub_47714f
retn
sub_4995ed
lea ecx [ ebp - 0x74 ]
call sub_45feb7
retn
sub_4995f6
mov eax r--data
jmp sub_4675d5
sub_499600
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_499609
lea ecx [ ebp - 0x28 ]
call sub_45feb7
retn
sub_499612
mov eax r--data
jmp sub_4675d5
sub_49961c
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_499625
mov eax r--data
jmp sub_4675d5
sub_49962f
lea ecx [ ebp - 0x2c ]
call sub_47c674
retn
sub_499638
mov eax r--data
jmp sub_4675d5
sub_499642
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_49964b
lea ecx [ ebp - 0x1c ]
call sub_45feb7
retn
sub_499654
mov eax r--data
jmp sub_4675d5
sub_49965e
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_499667
lea ecx [ ebp - 0x44 ]
call sub_47c674
retn
sub_499670
lea ecx [ ebp - 0x38 ]
call sub_45feb7
retn
sub_499679
mov eax r--data
jmp sub_4675d5
sub_499683
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_49968c
mov eax r--data
jmp sub_4675d5
sub_499696
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49969f
mov eax r--data
jmp sub_4675d5
sub_4996a9
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_4996b2
lea ecx [ ebp - 0x24 ]
call sub_45feb7
retn
sub_4996bb
mov eax r--data
jmp sub_4675d5
sub_4996d0
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_4996da
mov eax r--data
jmp sub_4675d5
sub_4996f0
mov ecx [ ebp - 0x14 ]
call sub_47f19e
retn
sub_4996f9
mov ecx [ ebp - 0x14 ]
add ecx 0x20
call sub_47c674
retn
sub_499705
mov eax r--data
jmp sub_4675d5
sub_49970f
mov ecx [ ebp - 0x14 ]
call sub_47f19e
retn
sub_499718
mov ecx [ ebp - 0x14 ]
add ecx 0x20
call sub_47c674
retn
sub_499724
mov eax r--data
jmp sub_4675d5
sub_49972e
lea ecx [ ebp - 0x118 ]
call sub_47c674
retn
sub_49973a
lea ecx [ ebp - 0x120 ]
call sub_47c674
retn
sub_499746
lea ecx [ ebp - 0x13c ]
call sub_47c674
retn
sub_499752
lea ecx [ ebp - 0x140 ]
call sub_47c674
retn
sub_49975e
mov eax r--data
jmp sub_4675d5
sub_499768
lea ecx [ ebp - 0x20 ]
call sub_47c674
retn
sub_499771
mov eax r--data
jmp sub_4675d5
sub_49977b
lea ecx [ ebp - 0x30 ]
call sub_47c674
retn
sub_499784
mov eax r--data
jmp sub_4675d5
sub_49978e
mov eax [ ebp - 0x28 ]
push eax
call sub_47c3de
pop ecx
retn
sub_499799
mov eax r--data
jmp sub_4675d5
sub_4997b0
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_4997ba
mov eax r--data
jmp sub_4675d5
sub_4997c4
mov ecx [ ebp - 0x10 ]
call sub_481c6c
retn
sub_4997cd
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_401380
retn
sub_4997d9
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_405020
retn
sub_4997e5
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_405020
retn
sub_4997f1
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_405020
retn
sub_4997fd
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_463603
retn
sub_499809
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_41df4e
retn
sub_499818
mov ecx [ ebp - 0x10 ]
add ecx 0x128
call sub_41df4e
retn
sub_499827
mov ecx [ ebp - 0x10 ]
add ecx 0x134
call sub_41df4e
retn
sub_499836
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_41df4e
retn
sub_499845
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
call sub_4050c0
retn
sub_499854
mov ecx [ ebp - 0x10 ]
add ecx 0x2c8
call sub_47c674
retn
sub_499863
mov eax r--data
jmp sub_4675d5
sub_49986d
mov ecx [ ebp - 0x10 ]
call sub_481c6c
retn
sub_499876
mov ecx [ ebp - 0x10 ]
add ecx 0x44
call sub_401380
retn
sub_499882
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
call sub_405020
retn
sub_49988e
mov ecx [ ebp - 0x10 ]
add ecx 0x54
call sub_405020
retn
sub_49989a
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_405020
retn
sub_4998a6
mov ecx [ ebp - 0x10 ]
add ecx 0x64
call sub_463603
retn
sub_4998b2
mov ecx [ ebp - 0x10 ]
add ecx 0x110
call sub_41df4e
retn
sub_4998c1
mov ecx [ ebp - 0x10 ]
add ecx 0x128
call sub_41df4e
retn
sub_4998d0
mov ecx [ ebp - 0x10 ]
add ecx 0x134
call sub_41df4e
retn
sub_4998df
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_41df4e
retn
sub_4998ee
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
call sub_4050c0
retn
sub_4998fd
mov ecx [ ebp - 0x10 ]
add ecx 0x2c8
call sub_47c674
retn
sub_49990c
mov ecx [ ebp - 0x10 ]
add ecx 0x324
call sub_4770ef
retn
sub_49991b
mov eax r--data
jmp sub_4675d5
sub_499925
lea ecx [ ebp - 0xa0 ]
call sub_4804d8
retn
sub_499931
mov eax r--data
jmp sub_4675d5
sub_49993b
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_499944
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49994d
mov eax r--data
jmp sub_4675d5
sub_499957
lea ecx [ ebp - 0x50 ]
call sub_41b22c
retn
sub_499960
lea ecx [ ebp - 0x19c ]
call sub_43ce90
retn
sub_49996c
mov eax r--data
jmp sub_4675d5
sub_499976
lea ecx [ ebp - 0x98 ]
call sub_416d00
retn
sub_499982
lea ecx [ ebp - 0xa8 ]
call sub_47c674
retn
sub_49998e
mov eax r--data
jmp sub_4675d5
sub_499998
lea ecx [ ebp - 0x64 ]
call sub_41b22c
retn
sub_4999a1
mov eax r--data
jmp sub_4675d5
sub_4999ab
lea ecx [ ebp - 0xc4 ]
call sub_410f30
retn
sub_4999b7
mov eax r--data
jmp sub_4675d5
sub_4999c1
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_4999ca
lea ecx [ ebp - 0x4c ]
call sub_47d56a
retn
sub_4999d3
lea ecx [ ebp - 0x3c ]
call sub_403680
retn
sub_4999dc
lea ecx [ ebp - 0x60 ]
call sub_403680
retn
sub_4999e5
lea ecx [ ebp - 0x74 ]
call sub_403680
retn
sub_4999ee
mov eax r--data
jmp sub_4675d5
sub_4999f8
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_499a01
mov eax r--data
jmp sub_4675d5
sub_499a0b
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_499a14
lea ecx [ ebp - 0x19c ]
call sub_40e070
retn
sub_499a20
mov eax r--data
jmp sub_4675d5
sub_499a2a
lea ecx [ ebp - 0x194 ]
call sub_42d180
retn
sub_499a36
mov eax r--data
jmp sub_4675d5
sub_499a40
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499a49
lea ecx [ ebp - 0x124 ]
call sub_47c674
retn
sub_499a55
mov eax [ ebp - 0x128 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
call sub_47c674
sub_499a6f
mov eax r--data
jmp sub_4675d5
sub_499a79
lea ecx [ ebp - 0x28 ]
call sub_41df4e
retn
sub_499a82
lea ecx [ ebp - 0x3c ]
call sub_41df4e
retn
sub_499a8b
lea ecx [ ebp - 0x60 ]
call sub_41df4e
retn
sub_499a94
mov eax r--data
jmp sub_4675d5
sub_499a9e
lea ecx [ ebp - 0x20 ]
call sub_41df4e
retn
sub_499aa7
mov eax r--data
jmp sub_4675d5
sub_499ab1
lea ecx [ ebp - 0x20 ]
call sub_41df4e
retn
sub_499aba
mov eax r--data
jmp sub_4675d5
sub_499ac4
lea ecx [ ebp - 0x20 ]
call sub_41df4e
retn
sub_499acd
mov eax r--data
jmp sub_4675d5
sub_499ad7
lea ecx [ ebp - 0x20 ]
call sub_41df4e
retn
sub_499ae0
mov eax r--data
jmp sub_4675d5
sub_499aea
lea ecx [ ebp - 0x20 ]
call sub_41df4e
retn
sub_499af3
mov eax r--data
jmp sub_4675d5
sub_499afd
lea ecx [ ebp - 0x20 ]
call sub_41df4e
retn
sub_499b06
mov eax r--data
jmp sub_4675d5
sub_499b10
lea ecx [ ebp - 0x190 ]
call sub_406050
retn
sub_499b1c
mov eax r--data
jmp sub_4675d5
sub_499b26
lea ecx [ ebp - 0xec ]
call sub_45feb7
retn
sub_499b32
lea ecx [ ebp - 0x190 ]
call sub_45feb7
retn
sub_499b3e
mov eax r--data
jmp sub_4675d5
sub_499b48
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_499b52
mov eax r--data
jmp sub_4675d5
sub_499b5c
lea ecx [ ebp - 0x188 ]
call sub_4300f0
retn
sub_499b68
mov eax r--data
jmp sub_4675d5
sub_499b72
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_499b7c
mov eax r--data
jmp sub_4675d5
sub_499b86
lea ecx [ ebp - 0x188 ]
call sub_4305d0
retn
sub_499b92
mov eax r--data
jmp sub_4675d5
sub_499b9c
lea ecx [ ebp - 0x188 ]
call sub_4300f0
retn
sub_499ba8
mov eax r--data
jmp sub_4675d5
sub_499bb2
lea ecx [ ebp - 0x188 ]
call sub_4300f0
retn
sub_499bbe
mov eax r--data
jmp sub_4675d5
sub_499bc8
lea ecx [ ebp - 0x30 ]
call sub_41b22c
retn
sub_499bd1
lea ecx [ ebp - 0x50 ]
call sub_45feb7
retn
sub_499bda
mov eax r--data
jmp sub_4675d5
sub_499be4
lea ecx [ ebp - 0x158 ]
call sub_42ed30
retn
sub_499bf0
mov eax [ ebp - 0x160 ]
push eax
call sub_401240
retn
sub_499bfd
mov eax r--data
jmp sub_4675d5
sub_499c07
lea ecx [ ebp - 0x1bc ]
call sub_45feb7
retn
sub_499c13
lea ecx [ ebp - 0x1c0 ]
call sub_45feb7
retn
sub_499c1f
lea ecx [ ebp - 0xd4 ]
call sub_41b22c
retn
sub_499c2b
lea ecx [ ebp - 0x108 ]
call sub_47c674
retn
sub_499c37
mov eax r--data
jmp sub_4675d5
sub_499c41
lea ecx [ ebp - 0x7c ]
call sub_402b00
retn
sub_499c4a
mov eax r--data
jmp sub_4675d5
sub_499c54
mov eax [ ebp - 0x28 ]
push eax
call sub_401240
retn
sub_499c5e
mov eax [ ebp - 0x38 ]
push eax
call sub_401240
retn
sub_499c68
mov eax r--data
jmp sub_4675d5
sub_499c72
lea ecx [ ebp - 0x40 ]
call sub_41b22c
retn
sub_499c7b
lea ecx [ ebp - 0x24 ]
call sub_41b22c
retn
sub_499c84
mov eax r--data
jmp sub_4675d5
sub_499c8e
lea ecx [ ebp - 0xf4 ]
call sub_42a9c0
retn
sub_499c9a
mov eax r--data
jmp sub_4675d5
sub_499ca4
lea ecx [ ebp - 0x18 ]
call sub_405340
retn
sub_499cad
mov eax r--data
jmp sub_4675d5
sub_499cb7
lea ecx [ ebp - 0x18 ]
call sub_405340
retn
sub_499cc0
mov eax r--data
jmp sub_4675d5
sub_499cca
lea ecx [ ebp - 0x20 ]
call sub_4770ef
retn
sub_499cd3
lea ecx [ ebp - 0x110 ]
call sub_45f4c0
retn
sub_499cdf
mov eax r--data
jmp sub_4675d5
sub_499ce9
lea ecx [ ebp - 0xc4 ]
call sub_418710
retn
sub_499cf5
mov eax r--data
jmp sub_4675d5
sub_499cff
lea ecx [ ebp - 0x38 ]
call sub_41df4e
retn
sub_499d08
lea ecx [ ebp - 0x4c ]
call sub_41df4e
retn
sub_499d11
lea ecx [ ebp - 0x70 ]
call sub_41df4e
retn
sub_499d1a
mov eax r--data
jmp sub_4675d5
sub_499d24
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499d2d
mov eax r--data
jmp sub_4675d5
sub_499d37
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499d40
mov eax r--data
jmp sub_4675d5
sub_499d4a
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499d53
mov eax r--data
jmp sub_4675d5
sub_499d5d
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499d66
mov eax r--data
jmp sub_4675d5
sub_499d70
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499d79
mov eax r--data
jmp sub_4675d5
sub_499d83
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499d8c
mov eax r--data
jmp sub_4675d5
sub_499d96
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499d9f
mov eax r--data
jmp sub_4675d5
sub_499da9
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499db2
mov eax r--data
jmp sub_4675d5
sub_499dbc
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_499dc5
lea ecx [ ebp - 0xbc ]
call sub_42ddd0
retn
sub_499dd1
mov eax r--data
jmp sub_4675d5
sub_499ddb
lea ecx [ ebp - 0x30 ]
call sub_4804d8
retn
sub_499de4
mov eax r--data
jmp sub_4675d5
sub_499dee
lea ecx [ ebp - 0x58 ]
call sub_4804d8
retn
sub_499df7
mov eax r--data
jmp sub_4675d5
sub_499e01
lea ecx [ ebp - 0x34 ]
call sub_4804d8
retn
sub_499e0a
mov eax r--data
jmp sub_4675d5
sub_499e14
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499e1d
mov eax r--data
jmp sub_4675d5
sub_499e27
lea ecx [ ebp - 0x50 ]
call sub_41df4e
retn
sub_499e30
lea ecx [ ebp - 0x6c ]
call sub_41df4e
retn
sub_499e39
mov eax r--data
jmp sub_4675d5
sub_499e43
lea ecx [ ebp - 0x1c ]
call sub_41df4e
retn
sub_499e4c
lea ecx [ ebp - 0x8c ]
call sub_41df4e
retn
sub_499e58
lea ecx [ ebp - 0xa8 ]
call sub_41df4e
retn
sub_499e64
mov eax r--data
jmp sub_4675d5
sub_499e6e
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499e77
mov eax r--data
jmp sub_4675d5
sub_499e81
lea ecx [ ebp + 0xc ]
call sub_41df4e
retn
sub_499e8a
mov eax r--data
jmp sub_4675d5
sub_499e94
lea ecx [ ebp - 0x24 ]
call sub_4804d8
retn
sub_499e9d
lea ecx [ ebp - 0x30 ]
call sub_41df4e
retn
sub_499ea6
mov eax r--data
jmp sub_4675d5
sub_499eb0
lea ecx [ ebp - 0x20 ]
call sub_4804d8
retn
sub_499eb9
mov eax r--data
jmp sub_4675d5
sub_499ec3
lea ecx [ ebp - 0x24 ]
call sub_41df4e
retn
sub_499ecc
lea ecx [ ebp - 0x38 ]
call sub_41df4e
retn
sub_499ed5
mov eax r--data
jmp sub_4675d5
sub_499edf
lea ecx [ ebp - 0x1c ]
call sub_47fd1c
retn
sub_499ee8
mov eax r--data
jmp sub_4675d5
sub_499ef2
lea ecx [ ebp - 0x20 ]
call sub_41b22c
retn
sub_499efb
mov eax r--data
jmp sub_4675d5
sub_499f05
lea ecx [ ebp - 0x2c ]
call sub_41b22c
retn
sub_499f0e
mov eax r--data
jmp sub_4675d5
sub_499f18
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_499f21
mov eax r--data
jmp sub_4675d5
sub_499f2b
lea ecx [ ebp - 0x30 ]
call sub_41b22c
retn
sub_499f34
lea ecx [ ebp - 0x44 ]
call sub_47c674
retn
sub_499f3d
lea ecx [ ebp - 0x40 ]
call sub_45feb7
retn
sub_499f46
mov eax r--data
jmp sub_4675d5
sub_499f50
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_499f59
mov eax r--data
jmp sub_4675d5
sub_499f63
lea ecx [ ebp - 0x140 ]
call sub_45f880
retn
sub_499f6f
mov eax r--data
jmp sub_4675d5
sub_499f79
lea ecx [ ebp - 0x88 ]
call sub_47d56a
retn
sub_499f85
lea ecx [ ebp - 0x2c ]
call sub_403680
retn
sub_499f8e
lea ecx [ ebp - 0x58 ]
call sub_41b22c
retn
sub_499f97
lea ecx [ ebp - 0xa4 ]
call sub_403680
retn
sub_499fa3
lea ecx [ ebp - 0xb8 ]
call sub_403680
retn
sub_499faf
lea ecx [ ebp - 0xcc ]
call sub_403680
retn
sub_499fbb
lea ecx [ ebp - 0xe0 ]
call sub_403680
retn
sub_499fc7
mov eax r--data
jmp sub_4675d5
sub_499fd1
mov eax r--data
jmp sub_4675d5
sub_499fdb
mov eax [ ebp - 0x18 ]
push eax
call sub_47c3de
pop ecx
retn
sub_499fe6
mov eax r--data
jmp sub_4675d5
sub_499ff0
mov eax [ ebp - 0x34 ]
push eax
call sub_401240
retn
sub_499ffa
mov eax r--data
jmp sub_4675d5
sub_49a010
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_49a019
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489f66
retn
sub_49a025
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_489f66
retn
sub_49a034
mov eax r--data
jmp sub_4675d5
sub_49a040
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_49a049
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_429946
retn
sub_49a055
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call sub_416fa3
retn
sub_49a064
mov eax r--data
jmp sub_4675d5
sub_49a070
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_49a079
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_416fa3
retn
sub_49a085
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
call sub_47c674
retn
sub_49a094
mov eax r--data
jmp sub_4675d5
sub_49a0a0
lea ecx [ ebp - 0x20 ]
call sub_405020
retn
sub_49a0a9
lea ecx [ ebp - 0x34 ]
call sub_47c674
retn
sub_49a0b2
mov eax r--data
jmp sub_4675d5
sub_49a0c0
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_49a0c9
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_429946
retn
sub_49a0d5
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
call sub_416fa3
retn
sub_49a0e4
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_47c674
retn
sub_49a0f3
mov eax r--data
jmp sub_4675d5
sub_49a0fd
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49a106
mov eax r--data
jmp sub_4675d5
sub_49a110
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49a119
mov eax r--data
jmp sub_4675d5
sub_49a123
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49a12c
lea ecx [ ebp - 0x38 ]
call sub_47c674
retn
sub_49a135
mov eax r--data
jmp sub_4675d5
sub_49a140
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_49a149
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489ea7
retn
sub_49a155
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_48a0bf
retn
sub_49a164
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
call sub_47c674
retn
sub_49a173
mov eax r--data
jmp sub_4675d5
sub_49a180
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49a189
mov eax r--data
jmp sub_4675d5
sub_49a1a0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_4770ef
retn
sub_49a1ac
mov eax r--data
jmp sub_4675d5
sub_49a1b6
mov ecx [ ebp - 0x10 ]
add ecx 0x4
call sub_4770ef
retn
sub_49a1c2
mov eax r--data
jmp sub_4675d5
sub_49a1cc
lea ecx [ ebp - 0x120 ]
call sub_47c674
retn
sub_49a1d8
mov eax r--data
jmp sub_4675d5
sub_49a1e2
lea ecx [ ebp - 0x18 ]
call sub_47c674
retn
sub_49a1eb
mov eax r--data
jmp sub_4675d5
sub_49a1f5
lea ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49a1fe
mov eax r--data
jmp sub_4675d5
sub_49a208
lea ecx [ ebp - 0x30 ]
call sub_47d56a
retn
sub_49a211
lea ecx [ ebp - 0x7c ]
call sub_403680
retn
sub_49a21a
lea ecx [ ebp - 0x90 ]
call sub_403680
retn
sub_49a226
lea ecx [ ebp - 0x4c ]
call sub_47c674
retn
sub_49a22f
lea ecx [ ebp - 0xa8 ]
call sub_47c674
retn
sub_49a23b
mov eax [ ebp - 0x134 ]
push eax
call sub_47c3de
pop ecx
retn
sub_49a249
lea ecx [ ebp - 0xac ]
call sub_47c674
retn
sub_49a255
lea ecx [ ebp - 0xb0 ]
call sub_47c674
retn
sub_49a261
lea ecx [ ebp - 0xb4 ]
call sub_47c674
retn
sub_49a26d
lea ecx [ ebp - 0xb8 ]
call sub_47c674
retn
sub_49a279
lea ecx [ ebp - 0x13c ]
call sub_47c674
retn
sub_49a285
lea ecx [ ebp - 0xbc ]
call sub_47c674
retn
sub_49a291
lea ecx [ ebp - 0xc0 ]
call sub_47c674
retn
sub_49a29d
lea ecx [ ebp - 0xc4 ]
call sub_47c674
retn
sub_49a2a9
mov eax [ ebp - 0x144 ]
push eax
call sub_47c3de
pop ecx
retn
sub_49a2b7
lea ecx [ ebp - 0xc8 ]
call sub_47c674
retn
sub_49a2c3
lea ecx [ ebp - 0xcc ]
call sub_47c674
retn
sub_49a2cf
lea ecx [ ebp - 0xd0 ]
call sub_47c674
retn
sub_49a2db
lea ecx [ ebp - 0xd4 ]
call sub_47c674
retn
sub_49a2e7
lea ecx [ ebp - 0xd8 ]
call sub_47c674
retn
sub_49a2f3
lea ecx [ ebp - 0xdc ]
call sub_47c674
retn
sub_49a2ff
lea ecx [ ebp - 0xe0 ]
call sub_47c674
retn
sub_49a30b
lea ecx [ ebp - 0xe4 ]
call sub_47c674
retn
sub_49a317
lea ecx [ ebp - 0xe8 ]
call sub_47c674
retn
sub_49a323
lea ecx [ ebp - 0xec ]
call sub_47c674
retn
sub_49a32f
lea ecx [ ebp - 0xf0 ]
call sub_47c674
retn
sub_49a33b
mov eax [ ebp - 0x14c ]
push eax
call sub_47c3de
pop ecx
retn
sub_49a349
lea ecx [ ebp - 0xf8 ]
call sub_47c674
retn
sub_49a355
lea ecx [ ebp - 0xfc ]
call sub_47c674
retn
sub_49a361
lea ecx [ ebp - 0x100 ]
call sub_47c674
retn
sub_49a36d
lea ecx [ ebp - 0x10c ]
call sub_47c674
retn
sub_49a379
mov eax r--data
jmp sub_4675d5
sub_49a390
mov ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49a399
mov eax r--data
jmp sub_4675d5
sub_49a3b0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_47c674
retn
sub_49a3bc
mov eax r--data
jmp sub_4675d5
sub_49a3d0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
call sub_47c674
retn
sub_49a3dc
mov eax r--data
jmp sub_4675d5
sub_49a3f0
mov ecx [ ebp - 0x10 ]
call sub_47c674
retn
sub_49a3f9
mov eax r--data
jmp sub_4675d5
sub_49a410
lea ecx [ ebp - 0x68 ]
call sub_480640
retn
sub_49a419
lea ecx [ ebp - 0x14 ]
call sub_405020
retn
sub_49a422
mov eax r--data
jmp sub_4675d5
sub_49a430
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_49a439
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
call sub_489f66
retn
sub_49a445
mov ecx [ ebp - 0x10 ]
add ecx 0x98
call sub_489f66
retn
sub_49a454
mov eax r--data
jmp sub_4675d5
sub_49a45e
lea ecx [ ebp - 0x24 ]
call sub_47c674
retn
sub_49a467
mov eax [ ebp - 0x44 ]
push eax
call sub_47c3de
pop ecx
retn
sub_49a472
mov eax r--data
jmp sub_4675d5
sub_49a480
lea ecx [ ebp - 0x20 ]
call sub_405020
retn
sub_49a489
mov eax r--data
jmp sub_4675d5
sub_49a4a0
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_49a4aa
mov eax r--data
jmp sub_4675d5
sub_49a4b4
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49a4bd
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a0bf
retn
sub_49a4cc
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_46423f
retn
sub_49a4db
mov ecx [ ebp - 0x10 ]
add ecx 0x108
call sub_46423f
retn
sub_49a4ea
mov ecx [ ebp - 0x10 ]
add ecx 0x154
call sub_476747
retn
sub_49a4f9
mov eax r--data
jmp sub_4675d5
sub_49a503
lea ecx [ ebp - 0x14 ]
call sub_40942e
retn
sub_49a50c
lea ecx [ ebp - 0x10 ]
call sub_46412e
retn
sub_49a515
mov eax [ ebp - 0x28 ]
push eax
call sub_47c3de
pop ecx
retn
sub_49a520
mov eax r--data
jmp sub_4675d5
sub_49a52a
lea ecx [ ebp - 0x14 ]
call sub_40942e
retn
sub_49a533
lea ecx [ ebp - 0x10 ]
call sub_46412e
retn
sub_49a53c
mov eax [ ebp - 0x24 ]
push eax
call sub_47c3de
pop ecx
retn
sub_49a547
mov eax r--data
jmp sub_4675d5
sub_49a551
lea ecx [ ebp - 0x14 ]
call sub_47c674
retn
sub_49a55a
mov eax r--data
jmp sub_4675d5
sub_49a564
mov eax [ ebp - 0x1c ]
push eax
call sub_47c3de
pop ecx
retn
sub_49a56f
mov eax r--data
jmp sub_4675d5
sub_49a579
mov eax [ ebp - 0x20 ]
push eax
call sub_47c3de
pop ecx
retn
sub_49a584
mov eax r--data
jmp sub_4675d5
sub_49a58e
lea ecx [ ebp - 0x30 ]
call sub_409527
retn
sub_49a597
mov eax r--data
jmp sub_4675d5
sub_49a5b0
mov eax [ ebp - 0x14 ]
push eax
call sub_401240
retn
sub_49a5ba
mov eax r--data
jmp sub_4675d5
sub_49a5c4
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49a5cd
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_47c674
retn
sub_49a5dc
mov eax r--data
jmp sub_4675d5
sub_49a5e6
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49a5ef
mov eax r--data
jmp sub_4675d5
sub_49a5f9
lea ecx [ ebp - 0x1c ]
call sub_47c674
retn
sub_49a602
mov eax r--data
jmp sub_4675d5
sub_49a610
lea ecx [ ebp - 0x20 ]
call sub_40942e
retn
sub_49a619
lea ecx [ ebp - 0x18 ]
call sub_405340
retn
sub_49a622
lea ecx [ ebp - 0x4c ]
call sub_47c674
retn
sub_49a62b
lea ecx [ ebp - 0x44 ]
call sub_47c674
retn
sub_49a634
mov eax r--data
jmp sub_4675d5
sub_49a640
mov ecx [ ebp - 0x10 ]
call sub_47801b
retn
sub_49a649
mov eax r--data
jmp sub_4675d5
sub_49a653
lea ecx [ ebp - 0x28 ]
call sub_47c674
retn
sub_49a65c
lea ecx [ ebp - 0x44 ]
call sub_47c674
retn
sub_49a665
mov eax r--data
jmp sub_4675d5
sub_49a670
mov ecx [ ebp - 0x10 ]
call sub_48d60a
retn
sub_49a679
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
call sub_48a1c5
retn
sub_49a688
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
call sub_48a1c5
retn
sub_49a697
mov ecx [ ebp - 0x10 ]
add ecx 0x104
call sub_48a1c5
retn
sub_49a6a6
mov ecx [ ebp - 0x10 ]
add ecx 0x140
call sub_48a1c5
retn
sub_49a6b5
mov ecx [ ebp - 0x10 ]
add ecx 0x190
call sub_47c674
retn
sub_49a6c4
mov ecx [ ebp - 0x10 ]
add ecx 0x194
call sub_47c674
retn
sub_49a6d3
mov ecx [ ebp - 0x10 ]
add ecx 0x198
call sub_47c674
retn
sub_49a6e2
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
call sub_47c674
retn
sub_49a6f1
mov eax r--data
jmp sub_4675d5
sub_49a6fc
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49a704
mov eax r--data
jmp sub_4675d5
sub_49a710
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49a718
lea ecx [ ebp - 0x40 ]
jmp sub_47f799
sub_49a720
mov eax r--data
jmp sub_4675d5
sub_49a72c
mov eax r--data
jmp sub_4675d5
sub_49a738
mov eax r--data
jmp sub_4675d5
sub_49a744
push [ ebp + 0x8 ]
call sub_47c3de
pop ecx
retn
sub_49a74e
mov eax r--data
jmp sub_4675d5
sub_49a758
mov eax r--data
jmp sub_4675d5
sub_49a764
mov ecx [ ebp - 0x10 ]
jmp sub_47bea6
sub_49a76c
mov eax r--data
jmp sub_4675d5
sub_49a778
mov eax r--data
jmp sub_4675d5
sub_49a784
lea ecx [ ebp - 0x8 ]
jmp sub_466fa7
sub_49a78c
mov eax r--data
jmp sub_4675d5
sub_49a798
lea ecx [ ebp - 0x24 ]
jmp sub_47fd1c
sub_49a7a0
lea ecx [ ebp - 0x60 ]
jmp sub_4793ac
sub_49a7a8
lea ecx [ ebp - 0x24 ]
jmp sub_47fd1c
sub_49a7b0
mov eax r--data
jmp sub_4675d5
sub_49a7bc
lea ecx [ ebp - 0x48 ]
jmp sub_4793ac
sub_49a7c4
mov eax r--data
jmp sub_4675d5
sub_49a7d0
mov eax r--data
jmp sub_4675d5
sub_49a7dc
lea ecx [ ebp - 0x74 ]
jmp sub_4793ac
sub_49a7e4
mov eax r--data
jmp sub_4675d5
sub_49a7f0
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49a7f9
mov eax r--data
jmp sub_4675d5
sub_49a804
push [ ebp - 0x10 ]
call sub_47bb06
pop ecx
retn
sub_49a80e
mov eax r--data
jmp sub_4675d5
sub_49a818
push [ ebp - 0x10 ]
call sub_492b3d
retn
sub_49a821
mov eax r--data
jmp sub_4675d5
sub_49a82c
push [ ebp - 0x10 ]
call sub_492b3d
retn
sub_49a835
mov eax r--data
jmp sub_4675d5
sub_49a840
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49a848
mov eax r--data
jmp sub_4675d5
sub_49a854
push [ ebp + 0x8 ]
call sub_47c3de
pop ecx
retn
sub_49a85e
mov eax r--data
jmp sub_4675d5
sub_49a868
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49a870
mov eax r--data
jmp sub_4675d5
sub_49a87c
mov ecx [ ebp - 0x10 ]
jmp sub_47fd1c
sub_49a884
mov eax r--data
jmp sub_4675d5
sub_49a890
mov ecx [ ebp - 0x10 ]
jmp sub_47fd1c
sub_49a898
mov eax r--data
jmp sub_4675d5
sub_49a8a4
mov ecx [ ebp - 0x10 ]
jmp sub_47fd1c
sub_49a8ac
mov eax r--data
jmp sub_4675d5
sub_49a8b8
mov ecx [ ebp - 0x10 ]
jmp sub_47fd1c
sub_49a8c0
mov eax r--data
jmp sub_4675d5
sub_49a8cc
mov ecx [ ebp - 0x10 ]
jmp sub_47fd1c
sub_49a8d4
mov eax r--data
jmp sub_4675d5
sub_49a8e0
mov ecx [ ebp - 0x10 ]
jmp sub_47fd1c
sub_49a8e8
mov eax r--data
jmp sub_4675d5
sub_49a8f4
push [ ebp + 0x8 ]
call sub_47c3de
pop ecx
retn
sub_49a8fe
mov eax r--data
jmp sub_4675d5
sub_49a908
mov ecx [ ebp - 0x10 ]
jmp sub_4012e0
sub_49a910
mov eax r--data
jmp sub_4675d5
sub_49a91c
mov ecx [ ebp - 0x10 ]
jmp sub_4012e0
sub_49a924
mov eax r--data
jmp sub_4675d5
sub_49a930
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49a938
mov eax r--data
jmp sub_4675d5
sub_49a944
lea ecx [ ebp - 0x2c ]
jmp sub_43ce90
sub_49a94c
lea ecx [ ebp - 0x1c ]
jmp sub_43ce90
sub_49a954
lea ecx [ ebp - 0x14 ]
jmp sub_43ce90
sub_49a95c
lea ecx [ ebp - 0x24 ]
jmp sub_43ce90
sub_49a964
lea ecx [ ebp - 0x34 ]
jmp sub_43ce90
sub_49a96c
lea ecx [ ebp - 0x34 ]
jmp sub_401340
sub_49a974
lea ecx [ ebp - 0x24 ]
jmp sub_401340
sub_49a97c
lea ecx [ ebp - 0x14 ]
jmp sub_401340
sub_49a984
lea ecx [ ebp - 0x1c ]
jmp sub_401340
sub_49a98c
lea ecx [ ebp - 0x2c ]
jmp sub_401340
sub_49a994
mov eax r--data
jmp sub_4675d5
sub_49a9a0
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49a9a8
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49a9bf
mov eax r--data
jmp sub_4675d5
sub_49a9cc
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49a9d4
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49a9eb
mov eax r--data
jmp sub_4675d5
sub_49a9f8
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49aa00
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49aa17
mov eax r--data
jmp sub_4675d5
sub_49aa24
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49aa2c
mov eax r--data
jmp sub_4675d5
sub_49aa38
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49aa40
mov eax r--data
jmp sub_4675d5
sub_49aa4c
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49aa54
mov eax r--data
jmp sub_4675d5
sub_49aa60
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49aa68
mov eax r--data
jmp sub_4675d5
sub_49aa74
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49aa7c
mov eax r--data
jmp sub_4675d5
sub_49aa88
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49aa90
mov eax r--data
jmp sub_4675d5
sub_49aa9c
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49aab3
lea ecx [ ebp + 0xc ]
jmp sub_47c674
sub_49aabb
mov eax r--data
jmp sub_4675d5
sub_49aac8
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49aadf
lea ecx [ ebp + 0xc ]
jmp sub_47c674
sub_49aae7
mov eax r--data
jmp sub_4675d5
sub_49aaf4
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49aafc
mov eax r--data
jmp sub_4675d5
sub_49ab08
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49ab10
mov eax r--data
jmp sub_4675d5
sub_49ab1c
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49ab24
mov eax r--data
jmp sub_4675d5
sub_49ab30
mov ecx [ ebp - 0x10 ]
jmp sub_402b00
sub_49ab38
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_47c674
sub_49ab46
mov eax r--data
jmp sub_4675d5
sub_49ab50
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49ab58
mov eax r--data
jmp sub_4675d5
sub_49ab64
lea ecx [ ebp - 0x50 ]
jmp sub_4793ac
sub_49ab6c
mov eax r--data
jmp sub_4675d5
sub_49ab78
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49ab81
mov eax r--data
jmp sub_4675d5
sub_49ab8c
mov ecx [ ebp - 0x10 ]
jmp sub_47bea6
sub_49ab94
mov eax r--data
jmp sub_4675d5
sub_49aba0
mov ecx [ ebp - 0x10 ]
jmp sub_47bea6
sub_49aba8
mov eax r--data
jmp sub_4675d5
sub_49abb4
mov ecx [ ebp - 0x10 ]
jmp sub_47bea6
sub_49abbc
mov eax r--data
jmp sub_4675d5
sub_49abc8
push [ ebp - 0x10 ]
call sub_492b3d
retn
sub_49abd1
mov eax r--data
jmp sub_4675d5
sub_49abdc
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49abe4
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_47c674
sub_49abef
mov eax r--data
jmp sub_4675d5
sub_49abfc
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49ac04
lea ecx [ ebp + 0x10 ]
jmp sub_47c674
sub_49ac0c
mov eax r--data
jmp sub_4675d5
sub_49ac18
lea ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49ac20
mov eax r--data
jmp sub_4675d5
sub_49ac2c
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49ac34
lea ecx [ ebp + 0x10 ]
jmp sub_47c674
sub_49ac3c
mov eax r--data
jmp sub_4675d5
sub_49ac48
push [ ebp - 0x14 ]
call sub_401240
retn
sub_49ac51
mov ecx [ ebp - 0x14 ]
jmp sub_403630
sub_49ac59
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_47c674
sub_49ac64
mov eax r--data
jmp sub_4675d5
sub_49ac70
mov ecx [ ebp - 0x10 ]
jmp sub_4671e0
sub_49ac78
mov eax r--data
jmp sub_4675d5
sub_49ac84
mov ecx [ ebp - 0x10 ]
jmp sub_4671e0
sub_49ac8c
mov ecx [ ebp - 0x10 ]
add ecx 0x1070
jmp j_sub_492ff5
sub_49ac9a
mov eax r--data
jmp sub_4675d5
sub_49aca4
mov ecx [ ebp - 0x10 ]
jmp sub_4671e0
sub_49acac
mov eax r--data
jmp sub_4675d5
sub_49acb8
push [ ebp + 0x8 ]
call sub_47c3de
pop ecx
retn
sub_49acc2
mov eax r--data
jmp sub_4675d5
sub_49accc
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49acd4
mov eax r--data
jmp sub_4675d5
sub_49ace0
lea ecx [ ebp - 0x14 ]
jmp sub_46724d
sub_49ace8
mov eax r--data
jmp sub_4675d5
sub_49acf4
lea ecx [ ebp + 0x14 ]
jmp sub_47c674
sub_49acfc
lea ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49ad04
mov eax r--data
jmp sub_4675d5
sub_49ad10
lea ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49ad18
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49ad20
mov eax r--data
jmp sub_4675d5
sub_49ad2c
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49ad35
mov eax r--data
jmp sub_4675d5
sub_49ad40
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49ad49
mov eax r--data
jmp sub_4675d5
sub_49ad54
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49ad5c
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_477841
sub_49ad67
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_47c674
sub_49ad75
mov eax r--data
jmp sub_4675d5
sub_49ad80
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49ad88
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_477841
sub_49ad93
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_47c674
sub_49ada1
mov eax r--data
jmp sub_4675d5
sub_49adac
lea ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49adb4
mov eax r--data
jmp sub_4675d5
sub_49adc0
lea ecx [ ebp - 0x14 ]
jmp sub_46724d
sub_49adc8
mov eax r--data
jmp sub_4675d5
sub_49add4
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49addc
mov eax r--data
jmp sub_4675d5
sub_49ade8
lea ecx [ ebp - 0x28 ]
jmp sub_477841
sub_49adf0
mov eax r--data
jmp sub_4675d5
sub_49adfc
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49ae04
mov eax r--data
jmp sub_4675d5
sub_49ae10
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49ae19
mov eax r--data
jmp sub_4675d5
sub_49ae24
mov eax r--data
jmp sub_4675d5
sub_49ae30
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_477a26
sub_49ae3b
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_477a26
sub_49ae46
mov eax r--data
jmp sub_4675d5
sub_49ae50
mov eax r--data
jmp sub_4675d5
sub_49ae5c
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_477a26
sub_49ae67
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_477a26
sub_49ae72
mov eax r--data
jmp sub_4675d5
sub_49ae7c
mov eax r--data
jmp sub_4675d5
sub_49ae88
mov ecx [ ebp - 0x10 ]
jmp sub_47801b
sub_49ae90
mov ecx [ ebp - 0x10 ]
add ecx 0x84
jmp sub_47c674
sub_49ae9e
mov eax r--data
jmp sub_4675d5
sub_49aea8
mov ecx [ ebp - 0x10 ]
jmp sub_47801b
sub_49aeb0
mov ecx [ ebp - 0x10 ]
add ecx 0x84
jmp sub_47c674
sub_49aebe
mov eax r--data
jmp sub_4675d5
sub_49aec8
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49aed0
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49aed8
lea ecx [ ebp - 0x24 ]
jmp sub_47f799
sub_49aee0
mov eax r--data
jmp sub_4675d5
sub_49aeec
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49aef4
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_4770ef
sub_49aeff
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_47c674
sub_49af0a
mov eax r--data
jmp sub_4675d5
sub_49af14
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49af1c
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_4770ef
sub_49af27
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_47c674
sub_49af32
mov eax r--data
jmp sub_4675d5
sub_49af3c
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49af44
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_4770ef
sub_49af4f
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_47c674
sub_49af5a
mov eax r--data
jmp sub_4675d5
sub_49af64
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49af6c
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_4770ef
sub_49af77
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_47c674
sub_49af82
mov eax r--data
jmp sub_4675d5
sub_49af8c
mov ecx [ ebp - 0x10 ]
jmp sub_402b00
sub_49af94
mov eax r--data
jmp sub_4675d5
sub_49afa0
mov ecx [ ebp - 0x10 ]
jmp sub_402b00
sub_49afa8
mov eax r--data
jmp sub_4675d5
sub_49afb4
push [ ebp + 0x8 ]
call sub_401240
retn
sub_49afbd
mov eax r--data
jmp sub_4675d5
sub_49afc8
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49afd0
lea ecx [ ebp - 0x20 ]
jmp sub_47c674
sub_49afd8
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49afe0
mov eax r--data
jmp sub_4675d5
sub_49afec
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49aff4
mov eax r--data
jmp sub_4675d5
sub_49b000
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49b008
mov eax r--data
jmp sub_4675d5
sub_49b014
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49b01c
mov eax r--data
jmp sub_4675d5
sub_49b028
lea ecx [ ebp - 0x60 ]
jmp sub_480640
sub_49b030
mov eax r--data
jmp sub_4675d5
sub_49b03c
lea ecx [ ebp - 0x40 ]
jmp sub_48058c
sub_49b044
mov eax r--data
jmp sub_4675d5
sub_49b050
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49b058
mov eax r--data
jmp sub_4675d5
sub_49b064
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49b06c
mov eax r--data
jmp sub_4675d5
sub_49b078
push [ ebp + 0x8 ]
call sub_47c3de
pop ecx
retn
sub_49b082
mov eax r--data
jmp sub_4675d5
sub_49b08c
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49b094
mov eax r--data
jmp sub_4675d5
sub_49b0a0
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49b0a8
mov eax r--data
jmp sub_4675d5
sub_49b0b4
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49b0bc
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_477cf8
sub_49b0c7
mov eax r--data
jmp sub_4675d5
sub_49b0d4
push [ ebp - 0x1c ]
call sub_401240
retn
sub_49b0dd
mov eax r--data
jmp sub_4675d5
sub_49b0e8
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49b0f0
mov eax r--data
jmp sub_4675d5
sub_49b0fc
mov ecx [ ebp - 0x10 ]
jmp sub_484220
sub_49b104
mov eax r--data
jmp sub_4675d5
sub_49b110
mov ecx [ ebp - 0x10 ]
jmp sub_484220
sub_49b118
mov eax r--data
jmp sub_4675d5
sub_49b124
lea ecx [ ebp - 0x38 ]
jmp sub_4804d8
sub_49b12c
mov eax r--data
jmp sub_4675d5
sub_49b138
mov eax r--data
jmp sub_4675d5
sub_49b144
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49b14d
mov eax r--data
jmp sub_4675d5
sub_49b158
mov ecx [ ebp - 0x10 ]
jmp sub_484220
sub_49b160
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_4770ef
sub_49b16b
mov eax r--data
jmp sub_4675d5
sub_49b178
mov ecx [ ebp - 0x10 ]
jmp sub_484220
sub_49b180
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_4770ef
sub_49b18b
mov eax r--data
jmp sub_4675d5
sub_49b198
lea ecx [ ebp - 0x60 ]
jmp sub_480640
sub_49b1a0
mov eax r--data
jmp sub_4675d5
sub_49b1ac
push [ ebp + 0x8 ]
call sub_47c3de
pop ecx
retn
sub_49b1b6
mov eax r--data
jmp sub_4675d5
sub_49b1c0
mov ecx [ ebp - 0x10 ]
jmp sub_48eb87
sub_49b1c8
mov eax r--data
jmp sub_4675d5
sub_49b1d4
mov ecx [ ebp - 0x10 ]
jmp sub_48eb87
sub_49b1dc
mov eax r--data
jmp sub_4675d5
sub_49b1e8
lea ecx [ ebp + 0xc ]
jmp sub_47c674
sub_49b1f0
mov eax r--data
jmp sub_4675d5
sub_49b1fc
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49b205
mov eax r--data
jmp sub_4675d5
sub_49b210
lea ecx [ ebp + 0xc ]
jmp sub_47c674
sub_49b218
mov eax r--data
jmp sub_4675d5
sub_49b224
lea ecx [ ebp + 0xc ]
jmp sub_47c674
sub_49b22c
mov eax r--data
jmp sub_4675d5
sub_49b238
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49b240
mov eax r--data
jmp sub_4675d5
sub_49b24c
lea ecx [ ebp - 0xbc ]
jmp j_sub_47801b
sub_49b257
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b25f
lea ecx [ ebp - 0x160 ]
jmp j_sub_47801b
sub_49b26a
mov eax r--data
jmp sub_4675d5
sub_49b274
lea ecx [ ebp - 0xb0 ]
jmp j_sub_47801b
sub_49b27f
mov eax r--data
jmp sub_4675d5
sub_49b28c
mov ecx [ ebp - 0x10 ]
jmp sub_4671e0
sub_49b294
mov eax r--data
jmp sub_4675d5
sub_49b2a0
mov ecx [ ebp - 0x10 ]
jmp sub_496813
sub_49b2a8
mov eax r--data
jmp sub_4675d5
sub_49b2b4
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49b2bc
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_47c674
sub_49b2c7
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_47c674
sub_49b2d2
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_47c674
sub_49b2dd
mov eax r--data
jmp sub_4675d5
sub_49b2e8
mov ecx [ ebp - 0x10 ]
jmp sub_496813
sub_49b2f0
mov eax r--data
jmp sub_4675d5
sub_49b2fc
mov ecx [ ebp - 0x10 ]
jmp sub_48395a
sub_49b304
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_477841
sub_49b30f
mov eax r--data
jmp sub_4675d5
sub_49b31c
mov ecx [ ebp - 0x10 ]
jmp sub_48395a
sub_49b324
mov eax r--data
jmp sub_4675d5
sub_49b330
lea ecx [ ebp - 0x10 ]
jmp sub_466fa7
sub_49b338
mov eax r--data
jmp sub_4675d5
sub_49b344
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b34c
mov eax r--data
jmp sub_4675d5
sub_49b358
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b360
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49b377
mov eax r--data
jmp sub_4675d5
sub_49b384
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b38c
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49b3a3
mov eax r--data
jmp sub_4675d5
sub_49b3b0
mov ecx [ ebp - 0x10 ]
jmp sub_47bea6
sub_49b3b8
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_47c674
sub_49b3c3
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_47c674
sub_49b3ce
mov eax r--data
jmp sub_4675d5
sub_49b3d8
mov ecx [ ebp - 0x10 ]
jmp sub_47bea6
sub_49b3e0
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_47c674
sub_49b3eb
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_47c674
sub_49b3f6
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_477841
sub_49b401
mov eax r--data
jmp sub_4675d5
sub_49b40c
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b414
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b41c
lea ecx [ ebp - 0x4 ]
jmp sub_466fa7
sub_49b424
mov eax r--data
jmp sub_4675d5
sub_49b430
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b438
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b440
mov eax r--data
jmp sub_4675d5
sub_49b44c
lea ecx [ ebp + 0x14 ]
jmp sub_47c674
sub_49b454
mov eax r--data
jmp sub_4675d5
sub_49b460
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b468
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49b47f
mov eax r--data
jmp sub_4675d5
sub_49b48c
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b494
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b49c
mov eax r--data
jmp sub_4675d5
sub_49b4a8
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b4b0
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b4b8
lea ecx [ ebp - 0x28 ]
jmp sub_47c674
sub_49b4c0
mov eax r--data
jmp sub_4675d5
sub_49b4cc
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49b4d5
mov eax r--data
jmp sub_4675d5
sub_49b4e0
mov ecx [ ebp - 0x10 ]
jmp sub_47d56a
sub_49b4e8
mov eax r--data
jmp sub_4675d5
sub_49b4f4
lea ecx [ ebp - 0x30 ]
jmp sub_403630
sub_49b4fc
lea ecx [ ebp - 0x20 ]
jmp sub_47c674
sub_49b504
lea ecx [ ebp - 0x30 ]
jmp sub_403680
sub_49b50c
lea ecx [ ebp - 0x30 ]
jmp sub_403630
sub_49b514
lea ecx [ ebp - 0x74 ]
jmp sub_4833e4
sub_49b51c
lea ecx [ ebp - 0x60 ]
jmp sub_466fa7
sub_49b524
lea ecx [ ebp - 0x30 ]
jmp sub_403630
sub_49b52c
lea ecx [ ebp - 0x30 ]
jmp sub_403630
sub_49b534
mov eax r--data
jmp sub_4675d5
sub_49b540
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49b548
mov eax r--data
jmp sub_4675d5
sub_49b554
lea ecx [ ebp - 0x20 ]
jmp sub_47c674
sub_49b55c
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b564
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b56c
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b574
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b57c
mov eax r--data
jmp sub_4675d5
sub_49b588
lea ecx [ ebp - 0x30 ]
jmp sub_47c674
sub_49b590
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b598
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b5a0
lea ecx [ ebp - 0x28 ]
jmp sub_47c674
sub_49b5a8
lea ecx [ ebp - 0x24 ]
jmp sub_47c674
sub_49b5b0
lea ecx [ ebp - 0x2c ]
jmp sub_47c674
sub_49b5b8
lea ecx [ ebp - 0x34 ]
jmp sub_47c674
sub_49b5c0
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b5c8
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b5d0
lea ecx [ ebp - 0x20 ]
jmp sub_47c674
sub_49b5d8
mov eax r--data
jmp sub_4675d5
sub_49b5e4
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b5ec
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b5f4
mov eax r--data
jmp sub_4675d5
sub_49b600
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b608
mov eax r--data
jmp sub_4675d5
sub_49b614
lea ecx [ ebp - 0x210 ]
jmp sub_402730
sub_49b61f
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b627
lea ecx [ ebp + 0x14 ]
jmp sub_47c674
sub_49b62f
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b637
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b63f
lea ecx [ ebp - 0x210 ]
jmp sub_402b00
sub_49b64a
mov eax r--data
jmp sub_4675d5
sub_49b654
lea ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49b65c
lea ecx [ ebp - 0x40 ]
jmp sub_491e37
sub_49b664
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b66c
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b674
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b67c
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b684
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b68c
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b694
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b69c
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b6a4
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b6ac
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b6b4
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b6bc
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b6c4
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b6cc
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b6d4
mov eax r--data
jmp sub_4675d5
sub_49b6e0
lea ecx [ ebp - 0x70 ]
jmp sub_4886fd
sub_49b6e8
mov eax r--data
jmp sub_4675d5
sub_49b6f4
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b6fc
mov eax r--data
jmp sub_4675d5
sub_49b708
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49b710
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_477841
sub_49b71b
mov eax r--data
jmp sub_4675d5
sub_49b728
mov ecx [ ebp - 0x18 ]
jmp sub_482351
sub_49b730
mov ecx [ ebp - 0x18 ]
add ecx 0x78
jmp sub_47fd1c
sub_49b73b
mov eax r--data
jmp sub_4675d5
sub_49b748
mov ecx [ ebp - 0x10 ]
jmp sub_482351
sub_49b750
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_47fd1c
sub_49b75b
mov eax r--data
jmp sub_4675d5
sub_49b768
push [ ebp + 0x8 ]
call sub_47c3de
pop ecx
retn
sub_49b772
push [ ebp + 0x8 ]
call sub_401240
retn
sub_49b77b
mov eax r--data
jmp sub_4675d5
sub_49b788
lea ecx [ ebp - 0x14 ]
jmp sub_405020
sub_49b790
lea ecx [ ebp - 0x14 ]
jmp sub_401340
sub_49b798
mov eax r--data
jmp sub_4675d5
sub_49b7a4
lea ecx [ ebp - 0x3c ]
jmp sub_416d00
sub_49b7ac
lea ecx [ ebp - 0x34 ]
jmp sub_416d00
sub_49b7b4
lea ecx [ ebp - 0x34 ]
jmp sub_401340
sub_49b7bc
lea ecx [ ebp - 0x3c ]
jmp sub_401340
sub_49b7c4
mov eax r--data
jmp sub_4675d5
sub_49b7d0
lea ecx [ ebp + 0x8 ]
jmp sub_47c674
sub_49b7d8
mov eax r--data
jmp sub_4675d5
sub_49b7e4
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b7ec
mov eax r--data
jmp sub_4675d5
sub_49b7f8
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49b801
mov eax r--data
jmp sub_4675d5
sub_49b80c
mov ecx [ ebp - 0x10 ]
jmp sub_4793ac
sub_49b814
mov eax r--data
jmp sub_4675d5
sub_49b820
lea ecx [ ebp - 0x14 ]
jmp sub_4672cd
sub_49b828
mov eax r--data
jmp sub_4675d5
sub_49b834
lea ecx [ ebp - 0x60 ]
jmp sub_480640
sub_49b83c
mov eax r--data
jmp sub_4675d5
sub_49b848
lea ecx [ ebp - 0x24 ]
jmp sub_48058c
sub_49b850
mov eax r--data
jmp sub_4675d5
sub_49b85c
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_47c674
sub_49b867
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_47c674
sub_49b872
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_47c674
sub_49b87d
push [ ebp - 0x14 ]
call sub_47c3de
pop ecx
retn
sub_49b887
mov eax r--data
jmp sub_4675d5
sub_49b894
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_47c674
sub_49b89f
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_47c674
sub_49b8aa
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_47c674
sub_49b8b5
mov eax r--data
jmp sub_4675d5
sub_49b8c0
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b8c8
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b8d0
lea ecx [ ebp - 0x20 ]
jmp sub_47c674
sub_49b8d8
mov eax r--data
jmp sub_4675d5
sub_49b8e4
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b8ec
mov eax r--data
jmp sub_4675d5
sub_49b8f8
lea ecx [ ebp - 0x80 ]
jmp sub_495775
sub_49b900
lea ecx [ ebp - 0x3c ]
jmp sub_47c674
sub_49b908
lea ecx [ ebp - 0x1c ]
jmp sub_47c674
sub_49b910
lea ecx [ ebp - 0x40 ]
jmp sub_47c674
sub_49b918
lea ecx [ ebp - 0x44 ]
jmp sub_47c674
sub_49b920
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49b928
lea ecx [ ebp - 0x338 ]
jmp sub_402730
sub_49b933
lea ecx [ ebp - 0x338 ]
jmp sub_402b00
sub_49b93e
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b946
lea ecx [ ebp - 0x338 ]
jmp sub_402b00
sub_49b951
lea ecx [ ebp - 0x14 ]
jmp sub_47c674
sub_49b959
lea ecx [ ebp - 0x38 ]
jmp sub_47c674
sub_49b961
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b969
lea ecx [ ebp - 0x34 ]
jmp sub_47fd1c
sub_49b971
lea ecx [ ebp - 0xf0 ]
jmp sub_4956c6
sub_49b97c
lea ecx [ ebp - 0x20 ]
jmp sub_47c674
sub_49b984
lea ecx [ ebp - 0x18 ]
jmp sub_47c674
sub_49b98c
mov eax r--data
jmp sub_4675d5
sub_49b998
mov ecx [ ebp - 0x10 ]
jmp sub_47801b
sub_49b9a0
mov eax r--data
jmp sub_4675d5
sub_49b9ac
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_47c674
sub_49b9b7
push [ ebp - 0x14 ]
call sub_401240
retn
sub_49b9c0
mov eax r--data
jmp sub_4675d5
sub_49b9cc
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_47c674
sub_49b9d7
mov eax r--data
jmp sub_4675d5
sub_49b9e4
mov ecx [ ebp - 0x10 ]
jmp sub_484220
sub_49b9ec
mov eax r--data
jmp sub_4675d5
sub_49b9f8
mov eax r--data
jmp sub_4675d5
sub_49ba04
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49ba0c
mov eax r--data
jmp sub_4675d5
sub_49ba18
mov ecx [ ebp - 0x10 ]
jmp sub_4671e0
sub_49ba20
mov eax r--data
jmp sub_4675d5
sub_49ba2c
mov ecx [ ebp - 0x10 ]
jmp sub_4671e0
sub_49ba34
mov eax r--data
jmp sub_4675d5
sub_49ba40
mov eax r--data
jmp sub_4675d5
sub_49ba4c
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49ba54
mov eax r--data
jmp sub_4675d5
sub_49ba60
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_47c674
sub_49ba6b
mov eax r--data
jmp sub_4675d5
sub_49ba78
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_47c674
sub_49ba83
mov eax r--data
jmp sub_4675d5
sub_49ba90
mov ecx [ ebp - 0x10 ]
jmp sub_401340
sub_49ba98
mov eax r--data
jmp sub_4675d5
sub_49baa4
mov ecx [ ebp - 0x10 ]
jmp sub_48b397
sub_49baac
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
jmp sub_47c674
sub_49baba
mov eax r--data
jmp sub_4675d5
sub_49bac4
lea ecx [ ebp - 0x24 ]
jmp sub_4804d8
sub_49bacc
mov eax r--data
jmp sub_4675d5
sub_49bad8
mov ecx [ ebp - 0x10 ]
jmp sub_48b397
sub_49bae0
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
jmp sub_47c674
sub_49baee
mov eax r--data
jmp sub_4675d5
sub_49baf8
lea ecx [ ebp - 0x44 ]
jmp sub_48058c
sub_49bb00
lea ecx [ ebp - 0x4c ]
jmp sub_405020
sub_49bb08
lea ecx [ ebp - 0x60 ]
jmp sub_405020
sub_49bb10
lea ecx [ ebp - 0x58 ]
jmp sub_405020
sub_49bb18
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49bb20
lea ecx [ ebp - 0x80 ]
jmp sub_47fd1c
sub_49bb28
lea ecx [ ebp - 0x58 ]
jmp sub_401340
sub_49bb30
lea ecx [ ebp - 0x60 ]
jmp sub_401340
sub_49bb38
lea ecx [ ebp - 0x4c ]
jmp sub_401340
sub_49bb40
lea ecx [ ebp - 0x58 ]
jmp sub_401340
sub_49bb48
lea ecx [ ebp - 0x60 ]
jmp sub_401340
sub_49bb50
lea ecx [ ebp - 0x4c ]
jmp sub_401340
sub_49bb58
mov eax r--data
jmp sub_4675d5
sub_49bb64
mov eax r--data
jmp sub_4675d5
sub_49bb70
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49bb79
mov eax r--data
jmp sub_4675d5
sub_49bb84
mov ecx [ ebp - 0x10 ]
jmp sub_402b00
sub_49bb8c
mov eax r--data
jmp sub_4675d5
sub_49bb98
push [ ebp - 0x10 ]
call sub_401240
retn
sub_49bba1
mov eax r--data
jmp sub_4675d5
sub_49bbac
mov ecx [ ebp - 0x10 ]
jmp sub_47bea6
sub_49bbb4
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_47c674
sub_49bbbf
push [ ebp + 0x8 ]
call sub_401240
retn
sub_49bbc8
push [ ebp + 0x8 ]
call sub_401240
retn
sub_49bbd1
mov eax r--data
jmp sub_4675d5
sub_49bbdc
mov ecx [ ebp - 0x10 ]
jmp sub_47bea6
sub_49bbe4
mov eax r--data
jmp sub_4675d5
sub_49bbf0
lea ecx [ ebp + 0xc ]
jmp sub_47c674
sub_49bbf8
mov eax r--data
jmp sub_4675d5
sub_49bc04
lea ecx [ ebp - 0x10 ]
jmp sub_47c674
sub_49bc0c
lea ecx [ ebp + 0x10 ]
jmp sub_47c674
sub_49bc14
mov eax r--data
jmp sub_4675d5
sub_49bc20
push [ ebp - 0x14 ]
call sub_401240
retn
sub_49bc29
mov ecx [ ebp - 0x14 ]
jmp sub_403630
sub_49bc31
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_47c674
sub_49bc3c
mov eax r--data
jmp sub_4675d5
sub_49bc48
mov ecx [ ebp - 0x10 ]
jmp sub_403630
sub_49bc50
mov eax r--data
jmp sub_4675d5
sub_49bc5c
mov ecx [ ebp - 0x10 ]
jmp sub_47fd1c
sub_49bc64
mov eax r--data
jmp sub_4675d5
sub_49bc70
mov eax r--data
jmp sub_4675d5
sub_49bc7c
mov eax r--data
jmp sub_4675d5
