sub_100159f
add dh bh
inc [ ecx ]
add dh bh
inc [ edx ]
add dh bh
inc [ ebx ]
add dh bh
inc [ 0x7fffe00 ]
add dh bh
dec [ ecx ]
add dh bh
dec [ ebx ]
add dh bh
dec [ 0xffffe00 ]
add dh bh
call [ ecx ]
add dh bh
call [ ebx ]
add dh bh
call [ 0x17fffe00 ]
add dh bh
[ ecx ]
add dh bh
[ ebx ]
add dh bh
[ 0x1ffffe00 ]
add [ edx + 0x53 ] dl
inc esp
push ebx
jpo r-xdata
bound eax [ eax ]
fimul [ edi + 0x45 ]
pop ss
pop edi
inc ebp
cwde
mov al [ 0xffffffffe0e745b7 ]
push ss
fld [ ecx ]
add [ eax ] al
add [ edi + 0x65 ] dh
js r-xdata
pop es
sub bl 0xb
jb r-xdata
pop esi
pop ebp
retn 0xc
sub ecx esi
mov [ edx ] ecx
push ebp
or [ eax ] bh
add dh [ esp + eax + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ esi + ebp + 0x70 ] si
bound eax [ fs : eax ]
cmp [ edx ] al
je r-xdata
cmp esi eax
jne r-xdata
dec esi
jne r-xdata
inc edx
mov edx [ ebp + 0x10 ]
cmp edx eax
je r-xdata
mov eax 0x80070057
jmp r-xdata
sub_100160f
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
mov eax 0x80070057
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
pop esi
jne r-xdata
mov [ edx ] cl
inc edx
inc esi
dec [ ebp + 0xc ]
jne r-xdata
pop ebp
retn 0xc
mov [ edx ] 0x0
dec edx
mov eax 0x8007007a
mov cl [ esi ]
test cl cl
je r-xdata
sub_1001651
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
xor eax eax
cmp esi eax
mov ecx esi
je r-xdata
mov eax 0x80070057
jmp r-xdata
mov edx [ ebp + 0x8 ]
pop esi
pop ebp
retn 0xc
cmp esi eax
jne r-xdata
inc edx
dec esi
jne r-xdata
mov edx [ ebp + 0x10 ]
cmp edx eax
je r-xdata
cmp [ edx ] al
je r-xdata
sub ecx esi
mov [ edx ] ecx
sub_100168d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] eax
jb r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
sub ecx eax
cmp [ ebp + 0x8 ] ecx
jb r-xdata
sub eax [ ebp + 0xc ]
add eax [ ebp + 0x8 ]
jmp r-xdata
pop ebp
retn 0x8
sub_10016b4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push r-xdata
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] bl
mov [ ebp - 0xb ] bl
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x5
call [ LoadLibraryA@IAT ]
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
call sub_10064de
leave
retn 0x4
push edi
push r-xdata
push eax
call [ GetProcAddress@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ ebp - 0x18 ]
call [ FreeLibrary@IAT ]
pop edi
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x10 ] 0x1
mov [ esi ] ebx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp - 0x14 ]
push ebx
call edi
push [ ebp - 0x14 ]
call [ FreeSid@IAT ]
sub_1001760
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
xor ebx ebx
cmp eax 0x2
mov [ ebp - 0xc ] bl
mov [ ebp - 0xb ] bl
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x5
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
call sub_10064de
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_10016b4
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
push edi
mov edi [ GetTokenInformation@IAT ]
lea eax [ ebp - 0x18 ]
push eax
push ebx
push ebx
push 0x2
push [ ebp - 0x14 ]
call edi
test eax eax
jne r-xdata
push [ ebp - 0x14 ]
call [ CloseHandle@IAT ]
pop edi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push esi
push [ ebp - 0x18 ]
push ebx
call [ LocalAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
pop esi
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x18 ]
push esi
push 0x2
push [ ebp - 0x14 ]
call edi
test eax eax
je r-xdata
push esi
call [ LocalFree@IAT ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0xc ]
push eax
call [ AllocateAndInitializeSid@IAT ]
test eax eax
je r-xdata
cmp [ esi ] ebx
jbe r-xdata
push [ ebp - 0x1c ]
call [ FreeSid@IAT ]
lea edi [ esi + 0x4 ]
xor eax eax
inc eax
mov [ rw-data ] eax
mov [ ebp - 0x10 ] eax
inc ebx
add edi 0x8
cmp ebx [ esi ]
jb r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call [ EqualSid@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
sub_100189d
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x110
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
call [ GetDesktopWindow@IAT ]
push eax
push esi
call sub_1002d83
push 0x200
lea eax [ ebp - 0x204 ]
push eax
push [ ebp + 0x14 ]
mov [ ebp - 0x204 ] 0x0
push [ rw-data ]
call [ LoadStringA@IAT ]
lea eax [ ebp - 0x204 ]
push eax
push 0x83f
push esi
call [ SetDlgItemTextA@IAT ]
push 0xffffffff
call [ MessageBeep@IAT ]
dec eax
je r-xdata
cmp [ ebp + 0x10 ] 0x83d
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x83e
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_10064de
leave
retn 0x10
push [ ebp + 0x10 ]
push esi
call [ EndDialog@IAT ]
jmp r-xdata
xor eax eax
inc eax
sub_1001942
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx ]
push edi
xor edi edi
jmp r-xdata
movsx ax [ esi ]
push eax
push [ ebp + 0xc ]
call sub_100662b
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov [ ebx ] esi
movsx ax [ esi ]
jmp r-xdata
xor eax eax
jmp r-xdata
inc esi
push eax
push [ ebp + 0xc ]
call sub_100662b
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ edi + esi ] 0x0
je r-xdata
lea eax [ edi + esi ]
cmp [ eax ] 0x0
je r-xdata
inc edi
movsx ax [ edi + esi ]
mov [ eax ] 0x0
inc eax
sub_10019c3
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
xor esi esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push r-xdata
push esi
call [ LookupPrivilegeValueA@IAT ]
push esi
push esi
push esi
lea eax [ ebp - 0x14 ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
test eax eax
push esi
jne r-xdata
push esi
push 0x10
push esi
push esi
push 0x4f5
jmp r-xdata
push 0x2
call [ ExitWindowsEx@IAT ]
test eax eax
jne r-xdata
push 0x10
push esi
push esi
push 0x4f6
jmp r-xdata
push esi
call sub_1003ebe
xor eax eax
jmp r-xdata
xor eax eax
inc eax
push esi
push 0x10
push esi
push esi
push 0x4f7
pop esi
leave
retn
sub_1001a5b
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x20006
push 0x0
push rw-data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
push rw-data
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_1001aa7
mov edi edi
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
push edi
push 0x40
pop ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x108 ] 0x0
lea edi [ ebp - 0x107 ]
[ edi ]
stosw [ edi ]
push 0x40
pop ecx
stosb [ edi ]
xor eax eax
mov [ ebp - 0x20c ] 0x0
lea edi [ ebp - 0x20b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x21c ]
push eax
xor edi edi
lea eax [ ebp - 0x214 ]
push eax
push edi
push 0x2001f
push edi
push edi
push edi
push rw-data
push 0x80000002
mov [ ebp - 0x218 ] edi
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
call sub_10064de
leave
retn
push ebx
push esi
mov [ ebp - 0x210 ] edi
mov esi rw-data
mov ebx 0xc8
cmp [ ebp - 0x210 ] ebx
jne r-xdata
inc [ ebp - 0x210 ]
cmp [ ebp - 0x210 ] ebx
jl r-xdata
mov ebx [ GetSystemDirectoryA@IAT ]
mov esi 0x104
push esi
lea eax [ ebp - 0x20c ]
push eax
call ebx
push r-xdata
push esi
lea eax [ ebp - 0x20c ]
push eax
call sub_10066cf
lea eax [ ebp - 0x20c ]
push eax
call [ LoadLibraryA@IAT ]
cmp eax edi
mov [ ebp - 0x210 ] eax
je r-xdata
push [ ebp - 0x214 ]
call [ RegCloseKey@IAT ]
mov [ rw-data ] 0x0
jmp r-xdata
push [ ebp - 0x210 ]
push rw-data
push esi
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x220 ]
push eax
push edi
push edi
push edi
push esi
push [ ebp - 0x214 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x108 ]
push eax
push [ rw-data ]
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
push r-xdata
push eax
call [ GetProcAddress@IAT ]
push [ ebp - 0x210 ]
mov edi eax
neg edi
sbb edi edi
neg edi
mov [ ebp - 0x218 ] edi
call [ FreeLibrary@IAT ]
test edi edi
je r-xdata
pop esi
pop ebx
push [ ebp - 0x214 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
mov esi [ lstrlenA@IAT ]
mov edi rw-data
push edi
call esi
mov ebx eax
lea eax [ ebp - 0x108 ]
push eax
call esi
lea eax [ ebx + eax + 0x50 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
xor eax eax
cmp ebx eax
jne r-xdata
push esi
lea eax [ ebp - 0x108 ]
push eax
call ebx
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x218 ] eax
sete cl
cmp [ ebp - 0x218 ] eax
mov eax rw-data
mov [ rw-data ] ecx
jne r-xdata
push eax
push 0x10
push eax
push eax
push 0x4b5
push eax
call sub_1003ebe
push r-xdata
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
jmp r-xdata
push edi
lea ecx [ ebp - 0x108 ]
push ecx
push eax
push ebx
call [ wsprintfA@IAT ]
add esp 0x10
push ebx
call esi
inc eax
push eax
push ebx
push 0x1
push 0x0
push rw-data
push [ ebp - 0x214 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x214 ]
call [ RegCloseKey@IAT ]
push ebx
call [ LocalFree@IAT ]
mov eax rw-data
sub_1001cf4
mov edi edi
push ebp
mov ebp esp
sub esp 0x348
mov eax [ rw-data ]
push ebx
xor ebx ebx
cmp [ rw-data ] bl
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
call sub_10064de
leave
retn
lea eax [ ebp - 0x344 ]
push eax
push 0x2001f
push ebx
push rw-data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x348 ]
push eax
lea eax [ ebp - 0x340 ]
push eax
push ebx
push ebx
mov esi rw-data
push esi
push [ ebp - 0x344 ]
mov [ ebp - 0x348 ] 0x238
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x344 ]
call [ RegCloseKey@IAT ]
pop esi
push edi
push 0x40
pop ecx
mov [ ebp - 0x108 ] bl
lea edi [ ebp - 0x107 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi 0x104
push edi
lea eax [ ebp - 0x108 ]
push eax
call [ GetSystemDirectoryA@IAT ]
test eax eax
je r-xdata
push rw-data
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp - 0x340 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
lea eax [ ebp - 0x340 ]
push eax
call [ lstrlenA@IAT ]
inc eax
push eax
lea eax [ ebp - 0x340 ]
push eax
push 0x1
push ebx
push esi
push [ ebp - 0x344 ]
call [ RegSetValueExA@IAT ]
pop edi
push r-xdata
push edi
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
sub_1001e13
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
push esi
call [ lstrlenA@IAT ]
cmp eax 0x3
jl r-xdata
mov al [ esi + 0x1 ]
cmp al 0x3a
jne r-xdata
cmp [ esi ] 0x5c
jne r-xdata
cmp [ esi + 0x2 ] 0x5c
je r-xdata
cmp al 0x5c
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_1001e53
mov edi edi
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
push esi
push edi
mov [ ebp - 0x4 ] eax
mov esi 0x104
push esi
lea eax [ ebp - 0x108 ]
push eax
xor edi edi
call [ GetWindowsDirectoryA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
call sub_10064de
leave
retn
push r-xdata
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
lea eax [ ebp - 0x108 ]
push eax
push edi
push edi
push edi
call [ WritePrivateProfileStringA@IAT ]
push 0x40
lea eax [ ebp - 0x108 ]
push eax
call [ _lopen@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0x2
push edi
push esi
call [ _llseek@IAT ]
push esi
mov edi eax
call [ _lclose@IAT ]
sub_1001edf
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp + 0x8 ]
push eax
push 0x20019
xor esi esi
push esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0x8
lea eax [ ebp - 0x4 ]
push eax
push esi
push esi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ RegCloseKey@IAT ]
mov [ ebp - 0x4 ] esi
sub_1001f37
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp + 0x8 ]
push eax
push 0x20019
xor esi esi
push esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0x4
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x4 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ RegQueryInfoKeyA@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ RegCloseKey@IAT ]
mov [ ebp - 0x4 ] esi
sub_1001f93
mov edi edi
push ebp
mov ebp esp
movzx ecx [ ebp + 0x8 ]
xor eax eax
test ecx ecx
je r-xdata
call sub_1001e53
cmp ecx 0x1
je r-xdata
push rw-data
call sub_1001f37
jmp r-xdata
jle r-xdata
pop ebp
retn 0x4
cmp ecx 0x3
jg r-xdata
push rw-data
push rw-data
call sub_1001edf
jmp r-xdata
sub_1001ff9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
and eax 0x10
push 0x0
push [ ebp + 0x8 ]
call [ CreateDirectoryA@IAT ]
jmp r-xdata
pop ebp
retn 0x4
sub_1002025
mov edi edi
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x108 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
xor eax eax
cmp cl [ ebp - 0x108 ]
mov ecx [ ebp - 0x4 ]
sete al
call sub_10064de
leave
retn 0x4
push eax
push 0x10
push eax
push eax
push 0x4f0
push eax
call sub_1003ebe
sub_10020a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push esi
push edi
xor edi edi
xor esi esi
cmp [ ebp + 0x8 ] 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
mov [ rw-data ] 0x70
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov ecx [ ebp + 0x10 ]
push edi
push 0x10
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
add eax ecx
push eax
call sub_100207f
push eax
push 0x4fa
push edi
call sub_1003ebe
jmp r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0x5
push 0x20
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
add ecx eax
push ecx
call sub_100207f
push eax
push 0x4bd
push edi
call sub_1003ebe
mov esi eax
sub esi 0x4
neg esi
sbb esi esi
inc esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
call sub_10064de
leave
retn 0x10
push 0x104
push 0x40
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
call sub_100207f
push eax
push 0x4cc
push edi
call sub_1003ebe
cmp eax 0x6
jne r-xdata
xor esi esi
inc esi
mov [ rw-data ] edi
sub_100216f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x1
je r-xdata
and al 0x2
neg al
sbb eax eax
and eax 0x101
mov eax 0x104
jmp r-xdata
pop ebp
retn 0x4
sub_1002196
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x10
sbb eax eax
neg eax
sub_10021e6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push esi
push edi
call sub_1001651
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
sub esi eax
push esi
add eax edi
push eax
call sub_100160f
sub_100221e
mov edi edi
push esi
or esi 0xffffffff
cmp [ rw-data ] 0x0
jne r-xdata
push 0x2
pop esi
xor eax eax
mov ax [ rw-data ]
push eax
push [ rw-data ]
call sub_1001fd9
test eax eax
je r-xdata
mov eax esi
pop esi
retn
sub_1002251
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
jne r-xdata
test [ ebp + 0x8 ] 0x4
jne r-xdata
call sub_100221e
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x4
push 0x40
push 0x0
push r-xdata
push 0x522
push 0x0
call sub_1003ebe
cmp eax 0x6
jne r-xdata
pop ebp
retn 0x4
call sub_10019c3
push 0x0
push 0x2
call [ ExitWindowsEx@IAT ]
jmp r-xdata
sub_10022ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
and [ ebp - 0x10c ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
mov [ esi ] 0x0
cmp [ edi ] 0x23
mov [ ebp - 0x4 ] eax
jne r-xdata
push [ ebp + 0xc ]
push esi
call [ GetSystemDirectoryA@IAT ]
inc edi
movsx eax [ edi ]
push eax
call [ CharUpperA@IAT ]
push edi
mov edi [ CharNextA@IAT ]
mov bl al
call edi
push eax
call edi
cmp bl 0x53
mov edi eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor eax eax
pop esi
inc eax
pop ebx
call sub_10064de
leave
retn 0xc
push edi
push [ ebp + 0xc ]
push esi
call sub_10066cf
cmp bl 0x57
je r-xdata
push [ ebp + 0xc ]
push esi
call [ GetWindowsDirectoryA@IAT ]
jmp r-xdata
push r-xdata
lea eax [ ebp - 0x108 ]
mov ebx 0x104
push eax
mov [ ebp - 0x118 ] ebx
call [ lstrcpyA@IAT ]
push edi
push ebx
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
lea eax [ ebp - 0x110 ]
push eax
push 0x20019
push 0x0
lea eax [ ebp - 0x108 ]
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x118 ]
push eax
push esi
lea eax [ ebp - 0x114 ]
push eax
push 0x0
push r-xdata
push [ ebp - 0x110 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x110 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
cmp [ ebp - 0x114 ] 0x2
jne r-xdata
cmp [ ebp - 0x10c ] 0x0
jne r-xdata
cmp [ ebp - 0x114 ] 0x1
jne r-xdata
push ebx
lea eax [ ebp - 0x108 ]
push eax
push esi
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x10c ] 0x1
lea eax [ ebp - 0x108 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_10021c4
jmp r-xdata
sub_1002410
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x7c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
jle r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
leave
retn 0x10
push [ ebp - 0x4 ]
call [ GlobalFree@IAT ]
mov eax [ ebp - 0xc ]
mov ecx [ edi + 0x80 ]
add eax edi
lea esi [ eax + ecx + 0x84 ]
mov eax [ esi + 0x38 ]
lea eax [ eax + edi + 0x84 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10022ac
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
pop ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call GetFileVersionInfoSizeA
cmp eax ebx
mov [ ebp - 0x14 ] eax
je r-xdata
cmp [ esi ] ebx
jne r-xdata
push eax
push 0x42
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
cmp [ esi + 0x4 ] ebx
jne r-xdata
push eax
call [ GlobalLock@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0xc ] 0x3c
cmp eax [ edi + 0x7c ]
jl r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0xc ]
call GetFileVersionInfoA
test eax eax
je r-xdata
xor ebx ebx
push [ ebp - 0x4 ]
call [ GlobalUnlock@IAT ]
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push r-xdata
push ebx
call VerQueryValueA
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov edi [ eax + 0xc ]
mov ebx [ eax + 0x8 ]
lea ecx [ esi + 0x10 ]
xor edx edx
push [ ecx - 0xc ]
push [ ecx - 0x10 ]
push edi
push ebx
call sub_1002196
push [ ecx ]
mov [ ebp + edx - 0x28 ] eax
push [ ecx - 0x4 ]
push edi
push ebx
call sub_1002196
mov [ ebp + edx - 0x30 ] eax
add edx 0x4
add ecx 0x18
cmp edx 0x8
jl r-xdata
cmp [ ebp - 0x28 ] 0x0
jl r-xdata
cmp [ ebp - 0x24 ] 0x0
jl r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
push [ ebp - 0x4 ]
call [ GlobalUnlock@IAT ]
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
jg r-xdata
mov edi [ ebp + 0x8 ]
sub_1002589
mov edi edi
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
test esi esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10c ] edi
mov [ edi ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
call sub_10064de
leave
retn 0xc
cmp [ esi ] 0x0
je r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push eax
push [ rw-data ]
call [ GetModuleFileNameA@IAT ]
xor eax eax
mov al [ esi ]
test al al
je r-xdata
mov [ edi ] 0x0
push ebx
mov ebx [ lstrlenA@IAT ]
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
push edi
call [ CharNextA@IAT ]
mov edi eax
push esi
call [ CharNextA@IAT ]
mov esi eax
movsx eax [ esi ]
push eax
call [ CharUpperA@IAT ]
cmp al 0x44
jne r-xdata
push eax
call [ IsDBCSLeadByte@IAT ]
test eax eax
mov al [ esi ]
mov [ edi ] al
je r-xdata
pop ebx
movsx eax [ esi ]
push eax
call [ CharUpperA@IAT ]
cmp al 0x45
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_1006666
lea eax [ ebp - 0x108 ]
push eax
call ebx
lea eax [ ebp + eax - 0x108 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ CharPrevA@IAT ]
test eax eax
je r-xdata
cmp [ esi ] 0x23
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
mov eax [ ebp - 0x10c ]
push edi
push [ ebp + 0x10 ]
call sub_100168d
push eax
push edi
call sub_10021c4
push edi
call ebx
add edi eax
jmp r-xdata
cmp [ eax ] 0x5c
jne r-xdata
push esi
call [ CharNextA@IAT ]
mov esi eax
mov al [ esi ]
test al al
jne r-xdata
mov [ eax ] 0x0
jmp r-xdata
sub_10026e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x620
mov eax [ rw-data ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x61c ] eax
mov esi 0x104
mov [ ebp - 0x620 ] ecx
mov ecx [ ebp + 0x14 ]
push esi
lea eax [ ebp - 0x20c ]
push eax
mov [ ebp - 0x618 ] ecx
call sub_100160f
cmp [ ebp - 0x20c ] 0x22
jne r-xdata
lea eax [ ebp - 0x20c ]
push r-xdata
lea eax [ ebp - 0x20b ]
push r-xdata
jmp r-xdata
push edi
push eax
call [ lstrcpyA@IAT ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
push edi
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
jmp r-xdata
mov [ ebp - 0x610 ] eax
lea eax [ ebp - 0x610 ]
push eax
call sub_1001942
mov edi [ ebp - 0x610 ]
push edi
mov [ ebp - 0x614 ] eax
call sub_1001e13
test eax eax
lea eax [ ebp - 0x108 ]
jne r-xdata
push 0x2e
push edi
call sub_1006752
cmp eax ebx
je r-xdata
push r-xdata
push eax
call esi
test eax eax
jne r-xdata
push 0x2e
push edi
call sub_1006752
mov esi [ lstrcmpiA@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov esi 0x400
push esi
push 0x40
call [ LocalAlloc@IAT ]
cmp eax ebx
mov [ ebp - 0x610 ] eax
jne r-xdata
push r-xdata
push eax
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_100672a
test eax eax
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4b5
mov esi [ lstrlenA@IAT ]
mov edi rw-data
push edi
call esi
lea ecx [ ebp - 0x108 ]
push ecx
mov [ ebp - 0x618 ] eax
call esi
mov ecx [ ebp - 0x618 ]
lea eax [ ecx + eax + 0x8 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
cmp eax ebx
mov [ ebp - 0x610 ] eax
je r-xdata
mov eax [ ebp - 0x614 ]
mov [ ebp - 0x610 ] eax
push r-xdata
lea eax [ ebp - 0x610 ]
push eax
call sub_1001942
mov esi [ lstrlenA@IAT ]
push rw-data
mov edi eax
call esi
cmp edi ebx
je r-xdata
push ebx
push 0x10
push ebx
lea eax [ ebp - 0x108 ]
push eax
push 0x525
jmp r-xdata
push [ ebp - 0x61c ]
lea eax [ ebp - 0x60c ]
push esi
push eax
call sub_100160f
test al 0x10
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn 0x10
lea ecx [ ebp - 0x108 ]
push ecx
push edi
push eax
call [ wsprintfA@IAT ]
add esp 0xc
jmp r-xdata
mov edi [ ebp - 0x610 ]
cmp [ edi ] bl
je r-xdata
push ebx
call sub_1003ebe
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
push esi
lea eax [ ebp - 0x60c ]
push eax
call sub_100160f
mov edi [ ebp - 0x614 ]
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x620 ]
mov ecx [ ebp - 0x610 ]
mov [ eax ] ecx
xor eax eax
inc eax
cmp [ edi ] bl
mov esi rw-data
mov eax edi
jne r-xdata
push r-xdata
lea eax [ ebp - 0x610 ]
push eax
call sub_1001942
mov edi [ ebp - 0x610 ]
cmp [ edi ] bl
je r-xdata
mov [ ebp - 0x610 ] edi
push esi
push [ ebp - 0x610 ]
lea eax [ ebp - 0x60c ]
push eax
call sub_1002589
cmp [ edi ] bl
je r-xdata
lea ecx [ ebp - 0x108 ]
push ecx
push ebx
push r-xdata
push eax
call [ GetPrivateProfileIntA@IAT ]
mov [ rw-data ] eax
mov eax [ ebp - 0x618 ]
mov [ eax ] 0x1
lea eax [ ebp - 0x108 ]
push eax
push 0x8
push [ ebp - 0x610 ]
push r-xdata
push r-xdata
push r-xdata
call [ GetPrivateProfileStringA@IAT ]
test eax eax
jbe r-xdata
mov eax esi
push 0x200
push 0x40
call [ LocalAlloc@IAT ]
cmp eax ebx
mov [ ebp - 0x610 ] eax
je r-xdata
push edi
call esi
jmp r-xdata
push r-xdata
push esi
lea eax [ ebp - 0x60c ]
push eax
call sub_10021e6
push edi
push esi
lea eax [ ebp - 0x60c ]
push eax
call sub_10021e6
jmp r-xdata
and [ rw-data ] 0xfffffffb
cmp [ rw-data ] bx
jne r-xdata
or [ rw-data ] 0x4
cmp [ edi ] bl
jne r-xdata
mov [ ebp - 0x614 ] r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push eax
push eax
mov [ ebp - 0x614 ] r-xdata
call [ GetShortPathNameA@IAT ]
jmp r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp - 0x61c ]
call sub_10021c4
lea eax [ ebp - 0x108 ]
push eax
push 0x200
push [ ebp - 0x610 ]
call sub_10021c4
jmp r-xdata
mov edi esi
lea eax [ ebp - 0x108 ]
push eax
push edi
push [ ebp - 0x614 ]
push rw-data
push [ ebp - 0x610 ]
call [ wsprintfA@IAT ]
add esp 0x14
jmp r-xdata
mov edi esi
cmp [ edi ] bl
jne r-xdata
sub_1002a96
mov edi edi
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
call sub_10064de
leave
retn 0x4
cmp [ edi ] 0x0
je r-xdata
push esi
push edi
mov esi 0x104
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_100160f
push r-xdata
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_10021e6
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x24c ] eax
je r-xdata
pop esi
push ebx
mov ebx [ lstrcmpA@IAT ]
push eax
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_10021e6
push 0x80
lea eax [ ebp - 0x108 ]
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call [ DeleteFileA@IAT ]
push r-xdata
push eax
call ebx
test eax eax
je r-xdata
push edi
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_100160f
test [ ebp - 0x248 ] 0x10
lea eax [ ebp - 0x21c ]
je r-xdata
push [ ebp - 0x24c ]
call [ FindClose@IAT ]
push edi
call [ RemoveDirectoryA@IAT ]
pop ebx
lea eax [ ebp - 0x248 ]
push eax
push [ ebp - 0x24c ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r-xdata
lea eax [ ebp - 0x21c ]
push eax
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x21c ]
push eax
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_10021e6
push r-xdata
push esi
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
lea eax [ ebp - 0x108 ]
push eax
call sub_1002a96
jmp r-xdata
sub_1002bec
mov edi edi
push ebp
mov ebp esp
push 0xfffffffc
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
push [ ebp + 0xc ]
mov [ rw-data ] eax
push 0xfffffffc
push [ ebp + 0x8 ]
call [ SetWindowLongA@IAT ]
pop ebp
retn 0x8
sub_1002c18
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xb1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ CallWindowProcA@IAT ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0xfffffffe
jne r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn 0x10
sub_1002c57
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
push esi
call [ lstrlenA@IAT ]
cmp eax 0x3
jl r-xdata
mov al [ esi + 0x1 ]
cmp al 0x3a
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ esi ] 0x5c
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp al 0x5c
jne r-xdata
sub_1002c91
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ PeekMessageA@IAT ]
push edi
xor edi edi
xor ebx ebx
mov [ ebp - 0x4 ] edi
inc ebx
pop edi
pop esi
pop ebx
leave
retn 0x4
push ebx
push edi
push edi
push edi
lea eax [ ebp - 0x20 ]
push eax
call esi
test eax eax
je r-xdata
push 0xff
push 0xffffffff
push edi
lea eax [ ebp + 0x8 ]
push eax
push ebx
call [ MsgWaitForMultipleObjects@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x12
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ DispatchMessageA@IAT ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
push ebx
push edi
push edi
push edi
lea eax [ ebp - 0x20 ]
push eax
call esi
test eax eax
jne r-xdata
sub_1002d03
mov edi edi
push ebp
mov ebp esp
test [ rw-data ] 0x8
je r-xdata
call sub_100221e
cmp eax 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov [ rw-data ] 0xbc2
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0xff000000
cmp ecx 0xaa000000
jne r-xdata
mov [ rw-data ] eax
jmp r-xdata
test [ rw-data ] 0x2
je r-xdata
test al 0x1
jne r-xdata
pop ebp
retn 0x4
sub_1002d5a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push 0x1
push 0x466
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
sub_1002d83
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov edi [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call edi
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
sub esi [ ebp - 0x2c ]
sub ebx [ ebp - 0x28 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0xc ]
call edi
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
push [ ebp + 0x8 ]
sub edi [ ebp - 0x1c ]
mov [ ebp - 0x8 ] eax
call [ GetDC@IAT ]
push 0x8
push eax
mov [ ebp + 0xc ] eax
call [ GetDeviceCaps@IAT ]
push 0xa
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetDeviceCaps@IAT ]
push [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push [ ebp + 0x8 ]
call [ ReleaseDC@IAT ]
mov eax edi
sub eax esi
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
add ecx [ ebp - 0x1c ]
push 0x0
pop edi
jns r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ecx + esi ]
cmp edx eax
jle r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax ebx
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x18 ]
jns r-xdata
sub eax esi
mov ecx eax
mov edx [ ebp - 0xc ]
lea esi [ eax + ebx ]
cmp esi edx
jle r-xdata
xor eax eax
jmp r-xdata
push 0x5
push edi
push edi
push eax
push ecx
push edi
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x8
sub edx ebx
mov eax edx
sub_1002e55
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ FindResourceA@IAT ]
push edi
push 0xa
push [ ebp + 0x8 ]
xor edi edi
push edi
call esi
push eax
push edi
call [ SizeofResource@IAT ]
mov ebx eax
cmp ebx [ ebp + 0x10 ]
ja r-xdata
mov eax ebx
cmp [ ebp + 0xc ] edi
je r-xdata
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
push 0xa
push [ ebp + 0x8 ]
push edi
call esi
push eax
push edi
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
cmp eax edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
mov ecx ebx
mov edx ecx
shr ecx 0x2
mov esi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ FreeResource@IAT ]
sub_1002ece
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
mov [ esi ] 0x0
push esi
push [ ebp + 0x8 ]
push [ rw-data ]
call [ LoadStringA@IAT ]
sub_1002efd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ lstrlenA@IAT ]
push edi
push [ ebp + 0x10 ]
call esi
push [ ebp + 0x14 ]
mov edi eax
call esi
lea eax [ edi + eax + 0x1 ]
cmp eax [ ebp + 0xc ]
jl r-xdata
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
push edi
call [ lstrcpyA@IAT ]
push edi
call esi
cmp [ eax + edi - 0x1 ] 0x5c
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x14 ]
push edi
call [ lstrcatA@IAT ]
xor eax eax
inc eax
push edi
call esi
cmp [ eax + edi - 0x1 ] 0x2f
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
push edi
call esi
push edi
mov [ eax + edi ] 0x5c
call esi
mov [ eax + edi + 0x1 ] 0x0
sub_1002f6b
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov cl [ edi ]
xor ebx ebx
cmp cl bl
je r-xdata
pop edi
pop ebx
pop ebp
retn 0x4
push esi
lea esi [ edi + 0x1 ]
mov al [ esi ]
cmp al 0x3a
mov [ ebp + 0x8 ] ebx
jne r-xdata
cmp cl 0x5c
jne r-xdata
cmp [ edi + 0x2 ] 0x5c
jne r-xdata
cmp [ esi ] bl
jne r-xdata
cmp al cl
jne r-xdata
lea esi [ edi + 0x3 ]
jmp r-xdata
cmp [ esi ] 0x5c
jne r-xdata
pop esi
lea esi [ edi + 0x2 ]
mov [ ebp + 0x8 ] 0x2
jmp r-xdata
push esi
call [ CharNextA@IAT ]
mov esi eax
cmp [ esi - 0x1 ] 0x3a
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push ebx
push edi
mov [ esi ] bl
call [ CreateDirectoryA@IAT ]
mov [ esi ] 0x5c
dec [ ebp + 0x8 ]
jmp r-xdata
sub_1002fe5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea eax [ eax + eax * 2 ]
shl eax 0x3
mov ecx [ eax + rw-data ]
sub ecx 0x0
je r-xdata
push 0x0
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + rw-data ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
dec ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov edx [ eax + rw-data ]
push ebx
push esi
push edi
mov edi [ eax + rw-data ]
sub edx edi
cmp [ ebp + 0x10 ] edx
jae r-xdata
mov esi [ eax + rw-data ]
add esi edi
mov edi [ ebp + 0xc ]
mov ecx edx
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
add [ eax + rw-data ] edx
pop edi
pop esi
mov eax edx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x10 ]
sub_1003072
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1002c91
cmp [ rw-data ] 0x0
je r-xdata
push edi
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ eax + eax * 2 ]
push [ eax * 8 + rw-data ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
or eax 0xffffffff
pop ebp
retn
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov eax edi
pop edi
pop ebp
retn
add [ rw-data ] edi
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
imul eax eax 0x64
xor edx edx
div [ rw-data ]
push 0x0
push eax
push 0x402
push 0x83a
push ecx
call [ SendDlgItemMessageA@IAT ]
sub_1003108
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
xor edi edi
lea esi [ eax + eax * 2 ]
shl esi 0x3
inc edi
cmp [ esi + rw-data ] edi
jne r-xdata
push [ esi + rw-data ]
call [ CloseHandle@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + rw-data ] edi
mov [ esi + rw-data ] eax
mov [ esi + rw-data ] eax
mov [ esi + rw-data ] eax
jmp r-xdata
or eax 0xffffffff
xor eax eax
mov [ esi + rw-data ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_1003165
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x3
cmp [ eax + rw-data ] 0x1
jne r-xdata
sub ecx 0x0
je r-xdata
sub ecx 0x0
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ ebp + 0xc ]
dec ecx
je r-xdata
push ecx
push 0x0
push [ ebp + 0xc ]
push [ eax + rw-data ]
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
dec ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
add [ eax + rw-data ] ecx
jmp r-xdata
dec ecx
jne r-xdata
pop ebp
retn
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
push 0x2
pop ecx
jmp r-xdata
mov eax [ eax + rw-data ]
pop ebp
retn
mov ecx [ eax + rw-data ]
add ecx [ ebp + 0xc ]
jmp r-xdata
mov [ eax + rw-data ] ecx
sub_10031ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax + eax * 2 ]
shl esi 0x3
cmp [ esi + rw-data ] 0x1
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ DosDateTimeToFileTime@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push eax
push eax
push [ esi + rw-data ]
call [ SetFileTime@IAT ]
neg eax
sbb eax eax
neg eax
sub_10032a1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov eax rw-data
mov esi eax
mov ecx 0xc4
mov edi rw-data
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
push [ esi + 0xc ]
mov edi [ lstrcpyA@IAT ]
push eax
call edi
push [ esi + 0x4 ]
push rw-data
call edi
push [ esi + 0x8 ]
push rw-data
call edi
mov ax [ esi + 0x1e ]
mov [ rw-data ] ax
mov ax [ esi + 0x20 ]
pop edi
mov [ rw-data ] ax
xor eax eax
pop esi
pop ebp
retn 0x4
sub_10032ff
mov edi edi
push esi
push 0x0
push 0x0
mov esi r-xdata
push esi
call sub_1002e55
push 0xa
push esi
push 0x0
mov [ rw-data ] eax
call [ FindResourceA@IAT ]
push eax
push 0x0
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
pop esi
mov eax ecx
retn
sub_1003346
mov edi edi
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
push ebx
push esi
mov esi [ rw-data ]
test esi esi
mov [ ebp - 0x4 ] eax
mov ebx esi
je r-xdata
xor eax eax
cmp [ rw-data ] eax
pop esi
pop ebx
je r-xdata
push edi
mov edi [ LocalFree@IAT ]
cmp [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
push [ ebx ]
mov esi [ esi + 0x4 ]
call edi
push ebx
call edi
test esi esi
mov ebx esi
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
and [ rw-data ] 0x0
call sub_10064de
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
push 0x80
push [ esi ]
call [ SetFileAttributesA@IAT ]
push [ esi ]
call [ DeleteFileA@IAT ]
call sub_1001a5b
push rw-data
lea eax [ ebp - 0x108 ]
push eax
call [ lstrcpyA@IAT ]
test [ rw-data ] 0x20
je r-xdata
push r-xdata
call [ SetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call sub_1002a96
lea eax [ ebp - 0x108 ]
push eax
call sub_1006666
sub_100342e
mov edi edi
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x10c ] ebx
push 0x0
push esi
call edi
test eax eax
je r-xdata
cmp ebx 0x190
jl r-xdata
and [ ebp - 0x10c ] 0x0
xor eax eax
inc eax
mov [ rw-data ] eax
mov [ ebp - 0x10c ] eax
jmp r-xdata
push ebx
lea eax [ ebp - 0x108 ]
push r-xdata
push eax
call [ wsprintfA@IAT ]
add esp 0xc
push [ ebp - 0x110 ]
inc ebx
push esi
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
push [ ebp + 0x10 ]
push esi
call sub_10066cf
push esi
call [ RemoveDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
mov edi [ CreateDirectoryA@IAT ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10c ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn 0xc
push esi
mov [ ebp - 0x10c ] 0x1
call [ DeleteFileA@IAT ]
push 0x0
push esi
call edi
push esi
push 0x0
push r-xdata
push [ ebp - 0x110 ]
call [ GetTempFileNameA@IAT ]
test eax eax
je r-xdata
sub_1003517
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi ]
push edi
xor edi edi
jmp r-xdata
test al al
jne r-xdata
cmp al 0x20
je r-xdata
lea ebx [ edi + esi ]
cmp [ ebx ] 0x0
jne r-xdata
inc edi
mov al [ edi + esi ]
cmp al 0x9
je r-xdata
push ebx
call [ lstrlenA@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
cmp al 0xd
je r-xdata
dec eax
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp al 0xa
je r-xdata
mov cl [ ebx + eax ]
cmp cl 0x20
je r-xdata
add eax edi
mov [ eax + esi + 0x1 ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] edi
xor eax eax
inc eax
cmp al 0xb
je r-xdata
cmp cl 0x9
je r-xdata
cmp al 0xc
jne r-xdata
cmp cl 0xd
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xb
je r-xdata
cmp cl 0xc
jne r-xdata
sub_100359c
mov edi edi
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
inc edi
test eax eax
mov [ ebp - 0x10c ] edi
je r-xdata
mov eax edi
cmp [ eax ] 0x0
je r-xdata
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
mov eax [ ebp - 0x10c ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call [ CharNextA@IAT ]
jmp r-xdata
cmp cl 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn 0x4
push 0x104
mov esi rw-data
push esi
push [ rw-data ]
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
mov cl [ eax ]
cmp cl 0x20
je r-xdata
cmp cl 0xd
je r-xdata
and [ ebp - 0x10c ] 0x0
push 0x5c
push esi
call sub_1006752
mov [ eax + 0x1 ] 0x0
jmp r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xb
je r-xdata
cmp cl 0xc
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
mov ebx eax
xor esi esi
test esi esi
jne r-xdata
mov al [ ebx ]
cmp al 0x20
je r-xdata
test edx edx
mov [ ebp + ecx - 0x108 ] 0x0
je r-xdata
mov al [ ebx ]
cmp al 0x22
jne r-xdata
cmp al 0x9
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
cmp ecx 0x103
jae r-xdata
lea eax [ ebx + 0x1 ]
cmp [ eax ] 0x22
je r-xdata
cmp al 0xd
je r-xdata
and [ ebp - 0x10c ] 0x0
cmp [ ebp - 0x108 ] 0x2f
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + ecx - 0x108 ] al
inc ecx
inc ebx
cmp ecx 0x103
jae r-xdata
test edx edx
jne r-xdata
cmp al 0xa
je r-xdata
movsx eax [ ebp - 0x107 ]
mov esi [ CharUpperA@IAT ]
push eax
call esi
movsx eax al
sub eax 0x3f
je r-xdata
cmp [ ebp - 0x108 ] 0x2d
jne r-xdata
test edx edx
jne r-xdata
mov [ ebp + ecx - 0x108 ] 0x22
inc ecx
inc ebx
inc ebx
jmp r-xdata
mov esi edi
mov edx edi
jmp r-xdata
cmp al 0xb
je r-xdata
call sub_10019a7
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x4
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx eax
jmp r-xdata
cmp al 0xc
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
push eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x106 ] 0x0
jne r-xdata
dec eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x106 ] 0x3a
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp - 0x106 ] 0x3a
jne r-xdata
sub eax 0xa
je r-xdata
and [ ebp - 0x10c ] 0x0
xor eax eax
cmp [ ebp - 0x105 ] 0x22
sete al
add eax 0x3
mov esi eax
lea edi [ ebp + esi - 0x108 ]
push edi
call [ lstrlenA@IAT ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x105 ] 0x22
sete al
add eax 0x3
mov esi eax
lea edi [ ebp + esi - 0x108 ]
push edi
call [ lstrlenA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x106 ] 0x0
jne r-xdata
push 0x3
pop ecx
sub eax ecx
je r-xdata
cmp [ ebp - 0x10c ] 0x0
je r-xdata
jmp r-xdata
and [ ebp - 0x10c ] 0x0
push 0x5b
push edi
call sub_100662b
test eax eax
je r-xdata
lea eax [ ebp - 0x110 ]
push eax
push edi
mov [ ebp - 0x110 ] esi
call sub_1003517
test eax eax
je r-xdata
cmp [ ebp - 0x106 ] 0x3a
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp - 0x106 ] 0x0
je r-xdata
dec eax
je r-xdata
push 0x5d
push edi
call sub_100662b
test eax eax
je r-xdata
push 0x5d
push edi
call sub_100662b
test eax eax
je r-xdata
movsx eax [ ebp - 0x107 ]
push eax
call [ CharUpperA@IAT ]
cmp al 0x54
mov eax [ ebp - 0x110 ]
jne r-xdata
cmp [ ebp - 0x105 ] 0x0
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ ebp - 0x106 ] 0x3a
jne r-xdata
cmp [ ebp - 0x106 ] 0x0
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0x110 ]
push eax
push edi
mov [ ebp - 0x110 ] esi
call sub_1003517
test eax eax
jne r-xdata
push 0x5b
push edi
call sub_100662b
test eax eax
je r-xdata
add eax esi
mov esi rw-data
add eax esi
mov esi rw-data
jmp r-xdata
lea esi [ ebp - 0x105 ]
movsx eax [ ebp - 0x105 ]
push eax
call esi
cmp al 0x31
je r-xdata
cmp [ ebp - 0x106 ] 0x3a
jne r-xdata
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp - 0x110 ]
add eax esi
lea eax [ ebp + eax - 0x108 ]
push eax
push rw-data
call [ lstrcpyA@IAT ]
jmp r-xdata
xor edi edi
inc edi
jmp r-xdata
lea eax [ ebp + eax - 0x108 ]
push eax
push esi
call [ lstrcpyA@IAT ]
push r-xdata
push 0x104
push esi
call sub_10066cf
mov eax esi
push eax
call sub_1002c57
test eax eax
jne r-xdata
mov [ rw-data ] edi
dec eax
dec eax
je r-xdata
cmp al 0x41
je r-xdata
lea eax [ ebp - 0x107 ]
push eax
push r-xdata
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x105 ] 0x0
mov [ rw-data ] edi
je r-xdata
movsx eax [ esi ]
push eax
call [ CharUpperA@IAT ]
movsx eax al
inc esi
sub eax 0x45
je r-xdata
jmp r-xdata
mov [ rw-data ] edi
jmp r-xdata
sub eax 0xf
je r-xdata
mov [ rw-data ] di
jmp r-xdata
cmp al 0x55
jne r-xdata
jmp r-xdata
lea esi [ ebp - 0x105 ]
cmp [ esi ] 0x0
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
and [ ebp - 0x10c ] 0x0
jmp r-xdata
or [ rw-data ] 0x2
sub eax 0x3
je r-xdata
movsx eax [ esi ]
push eax
call [ CharUpperA@IAT ]
movsx eax al
inc esi
sub eax 0x41
je r-xdata
jmp r-xdata
or [ rw-data ] 0x40
jmp r-xdata
sub eax 0x5
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
and [ rw-data ] 0xfffffffd
jmp r-xdata
sub eax 0x5
je r-xdata
mov [ rw-data ] edi
and [ rw-data ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
or [ rw-data ] 0x80
jmp r-xdata
sub eax 0x3
je r-xdata
or [ rw-data ] 0x4
jmp r-xdata
and [ ebp - 0x10c ] 0x0
jmp r-xdata
sub_1003aa1
mov edi edi
push esi
mov esi [ GetLastError@IAT ]
call esi
test eax eax
jg r-xdata
call esi
and eax 0xffff
or eax 0x80070000
pop esi
retn
call esi
pop esi
retn
sub_1003ac7
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
push ebx
mov ebx [ wsprintfA@IAT ]
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
push edi
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
push r-xdata
push eax
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x20 ] edi
call ebx
add esp 0xc
push 0xa
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ FindResourceA@IAT ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
pop edi
pop ebx
call sub_10064de
leave
retn 0x4
push esi
jmp r-xdata
push eax
push edi
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov [ rw-data ] 0x80070714
mov [ ebp - 0x1c ] edi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x4 ]
lea edi [ esi + 0x8 ]
push edi
mov [ ebp - 0x24 ] eax
call [ lstrlenA@IAT ]
lea eax [ eax + edi + 0x1 ]
push eax
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x2c ]
call [ ebp - 0x28 ]
test eax eax
push esi
je r-xdata
pop esi
and [ ebp - 0x1c ] 0x0
call [ FreeResource@IAT ]
call [ FreeResource@IAT ]
inc [ ebp - 0x20 ]
push [ ebp - 0x20 ]
lea eax [ ebp - 0x18 ]
push r-xdata
push eax
call ebx
add esp 0xc
push 0xa
lea eax [ ebp - 0x18 ]
push eax
push 0x0
call [ FindResourceA@IAT ]
test eax eax
jne r-xdata
xor edi edi
jmp r-xdata
sub_1003bb6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi 0x200
xor ecx ecx
mov eax [ ebp + 0x8 ]
xor edx edx
div esi
neg edx
sbb edx edx
imul eax esi
and edx esi
add edx eax
add [ ecx + rw-data ] edx
add ecx 0x4
shl esi 0x1
cmp ecx 0x20
jb r-xdata
xor eax eax
inc eax
pop esi
pop ebp
retn 0x10
sub_1003bf2
mov edi edi
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
push rw-data
lea eax [ ebp - 0x108 ]
xor esi esi
push eax
mov [ ebp - 0x10c ] 0x1
mov [ ebp - 0x110 ] esi
call [ lstrcpyA@IAT ]
push edi
push 0x104
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
push esi
push 0x80
push 0x2
push esi
push esi
push 0x40000000
lea eax [ ebp - 0x108 ]
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
lea eax [ ebp - 0x110 ]
push eax
push [ ebp + 0x8 ]
push ebx
push edi
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x80070052
mov [ ebp - 0x10c ] esi
jmp r-xdata
mov [ rw-data ] 0x80070052
mov [ ebp - 0x10c ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x110 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10c ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn 0x10
push edi
call [ CloseHandle@IAT ]
sub_1003ccc
mov edi edi
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push rw-data
lea eax [ ebp - 0x108 ]
push eax
call [ lstrcpyA@IAT ]
push esi
push 0x104
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
lea eax [ ebp - 0x108 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
push esi
call [ LoadLibraryA@IAT ]
test al 0x10
jne r-xdata
push 0x8
push 0x0
lea eax [ ebp - 0x108 ]
push eax
call [ LoadLibraryExA@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_10064de
leave
retn 0x4
sub_1003d57
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0xf
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
dec eax
je r-xdata
xor eax eax
push 0x0
push 0xffffffff
push 0xb1
push 0x834
push [ ebp + 0x8 ]
call [ SendDlgItemMessageA@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
push 0x0
sub eax 0x100
je r-xdata
pop ebp
retn 0x10
push esi
push edi
call [ GetDesktopWindow@IAT ]
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_1002d83
push [ rw-data ]
mov esi 0x834
push esi
push edi
call [ SetDlgItemTextA@IAT ]
push rw-data
push edi
call [ SetWindowTextA@IAT ]
push edi
call [ SetForegroundWindow@IAT ]
push sub_1002c18
push esi
push edi
call [ GetDlgItem@IAT ]
push eax
call sub_1002bec
xor eax eax
pop edi
inc eax
pop esi
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x6
jne r-xdata
cmp [ ebp + 0x10 ] 0x7
jne r-xdata
push 0x1
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
sub_1003e28
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x10
push esi
je r-xdata
push 0x2
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
sub eax 0x100
je r-xdata
call [ GetDesktopWindow@IAT ]
mov esi [ ebp + 0x8 ]
push eax
push esi
call sub_1002d83
push rw-data
push esi
call [ SetWindowTextA@IAT ]
push [ rw-data ]
push 0x838
push esi
call [ SetDlgItemTextA@IAT ]
push esi
call [ SetForegroundWindow@IAT ]
jmp r-xdata
dec eax
je r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0x10 ]
cmp eax 0x6
jb r-xdata
xor eax eax
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x7
jbe r-xdata
pop esi
pop ebp
retn 0x10
push eax
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
mov eax esi
jmp r-xdata
cmp eax 0x839
jne r-xdata
mov [ rw-data ] esi
sub_1003ebe
mov edi edi
push ebp
mov ebp esp
sub esp 0x244
test [ rw-data ] 0x1
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
push 0xd
pop ecx
mov esi r-xdata
lea edi [ ebp - 0x3c ]
[ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x244 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x240 ] eax
movsb [ edi ] [ esi ]
jne r-xdata
xor eax eax
inc eax
push 0x200
lea eax [ ebp - 0x23c ]
push eax
push [ ebp + 0xc ]
call sub_1002ece
cmp [ ebp - 0x23c ] 0x0
jne r-xdata
cmp [ ebp - 0x240 ] 0x0
je r-xdata
call sub_10068b3
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x240 ]
mov esi [ lstrlenA@IAT ]
call esi
push ebx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x23c ]
push eax
call esi
lea eax [ edi + eax + 0x64 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
push 0x1
push 0x10
push [ rw-data ]
call sub_100685e
test eax eax
je r-xdata
lea eax [ ebp - 0x23c ]
push eax
call [ lstrlenA@IAT ]
inc eax
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi [ lstrlenA@IAT ]
push ebx
call esi
mov edi eax
lea eax [ ebp - 0x23c ]
push eax
call esi
lea eax [ edi + eax + 0x64 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push [ ebp - 0x240 ]
lea eax [ ebp - 0x23c ]
push ebx
push eax
push esi
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn 0x18
mov eax 0x180000
jmp r-xdata
lea eax [ ebp - 0x23c ]
push eax
push esi
call [ lstrcpyA@IAT ]
push ebx
lea eax [ ebp - 0x23c ]
push eax
push esi
call [ wsprintfA@IAT ]
add esp 0xc
jmp r-xdata
push [ ebp + 0x18 ]
call [ MessageBeep@IAT ]
call sub_10068b3
test eax eax
je r-xdata
or eax 0x10010
push eax
push rw-data
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x244 ]
call [ MessageBoxA@IAT ]
xor eax eax
push 0x1
push 0x10
push [ rw-data ]
call sub_100685e
test eax eax
je r-xdata
mov eax 0x180000
jmp r-xdata
or eax [ ebp + 0x18 ]
or eax [ ebp + 0x1c ]
or eax 0x10000
push eax
push rw-data
push esi
push [ ebp - 0x244 ]
call [ MessageBoxA@IAT ]
push esi
mov edi eax
call [ LocalFree@IAT ]
mov eax edi
jmp r-xdata
sub_100409f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ LocalAlloc@IAT ]
push 0x8
push 0x40
call edi
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
inc eax
push eax
push 0x40
call edi
cmp eax ebx
mov [ esi ] eax
jne r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4b5
push [ rw-data ]
call sub_1003ebe
jmp r-xdata
push [ ebp + 0x8 ]
push eax
call [ lstrcpyA@IAT ]
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
xor eax eax
mov [ rw-data ] esi
inc eax
push ebx
push 0x10
push ebx
push ebx
push 0x4b5
push [ rw-data ]
call sub_1003ebe
push esi
call [ LocalFree@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_100412e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
test al 0x8
je r-xdata
test al 0x3
mov [ ebp - 0x4 ] 0x80000000
je r-xdata
or eax 0xffffffff
jmp r-xdata
test ah 0x1
je r-xdata
mov [ ebp - 0x4 ] 0x40000000
leave
retn 0xc
and eax 0x200
neg eax
sbb eax eax
and eax 0x2
add eax 0x3
test ah 0x4
je r-xdata
pop edi
pop esi
pop ebx
cmp [ ebp + 0xc ] 0x3
je r-xdata
and eax 0x200
neg eax
sbb eax eax
and eax 0xfffffffe
add eax 0x4
jmp r-xdata
mov [ ebp + 0xc ] 0x1
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1002f6b
push ebx
push edi
push [ ebp + 0xc ]
push ebx
push ebx
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call esi
mov [ ebp + 0xc ] eax
push ebx
push esi
mov esi [ CreateFileA@IAT ]
push edi
xor ebx ebx
push ebx
mov edi 0x80
push edi
push [ ebp + 0xc ]
push ebx
push ebx
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call esi
cmp eax 0xffffffff
jne r-xdata
sub_10041d8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
xor esi esi
mov eax rw-data
cmp esi 0x28
jne r-xdata
add eax 0x18
inc esi
cmp eax rw-data
jl r-xdata
push rw-data
push [ ebp + 0x8 ]
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4bb
push [ rw-data ]
call sub_1003ebe
cmp [ eax ] 0x1
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100412e
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
cmp eax 0xffffffff
mov [ ecx + rw-data ] eax
je r-xdata
test [ ebp + 0xd ] 0x1
jne r-xdata
or eax 0xffffffff
mov [ ecx + rw-data ] ebx
mov [ ecx + rw-data ] ebx
test [ ebp + 0xc ] 0xb
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov ecx [ rw-data ]
lea eax [ esi + esi * 2 ]
shl eax 0x3
mov [ eax + rw-data ] ecx
mov ecx [ rw-data ]
mov [ eax + rw-data ] ebx
mov [ eax + rw-data ] 0x1
mov [ eax + rw-data ] ecx
mov [ eax + rw-data ] ebx
jmp r-xdata
mov eax esi
jmp r-xdata
sub_10042a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push edi
push 0x6
pop ecx
xor eax eax
lea edi [ ebp - 0x24 ]
[ edi ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
push sub_1003165
push sub_1003108
push sub_1003072
push sub_1002fe5
push sub_10041d8
push sub_100328c
push sub_1003275
call sub_1006aa4
mov edi eax
add esp 0x24
test edi edi
je r-xdata
pop edi
leave
retn 0x4
push esi
push 0x180
push 0x8000
push rw-data
call sub_10041d8
mov esi eax
add esp 0xc
cmp esi 0xffffffff
je r-xdata
xor eax eax
lea eax [ ebp - 0x24 ]
push eax
push esi
push edi
call sub_1006b3b
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ rw-data ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push esi
call sub_1003108
cmp eax 0xffffffff
pop ecx
je r-xdata
push edi
call sub_100735b
neg eax
sbb eax eax
pop ecx
neg eax
jmp r-xdata
pop esi
sub_100435e
mov edi edi
push esi
push 0x24
push rw-data
push r-xdata
call sub_1002e55
xor esi esi
cmp eax 0x24
je r-xdata
mov eax [ rw-data ]
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
push esi
push 0x10
push esi
push esi
push 0x4b1
push 0x4
push rw-data
push r-xdata
call sub_1002e55
push sub_1003bb6
call sub_1003ac7
test eax eax
jne r-xdata
push esi
push 0x10
push esi
push esi
push 0x4c6
jmp r-xdata
xor eax eax
pop esi
retn
xor eax eax
inc eax
pop esi
retn
push esi
push 0x10
push esi
push esi
push 0x4c6
push esi
call sub_1003ebe
push esi
call sub_1003ebe
mov [ rw-data ] 0x80070714
jmp r-xdata
sub_10043ec
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor edi edi
push edi
push edi
mov esi r-xdata
push esi
call sub_1002e55
mov [ ebp - 0x4 ] eax
inc eax
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp - 0x4 ]
push ebx
push esi
call sub_1002e55
test eax eax
jne r-xdata
push edi
push 0x10
push edi
push edi
push 0x4b5
push edi
call sub_1003ebe
call sub_1003aa1
mov [ rw-data ] eax
jmp r-xdata
push r-xdata
push ebx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
push edi
push 0x10
push edi
push edi
push 0x4b1
push edi
call sub_1003ebe
push ebx
call [ LocalFree@IAT ]
mov [ rw-data ] 0x80070714
jmp r-xdata
xor eax eax
push 0x4
push 0x20
push edi
push ebx
push 0x3e9
push edi
call sub_1003ebe
push ebx
mov esi eax
call [ LocalFree@IAT ]
cmp esi 0x6
jne r-xdata
push ebx
call [ LocalFree@IAT ]
mov [ rw-data ] 0x800704c7
mov [ rw-data ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
inc eax
jmp r-xdata
sub_10044bd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
mov esi eax
add esi 0x14
push esi
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
xor ebx ebx
cmp edi ebx
jne r-xdata
push [ ebp + 0x8 ]
push edi
call [ lstrcpyA@IAT ]
push r-xdata
push esi
push edi
call sub_10066cf
push ebx
push 0x4000080
push 0x1
push ebx
push ebx
push 0x40000000
push edi
call [ CreateFileA@IAT ]
push edi
mov esi eax
call [ LocalFree@IAT ]
cmp esi 0xffffffff
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4b5
push ebx
call sub_1003ebe
call sub_1003aa1
mov [ rw-data ] eax
xor eax eax
push esi
call [ CloseHandle@IAT ]
push [ ebp + 0x8 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
test al 0x10
je r-xdata
xor eax eax
mov [ rw-data ] ebx
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_100456a
mov edi edi
push ebp
mov ebp esp
sub esp 0x324
mov eax [ rw-data ]
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x31c ] edi
mov [ ebp - 0x318 ] ebx
jne r-xdata
push esi
lea eax [ ebp - 0x310 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov esi [ SetCurrentDirectoryA@IAT ]
push edi
call esi
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x318 ]
push eax
push ebx
call sub_1006a45
cmp eax ebx
mov [ ebp - 0x314 ] eax
jne r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4bc
push ebx
call sub_1003ebe
call sub_1003aa1
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop ebx
call sub_10064de
leave
retn 0xc
push ebx
push ebx
lea eax [ ebp - 0x320 ]
push eax
lea eax [ ebp - 0x324 ]
push eax
push ebx
push ebx
push ebx
push ebx
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
push 0x7f
mov [ ebp - 0x20c ] bl
xor eax eax
pop ecx
lea edi [ ebp - 0x20b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
call sub_1003aa1
push ebx
mov [ rw-data ] eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
push ebx
call [ GetLastError@IAT ]
push eax
push ebx
push 0x1000
call [ FormatMessageA@IAT ]
push ebx
push 0x10
lea eax [ ebp - 0x20c ]
push eax
push [ ebp - 0x31c ]
push 0x4b0
jmp r-xdata
pop esi
lea eax [ ebp - 0x310 ]
push eax
call esi
push 0x3
push edi
lea eax [ ebp - 0xc ]
push eax
call [ lstrcpynA@IAT ]
mov ecx 0x200
xor eax eax
push 0x7f
mov [ ebp - 0x20c ] bl
pop ecx
lea edi [ ebp - 0x20b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
call sub_1003aa1
push ebx
mov [ rw-data ] eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
push ebx
call [ GetLastError@IAT ]
push eax
push ebx
push 0x1000
call [ FormatMessageA@IAT ]
push ebx
push 0x10
lea eax [ ebp - 0x20c ]
push eax
push [ ebp - 0x31c ]
push 0x4f9
push ebx
call sub_1003ebe
lea eax [ ebp - 0x310 ]
push eax
call esi
jmp r-xdata
cmp ax 0x8
jne r-xdata
shl ecx 0x1
inc eax
cmp ax 0x8
jb r-xdata
xor eax eax
jmp r-xdata
test [ rw-data ] 0x8
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4c5
push ebx
call sub_1003ebe
jmp r-xdata
cmp [ ebp - 0x318 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax ax
mov eax [ eax * 4 + rw-data ]
test [ ebp - 0x31f ] 0x80
je r-xdata
cmp esi ebx
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov edx [ rw-data ]
movzx eax ax
mov eax [ eax * 4 + rw-data ]
mov ecx edx
shr ecx 0x2
shl eax 0x1
add ecx edx
jmp r-xdata
cmp ecx [ ebp - 0x314 ]
jmp r-xdata
cmp eax [ ebp - 0x314 ]
jmp r-xdata
lea edx [ ecx + eax ]
cmp edx [ ebp - 0x314 ]
mov esi [ ebp + 0xc ]
and esi 0x1
je r-xdata
jbe r-xdata
xor eax eax
mov [ rw-data ] ebx
inc eax
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
push [ ebp + 0x10 ]
call sub_10020a4
jmp r-xdata
sub_10047b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x108 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
test eax eax
jne r-xdata
push 0x2
push 0x2
lea eax [ ebp - 0x108 ]
push eax
call sub_100456a
push eax
push 0x10
push eax
push eax
push 0x4f0
push eax
call sub_1003ebe
call sub_1003aa1
mov [ rw-data ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_10064de
leave
retn
sub_1004819
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x5
push [ ebp + 0xc ]
push esi
call [ FindResourceA@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4fb
push ebx
call sub_1003ebe
mov esi [ ebp + 0x1c ]
push eax
push esi
call [ LoadResource@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x18 ]
push ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x18
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call [ DialogBoxIndirectParamA@IAT ]
push edi
mov esi eax
call [ FreeResource@IAT ]
cmp esi 0xffffffff
jne r-xdata
sub_100488c
mov edi edi
push ebp
mov ebp esp
sub esp 0x1b8
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push edi
lea eax [ ebp - 0x19c ]
xor edi edi
push eax
mov [ ebp - 0x1a4 ] esi
mov [ ebp - 0x1a0 ] edi
mov [ ebp - 0x19c ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18c ]
dec eax
mov edx [ ebp - 0x198 ]
je r-xdata
mov [ ebp - 0x1a0 ] 0x4b4
xor eax eax
inc eax
mov [ rw-data ] di
mov [ rw-data ] eax
mov [ rw-data ] eax
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x1a0 ] eax
pop edi
sete al
pop esi
call sub_10064de
leave
retn 0x4
cmp esi edi
je r-xdata
xor ecx ecx
push 0x3
inc ecx
pop eax
cmp edx eax
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] 0x2
ja r-xdata
mov [ ebp - 0x1a0 ] 0x4ca
jmp r-xdata
cmp [ rw-data ] di
jne r-xdata
cmp edx 0x5
jb r-xdata
mov [ rw-data ] cx
jb r-xdata
push edi
push 0x10
push edi
push edi
push [ ebp - 0x1a0 ]
push edi
call sub_1003ebe
jmp r-xdata
add esi 0x4
add esi 0x40
jmp r-xdata
cmp [ rw-data ] edi
jne r-xdata
mov [ rw-data ] ax
jmp r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
jmp r-xdata
cmp edx eax
jne r-xdata
cmp ecx 0x1
je r-xdata
test eax eax
jg r-xdata
xor ecx ecx
push ebx
mov ebx [ ebp - 0x190 ]
mov [ ebp - 0x1a8 ] ecx
cmp [ ebp - 0x194 ] 0x33
jae r-xdata
mov [ ebp - 0x1a0 ] 0x54c
jmp r-xdata
inc ecx
cmp ecx 0x2
mov [ ebp - 0x1a8 ] ecx
jl r-xdata
test edx edx
jne r-xdata
mov eax [ ebp - 0x1a4 ]
xor ebx ebx
cmp [ ebp - 0x1a0 ] edi
jne r-xdata
lea eax [ ecx + ecx * 2 ]
lea eax [ esi + eax * 8 ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x194 ]
push [ ebp - 0x198 ]
call sub_1002196
mov ecx [ ebp - 0x1a8 ]
mov [ ebp + ecx * 4 - 0x1b0 ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ esi + eax * 8 ]
push [ eax + 0x10 ]
push [ eax + 0xc ]
push [ ebp - 0x194 ]
push [ ebp - 0x198 ]
call sub_1002196
mov ecx [ ebp - 0x1a8 ]
mov edx [ ebp + ecx * 4 - 0x1b0 ]
test edx edx
mov [ ebp + ecx * 4 - 0x1b8 ] eax
mov edi 0x54d
jl r-xdata
jmp r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ esi + 0x34 ]
push [ esi + 0x30 ]
lea edi [ ecx + eax + 0x84 ]
call sub_100216f
test [ rw-data ] 0x1
mov [ ebp - 0x1a4 ] eax
jne r-xdata
mov edx [ eax + 0x80 ]
imul ecx ecx 0x3c
add edx ecx
lea esi [ edx + eax + 0x84 ]
lea ebx [ ebp - 0x108 ]
mov eax [ ebp - 0x1a4 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
movzx edx bx
lea eax [ ecx + ecx * 2 ]
cmp edx [ esi + eax * 8 + 0x14 ]
test edx edx
jne r-xdata
lea eax [ ecx + ecx * 2 ]
movzx edx bx
lea eax [ esi + eax * 8 ]
cmp edx [ eax + 0x8 ]
jb r-xdata
push 0x0
push 0x30
push ebx
push rw-data
push [ ebp - 0x1a0 ]
push 0x0
call sub_1003ebe
cmp [ edi ] 0x0
je r-xdata
pop ebx
lea ecx [ ebp - 0x1a8 ]
push ecx
push 0x104
lea ecx [ ebp - 0x108 ]
push ecx
push eax
call sub_1002410
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
movzx edx bx
lea eax [ ecx + ecx * 2 ]
cmp edx [ esi + eax * 8 + 0x8 ]
jb r-xdata
cmp edx [ eax + 0x14 ]
jmp r-xdata
push 0x0
call [ MessageBeep@IAT ]
call sub_10068b3
test eax eax
je r-xdata
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x1a0 ] edi
jbe r-xdata
xor eax eax
push 0x1
push 0x10
push [ rw-data ]
call sub_100685e
test eax eax
je r-xdata
test [ ebp - 0x1a4 ] 0x1
je r-xdata
cmp eax 0x6
mov eax 0x180000
jmp r-xdata
cmp eax 0x1
jmp r-xdata
and [ ebp - 0x1a0 ] 0x0
jmp r-xdata
or eax [ ebp - 0x1a4 ]
or eax 0x30
push eax
push rw-data
push edi
push 0x0
call [ MessageBoxA@IAT ]
test [ ebp - 0x1a4 ] 0x4
je r-xdata
jne r-xdata
sub_1004bc8
mov edi edi
push ebx
push esi
push edi
xor edi edi
push edi
push edi
mov esi r-xdata
push esi
call sub_1002e55
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
push ebx
push eax
push esi
call sub_1002e55
test eax eax
jne r-xdata
push edi
push 0x10
push edi
push edi
push 0x4b5
push edi
call sub_1003ebe
call sub_1003aa1
mov [ rw-data ] eax
jmp r-xdata
push r-xdata
push [ rw-data ]
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
push edi
push 0x10
push edi
push edi
push 0x4b1
push edi
call sub_1003ebe
push [ rw-data ]
call [ LocalFree@IAT ]
mov [ rw-data ] 0x80070714
jmp r-xdata
xor eax eax
jmp r-xdata
push [ rw-data ]
call [ LocalFree@IAT ]
push edi
push edi
push sub_1003d57
push edi
push 0x7d1
push [ rw-data ]
call sub_1004819
push [ rw-data ]
mov esi eax
call [ LocalFree@IAT ]
cmp esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ rw-data ] edi
inc eax
mov [ rw-data ] 0x800704c7
sub_1004cae
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
xor esi esi
xor eax eax
cmp ebx esi
mov [ ebp - 0x208 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
call sub_10064de
leave
retn 0x8
push edi
lea edi [ ebp - 0x21c ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x21c ]
push eax
push ecx
push esi
push esi
push 0x20
push esi
push esi
push esi
push ebx
push esi
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
call sub_1003aa1
push esi
mov [ rw-data ] eax
push 0x200
lea eax [ ebp - 0x204 ]
push eax
push esi
call [ GetLastError@IAT ]
push eax
push esi
push 0x1000
call [ FormatMessageA@IAT ]
push esi
push 0x10
lea eax [ ebp - 0x204 ]
push eax
push ebx
push 0x4c4
push esi
call sub_1003ebe
push 0xffffffff
push [ ebp - 0x21c ]
call [ WaitForSingleObject@IAT ]
lea eax [ ebp - 0x20c ]
push eax
push [ ebp - 0x21c ]
call [ GetExitCodeProcess@IAT ]
cmp [ rw-data ] esi
mov ecx [ ebp - 0x20c ]
jne r-xdata
push ecx
call sub_1002d03
push [ ebp - 0x218 ]
mov edi [ CloseHandle@IAT ]
call edi
push [ ebp - 0x21c ]
call edi
test [ rw-data ] 0x4
je r-xdata
mov al [ rw-data ]
test al 0x1
je r-xdata
mov eax [ ebp - 0x208 ]
pop edi
cmp [ ebp - 0x20c ] esi
jge r-xdata
test al 0x2
jne r-xdata
jmp r-xdata
mov eax ecx
and eax 0xff000000
cmp eax 0xaa000000
jne r-xdata
mov [ ebp - 0x208 ] esi
mov [ rw-data ] ecx
sub_1004de5
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor edi edi
push edi
push edi
mov esi r-xdata
push esi
call sub_1002e55
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
cmp eax edi
mov [ ebp - 0x4 ] eax
jne r-xdata
push ebx
push eax
push esi
call sub_1002e55
test eax eax
jne r-xdata
push edi
push 0x10
push edi
push edi
push 0x4b5
push edi
call sub_1003ebe
jmp r-xdata
push r-xdata
push [ ebp - 0x4 ]
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
push edi
push 0x10
push edi
push edi
push 0x4b1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ LocalFree@IAT ]
push edi
push 0x40
push edi
push [ ebp - 0x4 ]
push 0x3e9
push edi
call sub_1003ebe
sub_1004e73
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
xor ebx ebx
cmp edi ebx
mov [ ebp - 0x14 ] edi
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4c2
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
push edi
call [ FreeLibrary@IAT ]
push ebx
push 0x10
push ebx
push ebx
push 0x4c1
jmp r-xdata
push 0xc3
push edi
call esi
cmp eax ebx
mov [ ebp - 0x10 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1003ebe
xor eax eax
push rw-data
push edi
call esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp [ rw-data ] bl
mov esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x34 ]
push eax
mov [ edi ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] sub_1002d5a
mov [ ebp - 0x1c ] esi
call [ ebp - 0x8 ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
push esi
push 0x104
call [ GetTempPathA@IAT ]
push esi
call [ lstrlenA@IAT ]
mov edi [ CharPrevA@IAT ]
add eax esi
push eax
push esi
call edi
cmp [ eax ] 0x5c
mov [ ebp - 0x4 ] eax
jne r-xdata
push [ ebp - 0x14 ]
call [ FreeLibrary@IAT ]
xor eax eax
cmp [ edi ] bl
setne al
jmp r-xdata
push esi
push eax
call [ ebp - 0xc ]
cmp [ rw-data ] bl
je r-xdata
push eax
push esi
call edi
cmp [ eax ] 0x3a
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
call [ ebp - 0x10 ]
push esi
push edi
call [ lstrcpyA@IAT ]
mov eax [ ebp - 0x4 ]
mov [ eax ] bl
sub_1004faf
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push esi
inc ebx
call sub_100672a
test eax eax
je r-xdata
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
push 0x80
push esi
call [ SetFileAttributesA@IAT ]
test [ rw-data ] bl
jne r-xdata
push 0x6
push 0x0
push sub_1003e28
push [ rw-data ]
mov [ rw-data ] esi
push 0x7d3
push [ rw-data ]
call sub_1004819
sub eax 0x6
je r-xdata
dec eax
je r-xdata
xor ebx ebx
jmp r-xdata
sub eax 0x832
jne r-xdata
mov [ rw-data ] ebx
sub_100502e
mov edi edi
push ebp
mov ebp esp
sub esp 0x108
cmp [ rw-data ] 0x0
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x3
jne r-xdata
push esi
call sub_10032a1
dec eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
push [ esi + 0x14 ]
call sub_1003108
pop ecx
xor eax eax
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
call sub_10064de
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
dec eax
je r-xdata
push [ esi + 0x4 ]
lea eax [ ebp - 0x108 ]
push rw-data
push 0x104
push eax
call sub_1002efd
test eax eax
je r-xdata
push [ esi + 0x4 ]
push 0x837
push eax
call [ SetDlgItemTextA@IAT ]
push [ esi + 0x4 ]
lea eax [ ebp - 0x108 ]
push rw-data
push 0x104
push eax
call sub_1002efd
test eax eax
je r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_1004faf
test eax eax
je r-xdata
xor eax eax
mov ax [ esi + 0x1a ]
push eax
xor eax eax
mov ax [ esi + 0x18 ]
push eax
push [ esi + 0x14 ]
call sub_10031ee
test eax eax
je r-xdata
push 0x180
lea eax [ ebp - 0x108 ]
push 0x8302
push eax
call sub_10041d8
mov esi eax
add esp 0xc
cmp esi 0xffffffff
je r-xdata
push [ esi + 0x14 ]
call sub_1003108
xor eax eax
mov ax [ esi + 0x1c ]
pop ecx
push eax
call sub_1003255
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ SetFileAttributesA@IAT ]
neg eax
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_100409f
test eax eax
je r-xdata
inc [ rw-data ]
mov eax esi
jmp r-xdata
sub_1005190
call sub_10032ff
test eax eax
jne r-xdata
mov eax [ rw-data ]
push ebx
push esi
xor esi esi
cmp eax esi
push edi
je r-xdata
retn
push [ rw-data ]
call sub_10042a4
test eax eax
jne r-xdata
mov edi [ GetDlgItem@IAT ]
push esi
push 0x842
push eax
call edi
mov ebx [ ShowWindow@IAT ]
push eax
call ebx
push 0x5
push 0x841
push [ rw-data ]
call edi
push eax
call ebx
push rw-data
push 0x1
push sub_1003165
push sub_1003108
push sub_1003072
push sub_1002fe5
push sub_10041d8
push sub_100328c
push sub_1003275
call sub_1006aa4
mov ebx eax
add esp 0x24
cmp ebx esi
je r-xdata
push esi
push 0x10
push esi
push esi
push 0x4ba
jmp r-xdata
mov eax [ rw-data ]
push esi
push 0x10
push esi
add eax 0x514
push esi
push eax
push rw-data
push esi
push sub_100502e
push esi
push r-xdata
push rw-data
push ebx
call sub_1007b2d
mov edi eax
add esp 0x1c
cmp edi esi
je r-xdata
push [ rw-data ]
call sub_1003ebe
xor edi edi
cmp edi esi
jne r-xdata
push eax
call [ FreeResource@IAT ]
mov [ rw-data ] esi
mov eax [ rw-data ]
cmp eax esi
je r-xdata
push ebx
call sub_100735b
test eax eax
pop ecx
jne r-xdata
test [ rw-data ] 0x1
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
test [ rw-data ] 0x1
jne r-xdata
push esi
push 0x10
push esi
push esi
push 0x4f8
push esi
call sub_1003ebe
push esi
push edi
push 0xfa1
push [ rw-data ]
call [ SendMessageA@IAT ]
sub_10052d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ rw-data ]
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
je r-xdata
push eax
mov esi rw-data
push esi
call [ lstrcpyA@IAT ]
mov edi 0x104
push edi
lea ecx [ ebp - 0x108 ]
push ecx
push eax
call sub_100342e
test eax eax
je r-xdata
push ebx
push [ ebp + 0x10 ]
push esi
call sub_100456a
test eax eax
je r-xdata
push ebx
push esi
call [ CreateDirectoryA@IAT ]
test eax eax
je r-xdata
xor eax eax
lea eax [ ebp - 0x108 ]
push eax
mov esi rw-data
push esi
call [ lstrcpyA@IAT ]
test [ rw-data ] 0x20
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov [ rw-data ] ebx
mov eax edi
jmp r-xdata
call sub_1003aa1
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] edi
push r-xdata
push edi
push esi
call sub_10066cf
jmp r-xdata
lea eax [ ebp - 0x12c ]
push eax
call [ GetSystemInfo@IAT ]
movzx eax [ ebp - 0x12c ]
sub eax ebx
je r-xdata
push esi
mov [ rw-data ] ebx
call [ RemoveDirectoryA@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn 0xc
push esi
call sub_10044bd
xor edi edi
inc edi
test eax eax
jne r-xdata
push r-xdata
dec eax
je r-xdata
push r-xdata
jmp r-xdata
dec eax
je r-xdata
push edi
push esi
call sub_10066cf
push r-xdata
jmp r-xdata
dec eax
jne r-xdata
push r-xdata
jmp r-xdata
sub_10053fa
mov edi edi
push ebp
mov ebp esp
sub esp 0x114
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x114 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x110 ] eax
mov [ rw-data ] eax
xor eax eax
mov ecx 0x23f
mov edi rw-data
[ edi ]
push 0x41
mov ecx 0xcb
mov edi rw-data
[ edi ]
pop ecx
mov edi rw-data
[ edi ]
push 0x7f
mov esi rw-data
xor edi edi
push esi
xor ebx ebx
inc edi
push r-xdata
mov [ ebp - 0x10c ] ebx
mov [ rw-data ] edi
call sub_1002e55
cmp eax ebx
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4b1
cmp eax 0x80
ja r-xdata
push ebx
push edi
push edi
push ebx
call [ CreateEventA@IAT ]
push eax
mov [ rw-data ] eax
call [ SetEvent@IAT ]
push 0x4
push rw-data
push r-xdata
call sub_1002e55
test eax eax
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4b1
push ebx
call sub_1003ebe
mov [ rw-data ] 0x80070714
jmp r-xdata
test [ rw-data ] 0xc0
je r-xdata
xor eax eax
push [ ebp - 0x114 ]
mov [ rw-data ] ebx
call sub_100359c
test eax eax
jne r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push eax
push r-xdata
call sub_1002e55
test eax eax
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x520
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
push edi
push ebx
call [ CreateMutexA@IAT ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0xa
push r-xdata
push [ ebp - 0x110 ]
call [ FindResourceA@IAT ]
cmp eax ebx
je r-xdata
push rw-data
call sub_1002a96
jmp r-xdata
push ebx
call sub_1003ebe
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
push eax
push [ ebp - 0x110 ]
call [ LoadResource@IAT ]
mov [ ebp - 0x10c ] eax
test [ rw-data ] 0x80
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call [ InitCommonControls@IAT ]
push 0x4
push 0x20
push ebx
push esi
push 0x524
push ebx
call sub_1003ebe
cmp eax 0x6
je r-xdata
push ebx
push 0x10
push ebx
push esi
push 0x54b
push ebx
call sub_1003ebe
jmp r-xdata
mov eax edi
jmp r-xdata
push [ ebp - 0x10c ]
call sub_100488c
test eax eax
je r-xdata
push [ rw-data ]
call [ CloseHandle@IAT ]
mov [ rw-data ] 0x800700b7
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn 0xc
mov ax [ rw-data ]
cmp ax di
je r-xdata
test [ rw-data ] 0x1
je r-xdata
cmp ax 0x2
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
cmp ax 0x3
jne r-xdata
call sub_1001760
test eax eax
jne r-xdata
push 0x83e
push 0x547
push sub_100189d
push ebx
push 0x7d6
push [ rw-data ]
call sub_1004819
cmp eax 0x83d
jne r-xdata
sub_1005670
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x10
push ebx
push esi
push edi
je r-xdata
push 0x0
sub eax 0x100
je r-xdata
call [ GetDesktopWindow@IAT ]
mov esi [ ebp + 0x8 ]
push eax
push esi
call sub_1002d83
push rw-data
push esi
call [ SetWindowTextA@IAT ]
xor edi edi
push edi
push 0x103
push 0xc5
push 0x835
push esi
call [ SendDlgItemMessageA@IAT ]
xor ebx ebx
inc ebx
cmp [ rw-data ] bx
jne r-xdata
dec eax
je r-xdata
mov eax ebx
jmp r-xdata
push edi
push 0x836
push esi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x104
push ebx
mov esi rw-data
push esi
push 0x835
push [ ebp + 0x8 ]
call [ GetDlgItemTextA@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
xor edi edi
push edi
push 0x10
push edi
push edi
push 0x4bf
push esi
call sub_1002c57
test eax eax
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
mov [ rw-data ] 0x800704c7
jmp r-xdata
sub eax 0x834
jne r-xdata
xor eax eax
inc eax
push esi
call [ GetFileAttributesA@IAT ]
xor edi edi
cmp eax 0xffffffff
jne r-xdata
push 0x200
mov edi rw-data
push edi
push 0x3e8
push [ rw-data ]
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
push r-xdata
push ebx
push esi
call sub_10066cf
push esi
call sub_10044bd
test eax eax
jne r-xdata
push 0x4
push 0x20
push edi
push esi
push 0x54a
push [ ebp + 0x8 ]
call sub_1003ebe
cmp eax 0x6
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi rw-data
push esi
push edi
push ebx
call sub_1004e73
test eax eax
je r-xdata
xor edi edi
push edi
push 0x10
push edi
push edi
push 0x4b1
push [ ebp + 0x8 ]
call sub_1003ebe
push edi
jmp r-xdata
xor ebx ebx
inc ebx
cmp [ rw-data ] 0x5c
jne r-xdata
push edi
push 0x10
push edi
push edi
push 0x4be
jmp r-xdata
push edi
push esi
call [ CreateDirectoryA@IAT ]
test eax eax
jne r-xdata
push esi
push 0x835
push ebx
call [ SetDlgItemTextA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
mov edi ebx
cmp [ rw-data ] 0x5c
je r-xdata
push [ ebp + 0x8 ]
call sub_1003ebe
jmp r-xdata
push edi
push 0x10
push edi
push esi
push 0x4cb
jmp r-xdata
xor edi edi
push edi
push 0x10
push edi
push edi
push 0x4c0
push ebx
call sub_1003ebe
push edi
push ebx
jmp r-xdata
push ebx
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
push ebx
push edi
push esi
call sub_100456a
test eax eax
je r-xdata
call [ EndDialog@IAT ]
sub_100589b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x10
push esi
je r-xdata
xor esi esi
inc esi
sub eax 0xf2
je r-xdata
xor esi esi
inc esi
cmp [ ebp + 0x10 ] 0x1b
jne r-xdata
sub eax 0xe
je r-xdata
mov eax esi
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
call [ GetDesktopWindow@IAT ]
push eax
push edi
call sub_1002d83
xor esi esi
cmp [ rw-data ] esi
je r-xdata
dec eax
je r-xdata
mov [ rw-data ] esi
push rw-data
push edi
call [ SetWindowTextA@IAT ]
push rw-data
push esi
push esi
push sub_1005190
push esi
push esi
call [ CreateThread@IAT ]
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
push ebx
push 0xbb9
push esi
mov esi [ GetDlgItem@IAT ]
push 0x464
mov ebx 0x83b
push ebx
push edi
call esi
mov edi [ SendMessageA@IAT ]
push eax
call edi
push 0xffff0000
push 0xffffffff
push 0x465
push ebx
push [ ebp + 0x8 ]
call esi
push eax
call edi
mov edi [ ebp + 0x8 ]
xor esi esi
pop ebx
xor esi esi
inc esi
cmp [ ebp + 0x10 ] 0x2
jne r-xdata
sub eax 0xe90
je r-xdata
xor eax eax
inc eax
pop edi
jmp r-xdata
push esi
push 0x10
push esi
push esi
push 0x4b8
push edi
call sub_1003ebe
push esi
push edi
call [ EndDialog@IAT ]
push [ rw-data ]
call [ ResetEvent@IAT ]
push 0x4
push 0x20
push 0x0
push r-xdata
push 0x4b2
push [ rw-data ]
call sub_1003ebe
cmp eax 0x6
je r-xdata
push 0x0
push [ rw-data ]
call [ TerminateThread@IAT ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
xor eax eax
inc eax
jmp r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn 0x10
push [ rw-data ]
mov [ rw-data ] esi
call [ SetEvent@IAT ]
push [ rw-data ]
call sub_1002c91
jmp r-xdata
cmp eax esi
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
push [ rw-data ]
call [ SetEvent@IAT ]
jmp r-xdata
sub_1005a36
mov edi edi
push ebx
xor ebx ebx
xor eax eax
inc ebx
mov [ eax + rw-data ] ebx
add eax 0x18
cmp eax 0x3c0
jb r-xdata
test [ rw-data ] bl
jne r-xdata
call sub_1005190
test [ rw-data ] bl
jne r-xdata
push sub_1003bf2
call sub_1003ac7
test eax eax
jne r-xdata
mov [ rw-data ] 0x8007042b
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
neg eax
push sub_100589b
sbb eax eax
push 0x0
add eax 0x7d5
push eax
push [ rw-data ]
call sub_1004819
jmp r-xdata
and [ rw-data ] 0x0
mov eax ebx
pop ebx
retn
xor eax eax
pop ebx
retn
test eax eax
jne r-xdata
sub_1005abc
mov edi edi
push ebp
mov ebp esp
sub esp 0x188
mov eax [ rw-data ]
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x124 ] ebx
mov [ rw-data ] ebx
jne r-xdata
push esi
mov esi [ LocalFree@IAT ]
mov [ ebp - 0x110 ] ebx
push edi
push 0x4
push rw-data
push r-xdata
call sub_1002e55
cmp eax ebx
je r-xdata
push rw-data
lea eax [ ebp - 0x108 ]
push eax
call [ lstrcpyA@IAT ]
xor edi edi
inc edi
push 0x4
lea eax [ ebp - 0x118 ]
push eax
push r-xdata
call sub_1002e55
cmp eax ebx
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4b1
push ebx
call sub_1003ebe
mov [ rw-data ] 0x80070714
xor eax eax
jmp r-xdata
cmp eax 0x4
jbe r-xdata
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x104
lea eax [ ebp - 0x108 ]
push eax
call sub_10026e2
test eax eax
je r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push eax
push r-xdata
call sub_1002e55
test eax eax
je r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4b1
push ebx
call sub_1003ebe
mov [ rw-data ] 0x80070714
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
call sub_10064de
leave
retn
xor eax eax
jmp r-xdata
cmp [ ebp - 0x124 ] ebx
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
pop edi
pop esi
xor edi edi
inc edi
cmp [ ebp - 0x118 ] edi
jne r-xdata
cmp [ ebp - 0x114 ] ebx
je r-xdata
cmp [ rw-data ] di
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push r-xdata
lea eax [ ebp - 0x108 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x118 ] 0x2
jne r-xdata
mov [ ebp - 0x158 ] bx
jmp r-xdata
lea eax [ ebp - 0x188 ]
push eax
push [ ebp - 0x10c ]
call sub_1004cae
test eax eax
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov eax edi
call sub_1001cf4
cmp [ ebp - 0x118 ] 0x3
jne r-xdata
mov [ ebp - 0x158 ] 0x6
jmp r-xdata
mov [ ebp - 0x15c ] edi
push [ ebp - 0x10c ]
call esi
jmp r-xdata
push [ ebp - 0x10c ]
call esi
inc [ ebp - 0x110 ]
cmp [ ebp - 0x110 ] 0x2
jb r-xdata
push ebx
push 0x10
push ebx
push ebx
push 0x4c7
push ebx
call sub_1003ebe
push [ ebp - 0x10c ]
call esi
mov [ rw-data ] 0x8007042b
jmp r-xdata
cmp [ ebp - 0x114 ] ebx
je r-xdata
cmp [ ebp - 0x114 ] ebx
jne r-xdata
cmp [ ebp - 0x110 ] ebx
jne r-xdata
mov [ ebp - 0x158 ] 0x3
cmp [ ebp - 0x110 ] edi
jne r-xdata
mov ax [ rw-data ]
cmp ax bx
je r-xdata
push 0x11
xor eax eax
cmp [ rw-data ] bl
pop ecx
lea edi [ ebp - 0x188 ]
[ edi ]
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x188 ] 0x44
jne r-xdata
xor edi edi
inc edi
test [ rw-data ] 0x4
je r-xdata
mov [ ebp - 0x124 ] edi
call sub_1001aa7
cmp [ ebp - 0x120 ] ebx
jne r-xdata
test al 0x1
je r-xdata
push r-xdata
call sub_1003ccc
mov edi eax
cmp edi ebx
je r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push eax
push r-xdata
call sub_1002e55
test eax eax
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x11c ] r-xdata
jmp r-xdata
push ebx
push 0x10
push ebx
push r-xdata
push 0x4c8
push ebx
call sub_1003ebe
jmp r-xdata
push rw-data
push edi
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push eax
push [ ebp - 0x11c ]
call sub_1002e55
test eax eax
je r-xdata
mov [ ebp - 0x11c ] r-xdata
push [ ebp - 0x10c ]
call esi
call sub_1003aa1
mov [ rw-data ] eax
jmp r-xdata
push ebx
push 0x10
push ebx
push rw-data
push 0x4c9
push ebx
call sub_1003ebe
push edi
call [ FreeLibrary@IAT ]
cmp [ rw-data ] ebx
mov ecx [ ebp - 0x10c ]
mov [ ebp - 0x13c ] ecx
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x134 ] ecx
mov cx [ rw-data ]
mov [ ebp - 0x130 ] cx
movzx ecx [ rw-data ]
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x140 ] rw-data
mov [ ebp - 0x138 ] rw-data
mov [ ebp - 0x12c ] ecx
je r-xdata
push r-xdata
lea eax [ ebp - 0x108 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov cl [ rw-data ]
test cl 0x8
je r-xdata
or [ ebp - 0x12a ] 0x1
mov [ ebp - 0x120 ] edi
test cl 0x10
je r-xdata
or [ ebp - 0x12a ] 0x2
mov cl [ rw-data ]
test cl 0x40
je r-xdata
or [ ebp - 0x12a ] 0x4
test cl cl
jns r-xdata
or [ ebp - 0x12a ] 0x8
mov ecx [ rw-data ]
mov [ ebp - 0x128 ] ecx
lea ecx [ ebp - 0x144 ]
push ecx
call eax
cmp eax ebx
mov [ rw-data ] eax
push edi
jl r-xdata
or [ ebp - 0x12a ] 0x10
call [ FreeLibrary@IAT ]
call [ FreeLibrary@IAT ]
jmp r-xdata
sub_1005f21
mov edi edi
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x0
push 0x0
mov esi r-xdata
push esi
mov [ ebp - 0x4 ] eax
call sub_1002e55
mov edi eax
lea eax [ edi + 0x1 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
xor eax eax
cmp ebx eax
jne r-xdata
push edi
push ebx
push esi
call sub_1002e55
test eax eax
jne r-xdata
push eax
push 0x10
push eax
push eax
push 0x4b5
push eax
call sub_1003ebe
call sub_1003aa1
mov [ rw-data ] eax
push r-xdata
push ebx
call [ lstrcmpA@IAT ]
xor edi edi
inc edi
test eax eax
jne r-xdata
push eax
push 0x10
push eax
push eax
push 0x4b1
push eax
call sub_1003ebe
push ebx
call [ LocalFree@IAT ]
mov [ rw-data ] 0x80070714
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn
push ebx
call [ LocalFree@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
cmp al 0x5c
jne r-xdata
push eax
push eax
push sub_1005670
push eax
push 0x7d2
push [ rw-data ]
call sub_1004819
neg eax
sbb eax eax
neg eax
cmp [ rw-data ] eax
jne r-xdata
mov eax edi
xor esi esi
cmp [ rw-data ] al
jne r-xdata
mov esi rw-data
push esi
push 0x104
call [ GetTempPathA@IAT ]
test eax eax
je r-xdata
mov eax edi
jmp r-xdata
push esi
push 0x10
push esi
push esi
push 0x4be
push esi
call sub_1003ebe
jmp r-xdata
xor esi esi
xor eax eax
jmp r-xdata
mov edi [ lstrcpyA@IAT ]
push 0x3
push edi
push esi
call sub_10052d4
test eax eax
jne r-xdata
push eax
push esi
push rw-data
call sub_10052d4
test eax eax
jne r-xdata
cmp [ ebp - 0x108 ] 0x5a
lea eax [ ebp - 0x108 ]
jle r-xdata
push esi
call sub_1002025
test eax eax
jne r-xdata
push eax
call [ GetDriveTypeA@IAT ]
mov ebx eax
cmp ebx 0x6
je r-xdata
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
push 0x4
push 0x3
lea eax [ ebp - 0x108 ]
push eax
call sub_100456a
test eax eax
jne r-xdata
push edi
push edi
push esi
call sub_10052d4
test eax eax
je r-xdata
lea eax [ ebp - 0x108 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp ebx 0x3
jne r-xdata
push r-xdata
lea eax [ ebp - 0x108 ]
push eax
call edi
jmp r-xdata
jmp r-xdata
xor ebx ebx
push ebx
push 0x3
lea eax [ ebp - 0x108 ]
push eax
call sub_100456a
test eax eax
jne r-xdata
cmp ebx 0x2
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_1002025
test eax eax
je r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_1002025
test eax eax
jne r-xdata
inc [ ebp - 0x108 ]
jmp r-xdata
cmp [ ebp - 0x108 ] 0x41
je r-xdata
push r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push eax
call sub_10066cf
lea eax [ ebp - 0x108 ]
push eax
call sub_1001ff9
test eax eax
jne r-xdata
push 0x104
lea eax [ ebp - 0x108 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
push ebx
push 0x1
lea eax [ ebp - 0x108 ]
push eax
call sub_100456a
test eax eax
je r-xdata
cmp [ ebp - 0x108 ] 0x42
je r-xdata
push 0x2
lea eax [ ebp - 0x108 ]
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
push esi
call edi
push ebx
push 0x1
push esi
call sub_10052d4
test eax eax
jne r-xdata
inc [ ebp - 0x108 ]
mov [ ebp - 0x105 ] al
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_10069ea
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x19000
jae r-xdata
sub_1006205
mov edi edi
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
push edi
xor edi edi
cmp [ rw-data ] di
mov [ ebp - 0x4 ] eax
jne r-xdata
call sub_100435e
test eax eax
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
jmp r-xdata
call sub_1005f21
test eax eax
jne r-xdata
call sub_1004bc8
test eax eax
je r-xdata
call sub_10043ec
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
call sub_10064de
leave
retn
push ebx
push esi
mov esi 0x105
push esi
lea eax [ ebp - 0x10c ]
push eax
call [ GetSystemDirectoryA@IAT ]
push r-xdata
push esi
lea eax [ ebp - 0x10c ]
push eax
call sub_10066cf
lea eax [ ebp - 0x10c ]
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi edi
mov ebx rw-data
je r-xdata
cmp [ rw-data ] di
jne r-xdata
push esi
call [ FreeLibrary@IAT ]
cmp [ rw-data ] edi
jne r-xdata
push r-xdata
push esi
call [ GetProcAddress@IAT ]
cmp eax edi
je r-xdata
push ebx
call [ SetCurrentDirectoryA@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push edi
push ebx
call eax
cmp [ rw-data ] edi
jne r-xdata
push edi
push 0x10
push edi
push edi
push 0x4bc
push edi
call sub_1003ebe
call sub_1003aa1
mov [ rw-data ] eax
jmp r-xdata
call sub_10047b3
test eax eax
jne r-xdata
test [ rw-data ] 0xc0
jne r-xdata
call sub_1005a36
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] edi
xor eax eax
mov ax [ rw-data ]
push eax
call sub_1001f93
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
cmp [ rw-data ] di
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
inc eax
cmp [ rw-data ] edi
jne r-xdata
call sub_1005abc
test eax eax
je r-xdata
call sub_1004de5
sub_100637a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
and [ rw-data ] 0x0
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10053fa
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
call sub_1006205
mov esi eax
call sub_1003346
test esi esi
pop esi
je r-xdata
mov eax [ rw-data ]
pop ebp
retn 0x10
push eax
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test al 0x1
je r-xdata
push eax
call sub_1002251
sub_10063e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push esi
call [ GetCommandLineA@IAT ]
mov esi eax
mov al [ esi ]
cmp al 0x22
jne r-xdata
cmp al 0x20
jle r-xdata
inc esi
mov al [ esi ]
test al al
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
inc esi
cmp [ esi ] 0x20
jg r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
cmp al 0x20
jg r-xdata
and [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
jmp r-xdata
jmp r-xdata
inc esi
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
push eax
push esi
push 0x0
push 0x0
call [ GetModuleHandleA@IAT ]
push eax
call sub_100637a
push eax
call [ ExitProcess@IAT ]
sub_100646b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor eax esi
and eax 0xffff
pop esi
jne r-xdata
cmp eax 0xbb40
jne r-xdata
mov [ rw-data ] eax
mov eax 0xbb40
not eax
mov [ rw-data ] eax
leave
retn
sub_10064f9
mov edi edi
push ebp
mov ebp esp
sub esp 0x330
push edi
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x22c ] ecx
mov [ ebp - 0x230 ] edx
mov [ ebp - 0x234 ] ebx
mov [ ebp - 0x238 ] esi
mov [ ebp - 0x23c ] edi
mov [ ebp - 0x210 ] ss
mov [ ebp - 0x21c ] cs
mov [ ebp - 0x240 ] ds
mov [ ebp - 0x244 ] es
mov [ ebp - 0x248 ] fs
mov [ ebp - 0x24c ] gs
pushfd
pop [ ebp - 0x218 ]
mov [ ebp - 0x2d8 ] 0x10001
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x220 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x214 ] eax
lea eax [ ebp + 0x4 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x224 ] eax
push 0x14
pop ecx
xor eax eax
lea edi [ ebp - 0x330 ]
[ edi ]
mov [ ebp - 0x330 ] 0xc0000409
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x324 ] eax
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x2e0 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x2dc ] eax
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
push 0x502
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop edi
leave
retn
sub_10065f6
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp bl [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
push ebx
call [ IsDBCSLeadByte@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
cmp bx [ ebp + 0xc ]
setne al
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_100662b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push [ ebp + 0xc ]
xor eax eax
mov ax [ esi ]
push eax
call sub_10065f6
test eax eax
je r-xdata
xor eax eax
mov eax esi
jmp r-xdata
push esi
call [ CharNextA@IAT ]
mov esi eax
pop esi
pop ebp
retn 0x8
sub_1006666
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call [ lstrlenA@IAT ]
mov esi [ CharPrevA@IAT ]
add eax ebx
push eax
push ebx
call esi
push eax
jmp r-xdata
push ebx
call esi
mov edi eax
cmp edi ebx
ja r-xdata
cmp [ edi ] 0x5c
je r-xdata
cmp [ edi ] 0x5c
jne r-xdata
cmp edi ebx
je r-xdata
push edi
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
push edi
call [ CharNextA@IAT ]
mov edi eax
push edi
push ebx
call esi
cmp [ eax ] 0x3a
jne r-xdata
mov [ edi ] 0x0
mov [ ebp - 0x4 ] 0x1
sub_10066cf
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
push edi
call [ lstrlenA@IAT ]
lea ecx [ eax + 0x1 ]
cmp ecx [ ebp + 0xc ]
jb r-xdata
push esi
lea esi [ eax + edi ]
cmp esi edi
jbe r-xdata
mov eax 0x8007007a
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ esi ] 0x0
pop esi
jmp r-xdata
push esi
push edi
call [ CharPrevA@IAT ]
cmp [ eax ] 0x5c
je r-xdata
pop edi
pop ebp
retn 0xc
cmp [ eax ] 0x20
je r-xdata
mov [ esi ] 0x5c
inc esi
inc eax
push eax
push [ ebp + 0xc ]
push edi
call sub_10026c0
sub_100672a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
shr eax 0x4
not eax
and eax 0x1
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
sub_1006752
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push [ ebp + 0xc ]
xor eax eax
mov ax [ esi ]
push eax
call sub_10065f6
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push esi
call [ CharNextA@IAT ]
mov esi eax
mov edi esi
sub_100678f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp cl 0x61
jl r-xdata
cmp cl 0x39
jg r-xdata
movsx ecx cl
sub ecx 0x37
cmp ecx 0xa
jl r-xdata
add cl 0xe0
add esi 0xfffffffd
movsx ecx cl
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
xor ecx ecx
cmp eax [ ebp + 0x8 ]
pop esi
setne cl
mov eax ecx
pop ebp
retn 0x8
cmp ecx 0xf
jg r-xdata
shl esi 0x4
push eax
add esi ecx
call [ CharNextA@IAT ]
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
sub_10067ed
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
xor eax eax
inc eax
cmp edx [ ecx + 0x8 ]
jne r-xdata
pop ebp
retn 0x14
mov edx [ ebp + 0x14 ]
push esi
mov esi edx
and si 0x3ff
cmp [ ecx ] si
pop esi
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ ecx ] dx
xor eax eax
sub_1006822
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ax [ ebp + 0x14 ]
and [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0xc ]
push ecx
push sub_10067ed
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] ax
mov eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call [ EnumResourceLanguagesA@IAT ]
mov eax [ ebp - 0x8 ]
leave
retn 0x10
sub_100685e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn 0xc
and [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1006822
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
push 0xd
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1006822
test eax eax
je r-xdata
sub_10068b3
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
and [ ebp - 0xa8 ] 0x0
cmp [ rw-data ] 0xfffffffe
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xb0 ] 0xc
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_10064de
leave
retn
and [ rw-data ] 0x0
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0xa4 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x94 ] 0x1
jne r-xdata
cmp [ ebp - 0xa0 ] 0x4
jne r-xdata
cmp [ ebp - 0x9c ] 0xa
jae r-xdata
push 0x4a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xac ]
push eax
push 0x20019
push 0x0
push r-xdata
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xb4 ]
push eax
push 0x0
push r-xdata
push [ ebp - 0xac ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0xac ]
mov edi eax
call [ RegCloseKey@IAT ]
test edi edi
pop edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_100678f
test eax eax
je r-xdata
and [ ebp - 0xa8 ] 0x3ff
cmp [ ebp - 0xa8 ] 0x1
je r-xdata
mov [ rw-data ] 0x1
cmp [ ebp - 0xa8 ] 0xd
jne r-xdata
sub_10069ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ecx
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
jne r-xdata
leave
retn 0x4
mov eax [ ebp - 0x4 ]
imul eax [ ebp - 0x8 ]
push 0x400
push [ ebp - 0xc ]
push eax
call [ MulDiv@IAT ]
sub_1006a45
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
je r-xdata
leave
retn 0x8
push esi
mov esi [ ebp - 0x4 ]
imul esi [ ebp - 0x8 ]
push 0x400
push [ ebp - 0xc ]
push esi
call [ MulDiv@IAT ]
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
pop esi
mov [ ecx ] esi
sub_1006aa4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x804
call esi
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp + 0xc ]
or [ eax + 0x88 ] 0xffffffff
or [ eax + 0x84 ] 0xffffffff
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0xc ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp + 0x1c ]
mov [ eax + 0x18 ] edx
mov edx [ ebp + 0x20 ]
mov [ eax + 0x1c ] edx
mov edx [ ebp + 0x24 ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0x28 ]
mov [ eax + 0x48 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x4c ] ecx
mov ecx 0xffff
mov [ eax + 0x8 ] esi
mov [ eax ] edx
mov [ eax + 0xb2 ] 0xf
mov [ eax + 0xa0 ] ecx
mov [ eax + 0xa8 ] ecx
mov [ eax + 0xa4 ] ecx
push ecx
push 0x5
push [ ebp + 0x28 ]
call sub_1007d16
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1006b3b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi [ ebp + 0x8 ]
push 0x24
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0xc ]
call [ esi + 0x10 ]
add esp 0xc
cmp eax 0x24
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x4643534d
jne r-xdata
pop esi
leave
retn
cmp [ ebp - 0xc ] 0x103
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
mov cx [ ebp - 0xa ]
mov [ eax + 0x4 ] cx
mov cx [ ebp - 0x8 ]
mov [ eax + 0x6 ] cx
mov cx [ ebp - 0x4 ]
mov [ eax + 0x8 ] cx
mov cx [ ebp - 0x2 ]
mov [ eax + 0xa ] cx
movzx ecx [ ebp - 0x6 ]
mov edx ecx
shr edx 0x2
and edx 0x1
mov [ eax + 0xc ] edx
mov edx ecx
and edx 0x1
and ecx 0x2
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
xor eax eax
inc eax
movzx eax [ ebp - 0xc ]
push eax
push 0x3
push [ esi ]
call sub_1007d16
sub_1006bce
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x7bc ]
lea ecx [ esi + 0x3b7 ]
mov [ eax + 0x4 ] ecx
lea ecx [ esi + 0x4b8 ]
mov [ eax + 0x8 ] ecx
lea ecx [ esi + 0x5b9 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x38 ]
mov [ eax + 0x10 ] ecx
mov cx [ esi + 0x70 ]
push edi
mov [ eax + 0x1e ] cx
mov cx [ esi + 0x72 ]
push eax
xor ebx ebx
push ebx
lea edi [ esi + 0x7e4 ]
mov [ eax + 0x20 ] cx
call [ esi + 0x24 ]
cmp eax 0xffffffff
pop ecx
pop ecx
je r-xdata
push ebx
push 0xb
push [ esi ]
call sub_1007d16
xor eax eax
jmp r-xdata
cmp [ esi + 0x28 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor eax eax
inc eax
mov [ edi ] ebx
mov eax [ esi + 0x38 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4c ]
mov [ edi + 0x8 ] eax
mov ax [ esi + 0xa0 ]
mov [ edi + 0xc ] ax
mov ax [ esi + 0x70 ]
mov [ edi + 0xe ] ax
movzx eax [ esi + 0x72 ]
push edi
mov [ edi + 0x10 ] eax
call [ esi + 0x28 ]
cmp eax 0xffffffff
pop ecx
jne r-xdata
sub_1006c78
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ esi + 0xa8 ]
lea edi [ esi + 0x7e4 ]
push [ esi + 0x48 ]
push [ esi + 0x84 ]
call [ esi + 0x10 ]
add esp 0xc
cmp [ esi + 0xa8 ] eax
jne r-xdata
push 0x0
push 0x4
mov eax [ esi + 0x48 ]
movzx eax [ eax + 0x4 ]
mov ebx [ ebp + 0xc ]
add eax ebx
cmp eax [ esi + 0x98 ]
ja r-xdata
mov eax [ esi + 0x48 ]
movzx eax [ eax + 0x4 ]
push eax
mov eax [ esi + 0x3c ]
add eax ebx
push eax
push [ esi + 0x84 ]
call [ esi + 0x10 ]
mov ecx [ esi + 0x48 ]
movzx ecx [ ecx + 0x4 ]
add esp 0xc
cmp ecx eax
jne r-xdata
mov eax [ esi + 0x48 ]
xor ecx ecx
cmp [ eax ] ecx
je r-xdata
mov eax [ esi + 0x48 ]
add [ eax + 0x4 ] bx
cmp ebx ecx
ja r-xdata
movzx eax [ eax + 0x4 ]
push ecx
push eax
mov eax [ esi + 0x3c ]
add eax ebx
push eax
call sub_1007d39
push eax
mov eax [ esi + 0xa8 ]
sub eax 0x4
push eax
mov eax [ esi + 0x48 ]
add eax 0x4
push eax
call sub_1007d39
mov ecx [ esi + 0x48 ]
cmp eax [ ecx ]
jne r-xdata
xor edx edx
inc edx
mov eax [ esi + 0x48 ]
cmp [ eax + 0x6 ] cx
je r-xdata
xor ecx ecx
xor eax eax
inc eax
jmp r-xdata
mov [ edi ] 0x2
mov eax [ esi + 0x38 ]
mov [ edi + 0x4 ] eax
mov ax [ esi + 0xa8 ]
sub ax 0x8
mov [ edi + 0xc ] ax
je r-xdata
xor edx edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ edi + 0x8 ] ecx
mov eax [ esi + 0x48 ]
add eax 0x8
mov [ edi + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x28 ] ecx
je r-xdata
push 0x0
push 0xb
jmp r-xdata
mov eax [ esi + 0x3c ]
add eax ebx
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov ax [ eax + 0x4 ]
push edi
mov [ edi + 0x14 ] ax
mov [ edi + 0x18 ] edx
mov [ edi + 0x1c ] bx
call [ esi + 0x28 ]
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esi ]
call sub_1007d16
xor eax eax
sub_1006db8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x1
push 0x0
push [ esi + 0x88 ]
call [ esi + 0x1c ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push ebx
push edi
push [ esi + 0x88 ]
mov [ ebp + 0x10 ] eax
call [ esi + 0x10 ]
add esp 0x18
test eax eax
jle r-xdata
push 0x0
push 0x4
push [ esi ]
call sub_1007d16
xor eax eax
jmp r-xdata
mov cl [ edi + ebx - 0x1 ]
mov eax edi
mov [ edi + ebx - 0x1 ] 0x0
lea edi [ eax + 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
lea edx [ eax + 0x1 ]
cmp edx ebx
jl r-xdata
mov ecx [ ebp + 0x10 ]
push 0x0
lea eax [ eax + ecx + 0x1 ]
push eax
push [ esi + 0x88 ]
call [ esi + 0x1c ]
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
test cl cl
jne r-xdata
xor eax eax
inc eax
sub_1006e46
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push 0x1
push 0x0
push [ esi + 0x88 ]
call [ esi + 0x1c ]
mov ebx eax
add esp 0xc
cmp ebx 0xffffffff
jne r-xdata
mov ax [ esi + 0xac ]
push edi
mov [ esi + 0x7de ] ax
mov ax [ esi + 0x70 ]
lea edi [ esi + 0x7bc ]
mov [ esi + 0x7da ] ax
mov eax [ esi + 0x38 ]
push edi
push 0x5
mov [ edi ] ebx
mov [ esi + 0x7cc ] eax
call [ esi + 0x24 ]
cmp eax 0xffffffff
pop ecx
pop ecx
jne r-xdata
push 0x0
push 0x4
push [ esi ]
call sub_1007d16
xor eax eax
jmp r-xdata
mov ax [ esi + 0x7de ]
test ax ax
mov [ esi + 0xac ] ax
je r-xdata
push 0x0
push 0xb
push [ esi ]
call sub_1007d16
xor eax eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
xor eax eax
inc eax
mov edi [ edi ]
cmp edi ebx
je r-xdata
pop edi
push 0x0
push edi
push [ esi + 0x88 ]
call [ esi + 0x1c ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub_1006ef9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov al [ esi + 0xb2 ]
push edi
xor edi edi
and eax 0xf
sub eax edi
je r-xdata
push [ esi + 0x3c ]
call [ esi + 0x4 ]
push [ esi + 0x40 ]
call [ esi + 0x4 ]
pop ecx
pop ecx
dec eax
je r-xdata
push [ esi + 0x34 ]
call sub_1003d51
dec eax
je r-xdata
push edi
push 0x7
jmp r-xdata
push [ esi + 0x34 ]
call sub_1003d51
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_1007d16
xor eax eax
jmp r-xdata
test eax eax
pop ecx
je r-xdata
push [ esi + 0x34 ]
call sub_1007ee1
jmp r-xdata
sub eax 0xc
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
xor eax eax
inc eax
push edi
push 0x6
sub_1006f72
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
movzx ecx [ esi + 0xb2 ]
mov eax ecx
push edi
and eax 0xf
xor edi edi
sub eax edi
lea edx [ esi + 0x94 ]
mov [ edx ] 0x8000
je r-xdata
lea ebx [ esi + 0x98 ]
mov [ ebx ] 0x8000
dec eax
je r-xdata
push [ esi + 0x94 ]
call [ esi + 0x8 ]
cmp eax edi
pop ecx
mov [ esi + 0x40 ] eax
jne r-xdata
push edi
push 0x5
jmp r-xdata
push edi
lea ebx [ esi + 0x98 ]
push ebx
push edi
push edi
push edx
call sub_1003d49
add esp 0x14
dec eax
je r-xdata
xor eax eax
mov al [ esi + 0xb2 ]
and eax 0xf
dec eax
je r-xdata
push [ esi + 0x3c ]
call [ esi + 0x4 ]
pop ecx
jmp r-xdata
push [ esi ]
call sub_1007d16
mov [ esi + 0xb2 ] 0xf
xor eax eax
jmp r-xdata
push [ ebx ]
call [ esi + 0x8 ]
cmp eax edi
pop ecx
mov [ esi + 0x3c ] eax
jne r-xdata
push 0x7
mov eax [ esi + 0x20 ]
push edi
push edi
push edi
push edi
push edi
push edi
lea ebx [ esi + 0x98 ]
push ebx
push edi
mov [ ebp - 0x4 ] eax
push edi
lea eax [ ebp - 0x8 ]
shr ecx 0x8
push eax
and ecx 0x1f
push edx
mov [ ebp - 0x8 ] ecx
call sub_1003d49
jmp r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x34 ]
push eax
push ebx
push [ esi + 0x4 ]
lea eax [ esi + 0x94 ]
push [ esi + 0x8 ]
push eax
call sub_1003d49
add esp 0x14
dec eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
add esp 0x2c
jmp r-xdata
push edi
push edi
push edi
push edi
xor eax eax
push edi
shr ecx 0x8
inc eax
push edi
and ecx 0x1f
shl eax cl
lea ebx [ esi + 0x98 ]
push ebx
push edi
mov [ ebp - 0x10 ] eax
push edi
lea eax [ ebp - 0x10 ]
push eax
push edx
call sub_1007da4
sub eax 0xc
je r-xdata
xor eax eax
inc eax
push [ esi + 0x3c ]
xor ebx ebx
cmp eax 0x1
setne bl
lea ebx [ ebx + ebx + 0x5 ]
call [ esi + 0x4 ]
push [ esi + 0x40 ]
call [ esi + 0x4 ]
pop ecx
pop ecx
push edi
push ebx
push [ esi + 0x1c ]
lea eax [ esi + 0x34 ]
push [ esi + 0x18 ]
push [ esi + 0x14 ]
push [ esi + 0x10 ]
push [ esi + 0xc ]
push eax
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x8 ]
push [ esi + 0x8 ]
push eax
lea eax [ esi + 0x94 ]
push eax
call sub_1003d49
dec eax
jne r-xdata
test eax eax
je r-xdata
push 0x6
jmp r-xdata
cmp eax edi
je r-xdata
push [ esi + 0x1c ]
lea eax [ esi + 0x34 ]
push [ esi + 0x18 ]
push [ esi + 0x14 ]
push [ esi + 0x10 ]
push [ esi + 0xc ]
push eax
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x10 ]
push [ esi + 0x8 ]
push eax
lea eax [ esi + 0x94 ]
push eax
call sub_1007da4
jmp r-xdata
pop eax
push edi
push eax
jmp r-xdata
add esp 0x2c
jmp r-xdata
sub_100713a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov al [ esi + 0xb2 ]
push edi
xor edi edi
and eax 0xf
sub eax edi
je r-xdata
xor eax eax
inc eax
dec eax
je r-xdata
push [ esi + 0x34 ]
call sub_1003d51
dec eax
je r-xdata
push edi
push 0x7
jmp r-xdata
push [ esi + 0x34 ]
call sub_1003d51
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_1007d16
xor eax eax
jmp r-xdata
test eax eax
pop ecx
je r-xdata
push [ esi + 0x34 ]
call sub_1007ebb
jmp r-xdata
sub eax 0xc
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push edi
push 0x6
sub_10071a5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
mov al [ edi + 0xb2 ]
xor ebx ebx
and eax 0xf
sub eax ebx
je r-xdata
mov eax [ edi + 0x48 ]
mov ax [ eax + 0x4 ]
movzx ecx ax
cmp ecx [ edi + 0x94 ]
ja r-xdata
dec eax
je r-xdata
push ebx
push 0x7
mov ecx [ ebp + 0xc ]
mov [ ecx ] ax
mov esi [ edi + 0x3c ]
mov edi [ edi + 0x40 ]
movzx ecx ax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ edi + 0x94 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x48 ]
push [ edi + 0x40 ]
movzx eax [ eax + 0x4 ]
push eax
push [ edi + 0x3c ]
push [ edi + 0x34 ]
call sub_1003d51
add esp 0x14
test eax eax
jne r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
mov esi [ ebp + 0xc ]
movzx eax [ esi ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x48 ]
push [ edi + 0x40 ]
movzx eax [ eax + 0x4 ]
push eax
push [ edi + 0x3c ]
push [ edi + 0x34 ]
call sub_1003d51
jmp r-xdata
dec eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
add esp 0x14
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
movzx eax [ esi ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x48 ]
push [ edi + 0x40 ]
movzx eax [ eax + 0x4 ]
push eax
push [ edi + 0x3c ]
push [ edi + 0x34 ]
call sub_1007e66
push ebx
push 0x6
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov [ esi ] ax
jmp r-xdata
push [ edi ]
call sub_1007d16
xor eax eax
sub_10072b7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x10
lea eax [ esi + 0x74 ]
push eax
push [ esi + 0x88 ]
call [ esi + 0x10 ]
add esp 0xc
cmp eax 0x10
jne r-xdata
push 0x0
push 0x4
push [ esi ]
call sub_1007d16
xor eax eax
push esi
push 0x100
lea eax [ esi + 0xb4 ]
push eax
call sub_1006db8
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_1007309
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov di [ ebp + 0x8 ]
cmp di [ esi + 0xb2 ]
jne r-xdata
push esi
call sub_1006ef9
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
push esi
mov [ esi + 0xb2 ] di
call sub_1006f72
neg eax
sbb eax eax
neg eax
push eax
push 0x7
push [ esi ]
call sub_1007d16
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_100735b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
push 0xf
call sub_1007309
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call [ esi + 0x4 ]
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call [ esi + 0x4 ]
pop ecx
mov eax [ esi + 0x88 ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ esi + 0x4 ]
pop ecx
mov eax [ esi + 0x84 ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ esi + 0x18 ]
pop ecx
push esi
call [ esi + 0x4 ]
pop ecx
xor eax eax
inc eax
pop esi
pop ebp
retn
push eax
call [ esi + 0x18 ]
pop ecx
sub_10073c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea eax [ ebx + 0x5b9 ]
push eax
mov esi 0x101
push esi
lea edi [ ebx + 0x6ba ]
push edi
call sub_100160f
push [ ebp + 0xc ]
push esi
push edi
call sub_10021e6
mov edi 0x180
push edi
mov esi 0x8000
lea eax [ ebx + 0x6ba ]
push esi
push eax
call [ ebx + 0xc ]
add esp 0xc
cmp eax 0xffffffff
mov [ ebx + 0x88 ] eax
je r-xdata
push 0x0
push 0x1
push edi
lea eax [ ebx + 0x6ba ]
push esi
push eax
call [ ebx + 0xc ]
add esp 0xc
cmp eax 0xffffffff
mov [ ebx + 0x84 ] eax
je r-xdata
push 0x24
lea eax [ ebp - 0x24 ]
push eax
push [ ebx + 0x88 ]
call [ ebx + 0x10 ]
add esp 0xc
cmp eax 0x24
je r-xdata
cmp [ ebp - 0x24 ] 0x4643534d
jne r-xdata
push 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x103
je r-xdata
push 0x2
jmp r-xdata
mov ax [ ebp + 0x14 ]
cmp ax 0xffff
je r-xdata
movzx eax [ ebp - 0xc ]
push eax
push 0x3
jmp r-xdata
push [ ebx ]
call sub_1007d16
push 0x9
lea edi [ ebx + 0x50 ]
pop ecx
lea esi [ ebp - 0x24 ]
[ edi ] [ esi ]
xor edi edi
test [ ebx + 0x6e ] 0x4
mov [ ebp + 0x8 ] di
mov [ ebp + 0xa ] 0x0
mov [ ebp + 0xb ] 0x0
je r-xdata
mov cx [ ebp + 0x10 ]
cmp cx [ ebp - 0x4 ]
jne r-xdata
movzx eax [ ebp + 0x8 ]
cmp [ ebx + 0xa0 ] eax
je r-xdata
push 0x4
lea eax [ ebp + 0x8 ]
push eax
push [ ebx + 0x88 ]
call [ ebx + 0x10 ]
add esp 0xc
cmp eax 0x4
jne r-xdata
push 0x0
push 0xa
jmp r-xdata
cmp ax [ ebp - 0x2 ]
je r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax edi
jbe r-xdata
mov eax [ ebx + 0x4c ]
cmp eax edi
je r-xdata
push edi
movzx eax [ ebp + 0xa ]
add eax 0x8
cmp [ ebx + 0x44 ] edi
jne r-xdata
push eax
push [ ebx + 0x4c ]
push [ ebx + 0x88 ]
call [ ebx + 0x10 ]
add esp 0xc
cmp [ ebx + 0xa0 ] eax
je r-xdata
movzx eax [ ebp + 0x8 ]
cmp eax edi
mov [ ebx + 0xa0 ] eax
jbe r-xdata
push eax
call [ ebx + 0x4 ]
pop ecx
mov [ ebx + 0x4c ] edi
cmp eax [ ebx + 0xa4 ]
jne r-xdata
push eax
mov [ ebx + 0xa4 ] eax
call [ ebx + 0x8 ]
cmp eax edi
pop ecx
mov [ ebx + 0x44 ] eax
jne r-xdata
push eax
call [ ebx + 0x8 ]
cmp eax edi
pop ecx
mov [ ebx + 0x4c ] eax
je r-xdata
push edi
push 0x9
jmp r-xdata
movzx eax [ ebp + 0xb ]
add eax 0x8
cmp [ ebx + 0x48 ] edi
jne r-xdata
jmp r-xdata
push edi
push 0x5
jmp r-xdata
cmp eax [ ebx + 0xa8 ]
je r-xdata
push eax
mov [ ebx + 0xa8 ] eax
call [ ebx + 0x8 ]
cmp eax edi
pop ecx
mov [ ebx + 0x48 ] eax
jne r-xdata
test [ ebx + 0x6e ] 0x1
mov esi 0x100
je r-xdata
mov [ ebx + 0x1b5 ] 0x0
mov [ ebx + 0x2b6 ] 0x0
push ebx
push esi
lea eax [ ebx + 0x1b5 ]
push eax
call sub_1006db8
test eax eax
je r-xdata
mov [ ebx + 0x3b7 ] 0x0
mov [ ebx + 0x4b8 ] 0x0
push ebx
push esi
lea eax [ ebx + 0x3b7 ]
push eax
call sub_1006db8
test eax eax
je r-xdata
xor eax eax
push ebx
push esi
lea eax [ ebx + 0x2b6 ]
push eax
call sub_1006db8
test eax eax
jne r-xdata
push 0x4
jmp r-xdata
push [ ebx + 0x60 ]
push [ ebx + 0x88 ]
call [ ebx + 0x1c ]
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
push ebx
push esi
lea eax [ ebx + 0x4b8 ]
push eax
call sub_1006db8
test eax eax
jne r-xdata
test [ ebx + 0x6e ] 0x2
je r-xdata
jmp r-xdata
mov ax [ ebx + 0x6c ]
push ebx
mov [ ebx + 0xac ] ax
call sub_1006bce
neg eax
sbb eax eax
neg eax
jmp r-xdata
push edi
push 0x1
push edi
push [ ebx + 0x88 ]
call [ ebx + 0x1c ]
add esp 0xc
cmp eax 0xffffffff
mov [ ebx + 0x2c ] eax
push edi
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_100766b
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xa4 ]
imul eax ebx
add eax [ esi + 0x2c ]
push edi
push 0x0
push eax
push [ esi + 0x84 ]
lea edi [ esi + 0x7e4 ]
mov [ esi + 0x90 ] ebx
call [ esi + 0x1c ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x4
push [ esi + 0xa4 ]
push [ esi + 0x44 ]
push [ esi + 0x84 ]
call [ esi + 0x10 ]
add esp 0xc
cmp [ esi + 0xa4 ] eax
jne r-xdata
mov eax [ esi + 0x44 ]
push 0x0
push [ eax ]
push [ esi + 0x84 ]
call [ esi + 0x1c ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x44 ]
mov cl [ eax + 0x6 ]
and cl 0xf
cmp cl 0xf
jne r-xdata
mov cx [ eax + 0x4 ]
mov [ esi + 0xb0 ] cx
movzx eax [ eax + 0x6 ]
push esi
push eax
call sub_1007309
test eax eax
je r-xdata
push 0x0
push 0x6
jmp r-xdata
xor eax eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
push [ esi ]
call sub_1007d16
xor eax eax
inc eax
jmp r-xdata
mov [ edi ] 0x1
mov eax [ esi + 0x38 ]
mov [ edi + 0x4 ] eax
mov ax [ esi + 0xa4 ]
sub ax 0x8
mov [ edi + 0xc ] ax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
and [ edi + 0x8 ] 0x0
mov eax [ esi + 0x44 ]
add eax 0x8
mov [ edi + 0x8 ] eax
jmp r-xdata
push 0x0
push 0xb
jmp r-xdata
push edi
mov [ edi + 0xe ] bx
call [ esi + 0x28 ]
cmp eax 0xffffffff
pop ecx
jne r-xdata
sub_1007774
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov bx [ esi + 0x72 ]
xor eax eax
mov ax [ esi + 0x70 ]
push edi
lea edi [ esi + 0x7bc ]
lea ecx [ esi + 0x3b7 ]
mov [ edi + 0x4 ] ecx
lea ecx [ esi + 0x4b8 ]
mov [ edi + 0x8 ] ecx
lea ecx [ esi + 0x5b9 ]
inc bx
mov [ edi + 0xc ] ecx
mov ecx [ esi + 0x38 ]
and [ edi + 0x24 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ edi + 0x10 ] ecx
mov [ edi + 0x1e ] ax
mov [ edi + 0x20 ] bx
mov eax [ esi + 0x84 ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ esi + 0x18 ]
test eax eax
pop ecx
jne r-xdata
or eax 0xffffffff
cmp [ esi + 0x88 ] eax
jne r-xdata
push eax
call [ esi + 0x18 ]
test eax eax
pop ecx
jne r-xdata
or [ esi + 0x88 ] 0xffffffff
push 0x0
mov [ esi + 0x88 ] eax
mov [ esi + 0x84 ] eax
push 0x4
cmp [ esi + 0x84 ] eax
jne r-xdata
or [ esi + 0x84 ] 0xffffffff
push edi
push 0x4
call [ esi + 0x24 ]
cmp eax 0xffffffff
pop ecx
pop ecx
je r-xdata
push 0x0
push 0xb
jmp r-xdata
push ebx
push [ ebp - 0x4 ]
lea eax [ esi + 0x3b7 ]
push eax
push esi
call sub_10073c0
test eax eax
je r-xdata
push [ esi ]
call sub_1007d16
mov eax [ esi ]
cmp [ eax ] 0xb
je r-xdata
push 0x0
push esi
call sub_100766b
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
mov eax [ esi ]
mov eax [ eax ]
mov [ edi + 0x24 ] eax
jne r-xdata
mov eax [ esi + 0x88 ]
and [ ebp + 0x8 ] 0x0
cmp eax 0xffffffff
je r-xdata
inc [ esi + 0xae ]
jmp r-xdata
cmp [ esi + 0xae ] 0x0
jne r-xdata
dec [ esi + 0xac ]
dec [ esi + 0xae ]
push esi
call sub_10072b7
test eax eax
je r-xdata
xor eax eax
inc eax
mov [ esi + 0x9c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_10078c5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x48 ]
movzx eax [ eax + 0x6 ]
add [ esi + 0x30 ] eax
cmp [ esi + 0xb0 ] 0x0
jne r-xdata
dec [ esi + 0xb0 ]
push 0x0
push esi
call sub_1006c78
test eax eax
je r-xdata
push esi
call sub_1007774
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x48 ]
cmp [ eax + 0x6 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x48 ]
movzx eax [ eax + 0x6 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
push esi
call sub_10071a5
test eax eax
je r-xdata
push esi
call sub_1007774
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
mov cx [ ebp + 0x8 ]
cmp cx [ eax + 0x6 ]
je r-xdata
mov eax [ esi + 0x48 ]
movzx eax [ eax + 0x4 ]
push eax
push esi
call sub_1006c78
test eax eax
je r-xdata
xor eax eax
inc eax
push 0x0
push 0x7
push [ esi ]
call sub_1007d16
dec [ esi + 0xb0 ]
sub_100796d
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x9c ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0xc ]
mov eax 0xfffe
mov ecx esi
and ecx eax
cmp ecx eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ edi + 0x90 ] esi
je r-xdata
movzx esi [ edi + 0x6a ]
dec esi
pop edi
pop ebp
retn 0x8
xor eax eax
inc eax
push edi
call sub_100713a
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
push edi
call sub_100766b
test eax eax
je r-xdata
pop esi
push edi
call sub_10078c5
test eax eax
jne r-xdata
and [ edi + 0x30 ] 0x0
sub_10079d7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
test eax eax
push edi
je r-xdata
lea eax [ esi + 0x7bc ]
lea ecx [ esi + 0xb4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x8c ]
mov [ eax + 0x14 ] ecx
mov cx [ esi + 0x7e ]
mov [ eax + 0x18 ] cx
mov cx [ esi + 0x80 ]
mov [ eax + 0x1a ] cx
mov cx [ esi + 0x82 ]
mov [ eax + 0x1c ] cx
mov ecx [ esi + 0x38 ]
mov [ eax + 0x10 ] ecx
mov cx [ esi + 0x7c ]
and [ eax ] 0x0
xor edi edi
mov [ eax + 0x22 ] cx
mov cx [ eax + 0x1c ]
inc edi
test cl 0x40
je r-xdata
mov ebx [ esi + 0x78 ]
cmp ebx [ esi + 0x30 ]
mov [ ebp + 0x8 ] eax
jae r-xdata
push eax
push 0x3
call [ esi + 0x24 ]
or [ esi + 0x8c ] 0xffffffff
cmp eax 0xffffffff
pop ecx
pop ecx
jne r-xdata
and cx 0xffbf
mov [ eax ] edi
mov [ eax + 0x1c ] cx
movzx eax [ esi + 0x7c ]
push eax
push esi
call sub_100796d
jmp r-xdata
mov [ esi + 0x90 ] 0xffff
test eax eax
jne r-xdata
push 0x0
push 0xb
test eax eax
je r-xdata
mov eax edi
push eax
push 0x8
jmp r-xdata
xor eax eax
jmp r-xdata
lea edi [ esi + 0x8c ]
mov eax [ edi ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x48 ]
movzx eax [ eax + 0x6 ]
add eax [ esi + 0x30 ]
cmp ebx eax
jae r-xdata
push [ esi ]
call sub_1007d16
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push eax
call [ esi + 0x18 ]
or [ edi ] 0xffffffff
pop ecx
push esi
call sub_10078c5
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ esi + 0x48 ]
movzx edi [ ecx + 0x6 ]
mov eax ebx
sub eax [ esi + 0x30 ]
sub edi eax
cmp edi [ ebp + 0x8 ]
jbe r-xdata
mov ecx [ esi + 0x40 ]
push edi
add ecx eax
push ecx
push [ esi + 0x8c ]
call [ esi + 0x14 ]
add esp 0xc
cmp edi eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push 0x0
push 0x8
push [ esi ]
call sub_1007d16
add ebx edi
sub [ ebp + 0x8 ] edi
je r-xdata
push esi
call sub_10078c5
test eax eax
jne r-xdata
jmp r-xdata
sub_1007b2d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
and [ esi + 0xae ] 0x0
mov [ esi + 0x38 ] eax
mov eax [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x28 ] eax
mov ebx 0x101
lea eax [ esi + 0x5b9 ]
push ebx
push eax
lea edi [ esi + 0x7bc ]
call sub_100160f
push 0xffff
push 0x0
push [ ebp + 0xc ]
push esi
call sub_10073c0
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
or ebx 0xffffffff
cmp eax ebx
je r-xdata
push [ ebp + 0x10 ]
and [ esi + 0x9c ] 0x0
push ebx
lea eax [ esi + 0x5b9 ]
push eax
mov [ esi + 0x90 ] 0xffff
call sub_100160f
push esi
call sub_1006e46
test eax eax
je r-xdata
lea edi [ esi + 0x84 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call [ esi + 0x18 ]
pop ecx
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] ebx
pop edi
mov [ esi + 0x88 ] ebx
pop esi
pop ebx
leave
retn
push eax
call [ esi + 0x18 ]
pop ecx
cmp [ esi + 0xac ] bx
jne r-xdata
dec [ esi + 0xac ]
push esi
call sub_10072b7
test eax eax
je r-xdata
dec [ esi + 0xac ]
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + 0xb4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x74 ]
mov [ edi ] eax
lea eax [ esi + 0x1b5 ]
mov [ edi + 0x8 ] eax
lea eax [ esi + 0x2b6 ]
mov [ edi + 0xc ] eax
mov ax [ esi + 0x7e ]
mov [ edi + 0x18 ] ax
mov ax [ esi + 0x80 ]
mov [ edi + 0x1a ] ax
mov ax [ esi + 0x82 ]
mov [ edi + 0x1c ] ax
mov eax [ esi + 0x38 ]
mov [ edi + 0x10 ] eax
mov ax [ esi + 0x7c ]
mov [ edi + 0x22 ] ax
mov ax [ esi + 0x7c ]
and ax 0xfffd
cmp ax 0xfffd
jne r-xdata
cmp [ esi + 0x9c ] ebx
jne r-xdata
cmp [ esi + 0x9c ] ebx
push edi
jne r-xdata
mov [ esi + 0xac ] bx
mov ax [ edi + 0x22 ]
cmp ax [ esi + 0x6a ]
jb r-xdata
push 0x2
call [ ebp + 0x18 ]
cmp eax 0xffffffff
pop ecx
pop ecx
mov [ esi + 0x8c ] eax
je r-xdata
push 0x1
call [ ebp + 0x18 ]
cmp eax 0xffffffff
pop ecx
pop ecx
jne r-xdata
push esi
call sub_1006e46
test eax eax
je r-xdata
push edi
cmp ax 0xfffc
jb r-xdata
push ebx
push 0xb
push [ esi ]
call sub_1007d16
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ esi + 0xac ] bx
jne r-xdata
mov ax [ esi + 0x7c ]
and ax 0xfffe
cmp ax 0xfffe
jne r-xdata
push esi
call sub_10079d7
test eax eax
je r-xdata
inc [ esi + 0xae ]
jmp r-xdata
jmp r-xdata
sub_1007d39
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax esi
shr eax 0x2
test eax eax
push edi
mov edi [ ebp + 0x10 ]
jle r-xdata
and esi 0x3
xor eax eax
dec esi
je r-xdata
push ebx
movzx ecx [ ecx ]
or eax ecx
dec esi
je r-xdata
movzx edx [ ecx ]
xor ebx ebx
inc ecx
mov bh [ ecx ]
or edx ebx
inc ecx
movzx ebx [ ecx ]
shl ebx 0x10
or edx ebx
inc ecx
movzx ebx [ ecx ]
shl ebx 0x18
or edx ebx
inc ecx
xor edi edx
dec eax
jne r-xdata
pop ebx
xor edx edx
mov dh [ ecx ]
or eax edx
inc ecx
dec esi
jne r-xdata
xor eax edi
pop edi
pop esi
pop ebp
retn 0xc
movzx eax [ ecx ]
shl eax 0x10
inc ecx
sub_1007da4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0x18 ]
add eax 0x1800
mov [ ecx ] eax
mov eax [ ebp + 0x1c ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x2c
call edi
mov esi eax
test esi esi
pop ecx
je r-xdata
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
push 0x2efc
call edi
test eax eax
pop ecx
mov [ ebp + 0x18 ] eax
mov [ esi + 0x28 ] eax
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
mov ecx [ ebp + 0xc ]
push ebx
push [ ebp + 0x30 ]
mov ebx [ ebp + 0x14 ]
push [ ebp + 0x2c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x28 ]
push [ ebp + 0x28 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x2c ]
push [ ebp + 0x24 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x30 ]
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] edx
mov eax [ eax ]
push edx
push ebx
mov [ esi + 0x20 ] eax
mov eax [ ecx + 0x4 ]
push edi
mov [ esi + 0x24 ] eax
mov [ esi ] 0x4349444c
push [ ecx ]
push [ ebp + 0x18 ]
call sub_1007fb7
test eax eax
jne r-xdata
push esi
call [ ebp + 0x14 ]
pop ecx
mov eax [ ebp + 0x1c ]
mov [ eax ] esi
xor eax eax
push esi
call ebx
xor eax eax
pop ecx
inc eax
jmp r-xdata
pop ebx
sub_1007e66
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
cmp [ ecx ] 0x4349444c
je r-xdata
push esi
mov esi [ ebp + 0x18 ]
mov eax [ esi ]
cmp eax [ ecx + 0x20 ]
jbe r-xdata
push 0x2
pop eax
leave
retn
lea edx [ ebp - 0x4 ]
push edx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x28 ]
call sub_1007f54
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
mov [ esi ] ecx
and eax 0x4
push 0x3
pop eax
jmp r-xdata
pop esi
leave
retn
sub_1007ebb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x4349444c
je r-xdata
push [ eax + 0x28 ]
call sub_1007f28
xor eax eax
pop ebp
retn
push 0x2
pop eax
pop ebp
retn
sub_1007ee1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x4349444c
je r-xdata
push [ esi + 0x28 ]
call sub_1007f18
push [ esi + 0x28 ]
and [ esi ] 0x0
call [ esi + 0x8 ]
push esi
call [ esi + 0x8 ]
pop ecx
pop ecx
xor eax eax
push 0x2
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1007f28
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10080c1
push esi
call sub_1008151
push esi
call sub_10081a0
and [ esi + 0x2ecc ] 0x0
pop esi
pop ebp
retn 0x4
sub_1007f54
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x2b04 ] eax
lea eax [ eax + ecx + 0x4 ]
mov [ esi + 0x2b08 ] eax
mov eax [ ebp + 0x18 ]
push esi
mov [ esi + 0x2b0c ] eax
call sub_1008527
push [ ebp + 0xc ]
push esi
call sub_1008295
inc [ esi + 0x2ecc ]
test eax eax
jge r-xdata
mov ecx [ ebp + 0x20 ]
mov [ ecx ] eax
add [ esi + 0x2b10 ] eax
xor eax eax
mov eax [ ebp + 0x20 ]
and [ eax ] 0x0
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x1c
sub_1007fb7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x2ee0 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x2ee4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x2ee8 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x2eec ] eax
mov eax [ ebp + 0x20 ]
mov [ esi + 0x2ef0 ] eax
mov eax [ ebp + 0x24 ]
mov [ esi + 0x2ef4 ] eax
mov eax [ ebp + 0x28 ]
mov [ esi + 0x2ef8 ] eax
mov eax [ ebp + 0xc ]
lea ecx [ eax - 0x1 ]
test eax ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
jne r-xdata
xor eax eax
cmp eax 0x8000
jb r-xdata
cmp eax 0x200000
ja r-xdata
push esi
call sub_100803e
test eax eax
je r-xdata
push esi
call sub_1007f28
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x24
sub_100803e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
push edi
push 0x4
mov [ esi + 0x2eb5 ] 0x4
pop edi
mov al [ esi + 0x2eb5 ]
movzx ecx al
mov cl [ ecx + r-xdata ]
xor ebx ebx
inc ebx
shl ebx cl
add edi ebx
inc al
cmp edi edx
mov [ esi + 0x2eb5 ] al
jb r-xdata
add edx 0x105
push edx
call [ esi + 0x2ee0 ]
pop ecx
xor ecx ecx
test eax eax
setne cl
pop edi
mov [ esi ] eax
pop esi
pop ebx
mov eax ecx
pop ebp
retn 0x4
sub_100809d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push eax
call [ esi + 0x2ee4 ]
and [ esi ] 0x0
pop ecx
sub_10080c1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x2eb5 ]
push esi
lea eax [ eax * 8 + 0x100 ]
mov esi 0x2a0
cmp eax esi
push edi
jl r-xdata
mov ecx eax
push ebx
mov ebx ecx
shr ecx 0x2
xor eax eax
lea edi [ edx + 0xa18 ]
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
movzx eax [ edx + 0x2eb5 ]
lea eax [ eax * 8 + 0x100 ]
cmp eax esi
pop ebx
jl r-xdata
mov eax esi
mov ecx eax
mov esi ecx
shr ecx 0x2
xor eax eax
lea edi [ edx + 0x2b14 ]
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
push 0x3e
pop ecx
xor eax eax
lea edi [ edx + 0xcb8 ]
[ edi ]
stosb [ edi ]
push 0x3e
pop ecx
xor eax eax
lea edi [ edx + 0x2db4 ]
[ edi ]
stosb [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
mov eax esi
sub_1008151
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
xor edx edx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x2ec0 ] edx
mov [ eax + 0x2b10 ] edx
mov [ eax + 0x2edc ] ecx
mov [ eax + 0x2ed4 ] edx
mov [ eax + 0x2ed8 ] edx
mov [ eax + 0x2eb8 ] ecx
mov [ eax + 0x2ec4 ] edx
mov [ eax + 0x2ebc ] edx
pop ebp
retn 0x4
sub_10081b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
cmp ebx 0x6
mov [ ebp - 0x4 ] eax
jg r-xdata
mov eax [ ecx + 0x2ec8 ]
add eax ebx
cmp eax 0xa
jae r-xdata
add [ ecx + 0x2ec8 ] ebx
jmp r-xdata
push esi
push edi
lea eax [ edx + ebx ]
lea esi [ eax - 0x6 ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] eax
movsw [ edi ] [ esi ]
mov edi [ ebp - 0x10 ]
add edi 0xfffffffa
mov eax 0xe8e8e8e8
stosd [ edi ]
stosw [ edi ]
mov eax [ ecx + 0x2ec8 ]
lea ebx [ eax + ebx - 0xa ]
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov [ ecx + 0x2ec8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
call sub_10064de
leave
retn 0xc
cmp [ edx ] 0xe8
jne r-xdata
inc edx
inc [ ecx + 0x2ec8 ]
mov edi [ ecx + 0x2ec8 ]
inc edx
cmp edi ebx
jae r-xdata
mov edi [ ebp - 0x10 ]
add ebx 0xa
add edi 0xfffffffa
mov [ ecx + 0x2ec8 ] ebx
lea esi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
mov eax [ edx ]
mov esi [ ecx + 0x2ec4 ]
cmp eax esi
jae r-xdata
mov ebx eax
neg ebx
cmp ebx edi
ja r-xdata
sub eax edi
mov [ edx ] eax
jmp r-xdata
mov ebx [ ebp - 0x14 ]
add edx 0x4
add [ ecx + 0x2ec8 ] 0x5
jmp r-xdata
add esi eax
mov [ edx ] esi
sub_1008295
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
jmp r-xdata
cmp [ ebp + 0xc ] edi
cmp [ ebx + 0x2edc ] 0x1
jne r-xdata
mov eax [ ebx + 0x2ec0 ]
cmp eax edi
jne r-xdata
cmp [ ebx + 0x2ed4 ] edi
jg r-xdata
lea eax [ ebx + 0x2eb8 ]
cmp [ eax ] edi
je r-xdata
sub eax [ ebp - 0x4 ]
mov ecx 0x9800
add eax [ ebx ]
cmp [ ebp - 0x4 ] ecx
jge r-xdata
mov eax [ ebx + 0x4 ]
cmp [ ebp + 0xc ] edi
jle r-xdata
cmp [ ebx + 0x2ed4 ] edi
jne r-xdata
cmp [ ebx + 0x2ed8 ] 0x3
jne r-xdata
push 0x1
push ebx
mov [ eax ] edi
call sub_10085f3
test eax eax
je r-xdata
push eax
push ecx
push ebx
call sub_1009590
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov esi [ ebx + 0x2ed4 ]
cmp esi [ ebp + 0xc ]
jl r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
mov [ ebx + 0x2edc ] 0x1
push 0x3
push ebx
call sub_10085f3
push 0x8
push ebx
mov [ ebx + 0x2ed8 ] eax
call sub_10085f3
push 0x8
push ebx
mov esi eax
call sub_10085f3
push 0x8
push ebx
mov edi eax
call sub_10085f3
shl esi 0x8
add esi edi
shl esi 0x8
add eax esi
cmp [ ebx + 0x2ed8 ] 0x2
mov [ ebx + 0x2ed0 ] eax
mov [ ebx + 0x2ed4 ] eax
jne r-xdata
test [ ebx + 0x2ed0 ] 0x1
je r-xdata
mov [ ebx + 0x2ec4 ] edi
push 0x10
push ebx
call sub_10085f3
push 0x10
push ebx
mov esi eax
call sub_10085f3
shl esi 0x10
or eax esi
mov [ ebx + 0x2ec4 ] eax
jmp r-xdata
cmp esi edi
je r-xdata
mov esi [ ebp + 0xc ]
jg r-xdata
push ebx
call sub_10084cc
mov eax [ ebx + 0x2ed8 ]
cmp eax 0x1
je r-xdata
push ebx
call sub_10099ce
push ebx
mov [ ebx + 0x2ed8 ] edi
call sub_10084cc
lea eax [ ebx + 0x2b04 ]
mov ecx [ eax ]
cmp ecx [ ebx + 0x2b08 ]
jae r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebx + 0x2ec0 ]
mov edx [ ebx + 0x2ed8 ]
lea ecx [ eax + esi ]
cmp ecx eax
jl r-xdata
movzx ecx [ ebx + 0x2eb5 ]
lea ecx [ ecx * 8 + 0x100 ]
mov eax 0x2a0
cmp ecx eax
jl r-xdata
cmp eax 0x2
je r-xdata
inc ecx
mov [ eax ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
or eax 0xffffffff
cmp ecx [ ebx + 0x4 ]
jg r-xdata
mov eax ecx
shr ecx 0x2
lea esi [ ebx + 0xa18 ]
lea edi [ ebx + 0x2b14 ]
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x3e
pop ecx
lea esi [ ebx + 0xcb8 ]
lea edi [ ebx + 0x2db4 ]
[ edi ] [ esi ]
push ebx
movsb [ edi ] [ esi ]
call sub_10098ff
mov ecx eax
cmp eax 0x3
jne r-xdata
sub [ ebx + 0x2ed4 ] esi
sub [ ebp + 0xc ] esi
add [ ebp - 0x4 ] esi
cmp edx 0x2
jne r-xdata
push ebx
call sub_10086b0
test eax eax
jne r-xdata
cmp edx 0x1
jne r-xdata
push esi
push eax
push ebx
call sub_100952b
jmp r-xdata
mov [ ebx + 0x2edc ] 0x2
xor edi edi
jmp r-xdata
cmp edx 0x3
jne r-xdata
push esi
push eax
push ebx
call sub_1008d62
jmp r-xdata
cmp eax edi
jne r-xdata
push esi
push eax
push ebx
call sub_100861f
jmp r-xdata
sub_10084cc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x2ed8 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov eax [ ecx + 0x2b04 ]
push esi
lea esi [ eax + 0x4 ]
cmp esi [ ecx + 0x2b08 ]
ja r-xdata
pop esi
xor edx edx
mov dh [ eax + 0x1 ]
push edi
movzx edi [ eax + 0x3 ]
mov dl [ eax ]
movzx eax [ eax + 0x2 ]
mov [ ecx + 0x2eb4 ] 0x10
mov [ ecx + 0x2b04 ] esi
shl edx 0x8
or edx edi
shl edx 0x8
or edx eax
mov [ ecx + 0x2eb0 ] edx
pop edi
sub_1008537
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub [ eax + 0x2eb4 ] cl
shl [ eax + 0x2eb0 ] cl
mov dl [ eax + 0x2eb4 ]
test dl dl
push edi
mov edi [ eax + 0x2eb0 ]
jg r-xdata
pop edi
pop ebp
retn 0x8
push esi
mov esi [ eax + 0x2b04 ]
cmp esi [ eax + 0x2b08 ]
jb r-xdata
push ebx
xor ebx ebx
mov bh [ esi + 0x1 ]
xor ecx ecx
mov cl dl
add dl 0x10
mov bl [ esi ]
add esi 0x2
neg ecx
mov [ eax + 0x2b04 ] esi
mov [ eax + 0x2eb4 ] dl
shl ebx cl
or ebx edi
test dl dl
mov [ eax + 0x2eb0 ] ebx
jg r-xdata
mov [ eax + 0x2ebc ] 0x1
jmp r-xdata
pop ebx
cmp esi [ eax + 0x2b08 ]
jb r-xdata
pop esi
xor ebx ebx
mov bh [ esi + 0x1 ]
xor ecx ecx
mov cl dl
mov bl [ esi ]
add esi 0x2
neg ecx
mov [ eax + 0x2b04 ] esi
shl ebx cl
or [ eax + 0x2eb0 ] ebx
add dl 0x10
mov [ eax + 0x2eb4 ] dl
mov [ eax + 0x2ebc ] 0x1
jmp r-xdata
sub_10085f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x2eb0 ]
push 0x20
pop ecx
push [ ebp + 0xc ]
sub ecx [ ebp + 0xc ]
push eax
shr esi cl
call sub_1008537
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100861f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2b04 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + eax ]
cmp esi edi
mov ebx esi
mov [ ebp + 0xc ] ebx
jge r-xdata
mov eax 0x101
cmp edi eax
mov [ ecx + 0x2b04 ] edx
mov [ ebp + 0xc ] eax
jg r-xdata
cmp edx [ ecx + 0x2b08 ]
jae r-xdata
cmp ebx [ ebp + 0xc ]
jb r-xdata
mov [ ebp + 0xc ] edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ecx + 0x4 ]
add eax 0x105
cmp esi eax
jge r-xdata
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add edx eax
mov al [ eax + ebx ]
mov [ edx + ebx ] al
inc ebx
mov eax [ ecx + 0x8 ]
and eax esi
mov [ ecx + 0x2ec0 ] eax
mov eax esi
sub eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov bl [ edx ]
mov eax [ ecx ]
mov [ esi + eax ] bl
inc esi
inc edx
cmp esi edi
jl r-xdata
mov ebx [ ebp + 0xc ]
sub_10086b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax + 0x2b04 ] 0xfffffffe
mov ecx [ eax + 0x2b04 ]
add ecx 0x4
cmp ecx [ eax + 0x2b08 ]
jb r-xdata
push ebx
push esi
push edi
push 0x3
lea esi [ eax + 0xc ]
pop edi
xor eax eax
jmp r-xdata
mov ecx [ eax + 0x2b04 ]
movzx ebx [ ecx + 0x1 ]
xor edx edx
mov dh [ ecx + 0x3 ]
mov dl [ ecx + 0x2 ]
movzx ecx [ ecx ]
shl edx 0x8
or edx ebx
shl edx 0x8
or edx ecx
mov [ esi ] edx
add [ eax + 0x2b04 ] 0x4
add esi 0x4
dec edi
jne r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
pop ebp
retn 0x4
sub_100871a
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ edx + 0x2eb0 ]
mov al [ edx + 0x2eb4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ edx + 0x2b04 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edx + 0x2b08 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
add esi ecx
cmp ecx esi
push edi
mov [ ebp - 0x1 ] al
mov [ ebp - 0x14 ] esi
jge r-xdata
mov [ edx + 0x2eb4 ] al
mov eax [ ebp - 0x8 ]
mov [ edx + 0x2eb0 ] eax
mov eax [ ebp - 0xc ]
mov [ edx + 0x2b04 ] eax
mov eax ecx
mov ecx [ ebp - 0x8 ]
xor esi esi
shr ecx 0x16
inc esi
cmp ecx 0x400
jae r-xdata
mov [ edx + 0x2ebc ] esi
xor ebx ebx
movsx ebx [ edx + ecx * 2 + 0x18 ]
jmp r-xdata
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
mov ecx 0x200000
test ebx ebx
jge r-xdata
mov esi 0x100
sub ebx esi
jns r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ebp - 0xc ] ecx
jae r-xdata
lea edi [ ebx + ebx ]
cmp edi 0xa80
jae r-xdata
lea edi [ ebx + ebx + 0x1 ]
cmp edi 0xa80
jae r-xdata
mov edi ebx
and edi 0x7
cmp edi 0x7
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ edx ]
mov [ ecx + esi ] bl
mov esi [ edx + 0x4 ]
add esi [ edx ]
mov [ esi + ecx ] bl
inc ecx
mov [ ebp + 0x8 ] ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov cl [ ebx + edx + 0xa18 ]
shl [ ebp - 0x8 ] cl
sub al cl
test al al
mov [ ebp - 0x1 ] al
jg r-xdata
xor ebx ebx
mov [ edx + 0x2ebc ] esi
movsx ebx [ edx + ebx * 4 + 0xe3c ]
jmp r-xdata
movsx ebx [ edx + ebx * 4 + 0xe3e ]
jmp r-xdata
sar ebx 0x3
cmp bl 0x2
jle r-xdata
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
cmp ecx esi
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp - 0xc ]
xor ecx ecx
mov ch [ esi + 0x1 ]
add [ ebp - 0xc ] 0x2
mov cl [ esi ]
mov [ ebp + 0xc ] ecx
xor ecx ecx
mov cl al
mov eax [ ebp + 0xc ]
neg ecx
shl eax cl
or [ ebp - 0x8 ] eax
mov al [ ebp - 0x1 ]
add al 0x10
mov [ ebp - 0x1 ] al
mov edi [ ebp - 0x8 ]
neg ebx
test edi ecx
je r-xdata
shr ecx 0x1
test ebx ebx
jl r-xdata
test bl bl
movsx eax bl
lea ecx [ edx + eax * 4 + 0xc ]
mov esi [ ecx ]
je r-xdata
cmp bl 0x3
jle r-xdata
mov [ edx + 0x2ebc ] 0x1
xor edi edi
movsx edi [ edx + ecx * 2 + 0x818 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
inc edi
inc edi
sub ecx esi
mov eax [ edx + 0xc ]
mov [ ecx ] eax
xor esi esi
inc esi
cmp bl 0x33
jae r-xdata
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
mov ecx 0x800000
test edi edi
jge r-xdata
inc esi
inc ecx
dec edi
test edi edi
mov [ ebp + 0x8 ] esi
jg r-xdata
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
add ebx eax
mov al [ eax + esi ]
mov [ ebx + esi ] al
mov [ edx + 0xc ] esi
mov esi [ ebp - 0x8 ]
movsx ebx bl
movzx eax [ ebx + r-xdata ]
push 0x20
pop ecx
sub ecx eax
shr esi cl
mov ecx eax
mov al [ ebx + r-xdata ]
sub [ ebp - 0x1 ] al
shl [ ebp - 0x8 ] cl
cmp [ ebp - 0x1 ] 0x0
jg r-xdata
add edi 0x7
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ebp - 0xc ] ecx
jae r-xdata
lea esi [ edi + edi ]
cmp esi 0x3e4
jae r-xdata
lea esi [ edi + edi + 0x1 ]
cmp esi 0x3e4
jae r-xdata
mov eax [ edx ]
mov esi ecx
and esi [ edx + 0x8 ]
mov bl [ esi + eax ]
mov esi [ ebp + 0x8 ]
cmp esi 0x101
mov [ eax + esi ] bl
jge r-xdata
mov al [ ebp - 0x1 ]
add esi [ ebx * 4 + r-xdata ]
jmp r-xdata
xor eax eax
mov ecx eax
mov eax [ ebp - 0xc ]
mov ch [ eax + 0x1 ]
mov cl [ eax ]
mov eax ecx
xor ecx ecx
mov cl [ ebp - 0x1 ]
add [ ebp - 0x1 ] 0x10
neg ecx
shl eax cl
or [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
inc eax
inc eax
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] eax
jg r-xdata
mov cl [ edi + edx + 0xcb8 ]
shl [ ebp - 0x8 ] cl
sub al cl
test al al
mov [ ebp - 0x1 ] al
jg r-xdata
xor edi edi
mov [ edx + 0x2ebc ] 0x1
movsx edi [ edx + edi * 4 + 0x233c ]
jmp r-xdata
movsx edi [ edx + edi * 4 + 0x233e ]
jmp r-xdata
mov eax [ edx + 0x10 ]
mov [ edx + 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ edx + 0x10 ] eax
jmp r-xdata
xor ecx ecx
mov ch [ eax + 0x1 ]
add [ ebp - 0xc ] 0x2
mov cl [ eax ]
mov eax ecx
xor ecx ecx
mov cl [ ebp - 0x1 ]
neg ecx
shl eax cl
or [ ebp - 0x8 ] eax
add [ ebp - 0x1 ] 0x10
mov esi [ ebp - 0xc ]
xor ecx ecx
mov ch [ esi + 0x1 ]
add [ ebp - 0xc ] 0x2
mov cl [ esi ]
mov [ ebp + 0xc ] ecx
xor ecx ecx
mov cl al
mov eax [ ebp + 0xc ]
neg ecx
shl eax cl
or [ ebp - 0x8 ] eax
add [ ebp - 0x1 ] 0x10
mov esi [ ebp - 0x8 ]
neg edi
test esi ecx
je r-xdata
shr ecx 0x1
test edi edi
jl r-xdata
sub_1008a3e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x2eb4 ]
mov ecx [ edx + 0x2eb0 ]
push ebx
mov ebx [ edx + 0x2b04 ]
mov [ ebp + 0xb ] al
mov eax [ edx + 0x2b08 ]
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
add esi eax
cmp eax esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] esi
jge r-xdata
mov cl [ ebp + 0xb ]
mov [ edx + 0x2eb4 ] cl
mov ecx [ ebp - 0x4 ]
mov [ edx + 0x2eb0 ] ecx
mov ecx [ edx + 0x8 ]
and ecx eax
sub eax [ ebp - 0x14 ]
mov [ edx + 0x2b04 ] ebx
mov [ edx + 0x2ec0 ] ecx
xor esi esi
inc esi
jmp r-xdata
mov eax ecx
shr eax 0x16
cmp eax 0x400
jae r-xdata
mov [ edx + 0x2ebc ] esi
xor edi edi
movsx edi [ edx + eax * 2 + 0x18 ]
jmp r-xdata
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
mov [ ebp + 0x10 ] 0x200000
test edi edi
mov [ ebp - 0x8 ] edi
jge r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jae r-xdata
lea eax [ edi + edi ]
cmp eax 0xa80
jae r-xdata
lea eax [ edi + edi + 0x1 ]
cmp eax 0xa80
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov cl [ edi + edx + 0xa18 ]
mov al [ ebp + 0xb ]
shl [ ebp - 0x4 ] cl
sub al cl
test al al
mov [ ebp + 0x13 ] cl
mov [ ebp + 0xb ] al
jg r-xdata
xor edi edi
mov [ edx + 0x2ebc ] esi
movsx edi [ edx + edi * 4 + 0xe3c ]
jmp r-xdata
movsx edi [ edx + edi * 4 + 0xe3e ]
jmp r-xdata
sub [ ebp - 0x8 ] 0x100
jns r-xdata
xor ecx ecx
mov ch [ ebx + 0x1 ]
mov cl [ ebx ]
mov [ ebp + 0x10 ] ecx
xor ecx ecx
mov cl al
mov eax [ ebp + 0x10 ]
neg ecx
shl eax cl
or [ ebp - 0x4 ] eax
mov al [ ebp + 0xb ]
inc ebx
inc ebx
add al 0x10
mov [ ebp - 0xc ] ebx
mov [ ebp + 0xb ] al
neg edi
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0x8 ] edi
shr [ ebp + 0x10 ] 0x1
test edi edi
jl r-xdata
mov edi [ ebp - 0x8 ]
and edi 0x7
cmp edi 0x7
jne r-xdata
mov ecx [ edx ]
mov eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] edx
mov dl [ ebp - 0x8 ]
mov [ eax + ecx ] dl
mov edx [ ebp + 0x10 ]
inc eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
sar ecx 0x3
cmp cl 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x18
cmp ecx 0x100
jae r-xdata
cmp eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
jl r-xdata
test cl cl
movsx eax cl
lea eax [ edx + eax * 4 + 0xc ]
mov esi [ eax ]
je r-xdata
cmp cl 0x3
jle r-xdata
mov [ edx + 0x2ebc ] esi
xor edi edi
movsx edi [ edx + ecx * 2 + 0x818 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
inc edi
mov ecx eax
sub ecx esi
inc edi
and ecx [ edx + 0x8 ]
mov ecx [ edx + 0xc ]
mov [ eax ] ecx
mov esi [ r-xdata ]
cmp cl 0x33
jae r-xdata
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
mov ecx 0x800000
test edi edi
jge r-xdata
mov esi [ edx ]
mov bl [ esi + ecx ]
mov [ esi + eax ] bl
inc eax
inc ecx
dec edi
test edi edi
jg r-xdata
mov ebx [ ebp - 0xc ]
xor esi esi
inc esi
mov [ edx + 0xc ] esi
mov esi [ ebp - 0x4 ]
movsx eax cl
mov [ ebp + 0x10 ] eax
movzx eax [ eax + r-xdata ]
push 0x20
pop ecx
sub ecx eax
shr esi cl
mov ecx eax
mov eax [ ebp + 0x10 ]
mov al [ eax + r-xdata ]
sub [ ebp + 0xb ] al
shl [ ebp - 0x4 ] cl
cmp [ ebp + 0xb ] 0x0
jg r-xdata
add edi 0x7
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
cmp ebx [ ebp - 0x10 ]
jae r-xdata
lea esi [ edi + edi ]
cmp esi 0x3e4
jae r-xdata
lea esi [ edi + edi + 0x1 ]
cmp esi 0x3e4
jae r-xdata
mov eax [ ebp + 0x10 ]
add esi [ eax * 4 + r-xdata ]
jmp r-xdata
xor eax eax
mov ah [ ebx + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xb ]
add [ ebp + 0xb ] 0x10
mov al [ ebx ]
neg ecx
shl eax cl
or [ ebp - 0x4 ] eax
inc ebx
inc ebx
cmp [ ebp + 0xb ] 0x0
mov [ ebp - 0xc ] ebx
jg r-xdata
mov cl [ edi + edx + 0xcb8 ]
shl [ ebp - 0x4 ] cl
sub al cl
test al al
mov [ ebp + 0xb ] al
jg r-xdata
xor edi edi
mov [ edx + 0x2ebc ] 0x1
movsx edi [ edx + edi * 4 + 0x233c ]
jmp r-xdata
movsx edi [ edx + edi * 4 + 0x233e ]
jmp r-xdata
mov eax [ edx + 0x10 ]
mov [ edx + 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ edx + 0x10 ] eax
jmp r-xdata
xor eax eax
mov ah [ ebx + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xb ]
mov al [ ebx ]
neg ecx
shl eax cl
or [ ebp - 0x4 ] eax
inc ebx
inc ebx
add [ ebp + 0xb ] 0x10
mov [ ebp - 0xc ] ebx
xor ecx ecx
mov ch [ ebx + 0x1 ]
mov cl [ ebx ]
mov [ ebp + 0x10 ] ecx
xor ecx ecx
mov cl al
mov eax [ ebp + 0x10 ]
neg ecx
shl eax cl
or [ ebp - 0x4 ] eax
inc ebx
inc ebx
add [ ebp + 0xb ] 0x10
mov [ ebp - 0xc ] ebx
neg edi
test [ ebp - 0x4 ] ecx
je r-xdata
shr ecx 0x1
test edi edi
jl r-xdata
sub_1008d62
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax 0x101
cmp esi eax
jge r-xdata
push [ ebp + 0x10 ]
push esi
push edx
call sub_1008a3e
sub eax esi
cmp eax [ ebp + 0x10 ]
jl r-xdata
push eax
push esi
call sub_100871a
cmp eax esi
jge r-xdata
mov eax [ ebp + 0x10 ]
sub esi eax
add [ ebp + 0x10 ] esi
cmp [ ebp + 0x10 ] 0x0
mov esi eax
mov [ edx + 0x2ec0 ] eax
jg r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_1008dbd
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ edx + 0x2eb0 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x2b08 ]
mov [ ebp - 0xc ] eax
mov eax [ edx ]
push ebx
mov bl [ edx + 0x2eb4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
add eax ecx
cmp ecx eax
push esi
push edi
mov edi [ edx + 0x2b04 ]
mov [ ebp - 0x14 ] eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov [ edx + 0x2eb0 ] eax
mov [ edx + 0x2eb4 ] bl
mov [ edx + 0x2b04 ] edi
mov eax ecx
mov eax [ ebp - 0x4 ]
shr eax 0x16
cmp eax 0x400
jae r-xdata
mov [ edx + 0x2ebc ] 0x1
xor eax eax
movsx eax [ edx + eax * 2 + 0x18 ]
jmp r-xdata
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
mov ecx 0x200000
test eax eax
jge r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
lea esi [ eax + eax ]
cmp esi 0xa80
jae r-xdata
lea esi [ eax + eax + 0x1 ]
cmp esi 0xa80
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov cl [ eax + edx + 0xa18 ]
shl [ ebp - 0x4 ] cl
sub bl cl
test bl bl
mov [ ebp + 0xf ] bl
jg r-xdata
xor eax eax
mov [ edx + 0x2ebc ] 0x1
movsx eax [ edx + eax * 4 + 0xe3c ]
jmp r-xdata
movsx eax [ edx + eax * 4 + 0xe3e ]
jmp r-xdata
mov esi 0x100
sub eax esi
jns r-xdata
xor ecx ecx
mov ch [ edi + 0x1 ]
mov cl [ edi ]
mov [ ebp - 0x8 ] ecx
xor ecx ecx
mov cl bl
mov ebx [ ebp - 0x8 ]
neg ecx
shl ebx cl
or [ ebp - 0x4 ] ebx
mov bl [ ebp + 0xf ]
inc edi
inc edi
add bl 0x10
mov [ ebp + 0xf ] bl
mov esi [ ebp - 0x4 ]
neg eax
test esi ecx
je r-xdata
shr ecx 0x1
test eax eax
jl r-xdata
mov ecx eax
and ecx 0x7
cmp ecx 0x7
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ ecx + esi ] al
mov esi [ edx + 0x4 ]
add esi ecx
mov ecx [ ebp + 0x8 ]
inc [ ebp + 0x8 ]
mov [ esi + ecx ] al
jmp r-xdata
sar eax 0x3
cmp al 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x18
cmp ecx esi
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x14 ]
jl r-xdata
test al al
movsx ecx al
lea ecx [ edx + ecx * 4 + 0xc ]
mov esi [ ecx ]
je r-xdata
movsx eax al
mov bl [ eax + r-xdata ]
cmp bl 0x3
jb r-xdata
and [ ebp - 0x8 ] 0x0
mov esi [ ebp - 0x8 ]
mov [ edx + 0x2ebc ] 0x1
movsx esi [ edx + ecx * 2 + 0x818 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp - 0x8 ] 0x2
mov ebx ecx
sub ebx esi
mov eax [ edx + 0xc ]
mov [ ecx ] eax
test bl bl
je r-xdata
movzx esi bl
lea ecx [ esi - 0x3 ]
test ecx ecx
je r-xdata
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
mov ecx 0x800000
test esi esi
jge r-xdata
inc ecx
inc ebx
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov esi [ edx + 0x4 ]
add esi [ ebp - 0x10 ]
mov [ esi + ecx ] al
xor esi esi
inc esi
mov esi [ ebp - 0x4 ]
push 0x20
pop ecx
sub ecx ebx
shr esi cl
cmp edi [ ebp - 0xc ]
jae r-xdata
xor esi esi
push 0x23
pop ecx
sub ecx esi
mov esi [ ebp - 0x4 ]
shr esi cl
cmp edi [ ebp - 0xc ]
jae r-xdata
add esi 0x7
cmp [ edx + 0x2ebc ] 0x0
mov [ ebp - 0x8 ] esi
jne r-xdata
cmp edi [ ebp - 0xc ]
jae r-xdata
lea ebx [ esi + esi ]
cmp ebx 0x3e4
jae r-xdata
lea ebx [ esi + esi + 0x1 ]
cmp ebx 0x3e4
jae r-xdata
mov esi [ ebp - 0x10 ]
mov eax ebx
and eax [ edx + 0x8 ]
cmp ecx 0x101
mov al [ eax + esi ]
mov [ esi + ecx ] al
jge r-xdata
mov bl [ ebp + 0xf ]
mov [ ebp + 0x8 ] ecx
mov [ edx + 0xc ] esi
mov cl [ eax + r-xdata ]
sub [ ebp + 0xf ] cl
shl [ ebp - 0x4 ] cl
cmp [ ebp + 0xf ] 0x0
jg r-xdata
xor eax eax
mov [ edx + 0x2ebc ] 0x1
cmp edi [ ebp - 0xc ]
movsx eax [ eax + edx + 0xdb4 ]
jae r-xdata
xor ecx ecx
mov cl bl
sub ecx 0x3
shl [ ebp - 0x4 ] cl
mov cl 0x3
sub cl bl
add [ ebp + 0xf ] cl
cmp [ ebp + 0xf ] 0x0
jg r-xdata
mov cl [ esi + edx + 0xcb8 ]
shl [ ebp - 0x4 ] cl
xor ecx ecx
mov cl [ ebp + 0xf ]
sub cl [ esi + edx + 0xcb8 ]
test cl cl
mov [ ebp + 0xf ] cl
jg r-xdata
and [ ebp - 0x8 ] 0x0
mov [ edx + 0x2ebc ] 0x1
movsx esi [ edx + esi * 4 + 0x233c ]
movsx esi [ edx + esi * 4 + 0x233e ]
jmp r-xdata
add esi [ eax * 4 + r-xdata ]
jmp r-xdata
xor ebx ebx
mov bh [ edi + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xf ]
mov bl [ edi ]
neg ecx
shl ebx cl
or [ ebp - 0x4 ] ebx
inc edi
inc edi
add [ ebp + 0xf ] 0x10
mov eax [ edx + 0x10 ]
mov [ edx + 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ edx + 0x10 ] eax
jmp r-xdata
mov cl [ eax + edx + 0xe34 ]
sub [ ebp + 0xf ] cl
shl [ ebp - 0x4 ] cl
cmp [ ebp + 0xf ] 0x0
jg r-xdata
mov eax [ eax * 4 + r-xdata ]
lea esi [ eax + esi * 8 ]
mov eax [ ebp - 0x4 ]
shr eax 0x19
cmp eax 0x80
jae r-xdata
xor ebx ebx
mov bh [ edi + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xf ]
mov bl [ edi ]
neg ecx
shl ebx cl
or [ ebp - 0x4 ] ebx
inc edi
inc edi
add [ ebp + 0xf ] 0x10
jmp r-xdata
xor ebx ebx
mov bh [ edi + 0x1 ]
neg ecx
mov bl [ edi ]
shl ebx cl
or [ ebp - 0x4 ] ebx
inc edi
inc edi
add [ ebp + 0xf ] 0x10
mov ebx [ ebp - 0x4 ]
neg esi
test ebx ecx
je r-xdata
mov esi [ ebp - 0x8 ]
shr ecx 0x1
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
add esi eax
jmp r-xdata
xor ebx ebx
mov bh [ edi + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xf ]
mov bl [ edi ]
neg ecx
shl ebx cl
or [ ebp - 0x4 ] ebx
inc edi
inc edi
add [ ebp + 0xf ] 0x10
jmp r-xdata
sub_1009175
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x2eb4 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp + 0xb ] al
mov eax [ edx + 0x2eb0 ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x2b08 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx ]
push ebx
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
add ecx eax
cmp eax ecx
push esi
push edi
mov edi [ edx + 0x2b04 ]
mov [ ebp - 0x14 ] ecx
jge r-xdata
mov cl [ ebp + 0xb ]
mov [ edx + 0x2eb4 ] cl
mov ecx [ ebp - 0x4 ]
mov [ edx + 0x2eb0 ] ecx
mov ecx [ edx + 0x8 ]
and ecx eax
sub eax [ ebp - 0x14 ]
mov [ edx + 0x2b04 ] edi
mov [ edx + 0x2ec0 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
shr eax 0x16
inc ecx
cmp eax 0x400
jae r-xdata
mov [ edx + 0x2ebc ] ecx
xor eax eax
movsx eax [ edx + eax * 2 + 0x18 ]
jmp r-xdata
cmp [ edx + 0x2ebc ] 0x0
jne r-xdata
mov esi 0x200000
test eax eax
jge r-xdata
mov esi 0x100
sub eax esi
mov [ ebp + 0x10 ] eax
jns r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
lea ebx [ eax + eax ]
cmp ebx 0xa80
jae r-xdata
lea ebx [ eax + eax + 0x1 ]
cmp ebx 0xa80
jae r-xdata
mov ebx eax
and ebx 0x7
cmp ebx 0x7
mov [ ebp - 0xc ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
inc [ ebp + 0xc ]
mov [ ecx + esi ] al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov cl [ eax + edx + 0xa18 ]
sub [ ebp + 0xb ] cl
shl [ ebp - 0x4 ] cl
cmp [ ebp + 0xb ] 0x0
jg r-xdata
xor eax eax
mov [ edx + 0x2ebc ] ecx
movsx eax [ edx + eax * 4 + 0xe3c ]
jmp r-xdata
movsx eax [ edx + eax * 4 + 0xe3e ]
jmp r-xdata
sar eax 0x3
cmp al 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x18
cmp ecx esi
jae r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
xor ebx ebx
mov bh [ edi + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xb ]
mov bl [ edi ]
neg ecx
shl ebx cl
or [ ebp - 0x4 ] ebx
inc edi
inc edi
add [ ebp + 0xb ] 0x10
mov ebx [ ebp - 0x4 ]
neg eax
test ebx esi
je r-xdata
shr esi 0x1
test eax eax
jl r-xdata
test al al
movsx ecx al
lea ecx [ edx + ecx * 4 + 0xc ]
mov esi [ ecx ]
je r-xdata
movsx eax al
mov cl [ eax + r-xdata ]
cmp cl 0x3
mov [ ebp + 0x13 ] cl
jb r-xdata
mov [ edx + 0x2ebc ] 0x1
xor ebx ebx
movsx ebx [ edx + ecx * 2 + 0x818 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
sub ecx esi
and ecx [ edx + 0x8 ]
mov esi [ ebp - 0x10 ]
inc ebx
inc ebx
add ecx esi
mov [ ebp + 0x10 ] ecx
mov eax [ edx + 0xc ]
mov [ ecx ] eax
test cl cl
je r-xdata
movzx esi cl
lea ecx [ esi - 0x3 ]
test ecx ecx
je r-xdata
mov esi [ edx + 0x2ebc ]
test esi esi
jne r-xdata
mov ecx 0x800000
test ebx ebx
jge r-xdata
mov al [ ecx ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ esi + ecx ] al
mov ecx [ ebp + 0x10 ]
inc ecx
dec ebx
test ebx ebx
mov [ ebp + 0x10 ] ecx
jg r-xdata
mov esi [ eax * 4 + r-xdata ]
mov esi [ ebp - 0x4 ]
push 0x20
pop ecx
sub ecx [ ebp + 0x13 ]
shr esi cl
cmp edi [ ebp - 0x8 ]
jae r-xdata
xor esi esi
jmp r-xdata
push 0x23
pop ecx
sub ecx esi
mov esi [ ebp - 0x4 ]
shr esi cl
cmp edi [ ebp - 0x8 ]
jae r-xdata
add ebx 0x7
test esi esi
mov [ ebp - 0xc ] ebx
jne r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
lea esi [ ebx + ebx ]
cmp esi 0x3e4
jae r-xdata
lea esi [ ebx + ebx + 0x1 ]
cmp esi 0x3e4
jae r-xdata
mov [ edx + 0xc ] esi
mov cl [ eax + r-xdata ]
sub [ ebp + 0xb ] cl
shl [ ebp - 0x4 ] cl
cmp [ ebp + 0xb ] 0x0
jg r-xdata
mov eax [ eax * 4 + r-xdata ]
lea esi [ eax + esi * 8 ]
mov eax [ ebp - 0x4 ]
shr eax 0x19
cmp eax 0x80
jae r-xdata
xor ecx ecx
mov cl [ eax + r-xdata ]
sub ecx 0x3
shl [ ebp - 0x4 ] cl
mov cl 0x3
sub cl [ eax + r-xdata ]
add [ ebp + 0xb ] cl
cmp [ ebp + 0xb ] 0x0
jg r-xdata
mov cl [ ebx + edx + 0xcb8 ]
shl [ ebp - 0x4 ] cl
mov al cl
sub [ ebp + 0xb ] al
cmp [ ebp + 0xb ] 0x0
jg r-xdata
xor ebx ebx
mov [ edx + 0x2ebc ] 0x1
movsx ebx [ edx + ebx * 4 + 0x233c ]
jmp r-xdata
movsx ebx [ edx + ebx * 4 + 0x233e ]
jmp r-xdata
add esi [ eax * 4 + r-xdata ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
xor ebx ebx
mov bh [ edi + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xb ]
mov bl [ edi ]
neg ecx
shl ebx cl
or [ ebp - 0x4 ] ebx
inc edi
inc edi
add [ ebp + 0xb ] 0x10
and [ ebp + 0x10 ] 0x0
mov [ edx + 0x2ebc ] 0x1
cmp edi [ ebp - 0x8 ]
movsx eax [ eax + edx + 0xdb4 ]
mov [ ebp + 0x10 ] eax
jae r-xdata
mov ebx [ ebp - 0xc ]
xor ebx ebx
mov bh [ edi + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xb ]
mov bl [ edi ]
neg ecx
shl ebx cl
or [ ebp - 0x4 ] ebx
inc edi
inc edi
add [ ebp + 0xb ] 0x10
mov eax [ ebp + 0x10 ]
xor eax eax
mov ah [ edi + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xb ]
mov al [ edi ]
neg ecx
shl eax cl
or [ ebp - 0x4 ] eax
inc edi
inc edi
add [ ebp + 0xb ] 0x10
mov esi [ ebp - 0x4 ]
neg ebx
test esi ecx
je r-xdata
shr ecx 0x1
test ebx ebx
jl r-xdata
mov eax [ edx + 0x10 ]
mov [ edx + 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ edx + 0x10 ] eax
jmp r-xdata
mov cl [ eax + edx + 0xe34 ]
mov al [ eax + edx + 0xe34 ]
sub [ ebp + 0xb ] al
shl [ ebp - 0x4 ] cl
cmp [ ebp + 0xb ] 0x0
jg r-xdata
add esi [ ebp + 0x10 ]
jmp r-xdata
xor eax eax
mov ah [ edi + 0x1 ]
xor ecx ecx
mov cl [ ebp + 0xb ]
mov al [ edi ]
neg ecx
shl eax cl
or [ ebp - 0x4 ] eax
inc edi
inc edi
add [ ebp + 0xb ] 0x10
jmp r-xdata
sub_100952b
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax 0x101
cmp esi eax
jge r-xdata
push [ ebp + 0x10 ]
push esi
push edx
call sub_1009175
sub eax esi
cmp eax [ ebp + 0x10 ]
jl r-xdata
push eax
push esi
call sub_1008dbd
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0x10 ]
sub esi eax
add [ ebp + 0x10 ] esi
cmp [ ebp + 0x10 ] 0x0
mov esi eax
mov [ edx + 0x2ec0 ] eax
jg r-xdata
mov [ edx + 0x2ebc ] 0x1
or eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_1009590
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax + 0x2b0c ]
test edi edi
je r-xdata
pop edi
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov edx ecx
push esi
mov esi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp [ eax + 0x2ec4 ] 0x0
pop esi
je r-xdata
cmp [ eax + 0x2ecc ] 0x8000
jae r-xdata
push edx
push [ eax + 0x2b0c ]
push eax
call sub_10081b8
sub_10095e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x2e8
mov eax [ rw-data ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
mov [ ebp - 0x2e8 ] edi
mov [ ebp - 0x2e0 ] eax
xor esi esi
push 0x4
push edi
call sub_10085f3
mov [ ebp + esi - 0x1c ] al
inc esi
cmp esi 0x14
jl r-xdata
cmp [ edi + 0x2ebc ] 0x0
je r-xdata
push ebx
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x2d8 ]
push eax
push 0x8
lea eax [ ebp - 0x1c ]
push eax
push 0x14
push edi
call sub_1009a1f
xor esi esi
cmp [ ebp + 0x8 ] esi
jle r-xdata
xor eax eax
jmp r-xdata
xor eax eax
cmp [ edi + 0x2ebc ] eax
sete al
mov eax [ edi + 0x2eb0 ]
xor ecx ecx
shr eax 0x18
inc ecx
cmp eax 0x100
jae r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
call sub_10064de
leave
retn 0xc
mov [ edi + 0x2ebc ] ecx
xor ebx ebx
mov bx [ ebp + eax * 2 - 0x2d8 ]
jmp r-xdata
cmp bx 0x18
jae r-xdata
mov edx 0x800000
test bx bx
jge r-xdata
mov [ edi + 0x2ebc ] ecx
test bx bx
jl r-xdata
lea ebx [ eax + eax ]
cmp ebx 0x5e
jae r-xdata
lea ebx [ eax + eax + 0x1 ]
cmp ebx 0x5e
jae r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x11
jne r-xdata
cmp [ edi + 0x2ebc ] 0x0
jne r-xdata
xor ebx ebx
mov [ edi + 0x2ebc ] ecx
mov bx [ ebp + eax * 4 - 0xd8 ]
jmp r-xdata
mov bx [ ebp + eax * 4 - 0xd6 ]
jmp r-xdata
pop ebx
cmp bx 0x12
jne r-xdata
push 0x4
push edi
call sub_10085f3
movzx edx al
add edx 0x4
movsx eax bx
movzx eax [ ebp + eax - 0x1c ]
push eax
push edi
call sub_1008537
xor ecx ecx
inc ecx
jmp r-xdata
neg ebx
test [ edi + 0x2eb0 ] edx
movsx eax bx
je r-xdata
shr edx 0x1
test bx bx
jl r-xdata
cmp bx 0x13
jne r-xdata
push 0x5
push edi
call sub_10085f3
movzx edx al
add edx 0x14
jmp r-xdata
test edx edx
jle r-xdata
mov edx [ ebp + 0x8 ]
sub edx esi
cmp [ edi + 0x2ebc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ esi + eax ]
movsx ecx bx
sub eax ecx
add eax 0x11
cdq
push 0x11
pop ecx
idiv ecx
mov eax [ ebp - 0x2e0 ]
mov [ eax + esi ] dl
push ecx
push edi
call sub_10085f3
movzx ebx al
add ebx 0x4
lea eax [ ebx + esi ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
lea eax [ edx + esi ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
dec esi
jmp r-xdata
mov eax [ ebp - 0x2e0 ]
mov ecx edx
mov ebx ecx
shr ecx 0x2
lea edi [ eax + esi ]
xor eax eax
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov edi [ ebp - 0x2e8 ]
add esi edx
mov eax [ edi + 0x2eb0 ]
xor ecx ecx
shr eax 0x18
inc ecx
cmp eax 0x100
jae r-xdata
mov ebx [ ebp + 0x8 ]
sub ebx esi
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
and [ ebp - 0x2dc ] 0x0
mov [ edi + 0x2ebc ] ecx
mov ax [ ebp + eax * 2 - 0x2d8 ]
mov [ ebp - 0x2dc ] ax
jmp r-xdata
cmp [ ebp - 0x2dc ] 0x18
jae r-xdata
mov [ ebp - 0x2e4 ] 0x800000
cmp [ ebp - 0x2dc ] 0x0
jge r-xdata
mov [ edi + 0x2ebc ] ecx
cmp [ ebp - 0x2dc ] 0x0
jl r-xdata
lea edx [ eax + eax ]
cmp edx 0x5e
jae r-xdata
lea edx [ eax + eax + 0x1 ]
cmp edx 0x5e
jae r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ esi + eax ]
movsx ecx [ ebp - 0x2dc ]
sub eax ecx
add eax 0x11
push 0x11
cdq
pop ecx
idiv ecx
jmp r-xdata
cmp [ edi + 0x2ebc ] 0x0
jne r-xdata
and [ ebp - 0x2dc ] 0x0
mov [ edi + 0x2ebc ] ecx
mov ax [ ebp + eax * 4 - 0xd8 ]
mov ax [ ebp + eax * 4 - 0xd6 ]
jmp r-xdata
test ebx ebx
jg r-xdata
movsx eax [ ebp - 0x2dc ]
movzx eax [ ebp + eax - 0x1c ]
push eax
push edi
call sub_1008537
jmp r-xdata
mov eax [ ebp - 0x2e4 ]
neg [ ebp - 0x2dc ]
test [ edi + 0x2eb0 ] eax
movsx eax [ ebp - 0x2dc ]
je r-xdata
shr [ ebp - 0x2e4 ] 0x1
cmp [ ebp - 0x2dc ] 0x0
jl r-xdata
mov [ ebp - 0x2dc ] ax
jmp r-xdata
dec ebx
cmp esi [ ebp + 0x8 ]
jge r-xdata
jmp r-xdata
cmp [ edi + 0x2ebc ] 0x0
jne r-xdata
mov eax [ ebp - 0x2e0 ]
mov [ eax + esi ] dl
inc esi
sub_10098ff
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xa18 ]
push edi
lea eax [ esi + 0x2b14 ]
push eax
push 0x100
mov ecx esi
call sub_10095e5
test eax eax
jne r-xdata
lea eax [ esi + 0xb18 ]
push eax
lea eax [ esi + 0x2c14 ]
push eax
movzx eax [ esi + 0x2eb5 ]
shl eax 0x3
push eax
mov ecx esi
call sub_10095e5
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ esi + 0x2eb5 ]
lea ecx [ ecx * 8 + 0x100 ]
mov eax 0x2a0
cmp ecx eax
jge r-xdata
pop edi
pop esi
pop ebp
retn 0x4
lea ecx [ esi + 0xe3c ]
push ecx
lea ecx [ esi + 0x18 ]
push ecx
push 0xa
push edi
push eax
push esi
call sub_1009a1f
test eax eax
je r-xdata
mov eax ecx
push ebx
lea ebx [ esi + 0xcb8 ]
push ebx
lea eax [ esi + 0x2db4 ]
push eax
mov edi 0xf9
push edi
mov ecx esi
call sub_10095e5
test eax eax
je r-xdata
pop ebx
lea eax [ esi + 0x233c ]
push eax
lea eax [ esi + 0x818 ]
push eax
push 0x8
push ebx
push edi
push esi
call sub_1009a1f
neg eax
sbb eax eax
neg eax
sub_10099ce
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
lea edi [ esi + 0xe34 ]
push 0x3
push esi
call sub_10085f3
mov [ edi + ebx ] al
inc ebx
cmp ebx 0x8
jl r-xdata
cmp [ esi + 0x2ebc ] 0x0
je r-xdata
lea eax [ esi + 0xdb4 ]
push eax
push edi
push esi
call sub_1009c30
neg eax
sbb eax eax
neg eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_1009a1f
mov edi edi
push ebp
mov ebp esp
sub esp 0xa0
push esi
push edi
push 0x10
xor eax eax
pop ecx
lea edi [ ebp - 0x9c ]
[ edi ]
xor esi esi
xor ecx ecx
cmp [ ebp + 0xc ] esi
jbe r-xdata
xor edx edx
inc edx
mov [ ebp - 0x58 ] esi
mov eax edx
mov eax [ ebp + 0x10 ]
movzx eax [ ecx + eax ]
lea eax [ ebp + eax * 4 - 0xa0 ]
inc [ eax ]
inc ecx
cmp ecx [ ebp + 0xc ]
jb r-xdata
mov edi [ ebp + eax * 4 - 0xa0 ]
push 0x10
pop ecx
sub ecx eax
shl edi cl
add edi [ ebp + eax * 4 - 0x5c ]
inc eax
cmp eax 0x10
mov [ ebp + eax * 4 - 0x5c ] edi
jbe r-xdata
cmp [ ebp - 0x18 ] 0x10000
je r-xdata
movzx esi [ ebp + 0x14 ]
push ebx
mov bl 0x10
sub bl [ ebp + 0x14 ]
cmp esi edx
mov eax edx
mov [ ebp - 0x10 ] esi
jb r-xdata
cmp [ ebp - 0x18 ] esi
jne r-xdata
push 0x10
pop ecx
sub ecx eax
lea edi [ esi - 0x1 ]
xor eax eax
jmp r-xdata
mov cl [ ebp + 0x14 ]
mov edi [ ebp + 0x18 ]
mov eax edx
shl eax cl
shl eax 0x1
mov ecx eax
mov esi ecx
shr ecx 0x2
xor eax eax
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
mov eax edx
jmp r-xdata
xor edx edx
inc edx
shl edx cl
inc eax
dec ecx
cmp eax 0x10
mov [ ebp + eax * 4 - 0xa4 ] edx
jbe r-xdata
mov edx [ ebp + esi * 4 - 0x58 ]
movzx ecx bl
mov ebx [ ebp + 0x18 ]
shr edx cl
mov [ ebp - 0x14 ] ecx
cmp edx 0x10000
je r-xdata
movzx ecx bl
lea edx [ ebp + eax * 4 - 0x5c ]
shr [ edx ] cl
xor edx edx
inc edx
mov ecx edi
shl edx cl
inc eax
dec edi
cmp eax esi
mov [ ebp + eax * 4 - 0xa4 ] edx
jbe r-xdata
cmp eax 0x10
ja r-xdata
pop edi
pop esi
leave
retn 0x18
mov ecx [ ebp + 0xc ]
xor eax eax
test ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
jle r-xdata
xor eax eax
inc eax
mov ecx esi
shl eax cl
lea edi [ ebx + edx * 2 ]
sub eax edx
shl eax 0x1
mov ecx eax
mov edx ecx
shr ecx 0x2
xor eax eax
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
xor eax eax
inc eax
mov ecx [ ebp + 0x10 ]
mov al [ eax + ecx ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
inc eax
cmp eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jl r-xdata
movzx ecx al
shl ecx 0x2
mov edx [ ebp + ecx - 0xa0 ]
lea esi [ ebp + ecx - 0x5c ]
mov edi [ esi ]
add edx edi
cmp al [ ebp + 0x14 ]
ja r-xdata
mov ecx [ ebp - 0x14 ]
sub al [ ebp + 0x14 ]
mov [ esi ] edx
mov edx edi
shr edx cl
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x1 ] al
shl edi cl
lea edx [ ebx + edx * 2 ]
mov ecx [ ebp - 0x10 ]
xor eax eax
inc eax
shl eax cl
cmp edx eax
ja r-xdata
movsx eax [ edx ]
shl eax 0x2
sub ecx eax
cmp di si
jge r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x2
mov [ eax + ecx + 0x2 ] si
mov [ eax + ecx ] si
mov eax [ ebp - 0x8 ]
neg eax
inc [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
jmp r-xdata
cmp edi edx
jae r-xdata
shl edi 0x1
dec [ ebp - 0x1 ]
mov edx ecx
jne r-xdata
inc ecx
inc ecx
pop ebx
mov [ esi ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
lea ebx [ ebx + edi * 2 ]
mov ecx edx
sub ecx edi
mov edi ebx
mov bx ax
shl ebx 0x10
mov bx ax
shr ecx 0x1
mov eax ebx
mov ebx [ ebp + 0x18 ]
[ edi ]
adc ecx ecx
[ edi ]
mov ecx [ ebp + 0x1c ]
xor esi esi
cmp [ edx ] si
jne r-xdata
mov ax [ ebp - 0xc ]
mov [ edx ] ax
sub_1009c30
mov edi edi
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x8
pop edx
mov [ ebp - 0x4 ] eax
mov ecx edx
xor eax eax
lea edi [ ebp - 0x4a ]
[ edi ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov ecx ebx
movzx eax [ ecx ]
lea eax [ ebp + eax * 2 - 0x4c ]
inc [ eax ]
inc ecx
dec edx
jne r-xdata
push 0xf
pop ecx
xor eax eax
push 0x10
mov [ ebp - 0x26 ] ax
pop edx
mov di [ ebp + eax - 0x4a ]
shl di cl
add di [ ebp + eax - 0x26 ]
dec ecx
mov [ ebp + eax - 0x24 ] di
inc eax
inc eax
dec edx
jne r-xdata
xor eax eax
cmp [ ebp - 0x6 ] ax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x6
pop ecx
push 0x7
pop edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
call sub_10064de
leave
retn 0xc
shr [ ebp + eax - 0x26 ] 0x9
xor edi edi
inc edi
shl edi cl
dec ecx
inc eax
inc eax
dec edx
mov [ ebp + eax - 0x4c ] di
jne r-xdata
push 0x8
pop ecx
push 0x9
lea eax [ ebp - 0x3c ]
pop edx
xor edi edi
inc edi
shl edi cl
dec ecx
mov [ eax ] di
inc eax
inc eax
dec edx
jne r-xdata
push 0x20
xor eax eax
pop ecx
mov edi esi
[ edi ]
mov [ ebp - 0x4d ] al
inc [ ebp - 0x4d ]
cmp [ ebp - 0x4d ] 0x8
jb r-xdata
movzx eax al
shl eax 0x1
lea ecx [ ebp + eax - 0x28 ]
mov dx [ ecx ]
xor esi esi
mov si [ ebp + eax - 0x4c ]
add si dx
cmp si 0x80
mov [ ebp - 0x5c ] ecx
ja r-xdata
movzx eax [ ebp - 0x4d ]
mov al [ eax + ebx ]
test al al
je r-xdata
xor eax eax
inc eax
cmp dx si
jae r-xdata
mov [ ecx ] si
mov eax esi
sub eax edx
movzx ecx ax
mov al [ ebp - 0x4d ]
mov bl al
mov bh bl
movzx edi dx
add edi [ ebp - 0x58 ]
mov edx ecx
shr ecx 0x2
mov eax ebx
shl eax 0x10
mov ax bx
mov ebx [ ebp - 0x54 ]
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ ebp - 0x5c ]
sub_10019a7
xor eax eax
push eax
push 0x40
push eax
push r-xdata
push 0x521
push eax
call sub_1003ebe
retn
sub_1001fd9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_1001f93
xor ecx ecx
cmp [ ebp + 0x8 ] eax
setne cl
mov eax ecx
pop ebp
retn 0x8
sub_10026c0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7fffffff
jbe r-xdata
pop ebp
jmp sub_10021e6
mov eax 0x80070057
pop ebp
retn 0xc
sub_1003255
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test ax ax
jne r-xdata
and eax 0x27
mov eax 0x80
jmp r-xdata
pop ebp
retn 0x4
sub_1003275
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x0
call [ GlobalAlloc@IAT ]
pop ebp
retn
sub_100328c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GlobalFree@IAT ]
pop ebp
retn
_start
call sub_100646b
jmp sub_10063e0
sub_10064de
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_10064f9
test ecx 0xffff0000
jne r-xdata
retn
sub_1007d16
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
pop ebp
retn 0xc
sub_1007f18
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_100809d
sub_10081a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and [ eax + 0x2ec8 ] 0x0
pop ebp
retn 0x4
sub_1008527
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10084cc
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
