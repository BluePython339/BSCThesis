sub_401000
sub esp 0x1e4
push ebx
push ebp
push esi
push edi
mov ecx 0xa
xor eax eax
lea edi [ esp + 0x3c ]
xor ebp ebp
[ edi ]
mov ecx 0xa
lea edi [ esp + 0x14 ]
[ edi ]
lea eax [ esp + 0x64 ]
mov [ esp + 0x10 ] ebp
push eax
push 0x101
xor ebx ebx
call [ WSAStartup@IAT ]
push r-xdata
push 0x2
call signal
mov edi [ esp + 0x200 ]
mov esi [ esp + 0x204 ]
add esp 0x8
cmp edi 0x2
jle r-xdata
mov edi [ esp + 0x10 ]
mov eax edi
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
push rw-data
push ecx
call _stricmp
add esp 0x8
test eax eax
jne r-xdata
push ebp
push ebx
call sub_401200
add esp 0x8
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
push rw-data
push ecx
call _stricmp
add esp 0x8
test eax eax
jne r-xdata
cmp edi 0x4
jl r-xdata
call sub_4019e0
lea ecx [ esp + 0x14 ]
push ebp
push ecx
push ebx
call sub_401380
add esp 0xc
jmp r-xdata
dec eax
je r-xdata
mov eax [ esi + 0x4 ]
push rw-data
push eax
call _stricmp
add esp 0x8
test eax eax
jne r-xdata
cmp edi 0x5
jl r-xdata
mov edx [ esi + 0x8 ]
push edx
call atoi
mov ebx eax
mov eax [ esi + 0xc ]
push eax
call atoi
add esp 0x8
mov ebp eax
mov [ esp + 0x10 ] 0x1
jmp r-xdata
lea edx [ esp + 0x14 ]
push ebp
push edx
lea eax [ esp + 0x44 ]
push ebx
push eax
call sub_401580
add esp 0x10
jmp r-xdata
mov ecx [ esi ]
push ecx
call sub_4011b0
add esp 0x4
test edi edi
je r-xdata
cmp edi 0x6
jl r-xdata
mov edx [ esi + 0x8 ]
push edx
call atoi
mov ebx eax
mov eax [ esi + 0xc ]
push 0x28
lea ecx [ esp + 0x1c ]
push eax
push ecx
call strncpy
mov edx [ esi + 0x10 ]
push edx
call atoi
add esp 0x14
mov ebp eax
mov [ esp + 0x10 ] 0x2
jmp r-xdata
call [ WSACleanup@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1e4
retn
mov ecx [ esi + 0x8 ]
push 0x28
lea edx [ esp + 0x40 ]
push ecx
push edx
call strncpy
mov eax [ esi + 0xc ]
push eax
call atoi
mov ecx [ esi + 0x10 ]
push 0x28
lea edx [ esp + 0x28 ]
push ecx
push edx
mov ebx eax
call strncpy
mov eax [ esi + 0x14 ]
push eax
call atoi
add esp 0x20
mov ebp eax
mov [ esp + 0x10 ] 0x3
sub_4011b0
push rw-data
call printf
mov eax [ esp + 0x8 ]
push eax
push rw-data
call printf
push rw-data
call printf
push rw-data
call printf
push rw-data
call printf
push rw-data
call printf
add esp 0x1c
retn
sub_401200
sub esp 0x40
push ebp
push esi
push edi
call sub_401a20
mov esi eax
test esi esi
mov [ esp + 0x18 ] esi
je r-xdata
pop edi
pop esi
pop ebp
add esp 0x40
retn
call sub_401a20
mov ebp eax
test ebp ebp
mov [ esp + 0x14 ] ebp
je r-xdata
mov edi [ esp + 0x50 ]
push edi
push rw-data
call printf
push edi
push esi
call sub_401a40
add esp 0x10
test eax eax
jne r-xdata
push ebx
push rw-data
call printf
mov ebx [ esp + 0x5c ]
push ebx
push rw-data
call printf
push ebx
push ebp
call sub_401a40
add esp 0x14
test eax eax
jne r-xdata
push esi
call [ closesocket@IAT ]
push rw-data
call printf
mov ebp [ accept@IAT ]
mov eax 0x10
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
push ebp
call [ closesocket@IAT ]
pop ebx
pop edi
pop esi
pop ebp
add esp 0x40
retn
push edi
push rw-data
call printf
add esp 0x8
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x30 ]
push eax
push ecx
push esi
call ebp
mov edx [ esp + 0x34 ]
mov esi eax
push edx
call [ inet_ntoa@IAT ]
push eax
push edi
push rw-data
call printf
push ebx
push rw-data
call printf
mov edx [ esp + 0x2c ]
add esp 0x14
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x40 ]
push eax
push ecx
push edx
call ebp
mov edi eax
mov eax [ esp + 0x44 ]
push eax
call [ inet_ntoa@IAT ]
push eax
push ebx
push rw-data
call printf
push rw-data
call printf
lea ecx [ esp + 0x30 ]
mov [ esp + 0x30 ] esi
push ecx
push 0x0
push sub_401760
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] esi
call _beginthread
lea edx [ esp + 0x44 ]
push edx
push 0x0
push sub_401760
call _beginthread
add esp 0x28
push 0x3e8
call [ Sleep@IAT ]
push rw-data
call printf
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x58 ]
add esp 0x4
jmp r-xdata
sub_401380
sub esp 0x428
push esi
mov esi [ esp + 0x430 ]
cmp esi 0xffff
push edi
jg r-xdata
push rw-data
call printf
add esp 0x4
cmp esi 0x1
jl r-xdata
mov eax [ esp + 0x43c ]
cmp eax 0xffff
jg r-xdata
push rw-data
call printf
add esp 0x4
pop edi
pop esi
add esp 0x428
retn
cmp eax 0x1
jl r-xdata
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x30 ]
[ edi ]
call sub_401a20
mov edi eax
cmp edi 0xffffffff
mov [ esp + 0x8 ] edi
je r-xdata
pop edi
pop esi
add esp 0x428
retn
push ebx
push ebp
push esi
push edi
call sub_401a40
add esp 0x8
test eax eax
jne r-xdata
mov ebp [ closesocket@IAT ]
mov [ esp + 0x14 ] 0x10
push edi
call [ closesocket@IAT ]
pop ebp
pop ebx
pop edi
pop esi
add esp 0x428
retn
mov ecx [ esp + 0x444 ]
mov edi [ esp + 0x440 ]
push ecx
push edi
push rw-data
call printf
mov edx [ esp + 0x450 ]
push edx
push edi
push esi
call sub_401af0
add esp 0x18
test eax eax
jne r-xdata
push ebx
call ebp
jmp r-xdata
push rw-data
call printf
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] ebx
push eax
push 0x0
push sub_401760
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] ebx
call _beginthread
lea ecx [ esp + 0x30 ]
push ecx
push 0x0
push sub_401760
call _beginthread
add esp 0x1c
push 0x3e8
call [ Sleep@IAT ]
push rw-data
call printf
mov edi [ esp + 0x14 ]
add esp 0x4
jmp r-xdata
push esi
call ebp
mov eax [ esp + 0x444 ]
lea ecx [ esp + 0x38 ]
push eax
push edi
push rw-data
push ecx
call sprintf
lea edi [ esp + 0x48 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
dec ecx
push 0x0
lea edx [ esp + 0x3c ]
push ecx
push edx
push ebx
call [ send@IAT ]
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x38 ]
push ebx
[ edi ]
call ebp
mov edi [ esp + 0x10 ]
jmp r-xdata
push rw-data
call printf
add esp 0x4
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x28 ]
push eax
push ecx
push edi
call [ accept@IAT ]
mov edx [ esp + 0x2a ]
mov ebx eax
push edx
call [ ntohs@IAT ]
and eax 0xffff
push eax
mov eax [ esp + 0x30 ]
push eax
call [ inet_ntoa@IAT ]
push eax
push rw-data
call printf
add esp 0xc
call sub_401a20
mov esi eax
test esi esi
jne r-xdata
sub_401580
mov eax 0x5114
call sub_401be0
push ebx
push ebp
mov ebp [ esp + 0x512c ]
push esi
push edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5114
retn
call sub_401a20
mov ebx eax
test ebx ebx
je r-xdata
mov edi [ esp + 0x512c ]
mov eax [ esp + 0x5128 ]
push edi
push eax
push rw-data
call printf
mov ecx [ esp + 0x5134 ]
push edi
push ecx
push esi
call sub_401af0
add esp 0x18
test eax eax
jne r-xdata
mov ecx 0x1400
xor eax eax
lea edi [ esp + 0x124 ]
[ edi ]
lea edi [ esi + 0x1 ]
push esi
mov esi [ closesocket@IAT ]
call esi
push ebx
call esi
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
push esi
call __WSAFDIsSet
test eax eax
jne r-xdata
call _errno
cmp [ eax ] 0x2714
jne r-xdata
call sub_401a20
mov esi eax
test esi esi
je r-xdata
push 0x0
lea ecx [ esp + 0x128 ]
push 0x5000
push ecx
push esi
call [ recv@IAT ]
mov edi eax
test edi edi
jg r-xdata
push 0x5
call [ Sleep@IAT ]
jmp r-xdata
push rw-data
call printf
add esp 0x4
jmp r-xdata
jmp r-xdata
push rw-data
call printf
mov edx [ esp + 0x5134 ]
push ebp
push edx
push rw-data
call printf
mov eax [ esp + 0x5140 ]
push ebp
push eax
push ebx
call sub_401af0
add esp 0x1c
test eax eax
jne r-xdata
push 0x0
push 0x0
lea edx [ esp + 0x28 ]
push 0x0
push edx
push edi
mov [ esp + 0x38 ] esi
mov [ esp + 0x34 ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea ecx [ esp + 0x128 ]
push edi
push ecx
push ebx
call [ send@IAT ]
cmp eax 0xffffffff
jne r-xdata
push esi
call [ closesocket@IAT ]
push ebx
call [ closesocket@IAT ]
jmp r-xdata
mov ecx 0x1400
xor eax eax
lea edi [ esp + 0x124 ]
push rw-data
[ edi ]
call printf
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] esi
push edx
push 0x0
push sub_401760
mov [ esp + 0x2c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] esi
call _beginthread
lea eax [ esp + 0x20 ]
push eax
push 0x0
push sub_401760
call _beginthread
add esp 0x1c
push 0x3e8
call [ Sleep@IAT ]
push rw-data
call printf
add esp 0x4
jmp r-xdata
push rw-data
call printf
add esp 0x4
jmp r-xdata
sub_401760
mov eax 0xa218
call sub_401be0
mov eax [ esp + 0xa21c ]
push ebx
push ebp
push esi
mov ecx [ eax ]
mov ebp [ eax + 0x4 ]
push edi
xor ebx ebx
mov [ esp + 0x18 ] ecx
mov ecx 0x1400
xor eax eax
lea edi [ esp + 0x5228 ]
[ edi ]
mov ecx 0x1400
lea edi [ esp + 0x228 ]
[ edi ]
mov eax 0xbb8
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
je r-xdata
call _errno
cmp [ eax ] 0x4
jne r-xdata
push rw-data
mov esi [ esp + 0x18 ]
lea edx [ esp + 0x20 ]
push edx
push esi
call __WSAFDIsSet
test eax eax
je r-xdata
push rw-data
jmp r-xdata
test esi esi
push 0x5
call [ Sleep@IAT ]
jmp r-xdata
cmp ebx 0x5000
jge r-xdata
call printf
mov eax [ esp + 0x1c ]
mov esi [ closesocket@IAT ]
add esp 0x4
push eax
call esi
push ebp
call esi
push rw-data
call printf
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa218
retn
mov edx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
lea ecx [ esp + 0x28 ]
push 0x0
push ecx
push 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] 0x1
call [ select@IAT ]
mov esi eax
test esi esi
jge r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x124 ]
push eax
push 0x0
push ecx
push 0x0
push 0x0
mov [ esp + 0x13c ] ebp
mov [ esp + 0x138 ] 0x1
call [ select@IAT ]
mov esi eax
test esi esi
jge r-xdata
mov eax 0x5000
push 0x0
sub eax ebx
lea ecx [ esp + 0x522c ]
push eax
push ecx
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
je r-xdata
call _errno
cmp [ eax ] 0x4
jne r-xdata
push rw-data
jmp r-xdata
test eax eax
je r-xdata
lea edx [ esp + 0x124 ]
push edx
push ebp
call __WSAFDIsSet
test eax eax
je r-xdata
test esi esi
mov ecx eax
lea esi [ esp + 0x5228 ]
mov edx ecx
lea edi [ esp + ebx + 0x228 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
add ebx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx eax
xor eax eax
lea edi [ esp + 0x5228 ]
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
xor edi edi
test ebx ebx
jle r-xdata
mov ecx 0x1400
xor eax eax
lea edi [ esp + 0x228 ]
[ edi ]
push 0x0
lea eax [ esp + edi + 0x22c ]
push ebx
push eax
push ebp
call [ send@IAT ]
mov esi eax
test esi esi
je r-xdata
test ebx ebx
jle r-xdata
jge r-xdata
test edi edi
jle r-xdata
sub ebx esi
add edi esi
test ebx ebx
jg r-xdata
call _errno
cmp [ eax ] 0x4
jne r-xdata
mov ecx ebx
lea esi [ esp + edi + 0x228 ]
mov edx ecx
lea edi [ esp + 0x228 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
xor eax eax
and ecx 0x3
push 0x5
[ edi ] [ esi ]
mov ecx 0x5000
lea edi [ esp + ebx + 0x22c ]
sub ecx ebx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
call [ Sleep@IAT ]
jmp r-xdata
push rw-data
jmp r-xdata
call _errno
cmp [ eax ] 0x1c
je r-xdata
sub_4019e0
push esi
push edi
push rw-data
call printf
mov edi [ closesocket@IAT ]
add esp 0x4
mov esi 0x3
push esi
call edi
inc esi
cmp esi 0x100
jl r-xdata
push rw-data
call printf
add esp 0x4
pop edi
pop esi
retn
sub_401a40
sub esp 0x14
mov ecx [ esp + 0x1c ]
xor eax eax
mov [ esp + 0x4 ] eax
push esi
mov [ esp + 0xc ] eax
push ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x18 ] eax
call [ htons@IAT ]
push 0x0
mov [ esp + 0xe ] ax
mov [ esp + 0xc ] 0x2
call [ htonl@IAT ]
mov esi [ esp + 0x1c ]
lea edx [ esp + 0x4 ]
push 0x4
push edx
push 0x4
push 0xffff
push esi
mov [ esp + 0x20 ] eax
call [ setsockopt@IAT ]
lea eax [ esp + 0x8 ]
push 0x10
push eax
push esi
call [ bind@IAT ]
test eax eax
jge r-xdata
push 0x5
push esi
call [ listen@IAT ]
test eax eax
jge r-xdata
push rw-data
call printf
add esp 0x4
xor eax eax
pop esi
add esp 0x14
retn
mov eax 0x1
pop esi
add esp 0x14
retn
push rw-data
call printf
add esp 0x4
xor eax eax
pop esi
add esp 0x14
retn
sub_401af0
sub esp 0x10
push esi
push edi
mov edi [ esp + 0x20 ]
push edi
call [ gethostbyname@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov edx [ esp + 0x24 ]
xor ecx ecx
mov [ esp + 0x8 ] ecx
push edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] 0x2
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ecx
call [ htons@IAT ]
mov [ esp + 0xa ] ax
mov eax [ esi + 0xc ]
push 0x10
mov ecx [ eax ]
lea eax [ esp + 0xc ]
push eax
mov edx [ ecx ]
mov ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x18 ] edx
call [ connect@IAT ]
test eax eax
jge r-xdata
call _errno
mov eax [ eax ]
push eax
call strerror
push eax
push edi
push rw-data
call printf
add esp 0x10
xor eax eax
pop edi
pop esi
add esp 0x10
retn
pop edi
mov eax 0x1
pop esi
add esp 0x10
retn
push rw-data
call printf
add esp 0x4
xor eax eax
pop edi
pop esi
add esp 0x10
retn
sub_401be0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
push 0x1
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401d4d
cmp [ rw-data ] 0x0
jne r-xdata
call sub_401d38
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
call [ __p___initenv@IAT ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
call sub_401000
add esp 0x30
mov [ ebp - 0x24 ] eax
push eax
call [ exit@IAT ]
push sub_401d4a
call [ __setusermatherr@IAT ]
pop ecx
sub_4019c5
call printf
add esp 0x4
call sub_4019e0
push 0x0
call exit
sub_401a20
push 0x0
push 0x1
push 0x2
call [ socket@IAT ]
test eax eax
jge r-xdata
retn
push rw-data
call printf
add esp 0x4
xor eax eax
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
strncpy
jmp [ strncpy@IAT ]
atoi
jmp [ atoi@IAT ]
_stricmp
jmp [ _stricmp@IAT ]
signal
jmp [ signal@IAT ]
printf
jmp [ printf@IAT ]
_beginthread
jmp [ _beginthread@IAT ]
sprintf
jmp [ sprintf@IAT ]
_errno
jmp [ _errno@IAT ]
exit
jmp [ exit@IAT ]
strerror
jmp [ strerror@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401d38
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401d4a
xor eax eax
retn
sub_401d4d
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
