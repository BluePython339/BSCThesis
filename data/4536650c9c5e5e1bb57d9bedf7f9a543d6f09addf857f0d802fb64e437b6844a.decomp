sub_10001000
push ebx
push ebp
push esi
mov esi [ GetProcAddress@IAT ]
push edi
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x4 ] edi
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x8 ] edi
je r-xdata
xor eax eax
jmp r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xc ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x10 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x10 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x14 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x14 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x18 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x18 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x1c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x1c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x20 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x24 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x24 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x28 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x28 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x2c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x2c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x30 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x34 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x34 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x38 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x38 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x44 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x44 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x54 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x54 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x88 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x88 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x13c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x13c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x48 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x48 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x5c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x5c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x60 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x60 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x64 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x64 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x68 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x68 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x6c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x6c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x70 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x70 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x74 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x74 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x7c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x7c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x148 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x148 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x80 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x80 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x94 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x94 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x98 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x98 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x8c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x8c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x114 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x114 ] edi
je r-xdata
mov ebp [ LoadLibraryA@IAT ]
push rw-data
call ebp
cmp eax edi
mov [ rw-data ] eax
je r-xdata
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x9c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xa0 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xa4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xa4 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xa8 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xa8 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x134 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x134 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x138 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x138 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x168 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x168 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x16c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x16c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x170 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x170 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x174 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x174 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x178 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x178 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x17c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x17c ] edi
je r-xdata
push rw-data
call ebp
mov ebx eax
cmp ebx edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xc8 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc8 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xcc ] eax
mov eax [ rw-data ]
cmp [ eax + 0xcc ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xec ] eax
mov eax [ rw-data ]
cmp [ eax + 0xec ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xf0 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xf0 ] edi
je r-xdata
push rw-data
call ebp
cmp eax edi
mov [ rw-data ] eax
je r-xdata
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xfc ] eax
mov eax [ rw-data ]
cmp [ eax + 0xfc ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x100 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x100 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xdc ] eax
mov eax [ rw-data ]
cmp [ eax + 0xdc ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x14c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x14c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xe4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xe4 ] edi
je r-xdata
mov ebx rw-data
push ebx
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x160 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x160 ] edi
je r-xdata
push ebx
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x160 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x160 ] edi
je r-xdata
push rw-data
call ebp
mov ebx eax
cmp ebx edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx ] eax
mov eax [ rw-data ]
cmp [ eax ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xd0 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd0 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xd4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd4 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xd8 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd8 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x118 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x118 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x11c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x11c ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x120 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x120 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x124 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x124 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x128 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x128 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x12c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x12c ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x130 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x130 ] edi
je r-xdata
push rw-data
call ebp
mov ebx eax
cmp ebx edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xc4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc4 ] edi
je r-xdata
push rw-data
push ebx
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x164 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x164 ] edi
je r-xdata
push rw-data
push rw-data
call ebp
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x144 ] eax
mov ecx [ rw-data ]
xor eax eax
cmp [ ecx + 0x144 ] edi
setne al
sub_10001ae7
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
sub esp 0x21c
push ebx
push esi
push edi
mov [ ebp - 0x1c ] 0x54af97e1
movd mmx0 [ ebp - 0x1c ]
pslld mmx0 0x2
movd [ ebp - 0x1c ] mmx0
jmp r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10001000
test eax eax
jne r-xdata
and [ ebp - 0x228 ] 0x0
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x226 ]
[ edi ]
stosw [ edi ]
push 0x104
lea eax [ ebp - 0x228 ]
push eax
push [ rw-data ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
test eax eax
je r-xdata
push 0xffffffff
mov [ ebp - 0x22c ] 0x1
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax [ ebp - 0x22c ]
jmp r-xdata
push 0x1
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
push rw-data
mov eax [ rw-data ]
call [ eax + 0xc ]
call sub_10005acd
test eax eax
je r-xdata
lea eax [ ebp - 0x228 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x0
push 0x0
push 0x1
push 0x0
mov eax [ rw-data ]
call [ eax + 0x54 ]
mov [ rw-data ] eax
call sub_10002b58
call sub_10002b8f
call sub_10006275
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0xdc ]
test eax eax
je r-xdata
push 0xffffffff
mov [ ebp - 0x230 ] 0x1
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax [ ebp - 0x230 ]
jmp r-xdata
lea eax [ ebp - 0x228 ]
push eax
call [ SetCurrentDirectoryW@IAT ]
call sub_10004319
call sub_100042f9
call sub_10007304
mov [ ebp - 0x20 ] eax
push 0xffffffff
push 0x0
push 0x0
push 0x0
call sub_100073ae
push 0xffffffff
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x8 ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0xdc ]
test eax eax
je r-xdata
call sub_1000529d
call sub_10006247
call sub_10002b7a
call sub_10005d7f
push rw-data
mov eax [ rw-data ]
call [ eax + 0x4 ]
push 0xffffffff
and [ ebp - 0x234 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax [ ebp - 0x234 ]
jmp r-xdata
call sub_100052da
push 0xffffffff
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0x8 ]
ServiceMain
push ecx
push esi
push rw-data
call [ LoadLibraryA@IAT ]
xor esi esi
mov [ rw-data ] eax
push esi
push sub_100075ed
push rw-data
mov [ rw-data ] 0x30
mov [ rw-data ] 0x5
call [ RegisterServiceCtrlHandlerExW@IAT ]
cmp eax esi
mov [ rw-data ] eax
je r-xdata
pop esi
pop ecx
retn 0x8
push 0x3e8
push esi
push 0x2
call sub_1000763b
lea eax [ esp + 0x4 ]
push eax
mov eax [ rw-data ]
push esi
push esi
push sub_10001ae7
push esi
push esi
call [ eax + 0x78 ]
cmp eax esi
mov [ rw-data ] eax
je r-xdata
push esi
push esi
push 0x1
call sub_1000763b
push esi
push esi
push 0x4
call sub_1000763b
mov eax [ rw-data ]
push 0xffffffff
push [ rw-data ]
call [ eax + 0x8 ]
sub_10001db9
push ebp
mov ebp esp
sub esp 0x218
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x216 ]
mov [ ebp - 0x218 ] bx
[ edi ]
stosw [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x5a
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
sub eax ebx
mov [ ebp - 0xf ] 0x4f
mov [ ebp - 0xe ] 0xb8
mov [ ebp - 0xd ] 0x17
mov [ ebp - 0xc ] 0x4e
mov [ ebp - 0xb ] 0x68
mov [ ebp - 0x8 ] 0x29
mov [ ebp - 0x7 ] 0x67
mov [ ebp - 0x6 ] 0x7f
mov [ ebp - 0x5 ] 0x2d
mov [ ebp - 0x4 ] 0x5e
mov [ ebp - 0x3 ] 0x41
je r-xdata
call sub_10002b7a
call sub_10005d7f
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
push ebx
push [ rw-data ]
call [ rw-data ]
push 0x1
pop eax
lea eax [ ebp - 0x10 ]
mov esi rw-data
push eax
push ebx
push 0x843
push esi
call sub_10003453
lea eax [ ebp - 0x8 ]
push eax
push ebx
push 0x541
push rw-data
call sub_10003453
mov edi [ LoadLibraryA@IAT ]
push esi
call edi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push eax
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
push rw-data
push eax
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push rw-data
push [ rw-data ]
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push rw-data
push [ rw-data ]
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push rw-data
push [ rw-data ]
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push ebx
push ebx
push ebx
call [ rw-data ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x180
push 0x8
push eax
call [ rw-data ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x78 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x78 ] ebx
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x90 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x90 ] ebx
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x8 ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push rw-data
call edi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push rw-data
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xe8 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xe8 ] ebx
jne r-xdata
lea eax [ ebp - 0x218 ]
push 0x104
push eax
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push ebx
push ebx
push ebx
push sub_10001ae7
push ebx
push ebx
call [ eax + 0x78 ]
mov [ rw-data ] eax
jmp r-xdata
lea eax [ ebp - 0x218 ]
push rw-data
push eax
mov eax [ rw-data ]
call [ eax + 0xe8 ]
test eax eax
jne r-xdata
sub_10002037
push ebp
mov ebp esp
push ecx
sub [ ebp + 0x8 ] 0x4
push ebx
push esi
mov esi [ ebp + 0xc ]
and [ ebp + 0xc ] 0x0
push edi
mov eax [ esi ]
add esi 0x4
test eax eax
mov [ ebp - 0x4 ] eax
jbe r-xdata
xor eax eax
mov ebx [ esi ]
mov eax [ rw-data ]
add esi 0x4
push esi
call [ eax + 0x10 ]
push 0xfffffffb
mov edi eax
pop eax
sub eax edi
add [ ebp + 0x8 ] eax
js r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
push edi
push esi
push ebx
call sub_10005daf
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
inc [ ebp + 0xc ]
lea esi [ esi + edi + 0x1 ]
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
sub_1000209a
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor ebx ebx
mov eax [ esi ]
add esi 0x4
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
push esi
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0xc ] esi
call [ eax + 0x10 ]
mov edi [ ebp + 0x8 ]
push 0xfffffffb
pop ecx
sub ecx eax
add edi ecx
js r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov eax [ rw-data ]
push esi
call [ eax + 0x10 ]
lea esi [ esi + eax + 0x1 ]
mov eax [ esi ]
sub edi eax
mov [ ebp + 0x8 ] eax
sub edi 0x4
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0xf
xor eax eax
pop ecx
lea edi [ ebp - 0x46 ]
mov [ ebp - 0x48 ] bx
push 0x20
[ edi ]
stosw [ edi ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ rw-data ]
push 0xffffffff
push [ ebp + 0xc ]
push ebx
push ebx
call [ eax + 0x80 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
push ebx
push 0x6
push 0x2
push ebx
push ebx
lea eax [ ebp - 0x48 ]
push 0x40000000
push eax
mov eax [ rw-data ]
call [ eax + 0x20 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax rw-data
push eax
push ebx
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x1c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
mov eax [ rw-data ]
push [ ebp + 0x8 ]
add esi 0x4
push esi
push edi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push edi
call [ eax + 0x14 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_10005f84
jmp r-xdata
sub_1000219c
push ebp
mov ebp esp
sub esp 0x2c
and [ ebp - 0xc ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x8 ]
and [ ebp - 0x2c ] 0x0
push 0x7
stosd [ edi ]
stosd [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x2b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0xc ]
push eax
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_10002e88
test eax eax
jne r-xdata
pop edi
leave
retn 0xc
push esi
push 0x9
pop edi
inc edi
lea eax [ edi - 0x9 ]
cmp eax 0x5
jl r-xdata
test al al
jbe r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
call sub_10003134
movzx esi al
lea ecx [ esi + 0x1 ]
cmp ecx 0x20
ja r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_10002f13
xor eax eax
pop esi
lea eax [ ebp - 0x2c ]
push eax
push edi
push [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
call sub_100030d2
lea eax [ ebp - 0x2c ]
mov [ ebp + esi - 0x2c ] 0xa
and [ ebp + esi - 0x2b ] 0x0
push eax
mov eax [ rw-data ]
call [ eax + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x10 ]
call sub_100056b3
sub_1000224c
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push 0x8
mov [ ebp - 0x1 ] 0x31
call sub_10005daf
test eax eax
jne r-xdata
leave
retn 0xc
call sub_1000529d
sub_1000226e
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push 0x8
mov [ ebp - 0x1 ] 0x30
call sub_10005daf
test eax eax
jne r-xdata
leave
retn 0xc
call sub_100052da
sub_100022ec
push ebp
mov ebp esp
push esi
xor eax eax
push [ ebp + 0xc ]
mov eax [ rw-data ]
call [ eax + 0x98 ]
lea esi [ eax + eax + 0x2 ]
sub [ ebp + 0x8 ] esi
js r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
push [ ebp + 0xc ]
push esi
push 0x6
call sub_10002e08
add [ ebp + 0xc ] esi
jmp r-xdata
pop esi
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
sub_1000232b
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
mov [ ebp + 0xc ] edi
call [ eax + 0x98 ]
mov ecx [ ebp + 0x8 ]
inc eax
neg eax
lea esi [ ecx + eax * 2 ]
test esi esi
jl r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
push [ ebp + 0xc ]
mov ebx [ edi + eax * 2 + 0x2 ]
lea edi [ edi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_100056b3
sub esi ebx
sub esi 0x4
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
add edi 0x4
push ebx
push edi
push [ ebp + 0xc ]
call sub_10003a2a
sub_100023a2
push ebp
mov ebp esp
sub esp 0x400
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0xc ]
push esi
call [ eax + 0x98 ]
shl eax 0x1
push eax
push esi
push [ ebp + 0x10 ]
call sub_100056b3
mov eax [ rw-data ]
push esi
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
cmp [ ebp + 0x8 ] eax
jae r-xdata
push esi
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
test eax eax
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov eax [ rw-data ]
push esi
call [ eax + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x400 ] 0x0
push edi
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x3fe ]
push esi
[ edi ]
stosw [ edi ]
push rw-data
lea eax [ ebp - 0x400 ]
push 0x200
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x400 ]
push [ ebp + 0x10 ]
push eax
call sub_1000659b
pop edi
jmp r-xdata
pop esi
leave
retn 0xc
mov eax [ rw-data ]
call [ eax + 0x24 ]
xor eax eax
jmp r-xdata
sub_10002465
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
mov [ ebp + 0xc ] edi
call [ eax + 0x98 ]
mov ecx [ ebp + 0x8 ]
inc eax
neg eax
lea esi [ ecx + eax * 2 ]
test esi esi
jl r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
lea edi [ edi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
inc eax
neg eax
lea esi [ esi + eax * 2 ]
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ rw-data ]
push edi
call [ eax + 0x14c ]
mov ebx eax
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
lea edi [ edi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
sub esi eax
jns r-xdata
mov eax [ rw-data ]
push edi
call [ eax + 0x14c ]
push [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
call sub_10003a96
sub_10002509
cmp [ esp + 0x4 ] 0x0
push esi
push edi
jbe r-xdata
xor eax eax
mov esi [ esp + 0x10 ]
mov eax 0xeeeeeef4
jmp r-xdata
mov eax [ esi + 0x4 ]
add esi 0x4
add esi 0x4
lea ecx [ edi - 0x8 ]
push esi
push ecx
push eax
call sub_10002e08
cmp [ esp + 0xc ] 0x0
lea esi [ esi + edi - 0x8 ]
ja r-xdata
pop edi
pop esi
retn 0xc
mov edi [ esi ]
sub [ esp + 0xc ] edi
js r-xdata
sub_1000255b
push ebp
mov ebp esp
push ecx
push ecx
sub [ ebp + 0x8 ] 0x4
add [ ebp + 0xc ] 0x4
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
jge r-xdata
push ebx
lea eax [ ebp - 0x8 ]
push esi
push eax
push 0x40
mov esi [ GetProcAddress@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edi
push [ ebp + 0xc ]
push rw-data
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
push edi
push [ ebp + 0xc ]
push sub_1000254b
push edi
push edi
call [ eax + 0x78 ]
mov ebx eax
cmp ebx edi
je r-xdata
pop edi
leave
retn 0xc
mov eax [ rw-data ]
push 0xffffffff
push ebx
call [ eax + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
sub_100025f7
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call [ eax + 0x98 ]
mov ecx [ ebp + 0x8 ]
inc eax
neg eax
lea ebx [ ecx + eax * 2 ]
test ebx ebx
jge r-xdata
push esi
call sub_10006a78
mov [ ebp + 0xc ] eax
push esi
test eax eax
mov eax [ rw-data ]
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
call [ eax + 0x98 ]
shl eax 0x1
push eax
push esi
push [ ebp + 0x10 ]
call sub_100056b3
mov eax 0xeeeeeef1
call [ eax + 0x98 ]
lea edi [ esi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
inc eax
neg eax
lea esi [ ebx + eax * 2 ]
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
lea ebx [ edi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push ebx
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
sub esi eax
js r-xdata
mov eax [ rw-data ]
push ebx
call [ eax + 0x14c ]
push eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_10006b10
jmp r-xdata
sub_100026b3
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
call [ eax + 0x98 ]
mov ecx [ ebp + 0x8 ]
inc eax
neg eax
lea esi [ ecx + eax * 2 ]
test esi esi
jge r-xdata
push edi
call sub_10006a78
mov [ ebp + 0x8 ] eax
push edi
test eax eax
mov eax [ rw-data ]
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
call [ eax + 0x98 ]
shl eax 0x1
push eax
push edi
push [ ebp + 0x10 ]
call sub_100056b3
mov eax 0xeeeeeef1
call [ eax + 0x98 ]
lea edi [ edi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
inc eax
neg eax
lea esi [ esi + eax * 2 ]
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
lea ebx [ edi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push ebx
call [ eax + 0x98 ]
inc eax
neg eax
lea esi [ esi + eax * 2 ]
test esi esi
jl r-xdata
mov eax [ rw-data ]
push ebx
call [ eax + 0x98 ]
lea eax [ ebx + eax * 2 + 0x2 ]
mov [ ebp + 0xc ] eax
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
sub esi eax
js r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_10007025
jmp r-xdata
sub_10002797
push ebp
mov ebp esp
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call [ eax + 0x98 ]
mov ecx [ ebp + 0x8 ]
inc eax
neg eax
lea ebx [ ecx + eax * 2 ]
test ebx ebx
jge r-xdata
push esi
call sub_10006a78
mov [ ebp + 0xc ] eax
push esi
test eax eax
mov eax [ rw-data ]
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
call [ eax + 0x98 ]
shl eax 0x1
push eax
push esi
push [ ebp + 0x10 ]
call sub_100056b3
mov eax 0xeeeeeef1
call [ eax + 0x98 ]
lea edi [ esi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
inc eax
neg eax
lea esi [ ebx + eax * 2 ]
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
lea ebx [ edi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push ebx
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
sub esi eax
js r-xdata
push [ ebp + 0x10 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_100070e4
jmp r-xdata
sub_10002850
mov eax [ rw-data ]
push esi
mov esi [ esp + 0xc ]
push esi
call [ eax + 0x98 ]
shl eax 0x1
push eax
push esi
push [ esp + 0x18 ]
call sub_100056b3
mov eax [ rw-data ]
push esi
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
cmp [ esp + 0x8 ] eax
jae r-xdata
push 0x0
push esi
call sub_100064e7
mov eax 0xeeeeeef4
jmp r-xdata
pop esi
retn 0xc
sub_10002897
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
mov esi [ ebp + 0xc ]
push esi
call [ eax + 0x98 ]
shl eax 0x1
push eax
push esi
push [ ebp + 0x10 ]
call sub_100056b3
push 0x4
push rw-data
push [ ebp + 0x10 ]
call sub_100056b3
mov eax [ rw-data ]
push esi
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1000659b
mov eax 0xeeeeeef4
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_10002924
push ebp
mov ebp esp
sub esp 0x80
and [ ebp - 0x80 ] 0x0
push ebx
push esi
push edi
push 0x1f
xor eax eax
pop ecx
lea edi [ ebp - 0x7e ]
[ edi ]
push 0x2
stosw [ edi ]
pop ebx
lea eax [ ebp - 0x80 ]
push rw-data
push eax
mov eax [ rw-data ]
call [ eax + 0x2c ]
lea eax [ ebp - 0x80 ]
push 0x0
push eax
mov esi 0x80000001
push [ ebp + 0x10 ]
call sub_10006732
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ rw-data ]
mov ecx ebx
push ecx
push rw-data
lea ecx [ ebp - 0x80 ]
push 0x40
push ecx
inc ebx
lea edi [ eax + 0xf0 ]
call [ eax + 0x98 ]
lea eax [ ebp + eax * 2 - 0x90 ]
push eax
call [ edi ]
add esp 0x10
lea eax [ ebp - 0x80 ]
push 0x0
push eax
jmp r-xdata
push esi
push [ ebp + 0x10 ]
call sub_10006b10
test eax eax
jne r-xdata
sub_100029b1
push ebp
mov ebp esp
sub esp 0x190
mov eax [ rw-data ]
push ebx
mov ebx [ LoadLibraryA@IAT ]
push esi
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov esi [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x190 ]
push ecx
push 0x202
push rw-data
push eax
call esi
call eax
cmp [ rw-data ] edi
jne r-xdata
push rw-data
call ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xb8 ] edi
jne r-xdata
push rw-data
call ebx
mov [ rw-data ] eax
cmp [ eax + 0xbc ] edi
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xb8 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xb8 ] edi
je r-xdata
cmp [ eax + 0xc0 ] edi
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xbc ] eax
mov eax [ rw-data ]
cmp [ eax + 0xbc ] edi
je r-xdata
call [ eax + 0x24 ]
jmp r-xdata
cmp [ eax + 0xf4 ] edi
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xc0 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc0 ] edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp [ eax + 0xf8 ] edi
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xf4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xf4 ] edi
je r-xdata
cmp [ eax + 0x84 ] edi
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xf8 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xf8 ] edi
je r-xdata
push [ ebp + 0x10 ]
push edi
push edi
call sub_100057ee
push rw-data
mov edi eax
push [ rw-data ]
call esi
call eax
mov eax edi
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x84 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x84 ] edi
jne r-xdata
sub_10002b8f
push esi
xor esi esi
push esi
push sub_10002037
push esi
call sub_10002ce5
push esi
push sub_1000209a
push 0x1
call sub_10002ce5
push esi
push sub_1000218c
push 0x2
call sub_10002ce5
push esi
push sub_1000224c
push 0x3
call sub_10002ce5
push esi
push sub_1000226e
push 0x4
call sub_10002ce5
push esi
push sub_10002290
push 0x5
call sub_10002ce5
push esi
push sub_100022bc
push 0x6
call sub_10002ce5
push esi
push sub_1000232b
push 0x7
call sub_10002ce5
push esi
push sub_100023a2
push 0x8
call sub_10002ce5
push esi
push sub_100025f7
push 0x9
call sub_10002ce5
push esi
push sub_100026b3
push 0xa
call sub_10002ce5
push esi
push sub_10002797
push 0xb
call sub_10002ce5
push esi
push sub_10002844
push 0xc
call sub_10002ce5
push esi
push sub_10002850
push 0xd
call sub_10002ce5
push esi
push sub_100028ef
push 0xe
call sub_10002ce5
push esi
push sub_1000219c
push 0xf
call sub_10002ce5
push esi
push sub_10002907
push 0x11
call sub_10002ce5
push esi
push sub_10002924
push 0x12
call sub_10002ce5
push esi
push sub_10002465
push 0x13
call sub_10002ce5
push esi
push sub_100029b1
push 0x14
call sub_10002ce5
push esi
push sub_100022a6
push 0x16
call sub_10002ce5
push esi
push sub_10002897
push 0x10
call sub_10002ce5
push esi
push sub_10002913
push 0x15
call sub_10002ce5
push esi
push sub_100022ec
push 0x17
call sub_10002ce5
push esi
push sub_10002509
push 0x18
call sub_10002ce5
push esi
push sub_1000255b
push 0x19
call sub_10002ce5
pop esi
retn
sub_10002ce5
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x8 ]
push esi
je r-xdata
mov esi [ rw-data ]
inc [ rw-data ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
xor esi esi
test ecx ecx
jbe r-xdata
xor esi esi
test ecx ecx
jbe r-xdata
lea edx [ eax + 0x4 ]
cmp esi ecx
jne r-xdata
mov edx eax
mov eax 0xeeeeeef5
jmp r-xdata
inc esi
add edx 0x8
cmp esi ecx
jb r-xdata
mov ecx esi
push 0x1
shl ecx 0x3
mov [ ecx + eax + 0x4 ] ebx
mov edx [ rw-data ]
mov eax [ esp + 0x14 ]
mov [ ecx + edx ] eax
pop eax
lea ecx [ ecx * 8 + 0x8 ]
push ecx
push eax
mov eax [ rw-data ]
push 0x8
push [ rw-data ]
call [ eax + 0x30 ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
inc esi
add edx 0x8
cmp esi ecx
jb r-xdata
cmp [ edx ] 0x0
je r-xdata
pop esi
pop ebx
retn 0xc
cmp [ edx ] ebx
je r-xdata
inc [ rw-data ]
jmp r-xdata
jmp r-xdata
cmp [ edx + 0x4 ] 0x0
jne r-xdata
sub_10002d93
mov ecx [ rw-data ]
mov edx [ rw-data ]
xor eax eax
push esi
test ecx ecx
push edi
jbe r-xdata
pop edi
cmp eax ecx
pop esi
je r-xdata
lea esi [ edx + 0x4 ]
retn 0x4
shl eax 0x3
and [ eax + edx + 0x4 ] 0x0
mov ecx [ rw-data ]
and [ eax + ecx ] 0x0
inc eax
add esi 0x8
cmp eax ecx
jb r-xdata
mov edi [ esi ]
cmp edi [ esp + 0xc ]
je r-xdata
sub_10002dd5
mov edx [ rw-data ]
xor eax eax
push esi
push edi
test edx edx
jbe r-xdata
xor eax eax
mov esi [ rw-data ]
lea ecx [ esi + 0x4 ]
mov eax [ esi + eax * 8 ]
jmp r-xdata
inc eax
add ecx 0x8
cmp eax edx
jb r-xdata
pop edi
pop esi
retn 0x4
mov edi [ ecx ]
cmp edi [ esp + 0xc ]
je r-xdata
sub_10002e08
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push 0x1
pop esi
push [ ebp + 0x8 ]
call sub_10002dd5
test eax eax
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call eax
mov eax 0xeeeeeeef
xor esi esi
jmp r-xdata
push [ ebp + 0x8 ]
push eax
push [ ebp - 0x4 ]
call sub_1000573d
push eax
push [ ebp - 0x4 ]
call sub_100073ae
push [ ebp - 0x4 ]
call sub_1000575f
mov eax esi
pop esi
leave
retn 0xc
sub_10002e59
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x75df9115
je r-xdata
sub [ esp + 0x8 ] 0x8
mov ecx [ eax + 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
add eax 0x8
jmp r-xdata
retn 0x8
push eax
push [ esp + 0xc ]
push ecx
call sub_10002e08
sub_10002e88
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov eax [ rw-data ]
push esi
xor edi edi
push 0xf003f
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa4 ]
mov ecx [ esi ]
cmp ecx edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
lea eax [ ebp + 0x14 ]
mov [ ebp + 0x14 ] edi
push eax
mov eax [ rw-data ]
push edi
push edi
push edi
push [ ebp + 0x10 ]
push ecx
call [ eax + 0xa0 ]
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
push 0x8
push [ rw-data ]
call [ rw-data ]
cmp eax edi
mov [ esi + 0x4 ] eax
jne r-xdata
lea ecx [ ebp + 0x14 ]
push ecx
push eax
mov eax [ rw-data ]
push edi
push edi
push [ ebp + 0x10 ]
push [ esi ]
call [ eax + 0xa0 ]
cmp eax edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
xor eax eax
sub_10002f13
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
mov eax [ rw-data ]
call [ eax + 0xa8 ]
pop esi
retn 0x4
push esi
push 0x0
push [ rw-data ]
call [ rw-data ]
sub_10002f44
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
mov ebx [ ebp + 0x18 ]
movzx eax [ eax + ecx + 0x6 ]
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add eax ecx
mov [ ebp - 0xc ] eax
add eax 0x14
sub edi eax
mov [ ebp - 0x10 ] eax
lea eax [ edi + ebx ]
push eax
push 0x8
push [ rw-data ]
mov [ ebp + 0x18 ] eax
call [ rw-data ]
test eax eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx ecx
add eax 0x6
test edi edi
je r-xdata
mov eax 0xeeeeeef2
jmp r-xdata
movzx edi [ eax ]
add [ ebp - 0x4 ] edi
inc eax
dec edx
jne r-xdata
test ebx ebx
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov eax [ rw-data ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call [ eax + 0xcc ]
add esp 0xc
mov eax [ esi + 0x4 ]
push eax
add eax 0x14
push [ ebp - 0xc ]
push edi
push eax
call sub_10003453
mov eax [ esi + 0x4 ]
push edi
add eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
add eax ebx
push eax
mov eax [ rw-data ]
call [ eax + 0xcc ]
add esp 0xc
mov eax [ esi + 0x4 ]
mov edi [ ebp - 0x4 ]
push ebx
push [ ebp + 0x8 ]
lea eax [ eax + edi + 0x14 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xcc ]
mov eax [ esi + 0x4 ]
add esp 0xc
push eax
push edi
push ebx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + ecx + 0x6 ] bl
sub ebx [ ebp - 0x8 ]
add [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
mov eax [ rw-data ]
push [ esi + 0x4 ]
push 0x8
push [ rw-data ]
call [ eax + 0x30 ]
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
push [ ebp + 0x18 ]
mov edi [ ebp - 0x4 ]
push [ ebp + 0x8 ]
lea eax [ eax + edi + 0x14 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xcc ]
mov eax [ esi + 0x4 ]
add esp 0xc
push eax
push edi
push [ ebp + 0x18 ]
jmp r-xdata
push [ ebp + 0x8 ]
push eax
push [ rw-data ]
call [ rw-data ]
jmp r-xdata
add eax 0x14
push eax
call sub_10003453
push [ esi + 0x8 ]
mov eax [ rw-data ]
push [ esi + 0x4 ]
push 0x3
push 0x0
push [ ebp + 0xc ]
push [ esi ]
call [ eax + 0x9c ]
push [ ebp + 0x8 ]
mov esi eax
push 0x0
push [ rw-data ]
call [ rw-data ]
mov eax esi
sub_100030d2
mov ecx [ esp + 0xc ]
push ebx
xor ebx ebx
push esi
mov esi [ esp + 0xc ]
push edi
test ecx ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
movzx edi [ eax + ecx + 0x6 ]
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
mov edx ecx
add eax 0x6
xor eax eax
push eax
push ebx
add eax 0x14
push edi
push eax
call sub_10003453
mov eax [ esi + 0x4 ]
push edi
lea eax [ eax + ebx + 0x14 ]
push eax
mov eax [ rw-data ]
push [ esp + 0x24 ]
call [ eax + 0xcc ]
add esp 0xc
push 0x1
pop eax
jmp r-xdata
movzx edi [ eax ]
add ebx edi
inc eax
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x10
sub_1000315e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
xor esi esi
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
or [ ebp - 0x3c ] 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x28 ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x4 ] esi
push esi
push 0x6
push 0x4
push esi
push esi
push 0x80000000
push [ ebp + 0x10 ]
mov eax [ rw-data ]
call [ eax + 0x20 ]
mov [ ebp - 0x3c ] eax
cmp eax 0xffffffff
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_100033f7
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0x38 ]
mov [ ebp - 0x2c ] eax
push 0xf0000000
push 0x1
mov ebx rw-data
push ebx
push esi
lea eax [ ebp - 0x44 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x17c ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push esi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x44 ]
mov eax [ rw-data ]
call [ eax + 0x178 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov [ ebp - 0x20 ] eax
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x1
push 0x6603
push [ ebp - 0x44 ]
mov eax [ rw-data ]
call [ eax + 0x174 ]
test eax eax
je r-xdata
push 0xf0000008
push 0x1
push ebx
push esi
lea eax [ ebp - 0x44 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x17c ]
test eax eax
je r-xdata
mov [ ebp - 0x60 ] esi
lea eax [ ebp - 0x60 ]
push eax
push esi
push esi
push 0x1
push [ ebp - 0x30 ]
push [ ebp - 0x28 ]
mov eax [ rw-data ]
call [ eax + 0x170 ]
test eax eax
je r-xdata
mov [ ebp - 0x64 ] esi
push 0x4
pop ebx
mov [ ebp - 0x5c ] ebx
push esi
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x64 ]
push eax
push 0x8
push [ ebp - 0x28 ]
mov eax [ rw-data ]
call [ eax + 0x16c ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x64 ]
shr ecx 0x3
mov [ ebp - 0x64 ] ecx
mov edi [ ebp - 0x2c ]
mov eax edi
and eax 0x3ff
mov [ ebp - 0x50 ] eax
push 0x0
pop eax
setne al
mov edx edi
shr edx 0xa
lea eax [ eax + edx - 0x1 ]
mov [ ebp - 0x4c ] eax
mov eax edi
xor edx edx
div ecx
cmp edx esi
je r-xdata
mov [ ebp - 0x5c ] ecx
mov eax [ ebp - 0x60 ]
add ecx eax
lea eax [ ecx + edi + 0x4 ]
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov edi eax
mov [ ebp - 0x40 ] edi
cmp edi esi
je r-xdata
sub ecx edx
mov [ ebp - 0x54 ] ebx
lea eax [ ebp - 0x60 ]
push eax
lea eax [ edi + 0x4 ]
push eax
push esi
push 0x1
push [ ebp - 0x30 ]
push [ ebp - 0x28 ]
mov eax [ rw-data ]
call [ eax + 0x170 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x60 ]
mov [ edi ] eax
mov eax [ ebp - 0x60 ]
lea ebx [ eax + 0x4 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x48 ] esi
push esi
lea eax [ ebp - 0x48 ]
push eax
push [ ebp - 0x2c ]
lea eax [ ebx + edi ]
push eax
push [ ebp - 0x3c ]
mov eax [ rw-data ]
call [ eax + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x58 ] esi
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edi
add eax ebx
mov [ ebp - 0x24 ] eax
jne r-xdata
mov eax 0x400
mov eax [ ebp - 0x50 ]
cmp eax esi
jne r-xdata
mov eax [ ebp - 0x48 ]
add eax [ ebp - 0x68 ]
mov [ ebp - 0x48 ] eax
inc [ ebp - 0x58 ]
jmp r-xdata
mov [ ebp - 0x68 ] eax
mov edx [ ebp - 0x5c ]
add eax edx
mov [ ebp - 0x64 ] eax
push eax
lea eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x58 ]
shl eax 0xa
add eax ebx
add eax edi
push eax
push esi
xor eax eax
cmp [ ebp - 0x58 ] ecx
sete al
push eax
push esi
push [ ebp - 0x28 ]
mov eax [ rw-data ]
call [ eax + 0x168 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] ecx
ja r-xdata
sub_100033f7
cmp [ ebp - 0x24 ] esi
jne r-xdata
cmp [ ebp - 0x28 ] esi
je r-xdata
push edi
call sub_1000575f
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
cmp [ ebp - 0x30 ] esi
je r-xdata
push [ ebp - 0x28 ]
mov eax [ rw-data ]
call [ eax + 0x138 ]
cmp [ ebp - 0x44 ] esi
je r-xdata
push [ ebp - 0x30 ]
mov eax [ rw-data ]
call [ eax + 0x138 ]
cmp [ ebp - 0x3c ] 0xffffffff
je r-xdata
push esi
push [ ebp - 0x44 ]
mov eax [ rw-data ]
call [ eax + 0x134 ]
retn
push [ ebp - 0x3c ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
sub_10003453
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
push 0x6
mov eax ecx
pop esi
xor edx edx
mov edi esi
div edi
xor edx edx
mov ebx eax
mov eax [ ebp + 0xc ]
add eax ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x10 ] ebx
div edi
cmp ebx eax
mov [ ebp - 0x1c ] eax
jae r-xdata
mov eax [ ebp + 0x10 ]
xor edx edx
mov edi esi
mov ecx ebx
div edi
sub ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
neg ecx
sbb ecx ecx
not ecx
and ecx edx
xor edx edx
div esi
mov [ ebp - 0x4 ] ecx
cmp ecx edx
mov [ ebp - 0x20 ] edx
jae r-xdata
mov eax ecx
xor edx edx
mov ecx esi
div ecx
lea eax [ ebx + ebx * 2 ]
lea eax [ eax + eax - 0x2 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] edx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov al bl
mov dl 0x6
imul dl
mov edx [ ebp + 0x8 ]
mov [ ebp + 0xf ] al
lea eax [ ebx + ebx * 2 ]
lea esi [ ecx + 0x2 ]
shl eax 0x1
mov [ ebp + 0x10 ] eax
lea edx [ eax + edx - 0x2 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
add [ ebp - 0x8 ] esi
inc ebx
cmp ebx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ebx
jb r-xdata
mov al bl
mov dl 0x6
imul dl
mov edx [ ebp - 0x8 ]
mov [ ebp + 0xf ] al
mov eax [ ebp + 0x8 ]
lea esi [ ecx + 0x2 ]
add edx eax
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
lea eax [ esi + eax - 0x2 ]
push 0x6
movzx ebx [ esi + edx - 0x2 ]
imul ebx eax
lea eax [ esi - 0x1 ]
xor edx edx
pop edi
div edi
mov eax [ ebp + 0x14 ]
shr ebx 0x7
xor bl [ edx + eax ]
lea eax [ esi + 0x1 ]
xor edx edx
div edi
mov al [ ebp + 0xf ]
add al cl
mov ecx [ ebp + 0x14 ]
mov cl [ edx + ecx ]
xor edx edx
xor cl al
mov eax esi
div edi
mov eax [ ebp + 0x14 ]
and cl [ edx + eax ]
mov eax [ ebp - 0xc ]
add bl cl
mov ecx [ ebp - 0x4 ]
xor [ esi + eax ] bl
inc ecx
inc esi
cmp ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ecx
jb r-xdata
mov ecx ebx
sub ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
not ecx
and ecx [ ebp - 0x18 ]
cmp ecx esi
mov [ ebp - 0x4 ] ecx
jae r-xdata
mov eax [ ebp + 0x14 ]
push 0x6
xor edx edx
pop edi
movzx ebx [ eax + esi - 0x2 ]
mov eax [ ebp - 0x8 ]
add eax esi
imul ebx eax
lea eax [ esi - 0x1 ]
div edi
mov eax [ ebp + 0x14 ]
shr ebx 0x7
xor bl [ edx + eax ]
lea eax [ esi + 0x1 ]
xor edx edx
div edi
mov al [ ebp + 0xf ]
add al cl
mov ecx [ ebp + 0x14 ]
mov cl [ edx + ecx ]
xor edx edx
xor cl al
mov eax esi
div edi
mov eax [ ebp + 0x14 ]
and cl [ edx + eax ]
mov eax [ ebp - 0xc ]
add bl cl
mov ecx [ ebp - 0x4 ]
xor [ eax + esi ] bl
inc ecx
inc esi
mov [ ebp - 0x4 ] ecx
cmp esi 0x8
jb r-xdata
mov ebx [ ebp - 0x10 ]
push edi
pop esi
mov eax [ ebp + 0x10 ]
sub_100035df
push ebp
mov ebp esp
mov eax 0x14bc
call sub_100076a0
push ebx
push esi
mov edx 0x93
push edi
xor esi esi
mov ecx edx
xor eax eax
lea edi [ ebp - 0x268 ]
mov [ ebp - 0x26c ] esi
mov [ ebp - 0x4bc ] esi
[ edi ]
mov ecx edx
lea edi [ ebp - 0x4b8 ]
[ edi ]
mov edx 0x1ff
lea edi [ ebp - 0xcba ]
mov ecx edx
mov [ ebp - 0xcbc ] si
[ edi ]
stosw [ edi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x14ba ]
mov [ ebp - 0x14bc ] si
[ edi ]
stosw [ edi ]
push 0x1
mov ebx rw-data
pop edi
mov esi 0x400
push [ ebp + 0xc ]
lea eax [ ebp - 0x14bc ]
push [ ebp + 0x8 ]
push ebx
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x14
lea eax [ ebp - 0x26c ]
push eax
lea eax [ ebp - 0x14bc ]
push eax
mov eax [ rw-data ]
call [ eax + 0x50 ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
or eax ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
push [ ebp + 0x8 ]
lea eax [ ebp - 0xcbc ]
push rw-data
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x4bc ]
push eax
lea eax [ ebp - 0xcbc ]
push eax
mov eax [ rw-data ]
call [ eax + 0x50 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test edi edi
je r-xdata
xor eax eax
cmp ecx [ ebp - 0x254 ]
lea edi [ ebp - 0x8 ]
stosd [ edi ]
mov eax [ ebp - 0x258 ]
jg r-xdata
test [ ebp - 0x4bc ] 0x10
je r-xdata
lea eax [ ebp - 0x26c ]
push eax
mov eax [ rw-data ]
push [ ebp - 0x4 ]
call [ eax + 0x40 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x258 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x4c ]
movzx eax [ ebp - 0x1c ]
push [ ebp - 0x24c ]
push eax
movzx eax [ ebp - 0x1a ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0xcbc ]
push [ ebp + 0x8 ]
push rw-data
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x24
lea eax [ ebp - 0xcbc ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0xcbc ]
push eax
push [ ebp + 0x10 ]
call sub_100056b3
cmp [ ebp + 0x20 ] 0x1
jne r-xdata
xor edi edi
jl r-xdata
lea eax [ ebp - 0x4bc ]
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x40 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x490 ]
push rw-data
push eax
mov eax [ rw-data ]
call [ eax + 0x94 ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
mov eax [ rw-data ]
call [ eax + 0x3c ]
test [ ebp - 0x26c ] 0x10
jne r-xdata
push 0x1
pop edi
jmp r-xdata
cmp [ ebp + 0x18 ] eax
jae r-xdata
mov eax [ rw-data ]
push edi
call [ eax + 0x3c ]
lea eax [ ebp - 0x490 ]
push rw-data
push eax
mov eax [ rw-data ]
call [ eax + 0x94 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
and [ ebp - 0x8 ] 0x0
push eax
lea eax [ ebp - 0xcbc ]
push [ ebp + 0x8 ]
push ebx
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x14
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xcbc ]
push eax
call sub_100038ae
push 0x6
push eax
push [ ebp - 0x8 ]
call sub_1000573d
push eax
push [ ebp - 0x8 ]
call sub_100073ae
push [ ebp - 0x8 ]
call sub_1000575f
lea eax [ ebp - 0x490 ]
push eax
lea eax [ ebp - 0x14bc ]
push [ ebp + 0x8 ]
push rw-data
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x14
lea eax [ ebp - 0x14bc ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100035df
sub_100038ae
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x1c ] esi
or [ ebp - 0x44 ] 0xffffffff
mov eax [ rw-data ]
cmp [ eax + 0x58 ] esi
jne r-xdata
mov [ ebp - 0x4 ] esi
push esi
push 0x80
push 0x3
push esi
push 0x3
push 0x80000000
push [ ebp + 0x8 ]
call [ eax + 0x20 ]
mov edi eax
mov [ ebp - 0x44 ] edi
cmp edi 0xffffffff
jne r-xdata
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0x58 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x58 ] esi
jne r-xdata
push esi
push edi
mov eax [ rw-data ]
call [ eax + 0x38 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
mov eax [ rw-data ]
call [ eax + 0x5c ]
lea eax [ ebp - 0x40 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x58 ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x160 ]
mov [ ebp - 0x48 ] eax
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp - 0x48 ]
mov esi [ ebp + 0xc ]
push esi
call sub_100056b3
push 0x8
pop ebx
push ebx
lea eax [ ebp - 0x2c ]
push eax
push esi
call sub_100056b3
push ebx
lea eax [ ebp - 0x34 ]
push eax
push esi
call sub_100056b3
push ebx
lea eax [ ebp - 0x24 ]
push eax
push esi
call sub_100056b3
push ebx
lea eax [ ebp - 0x40 ]
push eax
push esi
call sub_100056b3
push [ ebp - 0x38 ]
push edi
push esi
call sub_1000577b
jmp r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
call [ eax + 0x24 ]
mov [ ebp - 0x1c ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_100039f6
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x44 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_100056b3
retn
push [ ebp - 0x44 ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
sub_10003a2a
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
push edi
mov eax [ rw-data ]
push esi
push 0x80
push 0x2
push esi
push esi
push 0x40000000
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
call [ eax + 0x20 ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax rw-data
push eax
push esi
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x1c ]
lea eax [ ebp - 0x4 ]
push esi
push eax
mov eax [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x18 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x14 ]
xor eax eax
mov eax [ rw-data ]
call [ eax + 0x24 ]
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_10003a96
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x24 ] esi
or [ ebp - 0x28 ] 0xffffffff
mov [ ebp - 0x4 ] esi
push esi
push 0x80
push 0x3
push esi
push 0x3
push 0x80000000
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x20 ]
mov edi eax
mov [ ebp - 0x28 ] edi
cmp edi 0xffffffff
jne r-xdata
push esi
push edi
mov eax [ rw-data ]
call [ eax + 0x38 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0xc ]
cmp ecx eax
jbe r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov esi eax
mov edx [ ebp + 0x10 ]
add edx ecx
cmp edx eax
jbe r-xdata
mov esi 0xeeeeeef3
jmp r-xdata
push esi
push esi
push ecx
push edi
mov eax [ rw-data ]
call [ eax + 0x60 ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x160 ]
mov [ ebp - 0x30 ] eax
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp - 0x30 ]
push [ ebp + 0x14 ]
call sub_100056b3
push 0x4
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
call sub_100056b3
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
call sub_1000577b
mov [ ebp - 0x24 ] eax
mov esi eax
jmp r-xdata
sub eax ecx
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x24 ] esi
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_10003b9d
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_100056b3
retn
push [ ebp - 0x28 ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
sub_10003bd1
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x48 ] ebx
and [ ebp - 0x38 ] bl
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x37 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
push [ rw-data ]
mov esi [ GetProcAddress@IAT ]
call esi
mov [ ebp - 0x44 ] eax
cmp eax ebx
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov [ ebp - 0x4 ] ebx
push ebx
push ebx
call edi
mov esi eax
mov [ ebp - 0x50 ] esi
lea eax [ esi + 0x1 ]
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov ebx eax
mov [ ebp - 0x3c ] ebx
test ebx ebx
jne r-xdata
push ebx
push esi
call edi
test eax eax
jne r-xdata
mov esi 0xeeeeeef2
mov eax [ ebp - 0x48 ]
lea esi [ eax + ebx ]
cmp [ esi ] 0x0
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
xor esi esi
jmp r-xdata
push esi
call [ ebp - 0x44 ]
mov [ ebp - 0x54 ] eax
dec eax
dec eax
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov [ ebp - 0x4c ] rw-data
dec eax
je r-xdata
mov [ ebp - 0x4c ] rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp - 0x4c ]
push esi
push rw-data
push 0x20
lea eax [ ebp - 0x38 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xec ]
add esp 0x14
lea eax [ ebp - 0x38 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push [ ebp + 0x8 ]
call sub_100056b3
add [ ebp - 0x48 ] 0x4
jmp r-xdata
mov [ ebp - 0x4c ] rw-data
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4c ] rw-data
jmp r-xdata
mov [ ebp - 0x4c ] rw-data
jmp r-xdata
sub_10003d3c
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
mov [ ebp + 0xc ] esi
call [ eax + 0x98 ]
mov ecx [ ebp + 0x8 ]
inc eax
neg eax
lea edi [ ecx + eax * 2 ]
test edi edi
jl r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov eax [ rw-data ]
push esi
call [ eax + 0x98 ]
lea esi [ esi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push esi
mov [ ebp + 0x8 ] esi
call [ eax + 0x98 ]
inc eax
neg eax
lea edi [ edi + eax * 2 ]
test edi edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov eax [ rw-data ]
push esi
call [ eax + 0x98 ]
lea ebx [ esi + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push ebx
call [ eax + 0x98 ]
inc eax
neg eax
lea esi [ edi + eax * 2 ]
test esi esi
jl r-xdata
mov eax [ rw-data ]
push ebx
call [ eax + 0x14c ]
mov [ ebp - 0x8 ] al
mov eax [ rw-data ]
push ebx
call [ eax + 0x98 ]
lea edi [ ebx + eax * 2 + 0x2 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
sub esi eax
jns r-xdata
mov eax [ rw-data ]
push edi
call [ eax + 0x14c ]
mov esi [ GetProcAddress@IAT ]
mov [ ebp - 0x4 ] eax
xor eax eax
cmp [ ebp - 0x4 ] 0xffffffff
lea edi [ ebp - 0xc ]
stosd [ edi ]
je r-xdata
xor edi edi
xor ebx ebx
mov [ ebp - 0xc ] edi
xor ebx ebx
lea edi [ ebp - 0x26 ]
mov [ ebp - 0x28 ] bx
mov [ ebp - 0x18 ] ebx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
xor eax eax
lea edi [ ebp - 0x14 ]
stosd [ edi ]
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x48 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push rw-data
push [ rw-data ]
call esi
call eax
mov eax [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cdq
push 0xffffff36
push 0xd5964000
push edx
push eax
call sub_100076d0
add edi eax
adc [ ebp - 0xc ] edx
jmp r-xdata
cmp [ eax + 0x40 ] ebx
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x3c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x3c ] ebx
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x3c ] ebx
jne r-xdata
cmp [ eax + 0x50 ] ebx
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x40 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x40 ] ebx
je r-xdata
call [ eax + 0x24 ]
jmp r-xdata
cmp [ eax + 0x4c ] ebx
jne r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x50 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x50 ] ebx
je r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push [ ebp - 0xc ]
push edi
push [ ebp - 0x8 ]
push esi
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_100035df
push [ esi ]
call sub_1000573d
cmp eax ebx
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x4c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x4c ] ebx
jne r-xdata
push [ ebp + 0xc ]
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
push [ ebp + 0xc ]
push esi
call sub_100056b3
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp + 0x8 ]
push esi
call sub_100056b3
mov eax 0xeeeeeef0
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
sub_10003f88
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push ebx
push esi
push edi
or [ ebp - 0x20 ] 0xffffffff
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x28 ] edi
cmp [ rw-data ] di
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] edi
push edi
push 0x6
push 0x3
push edi
push edi
push 0xc0000000
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x20 ]
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi 0xffffffff
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax edi
jmp r-xdata
push edi
push esi
mov eax [ rw-data ]
call [ eax + 0x38 ]
mov [ ebp - 0x2c ] eax
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov ebx eax
mov [ ebp - 0x28 ] ebx
cmp ebx edi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x2c ]
push ebx
push esi
mov eax [ rw-data ]
call [ eax + 0x34 ]
mov esi [ ebx + 0x2 ]
mov [ ebp - 0x40 ] esi
push esi
push 0x8
push [ rw-data ]
call [ rw-data ]
mov [ ebp - 0x44 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x38 ] 0x6
push esi
lea ecx [ ebx + 0x6 ]
push ecx
push eax
mov eax [ rw-data ]
call [ eax + 0xcc ]
add esp 0xc
lea eax [ esi - 0x6 ]
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x44 ]
lea ecx [ edx + 0x6 ]
mov [ ebp - 0x4c ] ecx
push edx
push edi
push eax
push ecx
call sub_10003453
add esi 0x6
mov [ ebp - 0x38 ] esi
dec [ rw-data ]
push edi
push edi
push edi
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0x60 ]
push edi
lea eax [ ebp - 0x1c ]
push eax
push 0x2
push rw-data
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0x18 ]
mov eax [ ebp - 0x2c ]
sub eax esi
je r-xdata
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0x64 ]
mov eax rw-data
push eax
push edi
push eax
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0x1c ]
push [ ebp - 0x48 ]
push [ ebp - 0x4c ]
call sub_10002e59
mov edi eax
push edi
lea ecx [ ebp - 0x1c ]
push ecx
push eax
add esi ebx
push esi
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0x18 ]
sub_1000413c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x1c ]
stosd [ edi ]
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
call sub_10003f88
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x74 ]
push 0x2710
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x8 ]
test eax eax
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
push 0x1
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0xffffffff
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x2
mov eax [ rw-data ]
call [ eax + 0x13c ]
cmp eax 0x1
jne r-xdata
jmp r-xdata
sub_100041f3
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
push edi
push 0x2710
mov eax [ rw-data ]
call [ eax + 0x68 ]
xor eax eax
lea edi [ ebp - 0x1c ]
stosd [ edi ]
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
mov esi rw-data
call sub_10004482
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x74 ]
push esi
mov eax [ rw-data ]
call [ eax + 0x70 ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0xdc ]
mov [ ebp - 0x24 ] eax
push esi
mov eax [ rw-data ]
call [ eax + 0x6c ]
push [ ebp - 0x24 ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x8 ]
test eax eax
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
push 0x1
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0xffffffff
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x2
mov eax [ rw-data ]
call [ eax + 0x13c ]
cmp eax 0x1
jne r-xdata
jmp r-xdata
sub_100042f9
push ebp
mov ebp esp
push ecx
lea ecx [ ebp - 0x4 ]
xor eax eax
push ecx
push eax
push eax
push sub_100041f3
push eax
mov [ ebp - 0x4 ] eax
push eax
mov eax [ rw-data ]
call [ eax + 0x78 ]
leave
retn
sub_10004319
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
xor esi esi
push esi
push esi
push esi
mov [ ebp - 0x8 ] esi
call [ eax + 0x7c ]
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
push edi
mov eax [ rw-data ]
push esi
push 0x6
push 0x3
push esi
push esi
push 0x80000000
push [ rw-data ]
mov [ ebp - 0x4 ] esi
call [ eax + 0x20 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
push esi
push esi
push sub_1000413c
push esi
push esi
call [ eax + 0x78 ]
pop edi
lea eax [ ebp - 0x4 ]
push esi
push eax
mov eax [ rw-data ]
push 0x2
push rw-data
push edi
call [ eax + 0x34 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x14 ]
pop esi
leave
retn
sub_10004398
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov eax [ rw-data ]
push esi
push 0x6
push 0x4
push esi
push esi
push 0xc0000000
mov [ ebp - 0x8 ] esi
push [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] esi
call [ eax + 0x20 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn 0xc
mov eax [ rw-data ]
push esi
push edi
call [ eax + 0x38 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push esi
push esi
push esi
push edi
call [ eax + 0x60 ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0x4 ]
push 0x2
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x34 ]
mov eax [ rw-data ]
push edi
call [ eax + 0x14 ]
inc [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0x4 ]
push 0x2
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x2
push esi
push esi
push edi
call [ eax + 0x60 ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp + 0x10 ]
push 0x4
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x18 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push esi
push eax
mov eax [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0x1
mov eax rw-data
pop ebx
push eax
push esi
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x1c ]
sub_10004482
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push edi
push 0x10
push 0x8
push [ rw-data ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] ebx
call [ rw-data ]
push [ rw-data ]
mov edi eax
mov ecx edi
mov [ ebp - 0x1c ] edi
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_10004618
test eax eax
je r-xdata
mov ecx edi
call sub_100046aa
push edi
call sub_1000575f
pop edi
pop ebx
leave
retn
push ebx
lea eax [ ebp - 0x18 ]
push rw-data
push eax
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
call sub_10004829
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
push esi
cmp eax ebx
je r-xdata
push [ ebp - 0x14 ]
call sub_1000575f
pop esi
mov ecx [ ebp - 0x14 ]
add eax ecx
mov [ ebp - 0x10 ] ecx
cmp ecx eax
jae r-xdata
mov eax [ rw-data ]
push rw-data
push [ ebp - 0x10 ]
call [ eax + 0xe4 ]
mov esi eax
cmp esi ebx
je r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov [ esi ] bl
mov ecx edi
push rw-data
push eax
lea eax [ ebp - 0xc ]
inc esi
push eax
mov [ ebp - 0x4 ] ebx
call sub_10004829
test eax eax
je r-xdata
push [ ebp - 0xc ]
call sub_1000575f
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
add eax ecx
mov [ ebp - 0x10 ] esi
cmp esi eax
jb r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push ebx
lea eax [ ebp - 0x8 ]
push ebx
push eax
mov eax [ rw-data ]
push ebx
push 0x1
mov [ ebp - 0x8 ] ebx
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call [ eax + 0xc4 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x1c ]
push [ ebp - 0x10 ]
mov ecx edi
call sub_10004997
push [ ebp - 0x8 ]
push 0x8
push [ rw-data ]
call [ rw-data ]
mov edi eax
cmp edi ebx
je r-xdata
push ebx
lea eax [ ebp - 0x8 ]
push ebx
push eax
mov eax [ rw-data ]
push edi
push 0x1
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call [ eax + 0xc4 ]
test eax eax
je r-xdata
push edi
push ebx
push [ rw-data ]
call [ rw-data ]
push [ ebp - 0x8 ]
push edi
push [ rw-data ]
call sub_10004398
test eax eax
je r-xdata
inc [ rw-data ]
sub_10004618
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x4 ]
push edi
push eax
mov eax [ rw-data ]
mov esi ecx
mov [ ebp - 0x4 ] edi
call [ eax + 0x118 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ rw-data ]
push edi
push edi
push edi
push edi
push rw-data
call [ eax ]
cmp eax edi
mov [ esi ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push edi
push edi
push 0x3
push edi
push edi
push 0x50
mov [ esi + 0x8 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ esi + 0xc ] ecx
push eax
mov eax [ rw-data ]
call [ eax + 0xd0 ]
cmp eax edi
mov [ esi + 0x4 ] eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
pop edi
pop esi
leave
retn 0x10
push edi
push edi
push 0x3
mov eax [ rw-data ]
push edi
push edi
push 0x50
push [ ebp + 0xc ]
push [ esi ]
call [ eax + 0xd0 ]
cmp eax edi
mov [ esi + 0x4 ] eax
je r-xdata
sub_100046aa
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
push eax
mov eax [ rw-data ]
call [ eax + 0x11c ]
pop esi
retn
mov eax [ rw-data ]
push esi
call [ eax + 0x11c ]
sub_100046d4
push ebp
mov ebp esp
sub esp 0x134
push ebx
push esi
push edi
mov esi ecx
push 0x9
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x34 ] ebx
[ edi ]
push 0x3f
lea edi [ ebp - 0x133 ]
pop ecx
mov [ ebp - 0x134 ] bl
push [ esi + 0xc ]
mov [ ebp - 0x8 ] 0x1
[ edi ]
stosw [ edi ]
push rw-data
push [ esi + 0x8 ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x134 ]
push 0x100
push eax
mov eax [ rw-data ]
call [ eax + 0xec ]
add esp 0x18
lea eax [ ebp - 0x134 ]
push ebx
push 0x84000200
push ebx
push ebx
push ebx
push eax
mov eax [ rw-data ]
push rw-data
push [ esi + 0x4 ]
call [ eax + 0x120 ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
mov eax [ rw-data ]
push ebx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x164 ]
push [ ebp - 0x4 ]
push 0x8
push [ rw-data ]
call [ rw-data ]
mov esi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
push esi
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x164 ]
mov eax [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x18 ] eax
push ebx
lea eax [ ebp - 0x34 ]
push ebx
push eax
mov eax [ rw-data ]
push edi
mov [ ebp - 0x34 ] 0x28
call [ eax + 0xd8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push [ ebp - 0x4 ]
push esi
push edi
call [ eax + 0x124 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push edi
call [ eax + 0x11c ]
jmp r-xdata
mov eax [ rw-data ]
push ebx
push ebx
push ebx
push edi
call [ eax + 0x12c ]
push esi
push ebx
push [ rw-data ]
call [ rw-data ]
jmp r-xdata
sub_10004829
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
mov esi ecx
push 0x3f
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x107 ]
mov [ ebp - 0x108 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ebx
cmp eax ebx
jne r-xdata
push eax
lea eax [ ebp - 0x108 ]
push [ ebp + 0x10 ]
push [ esi + 0x8 ]
push rw-data
push 0x100
push eax
mov eax [ rw-data ]
call [ eax + 0xec ]
add esp 0x18
lea eax [ ebp - 0x108 ]
push ebx
push 0x84000200
push ebx
push eax
lea eax [ ebp - 0x108 ]
push ebx
push eax
mov eax [ rw-data ]
push ebx
push [ esi + 0x4 ]
call [ eax + 0x120 ]
mov esi eax
cmp esi ebx
mov [ ebp + 0x14 ] esi
je r-xdata
mov eax [ esi + 0xc ]
mov [ ebp + 0x10 ] ebx
mov eax [ rw-data ]
push ebx
push ebx
push ebx
push ebx
push esi
call [ eax + 0xd4 ]
cmp eax ebx
mov [ ebp + 0x10 ] eax
je r-xdata
mov [ ebp + 0x10 ] ebx
push ebx
lea eax [ ebp - 0x4 ]
push ebx
push eax
mov eax [ rw-data ]
push esi
call [ eax + 0x128 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
mov eax [ rw-data ]
call [ eax + 0x11c ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0x4 ]
push 0x8
push [ rw-data ]
call [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp - 0x4 ]
mov [ edi ] eax
push eax
mov eax [ rw-data ]
push esi
call [ eax + 0x130 ]
mov esi [ ebp + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ esi ]
add eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
push [ edi ]
push 0x8
push [ rw-data ]
call [ eax + 0x30 ]
lea ecx [ ebp - 0x8 ]
mov [ edi ] eax
push ecx
mov ecx [ esi ]
push [ ebp - 0x4 ]
add ecx eax
mov eax [ rw-data ]
push ecx
push [ ebp + 0x14 ]
call [ eax + 0x130 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
push ebx
add [ esi ] eax
lea eax [ ebp - 0x4 ]
push ebx
push eax
push [ ebp + 0x14 ]
mov eax [ rw-data ]
call [ eax + 0x128 ]
test eax eax
je r-xdata
sub_10004997
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
mov esi ecx
push 0x1f
xor ebx ebx
pop ecx
xor eax eax
push [ ebp + 0x8 ]
lea edi [ ebp - 0x7f ]
mov [ ebp - 0x80 ] bl
[ edi ]
stosw [ edi ]
push rw-data
push [ esi + 0x8 ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x80 ]
push 0x80
push eax
mov eax [ rw-data ]
call [ eax + 0xec ]
add esp 0x18
lea eax [ ebp - 0x80 ]
push ebx
push 0x84000200
push ebx
push eax
lea eax [ ebp - 0x80 ]
push ebx
push eax
mov eax [ rw-data ]
push ebx
push [ esi + 0x4 ]
call [ eax + 0x120 ]
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
mov eax [ rw-data ]
push ebx
push ebx
push ebx
push ebx
push esi
call [ eax + 0xd4 ]
push ebx
mov edi eax
mov eax [ rw-data ]
push ebx
push ebx
push esi
call [ eax + 0x12c ]
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_10004a31
push ebp
mov ebp esp
sub esp 0x948
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jge r-xdata
push ebx
push edi
xor eax eax
lea edi [ ebp - 0x24 ]
mov [ ebp - 0x28 ] esi
cmp [ ebp + 0x8 ] esi
stosd [ edi ]
stosd [ edi ]
mov ebx [ ebp + 0x10 ]
stosd [ edi ]
stosd [ edi ]
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ eax + 0x104 ]
jmp r-xdata
push ebx
mov eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ eax + 0x104 ]
pop edi
pop ebx
cmp [ ebp + 0xc ] 0x100
je r-xdata
pop esi
leave
retn 0xc
mov ecx 0x1ff
xor eax eax
lea edi [ ebp - 0x946 ]
mov [ ebp - 0x948 ] si
[ edi ]
stosw [ edi ]
mov eax [ ebx ]
push rw-data
and eax 0xff
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
shl eax 0x10
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
call [ eax + 0xe0 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x104
jne r-xdata
mov eax [ rw-data ]
call [ eax + 0x100 ]
mov edi eax
mov eax [ rw-data ]
cmp eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
push 0x800
lea eax [ ebp - 0x948 ]
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0xc8 ]
add esp 0xc
lea eax [ ebp - 0x948 ]
push 0x400
push eax
push [ ebp - 0xc ]
mov eax [ rw-data ]
call [ eax + 0x140 ]
cmp eax esi
je r-xdata
cmp eax esi
mov [ ebp + 0x10 ] esi
je r-xdata
mov eax [ rw-data ]
push rw-data
call [ eax + 0x6c ]
cmp [ ebp - 0x8 ] 0x20
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x154 ]
push [ ebp + 0x10 ]
mov eax [ rw-data ]
push 0x1
push 0x410
call [ eax + 0x114 ]
cmp eax esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x948 ] 0x2d
mov [ ebp - 0x946 ] 0x2d
mov [ ebp - 0x944 ] 0x5b
je r-xdata
push 0x4
push rw-data
push rw-data
call sub_100056b3
cmp [ ebp - 0x8 ] 0xd
jne r-xdata
push 0x1
mov [ ebp - 0x948 ] 0x20
mov [ ebp - 0x946 ] si
pop eax
mov esi [ ebp - 0x10 ]
lea ecx [ ebp - 0x942 ]
push 0x3fd
push ecx
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0x144 ]
push [ ebp - 0x14 ]
mov esi eax
mov eax [ rw-data ]
call [ eax + 0x14 ]
jmp r-xdata
cmp eax 0x1
jne r-xdata
push 0x1
mov [ ebp - 0x948 ] 0xa
mov [ ebp - 0x946 ] si
pop eax
add esi 0x3
lea eax [ esi + esi ]
add esi 0x5
mov [ ebp + eax - 0x948 ] 0x5d
mov [ ebp + eax - 0x946 ] 0x2d
mov [ ebp + eax - 0x944 ] 0x2d
mov [ ebp + eax - 0x942 ] 0xa
mov [ ebp + eax - 0x940 ] 0x5b
mov eax 0x400
sub eax esi
push eax
lea eax [ ebp + esi * 2 - 0x948 ]
push eax
mov eax [ rw-data ]
push edi
call [ eax + 0x110 ]
add esi eax
lea eax [ esi + esi + 0x6 ]
mov [ ebp + esi * 2 - 0x948 ] 0x5d
push eax
lea eax [ ebp - 0x948 ]
push eax
mov [ ebp + esi * 2 - 0x946 ] 0xa
push rw-data
mov [ ebp + esi * 2 - 0x944 ] 0xa
call sub_100056b3
mov [ rw-data ] edi
xor esi esi
push 0x2
mov esi rw-data
push rw-data
push esi
call sub_100056b3
lea eax [ ebp - 0x948 ]
push rw-data
push eax
mov eax [ rw-data ]
call [ eax + 0x2c ]
lea eax [ ebp - 0x948 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0x948 ]
push eax
push esi
and [ ebp - 0x148 ] 0x0
push 0x3f
pop ecx
xor eax eax
lea edi [ ebp - 0x147 ]
push esi
[ edi ]
push [ ebp - 0x4 ]
stosw [ edi ]
stosb [ edi ]
mov eax [ rw-data ]
call [ eax + 0x154 ]
mov [ ebp + 0x10 ] eax
mov eax [ rw-data ]
push 0x1
push [ ebp + 0x10 ]
lea edi [ eax + 0x15c ]
call [ eax + 0x150 ]
push eax
call [ edi ]
lea eax [ ebp - 0x148 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x10c ]
mov eax [ rw-data ]
push esi
push [ ebp + 0x10 ]
lea edi [ eax + 0x15c ]
call [ eax + 0x150 ]
push eax
call [ edi ]
push [ ebp + 0x10 ]
mov eax [ rw-data ]
call [ eax + 0x158 ]
push 0x7
mov [ ebp + 0x10 ] eax
pop ecx
xor eax eax
push [ ebp + 0x10 ]
lea edi [ ebp - 0x46 ]
mov [ ebp - 0x48 ] si
[ edi ]
push esi
push 0x10
stosw [ edi ]
pop edi
lea eax [ ebp - 0x48 ]
push edi
push eax
lea eax [ ebp - 0x148 ]
push eax
mov eax [ rw-data ]
push [ ebx + 0x4 ]
push [ ebx ]
call [ eax + 0x108 ]
cmp eax esi
mov [ ebp - 0x4 ] eax
jge r-xdata
cmp [ ebp - 0x28 ] esi
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x48 ]
push esi
push edi
push eax
lea eax [ ebp - 0x148 ]
push eax
mov eax [ rw-data ]
push [ ebx + 0x4 ]
push [ ebx ]
call [ eax + 0x108 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp eax esi
jle r-xdata
push 0x100
lea eax [ ebp - 0x148 ]
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0xc8 ]
add esp 0xc
lea eax [ ebp - 0x48 ]
push [ ebp + 0x10 ]
push esi
push edi
push eax
lea eax [ ebp - 0x148 ]
push eax
mov eax [ rw-data ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call [ eax + 0x108 ]
jmp r-xdata
add eax eax
push eax
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
call sub_100056b3
sub_10004e5a
cmp [ rw-data ] 0x0
je r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push 0x0
push 0x0
push rw-data
push [ rw-data ]
call esi
call eax
push eax
push sub_10004a31
push 0xd
push rw-data
push [ rw-data ]
call esi
call eax
test eax eax
mov [ rw-data ] eax
pop esi
jne r-xdata
call sub_10004e32
xor eax eax
retn
mov eax [ rw-data ]
jmp [ eax + 0x24 ]
sub_10004eae
push [ rw-data ]
call sub_1000573d
cmp eax 0xffffffff
je r-xdata
retn
push 0xfffffffe
push 0x0
push eax
push [ rw-data ]
call sub_100073ae
test eax eax
je r-xdata
push [ rw-data ]
call sub_1000575f
and [ rw-data ] 0x0
and [ rw-data ] 0x0
sub_10004eec
push ecx
mov eax [ rw-data ]
push ebx
and [ esp + 0x4 ] 0x0
push ebp
push esi
push edi
push 0x0
push [ rw-data ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
pop ebp
pop ebx
je r-xdata
mov esi rw-data
xor eax eax
pop ecx
retn 0x4
call sub_10004eae
mov eax [ rw-data ]
push rw-data
call [ eax + 0x6c ]
mov eax [ rw-data ]
mov edi 0xea60
push edi
push [ rw-data ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_1000573d
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax [ rw-data ]
add [ esp + 0x10 ] edi
push 0x0
push [ rw-data ]
call [ eax + 0x8 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push esi
call [ eax + 0x70 ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0xdc ]
push [ rw-data ]
mov edi eax
mov eax [ rw-data ]
call [ eax + 0xdc ]
mov ebp eax
mov eax [ rw-data ]
push esi
call [ eax + 0x6c ]
cmp ebx edi
ja r-xdata
mov eax [ rw-data ]
push rw-data
call [ eax + 0x70 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_10004eae
and [ esp + 0x10 ] 0x0
cmp [ esp + 0x10 ] ebp
jbe r-xdata
sub_10004fdb
push ebp
mov ebp esp
sub esp 0x2c
push esi
mov esi [ GetProcAddress@IAT ]
push edi
push rw-data
push [ rw-data ]
xor edi edi
mov [ rw-data ] edi
call esi
cmp eax edi
mov [ ebp - 0x4 ] eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
push rw-data
push [ rw-data ]
call esi
cmp eax edi
mov [ ebp - 0xc ] eax
je r-xdata
pop edi
pop esi
leave
retn 0x4
push rw-data
push [ rw-data ]
call esi
cmp eax edi
mov [ ebp - 0x10 ] eax
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x104 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x104 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x108 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x108 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x10c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x10c ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x110 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x110 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x140 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x140 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xe0 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xe0 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x150 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x150 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x154 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x154 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x158 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x158 ] edi
je r-xdata
push rw-data
push [ rw-data ]
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x15c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x15c ] edi
jne r-xdata
mov esi rw-data
push ebx
push esi
mov [ ebp - 0x8 ] edi
call [ eax + 0xc ]
call sub_10004e5a
mov ebx eax
cmp ebx edi
jne r-xdata
mov eax [ rw-data ]
push esi
call [ eax + 0x4 ]
mov eax ebx
pop ebx
lea eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
push edi
push edi
push sub_10004eec
push edi
push edi
call [ eax + 0x78 ]
cmp eax edi
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov ebx eax
push edi
push edi
lea eax [ ebp - 0x2c ]
push edi
push eax
call [ ebp - 0x4 ]
cmp eax edi
je r-xdata
call sub_10004e32
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
push 0xea60
push [ rw-data ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push edi
push [ rw-data ]
call [ eax + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_10004eae
mov eax [ rw-data ]
push 0xffffffff
push [ rw-data ]
call [ eax + 0x8c ]
lea eax [ ebp - 0x2c ]
push eax
call [ ebp - 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call [ ebp - 0x10 ]
jmp r-xdata
sub_1000529d
mov eax [ rw-data ]
push esi
xor esi esi
push esi
push esi
push esi
push esi
call [ eax + 0x54 ]
cmp eax esi
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
pop esi
retn
mov eax [ rw-data ]
push rw-data
push esi
push esi
push sub_10004fdb
push esi
push esi
call [ eax + 0x78 ]
mov [ rw-data ] eax
sub_100052da
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x88 ]
push 0x0
push 0x0
push 0x12
push [ rw-data ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov eax [ rw-data ]
push 0xffffffff
push [ rw-data ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
mov eax [ rw-data ]
push 0xffffffff
push [ rw-data ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0xffffffff
push [ rw-data ]
call [ eax + 0x8c ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push 0xffffffff
push [ rw-data ]
call [ eax + 0x8c ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
xor eax eax
retn
call sub_10004eae
push [ rw-data ]
call sub_1000575f
sub_1000539e
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
test al 0x1
je r-xdata
push 0xc
pop eax
jmp r-xdata
lea eax [ eax + eax * 2 ]
shr eax 0x1
add eax 0xc
inc eax
retn 0x4
sub_100053bb
push ebp
mov ebp esp
mov eax 0xc02c
call sub_100076a0
push ebx
mov ebx [ ebp + 0x10 ]
and [ rw-data ] 0x0
push esi
and [ ebp - 0x2 ] 0x0
push edi
mov edi [ ebp + 0xc ]
mov esi 0x100
push edi
mov [ ebp - 0x20 ] 0x9
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] esi
mov [ ebx ] 0x21575a4c
mov [ ebx + 0x4 ] edi
call sub_10005674
push 0xc
xor edx edx
pop ecx
mov [ ebx + 0x8 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc024 ]
mov [ eax - 0x8 ] edx
mov [ eax ] edx
mov [ eax - 0x4 ] 0x1
add eax ecx
dec esi
jne r-xdata
xor esi esi
cmp edi edx
jbe r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax esi
movzx edi [ eax ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x1c ] edi
lea eax [ edi + edi * 2 ]
mov ecx [ ebp + eax * 4 - 0xc024 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x14 ] 0xf00
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x28 ] ecx
lea eax [ esi + 0x1 ]
mov eax [ ebp - 0x14 ]
cmp eax 0xf00
jge r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ eax + eax * 2 ]
shl eax 0x2
inc [ ebp - 0xc ]
mov ecx [ ebp + eax - 0xc02c ]
mov eax [ ebp + eax - 0xc024 ]
movzx ecx [ ecx + edx ]
lea ecx [ ecx + ecx * 2 ]
mov [ ebp + ecx * 4 - 0xc024 ] eax
mov eax [ ebp - 0xc ]
cdq
mov ecx 0x1000
idiv ecx
test eax eax
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0xc ]
lea ecx [ eax - 0x1 ]
cmp ecx 0xff
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx eax
jmp r-xdata
mov [ ebp - 0xc ] 0x100
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov eax [ ebp + ecx - 0xc028 ]
cmp eax [ ebp - 0x8 ]
jbe r-xdata
mov eax [ ebp - 0x2c ]
mov ecx 0xfff
mov ecx [ ebp + ecx - 0xc024 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] ecx
add eax esi
jmp r-xdata
add eax esi
cmp eax [ ebp + 0xc ]
ja r-xdata
lea eax [ eax + eax * 2 ]
lea edx [ edi + edi * 2 ]
mov [ ebp + eax * 4 - 0xc024 ] ecx
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov [ ebp + eax - 0xc02c ] esi
mov edx [ ebp + edx * 4 - 0xc028 ]
lea ecx [ ebp + eax - 0xc028 ]
inc edx
mov [ ecx ] edx
and [ ebp + eax - 0xc024 ] 0x0
cmp [ ebp - 0x14 ] 0xf00
jge r-xdata
mov eax edx
jmp r-xdata
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + ecx - 0xc02c ]
mov edi [ ebp - 0x8 ]
add edx esi
mov dl [ edx + edi ]
lea ebx [ eax + edi ]
mov edi [ ebp + 0x8 ]
cmp dl [ ebx + edi ]
jne r-xdata
mov eax [ ecx ]
mov ecx [ ebp - 0x20 ]
push 0x1
lea esi [ esi + eax - 0x1 ]
pop eax
shl eax cl
mov [ rw-data ] esi
cmp eax [ ebp - 0x24 ]
jne r-xdata
inc [ ebp - 0x14 ]
lea edx [ eax + eax * 2 ]
mov edx [ ebp + edx * 4 - 0xc024 ]
test edx edx
je r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp - 0x1c ]
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1 ] 0x1
add eax edi
and [ ebp - 0x8 ] 0x0
test ecx ecx
jle r-xdata
cmp ecx 0xc
jge r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ebx [ ebp - 0x18 ]
lea edx [ esi + edi ]
mov dl [ edx + ebx ]
cmp dl [ eax ]
je r-xdata
inc [ ebp - 0x24 ]
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
push 0x1
mov al [ eax + ebx ]
mov [ ebp - 0x1 ] al
pop eax
shl eax cl
push 0x7
pop ecx
test edi eax
movzx eax [ ebp - 0x2 ]
je r-xdata
inc ecx
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + ecx - 0xc028 ]
mov edi [ ebp - 0x28 ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
inc [ ebp - 0x18 ]
inc eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
and [ ebp - 0x1 ] 0x0
cmp [ ebp - 0x2 ] 0x0
je r-xdata
sub ecx eax
mov dl 0x1
shl dl cl
not dl
and [ ebp - 0x1 ] dl
sub ecx eax
mov dl 0x1
shl dl cl
or [ ebp - 0x1 ] dl
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + ecx - 0xc028 ]
jae r-xdata
mov eax [ ebp - 0x10 ]
inc eax
jmp r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
and [ eax + ebx ] dl
mov ecx [ ebp - 0x10 ]
mov dl [ ebp - 0x1 ]
inc eax
push 0x8
mov [ ecx + ebx ] dl
pop ecx
cdq
idiv ecx
test dl dl
mov [ ebp - 0x2 ] dl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_10005674
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push esi
push edi
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
cld
xor edx edx
dec edx
xor eax eax
jmp r-xdata
loop r-xdata
xor eax 0xedb88320
pop ebp
retn 0x8
clc
rcr eax 0x1
jae r-xdata
xor edx eax
dec edi
jne r-xdata
xor eax eax
lodsb [ esi ]
xor al dl
xor ecx ecx
mov cl 0x8
shr edx cl
mov eax edx
not eax
pop edi
pop esi
sub_100056b3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
push edi
mov edi [ ebx ]
je r-xdata
xor eax eax
cmp edi esi
jne r-xdata
mov eax [ rw-data ]
push edi
push esi
push [ rw-data ]
call [ eax + 0x44 ]
mov esi eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
mov eax [ rw-data ]
push edi
push 0x8
push [ rw-data ]
call [ eax + 0x30 ]
push [ ebp + 0x10 ]
push 0x8
push [ rw-data ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ rw-data ]
add esi edi
push [ ebp + 0xc ]
push esi
call [ eax + 0xcc ]
add esp 0xc
cmp eax esi
je r-xdata
mov eax 0xeeeeeef2
jmp r-xdata
mov edi eax
test edi edi
jne r-xdata
mov [ ebx ] edi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_1000577b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ esi ]
call sub_1000573d
mov edi eax
mov eax [ esi ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push 0x8
push [ rw-data ]
call [ rw-data ]
mov ecx [ ebp + 0x10 ]
add ecx edi
push ecx
push eax
mov eax [ rw-data ]
push 0x8
push [ rw-data ]
call [ eax + 0x30 ]
jmp r-xdata
mov eax 0xeeeeeef2
lea eax [ ebp + 0x8 ]
push 0x0
push eax
mov eax [ rw-data ]
push [ ebp + 0x10 ]
and [ ebp + 0x8 ] 0x0
add esi edi
push esi
push [ ebp + 0xc ]
call [ eax + 0x34 ]
xor eax eax
jmp r-xdata
mov [ esi ] eax
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_100057ee
push ebp
mov ebp esp
sub esp 0x118
push ebx
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0xc ]
mov eax [ rw-data ]
xor edi edi
xor ebx ebx
push edi
push edi
push 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
call [ eax + 0xc0 ]
test eax eax
je r-xdata
mov eax 0x7d00
mov [ ebp - 0x10 ] 0x3e8
push eax
push 0x8
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call [ rw-data ]
cmp eax edi
mov [ ebp - 0xc ] eax
jne r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push [ ebp - 0x4 ]
call [ eax + 0xbc ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0xeeeeeef2
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
push [ ebp - 0x4 ]
mov eax [ rw-data ]
call [ eax + 0xb8 ]
push 0x800
push 0x8
push [ rw-data ]
mov [ ebp - 0x4 ] edi
call [ rw-data ]
mov ebx eax
cmp ebx edi
je r-xdata
push ebx
call sub_1000575f
push [ ebp - 0xc ]
call sub_1000575f
mov eax [ ebp - 0x8 ]
pop edi
pop ebx
leave
retn 0xc
push [ ebp - 0x4 ]
mov eax [ rw-data ]
call [ eax + 0xb8 ]
cmp [ ebp - 0x10 ] edi
mov [ ebp + 0xc ] edi
jbe r-xdata
mov eax [ ebp - 0xc ]
push esi
lea esi [ eax + 0x8 ]
mov eax [ rw-data ]
push rw-data
push ebx
call [ eax + 0x2c ]
mov eax [ rw-data ]
push ebx
call [ eax + 0x98 ]
shl eax 0x1
push eax
push ebx
push [ ebp + 0x10 ]
call sub_100056b3
mov eax [ ebp + 0x8 ]
cmp eax 0x4
jae r-xdata
cmp [ esi ] 0x1
jne r-xdata
inc [ ebp + 0xc ]
add esi 0x20
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
push [ ebp + 0x10 ]
lea ecx [ esi - 0x8 ]
inc eax
push ecx
push eax
call sub_100057ee
cmp [ esi ] edi
jne r-xdata
mov eax [ rw-data ]
push rw-data
lea edi [ eax + 0xcc ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
push eax
push rw-data
push ebx
call [ edi ]
add esp 0xc
xor edi edi
cmp [ esi + 0xc ] edi
je r-xdata
pop esi
cmp [ esi ] 0x2
jne r-xdata
mov eax [ rw-data ]
push rw-data
lea edi [ eax + 0xcc ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
push eax
push rw-data
push ebx
call [ edi ]
add esp 0xc
cmp [ esi ] 0x3
jne r-xdata
mov eax [ rw-data ]
push rw-data
lea edi [ eax + 0xcc ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
push eax
push rw-data
push ebx
call [ edi ]
add esp 0xc
mov edi [ ebp + 0x8 ]
test edi edi
jbe r-xdata
mov eax [ rw-data ]
push rw-data
lea edi [ eax + 0xcc ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
push eax
push rw-data
push ebx
call [ edi ]
add esp 0xc
push [ esi + 0xc ]
mov eax [ rw-data ]
push ebx
call [ eax + 0x2c ]
cmp [ esi ] 0x2
jne r-xdata
mov eax [ rw-data ]
push rw-data
push ebx
call [ eax + 0x2c ]
dec edi
jne r-xdata
xor edi edi
and [ ebp - 0x118 ] 0x0
push 0x3f
pop ecx
xor eax eax
lea edi [ ebp - 0x117 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea ecx [ ebp - 0x118 ]
push eax
push eax
push 0x100
push ecx
mov ecx [ esi + 0xc ]
push 0xffffffff
add ecx 0x4
push ecx
push eax
push eax
mov eax [ rw-data ]
call [ eax + 0x84 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x118 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xf8 ]
test eax eax
je r-xdata
movsx ecx [ eax + 0xa ]
mov eax [ eax + 0xc ]
push ecx
push [ eax ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xcc ]
mov eax [ rw-data ]
add esp 0xc
push [ ebp - 0x18 ]
lea edi [ eax + 0xf0 ]
call [ eax + 0xf4 ]
push eax
mov eax [ rw-data ]
push rw-data
push ebx
call [ eax + 0x98 ]
mov ecx 0x400
sub ecx eax
mov eax [ rw-data ]
push ecx
push ebx
call [ eax + 0x98 ]
lea eax [ ebx + eax * 2 ]
push eax
call [ edi ]
add esp 0x10
sub_10005acd
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
xor eax eax
lea edi [ ebp - 0x28 ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
push 0x208
push 0x8
push [ rw-data ]
call [ rw-data ]
mov esi eax
mov [ ebp - 0x34 ] esi
cmp esi ebx
jne r-xdata
push esi
push 0x104
mov eax [ rw-data ]
call [ eax + 0x148 ]
push esi
mov eax [ rw-data ]
call [ eax + 0x98 ]
mov ebx eax
mov edi rw-data
push edi
mov eax [ rw-data ]
call [ eax + 0x10 ]
add ebx eax
lea ebx [ ebx + ebx + 0x2 ]
mov [ ebp - 0x1c ] ebx
push ebx
push 0x8
push [ rw-data ]
call [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov esi 0xeeeeeef2
mov [ ebp - 0x20 ] esi
push edi
push esi
push rw-data
push ebx
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x14
push esi
mov eax [ rw-data ]
call [ eax + 0x98 ]
mov ebx eax
mov edi rw-data
push edi
mov eax [ rw-data ]
call [ eax + 0x10 ]
add ebx eax
lea ebx [ ebx + ebx + 0x2 ]
mov [ ebp - 0x1c ] ebx
push ebx
push 0x8
push [ rw-data ]
call [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push edi
push esi
push rw-data
push ebx
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x14
push 0x104
push esi
push rw-data
push [ rw-data ]
mov edi [ GetProcAddress@IAT ]
call edi
call eax
push rw-data
push esi
mov eax [ rw-data ]
call [ eax + 0x2c ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push esi
mov eax [ rw-data ]
call [ eax + 0x20 ]
mov ebx eax
mov [ ebp - 0x38 ] ebx
push esi
xor esi esi
push esi
push [ rw-data ]
call [ rw-data ]
cmp ebx 0xffffffff
jne r-xdata
push esi
push esi
push rw-data
push ebx
mov eax [ rw-data ]
call [ eax + 0x5c ]
push ebx
mov eax [ rw-data ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x48 ]
push rw-data
lea eax [ ebp - 0x48 ]
push eax
push rw-data
push [ rw-data ]
call edi
call eax
jmp r-xdata
mov [ rw-data ] edi
xor ebx ebx
lea eax [ ebp - 0x2c ]
push eax
call sub_10002f13
lea eax [ ebp - 0x2c ]
push eax
push [ rw-data ]
push [ rw-data ]
dec edi
push edi
call sub_10002e88
mov [ ebp - 0x20 ] eax
cmp eax esi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ rw-data ]
push [ rw-data ]
mov edi 0x80000002
push edi
call sub_10002e88
mov [ ebp - 0x20 ] eax
cmp eax esi
je r-xdata
xor esi esi
jmp r-xdata
push ebx
lea eax [ ebp - 0x2c ]
push eax
call sub_10003134
movzx esi al
mov [ ebp - 0x1c ] esi
lea eax [ esi + 0x1 ]
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
lea edi [ ebx * 4 + rw-data ]
mov [ edi ] eax
test eax eax
je r-xdata
mov esi eax
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push eax
push ebx
push [ rw-data ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100030d2
test eax eax
je r-xdata
inc ebx
jmp r-xdata
mov eax [ edi ]
and [ esi + eax ] 0x0
mov [ ebp - 0x30 ] ebx
cmp ebx 0x9
jge r-xdata
sub_10005d7f
push esi
mov esi rw-data
push [ esi ]
call sub_1000575f
add esi 0x4
cmp esi rw-data
jl r-xdata
push [ rw-data ]
call sub_1000575f
push [ rw-data ]
call sub_1000575f
pop esi
retn
sub_10005daf
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
xor eax eax
lea edi [ ebp - 0x24 ]
stosd [ edi ]
stosd [ edi ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_10002e88
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_10003134
movzx esi al
mov [ ebp - 0x2c ] esi
mov edi [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push ebx
push [ rw-data ]
lea eax [ ebp - 0x28 ]
push eax
call sub_10002f44
mov [ ebp - 0x1c ] eax
test eax eax
jne r-xdata
mov esi eax
jmp r-xdata
push rw-data
mov eax [ rw-data ]
call [ eax + 0x70 ]
cmp esi edi
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax esi
jmp r-xdata
lea esi [ ebx * 4 + rw-data ]
push edi
push [ ebp + 0xc ]
push [ esi ]
mov eax [ rw-data ]
call [ eax + 0xcc ]
add esp 0xc
mov eax [ esi ]
and [ eax + edi ] 0x0
push rw-data
mov eax [ rw-data ]
call [ eax + 0x6c ]
or [ ebp - 0x4 ] 0xffffffff
call sub_10005ecc
xor eax eax
lea esi [ ebx * 4 + rw-data ]
lea eax [ edi + 0x1 ]
push eax
push [ esi ]
push 0x8
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x30 ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0xc
mov esi 0xeeeeeef2
sub_10005ed6
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0x1c ] 0x0
push esi
push edi
push 0x6
pop ecx
xor eax eax
push [ ebp + 0x8 ]
lea edi [ ebp - 0x18 ]
[ edi ]
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
jmp r-xdata
push rw-data
push esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x8
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] sub_10002ce5
mov [ ebp - 0xc ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x18 ] sub_100038ae
mov [ ebp - 0x14 ] sub_100073ae
mov [ ebp - 0x10 ] sub_10002d93
mov [ ebp - 0x4 ] sub_100056b3
call eax
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
push esi
call [ eax + 0x90 ]
mov eax [ ebp + 0xc ]
mov [ eax * 4 + rw-data ] esi
xor eax eax
mov eax [ rw-data ]
push esi
call [ eax + 0x90 ]
mov eax edi
jmp r-xdata
sub_10005f84
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
xor eax eax
lea edi [ ebp - 0x24 ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0xc ]
cmp esi 0x4
ja r-xdata
mov esi 0xeeeeeef6
jmp r-xdata
cmp [ rw-data ] 0x5
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax esi
jmp r-xdata
cmp [ esi * 4 + rw-data ] ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
push esi
push [ ebp + 0x8 ]
call sub_10005ed6
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
mov esi 0xeeeeeef7
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_10002e88
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
mov esi eax
inc [ rw-data ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x10 ]
push eax
push [ ebp + 0x8 ]
add esi 0x9
push esi
push [ rw-data ]
lea eax [ ebp - 0x28 ]
push eax
call sub_10002f44
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_10006088
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax [ ebp - 0x1c ]
sub_10006092
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
xor eax eax
lea edi [ ebp - 0x28 ]
stosd [ edi ]
stosd [ edi ]
mov [ ebp - 0x34 ] ebx
cmp [ ebp + 0xc ] ebx
mov esi [ ebp + 0x8 ]
je r-xdata
mov edi esi
cmp esi 0x4
ja r-xdata
push edi
mov eax [ rw-data ]
call [ eax + 0x90 ]
cmp [ ebp + 0xc ] ebx
je r-xdata
push [ ebp + 0xc ]
call eax
mov eax 0xeeeeeef8
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] ebx
mov [ esi * 4 + rw-data ] ebx
lea eax [ ebp - 0x2c ]
push eax
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_10002e88
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi * 4 + rw-data ]
cmp eax ebx
je r-xdata
mov esi eax
lea edi [ esi + 0x9 ]
push edi
lea eax [ ebp - 0x2c ]
push eax
call sub_10003134
movzx esi al
mov [ ebp - 0x38 ] esi
cmp esi ebx
jbe r-xdata
mov edi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_10006222
jmp r-xdata
lea eax [ esi + 0x1 ]
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov [ ebp - 0x34 ] eax
cmp eax ebx
jne r-xdata
push rw-data
push edi
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
push eax
push edi
push [ rw-data ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100030d2
test eax eax
je r-xdata
mov esi 0xeeeeeef2
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ esi + eax ] bl
push edi
push [ rw-data ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003146
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax esi
jmp r-xdata
dec [ rw-data ]
mov [ ebp - 0x78 ] bx
push 0xf
pop ecx
xor eax eax
lea edi [ ebp - 0x76 ]
[ edi ]
stosw [ edi ]
push 0x20
lea eax [ ebp - 0x78 ]
push eax
push 0xffffffff
push [ ebp - 0x34 ]
push ebx
push ebx
mov eax [ rw-data ]
call [ eax + 0x80 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
lea eax [ ebp - 0x78 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x28 ]
sub_10006247
push edi
xor edi edi
cmp [ rw-data ] edi
jbe r-xdata
pop edi
retn
push esi
mov esi rw-data
inc edi
add esi 0x4
cmp edi [ rw-data ]
jb r-xdata
push 0x0
push eax
call sub_10006092
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
sub_10006275
push ebp
mov ebp esp
sub esp 0x50
and [ ebp - 0x10 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0xc ]
and [ ebp - 0x50 ] 0x0
push 0xf
stosd [ edi ]
stosd [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x4f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x10 ]
push eax
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_10002e88
test eax eax
jne r-xdata
pop edi
leave
retn
push ebx
push esi
xor edi edi
mov ebx rw-data
add ebx 0x4
inc edi
cmp ebx rw-data
jl r-xdata
lea eax [ ebp - 0x50 ]
inc [ rw-data ]
push eax
push esi
push [ rw-data ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100030d2
test eax eax
je r-xdata
and [ ebx ] 0x0
lea esi [ edi + 0x9 ]
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10003134
test al al
mov [ ebp - 0x1 ] al
jbe r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_10002f13
pop esi
pop ebx
movzx eax [ ebp - 0x1 ]
push edi
and [ ebp + eax - 0x50 ] 0x0
lea eax [ ebp - 0x50 ]
push eax
call sub_10005ed6
sub_10006322
push ebp
mov ebp esp
sub esp 0xa34
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x8a
xor eax eax
lea edi [ ebp - 0x230 ]
mov [ ebp - 0x234 ] ebx
[ edi ]
mov ecx 0x1ff
lea edi [ ebp - 0xa32 ]
mov esi [ GetProcAddress@IAT ]
mov [ ebp - 0xa34 ] bx
[ edi ]
push rw-data
push [ rw-data ]
stosw [ edi ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
jmp r-xdata
push ebx
push 0x2
push rw-data
push [ rw-data ]
call esi
call eax
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x234 ] 0x22c
push ecx
push eax
push rw-data
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push [ ebp - 0x4 ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
xor eax eax
mov esi 0x400
lea edi [ eax + 0xf0 ]
call [ eax + 0x24 ]
push eax
push rw-data
lea eax [ ebp - 0xa34 ]
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
lea eax [ ebp + eax * 2 - 0xa34 ]
push eax
call [ edi ]
add esp 0x10
lea ecx [ ebp - 0xa34 ]
lea edi [ eax + 0x144 ]
push ecx
call [ eax + 0x98 ]
mov ecx esi
sub ecx eax
lea eax [ ebp - 0xa34 ]
push ecx
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
lea eax [ ebp + eax * 2 - 0xa34 ]
push eax
push 0x0
push ebx
call [ edi ]
mov eax [ rw-data ]
push ebx
call [ eax + 0x14 ]
jmp r-xdata
push [ ebp - 0x22c ]
mov eax [ rw-data ]
push 0x1
push 0x410
call [ eax + 0x114 ]
push [ ebp - 0x22c ]
mov ebx eax
lea eax [ ebp - 0x210 ]
push eax
push rw-data
lea eax [ ebp - 0xa34 ]
push esi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
mov eax [ rw-data ]
add esp 0x14
test ebx ebx
je r-xdata
lea eax [ ebp - 0xa34 ]
push rw-data
push eax
mov eax [ rw-data ]
call [ eax + 0x2c ]
lea eax [ ebp - 0xa34 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0xa34 ]
push eax
push [ ebp + 0x8 ]
call sub_100056b3
lea eax [ ebp - 0x234 ]
push eax
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
test eax eax
jne r-xdata
sub_100064e7
push ebp
mov ebp esp
sub esp 0x54
push esi
push edi
push 0x10
xor eax eax
pop ecx
lea edi [ ebp - 0x50 ]
[ edi ]
xor esi esi
lea edi [ ebp - 0xc ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x54 ] 0x44
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x80
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push 0x8000000
push esi
push esi
push esi
push [ ebp + 0x8 ]
push esi
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
test eax eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
pop edi
pop esi
leave
retn 0x8
sub_1000655d
push [ esp + 0x4 ]
mov eax [ rw-data ]
push 0x0
push 0x1
call [ eax + 0x114 ]
test eax eax
jne r-xdata
push 0x0
push eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
test eax eax
jne r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
jmp r-xdata
retn 0x4
sub_1000659b
push ebp
mov ebp esp
sub esp 0x60c
push ebx
push esi
push edi
xor edx edx
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x60a ]
mov [ ebp - 0x60c ] dx
[ edi ]
stosw [ edi ]
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x20a ]
mov [ ebp - 0x20c ] dx
[ edi ]
stosw [ edi ]
mov esi 0x200
mov ebx [ GetProcAddress@IAT ]
lea eax [ ebp - 0x60c ]
push esi
push eax
push rw-data
push rw-data
mov [ ebp - 0x4 ] edx
push [ rw-data ]
call ebx
call eax
test eax eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edi eax
lea eax [ ebp - 0x20c ]
push eax
mov eax [ rw-data ]
push 0x104
call [ eax + 0x148 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push rw-data
push eax
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov eax [ rw-data ]
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ ebp - 0x60c ]
push [ ebp + 0x8 ]
lea edi [ eax + 0xf0 ]
push rw-data
push esi
push ecx
call [ eax + 0x98 ]
lea eax [ ebp + eax * 2 - 0x60c ]
push eax
call [ edi ]
add esp 0x14
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x60c ]
push eax
call sub_100064e7
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ rw-data ]
push [ rw-data ]
lea esi [ eax + 0x8 ]
call [ eax + 0xdc ]
push eax
push [ ebp - 0x4 ]
call [ esi ]
test eax eax
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
lea eax [ ebp - 0x20c ]
push 0x80000000
push eax
mov eax [ rw-data ]
call [ eax + 0x20 ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push edi
push [ ebp - 0x4 ]
push rw-data
push [ rw-data ]
call ebx
call eax
mov eax [ rw-data ]
push 0x0
push esi
call [ eax + 0x38 ]
test eax eax
jbe r-xdata
mov eax [ rw-data ]
push esi
call [ eax + 0x14 ]
test edi edi
jne r-xdata
push eax
push esi
push [ ebp + 0xc ]
call sub_1000577b
mov edi eax
lea eax [ ebp - 0x20c ]
push eax
mov eax [ rw-data ]
call [ eax + 0x28 ]
jmp r-xdata
sub_10006732
push ebp
mov ebp esp
sub esp 0x850
push ebx
push esi
push edi
xor esi esi
mov ecx 0x1ff
xor eax eax
lea edi [ ebp - 0x84e ]
mov [ ebp - 0x850 ] si
[ edi ]
stosw [ edi ]
mov edi [ LoadLibraryA@IAT ]
push rw-data
call edi
cmp eax esi
mov [ ebp - 0x24 ] eax
je r-xdata
mov eax [ rw-data ]
call [ eax + 0x24 ]
jmp r-xdata
push rw-data
call edi
cmp eax esi
mov [ ebp - 0x2c ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GetProcAddress@IAT ]
push esi
push rw-data
push eax
call ebx
call eax
push rw-data
push [ ebp - 0x24 ]
call ebx
mov edi eax
cmp edi esi
jne r-xdata
push rw-data
push [ ebp - 0x2c ]
call ebx
cmp eax esi
mov [ ebp - 0x10 ] eax
jne r-xdata
push [ ebp - 0x24 ]
mov eax [ rw-data ]
call [ eax + 0x90 ]
jmp r-xdata
push esi
push esi
lea eax [ ebp - 0xc ]
push esi
push eax
call edi
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x14 ]
push edx
push esi
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x38 ]
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x40 ]
push esi
push edx
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push rw-data
push [ ebp - 0x2c ]
call ebx
call eax
push [ ebp - 0x24 ]
mov eax [ rw-data ]
call [ eax + 0x90 ]
xor eax eax
mov edi 0x400
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x40 ]
push esi
push edx
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
push esi
push edx
mov ecx [ eax ]
lea edx [ ebp - 0x50 ]
push edx
lea edx [ ebp - 0x40 ]
push edx
push esi
push eax
call [ ecx + 0x28 ]
mov eax [ ebp - 0x8 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x850 ]
push rw-data
push edi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x850 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call sub_100056b3
mov eax [ ebp - 0x8 ]
push rw-data
push [ eax + 0x4 ]
mov eax [ rw-data ]
call [ eax + 0x94 ]
push [ ebp - 0x8 ]
mov [ ebp - 0x30 ] eax
call [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x20 ]
push edx
lea edx [ ebp - 0x50 ]
mov ecx [ eax ]
push esi
push edx
lea edx [ ebp - 0x40 ]
push edx
push esi
push eax
call [ ecx + 0x54 ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
push esi
push edx
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x8 ] esi
mov ecx [ eax ]
push edx
push esi
push eax
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x850 ]
push rw-data
push edi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x850 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call sub_100056b3
push [ ebp - 0x8 ]
call [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x18 ]
push edx
lea edx [ ebp - 0x40 ]
mov ecx [ eax ]
push esi
push edx
push esi
push eax
call [ ecx + 0x3c ]
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x30 ] esi
jne r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x50 ]
push esi
push edx
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x850 ]
push rw-data
push edi
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x850 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call sub_100056b3
push esi
lea edx [ ebp - 0x1c ]
push esi
push edx
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x28 ]
push edx
lea edx [ ebp - 0x50 ]
push [ ebp - 0x4 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x1c ] esi
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x40 ]
push edx
push esi
push eax
call [ ecx + 0x44 ]
push 0x12
push rw-data
push [ ebp + 0x8 ]
call sub_100056b3
push [ ebp - 0x28 ]
push [ ebp - 0x1c ]
push [ ebp + 0x8 ]
call sub_100056b3
push 0x2
push rw-data
push [ ebp + 0x8 ]
call sub_100056b3
push [ ebp - 0x1c ]
call [ ebp - 0x10 ]
mov eax [ rw-data ]
push rw-data
push [ ebp - 0x4 ]
call [ eax + 0xe8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x4 ]
push esi
push edx
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
jmp r-xdata
mov eax [ rw-data ]
push rw-data
push [ ebp - 0x4 ]
call [ eax + 0xe8 ]
test eax eax
jne r-xdata
sub_10006a78
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
push rw-data
push esi
call [ eax + 0x94 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push rw-data
push esi
call [ eax + 0x94 ]
test eax eax
jne r-xdata
mov eax 0x80000002
jmp r-xdata
mov eax [ rw-data ]
push rw-data
push esi
call [ eax + 0x94 ]
test eax eax
jne r-xdata
mov eax 0x80000001
jmp r-xdata
pop esi
retn 0x4
mov eax [ rw-data ]
push rw-data
push esi
call [ eax + 0x94 ]
test eax eax
jne r-xdata
mov eax 0x80000005
jmp r-xdata
mov eax [ rw-data ]
push rw-data
push esi
call [ eax + 0x94 ]
neg eax
sbb eax eax
and eax 0x7ffffffd
add eax 0x80000003
mov eax 0x80000000
jmp r-xdata
sub_10006b10
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x850
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x850 ] esi
mov [ ebp - 0x858 ] esi
mov [ ebp - 0x840 ] esi
mov [ ebp - 0x84c ] esi
mov [ ebp - 0x83c ] esi
mov [ ebp - 0x844 ] esi
mov [ ebp - 0x830 ] esi
mov [ ebp - 0x818 ] si
mov ecx 0x1ff
xor eax eax
lea edi [ ebp - 0x816 ]
[ edi ]
stosw [ edi ]
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x850 ]
push eax
push 0x20019
push esi
mov edi [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
mov eax [ rw-data ]
call [ eax + 0xa4 ]
mov [ ebp - 0x828 ] eax
cmp [ ebp - 0x850 ] esi
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xb4 ] esi
jne r-xdata
push edi
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
push edi
push [ ebp + 0x8 ]
call sub_100056b3
mov esi [ ebp - 0x828 ]
cmp [ eax + 0xb0 ] esi
jne r-xdata
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0xb4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xb4 ] esi
jne r-xdata
lea ecx [ ebp - 0x824 ]
push ecx
push esi
lea ecx [ ebp - 0x84c ]
push ecx
lea ecx [ ebp - 0x840 ]
push ecx
lea ecx [ ebp - 0x858 ]
push ecx
push esi
lea ecx [ ebp - 0x830 ]
push ecx
lea ecx [ ebp - 0x844 ]
push ecx
push esi
push esi
push esi
push [ ebp - 0x850 ]
call [ eax + 0xb4 ]
mov [ ebp - 0x828 ] eax
cmp eax esi
je r-xdata
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0xb0 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xb0 ] esi
je r-xdata
call [ eax + 0x24 ]
jmp r-xdata
mov eax [ ebp - 0x840 ]
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov [ ebp - 0x838 ] eax
cmp eax esi
je r-xdata
mov esi eax
jmp r-xdata
mov esi 0xeeeeeef2
jmp r-xdata
push [ ebp - 0x84c ]
push 0x8
push [ rw-data ]
call [ rw-data ]
mov [ ebp - 0x834 ] eax
cmp eax esi
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
push edi
push rw-data
mov edi 0x400
push edi
lea eax [ ebp - 0x818 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x818 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0x818 ]
push eax
mov ebx [ ebp + 0x8 ]
push ebx
call sub_100056b3
mov eax [ ebp - 0x840 ]
inc eax
mov [ ebp - 0x81c ] eax
mov eax [ ebp - 0x84c ]
mov [ ebp - 0x82c ] eax
mov [ ebp - 0x85c ] esi
push [ ebp - 0x838 ]
push esi
push [ rw-data ]
call [ rw-data ]
jmp r-xdata
push [ ebp - 0x838 ]
push esi
push [ rw-data ]
call [ rw-data ]
push [ ebp - 0x834 ]
push esi
push [ rw-data ]
call [ rw-data ]
mov eax [ ebp - 0x830 ]
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov ebx eax
mov [ ebp - 0x848 ] ebx
cmp ebx esi
jne r-xdata
mov ecx [ ebp - 0x840 ]
inc ecx
mov [ ebp - 0x81c ] ecx
mov ecx [ ebp - 0x84c ]
inc ecx
mov [ ebp - 0x82c ] ecx
lea ecx [ ebp - 0x82c ]
push ecx
push [ ebp - 0x834 ]
lea ecx [ ebp - 0x83c ]
push ecx
push esi
lea ecx [ ebp - 0x81c ]
push ecx
push [ ebp - 0x838 ]
push eax
push [ ebp - 0x850 ]
mov eax [ rw-data ]
call [ eax + 0xb0 ]
mov [ ebp - 0x828 ] eax
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xac ] esi
jne r-xdata
inc [ ebp - 0x85c ]
jmp r-xdata
push [ ebp - 0x838 ]
push rw-data
push edi
lea eax [ ebp - 0x818 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x818 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0x818 ]
push eax
push ebx
call sub_100056b3
mov eax [ ebp - 0x83c ]
cmp eax esi
jbe r-xdata
mov [ ebp - 0x860 ] esi
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0xac ] eax
mov eax [ ebp - 0x85c ]
cmp eax [ ebp - 0x858 ]
jae r-xdata
cmp eax 0x2
jbe r-xdata
push ebx
push esi
push [ rw-data ]
call [ rw-data ]
jmp r-xdata
mov ecx [ ebp - 0x830 ]
inc ecx
mov [ ebp - 0x81c ] ecx
lea ecx [ ebp - 0x824 ]
push ecx
push esi
push esi
push esi
lea ecx [ ebp - 0x81c ]
push ecx
push ebx
push eax
push [ ebp - 0x850 ]
mov eax [ rw-data ]
call [ eax + 0xac ]
neg eax
sbb eax eax
inc eax
mov [ ebp - 0x828 ] eax
je r-xdata
push [ ebp - 0x834 ]
push rw-data
cmp eax 0x3
je r-xdata
inc [ ebp - 0x860 ]
jmp r-xdata
cmp [ ebp + 0x14 ] esi
je r-xdata
push 0x1a
push rw-data
push ebx
call sub_100056b3
push [ ebp - 0x82c ]
push [ ebp - 0x834 ]
push ebx
call sub_100056b3
push 0x2
push rw-data
jmp r-xdata
cmp eax 0x4
je r-xdata
mov eax [ ebp - 0x860 ]
cmp eax [ ebp - 0x844 ]
jae r-xdata
push ebx
push rw-data
push edi
lea eax [ ebp - 0x818 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x818 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0x818 ]
push eax
push [ ebp + 0x8 ]
call sub_100056b3
push [ ebp + 0x14 ]
push ebx
push [ ebp - 0x850 ]
push [ ebp + 0x8 ]
call sub_10006b10
jmp r-xdata
push ebx
call sub_100056b3
mov eax [ ebp - 0x834 ]
push [ eax ]
push rw-data
jmp r-xdata
cmp eax 0x7
je r-xdata
push edi
lea eax [ ebp - 0x818 ]
push eax
mov eax [ rw-data ]
call [ eax + 0xf0 ]
add esp 0x10
lea eax [ ebp - 0x818 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x98 ]
shl eax 0x1
push eax
lea eax [ ebp - 0x818 ]
push eax
jmp r-xdata
sub_10007025
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x20 ]
push eax
push 0x20006
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0xa4 ]
mov [ ebp - 0x1c ] eax
cmp eax edi
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ rw-data ]
lea esi [ eax + 0x9c ]
push [ ebp + 0x14 ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp + 0x14 ]
push 0x1
push edi
push [ ebp + 0x10 ]
push [ ebp - 0x20 ]
call [ esi ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
or [ ebp - 0x4 ] 0xffffffff
call sub_100070d0
xor eax eax
sub_100070e4
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x20 ]
push eax
push 0x2
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0xa4 ]
mov [ ebp - 0x1c ] eax
cmp eax esi
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x20 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x1c ] eax
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
or [ ebp - 0x4 ] 0xffffffff
call sub_1000717c
xor eax eax
sub_10007191
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x24 ] esi
push 0x2710
mov eax [ rw-data ]
call [ eax + 0x68 ]
xor eax eax
lea edi [ ebp - 0x1c ]
stosd [ edi ]
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] esi
mov edi rw-data
push edi
mov eax [ rw-data ]
call [ eax + 0x70 ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0xdc ]
mov [ ebp - 0x2c ] eax
push edi
mov eax [ rw-data ]
call [ eax + 0x6c ]
push [ ebp - 0x2c ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x8 ]
test eax eax
jne r-xdata
push 0xffffffff
push esi
lea eax [ ebp - 0x20 ]
push eax
push 0x2
mov eax [ rw-data ]
call [ eax + 0x13c ]
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] si
je r-xdata
jmp r-xdata
mov [ ebp - 0x24 ] esi
lea eax [ ebp - 0x24 ]
push eax
push [ rw-data ]
push 0x94
push rw-data
call sub_1000315e
mov [ ebp - 0x28 ] eax
cmp eax esi
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
push 0x1
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
push [ ebp - 0x24 ]
call sub_1000575f
mov [ ebp - 0x24 ] esi
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x74 ]
push eax
push [ ebp - 0x24 ]
call sub_1000758d
test eax eax
je r-xdata
mov [ rw-data ] si
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x28 ]
mov [ ebp - 0x28 ] esi
sub_100072d0
mov eax [ rw-data ]
xor esi esi
cmp eax esi
je r-xdata
push [ ebp - 0x24 ]
call sub_1000575f
mov [ ebp - 0x24 ] esi
retn
push eax
mov eax [ rw-data ]
call [ eax + 0x74 ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
mov [ rw-data ] esi
sub_10007304
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
xor esi esi
push esi
push esi
push esi
mov [ ebp - 0x4 ] esi
call [ eax + 0x7c ]
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
push edi
mov eax [ rw-data ]
push esi
push 0x6
push 0x3
push esi
push esi
push 0x80000000
push [ rw-data ]
call [ eax + 0x20 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
push esi
push esi
push sub_10007191
push esi
push esi
call [ eax + 0x78 ]
pop edi
lea eax [ ebp - 0x4 ]
push esi
push eax
mov eax [ rw-data ]
push 0x2
push rw-data
push edi
call [ eax + 0x34 ]
mov eax [ rw-data ]
push esi
push edi
call [ eax + 0x38 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push edi
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0xe4e1c0
jbe r-xdata
pop esi
leave
retn
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x28 ]
mov [ rw-data ] si
sub_100073ae
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x4c ] 0xb2745daf
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ rw-data ]
call [ eax + 0x48 ]
xor eax eax
lea edi [ ebp - 0x1c ]
stosd [ edi ]
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] esi
or ebx 0xffffffff
push ebx
push esi
lea eax [ ebp - 0x20 ]
push eax
push 0x2
mov eax [ rw-data ]
call [ eax + 0x13c ]
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
xor eax eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
push esi
push 0x6
push 0x4
push esi
push esi
push 0xc0000000
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x20 ]
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
push [ ebp + 0xc ]
call sub_1000539e
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov edi eax
mov [ ebp - 0x2c ] edi
cmp edi esi
je r-xdata
inc [ rw-data ]
push esi
push esi
push esi
push edi
mov eax [ rw-data ]
call [ eax + 0x60 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x2
push rw-data
push edi
mov eax [ rw-data ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100053bb
mov [ ebp - 0x50 ] eax
cmp eax [ ebp + 0xc ]
jbe r-xdata
push 0x2
push esi
push esi
push edi
mov eax [ rw-data ]
call [ eax + 0x60 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x20
lea eax [ ebp - 0x4c ]
push eax
push edi
mov eax [ rw-data ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] eax
push edi
push esi
push [ rw-data ]
call [ rw-data ]
mov [ ebp - 0x2c ] esi
jmp r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax rw-data
push eax
push esi
push eax
push edi
mov eax [ rw-data ]
call [ eax + 0x1c ]
push edi
mov eax [ rw-data ]
call [ eax + 0x14 ]
push 0x1
pop esi
jmp r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
mov eax [ rw-data ]
call [ eax + 0x18 ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_1000758d
push esi
push edi
push 0x10
push 0x8
push [ rw-data ]
call [ rw-data ]
push [ rw-data ]
mov esi eax
mov ecx esi
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_10004618
test eax eax
je r-xdata
xor edi edi
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
call sub_100046d4
mov edi eax
jmp r-xdata
mov ecx esi
call sub_100046aa
push esi
call sub_1000575f
mov eax edi
pop edi
pop esi
retn 0x8
sub_100075ed
mov eax [ esp + 0x4 ]
push esi
xor esi esi
dec eax
je r-xdata
push 0x5dc
push esi
push 0x3
call sub_1000763b
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x88 ]
push esi
push esi
push 0x1
sub eax 0x3
je r-xdata
push esi
push esi
push [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
call sub_1000763b
push 0x78
pop esi
jmp r-xdata
mov eax esi
pop esi
retn 0x10
sub_1000763b
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ esp + 0xc ]
cmp eax 0x4
mov [ rw-data ] eax
mov [ rw-data ] ecx
je r-xdata
and [ rw-data ] 0x0
cmp eax 0x1
je r-xdata
inc [ rw-data ]
jmp r-xdata
push rw-data
push [ rw-data ]
call [ SetServiceStatus@IAT ]
retn 0xc
sub_100076a0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_100076d0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_10007704
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10007704
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10001db9
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10007704
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10007704
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_10001cd4
push [ rw-data ]
call sub_1000575f
cmp [ rw-data ] 0x0
je r-xdata
retn
push [ rw-data ]
call [ rw-data ]
Init1
push 0x2710
call [ Sleep@IAT ]
mov eax [ rw-data ]
push 0xffffffff
push [ rw-data ]
call [ eax + 0x8 ]
xor eax eax
retn
sub_1000218c
mov eax [ esp + 0x8 ]
push 0x1
push [ eax ]
call sub_10006092
retn 0xc
sub_10002290
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_10003d3c
retn 0xc
sub_100022a6
push 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_10003d3c
retn 0xc
sub_100022bc
push [ esp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x98 ]
lea eax [ eax + eax + 0x2 ]
cmp [ esp + 0x4 ] eax
jae r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_100038ae
mov eax 0xeeeeeef4
jmp r-xdata
retn 0xc
sub_1000254b
push ebp
mov ebp esp
push ebx
push esi
push edi
jmp [ ebp + 0x8 ]
sub_10002844
push [ esp + 0xc ]
call sub_10006322
retn 0xc
sub_100028ef
push [ esp + 0x8 ]
mov eax [ rw-data ]
call [ eax + 0x14c ]
push eax
call sub_1000655d
retn 0xc
sub_10002907
push [ esp + 0xc ]
call sub_10003bd1
retn 0xc
sub_10002913
push [ esp + 0xc ]
push rw-data
call sub_1000659b
retn 0xc
sub_10002b58
push 0xd0
push 0x8
push [ rw-data ]
call [ rw-data ]
xor ecx ecx
mov [ rw-data ] eax
test eax eax
setne cl
mov eax ecx
retn
sub_10002b7a
push [ rw-data ]
push 0x0
push [ rw-data ]
call [ rw-data ]
retn
sub_10003134
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax + 0x4 ]
mov al [ eax + ecx + 0x6 ]
retn 0x8
sub_10003146
push 0x0
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_10002f44
retn 0xc
sub_10003d33
push [ ebp - 0x3c ]
call sub_1000575f
retn
sub_10004109
cmp [ ebp - 0x20 ] 0xffffffff
je r-xdata
push [ ebp - 0x44 ]
call sub_1000575f
push [ ebp - 0x28 ]
call sub_1000575f
retn
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
sub_100041e0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
mov eax [ rw-data ]
call [ eax + 0x74 ]
sub_100042d1
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
mov eax [ rw-data ]
call [ eax + 0x74 ]
push [ rw-data ]
mov eax [ rw-data ]
call [ eax + 0x14 ]
and [ rw-data ] 0x0
sub_10004e32
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
je r-xdata
retn
push ecx
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
and [ rw-data ] 0x0
sub_1000573d
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push [ esp + 0x4 ]
mov eax [ rw-data ]
push 0x0
push [ rw-data ]
call [ eax + 0x44 ]
xor eax eax
jmp r-xdata
retn 0x4
sub_10005d6a
lea eax [ ebp - 0x2c ]
push eax
call sub_10002f13
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
call sub_10005d7f
sub_10005ecc
lea eax [ ebp - 0x28 ]
push eax
call sub_10002f13
retn
sub_10006088
lea eax [ ebp - 0x28 ]
push eax
call sub_10002f13
retn
sub_10006222
lea eax [ ebp - 0x2c ]
push eax
call sub_10002f13
push [ ebp - 0x34 ]
call sub_1000575f
retn
sub_1000700a
cmp [ ebp - 0x850 ] 0x0
je r-xdata
retn
push [ ebp - 0x850 ]
mov eax [ rw-data ]
call [ eax + 0xa8 ]
sub_100070d0
cmp [ ebp - 0x20 ] edi
je r-xdata
retn
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0xa8 ]
sub_1000717c
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
push [ ebp - 0x20 ]
mov eax [ rw-data ]
call [ eax + 0xa8 ]
sub_10007572
push [ ebp - 0x2c ]
call sub_1000575f
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
mov eax [ rw-data ]
call [ eax + 0x74 ]
_except_handler3
jmp [ _except_handler3@IAT ]
_local_unwind2
jmp [ _local_unwind2@IAT ]
_initterm
jmp [ _initterm@IAT ]
